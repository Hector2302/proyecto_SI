

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Aug 07 22:09:04 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK3,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    59                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=3
    60                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=3
    61                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=3
    62                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Version 2.20
    75                           ; Generated 12/02/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4550 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000FE0                     bsr             equ	4064
   109   000FE9                     fsr0            equ	4073
   110   000FEA                     fsr0h           equ	4074
   111   000FE9                     fsr0l           equ	4073
   112   000FE1                     fsr1            equ	4065
   113   000FE2                     fsr1h           equ	4066
   114   000FE1                     fsr1l           equ	4065
   115   000FD9                     fsr2            equ	4057
   116   000FDA                     fsr2h           equ	4058
   117   000FD9                     fsr2l           equ	4057
   118   000FEF                     indf0           equ	4079
   119   000FE7                     indf1           equ	4071
   120   000FDF                     indf2           equ	4063
   121   000FF2                     intcon          equ	4082
   122   000000                     nvmcon          equ	0
   123   000FF9                     pcl             equ	4089
   124   000FFA                     pclath          equ	4090
   125   000FFB                     pclatu          equ	4091
   126   000FEB                     plusw0          equ	4075
   127   000FE3                     plusw1          equ	4067
   128   000FDB                     plusw2          equ	4059
   129   000FED                     postdec0        equ	4077
   130   000FE5                     postdec1        equ	4069
   131   000FDD                     postdec2        equ	4061
   132   000FEE                     postinc0        equ	4078
   133   000FE6                     postinc1        equ	4070
   134   000FDE                     postinc2        equ	4062
   135   000FEC                     preinc0         equ	4076
   136   000FE4                     preinc1         equ	4068
   137   000FDC                     preinc2         equ	4060
   138   000FF3                     prod            equ	4083
   139   000FF4                     prodh           equ	4084
   140   000FF3                     prodl           equ	4083
   141   000FD8                     status          equ	4056
   142   000FF5                     tablat          equ	4085
   143   000FF6                     tblptr          equ	4086
   144   000FF7                     tblptrh         equ	4087
   145   000FF6                     tblptrl         equ	4086
   146   000FF8                     tblptru         equ	4088
   147   000FFD                     tosl            equ	4093
   148   000FE8                     wreg            equ	4072
   149   000F62                     SPPDATA         equ	3938	;# 
   150   000F63                     SPPCFG          equ	3939	;# 
   151   000F64                     SPPEPS          equ	3940	;# 
   152   000F65                     SPPCON          equ	3941	;# 
   153   000F66                     UFRM            equ	3942	;# 
   154   000F66                     UFRML           equ	3942	;# 
   155   000F67                     UFRMH           equ	3943	;# 
   156   000F68                     UIR             equ	3944	;# 
   157   000F69                     UIE             equ	3945	;# 
   158   000F6A                     UEIR            equ	3946	;# 
   159   000F6B                     UEIE            equ	3947	;# 
   160   000F6C                     USTAT           equ	3948	;# 
   161   000F6D                     UCON            equ	3949	;# 
   162   000F6E                     UADDR           equ	3950	;# 
   163   000F6F                     UCFG            equ	3951	;# 
   164   000F70                     UEP0            equ	3952	;# 
   165   000F71                     UEP1            equ	3953	;# 
   166   000F72                     UEP2            equ	3954	;# 
   167   000F73                     UEP3            equ	3955	;# 
   168   000F74                     UEP4            equ	3956	;# 
   169   000F75                     UEP5            equ	3957	;# 
   170   000F76                     UEP6            equ	3958	;# 
   171   000F77                     UEP7            equ	3959	;# 
   172   000F78                     UEP8            equ	3960	;# 
   173   000F79                     UEP9            equ	3961	;# 
   174   000F7A                     UEP10           equ	3962	;# 
   175   000F7B                     UEP11           equ	3963	;# 
   176   000F7C                     UEP12           equ	3964	;# 
   177   000F7D                     UEP13           equ	3965	;# 
   178   000F7E                     UEP14           equ	3966	;# 
   179   000F7F                     UEP15           equ	3967	;# 
   180   000F80                     PORTA           equ	3968	;# 
   181   000F81                     PORTB           equ	3969	;# 
   182   000F82                     PORTC           equ	3970	;# 
   183   000F83                     PORTD           equ	3971	;# 
   184   000F84                     PORTE           equ	3972	;# 
   185   000F89                     LATA            equ	3977	;# 
   186   000F8A                     LATB            equ	3978	;# 
   187   000F8B                     LATC            equ	3979	;# 
   188   000F8C                     LATD            equ	3980	;# 
   189   000F8D                     LATE            equ	3981	;# 
   190   000F92                     TRISA           equ	3986	;# 
   191   000F92                     DDRA            equ	3986	;# 
   192   000F93                     TRISB           equ	3987	;# 
   193   000F93                     DDRB            equ	3987	;# 
   194   000F94                     TRISC           equ	3988	;# 
   195   000F94                     DDRC            equ	3988	;# 
   196   000F95                     TRISD           equ	3989	;# 
   197   000F95                     DDRD            equ	3989	;# 
   198   000F96                     TRISE           equ	3990	;# 
   199   000F96                     DDRE            equ	3990	;# 
   200   000F9B                     OSCTUNE         equ	3995	;# 
   201   000F9D                     PIE1            equ	3997	;# 
   202   000F9E                     PIR1            equ	3998	;# 
   203   000F9F                     IPR1            equ	3999	;# 
   204   000FA0                     PIE2            equ	4000	;# 
   205   000FA1                     PIR2            equ	4001	;# 
   206   000FA2                     IPR2            equ	4002	;# 
   207   000FA6                     EECON1          equ	4006	;# 
   208   000FA7                     EECON2          equ	4007	;# 
   209   000FA8                     EEDATA          equ	4008	;# 
   210   000FA9                     EEADR           equ	4009	;# 
   211   000FAB                     RCSTA           equ	4011	;# 
   212   000FAB                     RCSTA1          equ	4011	;# 
   213   000FAC                     TXSTA           equ	4012	;# 
   214   000FAC                     TXSTA1          equ	4012	;# 
   215   000FAD                     TXREG           equ	4013	;# 
   216   000FAD                     TXREG1          equ	4013	;# 
   217   000FAE                     RCREG           equ	4014	;# 
   218   000FAE                     RCREG1          equ	4014	;# 
   219   000FAF                     SPBRG           equ	4015	;# 
   220   000FAF                     SPBRG1          equ	4015	;# 
   221   000FB0                     SPBRGH          equ	4016	;# 
   222   000FB1                     T3CON           equ	4017	;# 
   223   000FB2                     TMR3            equ	4018	;# 
   224   000FB2                     TMR3L           equ	4018	;# 
   225   000FB3                     TMR3H           equ	4019	;# 
   226   000FB4                     CMCON           equ	4020	;# 
   227   000FB5                     CVRCON          equ	4021	;# 
   228   000FB6                     ECCP1AS         equ	4022	;# 
   229   000FB6                     CCP1AS          equ	4022	;# 
   230   000FB7                     ECCP1DEL        equ	4023	;# 
   231   000FB7                     CCP1DEL         equ	4023	;# 
   232   000FB8                     BAUDCON         equ	4024	;# 
   233   000FB8                     BAUDCTL         equ	4024	;# 
   234   000FBA                     CCP2CON         equ	4026	;# 
   235   000FBB                     CCPR2           equ	4027	;# 
   236   000FBB                     CCPR2L          equ	4027	;# 
   237   000FBC                     CCPR2H          equ	4028	;# 
   238   000FBD                     CCP1CON         equ	4029	;# 
   239   000FBD                     ECCP1CON        equ	4029	;# 
   240   000FBE                     CCPR1           equ	4030	;# 
   241   000FBE                     CCPR1L          equ	4030	;# 
   242   000FBF                     CCPR1H          equ	4031	;# 
   243   000FC0                     ADCON2          equ	4032	;# 
   244   000FC1                     ADCON1          equ	4033	;# 
   245   000FC2                     ADCON0          equ	4034	;# 
   246   000FC3                     ADRES           equ	4035	;# 
   247   000FC3                     ADRESL          equ	4035	;# 
   248   000FC4                     ADRESH          equ	4036	;# 
   249   000FC5                     SSPCON2         equ	4037	;# 
   250   000FC6                     SSPCON1         equ	4038	;# 
   251   000FC7                     SSPSTAT         equ	4039	;# 
   252   000FC8                     SSPADD          equ	4040	;# 
   253   000FC9                     SSPBUF          equ	4041	;# 
   254   000FCA                     T2CON           equ	4042	;# 
   255   000FCB                     PR2             equ	4043	;# 
   256   000FCB                     MEMCON          equ	4043	;# 
   257   000FCC                     TMR2            equ	4044	;# 
   258   000FCD                     T1CON           equ	4045	;# 
   259   000FCE                     TMR1            equ	4046	;# 
   260   000FCE                     TMR1L           equ	4046	;# 
   261   000FCF                     TMR1H           equ	4047	;# 
   262   000FD0                     RCON            equ	4048	;# 
   263   000FD1                     WDTCON          equ	4049	;# 
   264   000FD2                     HLVDCON         equ	4050	;# 
   265   000FD2                     LVDCON          equ	4050	;# 
   266   000FD3                     OSCCON          equ	4051	;# 
   267   000FD5                     T0CON           equ	4053	;# 
   268   000FD6                     TMR0            equ	4054	;# 
   269   000FD6                     TMR0L           equ	4054	;# 
   270   000FD7                     TMR0H           equ	4055	;# 
   271   000FD8                     STATUS          equ	4056	;# 
   272   000FD9                     FSR2            equ	4057	;# 
   273   000FD9                     FSR2L           equ	4057	;# 
   274   000FDA                     FSR2H           equ	4058	;# 
   275   000FDB                     PLUSW2          equ	4059	;# 
   276   000FDC                     PREINC2         equ	4060	;# 
   277   000FDD                     POSTDEC2        equ	4061	;# 
   278   000FDE                     POSTINC2        equ	4062	;# 
   279   000FDF                     INDF2           equ	4063	;# 
   280   000FE0                     BSR             equ	4064	;# 
   281   000FE1                     FSR1            equ	4065	;# 
   282   000FE1                     FSR1L           equ	4065	;# 
   283   000FE2                     FSR1H           equ	4066	;# 
   284   000FE3                     PLUSW1          equ	4067	;# 
   285   000FE4                     PREINC1         equ	4068	;# 
   286   000FE5                     POSTDEC1        equ	4069	;# 
   287   000FE6                     POSTINC1        equ	4070	;# 
   288   000FE7                     INDF1           equ	4071	;# 
   289   000FE8                     WREG            equ	4072	;# 
   290   000FE9                     FSR0            equ	4073	;# 
   291   000FE9                     FSR0L           equ	4073	;# 
   292   000FEA                     FSR0H           equ	4074	;# 
   293   000FEB                     PLUSW0          equ	4075	;# 
   294   000FEC                     PREINC0         equ	4076	;# 
   295   000FED                     POSTDEC0        equ	4077	;# 
   296   000FEE                     POSTINC0        equ	4078	;# 
   297   000FEF                     INDF0           equ	4079	;# 
   298   000FF0                     INTCON3         equ	4080	;# 
   299   000FF1                     INTCON2         equ	4081	;# 
   300   000FF2                     INTCON          equ	4082	;# 
   301   000FF3                     PROD            equ	4083	;# 
   302   000FF3                     PRODL           equ	4083	;# 
   303   000FF4                     PRODH           equ	4084	;# 
   304   000FF5                     TABLAT          equ	4085	;# 
   305   000FF6                     TBLPTR          equ	4086	;# 
   306   000FF6                     TBLPTRL         equ	4086	;# 
   307   000FF7                     TBLPTRH         equ	4087	;# 
   308   000FF8                     TBLPTRU         equ	4088	;# 
   309   000FF9                     PCLAT           equ	4089	;# 
   310   000FF9                     PC              equ	4089	;# 
   311   000FF9                     PCL             equ	4089	;# 
   312   000FFA                     PCLATH          equ	4090	;# 
   313   000FFB                     PCLATU          equ	4091	;# 
   314   000FFC                     STKPTR          equ	4092	;# 
   315   000FFD                     TOS             equ	4093	;# 
   316   000FFD                     TOSL            equ	4093	;# 
   317   000FFE                     TOSH            equ	4094	;# 
   318   000FFF                     TOSU            equ	4095	;# 
   319                           
   320                           	psect	idataBANK3
   321   006F12                     __pidataBANK3:
   322                           	callstack 0
   323                           
   324                           ;initializer for _MQ2_Ro
   325   006F12  0000               	dw	0
   326   006F14  4120               	dw	16672
   327                           
   328                           ;initializer for _temp_samples
   329   006F16  0000               	dw	0
   330   006F18  41C8               	dw	16840
   331   006F1A  0000               	dw	0
   332   006F1C  41C8               	dw	16840
   333   006F1E  0000               	dw	0
   334   006F20  41C8               	dw	16840
   335   006F22  0000               	dw	0
   336   006F24  41C8               	dw	16840
   337   006F26  0000               	dw	0
   338   006F28  41C8               	dw	16840
   339                           
   340                           	psect	mediumconst
   341   007E5C                     __pmediumconst:
   342                           	callstack 0
   343   007E5C  00                 	db	0
   344   007E5D                     _dp_l:
   345                           	callstack 0
   346   007E5D  0000               	dw	0
   347   007E5F  0000               	dw	0
   348   007E61  CFDC               	dw	53212
   349   007E63  35D1               	dw	13777
   350   007E65                     __end_of_dp_l:
   351                           	callstack 0
   352   007E65                     _dp_h:
   353                           	callstack 0
   354   007E65  0000               	dw	0
   355   007E67  0000               	dw	0
   356   007E69  C000               	dw	49152
   357   007E6B  3F15               	dw	16149
   358   007E6D                     __end_of_dp_h:
   359                           	callstack 0
   360   007E6D                     _bp:
   361                           	callstack 0
   362   007E6D  0000               	dw	0
   363   007E6F  3F80               	dw	16256
   364   007E71  0000               	dw	0
   365   007E73  3FC0               	dw	16320
   366   007E75                     __end_of_bp:
   367                           	callstack 0
   368   007E75  A570               	dw	42352
   369   007E77  36EC               	dw	14060
   370   007E79                     __end_of_ivln2_l:
   371                           	callstack 0
   372   007E79  AA3B               	dw	43579
   373   007E7B  3FB8               	dw	16312
   374   007E7D                     __end_of_ivln2:
   375                           	callstack 0
   376   007E7D  384F               	dw	14415
   377   007E7F  3F76               	dw	16246
   378   007E81                     __end_of_cp:
   379                           	callstack 0
   380   007E81  AA3C               	dw	43580
   381   007E83  3338               	dw	13112
   382   007E85                     __end_of_ovt:
   383                           	callstack 0
   384   007E85  BE8C               	dw	48780
   385   007E87  35BF               	dw	13759
   386   007E89                     __end_of_lg2_l:
   387                           	callstack 0
   388   007E89  7200               	dw	29184
   389   007E8B  3F31               	dw	16177
   390   007E8D                     __end_of_lg2_h:
   391                           	callstack 0
   392   007E8D  7218               	dw	29208
   393   007E8F  3F31               	dw	16177
   394   007E91                     __end_of_lg2:
   395                           	callstack 0
   396   007E91  BB4C               	dw	47948
   397   007E93  3331               	dw	13105
   398   007E95                     __end_of_P5:
   399                           	callstack 0
   400   007E95  EA0E               	dw	59918
   401   007E97  B5DD               	dw	46557
   402   007E99                     __end_of_P4:
   403                           	callstack 0
   404   007E99  B355               	dw	45909
   405   007E9B  388A               	dw	14474
   406   007E9D                     __end_of_P3:
   407                           	callstack 0
   408   007E9D  0B61               	dw	2913
   409   007E9F  BB36               	dw	47926
   410   007EA1                     __end_of_P2:
   411                           	callstack 0
   412   007EA1  AAAB               	dw	43691
   413   007EA3  3E2A               	dw	15914
   414   007EA5                     __end_of_P1:
   415                           	callstack 0
   416   007EA5  F142               	dw	61762
   417   007EA7  3E53               	dw	15955
   418   007EA9                     __end_of_L6:
   419                           	callstack 0
   420   007EA9  3255               	dw	12885
   421   007EAB  3E6C               	dw	15980
   422   007EAD                     __end_of_L5:
   423                           	callstack 0
   424   007EAD  A305               	dw	41733
   425   007EAF  3E8B               	dw	16011
   426   007EB1                     __end_of_L4:
   427                           	callstack 0
   428   007EB1  AAAB               	dw	43691
   429   007EB3  3EAA               	dw	16042
   430   007EB5                     __end_of_L3:
   431                           	callstack 0
   432   007EB5  6DB7               	dw	28087
   433   007EB7  3EDB               	dw	16091
   434   007EB9                     __end_of_L2:
   435                           	callstack 0
   436   007EB9  999A               	dw	39322
   437   007EBB  3F19               	dw	16153
   438   007EBD                     __end_of_L1:
   439                           	callstack 0
   440   007EBD  0000               	dw	0
   441   007EBF  4B80               	dw	19328
   442   007EC1                     __end_of_two24:
   443                           	callstack 0
   444   007EC1  0D05               	dw	3333
   445   007EC3  0000               	dw	0
   446   007EC5                     __end_of_TEST_DURATION:
   447                           	callstack 0
   448   007EC5  AA00               	dw	43520
   449   007EC7  3FB8               	dw	16312
   450   007EC9                     __end_of_ivln2_h:
   451                           	callstack 0
   452   007EC9  23C6               	dw	9158
   453   007ECB  B8F6               	dw	47350
   454   007ECD                     __end_of_cp_l:
   455                           	callstack 0
   456   007ECD  4000               	dw	16384
   457   007ECF  3F76               	dw	16246
   458   007ED1                     __end_of_cp_h:
   459                           	callstack 0
   460   007CA7                     _TRISC7         set	31911
   461   007CA6                     _TRISC6         set	31910
   462   007C92                     _TRISA2         set	31890
   463   007C91                     _TRISA1         set	31889
   464   007C90                     _TRISA0         set	31888
   465   000FAB                     _RCSTAbits      set	4011
   466   000FAF                     _SPBRG          set	4015
   467   000FF2                     _INTCONbits     set	4082
   468   000FD0                     _RCONbits       set	4048
   469   000FF1                     _INTCON2bits    set	4081
   470   000F93                     _TRISBbits      set	3987
   471   000FC3                     _ADRESL         set	4035
   472   000FC4                     _ADRESH         set	4036
   473   000FC0                     _ADCON2         set	4032
   474   000FC1                     _ADCON1         set	4033
   475   000FC2                     _ADCON0bits     set	4034
   476   000FAD                     _TXREG          set	4013
   477   000FAC                     _TXSTAbits      set	4012
   478   000FAE                     _RCREG          set	4014
   479   000F9E                     _PIR1bits       set	3998
   480   000F81                     _PORTBbits      set	3969
   481   000F81                     _PORTB          set	3969
   482   000F93                     _TRISB          set	3987
   483   000FD3                     _OSCCON         set	4051
   484   000FF0                     _INTCON3bits    set	4080
   485   007ED1                     STR_17:
   486   007ED1  7B                 	db	123
   487   007ED2  22                 	db	34
   488   007ED3  74                 	db	116	;'t'
   489   007ED4  22                 	db	34
   490   007ED5  3A                 	db	58	;':'
   491   007ED6  25                 	db	37
   492   007ED7  2E                 	db	46
   493   007ED8  31                 	db	49	;'1'
   494   007ED9  66                 	db	102	;'f'
   495   007EDA  2C                 	db	44
   496   007EDB  22                 	db	34
   497   007EDC  66                 	db	102	;'f'
   498   007EDD  64                 	db	100	;'d'
   499   007EDE  22                 	db	34
   500   007EDF  3A                 	db	58	;':'
   501   007EE0  25                 	db	37
   502   007EE1  64                 	db	100	;'d'
   503   007EE2  2C                 	db	44
   504   007EE3  22                 	db	34
   505   007EE4  66                 	db	102	;'f'
   506   007EE5  69                 	db	105	;'i'
   507   007EE6  22                 	db	34
   508   007EE7  3A                 	db	58	;':'
   509   007EE8  25                 	db	37
   510   007EE9  2E                 	db	46
   511   007EEA  31                 	db	49	;'1'
   512   007EEB  66                 	db	102	;'f'
   513   007EEC  2C                 	db	44
   514   007EED  22                 	db	34
   515   007EEE  63                 	db	99	;'c'
   516   007EEF  6F                 	db	111	;'o'
   517   007EF0  22                 	db	34
   518   007EF1  3A                 	db	58	;':'
   519   007EF2  25                 	db	37
   520   007EF3  2E                 	db	46
   521   007EF4  31                 	db	49	;'1'
   522   007EF5  66                 	db	102	;'f'
   523   007EF6  2C                 	db	44
   524   007EF7  22                 	db	34
   525   007EF8  66                 	db	102	;'f'
   526   007EF9  72                 	db	114	;'r'
   527   007EFA  22                 	db	34
   528   007EFB  3A                 	db	58	;':'
   529   007EFC  25                 	db	37
   530   007EFD  2E                 	db	46
   531   007EFE  32                 	db	50	;'2'
   532   007EFF  66                 	db	102	;'f'
   533   007F00  2C                 	db	44
   534   007F01  22                 	db	34
   535   007F02  74                 	db	116	;'t'
   536   007F03  66                 	db	102	;'f'
   537   007F04  22                 	db	34
   538   007F05  3A                 	db	58	;':'
   539   007F06  25                 	db	37
   540   007F07  2E                 	db	46
   541   007F08  32                 	db	50	;'2'
   542   007F09  66                 	db	102	;'f'
   543   007F0A  2C                 	db	44
   544   007F0B  22                 	db	34
   545   007F0C  70                 	db	112	;'p'
   546   007F0D  22                 	db	34
   547   007F0E  3A                 	db	58	;':'
   548   007F0F  25                 	db	37
   549   007F10  64                 	db	100	;'d'
   550   007F11  2C                 	db	44
   551   007F12  22                 	db	34
   552   007F13  61                 	db	97	;'a'
   553   007F14  22                 	db	34
   554   007F15  3A                 	db	58	;':'
   555   007F16  25                 	db	37
   556   007F17  64                 	db	100	;'d'
   557   007F18  2C                 	db	44
   558   007F19  22                 	db	34
   559   007F1A  66                 	db	102	;'f'
   560   007F1B  61                 	db	97	;'a'
   561   007F1C  22                 	db	34
   562   007F1D  3A                 	db	58	;':'
   563   007F1E  25                 	db	37
   564   007F1F  64                 	db	100	;'d'
   565   007F20  2C                 	db	44
   566   007F21  22                 	db	34
   567   007F22  63                 	db	99	;'c'
   568   007F23  6D                 	db	109	;'m'
   569   007F24  64                 	db	100	;'d'
   570   007F25  22                 	db	34
   571   007F26  3A                 	db	58	;':'
   572   007F27  7B                 	db	123
   573   007F28  22                 	db	34
   574   007F29  74                 	db	116	;'t'
   575   007F2A  65                 	db	101	;'e'
   576   007F2B  73                 	db	115	;'s'
   577   007F2C  74                 	db	116	;'t'
   578   007F2D  22                 	db	34
   579   007F2E  3A                 	db	58	;':'
   580   007F2F  25                 	db	37
   581   007F30  64                 	db	100	;'d'
   582   007F31  2C                 	db	44
   583   007F32  22                 	db	34
   584   007F33  73                 	db	115	;'s'
   585   007F34  68                 	db	104	;'h'
   586   007F35  75                 	db	117	;'u'
   587   007F36  74                 	db	116	;'t'
   588   007F37  64                 	db	100	;'d'
   589   007F38  6F                 	db	111	;'o'
   590   007F39  77                 	db	119	;'w'
   591   007F3A  6E                 	db	110	;'n'
   592   007F3B  22                 	db	34
   593   007F3C  3A                 	db	58	;':'
   594   007F3D  25                 	db	37
   595   007F3E  64                 	db	100	;'d'
   596   007F3F  7D                 	db	125
   597   007F40  7D                 	db	125
   598   007F41  0D                 	db	13
   599   007F42  0A                 	db	10
   600   007F43  00                 	db	0
   601   007F44                     STR_16:
   602   007F44  7B                 	db	123
   603   007F45  22                 	db	34
   604   007F46  65                 	db	101	;'e'
   605   007F47  76                 	db	118	;'v'
   606   007F48  65                 	db	101	;'e'
   607   007F49  6E                 	db	110	;'n'
   608   007F4A  74                 	db	116	;'t'
   609   007F4B  22                 	db	34
   610   007F4C  3A                 	db	58	;':'
   611   007F4D  22                 	db	34
   612   007F4E  25                 	db	37
   613   007F4F  73                 	db	115	;'s'
   614   007F50  22                 	db	34
   615   007F51  2C                 	db	44
   616   007F52  22                 	db	34
   617   007F53  74                 	db	116	;'t'
   618   007F54  69                 	db	105	;'i'
   619   007F55  6D                 	db	109	;'m'
   620   007F56  65                 	db	101	;'e'
   621   007F57  22                 	db	34
   622   007F58  3A                 	db	58	;':'
   623   007F59  25                 	db	37
   624   007F5A  6C                 	db	108	;'l'
   625   007F5B  75                 	db	117	;'u'
   626   007F5C  25                 	db	37
   627   007F5D  73                 	db	115	;'s'
   628   007F5E  7D                 	db	125
   629   007F5F  0D                 	db	13
   630   007F60  0A                 	db	10
   631   007F61  00                 	db	0
   632   007F62                     STR_6:
   633   007F62  2C                 	db	44
   634   007F63  22                 	db	34
   635   007F64  64                 	db	100	;'d'
   636   007F65  75                 	db	117	;'u'
   637   007F66  72                 	db	114	;'r'
   638   007F67  61                 	db	97	;'a'
   639   007F68  74                 	db	116	;'t'
   640   007F69  69                 	db	105	;'i'
   641   007F6A  6F                 	db	111	;'o'
   642   007F6B  6E                 	db	110	;'n'
   643   007F6C  22                 	db	34
   644   007F6D  3A                 	db	58	;':'
   645   007F6E  25                 	db	37
   646   007F6F  6C                 	db	108	;'l'
   647   007F70  75                 	db	117	;'u'
   648   007F71  2C                 	db	44
   649   007F72  22                 	db	34
   650   007F73  77                 	db	119	;'w'
   651   007F74  61                 	db	97	;'a'
   652   007F75  74                 	db	116	;'t'
   653   007F76  65                 	db	101	;'e'
   654   007F77  72                 	db	114	;'r'
   655   007F78  22                 	db	34
   656   007F79  3A                 	db	58	;':'
   657   007F7A  25                 	db	37
   658   007F7B  2E                 	db	46
   659   007F7C  32                 	db	50	;'2'
   660   007F7D  66                 	db	102	;'f'
   661   007F7E  00                 	db	0
   662   007F7F                     STR_2:
   663   007F7F  74                 	db	116	;'t'
   664   007F80  65                 	db	101	;'e'
   665   007F81  6D                 	db	109	;'m'
   666   007F82  70                 	db	112	;'p'
   667   007F83  65                 	db	101	;'e'
   668   007F84  72                 	db	114	;'r'
   669   007F85  61                 	db	97	;'a'
   670   007F86  74                 	db	116	;'t'
   671   007F87  75                 	db	117	;'u'
   672   007F88  72                 	db	114	;'r'
   673   007F89  65                 	db	101	;'e'
   674   007F8A  5F                 	db	95	;'_'
   675   007F8B  73                 	db	115	;'s'
   676   007F8C  65                 	db	101	;'e'
   677   007F8D  6E                 	db	110	;'n'
   678   007F8E  73                 	db	115	;'s'
   679   007F8F  6F                 	db	111	;'o'
   680   007F90  72                 	db	114	;'r'
   681   007F91  00                 	db	0
   682   007F92                     STR_4:
   683   007F92  2C                 	db	44
   684   007F93  22                 	db	34
   685   007F94  73                 	db	115	;'s'
   686   007F95  65                 	db	101	;'e'
   687   007F96  6E                 	db	110	;'n'
   688   007F97  73                 	db	115	;'s'
   689   007F98  6F                 	db	111	;'o'
   690   007F99  72                 	db	114	;'r'
   691   007F9A  22                 	db	34
   692   007F9B  3A                 	db	58	;':'
   693   007F9C  22                 	db	34
   694   007F9D  25                 	db	37
   695   007F9E  73                 	db	115	;'s'
   696   007F9F  22                 	db	34
   697   007FA0  00                 	db	0
   698   007FA1                     STR_1:
   699   007FA1  66                 	db	102	;'f'
   700   007FA2  6C                 	db	108	;'l'
   701   007FA3  61                 	db	97	;'a'
   702   007FA4  6D                 	db	109	;'m'
   703   007FA5  65                 	db	101	;'e'
   704   007FA6  5F                 	db	95	;'_'
   705   007FA7  73                 	db	115	;'s'
   706   007FA8  65                 	db	101	;'e'
   707   007FA9  6E                 	db	110	;'n'
   708   007FAA  73                 	db	115	;'s'
   709   007FAB  6F                 	db	111	;'o'
   710   007FAC  72                 	db	114	;'r'
   711   007FAD  00                 	db	0
   712   007FAE                     STR_5:
   713   007FAE  66                 	db	102	;'f'
   714   007FAF  69                 	db	105	;'i'
   715   007FB0  72                 	db	114	;'r'
   716   007FB1  65                 	db	101	;'e'
   717   007FB2  5F                 	db	95	;'_'
   718   007FB3  73                 	db	115	;'s'
   719   007FB4  74                 	db	116	;'t'
   720   007FB5  61                 	db	97	;'a'
   721   007FB6  72                 	db	114	;'r'
   722   007FB7  74                 	db	116	;'t'
   723   007FB8  00                 	db	0
   724   007FB9                     STR_8:
   725   007FB9  74                 	db	116	;'t'
   726   007FBA  65                 	db	101	;'e'
   727   007FBB  73                 	db	115	;'s'
   728   007FBC  74                 	db	116	;'t'
   729   007FBD  5F                 	db	95	;'_'
   730   007FBE  73                 	db	115	;'s'
   731   007FBF  74                 	db	116	;'t'
   732   007FC0  61                 	db	97	;'a'
   733   007FC1  72                 	db	114	;'r'
   734   007FC2  74                 	db	116	;'t'
   735   007FC3  00                 	db	0
   736   007FC4                     STR_3:
   737   007FC4  63                 	db	99	;'c'
   738   007FC5  6F                 	db	111	;'o'
   739   007FC6  5F                 	db	95	;'_'
   740   007FC7  73                 	db	115	;'s'
   741   007FC8  65                 	db	101	;'e'
   742   007FC9  6E                 	db	110	;'n'
   743   007FCA  73                 	db	115	;'s'
   744   007FCB  6F                 	db	111	;'o'
   745   007FCC  72                 	db	114	;'r'
   746   007FCD  00                 	db	0
   747   007FCE                     STR_7:
   748   007FCE  66                 	db	102	;'f'
   749   007FCF  69                 	db	105	;'i'
   750   007FD0  72                 	db	114	;'r'
   751   007FD1  65                 	db	101	;'e'
   752   007FD2  5F                 	db	95	;'_'
   753   007FD3  65                 	db	101	;'e'
   754   007FD4  6E                 	db	110	;'n'
   755   007FD5  64                 	db	100	;'d'
   756   007FD6  00                 	db	0
   757   007FD7                     STR_11:
   758   007FD7  74                 	db	116	;'t'
   759   007FD8  65                 	db	101	;'e'
   760   007FD9  73                 	db	115	;'s'
   761   007FDA  74                 	db	116	;'t'
   762   007FDB  5F                 	db	95	;'_'
   763   007FDC  65                 	db	101	;'e'
   764   007FDD  6E                 	db	110	;'n'
   765   007FDE  64                 	db	100	;'d'
   766   007FDF  00                 	db	0
   767   007FE0                     STR_12:
   768   007FE0  73                 	db	115	;'s'
   769   007FE1  68                 	db	104	;'h'
   770   007FE2  75                 	db	117	;'u'
   771   007FE3  74                 	db	116	;'t'
   772   007FE4  64                 	db	100	;'d'
   773   007FE5  6F                 	db	111	;'o'
   774   007FE6  77                 	db	119	;'w'
   775   007FE7  6E                 	db	110	;'n'
   776   007FE8  00                 	db	0
   777   007FE9                     STR_24:
   778   007FE9  28                 	db	40
   779   007FEA  6E                 	db	110	;'n'
   780   007FEB  75                 	db	117	;'u'
   781   007FEC  6C                 	db	108	;'l'
   782   007FED  6C                 	db	108	;'l'
   783   007FEE  29                 	db	41
   784   007FEF  00                 	db	0
   785   007FF0                     STR_14:
   786   007FF0  72                 	db	114	;'r'
   787   007FF1  65                 	db	101	;'e'
   788   007FF2  73                 	db	115	;'s'
   789   007FF3  75                 	db	117	;'u'
   790   007FF4  6D                 	db	109	;'m'
   791   007FF5  65                 	db	101	;'e'
   792   007FF6  00                 	db	0
   793   007FF7                     STR_18:
   794   007FF7  69                 	db	105	;'i'
   795   007FF8  6E                 	db	110	;'n'
   796   007FF9  66                 	db	102	;'f'
   797   007FFA  00                 	db	0
   798   007FFB                     STR_21:
   799   007FFB  6E                 	db	110	;'n'
   800   007FFC  61                 	db	97	;'a'
   801   007FFD  6E                 	db	110	;'n'
   802   007FFE  00                 	db	0
   803   007FFB                     STR_22          equ	STR_21
   804   007FFB                     STR_23          equ	STR_21
   805   007FF7                     STR_19          equ	STR_18
   806   007FF7                     STR_20          equ	STR_18
   807   007F71                     STR_10          equ	STR_6+15
   808   007F61                     STR_9           equ	STR_16+29
   809   007F61                     STR_13          equ	STR_16+29
   810   007F61                     STR_15          equ	STR_16+29
   811   007FFF  00                 	db	0	; dummy byte at the end
   812   007E5C                     __smallconst    set	__pmediumconst
   813   007E5C                     __mediumconst   set	__pmediumconst
   814   000002                     __activetblptr  equ	2
   815                           
   816                           ; #config settings
   817                           
   818                           	psect	cinit
   819   006CBE                     __pcinit:
   820                           	callstack 0
   821   006CBE                     start_initialization:
   822                           	callstack 0
   823   006CBE                     __initialization:
   824                           	callstack 0
   825                           
   826                           ; Initialize objects allocated to BANK3 (24 bytes)
   827                           ; load TBLPTR registers with __pidataBANK3
   828   006CBE  0E12               	movlw	low __pidataBANK3
   829   006CC0  6EF6               	movwf	tblptrl,c
   830   006CC2  0E6F               	movlw	high __pidataBANK3
   831   006CC4  6EF7               	movwf	tblptrh,c
   832   006CC6  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   833   006CC8  6EF8               	movwf	tblptru,c
   834   006CCA  EE03  F0DE         	lfsr	0,__pdataBANK3
   835   006CCE  EE10 F018          	lfsr	1,24
   836   006CD2                     copy_data0:
   837   006CD2  0009               	tblrd		*+
   838   006CD4  CFF5 FFEE          	movff	tablat,postinc0
   839   006CD8  50E5               	movf	postdec1,w,c
   840   006CDA  50E1               	movf	fsr1l,w,c
   841   006CDC  E1FA               	bnz	copy_data0
   842                           
   843                           ; Clear objects allocated to BANK3 (222 bytes)
   844   006CDE  EE03  F000         	lfsr	0,__pbssBANK3
   845   006CE2  0EDE               	movlw	222
   846   006CE4                     clear_0:
   847   006CE4  6AEE               	clrf	postinc0,c
   848   006CE6  06E8               	decf	wreg,f,c
   849   006CE8  E1FD               	bnz	clear_0
   850                           
   851                           ; Clear objects allocated to BANK2 (6 bytes)
   852   006CEA  0102               	movlb	2
   853   006CEC  6BFF               	clrf	(__pbssBANK2+5)& (0+255),b
   854   006CEE  6BFE               	clrf	(__pbssBANK2+4)& (0+255),b
   855   006CF0  6BFD               	clrf	(__pbssBANK2+3)& (0+255),b
   856   006CF2  6BFC               	clrf	(__pbssBANK2+2)& (0+255),b
   857   006CF4  6BFB               	clrf	(__pbssBANK2+1)& (0+255),b
   858   006CF6  6BFA               	clrf	__pbssBANK2& (0+255),b
   859                           
   860                           ; Clear objects allocated to COMRAM (1 bytes)
   861   006CF8  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   862   006CFA                     end_of_initialization:
   863                           	callstack 0
   864   006CFA                     __end_of__initialization:
   865                           	callstack 0
   866   006CFA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   867   006CFC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   868   006CFE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   869   006D00  6EF8               	movwf	tblptru,c
   870   006D02  0100               	movlb	0
   871   006D04  EF30  F026         	goto	_main	;jump to C main() function
   872                           
   873                           	psect	bssCOMRAM
   874   00005E                     __pbssCOMRAM:
   875                           	callstack 0
   876   00005E                     _trigger_test:
   877                           	callstack 0
   878   00005E                     	ds	1
   879                           
   880                           	psect	bssBANK2
   881   0002FA                     __pbssBANK2:
   882                           	callstack 0
   883   0002FA                     _system_millis:
   884                           	callstack 0
   885   0002FA                     	ds	4
   886   0002FE                     _prec:
   887                           	callstack 0
   888   0002FE                     	ds	2
   889                           
   890                           	psect	bssBANK3
   891   000300                     __pbssBANK3:
   892                           	callstack 0
   893   000300                     _co_samples:
   894                           	callstack 0
   895   000300                     	ds	20
   896   000314                     floorf@F521:
   897                           	callstack 0
   898   000314                     	ds	4
   899   000318                     ___fpclassifyf@F465:
   900                           	callstack 0
   901   000318                     	ds	4
   902   00031C                     Update_Actuators@last_blink:
   903                           	callstack 0
   904   00031C                     	ds	4
   905   000320                     Read_Sensors@o_flow_start_748:
   906                           	callstack 0
   907   000320                     	ds	4
   908   000324                     Read_Sensors@no_flow_start:
   909                           	callstack 0
   910   000324                     	ds	4
   911   000328                     Read_Sensors@last_flow_time:
   912                           	callstack 0
   913   000328                     	ds	4
   914   00032C                     Read_Sensors@last_co:
   915                           	callstack 0
   916   00032C                     	ds	4
   917   000330                     Handle_Commands@last_blink:
   918                           	callstack 0
   919   000330                     	ds	4
   920   000334                     _test_start_flow:
   921                           	callstack 0
   922   000334                     	ds	4
   923   000338                     _fire_start_flow:
   924                           	callstack 0
   925   000338                     	ds	4
   926   00033C                     _fire_start_co:
   927                           	callstack 0
   928   00033C                     	ds	4
   929   000340                     _fire_start_flame:
   930                           	callstack 0
   931   000340                     	ds	4
   932   000344                     _fire_start_temp:
   933                           	callstack 0
   934   000344                     	ds	4
   935   000348                     _fire_start_time:
   936                           	callstack 0
   937   000348                     	ds	4
   938   00034C                     _test_start_time:
   939                           	callstack 0
   940   00034C                     	ds	4
   941   000350                     _total_flow:
   942                           	callstack 0
   943   000350                     	ds	4
   944   000354                     _flow_rate:
   945                           	callstack 0
   946   000354                     	ds	4
   947   000358                     _co_ppm:
   948                           	callstack 0
   949   000358                     	ds	4
   950   00035C                     _flame_base_voltage:
   951                           	callstack 0
   952   00035C                     	ds	4
   953   000360                     _flame_intensity:
   954                           	callstack 0
   955   000360                     	ds	4
   956   000364                     _temperature:
   957                           	callstack 0
   958   000364                     	ds	4
   959   000368                     _errno:
   960                           	callstack 0
   961   000368                     	ds	2
   962   00036A                     _width:
   963                           	callstack 0
   964   00036A                     	ds	2
   965   00036C                     Read_Sensors@last_pulse:
   966                           	callstack 0
   967   00036C                     	ds	2
   968   00036E                     _pulse_count:
   969                           	callstack 0
   970   00036E                     	ds	2
   971   000370                     _flags:
   972                           	callstack 0
   973   000370                     	ds	1
   974   000371                     Handle_Shutdown_Events@prev_shutdown:
   975                           	callstack 0
   976   000371                     	ds	1
   977   000372                     Handle_Test_Events@prev_test:
   978                           	callstack 0
   979   000372                     	ds	1
   980   000373                     _shutdown_system:
   981                           	callstack 0
   982   000373                     	ds	1
   983   000374                     _sample_index:
   984                           	callstack 0
   985   000374                     	ds	1
   986   000375                     _prev_fire_alarm:
   987                           	callstack 0
   988   000375                     	ds	1
   989   000376                     _fire_alarm:
   990                           	callstack 0
   991   000376                     	ds	1
   992   000377                     _alarm_active:
   993                           	callstack 0
   994   000377                     	ds	1
   995   000378                     _pump_active:
   996                           	callstack 0
   997   000378                     	ds	1
   998   000379                     _flame_detected:
   999                           	callstack 0
  1000   000379                     	ds	1
  1001   00037A                     _dbuf:
  1002                           	callstack 0
  1003   00037A                     	ds	80
  1004   0003CA                     _fire_trigger_sensor:
  1005                           	callstack 0
  1006   0003CA                     	ds	20
  1007                           
  1008                           	psect	dataBANK3
  1009   0003DE                     __pdataBANK3:
  1010                           	callstack 0
  1011   0003DE                     _MQ2_Ro:
  1012                           	callstack 0
  1013   0003DE                     	ds	4
  1014   0003E2                     _temp_samples:
  1015                           	callstack 0
  1016   0003E2                     	ds	20
  1017                           
  1018                           	psect	cstackBANK4
  1019   000400                     __pcstackBANK4:
  1020                           	callstack 0
  1021   000400                     _main$1837:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x0
  1025   000400                     	ds	4
  1026   000404                     main@adc_value:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x4
  1030   000404                     	ds	2
  1031   000406                     main@adc_value_677:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x6
  1035   000406                     	ds	2
  1036   000408                     main@cycle_count:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x8
  1040   000408                     	ds	2
  1041   00040A                     main@voltage:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0xA
  1045   00040A                     	ds	4
  1046   00040E                     main@i:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0xE
  1050   00040E                     	ds	2
  1051   000410                     main@i_676:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x10
  1055   000410                     	ds	2
  1056                           
  1057                           	psect	cstackBANK2
  1058   000200                     __pcstackBANK2:
  1059                           	callstack 0
  1060   000200                     Handle_Fire_Events@end_data:
  1061                           	callstack 0
  1062                           
  1063                           ; 150 bytes @ 0x0
  1064   000200                     	ds	150
  1065   000296                     Handle_Fire_Events@start_data:
  1066                           	callstack 0
  1067                           
  1068                           ; 100 bytes @ 0x96
  1069   000296                     	ds	100
  1070                           
  1071                           	psect	cstackBANK1
  1072   000100                     __pcstackBANK1:
  1073                           	callstack 0
  1074   000100                     _powf$1846:
  1075                           	callstack 0
  1076   000100                     Send_History_Event@buffer:
  1077                           	callstack 0
  1078   000100                     Send_Data@buffer:
  1079                           	callstack 0
  1080                           
  1081                           ; 200 bytes @ 0x0
  1082   000100                     	ds	4
  1083   000104                     _powf$1847:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x4
  1087   000104                     	ds	4
  1088   000108                     _powf$1851:
  1089                           	callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x8
  1092   000108                     	ds	4
  1093   00010C                     _powf$1852:
  1094                           	callstack 0
  1095                           
  1096                           ; 4 bytes @ 0xC
  1097   00010C                     	ds	4
  1098   000110                     _powf$1853:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x10
  1102   000110                     	ds	4
  1103   000114                     _powf$1854:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x14
  1107   000114                     	ds	4
  1108   000118                     _powf$1855:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x18
  1112   000118                     	ds	4
  1113   00011C                     powf@t2:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x1C
  1117   00011C                     	ds	4
  1118   000120                     powf@z_h:
  1119                           	callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x20
  1122   000120                     	ds	4
  1123   000124                     powf@z_l:
  1124                           	callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x24
  1127   000124                     	ds	4
  1128   000128                     powf@i:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x28
  1132   000128                     	ds	4
  1133   00012C                     powf@y1:
  1134                           	callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x2C
  1137   00012C                     	ds	4
  1138   000130                     powf@s_l:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x30
  1142   000130                     	ds	4
  1143   000134                     powf@t_l:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x34
  1147   000134                     	ds	4
  1148   000138                     _powf$1845:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x38
  1152   000138                     	ds	4
  1153   00013C                     _powf$1849:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x3C
  1157   00013C                     	ds	4
  1158   000140                     _powf$1850:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x40
  1162   000140                     	ds	4
  1163   000144                     powf@w:
  1164                           	callstack 0
  1165                           
  1166                           ; 4 bytes @ 0x44
  1167   000144                     	ds	4
  1168   000148                     _powf$1841:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x48
  1172   000148                     	ds	4
  1173   00014C                     _powf$1843:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x4C
  1177   00014C                     	ds	4
  1178   000150                     powf@r:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x50
  1182   000150                     	ds	4
  1183   000154                     powf@yisint:
  1184                           	callstack 0
  1185                           
  1186                           ; 4 bytes @ 0x54
  1187   000154                     	ds	4
  1188   000158                     _powf$1842:
  1189                           	callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x58
  1192   000158                     	ds	4
  1193   00015C                     _powf$1848:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x5C
  1197   00015C                     	ds	4
  1198   000160                     powf@s:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x60
  1202   000160                     	ds	4
  1203   000164                     powf@sn:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x64
  1207   000164                     	ds	4
  1208   000168                     powf@hx:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x68
  1212   000168                     	ds	4
  1213   00016C                     powf@p_l:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x6C
  1217   00016C                     	ds	4
  1218   000170                     powf@t_h:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x70
  1222   000170                     	ds	4
  1223   000174                     powf@s_h:
  1224                           	callstack 0
  1225                           
  1226                           ; 4 bytes @ 0x74
  1227   000174                     	ds	4
  1228   000178                     powf@ax:
  1229                           	callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x78
  1232   000178                     	ds	4
  1233   00017C                     powf@u:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x7C
  1237   00017C                     	ds	4
  1238   000180                     powf@v:
  1239                           	callstack 0
  1240                           
  1241                           ; 4 bytes @ 0x80
  1242   000180                     	ds	4
  1243   000184                     powf@hy:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x84
  1247   000184                     	ds	4
  1248   000188                     powf@n:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x88
  1252   000188                     	ds	4
  1253   00018C                     powf@t1:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x8C
  1257   00018C                     	ds	4
  1258   000190                     powf@s2:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x90
  1262   000190                     	ds	4
  1263   000194                     powf@iy:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x94
  1267   000194                     	ds	4
  1268   000198                     powf@is:
  1269                           	callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x98
  1272   000198                     	ds	4
  1273   00019C                     _powf$1844:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x9C
  1277   00019C                     	ds	4
  1278   0001A0                     powf@p_h:
  1279                           	callstack 0
  1280                           
  1281                           ; 4 bytes @ 0xA0
  1282   0001A0                     	ds	4
  1283   0001A4                     powf@k:
  1284                           	callstack 0
  1285                           
  1286                           ; 4 bytes @ 0xA4
  1287   0001A4                     	ds	4
  1288   0001A8                     powf@j:
  1289                           	callstack 0
  1290                           
  1291                           ; 4 bytes @ 0xA8
  1292   0001A8                     	ds	4
  1293   0001AC                     powf@ix:
  1294                           	callstack 0
  1295                           
  1296                           ; 4 bytes @ 0xAC
  1297   0001AC                     	ds	4
  1298   0001B0                     powf@t:
  1299                           	callstack 0
  1300                           
  1301                           ; 4 bytes @ 0xB0
  1302   0001B0                     	ds	4
  1303   0001B4                     powf@z:
  1304                           	callstack 0
  1305                           
  1306                           ; 4 bytes @ 0xB4
  1307   0001B4                     	ds	20
  1308   0001C8                     Send_History_Event@i:
  1309                           	callstack 0
  1310   0001C8                     Send_Data@i:
  1311                           	callstack 0
  1312                           
  1313                           ; 2 bytes @ 0xC8
  1314   0001C8                     	ds	2
  1315   0001CA                     Handle_Test_Events@test_data:
  1316                           	callstack 0
  1317                           
  1318                           ; 50 bytes @ 0xCA
  1319   0001CA                     	ds	50
  1320   0001FC                     Handle_Test_Events@water_used:
  1321                           	callstack 0
  1322                           
  1323                           ; 4 bytes @ 0xFC
  1324   0001FC                     	ds	4
  1325                           
  1326                           	psect	cstackBANK0
  1327   000060                     __pcstackBANK0:
  1328                           	callstack 0
  1329   000060                     Apply_Filter@sum:
  1330                           	callstack 0
  1331   000060                     ___flge@ff1:
  1332                           	callstack 0
  1333                           
  1334                           ; 4 bytes @ 0x0
  1335   000060                     	ds	4
  1336   000064                     Apply_Filter@i:
  1337                           	callstack 0
  1338   000064                     ___flge@ff2:
  1339                           	callstack 0
  1340                           
  1341                           ; 4 bytes @ 0x4
  1342   000064                     	ds	4
  1343   000068                     ?_powf:
  1344                           	callstack 0
  1345   000068                     efgtoa@fp:
  1346                           	callstack 0
  1347   000068                     powf@x:
  1348                           	callstack 0
  1349   000068                     ??_Update_Actuators:
  1350                           
  1351                           ; 1 bytes @ 0x8
  1352   000068                     	ds	1
  1353   000069                     efgtoa@f:
  1354                           	callstack 0
  1355                           
  1356                           ; 4 bytes @ 0x9
  1357   000069                     	ds	3
  1358   00006C                     powf@y:
  1359                           	callstack 0
  1360                           
  1361                           ; 4 bytes @ 0xC
  1362   00006C                     	ds	1
  1363   00006D                     efgtoa@c:
  1364                           	callstack 0
  1365                           
  1366                           ; 1 bytes @ 0xD
  1367   00006D                     	ds	1
  1368   00006E                     ??_efgtoa:
  1369                           
  1370                           ; 1 bytes @ 0xE
  1371   00006E                     	ds	2
  1372   000070                     efgtoa@ne:
  1373                           	callstack 0
  1374   000070                     ??_powf:
  1375                           
  1376                           ; 1 bytes @ 0x10
  1377   000070                     	ds	2
  1378   000072                     efgtoa@p:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x12
  1382   000072                     	ds	2
  1383   000074                     efgtoa@t:
  1384                           	callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x14
  1387   000074                     	ds	2
  1388   000076                     _efgtoa$1379:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x16
  1392   000076                     	ds	2
  1393   000078                     efgtoa@pp:
  1394                           	callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x18
  1397   000078                     	ds	1
  1398   000079                     efgtoa@mode:
  1399                           	callstack 0
  1400   000079                     ??_Read_Sensors:
  1401                           
  1402                           ; 1 bytes @ 0x19
  1403   000079                     	ds	1
  1404   00007A                     efgtoa@nmode:
  1405                           	callstack 0
  1406                           
  1407                           ; 1 bytes @ 0x1A
  1408   00007A                     	ds	1
  1409   00007B                     efgtoa@d:
  1410                           	callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x1B
  1413   00007B                     	ds	2
  1414   00007D                     efgtoa@m:
  1415                           	callstack 0
  1416   00007D                     Read_Sensors@raw_temp:
  1417                           	callstack 0
  1418                           
  1419                           ; 4 bytes @ 0x1D
  1420   00007D                     	ds	2
  1421   00007F                     efgtoa@e:
  1422                           	callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x1F
  1425   00007F                     	ds	2
  1426   000081                     efgtoa@w:
  1427                           	callstack 0
  1428   000081                     Read_Sensors@flame_voltage:
  1429                           	callstack 0
  1430                           
  1431                           ; 4 bytes @ 0x21
  1432   000081                     	ds	2
  1433   000083                     efgtoa@ou:
  1434                           	callstack 0
  1435                           
  1436                           ; 4 bytes @ 0x23
  1437   000083                     	ds	2
  1438   000085                     Read_Sensors@temp_factor:
  1439                           	callstack 0
  1440                           
  1441                           ; 4 bytes @ 0x25
  1442   000085                     	ds	2
  1443   000087                     efgtoa@i:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x27
  1447   000087                     	ds	2
  1448   000089                     efgtoa@h:
  1449                           	callstack 0
  1450   000089                     _Read_Sensors$1838:
  1451                           	callstack 0
  1452                           
  1453                           ; 4 bytes @ 0x29
  1454   000089                     	ds	4
  1455   00008D                     efgtoa@l:
  1456                           	callstack 0
  1457   00008D                     _Read_Sensors$1839:
  1458                           	callstack 0
  1459                           
  1460                           ; 4 bytes @ 0x2D
  1461   00008D                     	ds	4
  1462   000091                     efgtoa@sign:
  1463                           	callstack 0
  1464   000091                     _Read_Sensors$1840:
  1465                           	callstack 0
  1466                           
  1467                           ; 4 bytes @ 0x31
  1468   000091                     	ds	1
  1469   000092                     efgtoa@g:
  1470                           	callstack 0
  1471                           
  1472                           ; 4 bytes @ 0x32
  1473   000092                     	ds	3
  1474   000095                     Read_Sensors@temp_adc:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x35
  1478   000095                     	ds	1
  1479   000096                     efgtoa@n:
  1480                           	callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x36
  1483   000096                     	ds	1
  1484   000097                     Read_Sensors@flame_adc:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x37
  1488   000097                     	ds	1
  1489   000098                     efgtoa@u:
  1490                           	callstack 0
  1491                           
  1492                           ; 4 bytes @ 0x38
  1493   000098                     	ds	1
  1494   000099                     Read_Sensors@mq2_adc:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x39
  1498   000099                     	ds	2
  1499   00009B                     Read_Sensors@mq2_voltage:
  1500                           	callstack 0
  1501                           
  1502                           ; 4 bytes @ 0x3B
  1503   00009B                     	ds	1
  1504   00009C                     vfpfcnvrt@fp:
  1505                           	callstack 0
  1506                           
  1507                           ; 1 bytes @ 0x3C
  1508   00009C                     	ds	1
  1509   00009D                     vfpfcnvrt@fmt:
  1510                           	callstack 0
  1511                           
  1512                           ; 1 bytes @ 0x3D
  1513   00009D                     	ds	1
  1514   00009E                     vfpfcnvrt@ap:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x3E
  1518   00009E                     	ds	1
  1519   00009F                     Read_Sensors@rs_ro_ratio:
  1520                           	callstack 0
  1521                           
  1522                           ; 4 bytes @ 0x3F
  1523   00009F                     	ds	1
  1524   0000A0                     ??_vfpfcnvrt:
  1525                           
  1526                           ; 1 bytes @ 0x40
  1527   0000A0                     	ds	2
  1528   0000A2                     vfpfcnvrt@done:
  1529                           	callstack 0
  1530                           
  1531                           ; 1 bytes @ 0x42
  1532   0000A2                     	ds	1
  1533   0000A3                     Read_Sensors@current_pulses:
  1534                           	callstack 0
  1535   0000A3                     vfpfcnvrt@convarg:
  1536                           	callstack 0
  1537                           
  1538                           ; 4 bytes @ 0x43
  1539   0000A3                     	ds	2
  1540   0000A5                     Read_Sensors@pulses_diff:
  1541                           	callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x45
  1544   0000A5                     	ds	2
  1545   0000A7                     vfpfcnvrt@c:
  1546                           	callstack 0
  1547   0000A7                     Read_Sensors@Rs:
  1548                           	callstack 0
  1549                           
  1550                           ; 4 bytes @ 0x47
  1551   0000A7                     	ds	1
  1552   0000A8                     vfpfcnvrt@cp:
  1553                           	callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x48
  1556   0000A8                     	ds	2
  1557   0000AA                     ?_vfprintf:
  1558                           	callstack 0
  1559   0000AA                     vfprintf@fp:
  1560                           	callstack 0
  1561                           
  1562                           ; 1 bytes @ 0x4A
  1563   0000AA                     	ds	1
  1564   0000AB                     vfprintf@fmt:
  1565                           	callstack 0
  1566   0000AB                     Read_Sensors@raw_co:
  1567                           	callstack 0
  1568                           
  1569                           ; 4 bytes @ 0x4B
  1570   0000AB                     	ds	2
  1571   0000AD                     vfprintf@ap:
  1572                           	callstack 0
  1573                           
  1574                           ; 1 bytes @ 0x4D
  1575   0000AD                     	ds	1
  1576   0000AE                     vfprintf@cfmt:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x4E
  1580   0000AE                     	ds	2
  1581   0000B0                     ?_sprintf:
  1582                           	callstack 0
  1583   0000B0                     sprintf@s:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x50
  1587   0000B0                     	ds	2
  1588   0000B2                     sprintf@fmt:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x52
  1592   0000B2                     	ds	34
  1593   0000D4                     sprintf@ap:
  1594                           	callstack 0
  1595                           
  1596                           ; 1 bytes @ 0x74
  1597   0000D4                     	ds	1
  1598   0000D5                     sprintf@f:
  1599                           	callstack 0
  1600                           
  1601                           ; 11 bytes @ 0x75
  1602   0000D5                     	ds	11
  1603   0000E0                     Send_History_Event@event_type:
  1604                           	callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x80
  1607   0000E0                     	ds	2
  1608   0000E2                     Send_History_Event@extra_data:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x82
  1612   0000E2                     	ds	2
  1613   0000E4                     ??_Handle_Fire_Events:
  1614   0000E4                     ??_Handle_Test_Events:
  1615                           
  1616                           ; 1 bytes @ 0x84
  1617   0000E4                     	ds	2
  1618   0000E6                     Handle_Fire_Events@duration:
  1619                           	callstack 0
  1620                           
  1621                           ; 4 bytes @ 0x86
  1622   0000E6                     	ds	4
  1623   0000EA                     Handle_Fire_Events@water_used:
  1624                           	callstack 0
  1625                           
  1626                           ; 4 bytes @ 0x8A
  1627   0000EA                     	ds	4
  1628   0000EE                     ??_main:
  1629                           
  1630                           ; 1 bytes @ 0x8E
  1631   0000EE                     	ds	2
  1632                           
  1633                           	psect	cstackCOMRAM
  1634   000001                     __pcstackCOMRAM:
  1635                           	callstack 0
  1636   000001                     ?_ADC_Read:
  1637                           	callstack 0
  1638   000001                     ?___fpclassifyf:
  1639                           	callstack 0
  1640   000001                     ?___awmod:
  1641                           	callstack 0
  1642   000001                     ?_read_prec_or_width:
  1643                           	callstack 0
  1644   000001                     ?_labs:
  1645                           	callstack 0
  1646   000001                     ?_sqrtf:
  1647                           	callstack 0
  1648   000001                     ?___lldiv:
  1649                           	callstack 0
  1650   000001                     ?___aldiv:
  1651                           	callstack 0
  1652   000001                     ?___almod:
  1653                           	callstack 0
  1654   000001                     ?___flneg:
  1655                           	callstack 0
  1656   000001                     ?___fltol:
  1657                           	callstack 0
  1658   000001                     ?___llmod:
  1659                           	callstack 0
  1660   000001                     ?___xxtofl:
  1661                           	callstack 0
  1662   000001                     read_prec_or_width@fmt:
  1663                           	callstack 0
  1664   000001                     ___awmod@dividend:
  1665                           	callstack 0
  1666   000001                     memcpy@d1:
  1667                           	callstack 0
  1668   000001                     fputc@c:
  1669                           	callstack 0
  1670   000001                     strcpy@dest:
  1671                           	callstack 0
  1672   000001                     ___lldiv@dividend:
  1673                           	callstack 0
  1674   000001                     ___aldiv@dividend:
  1675                           	callstack 0
  1676   000001                     ___almod@dividend:
  1677                           	callstack 0
  1678   000001                     ___fleq@ff1:
  1679                           	callstack 0
  1680   000001                     ___flneg@f1:
  1681                           	callstack 0
  1682   000001                     ___fltol@f1:
  1683                           	callstack 0
  1684   000001                     ___llmod@dividend:
  1685                           	callstack 0
  1686   000001                     ___xxtofl@val:
  1687                           	callstack 0
  1688   000001                     ___fpclassifyf@x:
  1689                           	callstack 0
  1690   000001                     labs@a:
  1691                           	callstack 0
  1692   000001                     sqrtf@x:
  1693                           	callstack 0
  1694   000001                     ??_Handle_Commands:
  1695   000001                     
  1696                           ; 1 bytes @ 0x0
  1697   000001                     	ds	1
  1698   000002                     read_prec_or_width@ap:
  1699                           	callstack 0
  1700                           
  1701                           ; 1 bytes @ 0x1
  1702   000002                     	ds	1
  1703   000003                     fputc@fp:
  1704                           	callstack 0
  1705   000003                     ___awmod@divisor:
  1706                           	callstack 0
  1707   000003                     memcpy@s1:
  1708                           	callstack 0
  1709   000003                     strcpy@src:
  1710                           	callstack 0
  1711   000003                     ??_ADC_Read:
  1712   000003                     ??_read_prec_or_width:
  1713                           
  1714                           ; 1 bytes @ 0x2
  1715   000003                     	ds	1
  1716   000004                     ??_fputc:
  1717                           
  1718                           ; 1 bytes @ 0x3
  1719   000004                     	ds	1
  1720   000005                     Handle_Commands@cmd:
  1721                           	callstack 0
  1722   000005                     ADC_Read@channel:
  1723                           	callstack 0
  1724   000005                     ___awmod@counter:
  1725                           	callstack 0
  1726   000005                     read_prec_or_width@c:
  1727                           	callstack 0
  1728   000005                     memcpy@n:
  1729                           	callstack 0
  1730   000005                     strcpy@d:
  1731                           	callstack 0
  1732   000005                     ___lldiv@divisor:
  1733                           	callstack 0
  1734   000005                     ___aldiv@divisor:
  1735                           	callstack 0
  1736   000005                     ___almod@divisor:
  1737                           	callstack 0
  1738   000005                     ___fleq@ff2:
  1739                           	callstack 0
  1740   000005                     ___llmod@divisor:
  1741                           	callstack 0
  1742   000005                     ??___fpclassifyf:
  1743   000005                     ??_labs:
  1744   000005                     ??_sqrtf:
  1745   000005                     ??___fltol:
  1746   000005                     ??___xxtofl:
  1747                           
  1748                           ; 1 bytes @ 0x4
  1749   000005                     	ds	1
  1750   000006                     ___awmod@sign:
  1751                           	callstack 0
  1752   000006                     read_prec_or_width@n:
  1753                           	callstack 0
  1754                           
  1755                           ; 2 bytes @ 0x5
  1756   000006                     	ds	1
  1757   000007                     memcpy@tmp:
  1758                           	callstack 0
  1759   000007                     
  1760                           ; 1 bytes @ 0x6
  1761   000007                     	ds	1
  1762   000008                     memcpy@d:
  1763                           	callstack 0
  1764                           
  1765                           ; 2 bytes @ 0x7
  1766   000008                     	ds	1
  1767   000009                     ___aldiv@counter:
  1768                           	callstack 0
  1769   000009                     ___almod@counter:
  1770                           	callstack 0
  1771   000009                     ___fltol@sign1:
  1772                           	callstack 0
  1773   000009                     ___llmod@counter:
  1774                           	callstack 0
  1775   000009                     ___xxtofl@sign:
  1776                           	callstack 0
  1777   000009                     stoa@fp:
  1778                           	callstack 0
  1779   000009                     ___fpclassifyf@e:
  1780                           	callstack 0
  1781   000009                     fputs@s:
  1782                           	callstack 0
  1783   000009                     ___lldiv@quotient:
  1784                           	callstack 0
  1785   000009                     ??___fleq:
  1786   000009                     
  1787                           ; 1 bytes @ 0x8
  1788   000009                     	ds	1
  1789   00000A                     ___aldiv@sign:
  1790                           	callstack 0
  1791   00000A                     ___almod@sign:
  1792                           	callstack 0
  1793   00000A                     ___fltol@exp1:
  1794                           	callstack 0
  1795   00000A                     ___xxtofl@exp:
  1796                           	callstack 0
  1797   00000A                     stoa@s:
  1798                           	callstack 0
  1799   00000A                     memcpy@s:
  1800                           	callstack 0
  1801   00000A                     sqrtf@s:
  1802                           	callstack 0
  1803                           
  1804                           ; 4 bytes @ 0x9
  1805   00000A                     	ds	1
  1806   00000B                     ?_abs:
  1807                           	callstack 0
  1808   00000B                     fputs@fp:
  1809                           	callstack 0
  1810   00000B                     abs@a:
  1811                           	callstack 0
  1812   00000B                     ___aldiv@quotient:
  1813                           	callstack 0
  1814   00000B                     ___xxtofl@arg:
  1815                           	callstack 0
  1816   00000B                     ___fpclassifyf@u:
  1817                           	callstack 0
  1818                           
  1819                           ; 4 bytes @ 0xA
  1820   00000B                     	ds	1
  1821   00000C                     fputs@c:
  1822                           	callstack 0
  1823   00000C                     ??_stoa:
  1824                           
  1825                           ; 1 bytes @ 0xB
  1826   00000C                     	ds	1
  1827   00000D                     ___lldiv@counter:
  1828                           	callstack 0
  1829   00000D                     fputs@i:
  1830                           	callstack 0
  1831   00000D                     ??_abs:
  1832                           
  1833                           ; 1 bytes @ 0xC
  1834   00000D                     	ds	1
  1835   00000E                     stoa@p:
  1836                           	callstack 0
  1837   00000E                     sqrtf@i:
  1838                           	callstack 0
  1839                           
  1840                           ; 4 bytes @ 0xD
  1841   00000E                     	ds	1
  1842   00000F                     ?___flmul:
  1843                           	callstack 0
  1844   00000F                     pad@fp:
  1845                           	callstack 0
  1846   00000F                     ___flmul@b:
  1847                           	callstack 0
  1848                           
  1849                           ; 4 bytes @ 0xE
  1850   00000F                     	ds	1
  1851   000010                     pad@buf:
  1852                           	callstack 0
  1853   000010                     stoa@cp:
  1854                           	callstack 0
  1855                           
  1856                           ; 2 bytes @ 0xF
  1857   000010                     	ds	2
  1858   000012                     pad@p:
  1859                           	callstack 0
  1860   000012                     stoa@l:
  1861                           	callstack 0
  1862   000012                     sqrtf@q:
  1863                           	callstack 0
  1864                           
  1865                           ; 4 bytes @ 0x11
  1866   000012                     	ds	1
  1867   000013                     ___flmul@a:
  1868                           	callstack 0
  1869                           
  1870                           ; 4 bytes @ 0x12
  1871   000013                     	ds	1
  1872   000014                     ??_pad:
  1873                           
  1874                           ; 1 bytes @ 0x13
  1875   000014                     	ds	1
  1876   000015                     pad@i:
  1877                           	callstack 0
  1878                           
  1879                           ; 2 bytes @ 0x14
  1880   000015                     	ds	1
  1881   000016                     sqrtf@t:
  1882                           	callstack 0
  1883                           
  1884                           ; 4 bytes @ 0x15
  1885   000016                     	ds	1
  1886   000017                     dtoa@fp:
  1887                           	callstack 0
  1888   000017                     utoa@fp:
  1889                           	callstack 0
  1890   000017                     ??___flmul:
  1891                           
  1892                           ; 1 bytes @ 0x16
  1893   000017                     	ds	1
  1894   000018                     dtoa@d:
  1895                           	callstack 0
  1896   000018                     utoa@d:
  1897                           	callstack 0
  1898                           
  1899                           ; 4 bytes @ 0x17
  1900   000018                     	ds	2
  1901   00001A                     sqrtf@m:
  1902                           	callstack 0
  1903                           
  1904                           ; 4 bytes @ 0x19
  1905   00001A                     	ds	1
  1906   00001B                     ___flmul@sign:
  1907                           	callstack 0
  1908                           
  1909                           ; 1 bytes @ 0x1A
  1910   00001B                     	ds	1
  1911   00001C                     ___flmul@aexp:
  1912                           	callstack 0
  1913   00001C                     _dtoa$1348:
  1914                           	callstack 0
  1915   00001C                     utoa@w:
  1916                           	callstack 0
  1917   00001C                     
  1918                           ; 1 bytes @ 0x1B
  1919   00001C                     	ds	1
  1920   00001D                     ___flmul@grs:
  1921                           	callstack 0
  1922                           
  1923                           ; 4 bytes @ 0x1C
  1924   00001D                     	ds	1
  1925   00001E                     dtoa@w:
  1926                           	callstack 0
  1927   00001E                     utoa@p:
  1928                           	callstack 0
  1929   00001E                     sqrtf@r:
  1930                           	callstack 0
  1931                           
  1932                           ; 4 bytes @ 0x1D
  1933   00001E                     	ds	2
  1934   000020                     dtoa@p:
  1935                           	callstack 0
  1936   000020                     utoa@i:
  1937                           	callstack 0
  1938                           
  1939                           ; 2 bytes @ 0x1F
  1940   000020                     	ds	1
  1941   000021                     ___flmul@bexp:
  1942                           	callstack 0
  1943                           
  1944                           ; 1 bytes @ 0x20
  1945   000021                     	ds	1
  1946   000022                     dtoa@s:
  1947                           	callstack 0
  1948   000022                     ___flmul@prod:
  1949                           	callstack 0
  1950   000022                     sqrtf@ix:
  1951                           	callstack 0
  1952                           
  1953                           ; 4 bytes @ 0x21
  1954   000022                     	ds	1
  1955   000023                     dtoa@i:
  1956                           	callstack 0
  1957                           
  1958                           ; 2 bytes @ 0x22
  1959   000023                     	ds	3
  1960   000026                     ___flmul@temp:
  1961                           	callstack 0
  1962                           
  1963                           ; 2 bytes @ 0x25
  1964   000026                     	ds	2
  1965   000028                     ?___fldiv:
  1966                           	callstack 0
  1967   000028                     ?_scalbnf:
  1968                           	callstack 0
  1969   000028                     ___fldiv@b:
  1970                           	callstack 0
  1971   000028                     scalbnf@x:
  1972                           	callstack 0
  1973                           
  1974                           ; 4 bytes @ 0x27
  1975   000028                     	ds	4
  1976   00002C                     scalbnf@n:
  1977                           	callstack 0
  1978   00002C                     ___fldiv@a:
  1979                           	callstack 0
  1980                           
  1981                           ; 4 bytes @ 0x2B
  1982   00002C                     	ds	2
  1983   00002E                     ??_scalbnf:
  1984                           
  1985                           ; 1 bytes @ 0x2D
  1986   00002E                     	ds	2
  1987   000030                     ??___fldiv:
  1988                           
  1989                           ; 1 bytes @ 0x2F
  1990   000030                     	ds	2
  1991   000032                     scalbnf@u:
  1992                           	callstack 0
  1993                           
  1994                           ; 4 bytes @ 0x31
  1995   000032                     	ds	2
  1996   000034                     ___fldiv@rem:
  1997                           	callstack 0
  1998                           
  1999                           ; 4 bytes @ 0x33
  2000   000034                     	ds	2
  2001   000036                     scalbnf@y:
  2002                           	callstack 0
  2003                           
  2004                           ; 4 bytes @ 0x35
  2005   000036                     	ds	2
  2006   000038                     ___fldiv@sign:
  2007                           	callstack 0
  2008                           
  2009                           ; 1 bytes @ 0x37
  2010   000038                     	ds	1
  2011   000039                     ___fldiv@new_exp:
  2012                           	callstack 0
  2013                           
  2014                           ; 2 bytes @ 0x38
  2015   000039                     	ds	2
  2016   00003B                     ___fldiv@grs:
  2017                           	callstack 0
  2018                           
  2019                           ; 4 bytes @ 0x3A
  2020   00003B                     	ds	4
  2021   00003F                     ___fldiv@bexp:
  2022                           	callstack 0
  2023                           
  2024                           ; 1 bytes @ 0x3E
  2025   00003F                     	ds	1
  2026   000040                     ___fldiv@aexp:
  2027                           	callstack 0
  2028                           
  2029                           ; 1 bytes @ 0x3F
  2030   000040                     	ds	1
  2031   000041                     ?___fladd:
  2032                           	callstack 0
  2033   000041                     ?_floorf:
  2034                           	callstack 0
  2035   000041                     ___fladd@b:
  2036                           	callstack 0
  2037   000041                     floorf@x:
  2038                           	callstack 0
  2039                           
  2040                           ; 4 bytes @ 0x40
  2041   000041                     	ds	4
  2042   000045                     ___fladd@a:
  2043                           	callstack 0
  2044   000045                     ??_floorf:
  2045                           
  2046                           ; 1 bytes @ 0x44
  2047   000045                     	ds	4
  2048   000049                     ??___fladd:
  2049                           
  2050                           ; 1 bytes @ 0x48
  2051   000049                     	ds	2
  2052   00004B                     floorf@m:
  2053                           	callstack 0
  2054                           
  2055                           ; 4 bytes @ 0x4A
  2056   00004B                     	ds	2
  2057   00004D                     ___fladd@signs:
  2058                           	callstack 0
  2059                           
  2060                           ; 1 bytes @ 0x4C
  2061   00004D                     	ds	1
  2062   00004E                     ___fladd@aexp:
  2063                           	callstack 0
  2064                           
  2065                           ; 1 bytes @ 0x4D
  2066   00004E                     	ds	1
  2067   00004F                     ___fladd@bexp:
  2068                           	callstack 0
  2069   00004F                     floorf@e:
  2070                           	callstack 0
  2071                           
  2072                           ; 2 bytes @ 0x4E
  2073   00004F                     	ds	1
  2074   000050                     ___fladd@grs:
  2075                           	callstack 0
  2076                           
  2077                           ; 1 bytes @ 0x4F
  2078   000050                     	ds	1
  2079   000051                     ?_Apply_Filter:
  2080                           	callstack 0
  2081   000051                     ?___flsub:
  2082                           	callstack 0
  2083   000051                     Apply_Filter@new_value:
  2084                           	callstack 0
  2085   000051                     ___flsub@b:
  2086                           	callstack 0
  2087   000051                     floorf@u:
  2088                           	callstack 0
  2089                           
  2090                           ; 4 bytes @ 0x50
  2091   000051                     	ds	4
  2092   000055                     Apply_Filter@samples:
  2093                           	callstack 0
  2094   000055                     ___flsub@a:
  2095                           	callstack 0
  2096                           
  2097                           ; 4 bytes @ 0x54
  2098   000055                     	ds	2
  2099   000057                     ??_Apply_Filter:
  2100                           
  2101                           ; 1 bytes @ 0x56
  2102   000057                     	ds	2
  2103   000059                     ??___flge:
  2104                           
  2105                           ; 1 bytes @ 0x58
  2106   000059                     	ds	4
  2107   00005D                     _Update_Actuators$755:
  2108                           	callstack 0
  2109   00005D                     
  2110                           ; 1 bytes @ 0x5C
  2111   00005D                     	ds	1
  2112                           
  2113 ;;
  2114 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2115 ;;
  2116 ;; *************** function _main *****************
  2117 ;; Defined at:
  2118 ;;		line 107 in file "newmain.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;		None
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  voltage         4   10[BANK4 ] float 
  2123 ;;  adc_value       2    6[BANK4 ] unsigned int 
  2124 ;;  adc_value       2    4[BANK4 ] unsigned int 
  2125 ;;  i               2   16[BANK4 ] int 
  2126 ;;  i               2   14[BANK4 ] int 
  2127 ;;  cycle_count     2    8[BANK4 ] unsigned int 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0      18       0       0       0
  2139 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2140 ;;      Totals:         0       2       0       0       0      18       0       0       0
  2141 ;;Total ram usage:       20 bytes
  2142 ;; Hardware stack levels required when called: 11
  2143 ;; This function calls:
  2144 ;;		_ADC_Init
  2145 ;;		_ADC_Read
  2146 ;;		_Handle_Commands
  2147 ;;		_Handle_Fire_Events
  2148 ;;		_Handle_Shutdown_Events
  2149 ;;		_Handle_Test_Events
  2150 ;;		_Interrupt_Init
  2151 ;;		_Read_Sensors
  2152 ;;		_Send_Data
  2153 ;;		_UART_Init
  2154 ;;		_Update_Actuators
  2155 ;;		___awmod
  2156 ;;		___fladd
  2157 ;;		___fldiv
  2158 ;;		___flmul
  2159 ;;		___flsub
  2160 ;;		___xxtofl
  2161 ;; This function is called by:
  2162 ;;		Startup code after reset
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text0
  2167   004C60                     __ptext0:
  2168                           	callstack 0
  2169   004C60                     _main:
  2170                           	callstack 20
  2171   004C60                     
  2172                           ;newmain.c: 109:     OSCCON = 0x70;
  2173   004C60  0E70               	movlw	112
  2174   004C62  6ED3               	movwf	211,c	;volatile
  2175                           
  2176                           ;newmain.c: 110:     TRISB = 0x02;
  2177   004C64  0E02               	movlw	2
  2178   004C66  6E93               	movwf	147,c	;volatile
  2179   004C68                     
  2180                           ;newmain.c: 111:     PORTB = 0x00;
  2181   004C68  6A81               	clrf	129,c	;volatile
  2182   004C6A                     
  2183                           ;newmain.c: 112:     PORTBbits.RB5 = 1;
  2184   004C6A  8A81               	bsf	129,5,c	;volatile
  2185   004C6C                     
  2186                           ;newmain.c: 113:     PORTBbits.RB0 = 0;
  2187   004C6C  9081               	bcf	129,0,c	;volatile
  2188   004C6E                     
  2189                           ;newmain.c: 115:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  2190   004C6E  0E15               	movlw	21
  2191   004C70  0100               	movlb	0	; () banked
  2192   004C72  6FEF               	movwf	(??_main+1)& (0+255),b
  2193   004C74  0E4B               	movlw	75
  2194   004C76  6FEE               	movwf	??_main& (0+255),b
  2195   004C78  0EBE               	movlw	190
  2196   004C7A                     u10807:
  2197   004C7A  2EE8               	decfsz	wreg,f,c
  2198   004C7C  D7FE               	bra	u10807
  2199   004C7E  2FEE               	decfsz	??_main& (0+255),f,b
  2200   004C80  D7FC               	bra	u10807
  2201   004C82  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2202   004C84  D7FA               	bra	u10807
  2203   004C86  0000               	nop	
  2204   004C88                     
  2205                           ;newmain.c: 116:     UART_Init();
  2206   004C88  EC95  F037         	call	_UART_Init	;wreg free
  2207   004C8C                     
  2208                           ;newmain.c: 117:     ADC_Init();
  2209   004C8C  EC9F  F037         	call	_ADC_Init	;wreg free
  2210   004C90                     
  2211                           ;newmain.c: 118:     Interrupt_Init();
  2212   004C90  ECA8  F037         	call	_Interrupt_Init	;wreg free
  2213   004C94                     
  2214                           ;newmain.c: 121:     for(int i = 0; i < 50; i++) {
  2215   004C94  0E00               	movlw	0
  2216   004C96  0104               	movlb	4	; () banked
  2217   004C98  6F0F               	movwf	(main@i+1)& (0+255),b
  2218   004C9A  0E00               	movlw	0
  2219   004C9C  6F0E               	movwf	main@i& (0+255),b
  2220   004C9E                     l8120:
  2221                           
  2222                           ; BSR set to: 4
  2223                           ;newmain.c: 122:         unsigned int adc_value = ADC_Read(1);
  2224   004C9E  0E01               	movlw	1
  2225   004CA0  EC0D  F037         	call	_ADC_Read
  2226   004CA4  C001  F404         	movff	?_ADC_Read,main@adc_value
  2227   004CA8  C002  F405         	movff	?_ADC_Read+1,main@adc_value+1
  2228   004CAC                     
  2229                           ;newmain.c: 123:         flame_base_voltage += (adc_value * 5.0) / 1024.0;
  2230   004CAC  C35C  F041         	movff	_flame_base_voltage,___fladd@b
  2231   004CB0  C35D  F042         	movff	_flame_base_voltage+1,___fladd@b+1
  2232   004CB4  C35E  F043         	movff	_flame_base_voltage+2,___fladd@b+2
  2233   004CB8  C35F  F044         	movff	_flame_base_voltage+3,___fladd@b+3
  2234   004CBC  0E00               	movlw	0
  2235   004CBE  6E2C               	movwf	___fldiv@a^0,c
  2236   004CC0  0E00               	movlw	0
  2237   004CC2  6E2D               	movwf	(___fldiv@a+1)^0,c
  2238   004CC4  0E80               	movlw	128
  2239   004CC6  6E2E               	movwf	(___fldiv@a+2)^0,c
  2240   004CC8  0E44               	movlw	68
  2241   004CCA  6E2F               	movwf	(___fldiv@a+3)^0,c
  2242   004CCC  0E00               	movlw	0
  2243   004CCE  6E13               	movwf	___flmul@a^0,c
  2244   004CD0  0E00               	movlw	0
  2245   004CD2  6E14               	movwf	(___flmul@a+1)^0,c
  2246   004CD4  0EA0               	movlw	160
  2247   004CD6  6E15               	movwf	(___flmul@a+2)^0,c
  2248   004CD8  0E40               	movlw	64
  2249   004CDA  6E16               	movwf	(___flmul@a+3)^0,c
  2250   004CDC  C404  F001         	movff	main@adc_value,___xxtofl@val
  2251   004CE0  C405  F002         	movff	main@adc_value+1,___xxtofl@val+1
  2252   004CE4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2253   004CE6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2254   004CE8  0E00               	movlw	0
  2255   004CEA  EC5B  F02B         	call	___xxtofl
  2256   004CEE  C001  F00F         	movff	?___xxtofl,___flmul@b
  2257   004CF2  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2258   004CF6  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2259   004CFA  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2260   004CFE  EC66  F020         	call	___flmul	;wreg free
  2261   004D02  C00F  F028         	movff	?___flmul,___fldiv@b
  2262   004D06  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2263   004D0A  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2264   004D0E  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2265   004D12  EC68  F024         	call	___fldiv	;wreg free
  2266   004D16  C028  F045         	movff	?___fldiv,___fladd@a
  2267   004D1A  C029  F046         	movff	?___fldiv+1,___fladd@a+1
  2268   004D1E  C02A  F047         	movff	?___fldiv+2,___fladd@a+2
  2269   004D22  C02B  F048         	movff	?___fldiv+3,___fladd@a+3
  2270   004D26  EC0B  F01E         	call	___fladd	;wreg free
  2271   004D2A  C041  F35C         	movff	?___fladd,_flame_base_voltage
  2272   004D2E  C042  F35D         	movff	?___fladd+1,_flame_base_voltage+1
  2273   004D32  C043  F35E         	movff	?___fladd+2,_flame_base_voltage+2
  2274   004D36  C044  F35F         	movff	?___fladd+3,_flame_base_voltage+3
  2275   004D3A                     
  2276                           ;newmain.c: 124:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2277   004D3A  0E02               	movlw	2
  2278   004D3C  0100               	movlb	0	; () banked
  2279   004D3E  6FEF               	movwf	(??_main+1)& (0+255),b
  2280   004D40  0E04               	movlw	4
  2281   004D42  6FEE               	movwf	??_main& (0+255),b
  2282   004D44  0EBA               	movlw	186
  2283   004D46                     u10817:
  2284   004D46  2EE8               	decfsz	wreg,f,c
  2285   004D48  D7FE               	bra	u10817
  2286   004D4A  2FEE               	decfsz	??_main& (0+255),f,b
  2287   004D4C  D7FC               	bra	u10817
  2288   004D4E  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2289   004D50  D7FA               	bra	u10817
  2290   004D52  0000               	nop	
  2291   004D54                     
  2292                           ;newmain.c: 125:     }
  2293   004D54  0104               	movlb	4	; () banked
  2294   004D56  4B0E               	infsnz	main@i& (0+255),f,b
  2295   004D58  2B0F               	incf	(main@i+1)& (0+255),f,b
  2296   004D5A                     
  2297                           ; BSR set to: 4
  2298   004D5A  BF0F               	btfsc	(main@i+1)& (0+255),7,b
  2299   004D5C  EFB9  F026         	goto	u10751
  2300   004D60  510F               	movf	(main@i+1)& (0+255),w,b
  2301   004D62  E109               	bnz	u10750
  2302   004D64  0E32               	movlw	50
  2303   004D66  5D0E               	subwf	main@i& (0+255),w,b
  2304   004D68  A0D8               	btfss	status,0,c
  2305   004D6A  EFB9  F026         	goto	u10751
  2306   004D6E  EFBB  F026         	goto	u10750
  2307   004D72                     u10751:
  2308   004D72  EF4F  F026         	goto	l8120
  2309   004D76                     u10750:
  2310   004D76                     
  2311                           ; BSR set to: 4
  2312                           ;newmain.c: 126:     flame_base_voltage /= 50.0;
  2313   004D76  C35C  F028         	movff	_flame_base_voltage,___fldiv@b
  2314   004D7A  C35D  F029         	movff	_flame_base_voltage+1,___fldiv@b+1
  2315   004D7E  C35E  F02A         	movff	_flame_base_voltage+2,___fldiv@b+2
  2316   004D82  C35F  F02B         	movff	_flame_base_voltage+3,___fldiv@b+3
  2317   004D86  0E00               	movlw	0
  2318   004D88  6E2C               	movwf	___fldiv@a^0,c
  2319   004D8A  0E00               	movlw	0
  2320   004D8C  6E2D               	movwf	(___fldiv@a+1)^0,c
  2321   004D8E  0E48               	movlw	72
  2322   004D90  6E2E               	movwf	(___fldiv@a+2)^0,c
  2323   004D92  0E42               	movlw	66
  2324   004D94  6E2F               	movwf	(___fldiv@a+3)^0,c
  2325   004D96  EC68  F024         	call	___fldiv	;wreg free
  2326   004D9A  C028  F35C         	movff	?___fldiv,_flame_base_voltage
  2327   004D9E  C029  F35D         	movff	?___fldiv+1,_flame_base_voltage+1
  2328   004DA2  C02A  F35E         	movff	?___fldiv+2,_flame_base_voltage+2
  2329   004DA6  C02B  F35F         	movff	?___fldiv+3,_flame_base_voltage+3
  2330   004DAA                     
  2331                           ;newmain.c: 129:     for(int i = 0; i < 50; i++) {
  2332   004DAA  0E00               	movlw	0
  2333   004DAC  0104               	movlb	4	; () banked
  2334   004DAE  6F11               	movwf	(main@i_676+1)& (0+255),b
  2335   004DB0  0E00               	movlw	0
  2336   004DB2  6F10               	movwf	main@i_676& (0+255),b
  2337   004DB4                     l8138:
  2338                           
  2339                           ; BSR set to: 4
  2340                           ;newmain.c: 130:         unsigned int adc_value = ADC_Read(2);
  2341   004DB4  0E02               	movlw	2
  2342   004DB6  EC0D  F037         	call	_ADC_Read
  2343   004DBA  C001  F406         	movff	?_ADC_Read,main@adc_value_677
  2344   004DBE  C002  F407         	movff	?_ADC_Read+1,main@adc_value_677+1
  2345   004DC2                     
  2346                           ;newmain.c: 131:         float voltage = (adc_value * 5.0) / 1024.0;
  2347   004DC2  0E00               	movlw	0
  2348   004DC4  6E13               	movwf	___flmul@a^0,c
  2349   004DC6  0E00               	movlw	0
  2350   004DC8  6E14               	movwf	(___flmul@a+1)^0,c
  2351   004DCA  0EA0               	movlw	160
  2352   004DCC  6E15               	movwf	(___flmul@a+2)^0,c
  2353   004DCE  0E40               	movlw	64
  2354   004DD0  6E16               	movwf	(___flmul@a+3)^0,c
  2355   004DD2  C406  F001         	movff	main@adc_value_677,___xxtofl@val
  2356   004DD6  C407  F002         	movff	main@adc_value_677+1,___xxtofl@val+1
  2357   004DDA  6A03               	clrf	(___xxtofl@val+2)^0,c
  2358   004DDC  6A04               	clrf	(___xxtofl@val+3)^0,c
  2359   004DDE  0E00               	movlw	0
  2360   004DE0  EC5B  F02B         	call	___xxtofl
  2361   004DE4  C001  F00F         	movff	?___xxtofl,___flmul@b
  2362   004DE8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2363   004DEC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2364   004DF0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2365   004DF4  EC66  F020         	call	___flmul	;wreg free
  2366   004DF8  C00F  F028         	movff	?___flmul,___fldiv@b
  2367   004DFC  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2368   004E00  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2369   004E04  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2370   004E08  0E00               	movlw	0
  2371   004E0A  6E2C               	movwf	___fldiv@a^0,c
  2372   004E0C  0E00               	movlw	0
  2373   004E0E  6E2D               	movwf	(___fldiv@a+1)^0,c
  2374   004E10  0E80               	movlw	128
  2375   004E12  6E2E               	movwf	(___fldiv@a+2)^0,c
  2376   004E14  0E44               	movlw	68
  2377   004E16  6E2F               	movwf	(___fldiv@a+3)^0,c
  2378   004E18  EC68  F024         	call	___fldiv	;wreg free
  2379   004E1C  C028  F40A         	movff	?___fldiv,main@voltage
  2380   004E20  C029  F40B         	movff	?___fldiv+1,main@voltage+1
  2381   004E24  C02A  F40C         	movff	?___fldiv+2,main@voltage+2
  2382   004E28  C02B  F40D         	movff	?___fldiv+3,main@voltage+3
  2383   004E2C                     
  2384                           ;newmain.c: 132:         MQ2_Ro += (5.0 - voltage) / voltage;
  2385   004E2C  C40A  F02C         	movff	main@voltage,___fldiv@a
  2386   004E30  C40B  F02D         	movff	main@voltage+1,___fldiv@a+1
  2387   004E34  C40C  F02E         	movff	main@voltage+2,___fldiv@a+2
  2388   004E38  C40D  F02F         	movff	main@voltage+3,___fldiv@a+3
  2389   004E3C  C40A  F055         	movff	main@voltage,___flsub@a
  2390   004E40  C40B  F056         	movff	main@voltage+1,___flsub@a+1
  2391   004E44  C40C  F057         	movff	main@voltage+2,___flsub@a+2
  2392   004E48  C40D  F058         	movff	main@voltage+3,___flsub@a+3
  2393   004E4C  0E00               	movlw	0
  2394   004E4E  6E51               	movwf	___flsub@b^0,c
  2395   004E50  0E00               	movlw	0
  2396   004E52  6E52               	movwf	(___flsub@b+1)^0,c
  2397   004E54  0EA0               	movlw	160
  2398   004E56  6E53               	movwf	(___flsub@b+2)^0,c
  2399   004E58  0E40               	movlw	64
  2400   004E5A  6E54               	movwf	(___flsub@b+3)^0,c
  2401   004E5C  ECA8  F036         	call	___flsub	;wreg free
  2402   004E60  C051  F028         	movff	?___flsub,___fldiv@b
  2403   004E64  C052  F029         	movff	?___flsub+1,___fldiv@b+1
  2404   004E68  C053  F02A         	movff	?___flsub+2,___fldiv@b+2
  2405   004E6C  C054  F02B         	movff	?___flsub+3,___fldiv@b+3
  2406   004E70  EC68  F024         	call	___fldiv	;wreg free
  2407   004E74  C028  F400         	movff	?___fldiv,_main$1837
  2408   004E78  C029  F401         	movff	?___fldiv+1,_main$1837+1
  2409   004E7C  C02A  F402         	movff	?___fldiv+2,_main$1837+2
  2410   004E80  C02B  F403         	movff	?___fldiv+3,_main$1837+3
  2411   004E84                     
  2412                           ;newmain.c: 132:         MQ2_Ro += (5.0 - voltage) / voltage;
  2413   004E84  C3DE  F041         	movff	_MQ2_Ro,___fladd@b
  2414   004E88  C3DF  F042         	movff	_MQ2_Ro+1,___fladd@b+1
  2415   004E8C  C3E0  F043         	movff	_MQ2_Ro+2,___fladd@b+2
  2416   004E90  C3E1  F044         	movff	_MQ2_Ro+3,___fladd@b+3
  2417   004E94  C400  F045         	movff	_main$1837,___fladd@a
  2418   004E98  C401  F046         	movff	_main$1837+1,___fladd@a+1
  2419   004E9C  C402  F047         	movff	_main$1837+2,___fladd@a+2
  2420   004EA0  C403  F048         	movff	_main$1837+3,___fladd@a+3
  2421   004EA4  EC0B  F01E         	call	___fladd	;wreg free
  2422   004EA8  C041  F3DE         	movff	?___fladd,_MQ2_Ro
  2423   004EAC  C042  F3DF         	movff	?___fladd+1,_MQ2_Ro+1
  2424   004EB0  C043  F3E0         	movff	?___fladd+2,_MQ2_Ro+2
  2425   004EB4  C044  F3E1         	movff	?___fladd+3,_MQ2_Ro+3
  2426   004EB8                     
  2427                           ;newmain.c: 133:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2428   004EB8  0E02               	movlw	2
  2429   004EBA  0100               	movlb	0	; () banked
  2430   004EBC  6FEF               	movwf	(??_main+1)& (0+255),b
  2431   004EBE  0E04               	movlw	4
  2432   004EC0  6FEE               	movwf	??_main& (0+255),b
  2433   004EC2  0EBA               	movlw	186
  2434   004EC4                     u10827:
  2435   004EC4  2EE8               	decfsz	wreg,f,c
  2436   004EC6  D7FE               	bra	u10827
  2437   004EC8  2FEE               	decfsz	??_main& (0+255),f,b
  2438   004ECA  D7FC               	bra	u10827
  2439   004ECC  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2440   004ECE  D7FA               	bra	u10827
  2441   004ED0  0000               	nop	
  2442   004ED2                     
  2443                           ;newmain.c: 134:     }
  2444   004ED2  0104               	movlb	4	; () banked
  2445   004ED4  4B10               	infsnz	main@i_676& (0+255),f,b
  2446   004ED6  2B11               	incf	(main@i_676+1)& (0+255),f,b
  2447   004ED8                     
  2448                           ; BSR set to: 4
  2449   004ED8  BF11               	btfsc	(main@i_676+1)& (0+255),7,b
  2450   004EDA  EF78  F027         	goto	u10761
  2451   004EDE  5111               	movf	(main@i_676+1)& (0+255),w,b
  2452   004EE0  E109               	bnz	u10760
  2453   004EE2  0E32               	movlw	50
  2454   004EE4  5D10               	subwf	main@i_676& (0+255),w,b
  2455   004EE6  A0D8               	btfss	status,0,c
  2456   004EE8  EF78  F027         	goto	u10761
  2457   004EEC  EF7A  F027         	goto	u10760
  2458   004EF0                     u10761:
  2459   004EF0  EFDA  F026         	goto	l8138
  2460   004EF4                     u10760:
  2461   004EF4                     
  2462                           ; BSR set to: 4
  2463                           ;newmain.c: 135:     MQ2_Ro /= 50.0;
  2464   004EF4  C3DE  F028         	movff	_MQ2_Ro,___fldiv@b
  2465   004EF8  C3DF  F029         	movff	_MQ2_Ro+1,___fldiv@b+1
  2466   004EFC  C3E0  F02A         	movff	_MQ2_Ro+2,___fldiv@b+2
  2467   004F00  C3E1  F02B         	movff	_MQ2_Ro+3,___fldiv@b+3
  2468   004F04  0E00               	movlw	0
  2469   004F06  6E2C               	movwf	___fldiv@a^0,c
  2470   004F08  0E00               	movlw	0
  2471   004F0A  6E2D               	movwf	(___fldiv@a+1)^0,c
  2472   004F0C  0E48               	movlw	72
  2473   004F0E  6E2E               	movwf	(___fldiv@a+2)^0,c
  2474   004F10  0E42               	movlw	66
  2475   004F12  6E2F               	movwf	(___fldiv@a+3)^0,c
  2476   004F14  EC68  F024         	call	___fldiv	;wreg free
  2477   004F18  C028  F3DE         	movff	?___fldiv,_MQ2_Ro
  2478   004F1C  C029  F3DF         	movff	?___fldiv+1,_MQ2_Ro+1
  2479   004F20  C02A  F3E0         	movff	?___fldiv+2,_MQ2_Ro+2
  2480   004F24  C02B  F3E1         	movff	?___fldiv+3,_MQ2_Ro+3
  2481   004F28                     
  2482                           ;newmain.c: 137:     unsigned int cycle_count = 0;
  2483   004F28  0E00               	movlw	0
  2484   004F2A  0104               	movlb	4	; () banked
  2485   004F2C  6F09               	movwf	(main@cycle_count+1)& (0+255),b
  2486   004F2E  0E00               	movlw	0
  2487   004F30  6F08               	movwf	main@cycle_count& (0+255),b
  2488   004F32                     l8156:
  2489                           
  2490                           ;newmain.c: 141:         system_millis += 125;
  2491   004F32  0E7D               	movlw	125
  2492   004F34  0102               	movlb	2	; () banked
  2493   004F36  27FA               	addwf	_system_millis& (0+255),f,b
  2494   004F38  0E00               	movlw	0
  2495   004F3A  23FB               	addwfc	(_system_millis+1)& (0+255),f,b
  2496   004F3C  23FC               	addwfc	(_system_millis+2)& (0+255),f,b
  2497   004F3E  23FD               	addwfc	(_system_millis+3)& (0+255),f,b
  2498   004F40                     
  2499                           ; BSR set to: 2
  2500                           ;newmain.c: 143:         Handle_Commands();
  2501   004F40  EC07  F02D         	call	_Handle_Commands	;wreg free
  2502   004F44                     
  2503                           ;newmain.c: 145:         if(!shutdown_system) {
  2504   004F44  0103               	movlb	3	; () banked
  2505   004F46  5173               	movf	_shutdown_system& (0+255),w,b
  2506   004F48  A4D8               	btfss	status,2,c
  2507   004F4A  EFA9  F027         	goto	u10771
  2508   004F4E  EFAB  F027         	goto	u10770
  2509   004F52                     u10771:
  2510   004F52  EFB7  F027         	goto	l8168
  2511   004F56                     u10770:
  2512   004F56                     
  2513                           ; BSR set to: 3
  2514                           ;newmain.c: 146:             Read_Sensors();
  2515   004F56  EC5C  F017         	call	_Read_Sensors	;wreg free
  2516   004F5A                     
  2517                           ;newmain.c: 147:             if(!trigger_test) {
  2518   004F5A  505E               	movf	_trigger_test^0,w,c
  2519   004F5C  A4D8               	btfss	status,2,c
  2520   004F5E  EFB3  F027         	goto	u10781
  2521   004F62  EFB5  F027         	goto	u10780
  2522   004F66                     u10781:
  2523   004F66  EFB7  F027         	goto	l8168
  2524   004F6A                     u10780:
  2525   004F6A                     
  2526                           ;newmain.c: 148:                 Update_Actuators();
  2527   004F6A  ECD2  F02D         	call	_Update_Actuators	;wreg free
  2528   004F6E                     l8168:
  2529                           
  2530                           ;newmain.c: 152:         Handle_Fire_Events();
  2531   004F6E  ECF3  F027         	call	_Handle_Fire_Events	;wreg free
  2532   004F72                     
  2533                           ;newmain.c: 153:         Handle_Test_Events();
  2534   004F72  EC81  F030         	call	_Handle_Test_Events	;wreg free
  2535   004F76                     
  2536                           ;newmain.c: 154:         Handle_Shutdown_Events();
  2537   004F76  EC9E  F035         	call	_Handle_Shutdown_Events	;wreg free
  2538   004F7A                     
  2539                           ;newmain.c: 157:         if(cycle_count >= 2) {
  2540   004F7A  0104               	movlb	4	; () banked
  2541   004F7C  5109               	movf	(main@cycle_count+1)& (0+255),w,b
  2542   004F7E  E109               	bnz	u10790
  2543   004F80  0E02               	movlw	2
  2544   004F82  5D08               	subwf	main@cycle_count& (0+255),w,b
  2545   004F84  A0D8               	btfss	status,0,c
  2546   004F86  EFC7  F027         	goto	u10791
  2547   004F8A  EFC9  F027         	goto	u10790
  2548   004F8E                     u10791:
  2549   004F8E  EFD0  F027         	goto	l8180
  2550   004F92                     u10790:
  2551   004F92                     
  2552                           ; BSR set to: 4
  2553                           ;newmain.c: 158:             Send_Data();
  2554   004F92  EC77  F032         	call	_Send_Data	;wreg free
  2555   004F96                     
  2556                           ;newmain.c: 159:             cycle_count = 0;
  2557   004F96  0E00               	movlw	0
  2558   004F98  0104               	movlb	4	; () banked
  2559   004F9A  6F09               	movwf	(main@cycle_count+1)& (0+255),b
  2560   004F9C  0E00               	movlw	0
  2561   004F9E  6F08               	movwf	main@cycle_count& (0+255),b
  2562   004FA0                     l8180:
  2563                           
  2564                           ; BSR set to: 4
  2565                           ;newmain.c: 162:         cycle_count++;
  2566   004FA0  4B08               	infsnz	main@cycle_count& (0+255),f,b
  2567   004FA2  2B09               	incf	(main@cycle_count+1)& (0+255),f,b
  2568   004FA4                     
  2569                           ; BSR set to: 4
  2570                           ;newmain.c: 163:         sample_index = (sample_index + 1) % 5;
  2571   004FA4  0E01               	movlw	1
  2572   004FA6  0103               	movlb	3	; () banked
  2573   004FA8  2574               	addwf	_sample_index& (0+255),w,b
  2574   004FAA  6E01               	movwf	___awmod@dividend^0,c
  2575   004FAC  6A02               	clrf	(___awmod@dividend+1)^0,c
  2576   004FAE  0E00               	movlw	0
  2577   004FB0  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2578   004FB2  0E00               	movlw	0
  2579   004FB4  6E04               	movwf	(___awmod@divisor+1)^0,c
  2580   004FB6  0E05               	movlw	5
  2581   004FB8  6E03               	movwf	___awmod@divisor^0,c
  2582   004FBA  ECBC  F033         	call	___awmod	;wreg free
  2583   004FBE  5001               	movf	?___awmod^0,w,c
  2584   004FC0  0103               	movlb	3	; () banked
  2585   004FC2  6F74               	movwf	_sample_index& (0+255),b
  2586   004FC4                     
  2587                           ; BSR set to: 3
  2588                           ;newmain.c: 164:         _delay((unsigned long)((125)*(8000000/4000.0)));
  2589   004FC4  0E02               	movlw	2
  2590   004FC6  0100               	movlb	0	; () banked
  2591   004FC8  6FEF               	movwf	(??_main+1)& (0+255),b
  2592   004FCA  0E45               	movlw	69
  2593   004FCC  6FEE               	movwf	??_main& (0+255),b
  2594   004FCE  0EA9               	movlw	169
  2595   004FD0                     u10837:
  2596   004FD0  2EE8               	decfsz	wreg,f,c
  2597   004FD2  D7FE               	bra	u10837
  2598   004FD4  2FEE               	decfsz	??_main& (0+255),f,b
  2599   004FD6  D7FC               	bra	u10837
  2600   004FD8  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2601   004FDA  D7FA               	bra	u10837
  2602   004FDC  D000               	nop2	
  2603   004FDE  EF99  F027         	goto	l8156
  2604   004FE2  EF07  F000         	goto	start
  2605   004FE6                     __end_of_main:
  2606                           	callstack 0
  2607                           
  2608 ;; *************** function ___awmod *****************
  2609 ;; Defined at:
  2610 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  dividend        2    0[COMRAM] int 
  2613 ;;  divisor         2    2[COMRAM] int 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  sign            1    5[COMRAM] unsigned char 
  2616 ;;  counter         1    4[COMRAM] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  2    0[COMRAM] int 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2626 ;;      Params:         4       0       0       0       0       0       0       0       0
  2627 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2629 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2630 ;;Total ram usage:        6 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 1
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text1
  2641   006778                     __ptext1:
  2642                           	callstack 0
  2643   006778                     ___awmod:
  2644                           	callstack 29
  2645   006778  6A06               	clrf	___awmod@sign^0,c
  2646   00677A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2647   00677C  EFC4  F033         	goto	u10690
  2648   006780  EFC2  F033         	goto	u10691
  2649   006784                     u10691:
  2650   006784  EFCA  F033         	goto	l8070
  2651   006788                     u10690:
  2652   006788  6C01               	negf	___awmod@dividend^0,c
  2653   00678A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2654   00678C  B0D8               	btfsc	status,0,c
  2655   00678E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2656   006790  0E01               	movlw	1
  2657   006792  6E06               	movwf	___awmod@sign^0,c
  2658   006794                     l8070:
  2659   006794  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2660   006796  EFD1  F033         	goto	u10700
  2661   00679A  EFCF  F033         	goto	u10701
  2662   00679E                     u10701:
  2663   00679E  EFD5  F033         	goto	l8074
  2664   0067A2                     u10700:
  2665   0067A2  6C03               	negf	___awmod@divisor^0,c
  2666   0067A4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2667   0067A6  B0D8               	btfsc	status,0,c
  2668   0067A8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2669   0067AA                     l8074:
  2670   0067AA  5003               	movf	___awmod@divisor^0,w,c
  2671   0067AC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2672   0067AE  B4D8               	btfsc	status,2,c
  2673   0067B0  EFDC  F033         	goto	u10711
  2674   0067B4  EFDE  F033         	goto	u10710
  2675   0067B8                     u10711:
  2676   0067B8  EF02  F034         	goto	l8090
  2677   0067BC                     u10710:
  2678   0067BC  0E01               	movlw	1
  2679   0067BE  6E05               	movwf	___awmod@counter^0,c
  2680   0067C0  EFE6  F033         	goto	l8080
  2681   0067C4                     l8078:
  2682   0067C4  90D8               	bcf	status,0,c
  2683   0067C6  3603               	rlcf	___awmod@divisor^0,f,c
  2684   0067C8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2685   0067CA  2A05               	incf	___awmod@counter^0,f,c
  2686   0067CC                     l8080:
  2687   0067CC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2688   0067CE  EFEB  F033         	goto	u10721
  2689   0067D2  EFED  F033         	goto	u10720
  2690   0067D6                     u10721:
  2691   0067D6  EFE2  F033         	goto	l8078
  2692   0067DA                     u10720:
  2693   0067DA                     l8082:
  2694   0067DA  5003               	movf	___awmod@divisor^0,w,c
  2695   0067DC  5C01               	subwf	___awmod@dividend^0,w,c
  2696   0067DE  5004               	movf	(___awmod@divisor+1)^0,w,c
  2697   0067E0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2698   0067E2  A0D8               	btfss	status,0,c
  2699   0067E4  EFF6  F033         	goto	u10731
  2700   0067E8  EFF8  F033         	goto	u10730
  2701   0067EC                     u10731:
  2702   0067EC  EFFC  F033         	goto	l8086
  2703   0067F0                     u10730:
  2704   0067F0  5003               	movf	___awmod@divisor^0,w,c
  2705   0067F2  5E01               	subwf	___awmod@dividend^0,f,c
  2706   0067F4  5004               	movf	(___awmod@divisor+1)^0,w,c
  2707   0067F6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2708   0067F8                     l8086:
  2709   0067F8  90D8               	bcf	status,0,c
  2710   0067FA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2711   0067FC  3203               	rrcf	___awmod@divisor^0,f,c
  2712   0067FE  2E05               	decfsz	___awmod@counter^0,f,c
  2713   006800  EFED  F033         	goto	l8082
  2714   006804                     l8090:
  2715   006804  5006               	movf	___awmod@sign^0,w,c
  2716   006806  B4D8               	btfsc	status,2,c
  2717   006808  EF08  F034         	goto	u10741
  2718   00680C  EF0A  F034         	goto	u10740
  2719   006810                     u10741:
  2720   006810  EF0E  F034         	goto	l8094
  2721   006814                     u10740:
  2722   006814  6C01               	negf	___awmod@dividend^0,c
  2723   006816  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2724   006818  B0D8               	btfsc	status,0,c
  2725   00681A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2726   00681C                     l8094:
  2727   00681C  C001  F001         	movff	___awmod@dividend,?___awmod
  2728   006820  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2729   006824  0012               	return		;funcret
  2730   006826                     __end_of___awmod:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function _Update_Actuators *****************
  2734 ;; Defined at:
  2735 ;;		line 404 in file "newmain.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2749 ;;      Params:         0       0       0       0       0       0       0       0       0
  2750 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2751 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2752 ;;      Totals:         1       4       0       0       0       0       0       0       0
  2753 ;;Total ram usage:        5 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 2
  2756 ;; This function calls:
  2757 ;;		___flge
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text2
  2764   005BA4                     __ptext2:
  2765                           	callstack 0
  2766   005BA4                     _Update_Actuators:
  2767                           	callstack 28
  2768   005BA4                     
  2769                           ;newmain.c: 406:     fire_alarm = flame_detected ||
  2770   005BA4  0E01               	movlw	1
  2771   005BA6  6E5D               	movwf	_Update_Actuators$755^0,c
  2772   005BA8  0103               	movlb	3	; () banked
  2773   005BAA  5179               	movf	_flame_detected& (0+255),w,b
  2774   005BAC  A4D8               	btfss	status,2,c
  2775   005BAE  EFDB  F02D         	goto	u10441
  2776   005BB2  EFDD  F02D         	goto	u10440
  2777   005BB6                     u10441:
  2778   005BB6  EF13  F02E         	goto	l249
  2779   005BBA                     u10440:
  2780   005BBA                     
  2781                           ; BSR set to: 3
  2782   005BBA  C364  F060         	movff	_temperature,___flge@ff1
  2783   005BBE  C365  F061         	movff	_temperature+1,___flge@ff1+1
  2784   005BC2  C366  F062         	movff	_temperature+2,___flge@ff1+2
  2785   005BC6  C367  F063         	movff	_temperature+3,___flge@ff1+3
  2786   005BCA  0E00               	movlw	0
  2787   005BCC  0100               	movlb	0	; () banked
  2788   005BCE  6F64               	movwf	___flge@ff2& (0+255),b
  2789   005BD0  0E00               	movlw	0
  2790   005BD2  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2791   005BD4  0E20               	movlw	32
  2792   005BD6  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2793   005BD8  0E42               	movlw	66
  2794   005BDA  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2795   005BDC  ECFE  F02F         	call	___flge	;wreg free
  2796   005BE0  0100               	movlb	0	; () banked
  2797   005BE2  B0D8               	btfsc	status,0,c
  2798   005BE4  EFF6  F02D         	goto	u10451
  2799   005BE8  EFF8  F02D         	goto	u10450
  2800   005BEC                     u10451:
  2801   005BEC  EF13  F02E         	goto	l249
  2802   005BF0                     u10450:
  2803   005BF0                     
  2804                           ; BSR set to: 0
  2805   005BF0  C358  F060         	movff	_co_ppm,___flge@ff1
  2806   005BF4  C359  F061         	movff	_co_ppm+1,___flge@ff1+1
  2807   005BF8  C35A  F062         	movff	_co_ppm+2,___flge@ff1+2
  2808   005BFC  C35B  F063         	movff	_co_ppm+3,___flge@ff1+3
  2809   005C00  0E00               	movlw	0
  2810   005C02  6F64               	movwf	___flge@ff2& (0+255),b
  2811   005C04  0E00               	movlw	0
  2812   005C06  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2813   005C08  0E48               	movlw	72
  2814   005C0A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2815   005C0C  0E42               	movlw	66
  2816   005C0E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2817   005C10  ECFE  F02F         	call	___flge	;wreg free
  2818   005C14  0100               	movlb	0	; () banked
  2819   005C16  B0D8               	btfsc	status,0,c
  2820   005C18  EF10  F02E         	goto	u10461
  2821   005C1C  EF12  F02E         	goto	u10460
  2822   005C20                     u10461:
  2823   005C20  EF13  F02E         	goto	l249
  2824   005C24                     u10460:
  2825   005C24                     
  2826                           ; BSR set to: 0
  2827   005C24  6A5D               	clrf	_Update_Actuators$755^0,c
  2828   005C26                     l249:
  2829   005C26  C05D  F376         	movff	_Update_Actuators$755,_fire_alarm
  2830   005C2A                     
  2831                           ;newmain.c: 411:     if(fire_alarm) {
  2832   005C2A  0103               	movlb	3	; () banked
  2833   005C2C  5176               	movf	_fire_alarm& (0+255),w,b
  2834   005C2E  B4D8               	btfsc	status,2,c
  2835   005C30  EF1C  F02E         	goto	u10471
  2836   005C34  EF1E  F02E         	goto	u10470
  2837   005C38                     u10471:
  2838   005C38  EF65  F02E         	goto	l250
  2839   005C3C                     u10470:
  2840   005C3C                     
  2841                           ; BSR set to: 3
  2842                           ;newmain.c: 412:         PORTBbits.RB0 = 1;
  2843   005C3C  8081               	bsf	129,0,c	;volatile
  2844   005C3E                     
  2845                           ; BSR set to: 3
  2846                           ;newmain.c: 413:         pump_active = 1;
  2847   005C3E  0E01               	movlw	1
  2848   005C40  6F78               	movwf	_pump_active& (0+255),b
  2849   005C42                     
  2850                           ; BSR set to: 3
  2851                           ;newmain.c: 416:         static unsigned long last_blink = 0;;newmain.c: 417:         if
      +                          (system_millis - last_blink >= 500) {
  2852   005C42  511C               	movf	Update_Actuators@last_blink& (0+255),w,b
  2853   005C44  0102               	movlb	2	; () banked
  2854   005C46  5DFA               	subwf	_system_millis& (0+255),w,b
  2855   005C48  0100               	movlb	0	; () banked
  2856   005C4A  6F68               	movwf	??_Update_Actuators& (0+255),b
  2857   005C4C  0103               	movlb	3	; () banked
  2858   005C4E  511D               	movf	(Update_Actuators@last_blink+1)& (0+255),w,b
  2859   005C50  0102               	movlb	2	; () banked
  2860   005C52  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  2861   005C54  0100               	movlb	0	; () banked
  2862   005C56  6F69               	movwf	(??_Update_Actuators+1)& (0+255),b
  2863   005C58  0103               	movlb	3	; () banked
  2864   005C5A  511E               	movf	(Update_Actuators@last_blink+2)& (0+255),w,b
  2865   005C5C  0102               	movlb	2	; () banked
  2866   005C5E  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  2867   005C60  0100               	movlb	0	; () banked
  2868   005C62  6F6A               	movwf	(??_Update_Actuators+2)& (0+255),b
  2869   005C64  0103               	movlb	3	; () banked
  2870   005C66  511F               	movf	(Update_Actuators@last_blink+3)& (0+255),w,b
  2871   005C68  0102               	movlb	2	; () banked
  2872   005C6A  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  2873   005C6C  0100               	movlb	0	; () banked
  2874   005C6E  6F6B               	movwf	(??_Update_Actuators+3)& (0+255),b
  2875   005C70  516B               	movf	(??_Update_Actuators+3)& (0+255),w,b
  2876   005C72  116A               	iorwf	(??_Update_Actuators+2)& (0+255),w,b
  2877   005C74  E10B               	bnz	u10480
  2878   005C76  0EF4               	movlw	244
  2879   005C78  5D68               	subwf	??_Update_Actuators& (0+255),w,b
  2880   005C7A  0E01               	movlw	1
  2881   005C7C  5969               	subwfb	(??_Update_Actuators+1)& (0+255),w,b
  2882   005C7E  A0D8               	btfss	status,0,c
  2883   005C80  EF44  F02E         	goto	u10481
  2884   005C84  EF46  F02E         	goto	u10480
  2885   005C88                     u10481:
  2886   005C88  EF60  F02E         	goto	l7972
  2887   005C8C                     u10480:
  2888   005C8C                     
  2889                           ; BSR set to: 0
  2890                           ;newmain.c: 418:             PORTBbits.RB5 = !PORTBbits.RB5;
  2891   005C8C  AA81               	btfss	129,5,c	;volatile
  2892   005C8E  EF4B  F02E         	goto	u10491
  2893   005C92  EF4F  F02E         	goto	u10490
  2894   005C96                     u10491:
  2895   005C96  6B68               	clrf	??_Update_Actuators& (0+255),b
  2896   005C98  2B68               	incf	??_Update_Actuators& (0+255),f,b
  2897   005C9A  EF51  F02E         	goto	u10508
  2898   005C9E                     u10490:
  2899   005C9E  0100               	movlb	0	; () banked
  2900   005CA0  6B68               	clrf	??_Update_Actuators& (0+255),b
  2901   005CA2                     u10508:
  2902   005CA2  3B68               	swapf	??_Update_Actuators& (0+255),f,b
  2903   005CA4  4768               	rlncf	??_Update_Actuators& (0+255),f,b
  2904   005CA6  5081               	movf	129,w,c	;volatile
  2905   005CA8  1968               	xorwf	??_Update_Actuators& (0+255),w,b
  2906   005CAA  0BDF               	andlw	-33
  2907   005CAC  1968               	xorwf	??_Update_Actuators& (0+255),w,b
  2908   005CAE  6E81               	movwf	129,c	;volatile
  2909   005CB0                     
  2910                           ; BSR set to: 0
  2911                           ;newmain.c: 419:             last_blink = system_millis;
  2912   005CB0  C2FA  F31C         	movff	_system_millis,Update_Actuators@last_blink
  2913   005CB4  C2FB  F31D         	movff	_system_millis+1,Update_Actuators@last_blink+1
  2914   005CB8  C2FC  F31E         	movff	_system_millis+2,Update_Actuators@last_blink+2
  2915   005CBC  C2FD  F31F         	movff	_system_millis+3,Update_Actuators@last_blink+3
  2916   005CC0                     l7972:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;newmain.c: 421:         alarm_active = 1;
  2920   005CC0  0E01               	movlw	1
  2921   005CC2  0103               	movlb	3	; () banked
  2922   005CC4  6F77               	movwf	_alarm_active& (0+255),b
  2923                           
  2924                           ;newmain.c: 422:     } else {
  2925   005CC6  EF69  F02E         	goto	l255
  2926   005CCA                     l250:
  2927                           
  2928                           ; BSR set to: 3
  2929                           ;newmain.c: 423:         PORTBbits.RB0 = 0;
  2930   005CCA  9081               	bcf	129,0,c	;volatile
  2931                           
  2932                           ;newmain.c: 424:         pump_active = 0;
  2933   005CCC  6B78               	clrf	_pump_active& (0+255),b
  2934                           
  2935                           ;newmain.c: 425:         PORTBbits.RB5 = 1;
  2936   005CCE  8A81               	bsf	129,5,c	;volatile
  2937                           
  2938                           ;newmain.c: 426:         alarm_active = 0;
  2939   005CD0  6B77               	clrf	_alarm_active& (0+255),b
  2940   005CD2                     l255:
  2941                           
  2942                           ; BSR set to: 3
  2943   005CD2  0012               	return		;funcret
  2944   005CD4                     __end_of_Update_Actuators:
  2945                           	callstack 0
  2946                           
  2947 ;; *************** function _UART_Init *****************
  2948 ;; Defined at:
  2949 ;;		line 469 in file "newmain.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2963 ;;      Params:         0       0       0       0       0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2966 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text3
  2978   006F2A                     __ptext3:
  2979                           	callstack 0
  2980   006F2A                     _UART_Init:
  2981                           	callstack 29
  2982   006F2A                     
  2983                           ;newmain.c: 470:     TRISC6 = 0;
  2984   006F2A  9C94               	bcf	3988,6,c	;volatile
  2985                           
  2986                           ;newmain.c: 471:     TRISC7 = 1;
  2987   006F2C  8E94               	bsf	3988,7,c	;volatile
  2988   006F2E                     
  2989                           ;newmain.c: 472:     SPBRG = 51;
  2990   006F2E  0E33               	movlw	51
  2991   006F30  6EAF               	movwf	175,c	;volatile
  2992   006F32                     
  2993                           ;newmain.c: 473:     TXSTAbits.BRGH = 1;
  2994   006F32  84AC               	bsf	172,2,c	;volatile
  2995   006F34                     
  2996                           ;newmain.c: 474:     TXSTAbits.SYNC = 0;
  2997   006F34  98AC               	bcf	172,4,c	;volatile
  2998   006F36                     
  2999                           ;newmain.c: 475:     TXSTAbits.TXEN = 1;
  3000   006F36  8AAC               	bsf	172,5,c	;volatile
  3001   006F38                     
  3002                           ;newmain.c: 476:     RCSTAbits.SPEN = 1;
  3003   006F38  8EAB               	bsf	171,7,c	;volatile
  3004   006F3A                     
  3005                           ;newmain.c: 477:     RCSTAbits.CREN = 1;
  3006   006F3A  88AB               	bsf	171,4,c	;volatile
  3007   006F3C  0012               	return		;funcret
  3008   006F3E                     __end_of_UART_Init:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _Send_Data *****************
  3012 ;; Defined at:
  3013 ;;		line 430 in file "newmain.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  i               2  200[BANK1 ] int 
  3018 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0
  3029 ;;      Locals:         0       0     202       0       0       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3031 ;;      Totals:         0       0     202       0       0       0       0       0       0
  3032 ;;Total ram usage:      202 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 9
  3035 ;; This function calls:
  3036 ;;		_sprintf
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text4
  3043   0064EE                     __ptext4:
  3044                           	callstack 0
  3045   0064EE                     _Send_Data:
  3046                           	callstack 21
  3047   0064EE                     
  3048                           ;newmain.c: 431:     char buffer[200];;newmain.c: 432:     sprintf(buffer,
  3049   0064EE  0E00               	movlw	low Send_Data@buffer
  3050   0064F0  0100               	movlb	0	; () banked
  3051   0064F2  6FB0               	movwf	sprintf@s& (0+255),b
  3052   0064F4  0E01               	movlw	high Send_Data@buffer
  3053   0064F6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3054   0064F8  0ED1               	movlw	low STR_17
  3055   0064FA  6FB2               	movwf	sprintf@fmt& (0+255),b
  3056   0064FC  0E7E               	movlw	high STR_17
  3057   0064FE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3058   006500  C364  F0B4         	movff	_temperature,?_sprintf+4
  3059   006504  C365  F0B5         	movff	_temperature+1,?_sprintf+5
  3060   006508  C366  F0B6         	movff	_temperature+2,?_sprintf+6
  3061   00650C  C367  F0B7         	movff	_temperature+3,?_sprintf+7
  3062   006510  C379  F0B8         	movff	_flame_detected,?_sprintf+8
  3063   006514  6BB9               	clrf	(?_sprintf+9)& (0+255),b
  3064   006516  C360  F0BA         	movff	_flame_intensity,?_sprintf+10
  3065   00651A  C361  F0BB         	movff	_flame_intensity+1,?_sprintf+11
  3066   00651E  C362  F0BC         	movff	_flame_intensity+2,?_sprintf+12
  3067   006522  C363  F0BD         	movff	_flame_intensity+3,?_sprintf+13
  3068   006526  C358  F0BE         	movff	_co_ppm,?_sprintf+14
  3069   00652A  C359  F0BF         	movff	_co_ppm+1,?_sprintf+15
  3070   00652E  C35A  F0C0         	movff	_co_ppm+2,?_sprintf+16
  3071   006532  C35B  F0C1         	movff	_co_ppm+3,?_sprintf+17
  3072   006536  C354  F0C2         	movff	_flow_rate,?_sprintf+18
  3073   00653A  C355  F0C3         	movff	_flow_rate+1,?_sprintf+19
  3074   00653E  C356  F0C4         	movff	_flow_rate+2,?_sprintf+20
  3075   006542  C357  F0C5         	movff	_flow_rate+3,?_sprintf+21
  3076   006546  C350  F0C6         	movff	_total_flow,?_sprintf+22
  3077   00654A  C351  F0C7         	movff	_total_flow+1,?_sprintf+23
  3078   00654E  C352  F0C8         	movff	_total_flow+2,?_sprintf+24
  3079   006552  C353  F0C9         	movff	_total_flow+3,?_sprintf+25
  3080   006556  C378  F0CA         	movff	_pump_active,?_sprintf+26
  3081   00655A  6BCB               	clrf	(?_sprintf+27)& (0+255),b
  3082   00655C  C377  F0CC         	movff	_alarm_active,?_sprintf+28
  3083   006560  6BCD               	clrf	(?_sprintf+29)& (0+255),b
  3084   006562  C376  F0CE         	movff	_fire_alarm,?_sprintf+30
  3085   006566  6BCF               	clrf	(?_sprintf+31)& (0+255),b
  3086   006568  C05E  F0D0         	movff	_trigger_test,?_sprintf+32
  3087   00656C  6BD1               	clrf	(?_sprintf+33)& (0+255),b
  3088   00656E  C373  F0D2         	movff	_shutdown_system,?_sprintf+34
  3089   006572  6BD3               	clrf	(?_sprintf+35)& (0+255),b
  3090   006574  ECCB  F036         	call	_sprintf	;wreg free
  3091   006578                     l258:
  3092   006578  A2AC               	btfss	172,1,c	;volatile
  3093   00657A  EFC1  F032         	goto	u10661
  3094   00657E  EFC3  F032         	goto	u10660
  3095   006582                     u10661:
  3096   006582  EFBC  F032         	goto	l258
  3097   006586                     u10660:
  3098   006586                     
  3099                           ;newmain.c: 438:     for(int i = 0; buffer[i]; i++) {
  3100   006586  0E00               	movlw	0
  3101   006588  0101               	movlb	1	; () banked
  3102   00658A  6FC9               	movwf	(Send_Data@i+1)& (0+255),b
  3103   00658C  0E00               	movlw	0
  3104   00658E  6FC8               	movwf	Send_Data@i& (0+255),b
  3105   006590  EFDC  F032         	goto	l8060
  3106   006594                     l8056:
  3107                           
  3108                           ; BSR set to: 1
  3109                           ;newmain.c: 439:         TXREG = buffer[i];
  3110   006594  0E00               	movlw	low Send_Data@buffer
  3111   006596  25C8               	addwf	Send_Data@i& (0+255),w,b
  3112   006598  6ED9               	movwf	fsr2l,c
  3113   00659A  0E01               	movlw	high Send_Data@buffer
  3114   00659C  21C9               	addwfc	(Send_Data@i+1)& (0+255),w,b
  3115   00659E  6EDA               	movwf	fsr2h,c
  3116   0065A0  50DF               	movf	indf2,w,c
  3117   0065A2  6EAD               	movwf	173,c	;volatile
  3118   0065A4                     l263:
  3119   0065A4  A2AC               	btfss	172,1,c	;volatile
  3120   0065A6  EFD7  F032         	goto	u10671
  3121   0065AA  EFD9  F032         	goto	u10670
  3122   0065AE                     u10671:
  3123   0065AE  EFD2  F032         	goto	l263
  3124   0065B2                     u10670:
  3125   0065B2                     
  3126                           ;newmain.c: 441:     }
  3127   0065B2  0101               	movlb	1	; () banked
  3128   0065B4  4BC8               	infsnz	Send_Data@i& (0+255),f,b
  3129   0065B6  2BC9               	incf	(Send_Data@i+1)& (0+255),f,b
  3130   0065B8                     l8060:
  3131                           
  3132                           ; BSR set to: 1
  3133   0065B8  0E00               	movlw	low Send_Data@buffer
  3134   0065BA  25C8               	addwf	Send_Data@i& (0+255),w,b
  3135   0065BC  6ED9               	movwf	fsr2l,c
  3136   0065BE  0E01               	movlw	high Send_Data@buffer
  3137   0065C0  21C9               	addwfc	(Send_Data@i+1)& (0+255),w,b
  3138   0065C2  6EDA               	movwf	fsr2h,c
  3139   0065C4  50DF               	movf	indf2,w,c
  3140   0065C6  A4D8               	btfss	status,2,c
  3141   0065C8  EFE8  F032         	goto	u10681
  3142   0065CC  EFEA  F032         	goto	u10680
  3143   0065D0                     u10681:
  3144   0065D0  EFCA  F032         	goto	l8056
  3145   0065D4                     u10680:
  3146   0065D4                     
  3147                           ; BSR set to: 1
  3148   0065D4  0012               	return		;funcret
  3149   0065D6                     __end_of_Send_Data:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _Read_Sensors *****************
  3153 ;; Defined at:
  3154 ;;		line 316 in file "newmain.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  pulses_diff     2   69[BANK0 ] unsigned int 
  3159 ;;  current_puls    2   67[BANK0 ] unsigned int 
  3160 ;;  raw_co          4   75[BANK0 ] float 
  3161 ;;  Rs              4   71[BANK0 ] float 
  3162 ;;  rs_ro_ratio     4   63[BANK0 ] float 
  3163 ;;  mq2_voltage     4   59[BANK0 ] float 
  3164 ;;  temp_factor     4   37[BANK0 ] float 
  3165 ;;  flame_voltag    4   33[BANK0 ] float 
  3166 ;;  raw_temp        4   29[BANK0 ] float 
  3167 ;;  mq2_adc         2   57[BANK0 ] unsigned int 
  3168 ;;  flame_adc       2   55[BANK0 ] unsigned int 
  3169 ;;  temp_adc        2   53[BANK0 ] unsigned int 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3179 ;;      Params:         0       0       0       0       0       0       0       0       0
  3180 ;;      Locals:         0      50       0       0       0       0       0       0       0
  3181 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3182 ;;      Totals:         0      54       0       0       0       0       0       0       0
  3183 ;;Total ram usage:       54 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; Hardware stack levels required when called: 4
  3186 ;; This function calls:
  3187 ;;		_ADC_Read
  3188 ;;		_Apply_Filter
  3189 ;;		___fladd
  3190 ;;		___fldiv
  3191 ;;		___flge
  3192 ;;		___flmul
  3193 ;;		___flsub
  3194 ;;		___xxtofl
  3195 ;;		_powf
  3196 ;; This function is called by:
  3197 ;;		_main
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text5
  3202   002EB8                     __ptext5:
  3203                           	callstack 0
  3204   002EB8                     _Read_Sensors:
  3205                           	callstack 26
  3206   002EB8                     
  3207                           ;newmain.c: 318:     unsigned int temp_adc = ADC_Read(0);
  3208   002EB8  0E00               	movlw	0
  3209   002EBA  EC0D  F037         	call	_ADC_Read
  3210   002EBE  C001  F095         	movff	?_ADC_Read,Read_Sensors@temp_adc
  3211   002EC2  C002  F096         	movff	?_ADC_Read+1,Read_Sensors@temp_adc+1
  3212   002EC6                     
  3213                           ;newmain.c: 319:     float raw_temp = (temp_adc * 5.0 / 1024.0) / 0.01;
  3214   002EC6  0E00               	movlw	0
  3215   002EC8  6E2C               	movwf	___fldiv@a^0,c
  3216   002ECA  0E00               	movlw	0
  3217   002ECC  6E2D               	movwf	(___fldiv@a+1)^0,c
  3218   002ECE  0E80               	movlw	128
  3219   002ED0  6E2E               	movwf	(___fldiv@a+2)^0,c
  3220   002ED2  0E44               	movlw	68
  3221   002ED4  6E2F               	movwf	(___fldiv@a+3)^0,c
  3222   002ED6  0E00               	movlw	0
  3223   002ED8  6E13               	movwf	___flmul@a^0,c
  3224   002EDA  0E00               	movlw	0
  3225   002EDC  6E14               	movwf	(___flmul@a+1)^0,c
  3226   002EDE  0EA0               	movlw	160
  3227   002EE0  6E15               	movwf	(___flmul@a+2)^0,c
  3228   002EE2  0E40               	movlw	64
  3229   002EE4  6E16               	movwf	(___flmul@a+3)^0,c
  3230   002EE6  C095  F001         	movff	Read_Sensors@temp_adc,___xxtofl@val
  3231   002EEA  C096  F002         	movff	Read_Sensors@temp_adc+1,___xxtofl@val+1
  3232   002EEE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3233   002EF0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3234   002EF2  0E00               	movlw	0
  3235   002EF4  EC5B  F02B         	call	___xxtofl
  3236   002EF8  C001  F00F         	movff	?___xxtofl,___flmul@b
  3237   002EFC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3238   002F00  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3239   002F04  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3240   002F08  EC66  F020         	call	___flmul	;wreg free
  3241   002F0C  C00F  F028         	movff	?___flmul,___fldiv@b
  3242   002F10  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3243   002F14  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3244   002F18  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3245   002F1C  EC68  F024         	call	___fldiv	;wreg free
  3246   002F20  C028  F089         	movff	?___fldiv,_Read_Sensors$1838
  3247   002F24  C029  F08A         	movff	?___fldiv+1,_Read_Sensors$1838+1
  3248   002F28  C02A  F08B         	movff	?___fldiv+2,_Read_Sensors$1838+2
  3249   002F2C  C02B  F08C         	movff	?___fldiv+3,_Read_Sensors$1838+3
  3250   002F30                     
  3251                           ;newmain.c: 319:     float raw_temp = (temp_adc * 5.0 / 1024.0) / 0.01;
  3252   002F30  C089  F028         	movff	_Read_Sensors$1838,___fldiv@b
  3253   002F34  C08A  F029         	movff	_Read_Sensors$1838+1,___fldiv@b+1
  3254   002F38  C08B  F02A         	movff	_Read_Sensors$1838+2,___fldiv@b+2
  3255   002F3C  C08C  F02B         	movff	_Read_Sensors$1838+3,___fldiv@b+3
  3256   002F40  0E0A               	movlw	10
  3257   002F42  6E2C               	movwf	___fldiv@a^0,c
  3258   002F44  0ED7               	movlw	215
  3259   002F46  6E2D               	movwf	(___fldiv@a+1)^0,c
  3260   002F48  0E23               	movlw	35
  3261   002F4A  6E2E               	movwf	(___fldiv@a+2)^0,c
  3262   002F4C  0E3C               	movlw	60
  3263   002F4E  6E2F               	movwf	(___fldiv@a+3)^0,c
  3264   002F50  EC68  F024         	call	___fldiv	;wreg free
  3265   002F54  C028  F07D         	movff	?___fldiv,Read_Sensors@raw_temp
  3266   002F58  C029  F07E         	movff	?___fldiv+1,Read_Sensors@raw_temp+1
  3267   002F5C  C02A  F07F         	movff	?___fldiv+2,Read_Sensors@raw_temp+2
  3268   002F60  C02B  F080         	movff	?___fldiv+3,Read_Sensors@raw_temp+3
  3269   002F64                     
  3270                           ;newmain.c: 320:     temperature = Apply_Filter(raw_temp, temp_samples);
  3271   002F64  C07D  F051         	movff	Read_Sensors@raw_temp,Apply_Filter@new_value
  3272   002F68  C07E  F052         	movff	Read_Sensors@raw_temp+1,Apply_Filter@new_value+1
  3273   002F6C  C07F  F053         	movff	Read_Sensors@raw_temp+2,Apply_Filter@new_value+2
  3274   002F70  C080  F054         	movff	Read_Sensors@raw_temp+3,Apply_Filter@new_value+3
  3275   002F74  0EE2               	movlw	low _temp_samples
  3276   002F76  6E55               	movwf	Apply_Filter@samples^0,c
  3277   002F78  0E03               	movlw	high _temp_samples
  3278   002F7A  6E56               	movwf	(Apply_Filter@samples+1)^0,c
  3279   002F7C  ECEB  F032         	call	_Apply_Filter	;wreg free
  3280   002F80  C051  F364         	movff	?_Apply_Filter,_temperature
  3281   002F84  C052  F365         	movff	?_Apply_Filter+1,_temperature+1
  3282   002F88  C053  F366         	movff	?_Apply_Filter+2,_temperature+2
  3283   002F8C  C054  F367         	movff	?_Apply_Filter+3,_temperature+3
  3284   002F90                     
  3285                           ;newmain.c: 323:     unsigned int flame_adc = ADC_Read(1);
  3286   002F90  0E01               	movlw	1
  3287   002F92  EC0D  F037         	call	_ADC_Read
  3288   002F96  C001  F097         	movff	?_ADC_Read,Read_Sensors@flame_adc
  3289   002F9A  C002  F098         	movff	?_ADC_Read+1,Read_Sensors@flame_adc+1
  3290   002F9E                     
  3291                           ;newmain.c: 324:     float flame_voltage = (flame_adc * 5.0) / 1024.0;
  3292   002F9E  0E00               	movlw	0
  3293   002FA0  6E13               	movwf	___flmul@a^0,c
  3294   002FA2  0E00               	movlw	0
  3295   002FA4  6E14               	movwf	(___flmul@a+1)^0,c
  3296   002FA6  0EA0               	movlw	160
  3297   002FA8  6E15               	movwf	(___flmul@a+2)^0,c
  3298   002FAA  0E40               	movlw	64
  3299   002FAC  6E16               	movwf	(___flmul@a+3)^0,c
  3300   002FAE  C097  F001         	movff	Read_Sensors@flame_adc,___xxtofl@val
  3301   002FB2  C098  F002         	movff	Read_Sensors@flame_adc+1,___xxtofl@val+1
  3302   002FB6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3303   002FB8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3304   002FBA  0E00               	movlw	0
  3305   002FBC  EC5B  F02B         	call	___xxtofl
  3306   002FC0  C001  F00F         	movff	?___xxtofl,___flmul@b
  3307   002FC4  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3308   002FC8  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3309   002FCC  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3310   002FD0  EC66  F020         	call	___flmul	;wreg free
  3311   002FD4  C00F  F028         	movff	?___flmul,___fldiv@b
  3312   002FD8  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3313   002FDC  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3314   002FE0  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3315   002FE4  0E00               	movlw	0
  3316   002FE6  6E2C               	movwf	___fldiv@a^0,c
  3317   002FE8  0E00               	movlw	0
  3318   002FEA  6E2D               	movwf	(___fldiv@a+1)^0,c
  3319   002FEC  0E80               	movlw	128
  3320   002FEE  6E2E               	movwf	(___fldiv@a+2)^0,c
  3321   002FF0  0E44               	movlw	68
  3322   002FF2  6E2F               	movwf	(___fldiv@a+3)^0,c
  3323   002FF4  EC68  F024         	call	___fldiv	;wreg free
  3324   002FF8  C028  F081         	movff	?___fldiv,Read_Sensors@flame_voltage
  3325   002FFC  C029  F082         	movff	?___fldiv+1,Read_Sensors@flame_voltage+1
  3326   003000  C02A  F083         	movff	?___fldiv+2,Read_Sensors@flame_voltage+2
  3327   003004  C02B  F084         	movff	?___fldiv+3,Read_Sensors@flame_voltage+3
  3328   003008                     
  3329                           ;newmain.c: 325:     flame_intensity = (flame_base_voltage - flame_voltage) * 100.0 / fl
      +                          ame_base_voltage;
  3330   003008  0E00               	movlw	0
  3331   00300A  6E13               	movwf	___flmul@a^0,c
  3332   00300C  0E00               	movlw	0
  3333   00300E  6E14               	movwf	(___flmul@a+1)^0,c
  3334   003010  0EC8               	movlw	200
  3335   003012  6E15               	movwf	(___flmul@a+2)^0,c
  3336   003014  0E42               	movlw	66
  3337   003016  6E16               	movwf	(___flmul@a+3)^0,c
  3338   003018  C081  F055         	movff	Read_Sensors@flame_voltage,___flsub@a
  3339   00301C  C082  F056         	movff	Read_Sensors@flame_voltage+1,___flsub@a+1
  3340   003020  C083  F057         	movff	Read_Sensors@flame_voltage+2,___flsub@a+2
  3341   003024  C084  F058         	movff	Read_Sensors@flame_voltage+3,___flsub@a+3
  3342   003028  C35C  F051         	movff	_flame_base_voltage,___flsub@b
  3343   00302C  C35D  F052         	movff	_flame_base_voltage+1,___flsub@b+1
  3344   003030  C35E  F053         	movff	_flame_base_voltage+2,___flsub@b+2
  3345   003034  C35F  F054         	movff	_flame_base_voltage+3,___flsub@b+3
  3346   003038  ECA8  F036         	call	___flsub	;wreg free
  3347   00303C  C051  F00F         	movff	?___flsub,___flmul@b
  3348   003040  C052  F010         	movff	?___flsub+1,___flmul@b+1
  3349   003044  C053  F011         	movff	?___flsub+2,___flmul@b+2
  3350   003048  C054  F012         	movff	?___flsub+3,___flmul@b+3
  3351   00304C  EC66  F020         	call	___flmul	;wreg free
  3352   003050  C00F  F028         	movff	?___flmul,___fldiv@b
  3353   003054  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3354   003058  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3355   00305C  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3356   003060  C35C  F02C         	movff	_flame_base_voltage,___fldiv@a
  3357   003064  C35D  F02D         	movff	_flame_base_voltage+1,___fldiv@a+1
  3358   003068  C35E  F02E         	movff	_flame_base_voltage+2,___fldiv@a+2
  3359   00306C  C35F  F02F         	movff	_flame_base_voltage+3,___fldiv@a+3
  3360   003070  EC68  F024         	call	___fldiv	;wreg free
  3361   003074  C028  F360         	movff	?___fldiv,_flame_intensity
  3362   003078  C029  F361         	movff	?___fldiv+1,_flame_intensity+1
  3363   00307C  C02A  F362         	movff	?___fldiv+2,_flame_intensity+2
  3364   003080  C02B  F363         	movff	?___fldiv+3,_flame_intensity+3
  3365   003084                     
  3366                           ;newmain.c: 327:     if(flame_intensity < 0) flame_intensity = 0;
  3367   003084  0103               	movlb	3	; () banked
  3368   003086  BF63               	btfsc	(_flame_intensity+3)& (0+255),7,b
  3369   003088  EF4A  F018         	goto	u10310
  3370   00308C  EF48  F018         	goto	u10311
  3371   003090                     u10311:
  3372   003090  EF52  F018         	goto	l7880
  3373   003094                     u10310:
  3374   003094                     
  3375                           ; BSR set to: 3
  3376   003094  0E00               	movlw	0
  3377   003096  6F60               	movwf	_flame_intensity& (0+255),b
  3378   003098  0E00               	movlw	0
  3379   00309A  6F61               	movwf	(_flame_intensity+1)& (0+255),b
  3380   00309C  0E00               	movlw	0
  3381   00309E  6F62               	movwf	(_flame_intensity+2)& (0+255),b
  3382   0030A0  0E00               	movlw	0
  3383   0030A2  6F63               	movwf	(_flame_intensity+3)& (0+255),b
  3384   0030A4                     l7880:
  3385                           
  3386                           ; BSR set to: 3
  3387                           ;newmain.c: 328:     if(flame_intensity > 100) flame_intensity = 100;
  3388   0030A4  0E00               	movlw	0
  3389   0030A6  0100               	movlb	0	; () banked
  3390   0030A8  6F60               	movwf	___flge@ff1& (0+255),b
  3391   0030AA  0E00               	movlw	0
  3392   0030AC  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3393   0030AE  0EC8               	movlw	200
  3394   0030B0  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3395   0030B2  0E42               	movlw	66
  3396   0030B4  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3397   0030B6  C360  F064         	movff	_flame_intensity,___flge@ff2
  3398   0030BA  C361  F065         	movff	_flame_intensity+1,___flge@ff2+1
  3399   0030BE  C362  F066         	movff	_flame_intensity+2,___flge@ff2+2
  3400   0030C2  C363  F067         	movff	_flame_intensity+3,___flge@ff2+3
  3401   0030C6  ECFE  F02F         	call	___flge	;wreg free
  3402   0030CA  0100               	movlb	0	; () banked
  3403   0030CC  B0D8               	btfsc	status,0,c
  3404   0030CE  EF6B  F018         	goto	u10321
  3405   0030D2  EF6D  F018         	goto	u10320
  3406   0030D6                     u10321:
  3407   0030D6  EF76  F018         	goto	l217
  3408   0030DA                     u10320:
  3409   0030DA                     
  3410                           ; BSR set to: 0
  3411   0030DA  0E00               	movlw	0
  3412   0030DC  0103               	movlb	3	; () banked
  3413   0030DE  6F60               	movwf	_flame_intensity& (0+255),b
  3414   0030E0  0E00               	movlw	0
  3415   0030E2  6F61               	movwf	(_flame_intensity+1)& (0+255),b
  3416   0030E4  0EC8               	movlw	200
  3417   0030E6  6F62               	movwf	(_flame_intensity+2)& (0+255),b
  3418   0030E8  0E42               	movlw	66
  3419   0030EA  6F63               	movwf	(_flame_intensity+3)& (0+255),b
  3420   0030EC                     l217:
  3421                           
  3422                           ;newmain.c: 331:     if(!flame_detected && flame_intensity >= 15.0) {
  3423   0030EC  0103               	movlb	3	; () banked
  3424   0030EE  5179               	movf	_flame_detected& (0+255),w,b
  3425   0030F0  A4D8               	btfss	status,2,c
  3426   0030F2  EF7D  F018         	goto	u10331
  3427   0030F6  EF7F  F018         	goto	u10330
  3428   0030FA                     u10331:
  3429   0030FA  EF9F  F018         	goto	l7888
  3430   0030FE                     u10330:
  3431   0030FE                     
  3432                           ; BSR set to: 3
  3433   0030FE  C360  F060         	movff	_flame_intensity,___flge@ff1
  3434   003102  C361  F061         	movff	_flame_intensity+1,___flge@ff1+1
  3435   003106  C362  F062         	movff	_flame_intensity+2,___flge@ff1+2
  3436   00310A  C363  F063         	movff	_flame_intensity+3,___flge@ff1+3
  3437   00310E  0E00               	movlw	0
  3438   003110  0100               	movlb	0	; () banked
  3439   003112  6F64               	movwf	___flge@ff2& (0+255),b
  3440   003114  0E00               	movlw	0
  3441   003116  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3442   003118  0E70               	movlw	112
  3443   00311A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3444   00311C  0E41               	movlw	65
  3445   00311E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3446   003120  ECFE  F02F         	call	___flge	;wreg free
  3447   003124  0100               	movlb	0	; () banked
  3448   003126  A0D8               	btfss	status,0,c
  3449   003128  EF98  F018         	goto	u10341
  3450   00312C  EF9A  F018         	goto	u10340
  3451   003130                     u10341:
  3452   003130  EF9F  F018         	goto	l7888
  3453   003134                     u10340:
  3454   003134                     
  3455                           ; BSR set to: 0
  3456                           ;newmain.c: 332:         flame_detected = 1;
  3457   003134  0E01               	movlw	1
  3458   003136  0103               	movlb	3	; () banked
  3459   003138  6F79               	movwf	_flame_detected& (0+255),b
  3460                           
  3461                           ;newmain.c: 333:     } else if(flame_detected && flame_intensity <= (15.0 - 3.0)) {
  3462   00313A  EFC5  F018         	goto	l7894
  3463   00313E                     l7888:
  3464   00313E  0103               	movlb	3	; () banked
  3465   003140  5179               	movf	_flame_detected& (0+255),w,b
  3466   003142  B4D8               	btfsc	status,2,c
  3467   003144  EFA6  F018         	goto	u10351
  3468   003148  EFA8  F018         	goto	u10350
  3469   00314C                     u10351:
  3470   00314C  EFC5  F018         	goto	l7894
  3471   003150                     u10350:
  3472   003150                     
  3473                           ; BSR set to: 3
  3474   003150  0E00               	movlw	0
  3475   003152  0100               	movlb	0	; () banked
  3476   003154  6F60               	movwf	___flge@ff1& (0+255),b
  3477   003156  0E00               	movlw	0
  3478   003158  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3479   00315A  0E40               	movlw	64
  3480   00315C  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3481   00315E  0E41               	movlw	65
  3482   003160  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3483   003162  C360  F064         	movff	_flame_intensity,___flge@ff2
  3484   003166  C361  F065         	movff	_flame_intensity+1,___flge@ff2+1
  3485   00316A  C362  F066         	movff	_flame_intensity+2,___flge@ff2+2
  3486   00316E  C363  F067         	movff	_flame_intensity+3,___flge@ff2+3
  3487   003172  ECFE  F02F         	call	___flge	;wreg free
  3488   003176  0100               	movlb	0	; () banked
  3489   003178  A0D8               	btfss	status,0,c
  3490   00317A  EFC1  F018         	goto	u10361
  3491   00317E  EFC3  F018         	goto	u10360
  3492   003182                     u10361:
  3493   003182  EFC5  F018         	goto	l7894
  3494   003186                     u10360:
  3495   003186                     
  3496                           ; BSR set to: 0
  3497                           ;newmain.c: 334:         flame_detected = 0;
  3498   003186  0103               	movlb	3	; () banked
  3499   003188  6B79               	clrf	_flame_detected& (0+255),b
  3500   00318A                     l7894:
  3501                           
  3502                           ;newmain.c: 338:     unsigned int mq2_adc = ADC_Read(2);
  3503   00318A  0E02               	movlw	2
  3504   00318C  EC0D  F037         	call	_ADC_Read
  3505   003190  C001  F099         	movff	?_ADC_Read,Read_Sensors@mq2_adc
  3506   003194  C002  F09A         	movff	?_ADC_Read+1,Read_Sensors@mq2_adc+1
  3507   003198                     
  3508                           ;newmain.c: 339:     float mq2_voltage = (mq2_adc * 5.0) / 1024.0;
  3509   003198  0E00               	movlw	0
  3510   00319A  6E13               	movwf	___flmul@a^0,c
  3511   00319C  0E00               	movlw	0
  3512   00319E  6E14               	movwf	(___flmul@a+1)^0,c
  3513   0031A0  0EA0               	movlw	160
  3514   0031A2  6E15               	movwf	(___flmul@a+2)^0,c
  3515   0031A4  0E40               	movlw	64
  3516   0031A6  6E16               	movwf	(___flmul@a+3)^0,c
  3517   0031A8  C099  F001         	movff	Read_Sensors@mq2_adc,___xxtofl@val
  3518   0031AC  C09A  F002         	movff	Read_Sensors@mq2_adc+1,___xxtofl@val+1
  3519   0031B0  6A03               	clrf	(___xxtofl@val+2)^0,c
  3520   0031B2  6A04               	clrf	(___xxtofl@val+3)^0,c
  3521   0031B4  0E00               	movlw	0
  3522   0031B6  EC5B  F02B         	call	___xxtofl
  3523   0031BA  C001  F00F         	movff	?___xxtofl,___flmul@b
  3524   0031BE  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3525   0031C2  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3526   0031C6  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3527   0031CA  EC66  F020         	call	___flmul	;wreg free
  3528   0031CE  C00F  F028         	movff	?___flmul,___fldiv@b
  3529   0031D2  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3530   0031D6  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3531   0031DA  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3532   0031DE  0E00               	movlw	0
  3533   0031E0  6E2C               	movwf	___fldiv@a^0,c
  3534   0031E2  0E00               	movlw	0
  3535   0031E4  6E2D               	movwf	(___fldiv@a+1)^0,c
  3536   0031E6  0E80               	movlw	128
  3537   0031E8  6E2E               	movwf	(___fldiv@a+2)^0,c
  3538   0031EA  0E44               	movlw	68
  3539   0031EC  6E2F               	movwf	(___fldiv@a+3)^0,c
  3540   0031EE  EC68  F024         	call	___fldiv	;wreg free
  3541   0031F2  C028  F09B         	movff	?___fldiv,Read_Sensors@mq2_voltage
  3542   0031F6  C029  F09C         	movff	?___fldiv+1,Read_Sensors@mq2_voltage+1
  3543   0031FA  C02A  F09D         	movff	?___fldiv+2,Read_Sensors@mq2_voltage+2
  3544   0031FE  C02B  F09E         	movff	?___fldiv+3,Read_Sensors@mq2_voltage+3
  3545   003202                     
  3546                           ;newmain.c: 340:     float Rs = (5.0 - mq2_voltage) / mq2_voltage;
  3547   003202  C09B  F055         	movff	Read_Sensors@mq2_voltage,___flsub@a
  3548   003206  C09C  F056         	movff	Read_Sensors@mq2_voltage+1,___flsub@a+1
  3549   00320A  C09D  F057         	movff	Read_Sensors@mq2_voltage+2,___flsub@a+2
  3550   00320E  C09E  F058         	movff	Read_Sensors@mq2_voltage+3,___flsub@a+3
  3551   003212  0E00               	movlw	0
  3552   003214  6E51               	movwf	___flsub@b^0,c
  3553   003216  0E00               	movlw	0
  3554   003218  6E52               	movwf	(___flsub@b+1)^0,c
  3555   00321A  0EA0               	movlw	160
  3556   00321C  6E53               	movwf	(___flsub@b+2)^0,c
  3557   00321E  0E40               	movlw	64
  3558   003220  6E54               	movwf	(___flsub@b+3)^0,c
  3559   003222  ECA8  F036         	call	___flsub	;wreg free
  3560   003226  C051  F028         	movff	?___flsub,___fldiv@b
  3561   00322A  C052  F029         	movff	?___flsub+1,___fldiv@b+1
  3562   00322E  C053  F02A         	movff	?___flsub+2,___fldiv@b+2
  3563   003232  C054  F02B         	movff	?___flsub+3,___fldiv@b+3
  3564   003236  C09B  F02C         	movff	Read_Sensors@mq2_voltage,___fldiv@a
  3565   00323A  C09C  F02D         	movff	Read_Sensors@mq2_voltage+1,___fldiv@a+1
  3566   00323E  C09D  F02E         	movff	Read_Sensors@mq2_voltage+2,___fldiv@a+2
  3567   003242  C09E  F02F         	movff	Read_Sensors@mq2_voltage+3,___fldiv@a+3
  3568   003246  EC68  F024         	call	___fldiv	;wreg free
  3569   00324A  C028  F0A7         	movff	?___fldiv,Read_Sensors@Rs
  3570   00324E  C029  F0A8         	movff	?___fldiv+1,Read_Sensors@Rs+1
  3571   003252  C02A  F0A9         	movff	?___fldiv+2,Read_Sensors@Rs+2
  3572   003256  C02B  F0AA         	movff	?___fldiv+3,Read_Sensors@Rs+3
  3573                           
  3574                           ;newmain.c: 343:     float temp_factor = 1.0 + 0.02 * (temperature - 25.0);
  3575   00325A  0E0A               	movlw	10
  3576   00325C  6E13               	movwf	___flmul@a^0,c
  3577   00325E  0ED7               	movlw	215
  3578   003260  6E14               	movwf	(___flmul@a+1)^0,c
  3579   003262  0EA3               	movlw	163
  3580   003264  6E15               	movwf	(___flmul@a+2)^0,c
  3581   003266  0E3C               	movlw	60
  3582   003268  6E16               	movwf	(___flmul@a+3)^0,c
  3583   00326A  0E00               	movlw	0
  3584   00326C  6E45               	movwf	___fladd@a^0,c
  3585   00326E  0E00               	movlw	0
  3586   003270  6E46               	movwf	(___fladd@a+1)^0,c
  3587   003272  0EC8               	movlw	200
  3588   003274  6E47               	movwf	(___fladd@a+2)^0,c
  3589   003276  0EC1               	movlw	193
  3590   003278  6E48               	movwf	(___fladd@a+3)^0,c
  3591   00327A  C364  F041         	movff	_temperature,___fladd@b
  3592   00327E  C365  F042         	movff	_temperature+1,___fladd@b+1
  3593   003282  C366  F043         	movff	_temperature+2,___fladd@b+2
  3594   003286  C367  F044         	movff	_temperature+3,___fladd@b+3
  3595   00328A  EC0B  F01E         	call	___fladd	;wreg free
  3596   00328E  C041  F00F         	movff	?___fladd,___flmul@b
  3597   003292  C042  F010         	movff	?___fladd+1,___flmul@b+1
  3598   003296  C043  F011         	movff	?___fladd+2,___flmul@b+2
  3599   00329A  C044  F012         	movff	?___fladd+3,___flmul@b+3
  3600   00329E  EC66  F020         	call	___flmul	;wreg free
  3601   0032A2  C00F  F08D         	movff	?___flmul,_Read_Sensors$1839
  3602   0032A6  C010  F08E         	movff	?___flmul+1,_Read_Sensors$1839+1
  3603   0032AA  C011  F08F         	movff	?___flmul+2,_Read_Sensors$1839+2
  3604   0032AE  C012  F090         	movff	?___flmul+3,_Read_Sensors$1839+3
  3605   0032B2                     
  3606                           ;newmain.c: 343:     float temp_factor = 1.0 + 0.02 * (temperature - 25.0);
  3607   0032B2  C08D  F041         	movff	_Read_Sensors$1839,___fladd@b
  3608   0032B6  C08E  F042         	movff	_Read_Sensors$1839+1,___fladd@b+1
  3609   0032BA  C08F  F043         	movff	_Read_Sensors$1839+2,___fladd@b+2
  3610   0032BE  C090  F044         	movff	_Read_Sensors$1839+3,___fladd@b+3
  3611   0032C2  0E00               	movlw	0
  3612   0032C4  6E45               	movwf	___fladd@a^0,c
  3613   0032C6  0E00               	movlw	0
  3614   0032C8  6E46               	movwf	(___fladd@a+1)^0,c
  3615   0032CA  0E80               	movlw	128
  3616   0032CC  6E47               	movwf	(___fladd@a+2)^0,c
  3617   0032CE  0E3F               	movlw	63
  3618   0032D0  6E48               	movwf	(___fladd@a+3)^0,c
  3619   0032D2  EC0B  F01E         	call	___fladd	;wreg free
  3620   0032D6  C041  F085         	movff	?___fladd,Read_Sensors@temp_factor
  3621   0032DA  C042  F086         	movff	?___fladd+1,Read_Sensors@temp_factor+1
  3622   0032DE  C043  F087         	movff	?___fladd+2,Read_Sensors@temp_factor+2
  3623   0032E2  C044  F088         	movff	?___fladd+3,Read_Sensors@temp_factor+3
  3624   0032E6                     
  3625                           ;newmain.c: 344:     Rs /= temp_factor;
  3626   0032E6  C0A7  F028         	movff	Read_Sensors@Rs,___fldiv@b
  3627   0032EA  C0A8  F029         	movff	Read_Sensors@Rs+1,___fldiv@b+1
  3628   0032EE  C0A9  F02A         	movff	Read_Sensors@Rs+2,___fldiv@b+2
  3629   0032F2  C0AA  F02B         	movff	Read_Sensors@Rs+3,___fldiv@b+3
  3630   0032F6  C085  F02C         	movff	Read_Sensors@temp_factor,___fldiv@a
  3631   0032FA  C086  F02D         	movff	Read_Sensors@temp_factor+1,___fldiv@a+1
  3632   0032FE  C087  F02E         	movff	Read_Sensors@temp_factor+2,___fldiv@a+2
  3633   003302  C088  F02F         	movff	Read_Sensors@temp_factor+3,___fldiv@a+3
  3634   003306  EC68  F024         	call	___fldiv	;wreg free
  3635   00330A  C028  F0A7         	movff	?___fldiv,Read_Sensors@Rs
  3636   00330E  C029  F0A8         	movff	?___fldiv+1,Read_Sensors@Rs+1
  3637   003312  C02A  F0A9         	movff	?___fldiv+2,Read_Sensors@Rs+2
  3638   003316  C02B  F0AA         	movff	?___fldiv+3,Read_Sensors@Rs+3
  3639   00331A                     
  3640                           ;newmain.c: 346:     float rs_ro_ratio = Rs / MQ2_Ro;
  3641   00331A  C0A7  F028         	movff	Read_Sensors@Rs,___fldiv@b
  3642   00331E  C0A8  F029         	movff	Read_Sensors@Rs+1,___fldiv@b+1
  3643   003322  C0A9  F02A         	movff	Read_Sensors@Rs+2,___fldiv@b+2
  3644   003326  C0AA  F02B         	movff	Read_Sensors@Rs+3,___fldiv@b+3
  3645   00332A  C3DE  F02C         	movff	_MQ2_Ro,___fldiv@a
  3646   00332E  C3DF  F02D         	movff	_MQ2_Ro+1,___fldiv@a+1
  3647   003332  C3E0  F02E         	movff	_MQ2_Ro+2,___fldiv@a+2
  3648   003336  C3E1  F02F         	movff	_MQ2_Ro+3,___fldiv@a+3
  3649   00333A  EC68  F024         	call	___fldiv	;wreg free
  3650   00333E  C028  F09F         	movff	?___fldiv,Read_Sensors@rs_ro_ratio
  3651   003342  C029  F0A0         	movff	?___fldiv+1,Read_Sensors@rs_ro_ratio+1
  3652   003346  C02A  F0A1         	movff	?___fldiv+2,Read_Sensors@rs_ro_ratio+2
  3653   00334A  C02B  F0A2         	movff	?___fldiv+3,Read_Sensors@rs_ro_ratio+3
  3654   00334E                     
  3655                           ;newmain.c: 347:     float raw_co = 0.0;
  3656   00334E  0E00               	movlw	0
  3657   003350  0100               	movlb	0	; () banked
  3658   003352  6FAB               	movwf	Read_Sensors@raw_co& (0+255),b
  3659   003354  0E00               	movlw	0
  3660   003356  6FAC               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3661   003358  0E00               	movlw	0
  3662   00335A  6FAD               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3663   00335C  0E00               	movlw	0
  3664   00335E  6FAE               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3665   003360                     
  3666                           ; BSR set to: 0
  3667                           ;newmain.c: 349:     if(rs_ro_ratio > 0.1) {
  3668   003360  0ECD               	movlw	205
  3669   003362  6F60               	movwf	___flge@ff1& (0+255),b
  3670   003364  0ECC               	movlw	204
  3671   003366  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3672   003368  0ECC               	movlw	204
  3673   00336A  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3674   00336C  0E3D               	movlw	61
  3675   00336E  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3676   003370  C09F  F064         	movff	Read_Sensors@rs_ro_ratio,___flge@ff2
  3677   003374  C0A0  F065         	movff	Read_Sensors@rs_ro_ratio+1,___flge@ff2+1
  3678   003378  C0A1  F066         	movff	Read_Sensors@rs_ro_ratio+2,___flge@ff2+2
  3679   00337C  C0A2  F067         	movff	Read_Sensors@rs_ro_ratio+3,___flge@ff2+3
  3680   003380  ECFE  F02F         	call	___flge	;wreg free
  3681   003384  0100               	movlb	0	; () banked
  3682   003386  B0D8               	btfsc	status,0,c
  3683   003388  EFC8  F019         	goto	u10371
  3684   00338C  EFCA  F019         	goto	u10370
  3685   003390                     u10371:
  3686   003390  EFFE  F019         	goto	l7914
  3687   003394                     u10370:
  3688   003394                     
  3689                           ; BSR set to: 0
  3690                           ;newmain.c: 350:         raw_co = 15.0 * powf(rs_ro_ratio,-1.5);
  3691   003394  0E00               	movlw	0
  3692   003396  6F6C               	movwf	powf@y& (0+255),b
  3693   003398  0E00               	movlw	0
  3694   00339A  6F6D               	movwf	(powf@y+1)& (0+255),b
  3695   00339C  0EC0               	movlw	192
  3696   00339E  6F6E               	movwf	(powf@y+2)& (0+255),b
  3697   0033A0  0EBF               	movlw	191
  3698   0033A2  6F6F               	movwf	(powf@y+3)& (0+255),b
  3699   0033A4  C09F  F068         	movff	Read_Sensors@rs_ro_ratio,powf@x
  3700   0033A8  C0A0  F069         	movff	Read_Sensors@rs_ro_ratio+1,powf@x+1
  3701   0033AC  C0A1  F06A         	movff	Read_Sensors@rs_ro_ratio+2,powf@x+2
  3702   0033B0  C0A2  F06B         	movff	Read_Sensors@rs_ro_ratio+3,powf@x+3
  3703   0033B4  EC09  F000         	call	_powf	;wreg free
  3704   0033B8  C068  F091         	movff	?_powf,_Read_Sensors$1840
  3705   0033BC  C069  F092         	movff	?_powf+1,_Read_Sensors$1840+1
  3706   0033C0  C06A  F093         	movff	?_powf+2,_Read_Sensors$1840+2
  3707   0033C4  C06B  F094         	movff	?_powf+3,_Read_Sensors$1840+3
  3708   0033C8                     
  3709                           ;newmain.c: 350:         raw_co = 15.0 * powf(rs_ro_ratio,-1.5);
  3710   0033C8  C091  F00F         	movff	_Read_Sensors$1840,___flmul@b
  3711   0033CC  C092  F010         	movff	_Read_Sensors$1840+1,___flmul@b+1
  3712   0033D0  C093  F011         	movff	_Read_Sensors$1840+2,___flmul@b+2
  3713   0033D4  C094  F012         	movff	_Read_Sensors$1840+3,___flmul@b+3
  3714   0033D8  0E00               	movlw	0
  3715   0033DA  6E13               	movwf	___flmul@a^0,c
  3716   0033DC  0E00               	movlw	0
  3717   0033DE  6E14               	movwf	(___flmul@a+1)^0,c
  3718   0033E0  0E70               	movlw	112
  3719   0033E2  6E15               	movwf	(___flmul@a+2)^0,c
  3720   0033E4  0E41               	movlw	65
  3721   0033E6  6E16               	movwf	(___flmul@a+3)^0,c
  3722   0033E8  EC66  F020         	call	___flmul	;wreg free
  3723   0033EC  C00F  F0AB         	movff	?___flmul,Read_Sensors@raw_co
  3724   0033F0  C010  F0AC         	movff	?___flmul+1,Read_Sensors@raw_co+1
  3725   0033F4  C011  F0AD         	movff	?___flmul+2,Read_Sensors@raw_co+2
  3726   0033F8  C012  F0AE         	movff	?___flmul+3,Read_Sensors@raw_co+3
  3727   0033FC                     l7914:
  3728                           
  3729                           ;newmain.c: 353:     if(raw_co < 0) raw_co = 0;
  3730   0033FC  0100               	movlb	0	; () banked
  3731   0033FE  BFAE               	btfsc	(Read_Sensors@raw_co+3)& (0+255),7,b
  3732   003400  EF06  F01A         	goto	u10380
  3733   003404  EF04  F01A         	goto	u10381
  3734   003408                     u10381:
  3735   003408  EF0E  F01A         	goto	l7918
  3736   00340C                     u10380:
  3737   00340C                     
  3738                           ; BSR set to: 0
  3739   00340C  0E00               	movlw	0
  3740   00340E  6FAB               	movwf	Read_Sensors@raw_co& (0+255),b
  3741   003410  0E00               	movlw	0
  3742   003412  6FAC               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3743   003414  0E00               	movlw	0
  3744   003416  6FAD               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3745   003418  0E00               	movlw	0
  3746   00341A  6FAE               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3747   00341C                     l7918:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;newmain.c: 354:     if(raw_co > 1000) raw_co = 1000;
  3751   00341C  0E00               	movlw	0
  3752   00341E  6F60               	movwf	___flge@ff1& (0+255),b
  3753   003420  0E00               	movlw	0
  3754   003422  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3755   003424  0E7A               	movlw	122
  3756   003426  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3757   003428  0E44               	movlw	68
  3758   00342A  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3759   00342C  C0AB  F064         	movff	Read_Sensors@raw_co,___flge@ff2
  3760   003430  C0AC  F065         	movff	Read_Sensors@raw_co+1,___flge@ff2+1
  3761   003434  C0AD  F066         	movff	Read_Sensors@raw_co+2,___flge@ff2+2
  3762   003438  C0AE  F067         	movff	Read_Sensors@raw_co+3,___flge@ff2+3
  3763   00343C  ECFE  F02F         	call	___flge	;wreg free
  3764   003440  0100               	movlb	0	; () banked
  3765   003442  B0D8               	btfsc	status,0,c
  3766   003444  EF26  F01A         	goto	u10391
  3767   003448  EF28  F01A         	goto	u10390
  3768   00344C                     u10391:
  3769   00344C  EF30  F01A         	goto	l7922
  3770   003450                     u10390:
  3771   003450                     
  3772                           ; BSR set to: 0
  3773   003450  0E00               	movlw	0
  3774   003452  6FAB               	movwf	Read_Sensors@raw_co& (0+255),b
  3775   003454  0E00               	movlw	0
  3776   003456  6FAC               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3777   003458  0E7A               	movlw	122
  3778   00345A  6FAD               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3779   00345C  0E44               	movlw	68
  3780   00345E  6FAE               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3781   003460                     l7922:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;newmain.c: 357:     static float last_co = 0.0;;newmain.c: 358:     co_ppm = (raw_co * 
      +                          0.3) + (last_co * 0.7);
  3785   003460  0E9A               	movlw	154
  3786   003462  6E13               	movwf	___flmul@a^0,c
  3787   003464  0E99               	movlw	153
  3788   003466  6E14               	movwf	(___flmul@a+1)^0,c
  3789   003468  0E99               	movlw	153
  3790   00346A  6E15               	movwf	(___flmul@a+2)^0,c
  3791   00346C  0E3E               	movlw	62
  3792   00346E  6E16               	movwf	(___flmul@a+3)^0,c
  3793   003470  C0AB  F00F         	movff	Read_Sensors@raw_co,___flmul@b
  3794   003474  C0AC  F010         	movff	Read_Sensors@raw_co+1,___flmul@b+1
  3795   003478  C0AD  F011         	movff	Read_Sensors@raw_co+2,___flmul@b+2
  3796   00347C  C0AE  F012         	movff	Read_Sensors@raw_co+3,___flmul@b+3
  3797   003480  EC66  F020         	call	___flmul	;wreg free
  3798   003484  C00F  F041         	movff	?___flmul,___fladd@b
  3799   003488  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3800   00348C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3801   003490  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3802   003494  0E33               	movlw	51
  3803   003496  6E13               	movwf	___flmul@a^0,c
  3804   003498  0E33               	movlw	51
  3805   00349A  6E14               	movwf	(___flmul@a+1)^0,c
  3806   00349C  0E33               	movlw	51
  3807   00349E  6E15               	movwf	(___flmul@a+2)^0,c
  3808   0034A0  0E3F               	movlw	63
  3809   0034A2  6E16               	movwf	(___flmul@a+3)^0,c
  3810   0034A4  C32C  F00F         	movff	Read_Sensors@last_co,___flmul@b
  3811   0034A8  C32D  F010         	movff	Read_Sensors@last_co+1,___flmul@b+1
  3812   0034AC  C32E  F011         	movff	Read_Sensors@last_co+2,___flmul@b+2
  3813   0034B0  C32F  F012         	movff	Read_Sensors@last_co+3,___flmul@b+3
  3814   0034B4  EC66  F020         	call	___flmul	;wreg free
  3815   0034B8  C00F  F045         	movff	?___flmul,___fladd@a
  3816   0034BC  C010  F046         	movff	?___flmul+1,___fladd@a+1
  3817   0034C0  C011  F047         	movff	?___flmul+2,___fladd@a+2
  3818   0034C4  C012  F048         	movff	?___flmul+3,___fladd@a+3
  3819   0034C8  EC0B  F01E         	call	___fladd	;wreg free
  3820   0034CC  C041  F358         	movff	?___fladd,_co_ppm
  3821   0034D0  C042  F359         	movff	?___fladd+1,_co_ppm+1
  3822   0034D4  C043  F35A         	movff	?___fladd+2,_co_ppm+2
  3823   0034D8  C044  F35B         	movff	?___fladd+3,_co_ppm+3
  3824   0034DC                     
  3825                           ;newmain.c: 359:     last_co = co_ppm;
  3826   0034DC  C358  F32C         	movff	_co_ppm,Read_Sensors@last_co
  3827   0034E0  C359  F32D         	movff	_co_ppm+1,Read_Sensors@last_co+1
  3828   0034E4  C35A  F32E         	movff	_co_ppm+2,Read_Sensors@last_co+2
  3829   0034E8  C35B  F32F         	movff	_co_ppm+3,Read_Sensors@last_co+3
  3830   0034EC                     
  3831                           ;newmain.c: 362:     static unsigned int last_pulse = 0;;newmain.c: 363:     static unsi
      +                          gned long last_flow_time = 0;;newmain.c: 365:     if(system_millis - last_flow_time >= 1
      +                          000) {
  3832   0034EC  0103               	movlb	3	; () banked
  3833   0034EE  5128               	movf	Read_Sensors@last_flow_time& (0+255),w,b
  3834   0034F0  0102               	movlb	2	; () banked
  3835   0034F2  5DFA               	subwf	_system_millis& (0+255),w,b
  3836   0034F4  0100               	movlb	0	; () banked
  3837   0034F6  6F79               	movwf	??_Read_Sensors& (0+255),b
  3838   0034F8  0103               	movlb	3	; () banked
  3839   0034FA  5129               	movf	(Read_Sensors@last_flow_time+1)& (0+255),w,b
  3840   0034FC  0102               	movlb	2	; () banked
  3841   0034FE  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  3842   003500  0100               	movlb	0	; () banked
  3843   003502  6F7A               	movwf	(??_Read_Sensors+1)& (0+255),b
  3844   003504  0103               	movlb	3	; () banked
  3845   003506  512A               	movf	(Read_Sensors@last_flow_time+2)& (0+255),w,b
  3846   003508  0102               	movlb	2	; () banked
  3847   00350A  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  3848   00350C  0100               	movlb	0	; () banked
  3849   00350E  6F7B               	movwf	(??_Read_Sensors+2)& (0+255),b
  3850   003510  0103               	movlb	3	; () banked
  3851   003512  512B               	movf	(Read_Sensors@last_flow_time+3)& (0+255),w,b
  3852   003514  0102               	movlb	2	; () banked
  3853   003516  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  3854   003518  0100               	movlb	0	; () banked
  3855   00351A  6F7C               	movwf	(??_Read_Sensors+3)& (0+255),b
  3856   00351C  517C               	movf	(??_Read_Sensors+3)& (0+255),w,b
  3857   00351E  117B               	iorwf	(??_Read_Sensors+2)& (0+255),w,b
  3858   003520  E10B               	bnz	u10400
  3859   003522  0EE8               	movlw	232
  3860   003524  5D79               	subwf	??_Read_Sensors& (0+255),w,b
  3861   003526  0E03               	movlw	3
  3862   003528  597A               	subwfb	(??_Read_Sensors+1)& (0+255),w,b
  3863   00352A  A0D8               	btfss	status,0,c
  3864   00352C  EF9A  F01A         	goto	u10401
  3865   003530  EF9C  F01A         	goto	u10400
  3866   003534                     u10401:
  3867   003534  EF83  F01B         	goto	l240
  3868   003538                     u10400:
  3869   003538                     
  3870                           ; BSR set to: 0
  3871                           ;newmain.c: 366:         unsigned int current_pulses = pulse_count;
  3872   003538  C36E  F0A3         	movff	_pulse_count,Read_Sensors@current_pulses	;volatile
  3873   00353C  C36F  F0A4         	movff	_pulse_count+1,Read_Sensors@current_pulses+1	;volatile
  3874   003540                     
  3875                           ; BSR set to: 0
  3876                           ;newmain.c: 367:         unsigned int pulses_diff = current_pulses - last_pulse;
  3877   003540  0103               	movlb	3	; () banked
  3878   003542  516C               	movf	Read_Sensors@last_pulse& (0+255),w,b
  3879   003544  0100               	movlb	0	; () banked
  3880   003546  5DA3               	subwf	Read_Sensors@current_pulses& (0+255),w,b
  3881   003548  6FA5               	movwf	Read_Sensors@pulses_diff& (0+255),b
  3882   00354A  0103               	movlb	3	; () banked
  3883   00354C  516D               	movf	(Read_Sensors@last_pulse+1)& (0+255),w,b
  3884   00354E  0100               	movlb	0	; () banked
  3885   003550  59A4               	subwfb	(Read_Sensors@current_pulses+1)& (0+255),w,b
  3886   003552  6FA6               	movwf	(Read_Sensors@pulses_diff+1)& (0+255),b
  3887                           
  3888                           ;newmain.c: 370:         if(pulses_diff == 0) {
  3889   003554  51A5               	movf	Read_Sensors@pulses_diff& (0+255),w,b
  3890   003556  11A6               	iorwf	(Read_Sensors@pulses_diff+1)& (0+255),w,b
  3891   003558  A4D8               	btfss	status,2,c
  3892   00355A  EFB1  F01A         	goto	u10411
  3893   00355E  EFB3  F01A         	goto	u10410
  3894   003562                     u10411:
  3895   003562  EF0D  F01B         	goto	l7942
  3896   003566                     u10410:
  3897   003566                     
  3898                           ; BSR set to: 0
  3899                           ;newmain.c: 371:             flow_rate = 0.0;
  3900   003566  0E00               	movlw	0
  3901   003568  0103               	movlb	3	; () banked
  3902   00356A  6F54               	movwf	_flow_rate& (0+255),b
  3903   00356C  0E00               	movlw	0
  3904   00356E  6F55               	movwf	(_flow_rate+1)& (0+255),b
  3905   003570  0E00               	movlw	0
  3906   003572  6F56               	movwf	(_flow_rate+2)& (0+255),b
  3907   003574  0E00               	movlw	0
  3908   003576  6F57               	movwf	(_flow_rate+3)& (0+255),b
  3909   003578                     
  3910                           ; BSR set to: 3
  3911                           ;newmain.c: 373:             static unsigned long no_flow_start = 0;;newmain.c: 374:    
      +                                   if(no_flow_start == 0) {
  3912   003578  5124               	movf	Read_Sensors@no_flow_start& (0+255),w,b
  3913   00357A  1125               	iorwf	(Read_Sensors@no_flow_start+1)& (0+255),w,b
  3914   00357C  1126               	iorwf	(Read_Sensors@no_flow_start+2)& (0+255),w,b
  3915   00357E  1127               	iorwf	(Read_Sensors@no_flow_start+3)& (0+255),w,b
  3916   003580  A4D8               	btfss	status,2,c
  3917   003582  EFC5  F01A         	goto	u10421
  3918   003586  EFC7  F01A         	goto	u10420
  3919   00358A                     u10421:
  3920   00358A  EFD1  F01A         	goto	l7938
  3921   00358E                     u10420:
  3922   00358E                     
  3923                           ; BSR set to: 3
  3924                           ;newmain.c: 375:                 no_flow_start = system_millis;
  3925   00358E  C2FA  F324         	movff	_system_millis,Read_Sensors@no_flow_start
  3926   003592  C2FB  F325         	movff	_system_millis+1,Read_Sensors@no_flow_start+1
  3927   003596  C2FC  F326         	movff	_system_millis+2,Read_Sensors@no_flow_start+2
  3928   00359A  C2FD  F327         	movff	_system_millis+3,Read_Sensors@no_flow_start+3
  3929                           
  3930                           ;newmain.c: 376:             } else if(system_millis - no_flow_start >= 5000) {
  3931   00359E  EF77  F01B         	goto	l7948
  3932   0035A2                     l7938:
  3933                           
  3934                           ; BSR set to: 3
  3935   0035A2  5124               	movf	Read_Sensors@no_flow_start& (0+255),w,b
  3936   0035A4  0102               	movlb	2	; () banked
  3937   0035A6  5DFA               	subwf	_system_millis& (0+255),w,b
  3938   0035A8  0100               	movlb	0	; () banked
  3939   0035AA  6F79               	movwf	??_Read_Sensors& (0+255),b
  3940   0035AC  0103               	movlb	3	; () banked
  3941   0035AE  5125               	movf	(Read_Sensors@no_flow_start+1)& (0+255),w,b
  3942   0035B0  0102               	movlb	2	; () banked
  3943   0035B2  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  3944   0035B4  0100               	movlb	0	; () banked
  3945   0035B6  6F7A               	movwf	(??_Read_Sensors+1)& (0+255),b
  3946   0035B8  0103               	movlb	3	; () banked
  3947   0035BA  5126               	movf	(Read_Sensors@no_flow_start+2)& (0+255),w,b
  3948   0035BC  0102               	movlb	2	; () banked
  3949   0035BE  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  3950   0035C0  0100               	movlb	0	; () banked
  3951   0035C2  6F7B               	movwf	(??_Read_Sensors+2)& (0+255),b
  3952   0035C4  0103               	movlb	3	; () banked
  3953   0035C6  5127               	movf	(Read_Sensors@no_flow_start+3)& (0+255),w,b
  3954   0035C8  0102               	movlb	2	; () banked
  3955   0035CA  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  3956   0035CC  0100               	movlb	0	; () banked
  3957   0035CE  6F7C               	movwf	(??_Read_Sensors+3)& (0+255),b
  3958   0035D0  517C               	movf	(??_Read_Sensors+3)& (0+255),w,b
  3959   0035D2  117B               	iorwf	(??_Read_Sensors+2)& (0+255),w,b
  3960   0035D4  E10B               	bnz	u10430
  3961   0035D6  0E88               	movlw	136
  3962   0035D8  5D79               	subwf	??_Read_Sensors& (0+255),w,b
  3963   0035DA  0E13               	movlw	19
  3964   0035DC  597A               	subwfb	(??_Read_Sensors+1)& (0+255),w,b
  3965   0035DE  A0D8               	btfss	status,0,c
  3966   0035E0  EFF4  F01A         	goto	u10431
  3967   0035E4  EFF6  F01A         	goto	u10430
  3968   0035E8                     u10431:
  3969   0035E8  EF77  F01B         	goto	l7948
  3970   0035EC                     u10430:
  3971   0035EC                     
  3972                           ; BSR set to: 0
  3973                           ;newmain.c: 377:                 total_flow = 0.0;
  3974   0035EC  0E00               	movlw	0
  3975   0035EE  0103               	movlb	3	; () banked
  3976   0035F0  6F50               	movwf	_total_flow& (0+255),b
  3977   0035F2  0E00               	movlw	0
  3978   0035F4  6F51               	movwf	(_total_flow+1)& (0+255),b
  3979   0035F6  0E00               	movlw	0
  3980   0035F8  6F52               	movwf	(_total_flow+2)& (0+255),b
  3981   0035FA  0E00               	movlw	0
  3982   0035FC  6F53               	movwf	(_total_flow+3)& (0+255),b
  3983                           
  3984                           ;newmain.c: 378:                 pulse_count = 0;
  3985   0035FE  0E00               	movlw	0
  3986   003600  6F6F               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  3987   003602  0E00               	movlw	0
  3988   003604  6F6E               	movwf	_pulse_count& (0+255),b	;volatile
  3989                           
  3990                           ;newmain.c: 379:                 no_flow_start = 0;
  3991   003606  0E00               	movlw	0
  3992   003608  6F24               	movwf	Read_Sensors@no_flow_start& (0+255),b
  3993   00360A  0E00               	movlw	0
  3994   00360C  6F25               	movwf	(Read_Sensors@no_flow_start+1)& (0+255),b
  3995   00360E  0E00               	movlw	0
  3996   003610  6F26               	movwf	(Read_Sensors@no_flow_start+2)& (0+255),b
  3997   003612  0E00               	movlw	0
  3998   003614  6F27               	movwf	(Read_Sensors@no_flow_start+3)& (0+255),b
  3999   003616  EF77  F01B         	goto	l7948
  4000   00361A                     l7942:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;newmain.c: 382:             flow_rate = (pulses_diff / (float)450) * 60.0;
  4004   00361A  0E00               	movlw	0
  4005   00361C  6E2C               	movwf	___fldiv@a^0,c
  4006   00361E  0E00               	movlw	0
  4007   003620  6E2D               	movwf	(___fldiv@a+1)^0,c
  4008   003622  0EE1               	movlw	225
  4009   003624  6E2E               	movwf	(___fldiv@a+2)^0,c
  4010   003626  0E43               	movlw	67
  4011   003628  6E2F               	movwf	(___fldiv@a+3)^0,c
  4012   00362A  C0A5  F001         	movff	Read_Sensors@pulses_diff,___xxtofl@val
  4013   00362E  C0A6  F002         	movff	Read_Sensors@pulses_diff+1,___xxtofl@val+1
  4014   003632  6A03               	clrf	(___xxtofl@val+2)^0,c
  4015   003634  6A04               	clrf	(___xxtofl@val+3)^0,c
  4016   003636  0E00               	movlw	0
  4017   003638  EC5B  F02B         	call	___xxtofl
  4018   00363C  C001  F028         	movff	?___xxtofl,___fldiv@b
  4019   003640  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  4020   003644  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  4021   003648  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  4022   00364C  EC68  F024         	call	___fldiv	;wreg free
  4023   003650  C028  F00F         	movff	?___fldiv,___flmul@b
  4024   003654  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  4025   003658  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  4026   00365C  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  4027   003660  0E00               	movlw	0
  4028   003662  6E13               	movwf	___flmul@a^0,c
  4029   003664  0E00               	movlw	0
  4030   003666  6E14               	movwf	(___flmul@a+1)^0,c
  4031   003668  0E70               	movlw	112
  4032   00366A  6E15               	movwf	(___flmul@a+2)^0,c
  4033   00366C  0E42               	movlw	66
  4034   00366E  6E16               	movwf	(___flmul@a+3)^0,c
  4035   003670  EC66  F020         	call	___flmul	;wreg free
  4036   003674  C00F  F354         	movff	?___flmul,_flow_rate
  4037   003678  C010  F355         	movff	?___flmul+1,_flow_rate+1
  4038   00367C  C011  F356         	movff	?___flmul+2,_flow_rate+2
  4039   003680  C012  F357         	movff	?___flmul+3,_flow_rate+3
  4040   003684                     
  4041                           ;newmain.c: 383:             total_flow += flow_rate / 60.0;
  4042   003684  C350  F041         	movff	_total_flow,___fladd@b
  4043   003688  C351  F042         	movff	_total_flow+1,___fladd@b+1
  4044   00368C  C352  F043         	movff	_total_flow+2,___fladd@b+2
  4045   003690  C353  F044         	movff	_total_flow+3,___fladd@b+3
  4046   003694  0E00               	movlw	0
  4047   003696  6E2C               	movwf	___fldiv@a^0,c
  4048   003698  0E00               	movlw	0
  4049   00369A  6E2D               	movwf	(___fldiv@a+1)^0,c
  4050   00369C  0E70               	movlw	112
  4051   00369E  6E2E               	movwf	(___fldiv@a+2)^0,c
  4052   0036A0  0E42               	movlw	66
  4053   0036A2  6E2F               	movwf	(___fldiv@a+3)^0,c
  4054   0036A4  C354  F028         	movff	_flow_rate,___fldiv@b
  4055   0036A8  C355  F029         	movff	_flow_rate+1,___fldiv@b+1
  4056   0036AC  C356  F02A         	movff	_flow_rate+2,___fldiv@b+2
  4057   0036B0  C357  F02B         	movff	_flow_rate+3,___fldiv@b+3
  4058   0036B4  EC68  F024         	call	___fldiv	;wreg free
  4059   0036B8  C028  F045         	movff	?___fldiv,___fladd@a
  4060   0036BC  C029  F046         	movff	?___fldiv+1,___fladd@a+1
  4061   0036C0  C02A  F047         	movff	?___fldiv+2,___fladd@a+2
  4062   0036C4  C02B  F048         	movff	?___fldiv+3,___fladd@a+3
  4063   0036C8  EC0B  F01E         	call	___fladd	;wreg free
  4064   0036CC  C041  F350         	movff	?___fladd,_total_flow
  4065   0036D0  C042  F351         	movff	?___fladd+1,_total_flow+1
  4066   0036D4  C043  F352         	movff	?___fladd+2,_total_flow+2
  4067   0036D8  C044  F353         	movff	?___fladd+3,_total_flow+3
  4068   0036DC                     
  4069                           ;newmain.c: 385:             static unsigned long no_flow_start = 0;;newmain.c: 386:    
      +                                   no_flow_start = 0;
  4070   0036DC  0E00               	movlw	0
  4071   0036DE  0103               	movlb	3	; () banked
  4072   0036E0  6F20               	movwf	Read_Sensors@o_flow_start_748& (0+255),b
  4073   0036E2  0E00               	movlw	0
  4074   0036E4  6F21               	movwf	(Read_Sensors@o_flow_start_748+1)& (0+255),b
  4075   0036E6  0E00               	movlw	0
  4076   0036E8  6F22               	movwf	(Read_Sensors@o_flow_start_748+2)& (0+255),b
  4077   0036EA  0E00               	movlw	0
  4078   0036EC  6F23               	movwf	(Read_Sensors@o_flow_start_748+3)& (0+255),b
  4079   0036EE                     l7948:
  4080                           
  4081                           ;newmain.c: 389:         last_pulse = current_pulses;
  4082   0036EE  C0A3  F36C         	movff	Read_Sensors@current_pulses,Read_Sensors@last_pulse
  4083   0036F2  C0A4  F36D         	movff	Read_Sensors@current_pulses+1,Read_Sensors@last_pulse+1
  4084   0036F6                     
  4085                           ;newmain.c: 390:         last_flow_time = system_millis;
  4086   0036F6  C2FA  F328         	movff	_system_millis,Read_Sensors@last_flow_time
  4087   0036FA  C2FB  F329         	movff	_system_millis+1,Read_Sensors@last_flow_time+1
  4088   0036FE  C2FC  F32A         	movff	_system_millis+2,Read_Sensors@last_flow_time+2
  4089   003702  C2FD  F32B         	movff	_system_millis+3,Read_Sensors@last_flow_time+3
  4090   003706                     l240:
  4091   003706  0012               	return		;funcret
  4092   003708                     __end_of_Read_Sensors:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function _powf *****************
  4096 ;; Defined at:
  4097 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\powf.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  x               4    8[BANK0 ] float 
  4100 ;;  y               4   12[BANK0 ] float 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  s2              4  144[BANK1 ] float 
  4103 ;;  s_h             4  116[BANK1 ] struct fui
  4104 ;;  t_h             4  112[BANK1 ] struct fui
  4105 ;;  t_l             4   52[BANK1 ] float 
  4106 ;;  s_l             4   48[BANK1 ] float 
  4107 ;;  z               4  180[BANK1 ] struct fui
  4108 ;;  t               4  176[BANK1 ] struct fui
  4109 ;;  ix              4  172[BANK1 ] struct fui
  4110 ;;  j               4  168[BANK1 ] long 
  4111 ;;  k               4  164[BANK1 ] long 
  4112 ;;  p_h             4  160[BANK1 ] struct fui
  4113 ;;  is              4  152[BANK1 ] struct fui
  4114 ;;  iy              4  148[BANK1 ] long 
  4115 ;;  t1              4  140[BANK1 ] struct fui
  4116 ;;  n               4  136[BANK1 ] long 
  4117 ;;  hy              4  132[BANK1 ] struct fui
  4118 ;;  v               4  128[BANK1 ] float 
  4119 ;;  u               4  124[BANK1 ] float 
  4120 ;;  ax              4  120[BANK1 ] struct fui
  4121 ;;  p_l             4  108[BANK1 ] float 
  4122 ;;  hx              4  104[BANK1 ] struct fui
  4123 ;;  sn              4  100[BANK1 ] unsigned long 
  4124 ;;  s               4   96[BANK1 ] float 
  4125 ;;  yisint          4   84[BANK1 ] long 
  4126 ;;  r               4   80[BANK1 ] float 
  4127 ;;  w               4   68[BANK1 ] float 
  4128 ;;  y1              4   44[BANK1 ] struct fui
  4129 ;;  i               4   40[BANK1 ] long 
  4130 ;;  z_l             4   36[BANK1 ] float 
  4131 ;;  z_h             4   32[BANK1 ] float 
  4132 ;;  t2              4   28[BANK1 ] float 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  4    8[BANK0 ] float 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4142 ;;      Params:         0       8       0       0       0       0       0       0       0
  4143 ;;      Locals:         0       0     184       0       0       0       0       0       0
  4144 ;;      Temps:          0       9       0       0       0       0       0       0       0
  4145 ;;      Totals:         0      17     184       0       0       0       0       0       0
  4146 ;;Total ram usage:      201 bytes
  4147 ;; Hardware stack levels used: 1
  4148 ;; Hardware stack levels required when called: 3
  4149 ;; This function calls:
  4150 ;;		___fladd
  4151 ;;		___fldiv
  4152 ;;		___flge
  4153 ;;		___flmul
  4154 ;;		___flneg
  4155 ;;		___flsub
  4156 ;;		___xxtofl
  4157 ;;		_scalbnf
  4158 ;;		_sqrtf
  4159 ;; This function is called by:
  4160 ;;		_Read_Sensors
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text6
  4165   000012                     __ptext6:
  4166                           	callstack 0
  4167   000012                     _powf:
  4168                           	callstack 26
  4169   000012  C068  F168         	movff	powf@x,powf@hx
  4170   000016  C069  F169         	movff	powf@x+1,powf@hx+1
  4171   00001A  C06A  F16A         	movff	powf@x+2,powf@hx+2
  4172   00001E  C06B  F16B         	movff	powf@x+3,powf@hx+3
  4173   000022  C06C  F184         	movff	powf@y,powf@hy
  4174   000026  C06D  F185         	movff	powf@y+1,powf@hy+1
  4175   00002A  C06E  F186         	movff	powf@y+2,powf@hy+2
  4176   00002E  C06F  F187         	movff	powf@y+3,powf@hy+3
  4177   000032  0EFF               	movlw	255
  4178   000034  0101               	movlb	1	; () banked
  4179   000036  1568               	andwf	powf@hx& (0+255),w,b
  4180   000038  6FAC               	movwf	powf@ix& (0+255),b
  4181   00003A  0EFF               	movlw	255
  4182   00003C  1569               	andwf	(powf@hx+1)& (0+255),w,b
  4183   00003E  6FAD               	movwf	(powf@ix+1)& (0+255),b
  4184   000040  0EFF               	movlw	255
  4185   000042  156A               	andwf	(powf@hx+2)& (0+255),w,b
  4186   000044  6FAE               	movwf	(powf@ix+2)& (0+255),b
  4187   000046  0E7F               	movlw	127
  4188   000048  156B               	andwf	(powf@hx+3)& (0+255),w,b
  4189   00004A  6FAF               	movwf	(powf@ix+3)& (0+255),b
  4190   00004C  0EFF               	movlw	255
  4191   00004E  1584               	andwf	powf@hy& (0+255),w,b
  4192   000050  6F94               	movwf	powf@iy& (0+255),b
  4193   000052  0EFF               	movlw	255
  4194   000054  1585               	andwf	(powf@hy+1)& (0+255),w,b
  4195   000056  6F95               	movwf	(powf@iy+1)& (0+255),b
  4196   000058  0EFF               	movlw	255
  4197   00005A  1586               	andwf	(powf@hy+2)& (0+255),w,b
  4198   00005C  6F96               	movwf	(powf@iy+2)& (0+255),b
  4199   00005E  0E7F               	movlw	127
  4200   000060  1587               	andwf	(powf@hy+3)& (0+255),w,b
  4201   000062  6F97               	movwf	(powf@iy+3)& (0+255),b
  4202   000064  5194               	movf	powf@iy& (0+255),w,b
  4203   000066  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4204   000068  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  4205   00006A  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  4206   00006C  A4D8               	btfss	status,2,c
  4207   00006E  EF3B  F000         	goto	u9661
  4208   000072  EF3D  F000         	goto	u9660
  4209   000076                     u9661:
  4210   000076  EF48  F000         	goto	l7390
  4211   00007A                     u9660:
  4212   00007A                     
  4213                           ; BSR set to: 1
  4214   00007A  0E00               	movlw	0
  4215   00007C  0100               	movlb	0	; () banked
  4216   00007E  6F68               	movwf	?_powf& (0+255),b
  4217   000080  0E00               	movlw	0
  4218   000082  6F69               	movwf	(?_powf+1)& (0+255),b
  4219   000084  0E80               	movlw	128
  4220   000086  6F6A               	movwf	(?_powf+2)& (0+255),b
  4221   000088  0E3F               	movlw	63
  4222   00008A  6F6B               	movwf	(?_powf+3)& (0+255),b
  4223   00008C  EF63  F012         	goto	l1277
  4224   000090                     l7390:
  4225                           
  4226                           ; BSR set to: 1
  4227   000090  0E80               	movlw	128
  4228   000092  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  4229   000094  E109               	bnz	u9671
  4230   000096  0E3F               	movlw	63
  4231   000098  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  4232   00009A  1168               	iorwf	powf@hx& (0+255),w,b
  4233   00009C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  4234   00009E  A4D8               	btfss	status,2,c
  4235   0000A0  EF54  F000         	goto	u9671
  4236   0000A4  EF56  F000         	goto	u9670
  4237   0000A8                     u9671:
  4238   0000A8  EF61  F000         	goto	l7396
  4239   0000AC                     u9670:
  4240   0000AC                     
  4241                           ; BSR set to: 1
  4242   0000AC  0E00               	movlw	0
  4243   0000AE  0100               	movlb	0	; () banked
  4244   0000B0  6F68               	movwf	?_powf& (0+255),b
  4245   0000B2  0E00               	movlw	0
  4246   0000B4  6F69               	movwf	(?_powf+1)& (0+255),b
  4247   0000B6  0E80               	movlw	128
  4248   0000B8  6F6A               	movwf	(?_powf+2)& (0+255),b
  4249   0000BA  0E3F               	movlw	63
  4250   0000BC  6F6B               	movwf	(?_powf+3)& (0+255),b
  4251   0000BE  EF63  F012         	goto	l1277
  4252   0000C2                     l7396:
  4253                           
  4254                           ; BSR set to: 1
  4255   0000C2  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4256   0000C4  EF72  F000         	goto	u9680
  4257   0000C8  05AC               	decf	powf@ix& (0+255),w,b
  4258   0000CA  0E00               	movlw	0
  4259   0000CC  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4260   0000CE  0E80               	movlw	128
  4261   0000D0  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4262   0000D2  0E7F               	movlw	127
  4263   0000D4  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4264   0000D6  B0D8               	btfsc	status,0,c
  4265   0000D8  EF70  F000         	goto	u9681
  4266   0000DC  EF72  F000         	goto	u9680
  4267   0000E0                     u9681:
  4268   0000E0  EF83  F000         	goto	l7400
  4269   0000E4                     u9680:
  4270   0000E4                     
  4271                           ; BSR set to: 1
  4272   0000E4  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4273   0000E6  EF81  F000         	goto	u9691
  4274   0000EA  0594               	decf	powf@iy& (0+255),w,b
  4275   0000EC  0E00               	movlw	0
  4276   0000EE  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  4277   0000F0  0E80               	movlw	128
  4278   0000F2  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  4279   0000F4  0E7F               	movlw	127
  4280   0000F6  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4281   0000F8  A0D8               	btfss	status,0,c
  4282   0000FA  EF81  F000         	goto	u9691
  4283   0000FE  EF83  F000         	goto	u9690
  4284   000102                     u9691:
  4285   000102  EF9F  F000         	goto	l7404
  4286   000106                     u9690:
  4287   000106                     l7400:
  4288                           
  4289                           ; BSR set to: 1
  4290   000106  C068  F041         	movff	powf@x,___fladd@b
  4291   00010A  C069  F042         	movff	powf@x+1,___fladd@b+1
  4292   00010E  C06A  F043         	movff	powf@x+2,___fladd@b+2
  4293   000112  C06B  F044         	movff	powf@x+3,___fladd@b+3
  4294   000116  C06C  F045         	movff	powf@y,___fladd@a
  4295   00011A  C06D  F046         	movff	powf@y+1,___fladd@a+1
  4296   00011E  C06E  F047         	movff	powf@y+2,___fladd@a+2
  4297   000122  C06F  F048         	movff	powf@y+3,___fladd@a+3
  4298   000126  EC0B  F01E         	call	___fladd	;wreg free
  4299   00012A  C041  F068         	movff	?___fladd,?_powf
  4300   00012E  C042  F069         	movff	?___fladd+1,?_powf+1
  4301   000132  C043  F06A         	movff	?___fladd+2,?_powf+2
  4302   000136  C044  F06B         	movff	?___fladd+3,?_powf+3
  4303   00013A  EF63  F012         	goto	l1277
  4304   00013E                     l7404:
  4305                           
  4306                           ; BSR set to: 1
  4307   00013E  0E00               	movlw	0
  4308   000140  6F54               	movwf	powf@yisint& (0+255),b
  4309   000142  0E00               	movlw	0
  4310   000144  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4311   000146  0E00               	movlw	0
  4312   000148  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4313   00014A  0E00               	movlw	0
  4314   00014C  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4315   00014E                     
  4316                           ; BSR set to: 1
  4317   00014E  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4318   000150  EFAE  F000         	goto	u9700
  4319   000154  EFAC  F000         	goto	u9701
  4320   000158                     u9701:
  4321   000158  EF7A  F001         	goto	l1282
  4322   00015C                     u9700:
  4323   00015C                     
  4324                           ; BSR set to: 1
  4325   00015C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4326   00015E  EFBA  F000         	goto	u9711
  4327   000162  0E80               	movlw	128
  4328   000164  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4329   000166  0E4B               	movlw	75
  4330   000168  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4331   00016A  A0D8               	btfss	status,0,c
  4332   00016C  EFBA  F000         	goto	u9711
  4333   000170  EFBC  F000         	goto	u9710
  4334   000174                     u9711:
  4335   000174  EFC6  F000         	goto	l7412
  4336   000178                     u9710:
  4337   000178                     
  4338                           ; BSR set to: 1
  4339   000178  0E02               	movlw	2
  4340   00017A  6F54               	movwf	powf@yisint& (0+255),b
  4341   00017C  0E00               	movlw	0
  4342   00017E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4343   000180  0E00               	movlw	0
  4344   000182  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4345   000184  0E00               	movlw	0
  4346   000186  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4347   000188  EF7A  F001         	goto	l1282
  4348   00018C                     l7412:
  4349                           
  4350                           ; BSR set to: 1
  4351   00018C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4352   00018E  EFD2  F000         	goto	u9721
  4353   000192  0E80               	movlw	128
  4354   000194  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4355   000196  0E3F               	movlw	63
  4356   000198  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4357   00019A  A0D8               	btfss	status,0,c
  4358   00019C  EFD2  F000         	goto	u9721
  4359   0001A0  EFD4  F000         	goto	u9720
  4360   0001A4                     u9721:
  4361   0001A4  EF7A  F001         	goto	l1282
  4362   0001A8                     u9720:
  4363   0001A8                     
  4364                           ; BSR set to: 1
  4365   0001A8  0E17               	movlw	23
  4366   0001AA  0100               	movlb	0	; () banked
  4367   0001AC  6F70               	movwf	??_powf& (0+255),b
  4368   0001AE  C194  F071         	movff	powf@iy,??_powf+1
  4369   0001B2  C195  F072         	movff	powf@iy+1,??_powf+2
  4370   0001B6  C196  F073         	movff	powf@iy+2,??_powf+3
  4371   0001BA  C197  F074         	movff	powf@iy+3,??_powf+4
  4372   0001BE                     u9735:
  4373   0001BE  6770               	tstfsz	??_powf& (0+255),b
  4374   0001C0  EFE4  F000         	goto	u9736
  4375   0001C4  EFEC  F000         	goto	u9737
  4376   0001C8                     u9736:
  4377   0001C8  3574               	rlcf	(??_powf+4)& (0+255),w,b
  4378   0001CA  3374               	rrcf	(??_powf+4)& (0+255),f,b
  4379   0001CC  3373               	rrcf	(??_powf+3)& (0+255),f,b
  4380   0001CE  3372               	rrcf	(??_powf+2)& (0+255),f,b
  4381   0001D0  3371               	rrcf	(??_powf+1)& (0+255),f,b
  4382   0001D2  2F70               	decfsz	??_powf& (0+255),f,b
  4383   0001D4  EFDF  F000         	goto	u9735
  4384   0001D8                     u9737:
  4385   0001D8  0E81               	movlw	129
  4386   0001DA  0100               	movlb	0	; () banked
  4387   0001DC  2571               	addwf	(??_powf+1)& (0+255),w,b
  4388   0001DE  0101               	movlb	1	; () banked
  4389   0001E0  6FA4               	movwf	powf@k& (0+255),b
  4390   0001E2  0EFF               	movlw	255
  4391   0001E4  0100               	movlb	0	; () banked
  4392   0001E6  2172               	addwfc	(??_powf+2)& (0+255),w,b
  4393   0001E8  0101               	movlb	1	; () banked
  4394   0001EA  6FA5               	movwf	(powf@k+1)& (0+255),b
  4395   0001EC  0EFF               	movlw	255
  4396   0001EE  0100               	movlb	0	; () banked
  4397   0001F0  2173               	addwfc	(??_powf+3)& (0+255),w,b
  4398   0001F2  0101               	movlb	1	; () banked
  4399   0001F4  6FA6               	movwf	(powf@k+2)& (0+255),b
  4400   0001F6  0EFF               	movlw	255
  4401   0001F8  0100               	movlb	0	; () banked
  4402   0001FA  2174               	addwfc	(??_powf+4)& (0+255),w,b
  4403   0001FC  0101               	movlb	1	; () banked
  4404   0001FE  6FA7               	movwf	(powf@k+3)& (0+255),b
  4405   000200  51A4               	movf	powf@k& (0+255),w,b
  4406   000202  0817               	sublw	23
  4407   000204  0100               	movlb	0	; () banked
  4408   000206  6F70               	movwf	??_powf& (0+255),b
  4409   000208  C194  F071         	movff	powf@iy,??_powf+1
  4410   00020C  C195  F072         	movff	powf@iy+1,??_powf+2
  4411   000210  C196  F073         	movff	powf@iy+2,??_powf+3
  4412   000214  C197  F074         	movff	powf@iy+3,??_powf+4
  4413   000218                     u9745:
  4414   000218  6770               	tstfsz	??_powf& (0+255),b
  4415   00021A  EF11  F001         	goto	u9746
  4416   00021E  EF19  F001         	goto	u9747
  4417   000222                     u9746:
  4418   000222  3574               	rlcf	(??_powf+4)& (0+255),w,b
  4419   000224  3374               	rrcf	(??_powf+4)& (0+255),f,b
  4420   000226  3373               	rrcf	(??_powf+3)& (0+255),f,b
  4421   000228  3372               	rrcf	(??_powf+2)& (0+255),f,b
  4422   00022A  3371               	rrcf	(??_powf+1)& (0+255),f,b
  4423   00022C  2F70               	decfsz	??_powf& (0+255),f,b
  4424   00022E  EF0C  F001         	goto	u9745
  4425   000232                     u9747:
  4426   000232  C071  F1A8         	movff	??_powf+1,powf@j
  4427   000236  C072  F1A9         	movff	??_powf+2,powf@j+1
  4428   00023A  C073  F1AA         	movff	??_powf+3,powf@j+2
  4429   00023E  C074  F1AB         	movff	??_powf+4,powf@j+3
  4430   000242  0101               	movlb	1	; () banked
  4431   000244  51A4               	movf	powf@k& (0+255),w,b
  4432   000246  0817               	sublw	23
  4433   000248  0100               	movlb	0	; () banked
  4434   00024A  6F70               	movwf	??_powf& (0+255),b
  4435   00024C  C1A8  F071         	movff	powf@j,??_powf+1
  4436   000250  C1A9  F072         	movff	powf@j+1,??_powf+2
  4437   000254  C1AA  F073         	movff	powf@j+2,??_powf+3
  4438   000258  C1AB  F074         	movff	powf@j+3,??_powf+4
  4439   00025C  2B70               	incf	??_powf& (0+255),f,b
  4440   00025E  EF36  F001         	goto	u9750
  4441   000262                     u9755:
  4442   000262  90D8               	bcf	status,0,c
  4443   000264  3771               	rlcf	(??_powf+1)& (0+255),f,b
  4444   000266  3772               	rlcf	(??_powf+2)& (0+255),f,b
  4445   000268  3773               	rlcf	(??_powf+3)& (0+255),f,b
  4446   00026A  3774               	rlcf	(??_powf+4)& (0+255),f,b
  4447   00026C                     u9750:
  4448   00026C  2F70               	decfsz	??_powf& (0+255),f,b
  4449   00026E  EF31  F001         	goto	u9755
  4450   000272  0101               	movlb	1	; () banked
  4451   000274  5194               	movf	powf@iy& (0+255),w,b
  4452   000276  0100               	movlb	0	; () banked
  4453   000278  1971               	xorwf	(??_powf+1)& (0+255),w,b
  4454   00027A  E113               	bnz	u9761
  4455   00027C  0101               	movlb	1	; () banked
  4456   00027E  5195               	movf	(powf@iy+1)& (0+255),w,b
  4457   000280  0100               	movlb	0	; () banked
  4458   000282  1972               	xorwf	(??_powf+2)& (0+255),w,b
  4459   000284  E10E               	bnz	u9761
  4460   000286  0101               	movlb	1	; () banked
  4461   000288  5196               	movf	(powf@iy+2)& (0+255),w,b
  4462   00028A  0100               	movlb	0	; () banked
  4463   00028C  1973               	xorwf	(??_powf+3)& (0+255),w,b
  4464   00028E  E109               	bnz	u9761
  4465   000290  0101               	movlb	1	; () banked
  4466   000292  5197               	movf	(powf@iy+3)& (0+255),w,b
  4467   000294  0100               	movlb	0	; () banked
  4468   000296  1974               	xorwf	(??_powf+4)& (0+255),w,b
  4469   000298  A4D8               	btfss	status,2,c
  4470   00029A  EF51  F001         	goto	u9761
  4471   00029E  EF53  F001         	goto	u9760
  4472   0002A2                     u9761:
  4473   0002A2  EF7A  F001         	goto	l1282
  4474   0002A6                     u9760:
  4475   0002A6                     
  4476                           ; BSR set to: 0
  4477   0002A6  0E01               	movlw	1
  4478   0002A8  0101               	movlb	1	; () banked
  4479   0002AA  15A8               	andwf	powf@j& (0+255),w,b
  4480   0002AC  0100               	movlb	0	; () banked
  4481   0002AE  6F70               	movwf	??_powf& (0+255),b
  4482   0002B0  0E00               	movlw	0
  4483   0002B2  0101               	movlb	1	; () banked
  4484   0002B4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  4485   0002B6  0100               	movlb	0	; () banked
  4486   0002B8  6F71               	movwf	(??_powf+1)& (0+255),b
  4487   0002BA  0E00               	movlw	0
  4488   0002BC  0101               	movlb	1	; () banked
  4489   0002BE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  4490   0002C0  0100               	movlb	0	; () banked
  4491   0002C2  6F72               	movwf	(??_powf+2)& (0+255),b
  4492   0002C4  0E00               	movlw	0
  4493   0002C6  0101               	movlb	1	; () banked
  4494   0002C8  15AB               	andwf	(powf@j+3)& (0+255),w,b
  4495   0002CA  0100               	movlb	0	; () banked
  4496   0002CC  6F73               	movwf	(??_powf+3)& (0+255),b
  4497   0002CE  5170               	movf	??_powf& (0+255),w,b
  4498   0002D0  0802               	sublw	2
  4499   0002D2  0101               	movlb	1	; () banked
  4500   0002D4  6F54               	movwf	powf@yisint& (0+255),b
  4501   0002D6  0E00               	movlw	0
  4502   0002D8  0100               	movlb	0	; () banked
  4503   0002DA  5571               	subfwb	(??_powf+1)& (0+255),w,b
  4504   0002DC  0101               	movlb	1	; () banked
  4505   0002DE  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4506   0002E0  0E00               	movlw	0
  4507   0002E2  0100               	movlb	0	; () banked
  4508   0002E4  5572               	subfwb	(??_powf+2)& (0+255),w,b
  4509   0002E6  0101               	movlb	1	; () banked
  4510   0002E8  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4511   0002EA  0E00               	movlw	0
  4512   0002EC  0100               	movlb	0	; () banked
  4513   0002EE  5573               	subfwb	(??_powf+3)& (0+255),w,b
  4514   0002F0  0101               	movlb	1	; () banked
  4515   0002F2  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4516   0002F4                     l1282:
  4517   0002F4  0E80               	movlw	128
  4518   0002F6  0101               	movlb	1	; () banked
  4519   0002F8  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4520   0002FA  E109               	bnz	u9771
  4521   0002FC  0E7F               	movlw	127
  4522   0002FE  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4523   000300  1194               	iorwf	powf@iy& (0+255),w,b
  4524   000302  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4525   000304  A4D8               	btfss	status,2,c
  4526   000306  EF87  F001         	goto	u9771
  4527   00030A  EF89  F001         	goto	u9770
  4528   00030E                     u9771:
  4529   00030E  EFF5  F001         	goto	l7442
  4530   000312                     u9770:
  4531   000312                     
  4532                           ; BSR set to: 1
  4533   000312  0E80               	movlw	128
  4534   000314  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4535   000316  E109               	bnz	u9781
  4536   000318  0E3F               	movlw	63
  4537   00031A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4538   00031C  11AC               	iorwf	powf@ix& (0+255),w,b
  4539   00031E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4540   000320  A4D8               	btfss	status,2,c
  4541   000322  EF95  F001         	goto	u9781
  4542   000326  EF97  F001         	goto	u9780
  4543   00032A                     u9781:
  4544   00032A  EFA2  F001         	goto	l7426
  4545   00032E                     u9780:
  4546   00032E                     
  4547                           ; BSR set to: 1
  4548   00032E  0E00               	movlw	0
  4549   000330  0100               	movlb	0	; () banked
  4550   000332  6F68               	movwf	?_powf& (0+255),b
  4551   000334  0E00               	movlw	0
  4552   000336  6F69               	movwf	(?_powf+1)& (0+255),b
  4553   000338  0E80               	movlw	128
  4554   00033A  6F6A               	movwf	(?_powf+2)& (0+255),b
  4555   00033C  0E3F               	movlw	63
  4556   00033E  6F6B               	movwf	(?_powf+3)& (0+255),b
  4557   000340  EF63  F012         	goto	l1277
  4558   000344                     l7426:
  4559                           
  4560                           ; BSR set to: 1
  4561   000344  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4562   000346  EFB1  F001         	goto	u9791
  4563   00034A  05AC               	decf	powf@ix& (0+255),w,b
  4564   00034C  0E00               	movlw	0
  4565   00034E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4566   000350  0E80               	movlw	128
  4567   000352  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4568   000354  0E3F               	movlw	63
  4569   000356  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4570   000358  A0D8               	btfss	status,0,c
  4571   00035A  EFB1  F001         	goto	u9791
  4572   00035E  EFB3  F001         	goto	u9790
  4573   000362                     u9791:
  4574   000362  EFCF  F001         	goto	l7434
  4575   000366                     u9790:
  4576   000366                     
  4577                           ; BSR set to: 1
  4578   000366  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4579   000368  EFBA  F001         	goto	u9800
  4580   00036C  EFB8  F001         	goto	u9801
  4581   000370                     u9801:
  4582   000370  EFC5  F001         	goto	l1292
  4583   000374                     u9800:
  4584   000374                     
  4585                           ; BSR set to: 1
  4586   000374  0E00               	movlw	0
  4587   000376  0100               	movlb	0	; () banked
  4588   000378  6F68               	movwf	?_powf& (0+255),b
  4589   00037A  0E00               	movlw	0
  4590   00037C  6F69               	movwf	(?_powf+1)& (0+255),b
  4591   00037E  0E00               	movlw	0
  4592   000380  6F6A               	movwf	(?_powf+2)& (0+255),b
  4593   000382  0E00               	movlw	0
  4594   000384  6F6B               	movwf	(?_powf+3)& (0+255),b
  4595   000386  EF63  F012         	goto	l1277
  4596   00038A                     l1292:
  4597                           
  4598                           ; BSR set to: 1
  4599   00038A  C06C  F068         	movff	powf@y,?_powf
  4600   00038E  C06D  F069         	movff	powf@y+1,?_powf+1
  4601   000392  C06E  F06A         	movff	powf@y+2,?_powf+2
  4602   000396  C06F  F06B         	movff	powf@y+3,?_powf+3
  4603   00039A  EF63  F012         	goto	l1277
  4604   00039E                     l7434:
  4605                           
  4606                           ; BSR set to: 1
  4607   00039E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4608   0003A0  EFD6  F001         	goto	u9810
  4609   0003A4  EFD4  F001         	goto	u9811
  4610   0003A8                     u9811:
  4611   0003A8  EFEA  F001         	goto	l7438
  4612   0003AC                     u9810:
  4613   0003AC                     
  4614                           ; BSR set to: 1
  4615   0003AC  C06C  F001         	movff	powf@y,___flneg@f1
  4616   0003B0  C06D  F002         	movff	powf@y+1,___flneg@f1+1
  4617   0003B4  C06E  F003         	movff	powf@y+2,___flneg@f1+2
  4618   0003B8  C06F  F004         	movff	powf@y+3,___flneg@f1+3
  4619   0003BC  EC45  F037         	call	___flneg	;wreg free
  4620   0003C0  C001  F068         	movff	?___flneg,?_powf
  4621   0003C4  C002  F069         	movff	?___flneg+1,?_powf+1
  4622   0003C8  C003  F06A         	movff	?___flneg+2,?_powf+2
  4623   0003CC  C004  F06B         	movff	?___flneg+3,?_powf+3
  4624   0003D0  EF63  F012         	goto	l1277
  4625   0003D4                     l7438:
  4626                           
  4627                           ; BSR set to: 1
  4628   0003D4  0E00               	movlw	0
  4629   0003D6  0100               	movlb	0	; () banked
  4630   0003D8  6F68               	movwf	?_powf& (0+255),b
  4631   0003DA  0E00               	movlw	0
  4632   0003DC  6F69               	movwf	(?_powf+1)& (0+255),b
  4633   0003DE  0E00               	movlw	0
  4634   0003E0  6F6A               	movwf	(?_powf+2)& (0+255),b
  4635   0003E2  0E00               	movlw	0
  4636   0003E4  6F6B               	movwf	(?_powf+3)& (0+255),b
  4637   0003E6  EF63  F012         	goto	l1277
  4638   0003EA                     l7442:
  4639                           
  4640                           ; BSR set to: 1
  4641   0003EA  0E80               	movlw	128
  4642   0003EC  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4643   0003EE  E109               	bnz	u9821
  4644   0003F0  0E3F               	movlw	63
  4645   0003F2  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4646   0003F4  1194               	iorwf	powf@iy& (0+255),w,b
  4647   0003F6  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4648   0003F8  A4D8               	btfss	status,2,c
  4649   0003FA  EF01  F002         	goto	u9821
  4650   0003FE  EF03  F002         	goto	u9820
  4651   000402                     u9821:
  4652   000402  EF30  F002         	goto	l7448
  4653   000406                     u9820:
  4654   000406                     
  4655                           ; BSR set to: 1
  4656   000406  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4657   000408  EF0A  F002         	goto	u9830
  4658   00040C  EF08  F002         	goto	u9831
  4659   000410                     u9831:
  4660   000410  EF26  F002         	goto	l1302
  4661   000414                     u9830:
  4662   000414                     
  4663                           ; BSR set to: 1
  4664   000414  0E00               	movlw	0
  4665   000416  6E28               	movwf	___fldiv@b^0,c
  4666   000418  0E00               	movlw	0
  4667   00041A  6E29               	movwf	(___fldiv@b+1)^0,c
  4668   00041C  0E80               	movlw	128
  4669   00041E  6E2A               	movwf	(___fldiv@b+2)^0,c
  4670   000420  0E3F               	movlw	63
  4671   000422  6E2B               	movwf	(___fldiv@b+3)^0,c
  4672   000424  C068  F02C         	movff	powf@x,___fldiv@a
  4673   000428  C069  F02D         	movff	powf@x+1,___fldiv@a+1
  4674   00042C  C06A  F02E         	movff	powf@x+2,___fldiv@a+2
  4675   000430  C06B  F02F         	movff	powf@x+3,___fldiv@a+3
  4676   000434  EC68  F024         	call	___fldiv	;wreg free
  4677   000438  C028  F068         	movff	?___fldiv,?_powf
  4678   00043C  C029  F069         	movff	?___fldiv+1,?_powf+1
  4679   000440  C02A  F06A         	movff	?___fldiv+2,?_powf+2
  4680   000444  C02B  F06B         	movff	?___fldiv+3,?_powf+3
  4681   000448  EF63  F012         	goto	l1277
  4682   00044C                     l1302:
  4683                           
  4684                           ; BSR set to: 1
  4685   00044C  C068  F068         	movff	powf@x,?_powf
  4686   000450  C069  F069         	movff	powf@x+1,?_powf+1
  4687   000454  C06A  F06A         	movff	powf@x+2,?_powf+2
  4688   000458  C06B  F06B         	movff	powf@x+3,?_powf+3
  4689   00045C  EF63  F012         	goto	l1277
  4690   000460                     l7448:
  4691                           
  4692                           ; BSR set to: 1
  4693   000460  0E40               	movlw	64
  4694   000462  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4695   000464  1184               	iorwf	powf@hy& (0+255),w,b
  4696   000466  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4697   000468  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4698   00046A  A4D8               	btfss	status,2,c
  4699   00046C  EF3A  F002         	goto	u9841
  4700   000470  EF3C  F002         	goto	u9840
  4701   000474                     u9841:
  4702   000474  EF58  F002         	goto	l7454
  4703   000478                     u9840:
  4704   000478                     
  4705                           ; BSR set to: 1
  4706   000478  C068  F00F         	movff	powf@x,___flmul@b
  4707   00047C  C069  F010         	movff	powf@x+1,___flmul@b+1
  4708   000480  C06A  F011         	movff	powf@x+2,___flmul@b+2
  4709   000484  C06B  F012         	movff	powf@x+3,___flmul@b+3
  4710   000488  C068  F013         	movff	powf@x,___flmul@a
  4711   00048C  C069  F014         	movff	powf@x+1,___flmul@a+1
  4712   000490  C06A  F015         	movff	powf@x+2,___flmul@a+2
  4713   000494  C06B  F016         	movff	powf@x+3,___flmul@a+3
  4714   000498  EC66  F020         	call	___flmul	;wreg free
  4715   00049C  C00F  F068         	movff	?___flmul,?_powf
  4716   0004A0  C010  F069         	movff	?___flmul+1,?_powf+1
  4717   0004A4  C011  F06A         	movff	?___flmul+2,?_powf+2
  4718   0004A8  C012  F06B         	movff	?___flmul+3,?_powf+3
  4719   0004AC  EF63  F012         	goto	l1277
  4720   0004B0                     l7454:
  4721                           
  4722                           ; BSR set to: 1
  4723   0004B0  0E3F               	movlw	63
  4724   0004B2  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4725   0004B4  1184               	iorwf	powf@hy& (0+255),w,b
  4726   0004B6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4727   0004B8  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4728   0004BA  A4D8               	btfss	status,2,c
  4729   0004BC  EF62  F002         	goto	u9851
  4730   0004C0  EF64  F002         	goto	u9850
  4731   0004C4                     u9851:
  4732   0004C4  EF7F  F002         	goto	l1306
  4733   0004C8                     u9850:
  4734   0004C8                     
  4735                           ; BSR set to: 1
  4736   0004C8  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4737   0004CA  EF69  F002         	goto	u9861
  4738   0004CE  EF6B  F002         	goto	u9860
  4739   0004D2                     u9861:
  4740   0004D2  EF7F  F002         	goto	l1306
  4741   0004D6                     u9860:
  4742   0004D6                     
  4743                           ; BSR set to: 1
  4744   0004D6  C068  F001         	movff	powf@x,sqrtf@x
  4745   0004DA  C069  F002         	movff	powf@x+1,sqrtf@x+1
  4746   0004DE  C06A  F003         	movff	powf@x+2,sqrtf@x+2
  4747   0004E2  C06B  F004         	movff	powf@x+3,sqrtf@x+3
  4748   0004E6  EC79  F022         	call	_sqrtf	;wreg free
  4749   0004EA  C001  F068         	movff	?_sqrtf,?_powf
  4750   0004EE  C002  F069         	movff	?_sqrtf+1,?_powf+1
  4751   0004F2  C003  F06A         	movff	?_sqrtf+2,?_powf+2
  4752   0004F6  C004  F06B         	movff	?_sqrtf+3,?_powf+3
  4753   0004FA  EF63  F012         	goto	l1277
  4754   0004FE                     l1306:
  4755                           
  4756                           ; BSR set to: 1
  4757   0004FE  C1AC  F178         	movff	powf@ix,powf@ax
  4758   000502  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  4759   000506  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  4760   00050A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  4761   00050E                     
  4762                           ; BSR set to: 1
  4763   00050E  0E80               	movlw	128
  4764   000510  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4765   000512  E10B               	bnz	u9870
  4766   000514  0E7F               	movlw	127
  4767   000516  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4768   000518  11AC               	iorwf	powf@ix& (0+255),w,b
  4769   00051A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4770   00051C  B4D8               	btfsc	status,2,c
  4771   00051E  EF93  F002         	goto	u9871
  4772   000522  EF95  F002         	goto	u9870
  4773   000526                     u9871:
  4774   000526  EFAE  F002         	goto	l1310
  4775   00052A                     u9870:
  4776   00052A                     
  4777                           ; BSR set to: 1
  4778   00052A  51AC               	movf	powf@ix& (0+255),w,b
  4779   00052C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4780   00052E  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  4781   000530  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  4782   000532  B4D8               	btfsc	status,2,c
  4783   000534  EF9E  F002         	goto	u9881
  4784   000538  EFA0  F002         	goto	u9880
  4785   00053C                     u9881:
  4786   00053C  EFAE  F002         	goto	l1310
  4787   000540                     u9880:
  4788   000540                     
  4789                           ; BSR set to: 1
  4790   000540  0E80               	movlw	128
  4791   000542  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4792   000544  E109               	bnz	u9891
  4793   000546  0E3F               	movlw	63
  4794   000548  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4795   00054A  11AC               	iorwf	powf@ix& (0+255),w,b
  4796   00054C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4797   00054E  A4D8               	btfss	status,2,c
  4798   000550  EFAC  F002         	goto	u9891
  4799   000554  EFAE  F002         	goto	u9890
  4800   000558                     u9891:
  4801   000558  EF49  F003         	goto	l7486
  4802   00055C                     u9890:
  4803   00055C                     l1310:
  4804                           
  4805                           ; BSR set to: 1
  4806   00055C  C178  F1B4         	movff	powf@ax,powf@z
  4807   000560  C179  F1B5         	movff	powf@ax+1,powf@z+1
  4808   000564  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  4809   000568  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  4810   00056C                     
  4811                           ; BSR set to: 1
  4812   00056C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4813   00056E  EFBD  F002         	goto	u9900
  4814   000572  EFBB  F002         	goto	u9901
  4815   000576                     u9901:
  4816   000576  EFD7  F002         	goto	l7472
  4817   00057A                     u9900:
  4818   00057A                     
  4819                           ; BSR set to: 1
  4820   00057A  0E00               	movlw	0
  4821   00057C  6E28               	movwf	___fldiv@b^0,c
  4822   00057E  0E00               	movlw	0
  4823   000580  6E29               	movwf	(___fldiv@b+1)^0,c
  4824   000582  0E80               	movlw	128
  4825   000584  6E2A               	movwf	(___fldiv@b+2)^0,c
  4826   000586  0E3F               	movlw	63
  4827   000588  6E2B               	movwf	(___fldiv@b+3)^0,c
  4828   00058A  C1B4  F02C         	movff	powf@z,___fldiv@a
  4829   00058E  C1B5  F02D         	movff	powf@z+1,___fldiv@a+1
  4830   000592  C1B6  F02E         	movff	powf@z+2,___fldiv@a+2
  4831   000596  C1B7  F02F         	movff	powf@z+3,___fldiv@a+3
  4832   00059A  EC68  F024         	call	___fldiv	;wreg free
  4833   00059E  C028  F1B4         	movff	?___fldiv,powf@z
  4834   0005A2  C029  F1B5         	movff	?___fldiv+1,powf@z+1
  4835   0005A6  C02A  F1B6         	movff	?___fldiv+2,powf@z+2
  4836   0005AA  C02B  F1B7         	movff	?___fldiv+3,powf@z+3
  4837   0005AE                     l7472:
  4838   0005AE  0101               	movlb	1	; () banked
  4839   0005B0  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4840   0005B2  EFDF  F002         	goto	u9910
  4841   0005B6  EFDD  F002         	goto	u9911
  4842   0005BA                     u9911:
  4843   0005BA  EF3F  F003         	goto	l7482
  4844   0005BE                     u9910:
  4845   0005BE                     
  4846                           ; BSR set to: 1
  4847   0005BE  0E00               	movlw	0
  4848   0005C0  25AC               	addwf	powf@ix& (0+255),w,b
  4849   0005C2  0100               	movlb	0	; () banked
  4850   0005C4  6F70               	movwf	??_powf& (0+255),b
  4851   0005C6  0E00               	movlw	0
  4852   0005C8  0101               	movlb	1	; () banked
  4853   0005CA  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  4854   0005CC  0100               	movlb	0	; () banked
  4855   0005CE  6F71               	movwf	(??_powf+1)& (0+255),b
  4856   0005D0  0E80               	movlw	128
  4857   0005D2  0101               	movlb	1	; () banked
  4858   0005D4  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  4859   0005D6  0100               	movlb	0	; () banked
  4860   0005D8  6F72               	movwf	(??_powf+2)& (0+255),b
  4861   0005DA  0EC0               	movlw	192
  4862   0005DC  0101               	movlb	1	; () banked
  4863   0005DE  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  4864   0005E0  0100               	movlb	0	; () banked
  4865   0005E2  6F73               	movwf	(??_powf+3)& (0+255),b
  4866   0005E4  0101               	movlb	1	; () banked
  4867   0005E6  5154               	movf	powf@yisint& (0+255),w,b
  4868   0005E8  0100               	movlb	0	; () banked
  4869   0005EA  1170               	iorwf	??_powf& (0+255),w,b
  4870   0005EC  6F74               	movwf	(??_powf+4)& (0+255),b
  4871   0005EE  0101               	movlb	1	; () banked
  4872   0005F0  5155               	movf	(powf@yisint+1)& (0+255),w,b
  4873   0005F2  0100               	movlb	0	; () banked
  4874   0005F4  1171               	iorwf	(??_powf+1)& (0+255),w,b
  4875   0005F6  6F75               	movwf	(??_powf+5)& (0+255),b
  4876   0005F8  0101               	movlb	1	; () banked
  4877   0005FA  5156               	movf	(powf@yisint+2)& (0+255),w,b
  4878   0005FC  0100               	movlb	0	; () banked
  4879   0005FE  1172               	iorwf	(??_powf+2)& (0+255),w,b
  4880   000600  6F76               	movwf	(??_powf+6)& (0+255),b
  4881   000602  0101               	movlb	1	; () banked
  4882   000604  5157               	movf	(powf@yisint+3)& (0+255),w,b
  4883   000606  0100               	movlb	0	; () banked
  4884   000608  1173               	iorwf	(??_powf+3)& (0+255),w,b
  4885   00060A  6F77               	movwf	(??_powf+7)& (0+255),b
  4886   00060C  5174               	movf	(??_powf+4)& (0+255),w,b
  4887   00060E  1175               	iorwf	(??_powf+5)& (0+255),w,b
  4888   000610  1176               	iorwf	(??_powf+6)& (0+255),w,b
  4889   000612  1177               	iorwf	(??_powf+7)& (0+255),w,b
  4890   000614  A4D8               	btfss	status,2,c
  4891   000616  EF0F  F003         	goto	u9921
  4892   00061A  EF11  F003         	goto	u9920
  4893   00061E                     u9921:
  4894   00061E  EF21  F003         	goto	l7478
  4895   000622                     u9920:
  4896   000622                     l7476:
  4897   000622  0E00               	movlw	0
  4898   000624  0103               	movlb	3	; () banked
  4899   000626  6F69               	movwf	(_errno+1)& (0+255),b
  4900   000628  0E21               	movlw	33
  4901   00062A  6F68               	movwf	_errno& (0+255),b
  4902   00062C  0EFF               	movlw	255
  4903   00062E  0101               	movlb	1	; () banked
  4904   000630  6FB4               	movwf	powf@z& (0+255),b
  4905   000632  0EFF               	movlw	255
  4906   000634  6FB5               	movwf	(powf@z+1)& (0+255),b
  4907   000636  0EFF               	movlw	255
  4908   000638  6FB6               	movwf	(powf@z+2)& (0+255),b
  4909   00063A  0E7F               	movlw	127
  4910   00063C  6FB7               	movwf	(powf@z+3)& (0+255),b
  4911   00063E  EF3F  F003         	goto	l7482
  4912   000642                     l7478:
  4913                           
  4914                           ; BSR set to: 0
  4915   000642  0101               	movlb	1	; () banked
  4916   000644  0554               	decf	powf@yisint& (0+255),w,b
  4917   000646  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4918   000648  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4919   00064A  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4920   00064C  A4D8               	btfss	status,2,c
  4921   00064E  EF2B  F003         	goto	u9931
  4922   000652  EF2D  F003         	goto	u9930
  4923   000656                     u9931:
  4924   000656  EF3F  F003         	goto	l7482
  4925   00065A                     u9930:
  4926   00065A                     
  4927                           ; BSR set to: 1
  4928   00065A  C1B4  F001         	movff	powf@z,___flneg@f1
  4929   00065E  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  4930   000662  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  4931   000666  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  4932   00066A  EC45  F037         	call	___flneg	;wreg free
  4933   00066E  C001  F1B4         	movff	?___flneg,powf@z
  4934   000672  C002  F1B5         	movff	?___flneg+1,powf@z+1
  4935   000676  C003  F1B6         	movff	?___flneg+2,powf@z+2
  4936   00067A  C004  F1B7         	movff	?___flneg+3,powf@z+3
  4937   00067E                     l7482:
  4938   00067E  C1B4  F068         	movff	powf@z,?_powf
  4939   000682  C1B5  F069         	movff	powf@z+1,?_powf+1
  4940   000686  C1B6  F06A         	movff	powf@z+2,?_powf+2
  4941   00068A  C1B7  F06B         	movff	powf@z+3,?_powf+3
  4942   00068E  EF63  F012         	goto	l1277
  4943   000692                     l7486:
  4944                           
  4945                           ; BSR set to: 1
  4946   000692  0E00               	movlw	0
  4947   000694  6F64               	movwf	powf@sn& (0+255),b
  4948   000696  0E00               	movlw	0
  4949   000698  6F65               	movwf	(powf@sn+1)& (0+255),b
  4950   00069A  0E00               	movlw	0
  4951   00069C  6F66               	movwf	(powf@sn+2)& (0+255),b
  4952   00069E  0E00               	movlw	0
  4953   0006A0  6F67               	movwf	(powf@sn+3)& (0+255),b
  4954   0006A2                     
  4955                           ; BSR set to: 1
  4956   0006A2  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4957   0006A4  EF58  F003         	goto	u9940
  4958   0006A8  EF56  F003         	goto	u9941
  4959   0006AC                     u9941:
  4960   0006AC  EF78  F003         	goto	l7502
  4961   0006B0                     u9940:
  4962   0006B0                     
  4963                           ; BSR set to: 1
  4964   0006B0  5154               	movf	powf@yisint& (0+255),w,b
  4965   0006B2  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4966   0006B4  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4967   0006B6  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4968   0006B8  A4D8               	btfss	status,2,c
  4969   0006BA  EF61  F003         	goto	u9951
  4970   0006BE  EF63  F003         	goto	u9950
  4971   0006C2                     u9951:
  4972   0006C2  EF65  F003         	goto	l7498
  4973   0006C6                     u9950:
  4974   0006C6  EF11  F003         	goto	l7476
  4975   0006CA                     l7498:
  4976                           
  4977                           ; BSR set to: 1
  4978   0006CA  0554               	decf	powf@yisint& (0+255),w,b
  4979   0006CC  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4980   0006CE  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4981   0006D0  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4982   0006D2  A4D8               	btfss	status,2,c
  4983   0006D4  EF6E  F003         	goto	u9961
  4984   0006D8  EF70  F003         	goto	u9960
  4985   0006DC                     u9961:
  4986   0006DC  EF78  F003         	goto	l7502
  4987   0006E0                     u9960:
  4988   0006E0                     
  4989                           ; BSR set to: 1
  4990   0006E0  0E00               	movlw	0
  4991   0006E2  6F64               	movwf	powf@sn& (0+255),b
  4992   0006E4  0E00               	movlw	0
  4993   0006E6  6F65               	movwf	(powf@sn+1)& (0+255),b
  4994   0006E8  0E00               	movlw	0
  4995   0006EA  6F66               	movwf	(powf@sn+2)& (0+255),b
  4996   0006EC  0E80               	movlw	128
  4997   0006EE  6F67               	movwf	(powf@sn+3)& (0+255),b
  4998   0006F0                     l7502:
  4999                           
  5000                           ; BSR set to: 1
  5001   0006F0  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  5002   0006F2  EF87  F003         	goto	u9971
  5003   0006F6  0594               	decf	powf@iy& (0+255),w,b
  5004   0006F8  0E00               	movlw	0
  5005   0006FA  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  5006   0006FC  0E00               	movlw	0
  5007   0006FE  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  5008   000700  0E4D               	movlw	77
  5009   000702  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  5010   000704  A0D8               	btfss	status,0,c
  5011   000706  EF87  F003         	goto	u9971
  5012   00070A  EF89  F003         	goto	u9970
  5013   00070E                     u9971:
  5014   00070E  EF4D  F005         	goto	l7558
  5015   000712                     u9970:
  5016   000712                     
  5017                           ; BSR set to: 1
  5018   000712  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  5019   000714  EF9B  F003         	goto	u9980
  5020   000718  0EF8               	movlw	248
  5021   00071A  5DAC               	subwf	powf@ix& (0+255),w,b
  5022   00071C  0EFF               	movlw	255
  5023   00071E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  5024   000720  0E7F               	movlw	127
  5025   000722  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  5026   000724  0E3F               	movlw	63
  5027   000726  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  5028   000728  B0D8               	btfsc	status,0,c
  5029   00072A  EF99  F003         	goto	u9981
  5030   00072E  EF9B  F003         	goto	u9980
  5031   000732                     u9981:
  5032   000732  EFBC  F003         	goto	l7520
  5033   000736                     u9980:
  5034   000736                     
  5035                           ; BSR set to: 1
  5036   000736  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  5037   000738  EFA2  F003         	goto	u9990
  5038   00073C  EFA0  F003         	goto	u9991
  5039   000740                     u9991:
  5040   000740  EFB1  F003         	goto	l7516
  5041   000744                     u9990:
  5042   000744                     l7508:
  5043   000744  0E00               	movlw	0
  5044   000746  0101               	movlb	1	; () banked
  5045   000748  1164               	iorwf	powf@sn& (0+255),w,b
  5046   00074A  6FB4               	movwf	powf@z& (0+255),b
  5047   00074C  0E00               	movlw	0
  5048   00074E  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  5049   000750  6FB5               	movwf	(powf@z+1)& (0+255),b
  5050   000752  0E80               	movlw	128
  5051   000754  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  5052   000756  6FB6               	movwf	(powf@z+2)& (0+255),b
  5053   000758  0E7F               	movlw	127
  5054   00075A  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  5055   00075C  6FB7               	movwf	(powf@z+3)& (0+255),b
  5056   00075E  EF3F  F003         	goto	l7482
  5057   000762                     l7516:
  5058                           
  5059                           ; BSR set to: 1
  5060   000762  0E00               	movlw	0
  5061   000764  0100               	movlb	0	; () banked
  5062   000766  6F68               	movwf	?_powf& (0+255),b
  5063   000768  0E00               	movlw	0
  5064   00076A  6F69               	movwf	(?_powf+1)& (0+255),b
  5065   00076C  0E00               	movlw	0
  5066   00076E  6F6A               	movwf	(?_powf+2)& (0+255),b
  5067   000770  0E00               	movlw	0
  5068   000772  6F6B               	movwf	(?_powf+3)& (0+255),b
  5069   000774  EF63  F012         	goto	l1277
  5070   000778                     l7520:
  5071                           
  5072                           ; BSR set to: 1
  5073   000778  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  5074   00077A  EFCC  F003         	goto	u10001
  5075   00077E  0E08               	movlw	8
  5076   000780  5DAC               	subwf	powf@ix& (0+255),w,b
  5077   000782  0E00               	movlw	0
  5078   000784  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  5079   000786  0E80               	movlw	128
  5080   000788  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  5081   00078A  0E3F               	movlw	63
  5082   00078C  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  5083   00078E  A0D8               	btfss	status,0,c
  5084   000790  EFCC  F003         	goto	u10001
  5085   000794  EFCE  F003         	goto	u10000
  5086   000798                     u10001:
  5087   000798  EFEA  F003         	goto	l7536
  5088   00079C                     u10000:
  5089   00079C                     
  5090                           ; BSR set to: 1
  5091   00079C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  5092   00079E  EFDB  F003         	goto	u10011
  5093   0007A2  5187               	movf	(powf@hy+3)& (0+255),w,b
  5094   0007A4  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  5095   0007A6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  5096   0007A8  E108               	bnz	u10010
  5097   0007AA  0584               	decf	powf@hy& (0+255),w,b
  5098   0007AC  A0D8               	btfss	status,0,c
  5099   0007AE  EFDB  F003         	goto	u10011
  5100   0007B2  EFDD  F003         	goto	u10010
  5101   0007B6                     u10011:
  5102   0007B6  EFDF  F003         	goto	l7532
  5103   0007BA                     u10010:
  5104   0007BA  EFA2  F003         	goto	l7508
  5105   0007BE                     l7532:
  5106                           
  5107                           ; BSR set to: 1
  5108   0007BE  0E00               	movlw	0
  5109   0007C0  0100               	movlb	0	; () banked
  5110   0007C2  6F68               	movwf	?_powf& (0+255),b
  5111   0007C4  0E00               	movlw	0
  5112   0007C6  6F69               	movwf	(?_powf+1)& (0+255),b
  5113   0007C8  0E00               	movlw	0
  5114   0007CA  6F6A               	movwf	(?_powf+2)& (0+255),b
  5115   0007CC  0E00               	movlw	0
  5116   0007CE  6F6B               	movwf	(?_powf+3)& (0+255),b
  5117   0007D0  EF63  F012         	goto	l1277
  5118   0007D4                     l7536:
  5119                           
  5120                           ; BSR set to: 1
  5121   0007D4  C178  F041         	movff	powf@ax,___fladd@b
  5122   0007D8  C179  F042         	movff	powf@ax+1,___fladd@b+1
  5123   0007DC  C17A  F043         	movff	powf@ax+2,___fladd@b+2
  5124   0007E0  C17B  F044         	movff	powf@ax+3,___fladd@b+3
  5125   0007E4  0E00               	movlw	0
  5126   0007E6  6E45               	movwf	___fladd@a^0,c
  5127   0007E8  0E00               	movlw	0
  5128   0007EA  6E46               	movwf	(___fladd@a+1)^0,c
  5129   0007EC  0E80               	movlw	128
  5130   0007EE  6E47               	movwf	(___fladd@a+2)^0,c
  5131   0007F0  0EBF               	movlw	191
  5132   0007F2  6E48               	movwf	(___fladd@a+3)^0,c
  5133   0007F4  EC0B  F01E         	call	___fladd	;wreg free
  5134   0007F8  C041  F1B0         	movff	?___fladd,powf@t
  5135   0007FC  C042  F1B1         	movff	?___fladd+1,powf@t+1
  5136   000800  C043  F1B2         	movff	?___fladd+2,powf@t+2
  5137   000804  C044  F1B3         	movff	?___fladd+3,powf@t+3
  5138   000808  0E00               	movlw	0
  5139   00080A  6E13               	movwf	___flmul@a^0,c
  5140   00080C  0E00               	movlw	0
  5141   00080E  6E14               	movwf	(___flmul@a+1)^0,c
  5142   000810  0E80               	movlw	128
  5143   000812  6E15               	movwf	(___flmul@a+2)^0,c
  5144   000814  0E3E               	movlw	62
  5145   000816  6E16               	movwf	(___flmul@a+3)^0,c
  5146   000818  C1B0  F00F         	movff	powf@t,___flmul@b
  5147   00081C  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5148   000820  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5149   000824  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5150   000828  EC66  F020         	call	___flmul	;wreg free
  5151   00082C  C00F  F055         	movff	?___flmul,___flsub@a
  5152   000830  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5153   000834  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5154   000838  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5155   00083C  0EAB               	movlw	171
  5156   00083E  6E51               	movwf	___flsub@b^0,c
  5157   000840  0EAA               	movlw	170
  5158   000842  6E52               	movwf	(___flsub@b+1)^0,c
  5159   000844  0EAA               	movlw	170
  5160   000846  6E53               	movwf	(___flsub@b+2)^0,c
  5161   000848  0E3E               	movlw	62
  5162   00084A  6E54               	movwf	(___flsub@b+3)^0,c
  5163   00084C  ECA8  F036         	call	___flsub	;wreg free
  5164   000850  C051  F148         	movff	?___flsub,_powf$1841
  5165   000854  C052  F149         	movff	?___flsub+1,_powf$1841+1
  5166   000858  C053  F14A         	movff	?___flsub+2,_powf$1841+2
  5167   00085C  C054  F14B         	movff	?___flsub+3,_powf$1841+3
  5168   000860  C1B0  F013         	movff	powf@t,___flmul@a
  5169   000864  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  5170   000868  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  5171   00086C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  5172   000870  C1B0  F00F         	movff	powf@t,___flmul@b
  5173   000874  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5174   000878  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5175   00087C  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5176   000880  EC66  F020         	call	___flmul	;wreg free
  5177   000884  C00F  F158         	movff	?___flmul,_powf$1842
  5178   000888  C010  F159         	movff	?___flmul+1,_powf$1842+1
  5179   00088C  C011  F15A         	movff	?___flmul+2,_powf$1842+2
  5180   000890  C012  F15B         	movff	?___flmul+3,_powf$1842+3
  5181   000894  C1B0  F013         	movff	powf@t,___flmul@a
  5182   000898  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  5183   00089C  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  5184   0008A0  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  5185   0008A4  C148  F00F         	movff	_powf$1841,___flmul@b
  5186   0008A8  C149  F010         	movff	_powf$1841+1,___flmul@b+1
  5187   0008AC  C14A  F011         	movff	_powf$1841+2,___flmul@b+2
  5188   0008B0  C14B  F012         	movff	_powf$1841+3,___flmul@b+3
  5189   0008B4  EC66  F020         	call	___flmul	;wreg free
  5190   0008B8  C00F  F055         	movff	?___flmul,___flsub@a
  5191   0008BC  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5192   0008C0  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5193   0008C4  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5194   0008C8  0E00               	movlw	0
  5195   0008CA  6E51               	movwf	___flsub@b^0,c
  5196   0008CC  0E00               	movlw	0
  5197   0008CE  6E52               	movwf	(___flsub@b+1)^0,c
  5198   0008D0  0E00               	movlw	0
  5199   0008D2  6E53               	movwf	(___flsub@b+2)^0,c
  5200   0008D4  0E3F               	movlw	63
  5201   0008D6  6E54               	movwf	(___flsub@b+3)^0,c
  5202   0008D8  ECA8  F036         	call	___flsub	;wreg free
  5203   0008DC  C051  F14C         	movff	?___flsub,_powf$1843
  5204   0008E0  C052  F14D         	movff	?___flsub+1,_powf$1843+1
  5205   0008E4  C053  F14E         	movff	?___flsub+2,_powf$1843+2
  5206   0008E8  C054  F14F         	movff	?___flsub+3,_powf$1843+3
  5207   0008EC  C158  F00F         	movff	_powf$1842,___flmul@b
  5208   0008F0  C159  F010         	movff	_powf$1842+1,___flmul@b+1
  5209   0008F4  C15A  F011         	movff	_powf$1842+2,___flmul@b+2
  5210   0008F8  C15B  F012         	movff	_powf$1842+3,___flmul@b+3
  5211   0008FC  C14C  F013         	movff	_powf$1843,___flmul@a
  5212   000900  C14D  F014         	movff	_powf$1843+1,___flmul@a+1
  5213   000904  C14E  F015         	movff	_powf$1843+2,___flmul@a+2
  5214   000908  C14F  F016         	movff	_powf$1843+3,___flmul@a+3
  5215   00090C  EC66  F020         	call	___flmul	;wreg free
  5216   000910  C00F  F144         	movff	?___flmul,powf@w
  5217   000914  C010  F145         	movff	?___flmul+1,powf@w+1
  5218   000918  C011  F146         	movff	?___flmul+2,powf@w+2
  5219   00091C  C012  F147         	movff	?___flmul+3,powf@w+3
  5220   000920  C1B0  F00F         	movff	powf@t,___flmul@b
  5221   000924  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5222   000928  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5223   00092C  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5224   000930  0E00               	movlw	0
  5225   000932  6E13               	movwf	___flmul@a^0,c
  5226   000934  0EAA               	movlw	170
  5227   000936  6E14               	movwf	(___flmul@a+1)^0,c
  5228   000938  0EB8               	movlw	184
  5229   00093A  6E15               	movwf	(___flmul@a+2)^0,c
  5230   00093C  0E3F               	movlw	63
  5231   00093E  6E16               	movwf	(___flmul@a+3)^0,c
  5232   000940  EC66  F020         	call	___flmul	;wreg free
  5233   000944  C00F  F17C         	movff	?___flmul,powf@u
  5234   000948  C010  F17D         	movff	?___flmul+1,powf@u+1
  5235   00094C  C011  F17E         	movff	?___flmul+2,powf@u+2
  5236   000950  C012  F17F         	movff	?___flmul+3,powf@u+3
  5237   000954  0E70               	movlw	112
  5238   000956  6E13               	movwf	___flmul@a^0,c
  5239   000958  0EA5               	movlw	165
  5240   00095A  6E14               	movwf	(___flmul@a+1)^0,c
  5241   00095C  0EEC               	movlw	236
  5242   00095E  6E15               	movwf	(___flmul@a+2)^0,c
  5243   000960  0E36               	movlw	54
  5244   000962  6E16               	movwf	(___flmul@a+3)^0,c
  5245   000964  C1B0  F00F         	movff	powf@t,___flmul@b
  5246   000968  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5247   00096C  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5248   000970  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5249   000974  EC66  F020         	call	___flmul	;wreg free
  5250   000978  C00F  F051         	movff	?___flmul,___flsub@b
  5251   00097C  C010  F052         	movff	?___flmul+1,___flsub@b+1
  5252   000980  C011  F053         	movff	?___flmul+2,___flsub@b+2
  5253   000984  C012  F054         	movff	?___flmul+3,___flsub@b+3
  5254   000988  0E3B               	movlw	59
  5255   00098A  6E13               	movwf	___flmul@a^0,c
  5256   00098C  0EAA               	movlw	170
  5257   00098E  6E14               	movwf	(___flmul@a+1)^0,c
  5258   000990  0EB8               	movlw	184
  5259   000992  6E15               	movwf	(___flmul@a+2)^0,c
  5260   000994  0E3F               	movlw	63
  5261   000996  6E16               	movwf	(___flmul@a+3)^0,c
  5262   000998  C144  F00F         	movff	powf@w,___flmul@b
  5263   00099C  C145  F010         	movff	powf@w+1,___flmul@b+1
  5264   0009A0  C146  F011         	movff	powf@w+2,___flmul@b+2
  5265   0009A4  C147  F012         	movff	powf@w+3,___flmul@b+3
  5266   0009A8  EC66  F020         	call	___flmul	;wreg free
  5267   0009AC  C00F  F055         	movff	?___flmul,___flsub@a
  5268   0009B0  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5269   0009B4  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5270   0009B8  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5271   0009BC  ECA8  F036         	call	___flsub	;wreg free
  5272   0009C0  C051  F180         	movff	?___flsub,powf@v
  5273   0009C4  C052  F181         	movff	?___flsub+1,powf@v+1
  5274   0009C8  C053  F182         	movff	?___flsub+2,powf@v+2
  5275   0009CC  C054  F183         	movff	?___flsub+3,powf@v+3
  5276   0009D0  C17C  F041         	movff	powf@u,___fladd@b
  5277   0009D4  C17D  F042         	movff	powf@u+1,___fladd@b+1
  5278   0009D8  C17E  F043         	movff	powf@u+2,___fladd@b+2
  5279   0009DC  C17F  F044         	movff	powf@u+3,___fladd@b+3
  5280   0009E0  C180  F045         	movff	powf@v,___fladd@a
  5281   0009E4  C181  F046         	movff	powf@v+1,___fladd@a+1
  5282   0009E8  C182  F047         	movff	powf@v+2,___fladd@a+2
  5283   0009EC  C183  F048         	movff	powf@v+3,___fladd@a+3
  5284   0009F0  EC0B  F01E         	call	___fladd	;wreg free
  5285   0009F4  C041  F18C         	movff	?___fladd,powf@t1
  5286   0009F8  C042  F18D         	movff	?___fladd+1,powf@t1+1
  5287   0009FC  C043  F18E         	movff	?___fladd+2,powf@t1+2
  5288   000A00  C044  F18F         	movff	?___fladd+3,powf@t1+3
  5289   000A04  C18C  F198         	movff	powf@t1,powf@is
  5290   000A08  C18D  F199         	movff	powf@t1+1,powf@is+1
  5291   000A0C  C18E  F19A         	movff	powf@t1+2,powf@is+2
  5292   000A10  C18F  F19B         	movff	powf@t1+3,powf@is+3
  5293   000A14  0E00               	movlw	0
  5294   000A16  0101               	movlb	1	; () banked
  5295   000A18  1598               	andwf	powf@is& (0+255),w,b
  5296   000A1A  6F8C               	movwf	powf@t1& (0+255),b
  5297   000A1C  0EF0               	movlw	240
  5298   000A1E  1599               	andwf	(powf@is+1)& (0+255),w,b
  5299   000A20  6F8D               	movwf	(powf@t1+1)& (0+255),b
  5300   000A22  0EFF               	movlw	255
  5301   000A24  159A               	andwf	(powf@is+2)& (0+255),w,b
  5302   000A26  6F8E               	movwf	(powf@t1+2)& (0+255),b
  5303   000A28  0EFF               	movlw	255
  5304   000A2A  159B               	andwf	(powf@is+3)& (0+255),w,b
  5305   000A2C  6F8F               	movwf	(powf@t1+3)& (0+255),b
  5306   000A2E                     
  5307                           ; BSR set to: 1
  5308   000A2E  C17C  F055         	movff	powf@u,___flsub@a
  5309   000A32  C17D  F056         	movff	powf@u+1,___flsub@a+1
  5310   000A36  C17E  F057         	movff	powf@u+2,___flsub@a+2
  5311   000A3A  C17F  F058         	movff	powf@u+3,___flsub@a+3
  5312   000A3E  C18C  F051         	movff	powf@t1,___flsub@b
  5313   000A42  C18D  F052         	movff	powf@t1+1,___flsub@b+1
  5314   000A46  C18E  F053         	movff	powf@t1+2,___flsub@b+2
  5315   000A4A  C18F  F054         	movff	powf@t1+3,___flsub@b+3
  5316   000A4E  ECA8  F036         	call	___flsub	;wreg free
  5317   000A52  C051  F19C         	movff	?___flsub,_powf$1844
  5318   000A56  C052  F19D         	movff	?___flsub+1,_powf$1844+1
  5319   000A5A  C053  F19E         	movff	?___flsub+2,_powf$1844+2
  5320   000A5E  C054  F19F         	movff	?___flsub+3,_powf$1844+3
  5321   000A62  C180  F051         	movff	powf@v,___flsub@b
  5322   000A66  C181  F052         	movff	powf@v+1,___flsub@b+1
  5323   000A6A  C182  F053         	movff	powf@v+2,___flsub@b+2
  5324   000A6E  C183  F054         	movff	powf@v+3,___flsub@b+3
  5325   000A72  C19C  F055         	movff	_powf$1844,___flsub@a
  5326   000A76  C19D  F056         	movff	_powf$1844+1,___flsub@a+1
  5327   000A7A  C19E  F057         	movff	_powf$1844+2,___flsub@a+2
  5328   000A7E  C19F  F058         	movff	_powf$1844+3,___flsub@a+3
  5329   000A82  ECA8  F036         	call	___flsub	;wreg free
  5330   000A86  C051  F11C         	movff	?___flsub,powf@t2
  5331   000A8A  C052  F11D         	movff	?___flsub+1,powf@t2+1
  5332   000A8E  C053  F11E         	movff	?___flsub+2,powf@t2+2
  5333   000A92  C054  F11F         	movff	?___flsub+3,powf@t2+3
  5334   000A96  EF5B  F00C         	goto	l7686
  5335   000A9A                     l7558:
  5336                           
  5337                           ; BSR set to: 1
  5338   000A9A  0E00               	movlw	0
  5339   000A9C  6F88               	movwf	powf@n& (0+255),b
  5340   000A9E  0E00               	movlw	0
  5341   000AA0  6F89               	movwf	(powf@n+1)& (0+255),b
  5342   000AA2  0E00               	movlw	0
  5343   000AA4  6F8A               	movwf	(powf@n+2)& (0+255),b
  5344   000AA6  0E00               	movlw	0
  5345   000AA8  6F8B               	movwf	(powf@n+3)& (0+255),b
  5346   000AAA                     
  5347                           ; BSR set to: 1
  5348   000AAA  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  5349   000AAC  EF63  F005         	goto	u10020
  5350   000AB0  51AF               	movf	(powf@ix+3)& (0+255),w,b
  5351   000AB2  E107               	bnz	u10021
  5352   000AB4  0E80               	movlw	128
  5353   000AB6  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  5354   000AB8  B0D8               	btfsc	status,0,c
  5355   000ABA  EF61  F005         	goto	u10021
  5356   000ABE  EF63  F005         	goto	u10020
  5357   000AC2                     u10021:
  5358   000AC2  EF8E  F005         	goto	l7568
  5359   000AC6                     u10020:
  5360   000AC6                     
  5361                           ; BSR set to: 1
  5362   000AC6  C178  F00F         	movff	powf@ax,___flmul@b
  5363   000ACA  C179  F010         	movff	powf@ax+1,___flmul@b+1
  5364   000ACE  C17A  F011         	movff	powf@ax+2,___flmul@b+2
  5365   000AD2  C17B  F012         	movff	powf@ax+3,___flmul@b+3
  5366   000AD6  0E00               	movlw	0
  5367   000AD8  6E13               	movwf	___flmul@a^0,c
  5368   000ADA  0E00               	movlw	0
  5369   000ADC  6E14               	movwf	(___flmul@a+1)^0,c
  5370   000ADE  0E80               	movlw	128
  5371   000AE0  6E15               	movwf	(___flmul@a+2)^0,c
  5372   000AE2  0E4B               	movlw	75
  5373   000AE4  6E16               	movwf	(___flmul@a+3)^0,c
  5374   000AE6  EC66  F020         	call	___flmul	;wreg free
  5375   000AEA  C00F  F178         	movff	?___flmul,powf@ax
  5376   000AEE  C010  F179         	movff	?___flmul+1,powf@ax+1
  5377   000AF2  C011  F17A         	movff	?___flmul+2,powf@ax+2
  5378   000AF6  C012  F17B         	movff	?___flmul+3,powf@ax+3
  5379   000AFA  0EE8               	movlw	232
  5380   000AFC  0101               	movlb	1	; () banked
  5381   000AFE  2788               	addwf	powf@n& (0+255),f,b
  5382   000B00  0EFF               	movlw	255
  5383   000B02  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5384   000B04  0EFF               	movlw	255
  5385   000B06  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5386   000B08  0EFF               	movlw	255
  5387   000B0A  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5388   000B0C                     
  5389                           ; BSR set to: 1
  5390   000B0C  C178  F1AC         	movff	powf@ax,powf@ix
  5391   000B10  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  5392   000B14  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  5393   000B18  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  5394   000B1C                     l7568:
  5395                           
  5396                           ; BSR set to: 1
  5397   000B1C  0E17               	movlw	23
  5398   000B1E  0100               	movlb	0	; () banked
  5399   000B20  6F70               	movwf	??_powf& (0+255),b
  5400   000B22  C1AC  F071         	movff	powf@ix,??_powf+1
  5401   000B26  C1AD  F072         	movff	powf@ix+1,??_powf+2
  5402   000B2A  C1AE  F073         	movff	powf@ix+2,??_powf+3
  5403   000B2E  C1AF  F074         	movff	powf@ix+3,??_powf+4
  5404   000B32                     u10035:
  5405   000B32  6770               	tstfsz	??_powf& (0+255),b
  5406   000B34  EF9E  F005         	goto	u10036
  5407   000B38  EFA6  F005         	goto	u10037
  5408   000B3C                     u10036:
  5409   000B3C  3574               	rlcf	(??_powf+4)& (0+255),w,b
  5410   000B3E  3374               	rrcf	(??_powf+4)& (0+255),f,b
  5411   000B40  3373               	rrcf	(??_powf+3)& (0+255),f,b
  5412   000B42  3372               	rrcf	(??_powf+2)& (0+255),f,b
  5413   000B44  3371               	rrcf	(??_powf+1)& (0+255),f,b
  5414   000B46  2F70               	decfsz	??_powf& (0+255),f,b
  5415   000B48  EF99  F005         	goto	u10035
  5416   000B4C                     u10037:
  5417   000B4C  0E81               	movlw	129
  5418   000B4E  0100               	movlb	0	; () banked
  5419   000B50  2571               	addwf	(??_powf+1)& (0+255),w,b
  5420   000B52  6F75               	movwf	(??_powf+5)& (0+255),b
  5421   000B54  0EFF               	movlw	255
  5422   000B56  2172               	addwfc	(??_powf+2)& (0+255),w,b
  5423   000B58  6F76               	movwf	(??_powf+6)& (0+255),b
  5424   000B5A  0EFF               	movlw	255
  5425   000B5C  2173               	addwfc	(??_powf+3)& (0+255),w,b
  5426   000B5E  6F77               	movwf	(??_powf+7)& (0+255),b
  5427   000B60  0EFF               	movlw	255
  5428   000B62  2174               	addwfc	(??_powf+4)& (0+255),w,b
  5429   000B64  6F78               	movwf	(??_powf+8)& (0+255),b
  5430   000B66  5175               	movf	(??_powf+5)& (0+255),w,b
  5431   000B68  0101               	movlb	1	; () banked
  5432   000B6A  2788               	addwf	powf@n& (0+255),f,b
  5433   000B6C  0100               	movlb	0	; () banked
  5434   000B6E  5176               	movf	(??_powf+6)& (0+255),w,b
  5435   000B70  0101               	movlb	1	; () banked
  5436   000B72  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5437   000B74  0100               	movlb	0	; () banked
  5438   000B76  5177               	movf	(??_powf+7)& (0+255),w,b
  5439   000B78  0101               	movlb	1	; () banked
  5440   000B7A  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5441   000B7C  0100               	movlb	0	; () banked
  5442   000B7E  5178               	movf	(??_powf+8)& (0+255),w,b
  5443   000B80  0101               	movlb	1	; () banked
  5444   000B82  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5445   000B84                     
  5446                           ; BSR set to: 1
  5447   000B84  0EFF               	movlw	255
  5448   000B86  15AC               	andwf	powf@ix& (0+255),w,b
  5449   000B88  6FA8               	movwf	powf@j& (0+255),b
  5450   000B8A  0EFF               	movlw	255
  5451   000B8C  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  5452   000B8E  6FA9               	movwf	(powf@j+1)& (0+255),b
  5453   000B90  0E7F               	movlw	127
  5454   000B92  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  5455   000B94  6FAA               	movwf	(powf@j+2)& (0+255),b
  5456   000B96  0E00               	movlw	0
  5457   000B98  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  5458   000B9A  6FAB               	movwf	(powf@j+3)& (0+255),b
  5459   000B9C                     
  5460                           ; BSR set to: 1
  5461   000B9C  0E00               	movlw	0
  5462   000B9E  6FA4               	movwf	powf@k& (0+255),b
  5463   000BA0  0E00               	movlw	0
  5464   000BA2  6FA5               	movwf	(powf@k+1)& (0+255),b
  5465   000BA4  0E00               	movlw	0
  5466   000BA6  6FA6               	movwf	(powf@k+2)& (0+255),b
  5467   000BA8  0E00               	movlw	0
  5468   000BAA  6FA7               	movwf	(powf@k+3)& (0+255),b
  5469   000BAC                     
  5470                           ; BSR set to: 1
  5471   000BAC  0E00               	movlw	0
  5472   000BAE  11A8               	iorwf	powf@j& (0+255),w,b
  5473   000BB0  6FAC               	movwf	powf@ix& (0+255),b
  5474   000BB2  0E00               	movlw	0
  5475   000BB4  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  5476   000BB6  6FAD               	movwf	(powf@ix+1)& (0+255),b
  5477   000BB8  0E80               	movlw	128
  5478   000BBA  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  5479   000BBC  6FAE               	movwf	(powf@ix+2)& (0+255),b
  5480   000BBE  0E3F               	movlw	63
  5481   000BC0  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  5482   000BC2  6FAF               	movwf	(powf@ix+3)& (0+255),b
  5483   000BC4                     
  5484                           ; BSR set to: 1
  5485   000BC4  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5486   000BC6  EFF4  F005         	goto	u10040
  5487   000BCA  51AB               	movf	(powf@j+3)& (0+255),w,b
  5488   000BCC  E10B               	bnz	u10041
  5489   000BCE  0E72               	movlw	114
  5490   000BD0  5DA8               	subwf	powf@j& (0+255),w,b
  5491   000BD2  0EC4               	movlw	196
  5492   000BD4  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5493   000BD6  0E1C               	movlw	28
  5494   000BD8  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5495   000BDA  B0D8               	btfsc	status,0,c
  5496   000BDC  EFF2  F005         	goto	u10041
  5497   000BE0  EFF4  F005         	goto	u10040
  5498   000BE4                     u10041:
  5499   000BE4  EFF6  F005         	goto	l7580
  5500   000BE8                     u10040:
  5501   000BE8  EF20  F006         	goto	l7586
  5502   000BEC                     l7580:
  5503                           
  5504                           ; BSR set to: 1
  5505   000BEC  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5506   000BEE  EF08  F006         	goto	u10050
  5507   000BF2  51AB               	movf	(powf@j+3)& (0+255),w,b
  5508   000BF4  E10B               	bnz	u10051
  5509   000BF6  0ED7               	movlw	215
  5510   000BF8  5DA8               	subwf	powf@j& (0+255),w,b
  5511   000BFA  0EB3               	movlw	179
  5512   000BFC  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5513   000BFE  0E5D               	movlw	93
  5514   000C00  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5515   000C02  B0D8               	btfsc	status,0,c
  5516   000C04  EF06  F006         	goto	u10051
  5517   000C08  EF08  F006         	goto	u10050
  5518   000C0C                     u10051:
  5519   000C0C  EF12  F006         	goto	l7584
  5520   000C10                     u10050:
  5521   000C10                     
  5522                           ; BSR set to: 1
  5523   000C10  0E01               	movlw	1
  5524   000C12  6FA4               	movwf	powf@k& (0+255),b
  5525   000C14  0E00               	movlw	0
  5526   000C16  6FA5               	movwf	(powf@k+1)& (0+255),b
  5527   000C18  0E00               	movlw	0
  5528   000C1A  6FA6               	movwf	(powf@k+2)& (0+255),b
  5529   000C1C  0E00               	movlw	0
  5530   000C1E  6FA7               	movwf	(powf@k+3)& (0+255),b
  5531   000C20  EF20  F006         	goto	l7586
  5532   000C24                     l7584:
  5533                           
  5534                           ; BSR set to: 1
  5535   000C24  0E01               	movlw	1
  5536   000C26  2788               	addwf	powf@n& (0+255),f,b
  5537   000C28  0E00               	movlw	0
  5538   000C2A  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5539   000C2C  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5540   000C2E  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5541   000C30  0E00               	movlw	0
  5542   000C32  27AC               	addwf	powf@ix& (0+255),f,b
  5543   000C34  0E00               	movlw	0
  5544   000C36  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  5545   000C38  0E80               	movlw	128
  5546   000C3A  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  5547   000C3C  0EFF               	movlw	255
  5548   000C3E  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  5549   000C40                     l7586:
  5550                           
  5551                           ; BSR set to: 1
  5552   000C40  C1AC  F178         	movff	powf@ix,powf@ax
  5553   000C44  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  5554   000C48  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  5555   000C4C  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  5556   000C50                     
  5557                           ; BSR set to: 1
  5558   000C50  C178  F051         	movff	powf@ax,___flsub@b
  5559   000C54  C179  F052         	movff	powf@ax+1,___flsub@b+1
  5560   000C58  C17A  F053         	movff	powf@ax+2,___flsub@b+2
  5561   000C5C  C17B  F054         	movff	powf@ax+3,___flsub@b+3
  5562   000C60  C1A4  F070         	movff	powf@k,??_powf
  5563   000C64  C1A5  F071         	movff	powf@k+1,??_powf+1
  5564   000C68  0100               	movlb	0	; () banked
  5565   000C6A  90D8               	bcf	status,0,c
  5566   000C6C  3770               	rlcf	??_powf& (0+255),f,b
  5567   000C6E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5568   000C70  90D8               	bcf	status,0,c
  5569   000C72  3770               	rlcf	??_powf& (0+255),f,b
  5570   000C74  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5571   000C76  0E6D               	movlw	low _bp
  5572   000C78  2570               	addwf	??_powf& (0+255),w,b
  5573   000C7A  6EF6               	movwf	tblptrl,c
  5574   000C7C  0E7E               	movlw	high _bp
  5575   000C7E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5576   000C80  6EF7               	movwf	tblptrh,c
  5577   000C82                     	if	0	;There are less than 3 active tblptr bytes
  5578   000C82                     	endif
  5579   000C82  0009               	tblrd		*+
  5580   000C84  CFF5 F055          	movff	tablat,___flsub@a
  5581   000C88  0009               	tblrd		*+
  5582   000C8A  CFF5 F056          	movff	tablat,___flsub@a+1
  5583   000C8E  0009               	tblrd		*+
  5584   000C90  CFF5 F057          	movff	tablat,___flsub@a+2
  5585   000C94  000A               	tblrd		*-
  5586   000C96  CFF5 F058          	movff	tablat,___flsub@a+3
  5587   000C9A  ECA8  F036         	call	___flsub	;wreg free
  5588   000C9E  C051  F17C         	movff	?___flsub,powf@u
  5589   000CA2  C052  F17D         	movff	?___flsub+1,powf@u+1
  5590   000CA6  C053  F17E         	movff	?___flsub+2,powf@u+2
  5591   000CAA  C054  F17F         	movff	?___flsub+3,powf@u+3
  5592   000CAE  0E00               	movlw	0
  5593   000CB0  6E28               	movwf	___fldiv@b^0,c
  5594   000CB2  0E00               	movlw	0
  5595   000CB4  6E29               	movwf	(___fldiv@b+1)^0,c
  5596   000CB6  0E80               	movlw	128
  5597   000CB8  6E2A               	movwf	(___fldiv@b+2)^0,c
  5598   000CBA  0E3F               	movlw	63
  5599   000CBC  6E2B               	movwf	(___fldiv@b+3)^0,c
  5600   000CBE  C178  F045         	movff	powf@ax,___fladd@a
  5601   000CC2  C179  F046         	movff	powf@ax+1,___fladd@a+1
  5602   000CC6  C17A  F047         	movff	powf@ax+2,___fladd@a+2
  5603   000CCA  C17B  F048         	movff	powf@ax+3,___fladd@a+3
  5604   000CCE  C1A4  F070         	movff	powf@k,??_powf
  5605   000CD2  C1A5  F071         	movff	powf@k+1,??_powf+1
  5606   000CD6  0100               	movlb	0	; () banked
  5607   000CD8  90D8               	bcf	status,0,c
  5608   000CDA  3770               	rlcf	??_powf& (0+255),f,b
  5609   000CDC  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5610   000CDE  90D8               	bcf	status,0,c
  5611   000CE0  3770               	rlcf	??_powf& (0+255),f,b
  5612   000CE2  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5613   000CE4  0E6D               	movlw	low _bp
  5614   000CE6  2570               	addwf	??_powf& (0+255),w,b
  5615   000CE8  6EF6               	movwf	tblptrl,c
  5616   000CEA  0E7E               	movlw	high _bp
  5617   000CEC  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5618   000CEE  6EF7               	movwf	tblptrh,c
  5619   000CF0                     	if	0	;There are less than 3 active tblptr bytes
  5620   000CF0                     	endif
  5621   000CF0  0009               	tblrd		*+
  5622   000CF2  CFF5 F041          	movff	tablat,___fladd@b
  5623   000CF6  0009               	tblrd		*+
  5624   000CF8  CFF5 F042          	movff	tablat,___fladd@b+1
  5625   000CFC  0009               	tblrd		*+
  5626   000CFE  CFF5 F043          	movff	tablat,___fladd@b+2
  5627   000D02  000A               	tblrd		*-
  5628   000D04  CFF5 F044          	movff	tablat,___fladd@b+3
  5629   000D08  EC0B  F01E         	call	___fladd	;wreg free
  5630   000D0C  C041  F02C         	movff	?___fladd,___fldiv@a
  5631   000D10  C042  F02D         	movff	?___fladd+1,___fldiv@a+1
  5632   000D14  C043  F02E         	movff	?___fladd+2,___fldiv@a+2
  5633   000D18  C044  F02F         	movff	?___fladd+3,___fldiv@a+3
  5634   000D1C  EC68  F024         	call	___fldiv	;wreg free
  5635   000D20  C028  F180         	movff	?___fldiv,powf@v
  5636   000D24  C029  F181         	movff	?___fldiv+1,powf@v+1
  5637   000D28  C02A  F182         	movff	?___fldiv+2,powf@v+2
  5638   000D2C  C02B  F183         	movff	?___fldiv+3,powf@v+3
  5639   000D30  C17C  F00F         	movff	powf@u,___flmul@b
  5640   000D34  C17D  F010         	movff	powf@u+1,___flmul@b+1
  5641   000D38  C17E  F011         	movff	powf@u+2,___flmul@b+2
  5642   000D3C  C17F  F012         	movff	powf@u+3,___flmul@b+3
  5643   000D40  C180  F013         	movff	powf@v,___flmul@a
  5644   000D44  C181  F014         	movff	powf@v+1,___flmul@a+1
  5645   000D48  C182  F015         	movff	powf@v+2,___flmul@a+2
  5646   000D4C  C183  F016         	movff	powf@v+3,___flmul@a+3
  5647   000D50  EC66  F020         	call	___flmul	;wreg free
  5648   000D54  C00F  F160         	movff	?___flmul,powf@s
  5649   000D58  C010  F161         	movff	?___flmul+1,powf@s+1
  5650   000D5C  C011  F162         	movff	?___flmul+2,powf@s+2
  5651   000D60  C012  F163         	movff	?___flmul+3,powf@s+3
  5652   000D64  C160  F174         	movff	powf@s,powf@s_h
  5653   000D68  C161  F175         	movff	powf@s+1,powf@s_h+1
  5654   000D6C  C162  F176         	movff	powf@s+2,powf@s_h+2
  5655   000D70  C163  F177         	movff	powf@s+3,powf@s_h+3
  5656   000D74  C174  F198         	movff	powf@s_h,powf@is
  5657   000D78  C175  F199         	movff	powf@s_h+1,powf@is+1
  5658   000D7C  C176  F19A         	movff	powf@s_h+2,powf@is+2
  5659   000D80  C177  F19B         	movff	powf@s_h+3,powf@is+3
  5660   000D84  0E00               	movlw	0
  5661   000D86  0101               	movlb	1	; () banked
  5662   000D88  1598               	andwf	powf@is& (0+255),w,b
  5663   000D8A  6F74               	movwf	powf@s_h& (0+255),b
  5664   000D8C  0EF0               	movlw	240
  5665   000D8E  1599               	andwf	(powf@is+1)& (0+255),w,b
  5666   000D90  6F75               	movwf	(powf@s_h+1)& (0+255),b
  5667   000D92  0EFF               	movlw	255
  5668   000D94  159A               	andwf	(powf@is+2)& (0+255),w,b
  5669   000D96  6F76               	movwf	(powf@s_h+2)& (0+255),b
  5670   000D98  0EFF               	movlw	255
  5671   000D9A  159B               	andwf	(powf@is+3)& (0+255),w,b
  5672   000D9C  6F77               	movwf	(powf@s_h+3)& (0+255),b
  5673   000D9E                     
  5674                           ; BSR set to: 1
  5675   000D9E  C1AC  F070         	movff	powf@ix,??_powf
  5676   000DA2  C1AD  F071         	movff	powf@ix+1,??_powf+1
  5677   000DA6  C1AE  F072         	movff	powf@ix+2,??_powf+2
  5678   000DAA  C1AF  F073         	movff	powf@ix+3,??_powf+3
  5679   000DAE  0100               	movlb	0	; () banked
  5680   000DB0  3573               	rlcf	(??_powf+3)& (0+255),w,b
  5681   000DB2  3373               	rrcf	(??_powf+3)& (0+255),f,b
  5682   000DB4  3372               	rrcf	(??_powf+2)& (0+255),f,b
  5683   000DB6  3371               	rrcf	(??_powf+1)& (0+255),f,b
  5684   000DB8  3370               	rrcf	??_powf& (0+255),f,b
  5685   000DBA  0E00               	movlw	0
  5686   000DBC  1570               	andwf	??_powf& (0+255),w,b
  5687   000DBE  6F74               	movwf	(??_powf+4)& (0+255),b
  5688   000DC0  0EF0               	movlw	240
  5689   000DC2  1571               	andwf	(??_powf+1)& (0+255),w,b
  5690   000DC4  6F75               	movwf	(??_powf+5)& (0+255),b
  5691   000DC6  0EFF               	movlw	255
  5692   000DC8  1572               	andwf	(??_powf+2)& (0+255),w,b
  5693   000DCA  6F76               	movwf	(??_powf+6)& (0+255),b
  5694   000DCC  0EFF               	movlw	255
  5695   000DCE  1573               	andwf	(??_powf+3)& (0+255),w,b
  5696   000DD0  6F77               	movwf	(??_powf+7)& (0+255),b
  5697   000DD2  0E00               	movlw	0
  5698   000DD4  1174               	iorwf	(??_powf+4)& (0+255),w,b
  5699   000DD6  0101               	movlb	1	; () banked
  5700   000DD8  6F98               	movwf	powf@is& (0+255),b
  5701   000DDA  0E00               	movlw	0
  5702   000DDC  0100               	movlb	0	; () banked
  5703   000DDE  1175               	iorwf	(??_powf+5)& (0+255),w,b
  5704   000DE0  0101               	movlb	1	; () banked
  5705   000DE2  6F99               	movwf	(powf@is+1)& (0+255),b
  5706   000DE4  0E00               	movlw	0
  5707   000DE6  0100               	movlb	0	; () banked
  5708   000DE8  1176               	iorwf	(??_powf+6)& (0+255),w,b
  5709   000DEA  0101               	movlb	1	; () banked
  5710   000DEC  6F9A               	movwf	(powf@is+2)& (0+255),b
  5711   000DEE  0E20               	movlw	32
  5712   000DF0  0100               	movlb	0	; () banked
  5713   000DF2  1177               	iorwf	(??_powf+7)& (0+255),w,b
  5714   000DF4  0101               	movlb	1	; () banked
  5715   000DF6  6F9B               	movwf	(powf@is+3)& (0+255),b
  5716   000DF8                     
  5717                           ; BSR set to: 1
  5718   000DF8  C1A4  F070         	movff	powf@k,??_powf
  5719   000DFC  C1A5  F071         	movff	powf@k+1,??_powf+1
  5720   000E00  C1A6  F072         	movff	powf@k+2,??_powf+2
  5721   000E04  C1A7  F073         	movff	powf@k+3,??_powf+3
  5722   000E08  0E15               	movlw	21
  5723   000E0A                     u10065:
  5724   000E0A  90D8               	bcf	status,0,c
  5725   000E0C  0100               	movlb	0	; () banked
  5726   000E0E  3770               	rlcf	??_powf& (0+255),f,b
  5727   000E10  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5728   000E12  3772               	rlcf	(??_powf+2)& (0+255),f,b
  5729   000E14  3773               	rlcf	(??_powf+3)& (0+255),f,b
  5730   000E16  2EE8               	decfsz	wreg,f,c
  5731   000E18  EF05  F007         	goto	u10065
  5732   000E1C  0101               	movlb	1	; () banked
  5733   000E1E  5198               	movf	powf@is& (0+255),w,b
  5734   000E20  0100               	movlb	0	; () banked
  5735   000E22  2570               	addwf	??_powf& (0+255),w,b
  5736   000E24  6F74               	movwf	(??_powf+4)& (0+255),b
  5737   000E26  0101               	movlb	1	; () banked
  5738   000E28  5199               	movf	(powf@is+1)& (0+255),w,b
  5739   000E2A  0100               	movlb	0	; () banked
  5740   000E2C  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5741   000E2E  6F75               	movwf	(??_powf+5)& (0+255),b
  5742   000E30  0101               	movlb	1	; () banked
  5743   000E32  519A               	movf	(powf@is+2)& (0+255),w,b
  5744   000E34  0100               	movlb	0	; () banked
  5745   000E36  2172               	addwfc	(??_powf+2)& (0+255),w,b
  5746   000E38  6F76               	movwf	(??_powf+6)& (0+255),b
  5747   000E3A  0101               	movlb	1	; () banked
  5748   000E3C  519B               	movf	(powf@is+3)& (0+255),w,b
  5749   000E3E  0100               	movlb	0	; () banked
  5750   000E40  2173               	addwfc	(??_powf+3)& (0+255),w,b
  5751   000E42  6F77               	movwf	(??_powf+7)& (0+255),b
  5752   000E44  0E00               	movlw	0
  5753   000E46  2574               	addwf	(??_powf+4)& (0+255),w,b
  5754   000E48  0101               	movlb	1	; () banked
  5755   000E4A  6F70               	movwf	powf@t_h& (0+255),b
  5756   000E4C  0E00               	movlw	0
  5757   000E4E  0100               	movlb	0	; () banked
  5758   000E50  2175               	addwfc	(??_powf+5)& (0+255),w,b
  5759   000E52  0101               	movlb	1	; () banked
  5760   000E54  6F71               	movwf	(powf@t_h+1)& (0+255),b
  5761   000E56  0E40               	movlw	64
  5762   000E58  0100               	movlb	0	; () banked
  5763   000E5A  2176               	addwfc	(??_powf+6)& (0+255),w,b
  5764   000E5C  0101               	movlb	1	; () banked
  5765   000E5E  6F72               	movwf	(powf@t_h+2)& (0+255),b
  5766   000E60  0E00               	movlw	0
  5767   000E62  0100               	movlb	0	; () banked
  5768   000E64  2177               	addwfc	(??_powf+7)& (0+255),w,b
  5769   000E66  0101               	movlb	1	; () banked
  5770   000E68  6F73               	movwf	(powf@t_h+3)& (0+255),b
  5771   000E6A                     
  5772                           ; BSR set to: 1
  5773   000E6A  C1A4  F070         	movff	powf@k,??_powf
  5774   000E6E  C1A5  F071         	movff	powf@k+1,??_powf+1
  5775   000E72  0100               	movlb	0	; () banked
  5776   000E74  90D8               	bcf	status,0,c
  5777   000E76  3770               	rlcf	??_powf& (0+255),f,b
  5778   000E78  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5779   000E7A  90D8               	bcf	status,0,c
  5780   000E7C  3770               	rlcf	??_powf& (0+255),f,b
  5781   000E7E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5782   000E80  0E6D               	movlw	low _bp
  5783   000E82  2570               	addwf	??_powf& (0+255),w,b
  5784   000E84  6EF6               	movwf	tblptrl,c
  5785   000E86  0E7E               	movlw	high _bp
  5786   000E88  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5787   000E8A  6EF7               	movwf	tblptrh,c
  5788   000E8C                     	if	0	;There are less than 3 active tblptr bytes
  5789   000E8C                     	endif
  5790   000E8C  0009               	tblrd		*+
  5791   000E8E  CFF5 F055          	movff	tablat,___flsub@a
  5792   000E92  0009               	tblrd		*+
  5793   000E94  CFF5 F056          	movff	tablat,___flsub@a+1
  5794   000E98  0009               	tblrd		*+
  5795   000E9A  CFF5 F057          	movff	tablat,___flsub@a+2
  5796   000E9E  000A               	tblrd		*-
  5797   000EA0  CFF5 F058          	movff	tablat,___flsub@a+3
  5798   000EA4  C170  F051         	movff	powf@t_h,___flsub@b
  5799   000EA8  C171  F052         	movff	powf@t_h+1,___flsub@b+1
  5800   000EAC  C172  F053         	movff	powf@t_h+2,___flsub@b+2
  5801   000EB0  C173  F054         	movff	powf@t_h+3,___flsub@b+3
  5802   000EB4  ECA8  F036         	call	___flsub	;wreg free
  5803   000EB8  C051  F19C         	movff	?___flsub,_powf$1844
  5804   000EBC  C052  F19D         	movff	?___flsub+1,_powf$1844+1
  5805   000EC0  C053  F19E         	movff	?___flsub+2,_powf$1844+2
  5806   000EC4  C054  F19F         	movff	?___flsub+3,_powf$1844+3
  5807   000EC8  C178  F051         	movff	powf@ax,___flsub@b
  5808   000ECC  C179  F052         	movff	powf@ax+1,___flsub@b+1
  5809   000ED0  C17A  F053         	movff	powf@ax+2,___flsub@b+2
  5810   000ED4  C17B  F054         	movff	powf@ax+3,___flsub@b+3
  5811   000ED8  C19C  F055         	movff	_powf$1844,___flsub@a
  5812   000EDC  C19D  F056         	movff	_powf$1844+1,___flsub@a+1
  5813   000EE0  C19E  F057         	movff	_powf$1844+2,___flsub@a+2
  5814   000EE4  C19F  F058         	movff	_powf$1844+3,___flsub@a+3
  5815   000EE8  ECA8  F036         	call	___flsub	;wreg free
  5816   000EEC  C051  F134         	movff	?___flsub,powf@t_l
  5817   000EF0  C052  F135         	movff	?___flsub+1,powf@t_l+1
  5818   000EF4  C053  F136         	movff	?___flsub+2,powf@t_l+2
  5819   000EF8  C054  F137         	movff	?___flsub+3,powf@t_l+3
  5820   000EFC  C170  F013         	movff	powf@t_h,___flmul@a
  5821   000F00  C171  F014         	movff	powf@t_h+1,___flmul@a+1
  5822   000F04  C172  F015         	movff	powf@t_h+2,___flmul@a+2
  5823   000F08  C173  F016         	movff	powf@t_h+3,___flmul@a+3
  5824   000F0C  C174  F00F         	movff	powf@s_h,___flmul@b
  5825   000F10  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5826   000F14  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5827   000F18  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5828   000F1C  EC66  F020         	call	___flmul	;wreg free
  5829   000F20  C00F  F055         	movff	?___flmul,___flsub@a
  5830   000F24  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5831   000F28  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5832   000F2C  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5833   000F30  C17C  F051         	movff	powf@u,___flsub@b
  5834   000F34  C17D  F052         	movff	powf@u+1,___flsub@b+1
  5835   000F38  C17E  F053         	movff	powf@u+2,___flsub@b+2
  5836   000F3C  C17F  F054         	movff	powf@u+3,___flsub@b+3
  5837   000F40  ECA8  F036         	call	___flsub	;wreg free
  5838   000F44  C051  F19C         	movff	?___flsub,_powf$1844
  5839   000F48  C052  F19D         	movff	?___flsub+1,_powf$1844+1
  5840   000F4C  C053  F19E         	movff	?___flsub+2,_powf$1844+2
  5841   000F50  C054  F19F         	movff	?___flsub+3,_powf$1844+3
  5842   000F54  C134  F013         	movff	powf@t_l,___flmul@a
  5843   000F58  C135  F014         	movff	powf@t_l+1,___flmul@a+1
  5844   000F5C  C136  F015         	movff	powf@t_l+2,___flmul@a+2
  5845   000F60  C137  F016         	movff	powf@t_l+3,___flmul@a+3
  5846   000F64  C174  F00F         	movff	powf@s_h,___flmul@b
  5847   000F68  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5848   000F6C  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5849   000F70  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5850   000F74  EC66  F020         	call	___flmul	;wreg free
  5851   000F78  C00F  F055         	movff	?___flmul,___flsub@a
  5852   000F7C  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5853   000F80  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5854   000F84  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5855   000F88  C19C  F051         	movff	_powf$1844,___flsub@b
  5856   000F8C  C19D  F052         	movff	_powf$1844+1,___flsub@b+1
  5857   000F90  C19E  F053         	movff	_powf$1844+2,___flsub@b+2
  5858   000F94  C19F  F054         	movff	_powf$1844+3,___flsub@b+3
  5859   000F98  ECA8  F036         	call	___flsub	;wreg free
  5860   000F9C  C051  F158         	movff	?___flsub,_powf$1842
  5861   000FA0  C052  F159         	movff	?___flsub+1,_powf$1842+1
  5862   000FA4  C053  F15A         	movff	?___flsub+2,_powf$1842+2
  5863   000FA8  C054  F15B         	movff	?___flsub+3,_powf$1842+3
  5864   000FAC  C158  F00F         	movff	_powf$1842,___flmul@b
  5865   000FB0  C159  F010         	movff	_powf$1842+1,___flmul@b+1
  5866   000FB4  C15A  F011         	movff	_powf$1842+2,___flmul@b+2
  5867   000FB8  C15B  F012         	movff	_powf$1842+3,___flmul@b+3
  5868   000FBC  C180  F013         	movff	powf@v,___flmul@a
  5869   000FC0  C181  F014         	movff	powf@v+1,___flmul@a+1
  5870   000FC4  C182  F015         	movff	powf@v+2,___flmul@a+2
  5871   000FC8  C183  F016         	movff	powf@v+3,___flmul@a+3
  5872   000FCC  EC66  F020         	call	___flmul	;wreg free
  5873   000FD0  C00F  F130         	movff	?___flmul,powf@s_l
  5874   000FD4  C010  F131         	movff	?___flmul+1,powf@s_l+1
  5875   000FD8  C011  F132         	movff	?___flmul+2,powf@s_l+2
  5876   000FDC  C012  F133         	movff	?___flmul+3,powf@s_l+3
  5877   000FE0  C160  F00F         	movff	powf@s,___flmul@b
  5878   000FE4  C161  F010         	movff	powf@s+1,___flmul@b+1
  5879   000FE8  C162  F011         	movff	powf@s+2,___flmul@b+2
  5880   000FEC  C163  F012         	movff	powf@s+3,___flmul@b+3
  5881   000FF0  C160  F013         	movff	powf@s,___flmul@a
  5882   000FF4  C161  F014         	movff	powf@s+1,___flmul@a+1
  5883   000FF8  C162  F015         	movff	powf@s+2,___flmul@a+2
  5884   000FFC  C163  F016         	movff	powf@s+3,___flmul@a+3
  5885   001000  EC66  F020         	call	___flmul	;wreg free
  5886   001004  C00F  F190         	movff	?___flmul,powf@s2
  5887   001008  C010  F191         	movff	?___flmul+1,powf@s2+1
  5888   00100C  C011  F192         	movff	?___flmul+2,powf@s2+2
  5889   001010  C012  F193         	movff	?___flmul+3,powf@s2+3
  5890   001014  0E55               	movlw	85
  5891   001016  6E45               	movwf	___fladd@a^0,c
  5892   001018  0E32               	movlw	50
  5893   00101A  6E46               	movwf	(___fladd@a+1)^0,c
  5894   00101C  0E6C               	movlw	108
  5895   00101E  6E47               	movwf	(___fladd@a+2)^0,c
  5896   001020  0E3E               	movlw	62
  5897   001022  6E48               	movwf	(___fladd@a+3)^0,c
  5898   001024  0E42               	movlw	66
  5899   001026  6E13               	movwf	___flmul@a^0,c
  5900   001028  0EF1               	movlw	241
  5901   00102A  6E14               	movwf	(___flmul@a+1)^0,c
  5902   00102C  0E53               	movlw	83
  5903   00102E  6E15               	movwf	(___flmul@a+2)^0,c
  5904   001030  0E3E               	movlw	62
  5905   001032  6E16               	movwf	(___flmul@a+3)^0,c
  5906   001034  C190  F00F         	movff	powf@s2,___flmul@b
  5907   001038  C191  F010         	movff	powf@s2+1,___flmul@b+1
  5908   00103C  C192  F011         	movff	powf@s2+2,___flmul@b+2
  5909   001040  C193  F012         	movff	powf@s2+3,___flmul@b+3
  5910   001044  EC66  F020         	call	___flmul	;wreg free
  5911   001048  C00F  F041         	movff	?___flmul,___fladd@b
  5912   00104C  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5913   001050  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5914   001054  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5915   001058  EC0B  F01E         	call	___fladd	;wreg free
  5916   00105C  C041  F148         	movff	?___fladd,_powf$1841
  5917   001060  C042  F149         	movff	?___fladd+1,_powf$1841+1
  5918   001064  C043  F14A         	movff	?___fladd+2,_powf$1841+2
  5919   001068  C044  F14B         	movff	?___fladd+3,_powf$1841+3
  5920   00106C  0E05               	movlw	5
  5921   00106E  6E45               	movwf	___fladd@a^0,c
  5922   001070  0EA3               	movlw	163
  5923   001072  6E46               	movwf	(___fladd@a+1)^0,c
  5924   001074  0E8B               	movlw	139
  5925   001076  6E47               	movwf	(___fladd@a+2)^0,c
  5926   001078  0E3E               	movlw	62
  5927   00107A  6E48               	movwf	(___fladd@a+3)^0,c
  5928   00107C  C190  F013         	movff	powf@s2,___flmul@a
  5929   001080  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5930   001084  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5931   001088  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5932   00108C  C148  F00F         	movff	_powf$1841,___flmul@b
  5933   001090  C149  F010         	movff	_powf$1841+1,___flmul@b+1
  5934   001094  C14A  F011         	movff	_powf$1841+2,___flmul@b+2
  5935   001098  C14B  F012         	movff	_powf$1841+3,___flmul@b+3
  5936   00109C  EC66  F020         	call	___flmul	;wreg free
  5937   0010A0  C00F  F041         	movff	?___flmul,___fladd@b
  5938   0010A4  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5939   0010A8  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5940   0010AC  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5941   0010B0  EC0B  F01E         	call	___fladd	;wreg free
  5942   0010B4  C041  F158         	movff	?___fladd,_powf$1842
  5943   0010B8  C042  F159         	movff	?___fladd+1,_powf$1842+1
  5944   0010BC  C043  F15A         	movff	?___fladd+2,_powf$1842+2
  5945   0010C0  C044  F15B         	movff	?___fladd+3,_powf$1842+3
  5946   0010C4  0EAB               	movlw	171
  5947   0010C6  6E45               	movwf	___fladd@a^0,c
  5948   0010C8  0EAA               	movlw	170
  5949   0010CA  6E46               	movwf	(___fladd@a+1)^0,c
  5950   0010CC  0EAA               	movlw	170
  5951   0010CE  6E47               	movwf	(___fladd@a+2)^0,c
  5952   0010D0  0E3E               	movlw	62
  5953   0010D2  6E48               	movwf	(___fladd@a+3)^0,c
  5954   0010D4  C190  F013         	movff	powf@s2,___flmul@a
  5955   0010D8  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5956   0010DC  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5957   0010E0  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5958   0010E4  C158  F00F         	movff	_powf$1842,___flmul@b
  5959   0010E8  C159  F010         	movff	_powf$1842+1,___flmul@b+1
  5960   0010EC  C15A  F011         	movff	_powf$1842+2,___flmul@b+2
  5961   0010F0  C15B  F012         	movff	_powf$1842+3,___flmul@b+3
  5962   0010F4  EC66  F020         	call	___flmul	;wreg free
  5963   0010F8  C00F  F041         	movff	?___flmul,___fladd@b
  5964   0010FC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5965   001100  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5966   001104  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5967   001108  EC0B  F01E         	call	___fladd	;wreg free
  5968   00110C  C041  F14C         	movff	?___fladd,_powf$1843
  5969   001110  C042  F14D         	movff	?___fladd+1,_powf$1843+1
  5970   001114  C043  F14E         	movff	?___fladd+2,_powf$1843+2
  5971   001118  C044  F14F         	movff	?___fladd+3,_powf$1843+3
  5972   00111C  0EB7               	movlw	183
  5973   00111E  6E45               	movwf	___fladd@a^0,c
  5974   001120  0E6D               	movlw	109
  5975   001122  6E46               	movwf	(___fladd@a+1)^0,c
  5976   001124  0EDB               	movlw	219
  5977   001126  6E47               	movwf	(___fladd@a+2)^0,c
  5978   001128  0E3E               	movlw	62
  5979   00112A  6E48               	movwf	(___fladd@a+3)^0,c
  5980   00112C  C190  F013         	movff	powf@s2,___flmul@a
  5981   001130  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5982   001134  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5983   001138  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5984   00113C  C14C  F00F         	movff	_powf$1843,___flmul@b
  5985   001140  C14D  F010         	movff	_powf$1843+1,___flmul@b+1
  5986   001144  C14E  F011         	movff	_powf$1843+2,___flmul@b+2
  5987   001148  C14F  F012         	movff	_powf$1843+3,___flmul@b+3
  5988   00114C  EC66  F020         	call	___flmul	;wreg free
  5989   001150  C00F  F041         	movff	?___flmul,___fladd@b
  5990   001154  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5991   001158  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5992   00115C  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5993   001160  EC0B  F01E         	call	___fladd	;wreg free
  5994   001164  C041  F138         	movff	?___fladd,_powf$1845
  5995   001168  C042  F139         	movff	?___fladd+1,_powf$1845+1
  5996   00116C  C043  F13A         	movff	?___fladd+2,_powf$1845+2
  5997   001170  C044  F13B         	movff	?___fladd+3,_powf$1845+3
  5998   001174  0E9A               	movlw	154
  5999   001176  6E45               	movwf	___fladd@a^0,c
  6000   001178  0E99               	movlw	153
  6001   00117A  6E46               	movwf	(___fladd@a+1)^0,c
  6002   00117C  0E19               	movlw	25
  6003   00117E  6E47               	movwf	(___fladd@a+2)^0,c
  6004   001180  0E3F               	movlw	63
  6005   001182  6E48               	movwf	(___fladd@a+3)^0,c
  6006   001184  C190  F013         	movff	powf@s2,___flmul@a
  6007   001188  C191  F014         	movff	powf@s2+1,___flmul@a+1
  6008   00118C  C192  F015         	movff	powf@s2+2,___flmul@a+2
  6009   001190  C193  F016         	movff	powf@s2+3,___flmul@a+3
  6010   001194  C138  F00F         	movff	_powf$1845,___flmul@b
  6011   001198  C139  F010         	movff	_powf$1845+1,___flmul@b+1
  6012   00119C  C13A  F011         	movff	_powf$1845+2,___flmul@b+2
  6013   0011A0  C13B  F012         	movff	_powf$1845+3,___flmul@b+3
  6014   0011A4  EC66  F020         	call	___flmul	;wreg free
  6015   0011A8  C00F  F041         	movff	?___flmul,___fladd@b
  6016   0011AC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  6017   0011B0  C011  F043         	movff	?___flmul+2,___fladd@b+2
  6018   0011B4  C012  F044         	movff	?___flmul+3,___fladd@b+3
  6019   0011B8  EC0B  F01E         	call	___fladd	;wreg free
  6020   0011BC  C041  F100         	movff	?___fladd,_powf$1846
  6021   0011C0  C042  F101         	movff	?___fladd+1,_powf$1846+1
  6022   0011C4  C043  F102         	movff	?___fladd+2,_powf$1846+2
  6023   0011C8  C044  F103         	movff	?___fladd+3,_powf$1846+3
  6024   0011CC  C190  F013         	movff	powf@s2,___flmul@a
  6025   0011D0  C191  F014         	movff	powf@s2+1,___flmul@a+1
  6026   0011D4  C192  F015         	movff	powf@s2+2,___flmul@a+2
  6027   0011D8  C193  F016         	movff	powf@s2+3,___flmul@a+3
  6028   0011DC  C190  F00F         	movff	powf@s2,___flmul@b
  6029   0011E0  C191  F010         	movff	powf@s2+1,___flmul@b+1
  6030   0011E4  C192  F011         	movff	powf@s2+2,___flmul@b+2
  6031   0011E8  C193  F012         	movff	powf@s2+3,___flmul@b+3
  6032   0011EC  EC66  F020         	call	___flmul	;wreg free
  6033   0011F0  C00F  F104         	movff	?___flmul,_powf$1847
  6034   0011F4  C010  F105         	movff	?___flmul+1,_powf$1847+1
  6035   0011F8  C011  F106         	movff	?___flmul+2,_powf$1847+2
  6036   0011FC  C012  F107         	movff	?___flmul+3,_powf$1847+3
  6037   001200  C100  F00F         	movff	_powf$1846,___flmul@b
  6038   001204  C101  F010         	movff	_powf$1846+1,___flmul@b+1
  6039   001208  C102  F011         	movff	_powf$1846+2,___flmul@b+2
  6040   00120C  C103  F012         	movff	_powf$1846+3,___flmul@b+3
  6041   001210  C104  F013         	movff	_powf$1847,___flmul@a
  6042   001214  C105  F014         	movff	_powf$1847+1,___flmul@a+1
  6043   001218  C106  F015         	movff	_powf$1847+2,___flmul@a+2
  6044   00121C  C107  F016         	movff	_powf$1847+3,___flmul@a+3
  6045   001220  EC66  F020         	call	___flmul	;wreg free
  6046   001224  C00F  F150         	movff	?___flmul,powf@r
  6047   001228  C010  F151         	movff	?___flmul+1,powf@r+1
  6048   00122C  C011  F152         	movff	?___flmul+2,powf@r+2
  6049   001230  C012  F153         	movff	?___flmul+3,powf@r+3
  6050   001234  C130  F013         	movff	powf@s_l,___flmul@a
  6051   001238  C131  F014         	movff	powf@s_l+1,___flmul@a+1
  6052   00123C  C132  F015         	movff	powf@s_l+2,___flmul@a+2
  6053   001240  C133  F016         	movff	powf@s_l+3,___flmul@a+3
  6054   001244  C160  F045         	movff	powf@s,___fladd@a
  6055   001248  C161  F046         	movff	powf@s+1,___fladd@a+1
  6056   00124C  C162  F047         	movff	powf@s+2,___fladd@a+2
  6057   001250  C163  F048         	movff	powf@s+3,___fladd@a+3
  6058   001254  C174  F041         	movff	powf@s_h,___fladd@b
  6059   001258  C175  F042         	movff	powf@s_h+1,___fladd@b+1
  6060   00125C  C176  F043         	movff	powf@s_h+2,___fladd@b+2
  6061   001260  C177  F044         	movff	powf@s_h+3,___fladd@b+3
  6062   001264  EC0B  F01E         	call	___fladd	;wreg free
  6063   001268  C041  F00F         	movff	?___fladd,___flmul@b
  6064   00126C  C042  F010         	movff	?___fladd+1,___flmul@b+1
  6065   001270  C043  F011         	movff	?___fladd+2,___flmul@b+2
  6066   001274  C044  F012         	movff	?___fladd+3,___flmul@b+3
  6067   001278  EC66  F020         	call	___flmul	;wreg free
  6068   00127C  C00F  F15C         	movff	?___flmul,_powf$1848
  6069   001280  C010  F15D         	movff	?___flmul+1,_powf$1848+1
  6070   001284  C011  F15E         	movff	?___flmul+2,_powf$1848+2
  6071   001288  C012  F15F         	movff	?___flmul+3,_powf$1848+3
  6072   00128C  C150  F041         	movff	powf@r,___fladd@b
  6073   001290  C151  F042         	movff	powf@r+1,___fladd@b+1
  6074   001294  C152  F043         	movff	powf@r+2,___fladd@b+2
  6075   001298  C153  F044         	movff	powf@r+3,___fladd@b+3
  6076   00129C  C15C  F045         	movff	_powf$1848,___fladd@a
  6077   0012A0  C15D  F046         	movff	_powf$1848+1,___fladd@a+1
  6078   0012A4  C15E  F047         	movff	_powf$1848+2,___fladd@a+2
  6079   0012A8  C15F  F048         	movff	_powf$1848+3,___fladd@a+3
  6080   0012AC  EC0B  F01E         	call	___fladd	;wreg free
  6081   0012B0  C041  F150         	movff	?___fladd,powf@r
  6082   0012B4  C042  F151         	movff	?___fladd+1,powf@r+1
  6083   0012B8  C043  F152         	movff	?___fladd+2,powf@r+2
  6084   0012BC  C044  F153         	movff	?___fladd+3,powf@r+3
  6085   0012C0  C174  F00F         	movff	powf@s_h,___flmul@b
  6086   0012C4  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  6087   0012C8  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  6088   0012CC  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  6089   0012D0  C174  F013         	movff	powf@s_h,___flmul@a
  6090   0012D4  C175  F014         	movff	powf@s_h+1,___flmul@a+1
  6091   0012D8  C176  F015         	movff	powf@s_h+2,___flmul@a+2
  6092   0012DC  C177  F016         	movff	powf@s_h+3,___flmul@a+3
  6093   0012E0  EC66  F020         	call	___flmul	;wreg free
  6094   0012E4  C00F  F190         	movff	?___flmul,powf@s2
  6095   0012E8  C010  F191         	movff	?___flmul+1,powf@s2+1
  6096   0012EC  C011  F192         	movff	?___flmul+2,powf@s2+2
  6097   0012F0  C012  F193         	movff	?___flmul+3,powf@s2+3
  6098   0012F4  0E00               	movlw	0
  6099   0012F6  6E45               	movwf	___fladd@a^0,c
  6100   0012F8  0E00               	movlw	0
  6101   0012FA  6E46               	movwf	(___fladd@a+1)^0,c
  6102   0012FC  0E40               	movlw	64
  6103   0012FE  6E47               	movwf	(___fladd@a+2)^0,c
  6104   001300  0E40               	movlw	64
  6105   001302  6E48               	movwf	(___fladd@a+3)^0,c
  6106   001304  C190  F041         	movff	powf@s2,___fladd@b
  6107   001308  C191  F042         	movff	powf@s2+1,___fladd@b+1
  6108   00130C  C192  F043         	movff	powf@s2+2,___fladd@b+2
  6109   001310  C193  F044         	movff	powf@s2+3,___fladd@b+3
  6110   001314  EC0B  F01E         	call	___fladd	;wreg free
  6111   001318  C041  F15C         	movff	?___fladd,_powf$1848
  6112   00131C  C042  F15D         	movff	?___fladd+1,_powf$1848+1
  6113   001320  C043  F15E         	movff	?___fladd+2,_powf$1848+2
  6114   001324  C044  F15F         	movff	?___fladd+3,_powf$1848+3
  6115   001328  C15C  F041         	movff	_powf$1848,___fladd@b
  6116   00132C  C15D  F042         	movff	_powf$1848+1,___fladd@b+1
  6117   001330  C15E  F043         	movff	_powf$1848+2,___fladd@b+2
  6118   001334  C15F  F044         	movff	_powf$1848+3,___fladd@b+3
  6119   001338  C150  F045         	movff	powf@r,___fladd@a
  6120   00133C  C151  F046         	movff	powf@r+1,___fladd@a+1
  6121   001340  C152  F047         	movff	powf@r+2,___fladd@a+2
  6122   001344  C153  F048         	movff	powf@r+3,___fladd@a+3
  6123   001348  EC0B  F01E         	call	___fladd	;wreg free
  6124   00134C  C041  F170         	movff	?___fladd,powf@t_h
  6125   001350  C042  F171         	movff	?___fladd+1,powf@t_h+1
  6126   001354  C043  F172         	movff	?___fladd+2,powf@t_h+2
  6127   001358  C044  F173         	movff	?___fladd+3,powf@t_h+3
  6128   00135C  C170  F198         	movff	powf@t_h,powf@is
  6129   001360  C171  F199         	movff	powf@t_h+1,powf@is+1
  6130   001364  C172  F19A         	movff	powf@t_h+2,powf@is+2
  6131   001368  C173  F19B         	movff	powf@t_h+3,powf@is+3
  6132   00136C  0E00               	movlw	0
  6133   00136E  0101               	movlb	1	; () banked
  6134   001370  1598               	andwf	powf@is& (0+255),w,b
  6135   001372  6F70               	movwf	powf@t_h& (0+255),b
  6136   001374  0EF0               	movlw	240
  6137   001376  1599               	andwf	(powf@is+1)& (0+255),w,b
  6138   001378  6F71               	movwf	(powf@t_h+1)& (0+255),b
  6139   00137A  0EFF               	movlw	255
  6140   00137C  159A               	andwf	(powf@is+2)& (0+255),w,b
  6141   00137E  6F72               	movwf	(powf@t_h+2)& (0+255),b
  6142   001380  0EFF               	movlw	255
  6143   001382  159B               	andwf	(powf@is+3)& (0+255),w,b
  6144   001384  6F73               	movwf	(powf@t_h+3)& (0+255),b
  6145   001386                     
  6146                           ; BSR set to: 1
  6147   001386  0E00               	movlw	0
  6148   001388  6E45               	movwf	___fladd@a^0,c
  6149   00138A  0E00               	movlw	0
  6150   00138C  6E46               	movwf	(___fladd@a+1)^0,c
  6151   00138E  0E40               	movlw	64
  6152   001390  6E47               	movwf	(___fladd@a+2)^0,c
  6153   001392  0EC0               	movlw	192
  6154   001394  6E48               	movwf	(___fladd@a+3)^0,c
  6155   001396  C170  F041         	movff	powf@t_h,___fladd@b
  6156   00139A  C171  F042         	movff	powf@t_h+1,___fladd@b+1
  6157   00139E  C172  F043         	movff	powf@t_h+2,___fladd@b+2
  6158   0013A2  C173  F044         	movff	powf@t_h+3,___fladd@b+3
  6159   0013A6  EC0B  F01E         	call	___fladd	;wreg free
  6160   0013AA  C041  F13C         	movff	?___fladd,_powf$1849
  6161   0013AE  C042  F13D         	movff	?___fladd+1,_powf$1849+1
  6162   0013B2  C043  F13E         	movff	?___fladd+2,_powf$1849+2
  6163   0013B6  C044  F13F         	movff	?___fladd+3,_powf$1849+3
  6164   0013BA  C190  F055         	movff	powf@s2,___flsub@a
  6165   0013BE  C191  F056         	movff	powf@s2+1,___flsub@a+1
  6166   0013C2  C192  F057         	movff	powf@s2+2,___flsub@a+2
  6167   0013C6  C193  F058         	movff	powf@s2+3,___flsub@a+3
  6168   0013CA  C13C  F051         	movff	_powf$1849,___flsub@b
  6169   0013CE  C13D  F052         	movff	_powf$1849+1,___flsub@b+1
  6170   0013D2  C13E  F053         	movff	_powf$1849+2,___flsub@b+2
  6171   0013D6  C13F  F054         	movff	_powf$1849+3,___flsub@b+3
  6172   0013DA  ECA8  F036         	call	___flsub	;wreg free
  6173   0013DE  C051  F140         	movff	?___flsub,_powf$1850
  6174   0013E2  C052  F141         	movff	?___flsub+1,_powf$1850+1
  6175   0013E6  C053  F142         	movff	?___flsub+2,_powf$1850+2
  6176   0013EA  C054  F143         	movff	?___flsub+3,_powf$1850+3
  6177   0013EE  C150  F051         	movff	powf@r,___flsub@b
  6178   0013F2  C151  F052         	movff	powf@r+1,___flsub@b+1
  6179   0013F6  C152  F053         	movff	powf@r+2,___flsub@b+2
  6180   0013FA  C153  F054         	movff	powf@r+3,___flsub@b+3
  6181   0013FE  C140  F055         	movff	_powf$1850,___flsub@a
  6182   001402  C141  F056         	movff	_powf$1850+1,___flsub@a+1
  6183   001406  C142  F057         	movff	_powf$1850+2,___flsub@a+2
  6184   00140A  C143  F058         	movff	_powf$1850+3,___flsub@a+3
  6185   00140E  ECA8  F036         	call	___flsub	;wreg free
  6186   001412  C051  F134         	movff	?___flsub,powf@t_l
  6187   001416  C052  F135         	movff	?___flsub+1,powf@t_l+1
  6188   00141A  C053  F136         	movff	?___flsub+2,powf@t_l+2
  6189   00141E  C054  F137         	movff	?___flsub+3,powf@t_l+3
  6190   001422  C174  F00F         	movff	powf@s_h,___flmul@b
  6191   001426  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  6192   00142A  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  6193   00142E  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  6194   001432  C170  F013         	movff	powf@t_h,___flmul@a
  6195   001436  C171  F014         	movff	powf@t_h+1,___flmul@a+1
  6196   00143A  C172  F015         	movff	powf@t_h+2,___flmul@a+2
  6197   00143E  C173  F016         	movff	powf@t_h+3,___flmul@a+3
  6198   001442  EC66  F020         	call	___flmul	;wreg free
  6199   001446  C00F  F17C         	movff	?___flmul,powf@u
  6200   00144A  C010  F17D         	movff	?___flmul+1,powf@u+1
  6201   00144E  C011  F17E         	movff	?___flmul+2,powf@u+2
  6202   001452  C012  F17F         	movff	?___flmul+3,powf@u+3
  6203   001456  C130  F013         	movff	powf@s_l,___flmul@a
  6204   00145A  C131  F014         	movff	powf@s_l+1,___flmul@a+1
  6205   00145E  C132  F015         	movff	powf@s_l+2,___flmul@a+2
  6206   001462  C133  F016         	movff	powf@s_l+3,___flmul@a+3
  6207   001466  C170  F00F         	movff	powf@t_h,___flmul@b
  6208   00146A  C171  F010         	movff	powf@t_h+1,___flmul@b+1
  6209   00146E  C172  F011         	movff	powf@t_h+2,___flmul@b+2
  6210   001472  C173  F012         	movff	powf@t_h+3,___flmul@b+3
  6211   001476  EC66  F020         	call	___flmul	;wreg free
  6212   00147A  C00F  F041         	movff	?___flmul,___fladd@b
  6213   00147E  C010  F042         	movff	?___flmul+1,___fladd@b+1
  6214   001482  C011  F043         	movff	?___flmul+2,___fladd@b+2
  6215   001486  C012  F044         	movff	?___flmul+3,___fladd@b+3
  6216   00148A  C160  F013         	movff	powf@s,___flmul@a
  6217   00148E  C161  F014         	movff	powf@s+1,___flmul@a+1
  6218   001492  C162  F015         	movff	powf@s+2,___flmul@a+2
  6219   001496  C163  F016         	movff	powf@s+3,___flmul@a+3
  6220   00149A  C134  F00F         	movff	powf@t_l,___flmul@b
  6221   00149E  C135  F010         	movff	powf@t_l+1,___flmul@b+1
  6222   0014A2  C136  F011         	movff	powf@t_l+2,___flmul@b+2
  6223   0014A6  C137  F012         	movff	powf@t_l+3,___flmul@b+3
  6224   0014AA  EC66  F020         	call	___flmul	;wreg free
  6225   0014AE  C00F  F045         	movff	?___flmul,___fladd@a
  6226   0014B2  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6227   0014B6  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6228   0014BA  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6229   0014BE  EC0B  F01E         	call	___fladd	;wreg free
  6230   0014C2  C041  F180         	movff	?___fladd,powf@v
  6231   0014C6  C042  F181         	movff	?___fladd+1,powf@v+1
  6232   0014CA  C043  F182         	movff	?___fladd+2,powf@v+2
  6233   0014CE  C044  F183         	movff	?___fladd+3,powf@v+3
  6234   0014D2  C17C  F041         	movff	powf@u,___fladd@b
  6235   0014D6  C17D  F042         	movff	powf@u+1,___fladd@b+1
  6236   0014DA  C17E  F043         	movff	powf@u+2,___fladd@b+2
  6237   0014DE  C17F  F044         	movff	powf@u+3,___fladd@b+3
  6238   0014E2  C180  F045         	movff	powf@v,___fladd@a
  6239   0014E6  C181  F046         	movff	powf@v+1,___fladd@a+1
  6240   0014EA  C182  F047         	movff	powf@v+2,___fladd@a+2
  6241   0014EE  C183  F048         	movff	powf@v+3,___fladd@a+3
  6242   0014F2  EC0B  F01E         	call	___fladd	;wreg free
  6243   0014F6  C041  F1A0         	movff	?___fladd,powf@p_h
  6244   0014FA  C042  F1A1         	movff	?___fladd+1,powf@p_h+1
  6245   0014FE  C043  F1A2         	movff	?___fladd+2,powf@p_h+2
  6246   001502  C044  F1A3         	movff	?___fladd+3,powf@p_h+3
  6247   001506  C1A0  F198         	movff	powf@p_h,powf@is
  6248   00150A  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  6249   00150E  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  6250   001512  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  6251   001516  0E00               	movlw	0
  6252   001518  0101               	movlb	1	; () banked
  6253   00151A  1598               	andwf	powf@is& (0+255),w,b
  6254   00151C  6FA0               	movwf	powf@p_h& (0+255),b
  6255   00151E  0EF0               	movlw	240
  6256   001520  1599               	andwf	(powf@is+1)& (0+255),w,b
  6257   001522  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  6258   001524  0EFF               	movlw	255
  6259   001526  159A               	andwf	(powf@is+2)& (0+255),w,b
  6260   001528  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  6261   00152A  0EFF               	movlw	255
  6262   00152C  159B               	andwf	(powf@is+3)& (0+255),w,b
  6263   00152E  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  6264   001530                     
  6265                           ; BSR set to: 1
  6266   001530  C17C  F055         	movff	powf@u,___flsub@a
  6267   001534  C17D  F056         	movff	powf@u+1,___flsub@a+1
  6268   001538  C17E  F057         	movff	powf@u+2,___flsub@a+2
  6269   00153C  C17F  F058         	movff	powf@u+3,___flsub@a+3
  6270   001540  C1A0  F051         	movff	powf@p_h,___flsub@b
  6271   001544  C1A1  F052         	movff	powf@p_h+1,___flsub@b+1
  6272   001548  C1A2  F053         	movff	powf@p_h+2,___flsub@b+2
  6273   00154C  C1A3  F054         	movff	powf@p_h+3,___flsub@b+3
  6274   001550  ECA8  F036         	call	___flsub	;wreg free
  6275   001554  C051  F19C         	movff	?___flsub,_powf$1844
  6276   001558  C052  F19D         	movff	?___flsub+1,_powf$1844+1
  6277   00155C  C053  F19E         	movff	?___flsub+2,_powf$1844+2
  6278   001560  C054  F19F         	movff	?___flsub+3,_powf$1844+3
  6279   001564  C180  F051         	movff	powf@v,___flsub@b
  6280   001568  C181  F052         	movff	powf@v+1,___flsub@b+1
  6281   00156C  C182  F053         	movff	powf@v+2,___flsub@b+2
  6282   001570  C183  F054         	movff	powf@v+3,___flsub@b+3
  6283   001574  C19C  F055         	movff	_powf$1844,___flsub@a
  6284   001578  C19D  F056         	movff	_powf$1844+1,___flsub@a+1
  6285   00157C  C19E  F057         	movff	_powf$1844+2,___flsub@a+2
  6286   001580  C19F  F058         	movff	_powf$1844+3,___flsub@a+3
  6287   001584  ECA8  F036         	call	___flsub	;wreg free
  6288   001588  C051  F16C         	movff	?___flsub,powf@p_l
  6289   00158C  C052  F16D         	movff	?___flsub+1,powf@p_l+1
  6290   001590  C053  F16E         	movff	?___flsub+2,powf@p_l+2
  6291   001594  C054  F16F         	movff	?___flsub+3,powf@p_l+3
  6292   001598  C1A0  F00F         	movff	powf@p_h,___flmul@b
  6293   00159C  C1A1  F010         	movff	powf@p_h+1,___flmul@b+1
  6294   0015A0  C1A2  F011         	movff	powf@p_h+2,___flmul@b+2
  6295   0015A4  C1A3  F012         	movff	powf@p_h+3,___flmul@b+3
  6296   0015A8  0E00               	movlw	0
  6297   0015AA  6E13               	movwf	___flmul@a^0,c
  6298   0015AC  0E40               	movlw	64
  6299   0015AE  6E14               	movwf	(___flmul@a+1)^0,c
  6300   0015B0  0E76               	movlw	118
  6301   0015B2  6E15               	movwf	(___flmul@a+2)^0,c
  6302   0015B4  0E3F               	movlw	63
  6303   0015B6  6E16               	movwf	(___flmul@a+3)^0,c
  6304   0015B8  EC66  F020         	call	___flmul	;wreg free
  6305   0015BC  C00F  F120         	movff	?___flmul,powf@z_h
  6306   0015C0  C010  F121         	movff	?___flmul+1,powf@z_h+1
  6307   0015C4  C011  F122         	movff	?___flmul+2,powf@z_h+2
  6308   0015C8  C012  F123         	movff	?___flmul+3,powf@z_h+3
  6309   0015CC  0E4F               	movlw	79
  6310   0015CE  6E13               	movwf	___flmul@a^0,c
  6311   0015D0  0E38               	movlw	56
  6312   0015D2  6E14               	movwf	(___flmul@a+1)^0,c
  6313   0015D4  0E76               	movlw	118
  6314   0015D6  6E15               	movwf	(___flmul@a+2)^0,c
  6315   0015D8  0E3F               	movlw	63
  6316   0015DA  6E16               	movwf	(___flmul@a+3)^0,c
  6317   0015DC  C16C  F00F         	movff	powf@p_l,___flmul@b
  6318   0015E0  C16D  F010         	movff	powf@p_l+1,___flmul@b+1
  6319   0015E4  C16E  F011         	movff	powf@p_l+2,___flmul@b+2
  6320   0015E8  C16F  F012         	movff	powf@p_l+3,___flmul@b+3
  6321   0015EC  EC66  F020         	call	___flmul	;wreg free
  6322   0015F0  C00F  F045         	movff	?___flmul,___fladd@a
  6323   0015F4  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6324   0015F8  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6325   0015FC  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6326   001600  0EC6               	movlw	198
  6327   001602  6E13               	movwf	___flmul@a^0,c
  6328   001604  0E23               	movlw	35
  6329   001606  6E14               	movwf	(___flmul@a+1)^0,c
  6330   001608  0EF6               	movlw	246
  6331   00160A  6E15               	movwf	(___flmul@a+2)^0,c
  6332   00160C  0EB8               	movlw	184
  6333   00160E  6E16               	movwf	(___flmul@a+3)^0,c
  6334   001610  C1A0  F00F         	movff	powf@p_h,___flmul@b
  6335   001614  C1A1  F010         	movff	powf@p_h+1,___flmul@b+1
  6336   001618  C1A2  F011         	movff	powf@p_h+2,___flmul@b+2
  6337   00161C  C1A3  F012         	movff	powf@p_h+3,___flmul@b+3
  6338   001620  EC66  F020         	call	___flmul	;wreg free
  6339   001624  C00F  F041         	movff	?___flmul,___fladd@b
  6340   001628  C010  F042         	movff	?___flmul+1,___fladd@b+1
  6341   00162C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  6342   001630  C012  F044         	movff	?___flmul+3,___fladd@b+3
  6343   001634  EC0B  F01E         	call	___fladd	;wreg free
  6344   001638  C041  F15C         	movff	?___fladd,_powf$1848
  6345   00163C  C042  F15D         	movff	?___fladd+1,_powf$1848+1
  6346   001640  C043  F15E         	movff	?___fladd+2,_powf$1848+2
  6347   001644  C044  F15F         	movff	?___fladd+3,_powf$1848+3
  6348   001648  C15C  F041         	movff	_powf$1848,___fladd@b
  6349   00164C  C15D  F042         	movff	_powf$1848+1,___fladd@b+1
  6350   001650  C15E  F043         	movff	_powf$1848+2,___fladd@b+2
  6351   001654  C15F  F044         	movff	_powf$1848+3,___fladd@b+3
  6352   001658  C1A4  F070         	movff	powf@k,??_powf
  6353   00165C  C1A5  F071         	movff	powf@k+1,??_powf+1
  6354   001660  0100               	movlb	0	; () banked
  6355   001662  90D8               	bcf	status,0,c
  6356   001664  3770               	rlcf	??_powf& (0+255),f,b
  6357   001666  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6358   001668  90D8               	bcf	status,0,c
  6359   00166A  3770               	rlcf	??_powf& (0+255),f,b
  6360   00166C  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6361   00166E  0E5D               	movlw	low _dp_l
  6362   001670  2570               	addwf	??_powf& (0+255),w,b
  6363   001672  6EF6               	movwf	tblptrl,c
  6364   001674  0E7E               	movlw	high _dp_l
  6365   001676  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6366   001678  6EF7               	movwf	tblptrh,c
  6367   00167A                     	if	0	;There are less than 3 active tblptr bytes
  6368   00167A                     	endif
  6369   00167A  0009               	tblrd		*+
  6370   00167C  CFF5 F045          	movff	tablat,___fladd@a
  6371   001680  0009               	tblrd		*+
  6372   001682  CFF5 F046          	movff	tablat,___fladd@a+1
  6373   001686  0009               	tblrd		*+
  6374   001688  CFF5 F047          	movff	tablat,___fladd@a+2
  6375   00168C  000A               	tblrd		*-
  6376   00168E  CFF5 F048          	movff	tablat,___fladd@a+3
  6377   001692  EC0B  F01E         	call	___fladd	;wreg free
  6378   001696  C041  F124         	movff	?___fladd,powf@z_l
  6379   00169A  C042  F125         	movff	?___fladd+1,powf@z_l+1
  6380   00169E  C043  F126         	movff	?___fladd+2,powf@z_l+2
  6381   0016A2  C044  F127         	movff	?___fladd+3,powf@z_l+3
  6382   0016A6  C188  F001         	movff	powf@n,___xxtofl@val
  6383   0016AA  C189  F002         	movff	powf@n+1,___xxtofl@val+1
  6384   0016AE  C18A  F003         	movff	powf@n+2,___xxtofl@val+2
  6385   0016B2  C18B  F004         	movff	powf@n+3,___xxtofl@val+3
  6386   0016B6  0E01               	movlw	1
  6387   0016B8  EC5B  F02B         	call	___xxtofl
  6388   0016BC  C001  F1B0         	movff	?___xxtofl,powf@t
  6389   0016C0  C002  F1B1         	movff	?___xxtofl+1,powf@t+1
  6390   0016C4  C003  F1B2         	movff	?___xxtofl+2,powf@t+2
  6391   0016C8  C004  F1B3         	movff	?___xxtofl+3,powf@t+3
  6392   0016CC  C124  F045         	movff	powf@z_l,___fladd@a
  6393   0016D0  C125  F046         	movff	powf@z_l+1,___fladd@a+1
  6394   0016D4  C126  F047         	movff	powf@z_l+2,___fladd@a+2
  6395   0016D8  C127  F048         	movff	powf@z_l+3,___fladd@a+3
  6396   0016DC  C120  F041         	movff	powf@z_h,___fladd@b
  6397   0016E0  C121  F042         	movff	powf@z_h+1,___fladd@b+1
  6398   0016E4  C122  F043         	movff	powf@z_h+2,___fladd@b+2
  6399   0016E8  C123  F044         	movff	powf@z_h+3,___fladd@b+3
  6400   0016EC  EC0B  F01E         	call	___fladd	;wreg free
  6401   0016F0  C041  F15C         	movff	?___fladd,_powf$1848
  6402   0016F4  C042  F15D         	movff	?___fladd+1,_powf$1848+1
  6403   0016F8  C043  F15E         	movff	?___fladd+2,_powf$1848+2
  6404   0016FC  C044  F15F         	movff	?___fladd+3,_powf$1848+3
  6405   001700  C1A4  F070         	movff	powf@k,??_powf
  6406   001704  C1A5  F071         	movff	powf@k+1,??_powf+1
  6407   001708  0100               	movlb	0	; () banked
  6408   00170A  90D8               	bcf	status,0,c
  6409   00170C  3770               	rlcf	??_powf& (0+255),f,b
  6410   00170E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6411   001710  90D8               	bcf	status,0,c
  6412   001712  3770               	rlcf	??_powf& (0+255),f,b
  6413   001714  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6414   001716  0E65               	movlw	low _dp_h
  6415   001718  2570               	addwf	??_powf& (0+255),w,b
  6416   00171A  6EF6               	movwf	tblptrl,c
  6417   00171C  0E7E               	movlw	high _dp_h
  6418   00171E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6419   001720  6EF7               	movwf	tblptrh,c
  6420   001722                     	if	0	;There are less than 3 active tblptr bytes
  6421   001722                     	endif
  6422   001722  0009               	tblrd		*+
  6423   001724  CFF5 F045          	movff	tablat,___fladd@a
  6424   001728  0009               	tblrd		*+
  6425   00172A  CFF5 F046          	movff	tablat,___fladd@a+1
  6426   00172E  0009               	tblrd		*+
  6427   001730  CFF5 F047          	movff	tablat,___fladd@a+2
  6428   001734  000A               	tblrd		*-
  6429   001736  CFF5 F048          	movff	tablat,___fladd@a+3
  6430   00173A  C15C  F041         	movff	_powf$1848,___fladd@b
  6431   00173E  C15D  F042         	movff	_powf$1848+1,___fladd@b+1
  6432   001742  C15E  F043         	movff	_powf$1848+2,___fladd@b+2
  6433   001746  C15F  F044         	movff	_powf$1848+3,___fladd@b+3
  6434   00174A  EC0B  F01E         	call	___fladd	;wreg free
  6435   00174E  C041  F108         	movff	?___fladd,_powf$1851
  6436   001752  C042  F109         	movff	?___fladd+1,_powf$1851+1
  6437   001756  C043  F10A         	movff	?___fladd+2,_powf$1851+2
  6438   00175A  C044  F10B         	movff	?___fladd+3,_powf$1851+3
  6439   00175E  C108  F041         	movff	_powf$1851,___fladd@b
  6440   001762  C109  F042         	movff	_powf$1851+1,___fladd@b+1
  6441   001766  C10A  F043         	movff	_powf$1851+2,___fladd@b+2
  6442   00176A  C10B  F044         	movff	_powf$1851+3,___fladd@b+3
  6443   00176E  C1B0  F045         	movff	powf@t,___fladd@a
  6444   001772  C1B1  F046         	movff	powf@t+1,___fladd@a+1
  6445   001776  C1B2  F047         	movff	powf@t+2,___fladd@a+2
  6446   00177A  C1B3  F048         	movff	powf@t+3,___fladd@a+3
  6447   00177E  EC0B  F01E         	call	___fladd	;wreg free
  6448   001782  C041  F18C         	movff	?___fladd,powf@t1
  6449   001786  C042  F18D         	movff	?___fladd+1,powf@t1+1
  6450   00178A  C043  F18E         	movff	?___fladd+2,powf@t1+2
  6451   00178E  C044  F18F         	movff	?___fladd+3,powf@t1+3
  6452   001792  C18C  F198         	movff	powf@t1,powf@is
  6453   001796  C18D  F199         	movff	powf@t1+1,powf@is+1
  6454   00179A  C18E  F19A         	movff	powf@t1+2,powf@is+2
  6455   00179E  C18F  F19B         	movff	powf@t1+3,powf@is+3
  6456   0017A2  0E00               	movlw	0
  6457   0017A4  0101               	movlb	1	; () banked
  6458   0017A6  1598               	andwf	powf@is& (0+255),w,b
  6459   0017A8  6F8C               	movwf	powf@t1& (0+255),b
  6460   0017AA  0EF0               	movlw	240
  6461   0017AC  1599               	andwf	(powf@is+1)& (0+255),w,b
  6462   0017AE  6F8D               	movwf	(powf@t1+1)& (0+255),b
  6463   0017B0  0EFF               	movlw	255
  6464   0017B2  159A               	andwf	(powf@is+2)& (0+255),w,b
  6465   0017B4  6F8E               	movwf	(powf@t1+2)& (0+255),b
  6466   0017B6  0EFF               	movlw	255
  6467   0017B8  159B               	andwf	(powf@is+3)& (0+255),w,b
  6468   0017BA  6F8F               	movwf	(powf@t1+3)& (0+255),b
  6469   0017BC                     
  6470                           ; BSR set to: 1
  6471   0017BC  C1B0  F055         	movff	powf@t,___flsub@a
  6472   0017C0  C1B1  F056         	movff	powf@t+1,___flsub@a+1
  6473   0017C4  C1B2  F057         	movff	powf@t+2,___flsub@a+2
  6474   0017C8  C1B3  F058         	movff	powf@t+3,___flsub@a+3
  6475   0017CC  C18C  F051         	movff	powf@t1,___flsub@b
  6476   0017D0  C18D  F052         	movff	powf@t1+1,___flsub@b+1
  6477   0017D4  C18E  F053         	movff	powf@t1+2,___flsub@b+2
  6478   0017D8  C18F  F054         	movff	powf@t1+3,___flsub@b+3
  6479   0017DC  ECA8  F036         	call	___flsub	;wreg free
  6480   0017E0  C051  F19C         	movff	?___flsub,_powf$1844
  6481   0017E4  C052  F19D         	movff	?___flsub+1,_powf$1844+1
  6482   0017E8  C053  F19E         	movff	?___flsub+2,_powf$1844+2
  6483   0017EC  C054  F19F         	movff	?___flsub+3,_powf$1844+3
  6484   0017F0  C1A4  F070         	movff	powf@k,??_powf
  6485   0017F4  C1A5  F071         	movff	powf@k+1,??_powf+1
  6486   0017F8  0100               	movlb	0	; () banked
  6487   0017FA  90D8               	bcf	status,0,c
  6488   0017FC  3770               	rlcf	??_powf& (0+255),f,b
  6489   0017FE  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6490   001800  90D8               	bcf	status,0,c
  6491   001802  3770               	rlcf	??_powf& (0+255),f,b
  6492   001804  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6493   001806  0E65               	movlw	low _dp_h
  6494   001808  2570               	addwf	??_powf& (0+255),w,b
  6495   00180A  6EF6               	movwf	tblptrl,c
  6496   00180C  0E7E               	movlw	high _dp_h
  6497   00180E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6498   001810  6EF7               	movwf	tblptrh,c
  6499   001812                     	if	0	;There are less than 3 active tblptr bytes
  6500   001812                     	endif
  6501   001812  0009               	tblrd		*+
  6502   001814  CFF5 F055          	movff	tablat,___flsub@a
  6503   001818  0009               	tblrd		*+
  6504   00181A  CFF5 F056          	movff	tablat,___flsub@a+1
  6505   00181E  0009               	tblrd		*+
  6506   001820  CFF5 F057          	movff	tablat,___flsub@a+2
  6507   001824  000A               	tblrd		*-
  6508   001826  CFF5 F058          	movff	tablat,___flsub@a+3
  6509   00182A  C19C  F051         	movff	_powf$1844,___flsub@b
  6510   00182E  C19D  F052         	movff	_powf$1844+1,___flsub@b+1
  6511   001832  C19E  F053         	movff	_powf$1844+2,___flsub@b+2
  6512   001836  C19F  F054         	movff	_powf$1844+3,___flsub@b+3
  6513   00183A  ECA8  F036         	call	___flsub	;wreg free
  6514   00183E  C051  F140         	movff	?___flsub,_powf$1850
  6515   001842  C052  F141         	movff	?___flsub+1,_powf$1850+1
  6516   001846  C053  F142         	movff	?___flsub+2,_powf$1850+2
  6517   00184A  C054  F143         	movff	?___flsub+3,_powf$1850+3
  6518   00184E  C120  F055         	movff	powf@z_h,___flsub@a
  6519   001852  C121  F056         	movff	powf@z_h+1,___flsub@a+1
  6520   001856  C122  F057         	movff	powf@z_h+2,___flsub@a+2
  6521   00185A  C123  F058         	movff	powf@z_h+3,___flsub@a+3
  6522   00185E  C140  F051         	movff	_powf$1850,___flsub@b
  6523   001862  C141  F052         	movff	_powf$1850+1,___flsub@b+1
  6524   001866  C142  F053         	movff	_powf$1850+2,___flsub@b+2
  6525   00186A  C143  F054         	movff	_powf$1850+3,___flsub@b+3
  6526   00186E  ECA8  F036         	call	___flsub	;wreg free
  6527   001872  C051  F10C         	movff	?___flsub,_powf$1852
  6528   001876  C052  F10D         	movff	?___flsub+1,_powf$1852+1
  6529   00187A  C053  F10E         	movff	?___flsub+2,_powf$1852+2
  6530   00187E  C054  F10F         	movff	?___flsub+3,_powf$1852+3
  6531   001882  C124  F051         	movff	powf@z_l,___flsub@b
  6532   001886  C125  F052         	movff	powf@z_l+1,___flsub@b+1
  6533   00188A  C126  F053         	movff	powf@z_l+2,___flsub@b+2
  6534   00188E  C127  F054         	movff	powf@z_l+3,___flsub@b+3
  6535   001892  C10C  F055         	movff	_powf$1852,___flsub@a
  6536   001896  C10D  F056         	movff	_powf$1852+1,___flsub@a+1
  6537   00189A  C10E  F057         	movff	_powf$1852+2,___flsub@a+2
  6538   00189E  C10F  F058         	movff	_powf$1852+3,___flsub@a+3
  6539   0018A2  ECA8  F036         	call	___flsub	;wreg free
  6540   0018A6  C051  F11C         	movff	?___flsub,powf@t2
  6541   0018AA  C052  F11D         	movff	?___flsub+1,powf@t2+1
  6542   0018AE  C053  F11E         	movff	?___flsub+2,powf@t2+2
  6543   0018B2  C054  F11F         	movff	?___flsub+3,powf@t2+3
  6544   0018B6                     l7686:
  6545   0018B6  C06C  F198         	movff	powf@y,powf@is
  6546   0018BA  C06D  F199         	movff	powf@y+1,powf@is+1
  6547   0018BE  C06E  F19A         	movff	powf@y+2,powf@is+2
  6548   0018C2  C06F  F19B         	movff	powf@y+3,powf@is+3
  6549   0018C6  0E00               	movlw	0
  6550   0018C8  0101               	movlb	1	; () banked
  6551   0018CA  1598               	andwf	powf@is& (0+255),w,b
  6552   0018CC  6F2C               	movwf	powf@y1& (0+255),b
  6553   0018CE  0EF0               	movlw	240
  6554   0018D0  1599               	andwf	(powf@is+1)& (0+255),w,b
  6555   0018D2  6F2D               	movwf	(powf@y1+1)& (0+255),b
  6556   0018D4  0EFF               	movlw	255
  6557   0018D6  159A               	andwf	(powf@is+2)& (0+255),w,b
  6558   0018D8  6F2E               	movwf	(powf@y1+2)& (0+255),b
  6559   0018DA  0EFF               	movlw	255
  6560   0018DC  159B               	andwf	(powf@is+3)& (0+255),w,b
  6561   0018DE  6F2F               	movwf	(powf@y1+3)& (0+255),b
  6562   0018E0                     
  6563                           ; BSR set to: 1
  6564   0018E0  C18C  F013         	movff	powf@t1,___flmul@a
  6565   0018E4  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  6566   0018E8  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  6567   0018EC  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  6568   0018F0  C12C  F055         	movff	powf@y1,___flsub@a
  6569   0018F4  C12D  F056         	movff	powf@y1+1,___flsub@a+1
  6570   0018F8  C12E  F057         	movff	powf@y1+2,___flsub@a+2
  6571   0018FC  C12F  F058         	movff	powf@y1+3,___flsub@a+3
  6572   001900  C06C  F051         	movff	powf@y,___flsub@b
  6573   001904  C06D  F052         	movff	powf@y+1,___flsub@b+1
  6574   001908  C06E  F053         	movff	powf@y+2,___flsub@b+2
  6575   00190C  C06F  F054         	movff	powf@y+3,___flsub@b+3
  6576   001910  ECA8  F036         	call	___flsub	;wreg free
  6577   001914  C051  F00F         	movff	?___flsub,___flmul@b
  6578   001918  C052  F010         	movff	?___flsub+1,___flmul@b+1
  6579   00191C  C053  F011         	movff	?___flsub+2,___flmul@b+2
  6580   001920  C054  F012         	movff	?___flsub+3,___flmul@b+3
  6581   001924  EC66  F020         	call	___flmul	;wreg free
  6582   001928  C00F  F110         	movff	?___flmul,_powf$1853
  6583   00192C  C010  F111         	movff	?___flmul+1,_powf$1853+1
  6584   001930  C011  F112         	movff	?___flmul+2,_powf$1853+2
  6585   001934  C012  F113         	movff	?___flmul+3,_powf$1853+3
  6586   001938  C110  F041         	movff	_powf$1853,___fladd@b
  6587   00193C  C111  F042         	movff	_powf$1853+1,___fladd@b+1
  6588   001940  C112  F043         	movff	_powf$1853+2,___fladd@b+2
  6589   001944  C113  F044         	movff	_powf$1853+3,___fladd@b+3
  6590   001948  C11C  F013         	movff	powf@t2,___flmul@a
  6591   00194C  C11D  F014         	movff	powf@t2+1,___flmul@a+1
  6592   001950  C11E  F015         	movff	powf@t2+2,___flmul@a+2
  6593   001954  C11F  F016         	movff	powf@t2+3,___flmul@a+3
  6594   001958  C06C  F00F         	movff	powf@y,___flmul@b
  6595   00195C  C06D  F010         	movff	powf@y+1,___flmul@b+1
  6596   001960  C06E  F011         	movff	powf@y+2,___flmul@b+2
  6597   001964  C06F  F012         	movff	powf@y+3,___flmul@b+3
  6598   001968  EC66  F020         	call	___flmul	;wreg free
  6599   00196C  C00F  F045         	movff	?___flmul,___fladd@a
  6600   001970  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6601   001974  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6602   001978  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6603   00197C  EC0B  F01E         	call	___fladd	;wreg free
  6604   001980  C041  F16C         	movff	?___fladd,powf@p_l
  6605   001984  C042  F16D         	movff	?___fladd+1,powf@p_l+1
  6606   001988  C043  F16E         	movff	?___fladd+2,powf@p_l+2
  6607   00198C  C044  F16F         	movff	?___fladd+3,powf@p_l+3
  6608   001990  C12C  F00F         	movff	powf@y1,___flmul@b
  6609   001994  C12D  F010         	movff	powf@y1+1,___flmul@b+1
  6610   001998  C12E  F011         	movff	powf@y1+2,___flmul@b+2
  6611   00199C  C12F  F012         	movff	powf@y1+3,___flmul@b+3
  6612   0019A0  C18C  F013         	movff	powf@t1,___flmul@a
  6613   0019A4  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  6614   0019A8  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  6615   0019AC  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  6616   0019B0  EC66  F020         	call	___flmul	;wreg free
  6617   0019B4  C00F  F1A0         	movff	?___flmul,powf@p_h
  6618   0019B8  C010  F1A1         	movff	?___flmul+1,powf@p_h+1
  6619   0019BC  C011  F1A2         	movff	?___flmul+2,powf@p_h+2
  6620   0019C0  C012  F1A3         	movff	?___flmul+3,powf@p_h+3
  6621   0019C4  C1A0  F041         	movff	powf@p_h,___fladd@b
  6622   0019C8  C1A1  F042         	movff	powf@p_h+1,___fladd@b+1
  6623   0019CC  C1A2  F043         	movff	powf@p_h+2,___fladd@b+2
  6624   0019D0  C1A3  F044         	movff	powf@p_h+3,___fladd@b+3
  6625   0019D4  C16C  F045         	movff	powf@p_l,___fladd@a
  6626   0019D8  C16D  F046         	movff	powf@p_l+1,___fladd@a+1
  6627   0019DC  C16E  F047         	movff	powf@p_l+2,___fladd@a+2
  6628   0019E0  C16F  F048         	movff	powf@p_l+3,___fladd@a+3
  6629   0019E4  EC0B  F01E         	call	___fladd	;wreg free
  6630   0019E8  C041  F1B4         	movff	?___fladd,powf@z
  6631   0019EC  C042  F1B5         	movff	?___fladd+1,powf@z+1
  6632   0019F0  C043  F1B6         	movff	?___fladd+2,powf@z+2
  6633   0019F4  C044  F1B7         	movff	?___fladd+3,powf@z+3
  6634   0019F8  C1B4  F1A8         	movff	powf@z,powf@j
  6635   0019FC  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  6636   001A00  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  6637   001A04  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  6638   001A08  0101               	movlb	1	; () banked
  6639   001A0A  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  6640   001A0C  EF14  F00D         	goto	u10071
  6641   001A10  05A8               	decf	powf@j& (0+255),w,b
  6642   001A12  0E00               	movlw	0
  6643   001A14  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  6644   001A16  0E00               	movlw	0
  6645   001A18  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  6646   001A1A  0E43               	movlw	67
  6647   001A1C  59AB               	subwfb	(powf@j+3)& (0+255),w,b
  6648   001A1E  A0D8               	btfss	status,0,c
  6649   001A20  EF14  F00D         	goto	u10071
  6650   001A24  EF16  F00D         	goto	u10070
  6651   001A28                     u10071:
  6652   001A28  EF18  F00D         	goto	l7708
  6653   001A2C                     u10070:
  6654   001A2C  EFA2  F003         	goto	l7508
  6655   001A30                     l7708:
  6656                           
  6657                           ; BSR set to: 1
  6658   001A30  0E43               	movlw	67
  6659   001A32  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6660   001A34  11A8               	iorwf	powf@j& (0+255),w,b
  6661   001A36  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6662   001A38  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  6663   001A3A  A4D8               	btfss	status,2,c
  6664   001A3C  EF22  F00D         	goto	u10081
  6665   001A40  EF24  F00D         	goto	u10080
  6666   001A44                     u10081:
  6667   001A44  EF64  F00D         	goto	l7718
  6668   001A48                     u10080:
  6669   001A48                     
  6670                           ; BSR set to: 1
  6671   001A48  C1A0  F055         	movff	powf@p_h,___flsub@a
  6672   001A4C  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  6673   001A50  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  6674   001A54  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  6675   001A58  C1B4  F051         	movff	powf@z,___flsub@b
  6676   001A5C  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  6677   001A60  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  6678   001A64  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  6679   001A68  ECA8  F036         	call	___flsub	;wreg free
  6680   001A6C  C051  F060         	movff	?___flsub,___flge@ff1
  6681   001A70  C052  F061         	movff	?___flsub+1,___flge@ff1+1
  6682   001A74  C053  F062         	movff	?___flsub+2,___flge@ff1+2
  6683   001A78  C054  F063         	movff	?___flsub+3,___flge@ff1+3
  6684   001A7C  0E3C               	movlw	60
  6685   001A7E  6E45               	movwf	___fladd@a^0,c
  6686   001A80  0EAA               	movlw	170
  6687   001A82  6E46               	movwf	(___fladd@a+1)^0,c
  6688   001A84  0E38               	movlw	56
  6689   001A86  6E47               	movwf	(___fladd@a+2)^0,c
  6690   001A88  0E33               	movlw	51
  6691   001A8A  6E48               	movwf	(___fladd@a+3)^0,c
  6692   001A8C  C16C  F041         	movff	powf@p_l,___fladd@b
  6693   001A90  C16D  F042         	movff	powf@p_l+1,___fladd@b+1
  6694   001A94  C16E  F043         	movff	powf@p_l+2,___fladd@b+2
  6695   001A98  C16F  F044         	movff	powf@p_l+3,___fladd@b+3
  6696   001A9C  EC0B  F01E         	call	___fladd	;wreg free
  6697   001AA0  C041  F064         	movff	?___fladd,___flge@ff2
  6698   001AA4  C042  F065         	movff	?___fladd+1,___flge@ff2+1
  6699   001AA8  C043  F066         	movff	?___fladd+2,___flge@ff2+2
  6700   001AAC  C044  F067         	movff	?___fladd+3,___flge@ff2+3
  6701   001AB0  ECFE  F02F         	call	___flge	;wreg free
  6702   001AB4  0100               	movlb	0	; () banked
  6703   001AB6  B0D8               	btfsc	status,0,c
  6704   001AB8  EF60  F00D         	goto	u10091
  6705   001ABC  EF62  F00D         	goto	u10090
  6706   001AC0                     u10091:
  6707   001AC0  EFD7  F00D         	goto	l7734
  6708   001AC4                     u10090:
  6709   001AC4  EFA2  F003         	goto	l7508
  6710   001AC8                     l7718:
  6711                           
  6712                           ; BSR set to: 1
  6713   001AC8  0EFF               	movlw	255
  6714   001ACA  15A8               	andwf	powf@j& (0+255),w,b
  6715   001ACC  0100               	movlb	0	; () banked
  6716   001ACE  6F70               	movwf	??_powf& (0+255),b
  6717   001AD0  0EFF               	movlw	255
  6718   001AD2  0101               	movlb	1	; () banked
  6719   001AD4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6720   001AD6  0100               	movlb	0	; () banked
  6721   001AD8  6F71               	movwf	(??_powf+1)& (0+255),b
  6722   001ADA  0EFF               	movlw	255
  6723   001ADC  0101               	movlb	1	; () banked
  6724   001ADE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6725   001AE0  0100               	movlb	0	; () banked
  6726   001AE2  6F72               	movwf	(??_powf+2)& (0+255),b
  6727   001AE4  0E7F               	movlw	127
  6728   001AE6  0101               	movlb	1	; () banked
  6729   001AE8  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6730   001AEA  0100               	movlb	0	; () banked
  6731   001AEC  6F73               	movwf	(??_powf+3)& (0+255),b
  6732   001AEE  BF73               	btfsc	(??_powf+3)& (0+255),7,b
  6733   001AF0  EF86  F00D         	goto	u10101
  6734   001AF4  0570               	decf	??_powf& (0+255),w,b
  6735   001AF6  0E00               	movlw	0
  6736   001AF8  5971               	subwfb	(??_powf+1)& (0+255),w,b
  6737   001AFA  0E16               	movlw	22
  6738   001AFC  5972               	subwfb	(??_powf+2)& (0+255),w,b
  6739   001AFE  0E43               	movlw	67
  6740   001B00  5973               	subwfb	(??_powf+3)& (0+255),w,b
  6741   001B02  A0D8               	btfss	status,0,c
  6742   001B04  EF86  F00D         	goto	u10101
  6743   001B08  EF88  F00D         	goto	u10100
  6744   001B0C                     u10101:
  6745   001B0C  EF92  F00D         	goto	l7726
  6746   001B10                     u10100:
  6747   001B10                     
  6748                           ; BSR set to: 0
  6749   001B10  0E00               	movlw	0
  6750   001B12  6F68               	movwf	?_powf& (0+255),b
  6751   001B14  0E00               	movlw	0
  6752   001B16  6F69               	movwf	(?_powf+1)& (0+255),b
  6753   001B18  0E00               	movlw	0
  6754   001B1A  6F6A               	movwf	(?_powf+2)& (0+255),b
  6755   001B1C  0E00               	movlw	0
  6756   001B1E  6F6B               	movwf	(?_powf+3)& (0+255),b
  6757   001B20  EF63  F012         	goto	l1277
  6758   001B24                     l7726:
  6759                           
  6760                           ; BSR set to: 0
  6761   001B24  0E16               	movlw	22
  6762   001B26  0101               	movlb	1	; () banked
  6763   001B28  19AA               	xorwf	(powf@j+2)& (0+255),w,b
  6764   001B2A  E109               	bnz	u10111
  6765   001B2C  0EC3               	movlw	195
  6766   001B2E  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6767   001B30  11A8               	iorwf	powf@j& (0+255),w,b
  6768   001B32  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6769   001B34  A4D8               	btfss	status,2,c
  6770   001B36  EF9F  F00D         	goto	u10111
  6771   001B3A  EFA1  F00D         	goto	u10110
  6772   001B3E                     u10111:
  6773   001B3E  EFD7  F00D         	goto	l7734
  6774   001B42                     u10110:
  6775   001B42                     
  6776                           ; BSR set to: 1
  6777   001B42  C1A0  F055         	movff	powf@p_h,___flsub@a
  6778   001B46  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  6779   001B4A  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  6780   001B4E  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  6781   001B52  C1B4  F051         	movff	powf@z,___flsub@b
  6782   001B56  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  6783   001B5A  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  6784   001B5E  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  6785   001B62  ECA8  F036         	call	___flsub	;wreg free
  6786   001B66  C051  F060         	movff	?___flsub,___flge@ff1
  6787   001B6A  C052  F061         	movff	?___flsub+1,___flge@ff1+1
  6788   001B6E  C053  F062         	movff	?___flsub+2,___flge@ff1+2
  6789   001B72  C054  F063         	movff	?___flsub+3,___flge@ff1+3
  6790   001B76  C16C  F064         	movff	powf@p_l,___flge@ff2
  6791   001B7A  C16D  F065         	movff	powf@p_l+1,___flge@ff2+1
  6792   001B7E  C16E  F066         	movff	powf@p_l+2,___flge@ff2+2
  6793   001B82  C16F  F067         	movff	powf@p_l+3,___flge@ff2+3
  6794   001B86  ECFE  F02F         	call	___flge	;wreg free
  6795   001B8A  0100               	movlb	0	; () banked
  6796   001B8C  A0D8               	btfss	status,0,c
  6797   001B8E  EFCB  F00D         	goto	u10121
  6798   001B92  EFCD  F00D         	goto	u10120
  6799   001B96                     u10121:
  6800   001B96  EFD7  F00D         	goto	l7734
  6801   001B9A                     u10120:
  6802   001B9A                     
  6803                           ; BSR set to: 0
  6804   001B9A  0E00               	movlw	0
  6805   001B9C  6F68               	movwf	?_powf& (0+255),b
  6806   001B9E  0E00               	movlw	0
  6807   001BA0  6F69               	movwf	(?_powf+1)& (0+255),b
  6808   001BA2  0E00               	movlw	0
  6809   001BA4  6F6A               	movwf	(?_powf+2)& (0+255),b
  6810   001BA6  0E00               	movlw	0
  6811   001BA8  6F6B               	movwf	(?_powf+3)& (0+255),b
  6812   001BAA  EF63  F012         	goto	l1277
  6813   001BAE                     l7734:
  6814   001BAE  0EFF               	movlw	255
  6815   001BB0  0101               	movlb	1	; () banked
  6816   001BB2  15A8               	andwf	powf@j& (0+255),w,b
  6817   001BB4  6F28               	movwf	powf@i& (0+255),b
  6818   001BB6  0EFF               	movlw	255
  6819   001BB8  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6820   001BBA  6F29               	movwf	(powf@i+1)& (0+255),b
  6821   001BBC  0EFF               	movlw	255
  6822   001BBE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6823   001BC0  6F2A               	movwf	(powf@i+2)& (0+255),b
  6824   001BC2  0E7F               	movlw	127
  6825   001BC4  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6826   001BC6  6F2B               	movwf	(powf@i+3)& (0+255),b
  6827   001BC8  0E17               	movlw	23
  6828   001BCA  0100               	movlb	0	; () banked
  6829   001BCC  6F70               	movwf	??_powf& (0+255),b
  6830   001BCE  C128  F071         	movff	powf@i,??_powf+1
  6831   001BD2  C129  F072         	movff	powf@i+1,??_powf+2
  6832   001BD6  C12A  F073         	movff	powf@i+2,??_powf+3
  6833   001BDA  C12B  F074         	movff	powf@i+3,??_powf+4
  6834   001BDE                     u10135:
  6835   001BDE  6770               	tstfsz	??_powf& (0+255),b
  6836   001BE0  EFF4  F00D         	goto	u10136
  6837   001BE4  EFFC  F00D         	goto	u10137
  6838   001BE8                     u10136:
  6839   001BE8  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6840   001BEA  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6841   001BEC  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6842   001BEE  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6843   001BF0  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6844   001BF2  2F70               	decfsz	??_powf& (0+255),f,b
  6845   001BF4  EFEF  F00D         	goto	u10135
  6846   001BF8                     u10137:
  6847   001BF8  0E81               	movlw	129
  6848   001BFA  0100               	movlb	0	; () banked
  6849   001BFC  2571               	addwf	(??_powf+1)& (0+255),w,b
  6850   001BFE  0101               	movlb	1	; () banked
  6851   001C00  6FA4               	movwf	powf@k& (0+255),b
  6852   001C02  0EFF               	movlw	255
  6853   001C04  0100               	movlb	0	; () banked
  6854   001C06  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6855   001C08  0101               	movlb	1	; () banked
  6856   001C0A  6FA5               	movwf	(powf@k+1)& (0+255),b
  6857   001C0C  0EFF               	movlw	255
  6858   001C0E  0100               	movlb	0	; () banked
  6859   001C10  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6860   001C12  0101               	movlb	1	; () banked
  6861   001C14  6FA6               	movwf	(powf@k+2)& (0+255),b
  6862   001C16  0EFF               	movlw	255
  6863   001C18  0100               	movlb	0	; () banked
  6864   001C1A  2174               	addwfc	(??_powf+4)& (0+255),w,b
  6865   001C1C  0101               	movlb	1	; () banked
  6866   001C1E  6FA7               	movwf	(powf@k+3)& (0+255),b
  6867   001C20                     
  6868                           ; BSR set to: 1
  6869   001C20  0E00               	movlw	0
  6870   001C22  6F88               	movwf	powf@n& (0+255),b
  6871   001C24  0E00               	movlw	0
  6872   001C26  6F89               	movwf	(powf@n+1)& (0+255),b
  6873   001C28  0E00               	movlw	0
  6874   001C2A  6F8A               	movwf	(powf@n+2)& (0+255),b
  6875   001C2C  0E00               	movlw	0
  6876   001C2E  6F8B               	movwf	(powf@n+3)& (0+255),b
  6877   001C30                     
  6878                           ; BSR set to: 1
  6879   001C30  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
  6880   001C32  EF27  F00E         	goto	u10141
  6881   001C36  0528               	decf	powf@i& (0+255),w,b
  6882   001C38  0E00               	movlw	0
  6883   001C3A  5929               	subwfb	(powf@i+1)& (0+255),w,b
  6884   001C3C  0E00               	movlw	0
  6885   001C3E  592A               	subwfb	(powf@i+2)& (0+255),w,b
  6886   001C40  0E3F               	movlw	63
  6887   001C42  592B               	subwfb	(powf@i+3)& (0+255),w,b
  6888   001C44  A0D8               	btfss	status,0,c
  6889   001C46  EF27  F00E         	goto	u10141
  6890   001C4A  EF29  F00E         	goto	u10140
  6891   001C4E                     u10141:
  6892   001C4E  EF25  F00F         	goto	l7746
  6893   001C52                     u10140:
  6894   001C52                     
  6895                           ; BSR set to: 1
  6896   001C52  C1A4  F070         	movff	powf@k,??_powf
  6897   001C56  0E01               	movlw	1
  6898   001C58  0100               	movlb	0	; () banked
  6899   001C5A  2770               	addwf	??_powf& (0+255),f,b
  6900   001C5C  0E00               	movlw	0
  6901   001C5E  6F71               	movwf	(??_powf+1)& (0+255),b
  6902   001C60  0E00               	movlw	0
  6903   001C62  6F72               	movwf	(??_powf+2)& (0+255),b
  6904   001C64  0E80               	movlw	128
  6905   001C66  6F73               	movwf	(??_powf+3)& (0+255),b
  6906   001C68  0E00               	movlw	0
  6907   001C6A  6F74               	movwf	(??_powf+4)& (0+255),b
  6908   001C6C                     u10155:
  6909   001C6C  6770               	tstfsz	??_powf& (0+255),b
  6910   001C6E  EF3B  F00E         	goto	u10156
  6911   001C72  EF43  F00E         	goto	u10157
  6912   001C76                     u10156:
  6913   001C76  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6914   001C78  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6915   001C7A  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6916   001C7C  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6917   001C7E  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6918   001C80  2F70               	decfsz	??_powf& (0+255),f,b
  6919   001C82  EF36  F00E         	goto	u10155
  6920   001C86                     u10157:
  6921   001C86  0101               	movlb	1	; () banked
  6922   001C88  51A8               	movf	powf@j& (0+255),w,b
  6923   001C8A  0100               	movlb	0	; () banked
  6924   001C8C  2571               	addwf	(??_powf+1)& (0+255),w,b
  6925   001C8E  0101               	movlb	1	; () banked
  6926   001C90  6F88               	movwf	powf@n& (0+255),b
  6927   001C92  51A9               	movf	(powf@j+1)& (0+255),w,b
  6928   001C94  0100               	movlb	0	; () banked
  6929   001C96  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6930   001C98  0101               	movlb	1	; () banked
  6931   001C9A  6F89               	movwf	(powf@n+1)& (0+255),b
  6932   001C9C  51AA               	movf	(powf@j+2)& (0+255),w,b
  6933   001C9E  0100               	movlb	0	; () banked
  6934   001CA0  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6935   001CA2  0101               	movlb	1	; () banked
  6936   001CA4  6F8A               	movwf	(powf@n+2)& (0+255),b
  6937   001CA6  51AB               	movf	(powf@j+3)& (0+255),w,b
  6938   001CA8  0100               	movlb	0	; () banked
  6939   001CAA  2174               	addwfc	(??_powf+4)& (0+255),w,b
  6940   001CAC  0101               	movlb	1	; () banked
  6941   001CAE  6F8B               	movwf	(powf@n+3)& (0+255),b
  6942   001CB0  0E81               	movlw	129
  6943   001CB2  0100               	movlb	0	; () banked
  6944   001CB4  6F70               	movwf	??_powf& (0+255),b
  6945   001CB6  0EFF               	movlw	255
  6946   001CB8  6F71               	movwf	(??_powf+1)& (0+255),b
  6947   001CBA  0EFF               	movlw	255
  6948   001CBC  6F72               	movwf	(??_powf+2)& (0+255),b
  6949   001CBE  0EFF               	movlw	255
  6950   001CC0  6F73               	movwf	(??_powf+3)& (0+255),b
  6951   001CC2  0E17               	movlw	23
  6952   001CC4  6F74               	movwf	(??_powf+4)& (0+255),b
  6953   001CC6  C188  F075         	movff	powf@n,??_powf+5
  6954   001CCA  C189  F076         	movff	powf@n+1,??_powf+6
  6955   001CCE  C18A  F077         	movff	powf@n+2,??_powf+7
  6956   001CD2  C18B  F078         	movff	powf@n+3,??_powf+8
  6957   001CD6                     u10165:
  6958   001CD6  6774               	tstfsz	(??_powf+4)& (0+255),b
  6959   001CD8  EF70  F00E         	goto	u10166
  6960   001CDC  EF78  F00E         	goto	u10167
  6961   001CE0                     u10166:
  6962   001CE0  3578               	rlcf	(??_powf+8)& (0+255),w,b
  6963   001CE2  3378               	rrcf	(??_powf+8)& (0+255),f,b
  6964   001CE4  3377               	rrcf	(??_powf+7)& (0+255),f,b
  6965   001CE6  3376               	rrcf	(??_powf+6)& (0+255),f,b
  6966   001CE8  3375               	rrcf	(??_powf+5)& (0+255),f,b
  6967   001CEA  2F74               	decfsz	(??_powf+4)& (0+255),f,b
  6968   001CEC  EF6B  F00E         	goto	u10165
  6969   001CF0                     u10167:
  6970   001CF0  0100               	movlb	0	; () banked
  6971   001CF2  5175               	movf	(??_powf+5)& (0+255),w,b
  6972   001CF4  2570               	addwf	??_powf& (0+255),w,b
  6973   001CF6  0101               	movlb	1	; () banked
  6974   001CF8  6FA4               	movwf	powf@k& (0+255),b
  6975   001CFA  0E00               	movlw	0
  6976   001CFC  0100               	movlb	0	; () banked
  6977   001CFE  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6978   001D00  0101               	movlb	1	; () banked
  6979   001D02  6FA5               	movwf	(powf@k+1)& (0+255),b
  6980   001D04  0E00               	movlw	0
  6981   001D06  0100               	movlb	0	; () banked
  6982   001D08  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6983   001D0A  0101               	movlb	1	; () banked
  6984   001D0C  6FA6               	movwf	(powf@k+2)& (0+255),b
  6985   001D0E  0E00               	movlw	0
  6986   001D10  0100               	movlb	0	; () banked
  6987   001D12  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6988   001D14  0101               	movlb	1	; () banked
  6989   001D16  6FA7               	movwf	(powf@k+3)& (0+255),b
  6990   001D18  C1A4  F070         	movff	powf@k,??_powf
  6991   001D1C  0EFF               	movlw	255
  6992   001D1E  0100               	movlb	0	; () banked
  6993   001D20  6F71               	movwf	(??_powf+1)& (0+255),b
  6994   001D22  0EFF               	movlw	255
  6995   001D24  6F72               	movwf	(??_powf+2)& (0+255),b
  6996   001D26  0E7F               	movlw	127
  6997   001D28  6F73               	movwf	(??_powf+3)& (0+255),b
  6998   001D2A  0E00               	movlw	0
  6999   001D2C  6F74               	movwf	(??_powf+4)& (0+255),b
  7000   001D2E                     u10175:
  7001   001D2E  6770               	tstfsz	??_powf& (0+255),b
  7002   001D30  EF9C  F00E         	goto	u10176
  7003   001D34  EFA4  F00E         	goto	u10177
  7004   001D38                     u10176:
  7005   001D38  3574               	rlcf	(??_powf+4)& (0+255),w,b
  7006   001D3A  3374               	rrcf	(??_powf+4)& (0+255),f,b
  7007   001D3C  3373               	rrcf	(??_powf+3)& (0+255),f,b
  7008   001D3E  3372               	rrcf	(??_powf+2)& (0+255),f,b
  7009   001D40  3371               	rrcf	(??_powf+1)& (0+255),f,b
  7010   001D42  2F70               	decfsz	??_powf& (0+255),f,b
  7011   001D44  EF97  F00E         	goto	u10175
  7012   001D48                     u10177:
  7013   001D48  0100               	movlb	0	; () banked
  7014   001D4A  1D71               	comf	(??_powf+1)& (0+255),w,b
  7015   001D4C  6F75               	movwf	(??_powf+5)& (0+255),b
  7016   001D4E  1D72               	comf	(??_powf+2)& (0+255),w,b
  7017   001D50  6F76               	movwf	(??_powf+6)& (0+255),b
  7018   001D52  1D73               	comf	(??_powf+3)& (0+255),w,b
  7019   001D54  6F77               	movwf	(??_powf+7)& (0+255),b
  7020   001D56  1D74               	comf	(??_powf+4)& (0+255),w,b
  7021   001D58  6F78               	movwf	(??_powf+8)& (0+255),b
  7022   001D5A  0101               	movlb	1	; () banked
  7023   001D5C  5188               	movf	powf@n& (0+255),w,b
  7024   001D5E  0100               	movlb	0	; () banked
  7025   001D60  1575               	andwf	(??_powf+5)& (0+255),w,b
  7026   001D62  0101               	movlb	1	; () banked
  7027   001D64  6FB0               	movwf	powf@t& (0+255),b
  7028   001D66  5189               	movf	(powf@n+1)& (0+255),w,b
  7029   001D68  0100               	movlb	0	; () banked
  7030   001D6A  1576               	andwf	(??_powf+6)& (0+255),w,b
  7031   001D6C  0101               	movlb	1	; () banked
  7032   001D6E  6FB1               	movwf	(powf@t+1)& (0+255),b
  7033   001D70  518A               	movf	(powf@n+2)& (0+255),w,b
  7034   001D72  0100               	movlb	0	; () banked
  7035   001D74  1577               	andwf	(??_powf+7)& (0+255),w,b
  7036   001D76  0101               	movlb	1	; () banked
  7037   001D78  6FB2               	movwf	(powf@t+2)& (0+255),b
  7038   001D7A  518B               	movf	(powf@n+3)& (0+255),w,b
  7039   001D7C  0100               	movlb	0	; () banked
  7040   001D7E  1578               	andwf	(??_powf+8)& (0+255),w,b
  7041   001D80  0101               	movlb	1	; () banked
  7042   001D82  6FB3               	movwf	(powf@t+3)& (0+255),b
  7043   001D84  51A4               	movf	powf@k& (0+255),w,b
  7044   001D86  0817               	sublw	23
  7045   001D88  0100               	movlb	0	; () banked
  7046   001D8A  6F70               	movwf	??_powf& (0+255),b
  7047   001D8C  0EFF               	movlw	255
  7048   001D8E  0101               	movlb	1	; () banked
  7049   001D90  1588               	andwf	powf@n& (0+255),w,b
  7050   001D92  0100               	movlb	0	; () banked
  7051   001D94  6F71               	movwf	(??_powf+1)& (0+255),b
  7052   001D96  0EFF               	movlw	255
  7053   001D98  0101               	movlb	1	; () banked
  7054   001D9A  1589               	andwf	(powf@n+1)& (0+255),w,b
  7055   001D9C  0100               	movlb	0	; () banked
  7056   001D9E  6F72               	movwf	(??_powf+2)& (0+255),b
  7057   001DA0  0E7F               	movlw	127
  7058   001DA2  0101               	movlb	1	; () banked
  7059   001DA4  158A               	andwf	(powf@n+2)& (0+255),w,b
  7060   001DA6  0100               	movlb	0	; () banked
  7061   001DA8  6F73               	movwf	(??_powf+3)& (0+255),b
  7062   001DAA  0E00               	movlw	0
  7063   001DAC  0101               	movlb	1	; () banked
  7064   001DAE  158B               	andwf	(powf@n+3)& (0+255),w,b
  7065   001DB0  0100               	movlb	0	; () banked
  7066   001DB2  6F74               	movwf	(??_powf+4)& (0+255),b
  7067   001DB4  0E00               	movlw	0
  7068   001DB6  1171               	iorwf	(??_powf+1)& (0+255),w,b
  7069   001DB8  6F75               	movwf	(??_powf+5)& (0+255),b
  7070   001DBA  0E00               	movlw	0
  7071   001DBC  1172               	iorwf	(??_powf+2)& (0+255),w,b
  7072   001DBE  6F76               	movwf	(??_powf+6)& (0+255),b
  7073   001DC0  0E80               	movlw	128
  7074   001DC2  1173               	iorwf	(??_powf+3)& (0+255),w,b
  7075   001DC4  6F77               	movwf	(??_powf+7)& (0+255),b
  7076   001DC6  0E00               	movlw	0
  7077   001DC8  1174               	iorwf	(??_powf+4)& (0+255),w,b
  7078   001DCA  6F78               	movwf	(??_powf+8)& (0+255),b
  7079   001DCC                     u10185:
  7080   001DCC  6770               	tstfsz	??_powf& (0+255),b
  7081   001DCE  EFEB  F00E         	goto	u10186
  7082   001DD2  EFF3  F00E         	goto	u10187
  7083   001DD6                     u10186:
  7084   001DD6  3578               	rlcf	(??_powf+8)& (0+255),w,b
  7085   001DD8  3378               	rrcf	(??_powf+8)& (0+255),f,b
  7086   001DDA  3377               	rrcf	(??_powf+7)& (0+255),f,b
  7087   001DDC  3376               	rrcf	(??_powf+6)& (0+255),f,b
  7088   001DDE  3375               	rrcf	(??_powf+5)& (0+255),f,b
  7089   001DE0  2F70               	decfsz	??_powf& (0+255),f,b
  7090   001DE2  EFE6  F00E         	goto	u10185
  7091   001DE6                     u10187:
  7092   001DE6  C075  F188         	movff	??_powf+5,powf@n
  7093   001DEA  C076  F189         	movff	??_powf+6,powf@n+1
  7094   001DEE  C077  F18A         	movff	??_powf+7,powf@n+2
  7095   001DF2  C078  F18B         	movff	??_powf+8,powf@n+3
  7096   001DF6  0101               	movlb	1	; () banked
  7097   001DF8  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  7098   001DFA  EF03  F00F         	goto	u10190
  7099   001DFE  EF01  F00F         	goto	u10191
  7100   001E02                     u10191:
  7101   001E02  EF0B  F00F         	goto	l7744
  7102   001E06                     u10190:
  7103   001E06                     
  7104                           ; BSR set to: 1
  7105   001E06  1F8B               	comf	(powf@n+3)& (0+255),f,b
  7106   001E08  1F8A               	comf	(powf@n+2)& (0+255),f,b
  7107   001E0A  1F89               	comf	(powf@n+1)& (0+255),f,b
  7108   001E0C  6D88               	negf	powf@n& (0+255),b
  7109   001E0E  0E00               	movlw	0
  7110   001E10  2389               	addwfc	(powf@n+1)& (0+255),f,b
  7111   001E12  238A               	addwfc	(powf@n+2)& (0+255),f,b
  7112   001E14  238B               	addwfc	(powf@n+3)& (0+255),f,b
  7113   001E16                     l7744:
  7114                           
  7115                           ; BSR set to: 1
  7116   001E16  C1A0  F051         	movff	powf@p_h,___flsub@b
  7117   001E1A  C1A1  F052         	movff	powf@p_h+1,___flsub@b+1
  7118   001E1E  C1A2  F053         	movff	powf@p_h+2,___flsub@b+2
  7119   001E22  C1A3  F054         	movff	powf@p_h+3,___flsub@b+3
  7120   001E26  C1B0  F055         	movff	powf@t,___flsub@a
  7121   001E2A  C1B1  F056         	movff	powf@t+1,___flsub@a+1
  7122   001E2E  C1B2  F057         	movff	powf@t+2,___flsub@a+2
  7123   001E32  C1B3  F058         	movff	powf@t+3,___flsub@a+3
  7124   001E36  ECA8  F036         	call	___flsub	;wreg free
  7125   001E3A  C051  F1A0         	movff	?___flsub,powf@p_h
  7126   001E3E  C052  F1A1         	movff	?___flsub+1,powf@p_h+1
  7127   001E42  C053  F1A2         	movff	?___flsub+2,powf@p_h+2
  7128   001E46  C054  F1A3         	movff	?___flsub+3,powf@p_h+3
  7129   001E4A                     l7746:
  7130   001E4A  C1A0  F041         	movff	powf@p_h,___fladd@b
  7131   001E4E  C1A1  F042         	movff	powf@p_h+1,___fladd@b+1
  7132   001E52  C1A2  F043         	movff	powf@p_h+2,___fladd@b+2
  7133   001E56  C1A3  F044         	movff	powf@p_h+3,___fladd@b+3
  7134   001E5A  C16C  F045         	movff	powf@p_l,___fladd@a
  7135   001E5E  C16D  F046         	movff	powf@p_l+1,___fladd@a+1
  7136   001E62  C16E  F047         	movff	powf@p_l+2,___fladd@a+2
  7137   001E66  C16F  F048         	movff	powf@p_l+3,___fladd@a+3
  7138   001E6A  EC0B  F01E         	call	___fladd	;wreg free
  7139   001E6E  C041  F1B0         	movff	?___fladd,powf@t
  7140   001E72  C042  F1B1         	movff	?___fladd+1,powf@t+1
  7141   001E76  C043  F1B2         	movff	?___fladd+2,powf@t+2
  7142   001E7A  C044  F1B3         	movff	?___fladd+3,powf@t+3
  7143   001E7E  C1B0  F198         	movff	powf@t,powf@is
  7144   001E82  C1B1  F199         	movff	powf@t+1,powf@is+1
  7145   001E86  C1B2  F19A         	movff	powf@t+2,powf@is+2
  7146   001E8A  C1B3  F19B         	movff	powf@t+3,powf@is+3
  7147   001E8E  0E00               	movlw	0
  7148   001E90  0101               	movlb	1	; () banked
  7149   001E92  1598               	andwf	powf@is& (0+255),w,b
  7150   001E94  6FB0               	movwf	powf@t& (0+255),b
  7151   001E96  0E80               	movlw	128
  7152   001E98  1599               	andwf	(powf@is+1)& (0+255),w,b
  7153   001E9A  6FB1               	movwf	(powf@t+1)& (0+255),b
  7154   001E9C  0EFF               	movlw	255
  7155   001E9E  159A               	andwf	(powf@is+2)& (0+255),w,b
  7156   001EA0  6FB2               	movwf	(powf@t+2)& (0+255),b
  7157   001EA2  0EFF               	movlw	255
  7158   001EA4  159B               	andwf	(powf@is+3)& (0+255),w,b
  7159   001EA6  6FB3               	movwf	(powf@t+3)& (0+255),b
  7160   001EA8                     
  7161                           ; BSR set to: 1
  7162   001EA8  C1B0  F00F         	movff	powf@t,___flmul@b
  7163   001EAC  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7164   001EB0  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7165   001EB4  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7166   001EB8  0E00               	movlw	0
  7167   001EBA  6E13               	movwf	___flmul@a^0,c
  7168   001EBC  0E72               	movlw	114
  7169   001EBE  6E14               	movwf	(___flmul@a+1)^0,c
  7170   001EC0  0E31               	movlw	49
  7171   001EC2  6E15               	movwf	(___flmul@a+2)^0,c
  7172   001EC4  0E3F               	movlw	63
  7173   001EC6  6E16               	movwf	(___flmul@a+3)^0,c
  7174   001EC8  EC66  F020         	call	___flmul	;wreg free
  7175   001ECC  C00F  F17C         	movff	?___flmul,powf@u
  7176   001ED0  C010  F17D         	movff	?___flmul+1,powf@u+1
  7177   001ED4  C011  F17E         	movff	?___flmul+2,powf@u+2
  7178   001ED8  C012  F17F         	movff	?___flmul+3,powf@u+3
  7179   001EDC  C1A0  F055         	movff	powf@p_h,___flsub@a
  7180   001EE0  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  7181   001EE4  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  7182   001EE8  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  7183   001EEC  C1B0  F051         	movff	powf@t,___flsub@b
  7184   001EF0  C1B1  F052         	movff	powf@t+1,___flsub@b+1
  7185   001EF4  C1B2  F053         	movff	powf@t+2,___flsub@b+2
  7186   001EF8  C1B3  F054         	movff	powf@t+3,___flsub@b+3
  7187   001EFC  ECA8  F036         	call	___flsub	;wreg free
  7188   001F00  C051  F19C         	movff	?___flsub,_powf$1844
  7189   001F04  C052  F19D         	movff	?___flsub+1,_powf$1844+1
  7190   001F08  C053  F19E         	movff	?___flsub+2,_powf$1844+2
  7191   001F0C  C054  F19F         	movff	?___flsub+3,_powf$1844+3
  7192   001F10  0E18               	movlw	24
  7193   001F12  6E13               	movwf	___flmul@a^0,c
  7194   001F14  0E72               	movlw	114
  7195   001F16  6E14               	movwf	(___flmul@a+1)^0,c
  7196   001F18  0E31               	movlw	49
  7197   001F1A  6E15               	movwf	(___flmul@a+2)^0,c
  7198   001F1C  0E3F               	movlw	63
  7199   001F1E  6E16               	movwf	(___flmul@a+3)^0,c
  7200   001F20  C19C  F055         	movff	_powf$1844,___flsub@a
  7201   001F24  C19D  F056         	movff	_powf$1844+1,___flsub@a+1
  7202   001F28  C19E  F057         	movff	_powf$1844+2,___flsub@a+2
  7203   001F2C  C19F  F058         	movff	_powf$1844+3,___flsub@a+3
  7204   001F30  C16C  F051         	movff	powf@p_l,___flsub@b
  7205   001F34  C16D  F052         	movff	powf@p_l+1,___flsub@b+1
  7206   001F38  C16E  F053         	movff	powf@p_l+2,___flsub@b+2
  7207   001F3C  C16F  F054         	movff	powf@p_l+3,___flsub@b+3
  7208   001F40  ECA8  F036         	call	___flsub	;wreg free
  7209   001F44  C051  F00F         	movff	?___flsub,___flmul@b
  7210   001F48  C052  F010         	movff	?___flsub+1,___flmul@b+1
  7211   001F4C  C053  F011         	movff	?___flsub+2,___flmul@b+2
  7212   001F50  C054  F012         	movff	?___flsub+3,___flmul@b+3
  7213   001F54  EC66  F020         	call	___flmul	;wreg free
  7214   001F58  C00F  F114         	movff	?___flmul,_powf$1854
  7215   001F5C  C010  F115         	movff	?___flmul+1,_powf$1854+1
  7216   001F60  C011  F116         	movff	?___flmul+2,_powf$1854+2
  7217   001F64  C012  F117         	movff	?___flmul+3,_powf$1854+3
  7218   001F68  C114  F041         	movff	_powf$1854,___fladd@b
  7219   001F6C  C115  F042         	movff	_powf$1854+1,___fladd@b+1
  7220   001F70  C116  F043         	movff	_powf$1854+2,___fladd@b+2
  7221   001F74  C117  F044         	movff	_powf$1854+3,___fladd@b+3
  7222   001F78  0E8C               	movlw	140
  7223   001F7A  6E13               	movwf	___flmul@a^0,c
  7224   001F7C  0EBE               	movlw	190
  7225   001F7E  6E14               	movwf	(___flmul@a+1)^0,c
  7226   001F80  0EBF               	movlw	191
  7227   001F82  6E15               	movwf	(___flmul@a+2)^0,c
  7228   001F84  0E35               	movlw	53
  7229   001F86  6E16               	movwf	(___flmul@a+3)^0,c
  7230   001F88  C1B0  F00F         	movff	powf@t,___flmul@b
  7231   001F8C  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7232   001F90  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7233   001F94  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7234   001F98  EC66  F020         	call	___flmul	;wreg free
  7235   001F9C  C00F  F045         	movff	?___flmul,___fladd@a
  7236   001FA0  C010  F046         	movff	?___flmul+1,___fladd@a+1
  7237   001FA4  C011  F047         	movff	?___flmul+2,___fladd@a+2
  7238   001FA8  C012  F048         	movff	?___flmul+3,___fladd@a+3
  7239   001FAC  EC0B  F01E         	call	___fladd	;wreg free
  7240   001FB0  C041  F180         	movff	?___fladd,powf@v
  7241   001FB4  C042  F181         	movff	?___fladd+1,powf@v+1
  7242   001FB8  C043  F182         	movff	?___fladd+2,powf@v+2
  7243   001FBC  C044  F183         	movff	?___fladd+3,powf@v+3
  7244   001FC0  C17C  F041         	movff	powf@u,___fladd@b
  7245   001FC4  C17D  F042         	movff	powf@u+1,___fladd@b+1
  7246   001FC8  C17E  F043         	movff	powf@u+2,___fladd@b+2
  7247   001FCC  C17F  F044         	movff	powf@u+3,___fladd@b+3
  7248   001FD0  C180  F045         	movff	powf@v,___fladd@a
  7249   001FD4  C181  F046         	movff	powf@v+1,___fladd@a+1
  7250   001FD8  C182  F047         	movff	powf@v+2,___fladd@a+2
  7251   001FDC  C183  F048         	movff	powf@v+3,___fladd@a+3
  7252   001FE0  EC0B  F01E         	call	___fladd	;wreg free
  7253   001FE4  C041  F1B4         	movff	?___fladd,powf@z
  7254   001FE8  C042  F1B5         	movff	?___fladd+1,powf@z+1
  7255   001FEC  C043  F1B6         	movff	?___fladd+2,powf@z+2
  7256   001FF0  C044  F1B7         	movff	?___fladd+3,powf@z+3
  7257   001FF4  C17C  F055         	movff	powf@u,___flsub@a
  7258   001FF8  C17D  F056         	movff	powf@u+1,___flsub@a+1
  7259   001FFC  C17E  F057         	movff	powf@u+2,___flsub@a+2
  7260   002000  C17F  F058         	movff	powf@u+3,___flsub@a+3
  7261   002004  C1B4  F051         	movff	powf@z,___flsub@b
  7262   002008  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  7263   00200C  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  7264   002010  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  7265   002014  ECA8  F036         	call	___flsub	;wreg free
  7266   002018  C051  F19C         	movff	?___flsub,_powf$1844
  7267   00201C  C052  F19D         	movff	?___flsub+1,_powf$1844+1
  7268   002020  C053  F19E         	movff	?___flsub+2,_powf$1844+2
  7269   002024  C054  F19F         	movff	?___flsub+3,_powf$1844+3
  7270   002028  C180  F051         	movff	powf@v,___flsub@b
  7271   00202C  C181  F052         	movff	powf@v+1,___flsub@b+1
  7272   002030  C182  F053         	movff	powf@v+2,___flsub@b+2
  7273   002034  C183  F054         	movff	powf@v+3,___flsub@b+3
  7274   002038  C19C  F055         	movff	_powf$1844,___flsub@a
  7275   00203C  C19D  F056         	movff	_powf$1844+1,___flsub@a+1
  7276   002040  C19E  F057         	movff	_powf$1844+2,___flsub@a+2
  7277   002044  C19F  F058         	movff	_powf$1844+3,___flsub@a+3
  7278   002048  ECA8  F036         	call	___flsub	;wreg free
  7279   00204C  C051  F144         	movff	?___flsub,powf@w
  7280   002050  C052  F145         	movff	?___flsub+1,powf@w+1
  7281   002054  C053  F146         	movff	?___flsub+2,powf@w+2
  7282   002058  C054  F147         	movff	?___flsub+3,powf@w+3
  7283   00205C  C1B4  F00F         	movff	powf@z,___flmul@b
  7284   002060  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7285   002064  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7286   002068  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7287   00206C  C1B4  F013         	movff	powf@z,___flmul@a
  7288   002070  C1B5  F014         	movff	powf@z+1,___flmul@a+1
  7289   002074  C1B6  F015         	movff	powf@z+2,___flmul@a+2
  7290   002078  C1B7  F016         	movff	powf@z+3,___flmul@a+3
  7291   00207C  EC66  F020         	call	___flmul	;wreg free
  7292   002080  C00F  F1B0         	movff	?___flmul,powf@t
  7293   002084  C010  F1B1         	movff	?___flmul+1,powf@t+1
  7294   002088  C011  F1B2         	movff	?___flmul+2,powf@t+2
  7295   00208C  C012  F1B3         	movff	?___flmul+3,powf@t+3
  7296   002090  0E0E               	movlw	14
  7297   002092  6E45               	movwf	___fladd@a^0,c
  7298   002094  0EEA               	movlw	234
  7299   002096  6E46               	movwf	(___fladd@a+1)^0,c
  7300   002098  0EDD               	movlw	221
  7301   00209A  6E47               	movwf	(___fladd@a+2)^0,c
  7302   00209C  0EB5               	movlw	181
  7303   00209E  6E48               	movwf	(___fladd@a+3)^0,c
  7304   0020A0  0E4C               	movlw	76
  7305   0020A2  6E13               	movwf	___flmul@a^0,c
  7306   0020A4  0EBB               	movlw	187
  7307   0020A6  6E14               	movwf	(___flmul@a+1)^0,c
  7308   0020A8  0E31               	movlw	49
  7309   0020AA  6E15               	movwf	(___flmul@a+2)^0,c
  7310   0020AC  0E33               	movlw	51
  7311   0020AE  6E16               	movwf	(___flmul@a+3)^0,c
  7312   0020B0  C1B0  F00F         	movff	powf@t,___flmul@b
  7313   0020B4  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7314   0020B8  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7315   0020BC  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7316   0020C0  EC66  F020         	call	___flmul	;wreg free
  7317   0020C4  C00F  F041         	movff	?___flmul,___fladd@b
  7318   0020C8  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7319   0020CC  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7320   0020D0  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7321   0020D4  EC0B  F01E         	call	___fladd	;wreg free
  7322   0020D8  C041  F148         	movff	?___fladd,_powf$1841
  7323   0020DC  C042  F149         	movff	?___fladd+1,_powf$1841+1
  7324   0020E0  C043  F14A         	movff	?___fladd+2,_powf$1841+2
  7325   0020E4  C044  F14B         	movff	?___fladd+3,_powf$1841+3
  7326   0020E8  0E55               	movlw	85
  7327   0020EA  6E45               	movwf	___fladd@a^0,c
  7328   0020EC  0EB3               	movlw	179
  7329   0020EE  6E46               	movwf	(___fladd@a+1)^0,c
  7330   0020F0  0E8A               	movlw	138
  7331   0020F2  6E47               	movwf	(___fladd@a+2)^0,c
  7332   0020F4  0E38               	movlw	56
  7333   0020F6  6E48               	movwf	(___fladd@a+3)^0,c
  7334   0020F8  C1B0  F013         	movff	powf@t,___flmul@a
  7335   0020FC  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7336   002100  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7337   002104  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7338   002108  C148  F00F         	movff	_powf$1841,___flmul@b
  7339   00210C  C149  F010         	movff	_powf$1841+1,___flmul@b+1
  7340   002110  C14A  F011         	movff	_powf$1841+2,___flmul@b+2
  7341   002114  C14B  F012         	movff	_powf$1841+3,___flmul@b+3
  7342   002118  EC66  F020         	call	___flmul	;wreg free
  7343   00211C  C00F  F041         	movff	?___flmul,___fladd@b
  7344   002120  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7345   002124  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7346   002128  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7347   00212C  EC0B  F01E         	call	___fladd	;wreg free
  7348   002130  C041  F158         	movff	?___fladd,_powf$1842
  7349   002134  C042  F159         	movff	?___fladd+1,_powf$1842+1
  7350   002138  C043  F15A         	movff	?___fladd+2,_powf$1842+2
  7351   00213C  C044  F15B         	movff	?___fladd+3,_powf$1842+3
  7352   002140  0E61               	movlw	97
  7353   002142  6E45               	movwf	___fladd@a^0,c
  7354   002144  0E0B               	movlw	11
  7355   002146  6E46               	movwf	(___fladd@a+1)^0,c
  7356   002148  0E36               	movlw	54
  7357   00214A  6E47               	movwf	(___fladd@a+2)^0,c
  7358   00214C  0EBB               	movlw	187
  7359   00214E  6E48               	movwf	(___fladd@a+3)^0,c
  7360   002150  C1B0  F013         	movff	powf@t,___flmul@a
  7361   002154  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7362   002158  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7363   00215C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7364   002160  C158  F00F         	movff	_powf$1842,___flmul@b
  7365   002164  C159  F010         	movff	_powf$1842+1,___flmul@b+1
  7366   002168  C15A  F011         	movff	_powf$1842+2,___flmul@b+2
  7367   00216C  C15B  F012         	movff	_powf$1842+3,___flmul@b+3
  7368   002170  EC66  F020         	call	___flmul	;wreg free
  7369   002174  C00F  F041         	movff	?___flmul,___fladd@b
  7370   002178  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7371   00217C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7372   002180  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7373   002184  EC0B  F01E         	call	___fladd	;wreg free
  7374   002188  C041  F14C         	movff	?___fladd,_powf$1843
  7375   00218C  C042  F14D         	movff	?___fladd+1,_powf$1843+1
  7376   002190  C043  F14E         	movff	?___fladd+2,_powf$1843+2
  7377   002194  C044  F14F         	movff	?___fladd+3,_powf$1843+3
  7378   002198  0EAB               	movlw	171
  7379   00219A  6E45               	movwf	___fladd@a^0,c
  7380   00219C  0EAA               	movlw	170
  7381   00219E  6E46               	movwf	(___fladd@a+1)^0,c
  7382   0021A0  0E2A               	movlw	42
  7383   0021A2  6E47               	movwf	(___fladd@a+2)^0,c
  7384   0021A4  0E3E               	movlw	62
  7385   0021A6  6E48               	movwf	(___fladd@a+3)^0,c
  7386   0021A8  C1B0  F013         	movff	powf@t,___flmul@a
  7387   0021AC  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7388   0021B0  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7389   0021B4  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7390   0021B8  C14C  F00F         	movff	_powf$1843,___flmul@b
  7391   0021BC  C14D  F010         	movff	_powf$1843+1,___flmul@b+1
  7392   0021C0  C14E  F011         	movff	_powf$1843+2,___flmul@b+2
  7393   0021C4  C14F  F012         	movff	_powf$1843+3,___flmul@b+3
  7394   0021C8  EC66  F020         	call	___flmul	;wreg free
  7395   0021CC  C00F  F041         	movff	?___flmul,___fladd@b
  7396   0021D0  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7397   0021D4  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7398   0021D8  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7399   0021DC  EC0B  F01E         	call	___fladd	;wreg free
  7400   0021E0  C041  F138         	movff	?___fladd,_powf$1845
  7401   0021E4  C042  F139         	movff	?___fladd+1,_powf$1845+1
  7402   0021E8  C043  F13A         	movff	?___fladd+2,_powf$1845+2
  7403   0021EC  C044  F13B         	movff	?___fladd+3,_powf$1845+3
  7404   0021F0  C1B4  F051         	movff	powf@z,___flsub@b
  7405   0021F4  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  7406   0021F8  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  7407   0021FC  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  7408   002200  C1B0  F013         	movff	powf@t,___flmul@a
  7409   002204  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7410   002208  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7411   00220C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7412   002210  C138  F00F         	movff	_powf$1845,___flmul@b
  7413   002214  C139  F010         	movff	_powf$1845+1,___flmul@b+1
  7414   002218  C13A  F011         	movff	_powf$1845+2,___flmul@b+2
  7415   00221C  C13B  F012         	movff	_powf$1845+3,___flmul@b+3
  7416   002220  EC66  F020         	call	___flmul	;wreg free
  7417   002224  C00F  F055         	movff	?___flmul,___flsub@a
  7418   002228  C010  F056         	movff	?___flmul+1,___flsub@a+1
  7419   00222C  C011  F057         	movff	?___flmul+2,___flsub@a+2
  7420   002230  C012  F058         	movff	?___flmul+3,___flsub@a+3
  7421   002234  ECA8  F036         	call	___flsub	;wreg free
  7422   002238  C051  F18C         	movff	?___flsub,powf@t1
  7423   00223C  C052  F18D         	movff	?___flsub+1,powf@t1+1
  7424   002240  C053  F18E         	movff	?___flsub+2,powf@t1+2
  7425   002244  C054  F18F         	movff	?___flsub+3,powf@t1+3
  7426   002248  0E00               	movlw	0
  7427   00224A  6E45               	movwf	___fladd@a^0,c
  7428   00224C  0E00               	movlw	0
  7429   00224E  6E46               	movwf	(___fladd@a+1)^0,c
  7430   002250  0E00               	movlw	0
  7431   002252  6E47               	movwf	(___fladd@a+2)^0,c
  7432   002254  0EC0               	movlw	192
  7433   002256  6E48               	movwf	(___fladd@a+3)^0,c
  7434   002258  C18C  F041         	movff	powf@t1,___fladd@b
  7435   00225C  C18D  F042         	movff	powf@t1+1,___fladd@b+1
  7436   002260  C18E  F043         	movff	powf@t1+2,___fladd@b+2
  7437   002264  C18F  F044         	movff	powf@t1+3,___fladd@b+3
  7438   002268  EC0B  F01E         	call	___fladd	;wreg free
  7439   00226C  C041  F02C         	movff	?___fladd,___fldiv@a
  7440   002270  C042  F02D         	movff	?___fladd+1,___fldiv@a+1
  7441   002274  C043  F02E         	movff	?___fladd+2,___fldiv@a+2
  7442   002278  C044  F02F         	movff	?___fladd+3,___fldiv@a+3
  7443   00227C  C18C  F013         	movff	powf@t1,___flmul@a
  7444   002280  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  7445   002284  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  7446   002288  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  7447   00228C  C1B4  F00F         	movff	powf@z,___flmul@b
  7448   002290  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7449   002294  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7450   002298  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7451   00229C  EC66  F020         	call	___flmul	;wreg free
  7452   0022A0  C00F  F028         	movff	?___flmul,___fldiv@b
  7453   0022A4  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  7454   0022A8  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  7455   0022AC  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  7456   0022B0  EC68  F024         	call	___fldiv	;wreg free
  7457   0022B4  C028  F13C         	movff	?___fldiv,_powf$1849
  7458   0022B8  C029  F13D         	movff	?___fldiv+1,_powf$1849+1
  7459   0022BC  C02A  F13E         	movff	?___fldiv+2,_powf$1849+2
  7460   0022C0  C02B  F13F         	movff	?___fldiv+3,_powf$1849+3
  7461   0022C4  C144  F045         	movff	powf@w,___fladd@a
  7462   0022C8  C145  F046         	movff	powf@w+1,___fladd@a+1
  7463   0022CC  C146  F047         	movff	powf@w+2,___fladd@a+2
  7464   0022D0  C147  F048         	movff	powf@w+3,___fladd@a+3
  7465   0022D4  C144  F013         	movff	powf@w,___flmul@a
  7466   0022D8  C145  F014         	movff	powf@w+1,___flmul@a+1
  7467   0022DC  C146  F015         	movff	powf@w+2,___flmul@a+2
  7468   0022E0  C147  F016         	movff	powf@w+3,___flmul@a+3
  7469   0022E4  C1B4  F00F         	movff	powf@z,___flmul@b
  7470   0022E8  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7471   0022EC  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7472   0022F0  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7473   0022F4  EC66  F020         	call	___flmul	;wreg free
  7474   0022F8  C00F  F041         	movff	?___flmul,___fladd@b
  7475   0022FC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7476   002300  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7477   002304  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7478   002308  EC0B  F01E         	call	___fladd	;wreg free
  7479   00230C  C041  F118         	movff	?___fladd,_powf$1855
  7480   002310  C042  F119         	movff	?___fladd+1,_powf$1855+1
  7481   002314  C043  F11A         	movff	?___fladd+2,_powf$1855+2
  7482   002318  C044  F11B         	movff	?___fladd+3,_powf$1855+3
  7483   00231C  C13C  F051         	movff	_powf$1849,___flsub@b
  7484   002320  C13D  F052         	movff	_powf$1849+1,___flsub@b+1
  7485   002324  C13E  F053         	movff	_powf$1849+2,___flsub@b+2
  7486   002328  C13F  F054         	movff	_powf$1849+3,___flsub@b+3
  7487   00232C  C118  F055         	movff	_powf$1855,___flsub@a
  7488   002330  C119  F056         	movff	_powf$1855+1,___flsub@a+1
  7489   002334  C11A  F057         	movff	_powf$1855+2,___flsub@a+2
  7490   002338  C11B  F058         	movff	_powf$1855+3,___flsub@a+3
  7491   00233C  ECA8  F036         	call	___flsub	;wreg free
  7492   002340  C051  F150         	movff	?___flsub,powf@r
  7493   002344  C052  F151         	movff	?___flsub+1,powf@r+1
  7494   002348  C053  F152         	movff	?___flsub+2,powf@r+2
  7495   00234C  C054  F153         	movff	?___flsub+3,powf@r+3
  7496   002350  C1B4  F055         	movff	powf@z,___flsub@a
  7497   002354  C1B5  F056         	movff	powf@z+1,___flsub@a+1
  7498   002358  C1B6  F057         	movff	powf@z+2,___flsub@a+2
  7499   00235C  C1B7  F058         	movff	powf@z+3,___flsub@a+3
  7500   002360  C150  F051         	movff	powf@r,___flsub@b
  7501   002364  C151  F052         	movff	powf@r+1,___flsub@b+1
  7502   002368  C152  F053         	movff	powf@r+2,___flsub@b+2
  7503   00236C  C153  F054         	movff	powf@r+3,___flsub@b+3
  7504   002370  ECA8  F036         	call	___flsub	;wreg free
  7505   002374  C051  F19C         	movff	?___flsub,_powf$1844
  7506   002378  C052  F19D         	movff	?___flsub+1,_powf$1844+1
  7507   00237C  C053  F19E         	movff	?___flsub+2,_powf$1844+2
  7508   002380  C054  F19F         	movff	?___flsub+3,_powf$1844+3
  7509   002384  0E00               	movlw	0
  7510   002386  6E51               	movwf	___flsub@b^0,c
  7511   002388  0E00               	movlw	0
  7512   00238A  6E52               	movwf	(___flsub@b+1)^0,c
  7513   00238C  0E80               	movlw	128
  7514   00238E  6E53               	movwf	(___flsub@b+2)^0,c
  7515   002390  0E3F               	movlw	63
  7516   002392  6E54               	movwf	(___flsub@b+3)^0,c
  7517   002394  C19C  F055         	movff	_powf$1844,___flsub@a
  7518   002398  C19D  F056         	movff	_powf$1844+1,___flsub@a+1
  7519   00239C  C19E  F057         	movff	_powf$1844+2,___flsub@a+2
  7520   0023A0  C19F  F058         	movff	_powf$1844+3,___flsub@a+3
  7521   0023A4  ECA8  F036         	call	___flsub	;wreg free
  7522   0023A8  C051  F1B4         	movff	?___flsub,powf@z
  7523   0023AC  C052  F1B5         	movff	?___flsub+1,powf@z+1
  7524   0023B0  C053  F1B6         	movff	?___flsub+2,powf@z+2
  7525   0023B4  C054  F1B7         	movff	?___flsub+3,powf@z+3
  7526   0023B8  C1B4  F1A8         	movff	powf@z,powf@j
  7527   0023BC  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  7528   0023C0  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  7529   0023C4  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  7530   0023C8  C188  F070         	movff	powf@n,??_powf
  7531   0023CC  C189  F071         	movff	powf@n+1,??_powf+1
  7532   0023D0  C18A  F072         	movff	powf@n+2,??_powf+2
  7533   0023D4  C18B  F073         	movff	powf@n+3,??_powf+3
  7534   0023D8  0E17               	movlw	23
  7535   0023DA                     u10205:
  7536   0023DA  90D8               	bcf	status,0,c
  7537   0023DC  0100               	movlb	0	; () banked
  7538   0023DE  3770               	rlcf	??_powf& (0+255),f,b
  7539   0023E0  3771               	rlcf	(??_powf+1)& (0+255),f,b
  7540   0023E2  3772               	rlcf	(??_powf+2)& (0+255),f,b
  7541   0023E4  3773               	rlcf	(??_powf+3)& (0+255),f,b
  7542   0023E6  2EE8               	decfsz	wreg,f,c
  7543   0023E8  EFED  F011         	goto	u10205
  7544   0023EC  5170               	movf	??_powf& (0+255),w,b
  7545   0023EE  0101               	movlb	1	; () banked
  7546   0023F0  27A8               	addwf	powf@j& (0+255),f,b
  7547   0023F2  0100               	movlb	0	; () banked
  7548   0023F4  5171               	movf	(??_powf+1)& (0+255),w,b
  7549   0023F6  0101               	movlb	1	; () banked
  7550   0023F8  23A9               	addwfc	(powf@j+1)& (0+255),f,b
  7551   0023FA  0100               	movlb	0	; () banked
  7552   0023FC  5172               	movf	(??_powf+2)& (0+255),w,b
  7553   0023FE  0101               	movlb	1	; () banked
  7554   002400  23AA               	addwfc	(powf@j+2)& (0+255),f,b
  7555   002402  0100               	movlb	0	; () banked
  7556   002404  5173               	movf	(??_powf+3)& (0+255),w,b
  7557   002406  0101               	movlb	1	; () banked
  7558   002408  23AB               	addwfc	(powf@j+3)& (0+255),f,b
  7559   00240A                     
  7560                           ; BSR set to: 1
  7561   00240A  0E17               	movlw	23
  7562   00240C  0100               	movlb	0	; () banked
  7563   00240E  6F70               	movwf	??_powf& (0+255),b
  7564   002410  C1A8  F071         	movff	powf@j,??_powf+1
  7565   002414  C1A9  F072         	movff	powf@j+1,??_powf+2
  7566   002418  C1AA  F073         	movff	powf@j+2,??_powf+3
  7567   00241C  C1AB  F074         	movff	powf@j+3,??_powf+4
  7568   002420                     u10215:
  7569   002420  6770               	tstfsz	??_powf& (0+255),b
  7570   002422  EF15  F012         	goto	u10216
  7571   002426  EF1D  F012         	goto	u10217
  7572   00242A                     u10216:
  7573   00242A  3574               	rlcf	(??_powf+4)& (0+255),w,b
  7574   00242C  3374               	rrcf	(??_powf+4)& (0+255),f,b
  7575   00242E  3373               	rrcf	(??_powf+3)& (0+255),f,b
  7576   002430  3372               	rrcf	(??_powf+2)& (0+255),f,b
  7577   002432  3371               	rrcf	(??_powf+1)& (0+255),f,b
  7578   002434  2F70               	decfsz	??_powf& (0+255),f,b
  7579   002436  EF10  F012         	goto	u10215
  7580   00243A                     u10217:
  7581   00243A  0100               	movlb	0	; () banked
  7582   00243C  BF74               	btfsc	(??_powf+4)& (0+255),7,b
  7583   00243E  EF2D  F012         	goto	u10220
  7584   002442  5174               	movf	(??_powf+4)& (0+255),w,b
  7585   002444  1173               	iorwf	(??_powf+3)& (0+255),w,b
  7586   002446  1172               	iorwf	(??_powf+2)& (0+255),w,b
  7587   002448  E106               	bnz	u10221
  7588   00244A  0571               	decf	(??_powf+1)& (0+255),w,b
  7589   00244C  B0D8               	btfsc	status,0,c
  7590   00244E  EF2B  F012         	goto	u10221
  7591   002452  EF2D  F012         	goto	u10220
  7592   002456                     u10221:
  7593   002456  EF45  F012         	goto	l1343
  7594   00245A                     u10220:
  7595   00245A                     
  7596                           ; BSR set to: 0
  7597   00245A  C1B4  F028         	movff	powf@z,scalbnf@x
  7598   00245E  C1B5  F029         	movff	powf@z+1,scalbnf@x+1
  7599   002462  C1B6  F02A         	movff	powf@z+2,scalbnf@x+2
  7600   002466  C1B7  F02B         	movff	powf@z+3,scalbnf@x+3
  7601   00246A  C188  F02C         	movff	powf@n,scalbnf@n
  7602   00246E  C189  F02D         	movff	powf@n+1,scalbnf@n+1
  7603   002472  EC38  F029         	call	_scalbnf	;wreg free
  7604   002476  C028  F1B4         	movff	?_scalbnf,powf@z
  7605   00247A  C029  F1B5         	movff	?_scalbnf+1,powf@z+1
  7606   00247E  C02A  F1B6         	movff	?_scalbnf+2,powf@z+2
  7607   002482  C02B  F1B7         	movff	?_scalbnf+3,powf@z+3
  7608   002486  EF4D  F012         	goto	l7796
  7609   00248A                     l1343:
  7610                           
  7611                           ; BSR set to: 0
  7612   00248A  C1A8  F1B4         	movff	powf@j,powf@z
  7613   00248E  C1A9  F1B5         	movff	powf@j+1,powf@z+1
  7614   002492  C1AA  F1B6         	movff	powf@j+2,powf@z+2
  7615   002496  C1AB  F1B7         	movff	powf@j+3,powf@z+3
  7616   00249A                     l7796:
  7617   00249A  0101               	movlb	1	; () banked
  7618   00249C  51B4               	movf	powf@z& (0+255),w,b
  7619   00249E  11B5               	iorwf	(powf@z+1)& (0+255),w,b
  7620   0024A0  11B6               	iorwf	(powf@z+2)& (0+255),w,b
  7621   0024A2  11B7               	iorwf	(powf@z+3)& (0+255),w,b
  7622   0024A4  B4D8               	btfsc	status,2,c
  7623   0024A6  EF57  F012         	goto	u10231
  7624   0024AA  EF59  F012         	goto	u10230
  7625   0024AE                     u10231:
  7626   0024AE  EF3F  F003         	goto	l7482
  7627   0024B2                     u10230:
  7628   0024B2                     
  7629                           ; BSR set to: 1
  7630   0024B2  5164               	movf	powf@sn& (0+255),w,b
  7631   0024B4  1BB4               	xorwf	powf@z& (0+255),f,b
  7632   0024B6  5165               	movf	(powf@sn+1)& (0+255),w,b
  7633   0024B8  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
  7634   0024BA  5166               	movf	(powf@sn+2)& (0+255),w,b
  7635   0024BC  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
  7636   0024BE  5167               	movf	(powf@sn+3)& (0+255),w,b
  7637   0024C0  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
  7638   0024C2  EF3F  F003         	goto	l7482
  7639   0024C6                     l1277:
  7640   0024C6  0012               	return		;funcret
  7641   0024C8                     __end_of_powf:
  7642                           	callstack 0
  7643                           
  7644 ;; *************** function _sqrtf *****************
  7645 ;; Defined at:
  7646 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sqrtf.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  x               4    0[COMRAM] float 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;  ix              4   33[COMRAM] struct .
  7651 ;;  r               4   29[COMRAM] unsigned long 
  7652 ;;  m               4   25[COMRAM] long 
  7653 ;;  t               4   21[COMRAM] long 
  7654 ;;  q               4   17[COMRAM] long 
  7655 ;;  i               4   13[COMRAM] long 
  7656 ;;  s               4    9[COMRAM] long 
  7657 ;;  z               4    0        float 
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  4    0[COMRAM] float 
  7660 ;; Registers used:
  7661 ;;		wreg, status,2, status,0
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7667 ;;      Params:         4       0       0       0       0       0       0       0       0
  7668 ;;      Locals:        28       0       0       0       0       0       0       0       0
  7669 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7670 ;;      Totals:        37       0       0       0       0       0       0       0       0
  7671 ;;Total ram usage:       37 bytes
  7672 ;; Hardware stack levels used: 1
  7673 ;; Hardware stack levels required when called: 1
  7674 ;; This function calls:
  7675 ;;		Nothing
  7676 ;; This function is called by:
  7677 ;;		_powf
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           	psect	text7
  7682   0044F2                     __ptext7:
  7683                           	callstack 0
  7684   0044F2                     _sqrtf:
  7685                           	callstack 27
  7686   0044F2  C001  F022         	movff	sqrtf@x,sqrtf@ix
  7687   0044F6  C002  F023         	movff	sqrtf@x+1,sqrtf@ix+1
  7688   0044FA  C003  F024         	movff	sqrtf@x+2,sqrtf@ix+2
  7689   0044FE  C004  F025         	movff	sqrtf@x+3,sqrtf@ix+3
  7690   004502  0E00               	movlw	0
  7691   004504  1422               	andwf	sqrtf@ix^0,w,c
  7692   004506  6E05               	movwf	??_sqrtf^0,c
  7693   004508  0E00               	movlw	0
  7694   00450A  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7695   00450C  6E06               	movwf	(??_sqrtf+1)^0,c
  7696   00450E  0E80               	movlw	128
  7697   004510  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7698   004512  6E07               	movwf	(??_sqrtf+2)^0,c
  7699   004514  0E7F               	movlw	127
  7700   004516  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7701   004518  6E08               	movwf	(??_sqrtf+3)^0,c
  7702   00451A  0E80               	movlw	128
  7703   00451C  1807               	xorwf	(??_sqrtf+2)^0,w,c
  7704   00451E  E109               	bnz	u9401
  7705   004520  0E7F               	movlw	127
  7706   004522  1808               	xorwf	(??_sqrtf+3)^0,w,c
  7707   004524  1005               	iorwf	??_sqrtf^0,w,c
  7708   004526  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7709   004528  A4D8               	btfss	status,2,c
  7710   00452A  EF99  F022         	goto	u9401
  7711   00452E  EF9B  F022         	goto	u9400
  7712   004532                     u9401:
  7713   004532  EFCB  F022         	goto	l7248
  7714   004536                     u9400:
  7715   004536  0EFF               	movlw	255
  7716   004538  1422               	andwf	sqrtf@ix^0,w,c
  7717   00453A  6E05               	movwf	??_sqrtf^0,c
  7718   00453C  0EFF               	movlw	255
  7719   00453E  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7720   004540  6E06               	movwf	(??_sqrtf+1)^0,c
  7721   004542  0E7F               	movlw	127
  7722   004544  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7723   004546  6E07               	movwf	(??_sqrtf+2)^0,c
  7724   004548  0E00               	movlw	0
  7725   00454A  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7726   00454C  6E08               	movwf	(??_sqrtf+3)^0,c
  7727   00454E  5005               	movf	??_sqrtf^0,w,c
  7728   004550  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7729   004552  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7730   004554  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7731   004556  A4D8               	btfss	status,2,c
  7732   004558  EFB0  F022         	goto	u9411
  7733   00455C  EFB2  F022         	goto	u9410
  7734   004560                     u9411:
  7735   004560  EFB9  F022         	goto	l7242
  7736   004564                     u9410:
  7737   004564  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7738   004566  EFB9  F022         	goto	u9420
  7739   00456A  EFB7  F022         	goto	u9421
  7740   00456E                     u9421:
  7741   00456E  EFC1  F022         	goto	l7244
  7742   004572                     u9420:
  7743   004572                     l7242:
  7744   004572  0EFF               	movlw	255
  7745   004574  1222               	iorwf	sqrtf@ix^0,f,c
  7746   004576  0EFF               	movlw	255
  7747   004578  1223               	iorwf	(sqrtf@ix+1)^0,f,c
  7748   00457A  0E7F               	movlw	127
  7749   00457C  1224               	iorwf	(sqrtf@ix+2)^0,f,c
  7750   00457E  0E00               	movlw	0
  7751   004580  1225               	iorwf	(sqrtf@ix+3)^0,f,c
  7752   004582                     l7244:
  7753   004582  C022  F001         	movff	sqrtf@ix,?_sqrtf
  7754   004586  C023  F002         	movff	sqrtf@ix+1,?_sqrtf+1
  7755   00458A  C024  F003         	movff	sqrtf@ix+2,?_sqrtf+2
  7756   00458E  C025  F004         	movff	sqrtf@ix+3,?_sqrtf+3
  7757   004592  EF67  F024         	goto	l1369
  7758   004596                     l7248:
  7759   004596  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7760   004598  EFDA  F022         	goto	u9430
  7761   00459C  5025               	movf	(sqrtf@ix+3)^0,w,c
  7762   00459E  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7763   0045A0  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7764   0045A2  E106               	bnz	u9431
  7765   0045A4  0422               	decf	sqrtf@ix^0,w,c
  7766   0045A6  B0D8               	btfsc	status,0,c
  7767   0045A8  EFD8  F022         	goto	u9431
  7768   0045AC  EFDA  F022         	goto	u9430
  7769   0045B0                     u9431:
  7770   0045B0  EF11  F023         	goto	l7264
  7771   0045B4                     u9430:
  7772   0045B4  0EFF               	movlw	255
  7773   0045B6  1422               	andwf	sqrtf@ix^0,w,c
  7774   0045B8  6E05               	movwf	??_sqrtf^0,c
  7775   0045BA  0EFF               	movlw	255
  7776   0045BC  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7777   0045BE  6E06               	movwf	(??_sqrtf+1)^0,c
  7778   0045C0  0EFF               	movlw	255
  7779   0045C2  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7780   0045C4  6E07               	movwf	(??_sqrtf+2)^0,c
  7781   0045C6  0E7F               	movlw	127
  7782   0045C8  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7783   0045CA  6E08               	movwf	(??_sqrtf+3)^0,c
  7784   0045CC  5005               	movf	??_sqrtf^0,w,c
  7785   0045CE  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7786   0045D0  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7787   0045D2  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7788   0045D4  A4D8               	btfss	status,2,c
  7789   0045D6  EFEF  F022         	goto	u9441
  7790   0045DA  EFF1  F022         	goto	u9440
  7791   0045DE                     u9441:
  7792   0045DE  EFFB  F022         	goto	l7256
  7793   0045E2                     u9440:
  7794   0045E2  0E00               	movlw	0
  7795   0045E4  6E01               	movwf	?_sqrtf^0,c
  7796   0045E6  0E00               	movlw	0
  7797   0045E8  6E02               	movwf	(?_sqrtf+1)^0,c
  7798   0045EA  0E00               	movlw	0
  7799   0045EC  6E03               	movwf	(?_sqrtf+2)^0,c
  7800   0045EE  0E00               	movlw	0
  7801   0045F0  6E04               	movwf	(?_sqrtf+3)^0,c
  7802   0045F2  EF67  F024         	goto	l1369
  7803   0045F6                     l7256:
  7804   0045F6  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7805   0045F8  EF02  F023         	goto	u9450
  7806   0045FC  EF00  F023         	goto	u9451
  7807   004600                     u9451:
  7808   004600  EF11  F023         	goto	l7264
  7809   004604                     u9450:
  7810   004604  0E00               	movlw	0
  7811   004606  0103               	movlb	3	; () banked
  7812   004608  6F69               	movwf	(_errno+1)& (0+255),b
  7813   00460A  0E21               	movlw	33
  7814   00460C  6F68               	movwf	_errno& (0+255),b
  7815   00460E  0EFF               	movlw	255
  7816   004610  6E22               	movwf	sqrtf@ix^0,c
  7817   004612  0EFF               	movlw	255
  7818   004614  6E23               	movwf	(sqrtf@ix+1)^0,c
  7819   004616  0EFF               	movlw	255
  7820   004618  6E24               	movwf	(sqrtf@ix+2)^0,c
  7821   00461A  0E7F               	movlw	127
  7822   00461C  6E25               	movwf	(sqrtf@ix+3)^0,c
  7823   00461E  EFC1  F022         	goto	l7244
  7824   004622                     l7264:
  7825   004622  0E17               	movlw	23
  7826   004624  6E05               	movwf	??_sqrtf^0,c
  7827   004626  C022  F006         	movff	sqrtf@ix,??_sqrtf+1
  7828   00462A  C023  F007         	movff	sqrtf@ix+1,??_sqrtf+2
  7829   00462E  C024  F008         	movff	sqrtf@ix+2,??_sqrtf+3
  7830   004632  C025  F009         	movff	sqrtf@ix+3,??_sqrtf+4
  7831   004636                     u9465:
  7832   004636  6605               	tstfsz	??_sqrtf^0,c
  7833   004638  EF20  F023         	goto	u9466
  7834   00463C  EF28  F023         	goto	u9467
  7835   004640                     u9466:
  7836   004640  3409               	rlcf	(??_sqrtf+4)^0,w,c
  7837   004642  3209               	rrcf	(??_sqrtf+4)^0,f,c
  7838   004644  3208               	rrcf	(??_sqrtf+3)^0,f,c
  7839   004646  3207               	rrcf	(??_sqrtf+2)^0,f,c
  7840   004648  3206               	rrcf	(??_sqrtf+1)^0,f,c
  7841   00464A  2E05               	decfsz	??_sqrtf^0,f,c
  7842   00464C  EF1B  F023         	goto	u9465
  7843   004650                     u9467:
  7844   004650  C006  F01A         	movff	??_sqrtf+1,sqrtf@m
  7845   004654  C007  F01B         	movff	??_sqrtf+2,sqrtf@m+1
  7846   004658  C008  F01C         	movff	??_sqrtf+3,sqrtf@m+2
  7847   00465C  C009  F01D         	movff	??_sqrtf+4,sqrtf@m+3
  7848   004660  501A               	movf	sqrtf@m^0,w,c
  7849   004662  101B               	iorwf	(sqrtf@m+1)^0,w,c
  7850   004664  101C               	iorwf	(sqrtf@m+2)^0,w,c
  7851   004666  101D               	iorwf	(sqrtf@m+3)^0,w,c
  7852   004668  A4D8               	btfss	status,2,c
  7853   00466A  EF39  F023         	goto	u9471
  7854   00466E  EF3B  F023         	goto	u9470
  7855   004672                     u9471:
  7856   004672  EF6B  F023         	goto	l1373
  7857   004676                     u9470:
  7858   004676  0E00               	movlw	0
  7859   004678  6E0E               	movwf	sqrtf@i^0,c
  7860   00467A  0E00               	movlw	0
  7861   00467C  6E0F               	movwf	(sqrtf@i+1)^0,c
  7862   00467E  0E00               	movlw	0
  7863   004680  6E10               	movwf	(sqrtf@i+2)^0,c
  7864   004682  0E00               	movlw	0
  7865   004684  6E11               	movwf	(sqrtf@i+3)^0,c
  7866   004686  EF50  F023         	goto	l7272
  7867   00468A                     l7268:
  7868   00468A  90D8               	bcf	status,0,c
  7869   00468C  3622               	rlcf	sqrtf@ix^0,f,c
  7870   00468E  3623               	rlcf	(sqrtf@ix+1)^0,f,c
  7871   004690  3624               	rlcf	(sqrtf@ix+2)^0,f,c
  7872   004692  3625               	rlcf	(sqrtf@ix+3)^0,f,c
  7873   004694  0E01               	movlw	1
  7874   004696  260E               	addwf	sqrtf@i^0,f,c
  7875   004698  0E00               	movlw	0
  7876   00469A  220F               	addwfc	(sqrtf@i+1)^0,f,c
  7877   00469C  2210               	addwfc	(sqrtf@i+2)^0,f,c
  7878   00469E  2211               	addwfc	(sqrtf@i+3)^0,f,c
  7879   0046A0                     l7272:
  7880   0046A0  AE24               	btfss	(sqrtf@ix+2)^0,7,c
  7881   0046A2  EF55  F023         	goto	u9481
  7882   0046A6  EF57  F023         	goto	u9480
  7883   0046AA                     u9481:
  7884   0046AA  EF45  F023         	goto	l7268
  7885   0046AE                     u9480:
  7886   0046AE  0EFF               	movlw	255
  7887   0046B0  240E               	addwf	sqrtf@i^0,w,c
  7888   0046B2  6E05               	movwf	??_sqrtf^0,c
  7889   0046B4  0EFF               	movlw	255
  7890   0046B6  200F               	addwfc	(sqrtf@i+1)^0,w,c
  7891   0046B8  6E06               	movwf	(??_sqrtf+1)^0,c
  7892   0046BA  0EFF               	movlw	255
  7893   0046BC  2010               	addwfc	(sqrtf@i+2)^0,w,c
  7894   0046BE  6E07               	movwf	(??_sqrtf+2)^0,c
  7895   0046C0  0EFF               	movlw	255
  7896   0046C2  2011               	addwfc	(sqrtf@i+3)^0,w,c
  7897   0046C4  6E08               	movwf	(??_sqrtf+3)^0,c
  7898   0046C6  5005               	movf	??_sqrtf^0,w,c
  7899   0046C8  5E1A               	subwf	sqrtf@m^0,f,c
  7900   0046CA  5006               	movf	(??_sqrtf+1)^0,w,c
  7901   0046CC  5A1B               	subwfb	(sqrtf@m+1)^0,f,c
  7902   0046CE  5007               	movf	(??_sqrtf+2)^0,w,c
  7903   0046D0  5A1C               	subwfb	(sqrtf@m+2)^0,f,c
  7904   0046D2  5008               	movf	(??_sqrtf+3)^0,w,c
  7905   0046D4  5A1D               	subwfb	(sqrtf@m+3)^0,f,c
  7906   0046D6                     l1373:
  7907   0046D6  0E81               	movlw	129
  7908   0046D8  261A               	addwf	sqrtf@m^0,f,c
  7909   0046DA  0EFF               	movlw	255
  7910   0046DC  221B               	addwfc	(sqrtf@m+1)^0,f,c
  7911   0046DE  0EFF               	movlw	255
  7912   0046E0  221C               	addwfc	(sqrtf@m+2)^0,f,c
  7913   0046E2  0EFF               	movlw	255
  7914   0046E4  221D               	addwfc	(sqrtf@m+3)^0,f,c
  7915   0046E6  0EFF               	movlw	255
  7916   0046E8  1422               	andwf	sqrtf@ix^0,w,c
  7917   0046EA  6E05               	movwf	??_sqrtf^0,c
  7918   0046EC  0EFF               	movlw	255
  7919   0046EE  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7920   0046F0  6E06               	movwf	(??_sqrtf+1)^0,c
  7921   0046F2  0E7F               	movlw	127
  7922   0046F4  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7923   0046F6  6E07               	movwf	(??_sqrtf+2)^0,c
  7924   0046F8  0E00               	movlw	0
  7925   0046FA  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7926   0046FC  6E08               	movwf	(??_sqrtf+3)^0,c
  7927   0046FE  0E00               	movlw	0
  7928   004700  1005               	iorwf	??_sqrtf^0,w,c
  7929   004702  6E22               	movwf	sqrtf@ix^0,c
  7930   004704  0E00               	movlw	0
  7931   004706  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7932   004708  6E23               	movwf	(sqrtf@ix+1)^0,c
  7933   00470A  0E80               	movlw	128
  7934   00470C  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7935   00470E  6E24               	movwf	(sqrtf@ix+2)^0,c
  7936   004710  0E00               	movlw	0
  7937   004712  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7938   004714  6E25               	movwf	(sqrtf@ix+3)^0,c
  7939   004716  A01A               	btfss	sqrtf@m^0,0,c
  7940   004718  EF90  F023         	goto	u9491
  7941   00471C  EF92  F023         	goto	u9490
  7942   004720                     u9491:
  7943   004720  EF9A  F023         	goto	l1377
  7944   004724                     u9490:
  7945   004724  5022               	movf	sqrtf@ix^0,w,c
  7946   004726  2622               	addwf	sqrtf@ix^0,f,c
  7947   004728  5023               	movf	(sqrtf@ix+1)^0,w,c
  7948   00472A  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7949   00472C  5024               	movf	(sqrtf@ix+2)^0,w,c
  7950   00472E  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7951   004730  5025               	movf	(sqrtf@ix+3)^0,w,c
  7952   004732  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7953   004734                     l1377:
  7954   004734  341D               	rlcf	(sqrtf@m+3)^0,w,c
  7955   004736  321D               	rrcf	(sqrtf@m+3)^0,f,c
  7956   004738  321C               	rrcf	(sqrtf@m+2)^0,f,c
  7957   00473A  321B               	rrcf	(sqrtf@m+1)^0,f,c
  7958   00473C  321A               	rrcf	sqrtf@m^0,f,c
  7959   00473E  5022               	movf	sqrtf@ix^0,w,c
  7960   004740  2622               	addwf	sqrtf@ix^0,f,c
  7961   004742  5023               	movf	(sqrtf@ix+1)^0,w,c
  7962   004744  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7963   004746  5024               	movf	(sqrtf@ix+2)^0,w,c
  7964   004748  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7965   00474A  5025               	movf	(sqrtf@ix+3)^0,w,c
  7966   00474C  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7967   00474E  0E00               	movlw	0
  7968   004750  6E0A               	movwf	sqrtf@s^0,c
  7969   004752  0E00               	movlw	0
  7970   004754  6E0B               	movwf	(sqrtf@s+1)^0,c
  7971   004756  0E00               	movlw	0
  7972   004758  6E0C               	movwf	(sqrtf@s+2)^0,c
  7973   00475A  0E00               	movlw	0
  7974   00475C  6E0D               	movwf	(sqrtf@s+3)^0,c
  7975   00475E  C00A  F012         	movff	sqrtf@s,sqrtf@q
  7976   004762  C00B  F013         	movff	sqrtf@s+1,sqrtf@q+1
  7977   004766  C00C  F014         	movff	sqrtf@s+2,sqrtf@q+2
  7978   00476A  C00D  F015         	movff	sqrtf@s+3,sqrtf@q+3
  7979   00476E  0E00               	movlw	0
  7980   004770  6E1E               	movwf	sqrtf@r^0,c
  7981   004772  0E00               	movlw	0
  7982   004774  6E1F               	movwf	(sqrtf@r+1)^0,c
  7983   004776  0E00               	movlw	0
  7984   004778  6E20               	movwf	(sqrtf@r+2)^0,c
  7985   00477A  0E01               	movlw	1
  7986   00477C  6E21               	movwf	(sqrtf@r+3)^0,c
  7987   00477E  EF09  F024         	goto	l7290
  7988   004782                     l7284:
  7989   004782  500A               	movf	sqrtf@s^0,w,c
  7990   004784  241E               	addwf	sqrtf@r^0,w,c
  7991   004786  6E16               	movwf	sqrtf@t^0,c
  7992   004788  500B               	movf	(sqrtf@s+1)^0,w,c
  7993   00478A  201F               	addwfc	(sqrtf@r+1)^0,w,c
  7994   00478C  6E17               	movwf	(sqrtf@t+1)^0,c
  7995   00478E  500C               	movf	(sqrtf@s+2)^0,w,c
  7996   004790  2020               	addwfc	(sqrtf@r+2)^0,w,c
  7997   004792  6E18               	movwf	(sqrtf@t+2)^0,c
  7998   004794  500D               	movf	(sqrtf@s+3)^0,w,c
  7999   004796  2021               	addwfc	(sqrtf@r+3)^0,w,c
  8000   004798  6E19               	movwf	(sqrtf@t+3)^0,c
  8001   00479A  5016               	movf	sqrtf@t^0,w,c
  8002   00479C  5C22               	subwf	sqrtf@ix^0,w,c
  8003   00479E  5017               	movf	(sqrtf@t+1)^0,w,c
  8004   0047A0  5823               	subwfb	(sqrtf@ix+1)^0,w,c
  8005   0047A2  5018               	movf	(sqrtf@t+2)^0,w,c
  8006   0047A4  5824               	subwfb	(sqrtf@ix+2)^0,w,c
  8007   0047A6  5025               	movf	(sqrtf@ix+3)^0,w,c
  8008   0047A8  0A80               	xorlw	128
  8009   0047AA  6E05               	movwf	??_sqrtf^0,c
  8010   0047AC  5019               	movf	(sqrtf@t+3)^0,w,c
  8011   0047AE  0A80               	xorlw	128
  8012   0047B0  5805               	subwfb	??_sqrtf^0,w,c
  8013   0047B2  A0D8               	btfss	status,0,c
  8014   0047B4  EFDE  F023         	goto	u9501
  8015   0047B8  EFE0  F023         	goto	u9500
  8016   0047BC                     u9501:
  8017   0047BC  EFFC  F023         	goto	l1380
  8018   0047C0                     u9500:
  8019   0047C0  5016               	movf	sqrtf@t^0,w,c
  8020   0047C2  241E               	addwf	sqrtf@r^0,w,c
  8021   0047C4  6E0A               	movwf	sqrtf@s^0,c
  8022   0047C6  5017               	movf	(sqrtf@t+1)^0,w,c
  8023   0047C8  201F               	addwfc	(sqrtf@r+1)^0,w,c
  8024   0047CA  6E0B               	movwf	(sqrtf@s+1)^0,c
  8025   0047CC  5018               	movf	(sqrtf@t+2)^0,w,c
  8026   0047CE  2020               	addwfc	(sqrtf@r+2)^0,w,c
  8027   0047D0  6E0C               	movwf	(sqrtf@s+2)^0,c
  8028   0047D2  5019               	movf	(sqrtf@t+3)^0,w,c
  8029   0047D4  2021               	addwfc	(sqrtf@r+3)^0,w,c
  8030   0047D6  6E0D               	movwf	(sqrtf@s+3)^0,c
  8031   0047D8  5016               	movf	sqrtf@t^0,w,c
  8032   0047DA  5E22               	subwf	sqrtf@ix^0,f,c
  8033   0047DC  5017               	movf	(sqrtf@t+1)^0,w,c
  8034   0047DE  5A23               	subwfb	(sqrtf@ix+1)^0,f,c
  8035   0047E0  5018               	movf	(sqrtf@t+2)^0,w,c
  8036   0047E2  5A24               	subwfb	(sqrtf@ix+2)^0,f,c
  8037   0047E4  5019               	movf	(sqrtf@t+3)^0,w,c
  8038   0047E6  5A25               	subwfb	(sqrtf@ix+3)^0,f,c
  8039   0047E8  501E               	movf	sqrtf@r^0,w,c
  8040   0047EA  2612               	addwf	sqrtf@q^0,f,c
  8041   0047EC  501F               	movf	(sqrtf@r+1)^0,w,c
  8042   0047EE  2213               	addwfc	(sqrtf@q+1)^0,f,c
  8043   0047F0  5020               	movf	(sqrtf@r+2)^0,w,c
  8044   0047F2  2214               	addwfc	(sqrtf@q+2)^0,f,c
  8045   0047F4  5021               	movf	(sqrtf@r+3)^0,w,c
  8046   0047F6  2215               	addwfc	(sqrtf@q+3)^0,f,c
  8047   0047F8                     l1380:
  8048   0047F8  5022               	movf	sqrtf@ix^0,w,c
  8049   0047FA  2622               	addwf	sqrtf@ix^0,f,c
  8050   0047FC  5023               	movf	(sqrtf@ix+1)^0,w,c
  8051   0047FE  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  8052   004800  5024               	movf	(sqrtf@ix+2)^0,w,c
  8053   004802  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  8054   004804  5025               	movf	(sqrtf@ix+3)^0,w,c
  8055   004806  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  8056   004808  90D8               	bcf	status,0,c
  8057   00480A  3221               	rrcf	(sqrtf@r+3)^0,f,c
  8058   00480C  3220               	rrcf	(sqrtf@r+2)^0,f,c
  8059   00480E  321F               	rrcf	(sqrtf@r+1)^0,f,c
  8060   004810  321E               	rrcf	sqrtf@r^0,f,c
  8061   004812                     l7290:
  8062   004812  501E               	movf	sqrtf@r^0,w,c
  8063   004814  101F               	iorwf	(sqrtf@r+1)^0,w,c
  8064   004816  1020               	iorwf	(sqrtf@r+2)^0,w,c
  8065   004818  1021               	iorwf	(sqrtf@r+3)^0,w,c
  8066   00481A  A4D8               	btfss	status,2,c
  8067   00481C  EF12  F024         	goto	u9511
  8068   004820  EF14  F024         	goto	u9510
  8069   004824                     u9511:
  8070   004824  EFC1  F023         	goto	l7284
  8071   004828                     u9510:
  8072   004828  5022               	movf	sqrtf@ix^0,w,c
  8073   00482A  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  8074   00482C  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  8075   00482E  1025               	iorwf	(sqrtf@ix+3)^0,w,c
  8076   004830  B4D8               	btfsc	status,2,c
  8077   004832  EF1D  F024         	goto	u9521
  8078   004836  EF1F  F024         	goto	u9520
  8079   00483A                     u9521:
  8080   00483A  EF33  F024         	goto	l1382
  8081   00483E                     u9520:
  8082   00483E  0E01               	movlw	1
  8083   004840  1412               	andwf	sqrtf@q^0,w,c
  8084   004842  6E05               	movwf	??_sqrtf^0,c
  8085   004844  0E00               	movlw	0
  8086   004846  1413               	andwf	(sqrtf@q+1)^0,w,c
  8087   004848  6E06               	movwf	(??_sqrtf+1)^0,c
  8088   00484A  0E00               	movlw	0
  8089   00484C  1414               	andwf	(sqrtf@q+2)^0,w,c
  8090   00484E  6E07               	movwf	(??_sqrtf+2)^0,c
  8091   004850  0E00               	movlw	0
  8092   004852  1415               	andwf	(sqrtf@q+3)^0,w,c
  8093   004854  6E08               	movwf	(??_sqrtf+3)^0,c
  8094   004856  5005               	movf	??_sqrtf^0,w,c
  8095   004858  2612               	addwf	sqrtf@q^0,f,c
  8096   00485A  5006               	movf	(??_sqrtf+1)^0,w,c
  8097   00485C  2213               	addwfc	(sqrtf@q+1)^0,f,c
  8098   00485E  5007               	movf	(??_sqrtf+2)^0,w,c
  8099   004860  2214               	addwfc	(sqrtf@q+2)^0,f,c
  8100   004862  5008               	movf	(??_sqrtf+3)^0,w,c
  8101   004864  2215               	addwfc	(sqrtf@q+3)^0,f,c
  8102   004866                     l1382:
  8103   004866  C012  F005         	movff	sqrtf@q,??_sqrtf
  8104   00486A  C013  F006         	movff	sqrtf@q+1,??_sqrtf+1
  8105   00486E  C014  F007         	movff	sqrtf@q+2,??_sqrtf+2
  8106   004872  C015  F008         	movff	sqrtf@q+3,??_sqrtf+3
  8107   004876  3408               	rlcf	(??_sqrtf+3)^0,w,c
  8108   004878  3208               	rrcf	(??_sqrtf+3)^0,f,c
  8109   00487A  3207               	rrcf	(??_sqrtf+2)^0,f,c
  8110   00487C  3206               	rrcf	(??_sqrtf+1)^0,f,c
  8111   00487E  3205               	rrcf	??_sqrtf^0,f,c
  8112   004880  0E00               	movlw	0
  8113   004882  2405               	addwf	??_sqrtf^0,w,c
  8114   004884  6E22               	movwf	sqrtf@ix^0,c
  8115   004886  0E00               	movlw	0
  8116   004888  2006               	addwfc	(??_sqrtf+1)^0,w,c
  8117   00488A  6E23               	movwf	(sqrtf@ix+1)^0,c
  8118   00488C  0E00               	movlw	0
  8119   00488E  2007               	addwfc	(??_sqrtf+2)^0,w,c
  8120   004890  6E24               	movwf	(sqrtf@ix+2)^0,c
  8121   004892  0E3F               	movlw	63
  8122   004894  2008               	addwfc	(??_sqrtf+3)^0,w,c
  8123   004896  6E25               	movwf	(sqrtf@ix+3)^0,c
  8124   004898  C01A  F005         	movff	sqrtf@m,??_sqrtf
  8125   00489C  C01B  F006         	movff	sqrtf@m+1,??_sqrtf+1
  8126   0048A0  C01C  F007         	movff	sqrtf@m+2,??_sqrtf+2
  8127   0048A4  C01D  F008         	movff	sqrtf@m+3,??_sqrtf+3
  8128   0048A8  0E17               	movlw	23
  8129   0048AA                     u9535:
  8130   0048AA  90D8               	bcf	status,0,c
  8131   0048AC  3605               	rlcf	??_sqrtf^0,f,c
  8132   0048AE  3606               	rlcf	(??_sqrtf+1)^0,f,c
  8133   0048B0  3607               	rlcf	(??_sqrtf+2)^0,f,c
  8134   0048B2  3608               	rlcf	(??_sqrtf+3)^0,f,c
  8135   0048B4  2EE8               	decfsz	wreg,f,c
  8136   0048B6  EF55  F024         	goto	u9535
  8137   0048BA  5005               	movf	??_sqrtf^0,w,c
  8138   0048BC  2622               	addwf	sqrtf@ix^0,f,c
  8139   0048BE  5006               	movf	(??_sqrtf+1)^0,w,c
  8140   0048C0  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  8141   0048C2  5007               	movf	(??_sqrtf+2)^0,w,c
  8142   0048C4  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  8143   0048C6  5008               	movf	(??_sqrtf+3)^0,w,c
  8144   0048C8  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  8145   0048CA  EFC1  F022         	goto	l7244
  8146   0048CE                     l1369:
  8147   0048CE  0012               	return		;funcret
  8148   0048D0                     __end_of_sqrtf:
  8149                           	callstack 0
  8150                           
  8151 ;; *************** function _scalbnf *****************
  8152 ;; Defined at:
  8153 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\scalbnf.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  x               4   39[COMRAM] float 
  8156 ;;  n               2   43[COMRAM] int 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;  y               4   53[COMRAM] float 
  8159 ;;  u               4   49[COMRAM] struct .
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  4   39[COMRAM] float 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8169 ;;      Params:         6       0       0       0       0       0       0       0       0
  8170 ;;      Locals:         8       0       0       0       0       0       0       0       0
  8171 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8172 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8173 ;;Total ram usage:       18 bytes
  8174 ;; Hardware stack levels used: 1
  8175 ;; Hardware stack levels required when called: 2
  8176 ;; This function calls:
  8177 ;;		___flmul
  8178 ;; This function is called by:
  8179 ;;		_powf
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text8
  8184   005270                     __ptext8:
  8185                           	callstack 0
  8186   005270                     _scalbnf:
  8187                           	callstack 26
  8188   005270  C028  F036         	movff	scalbnf@x,scalbnf@y
  8189   005274  C029  F037         	movff	scalbnf@x+1,scalbnf@y+1
  8190   005278  C02A  F038         	movff	scalbnf@x+2,scalbnf@y+2
  8191   00527C  C02B  F039         	movff	scalbnf@x+3,scalbnf@y+3
  8192   005280  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8193   005282  EF4C  F029         	goto	u9541
  8194   005286  502D               	movf	(scalbnf@n+1)^0,w,c
  8195   005288  E109               	bnz	u9540
  8196   00528A  0E80               	movlw	128
  8197   00528C  5C2C               	subwf	scalbnf@n^0,w,c
  8198   00528E  A0D8               	btfss	status,0,c
  8199   005290  EF4C  F029         	goto	u9541
  8200   005294  EF4E  F029         	goto	u9540
  8201   005298                     u9541:
  8202   005298  EFAC  F029         	goto	l7318
  8203   00529C                     u9540:
  8204   00529C  C036  F00F         	movff	scalbnf@y,___flmul@b
  8205   0052A0  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8206   0052A4  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8207   0052A8  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8208   0052AC  0E00               	movlw	0
  8209   0052AE  6E13               	movwf	___flmul@a^0,c
  8210   0052B0  0E00               	movlw	0
  8211   0052B2  6E14               	movwf	(___flmul@a+1)^0,c
  8212   0052B4  0E00               	movlw	0
  8213   0052B6  6E15               	movwf	(___flmul@a+2)^0,c
  8214   0052B8  0E7F               	movlw	127
  8215   0052BA  6E16               	movwf	(___flmul@a+3)^0,c
  8216   0052BC  EC66  F020         	call	___flmul	;wreg free
  8217   0052C0  C00F  F036         	movff	?___flmul,scalbnf@y
  8218   0052C4  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8219   0052C8  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8220   0052CC  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8221   0052D0  0E81               	movlw	129
  8222   0052D2  262C               	addwf	scalbnf@n^0,f,c
  8223   0052D4  0EFF               	movlw	255
  8224   0052D6  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8225   0052D8  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8226   0052DA  EF78  F029         	goto	u9551
  8227   0052DE  502D               	movf	(scalbnf@n+1)^0,w,c
  8228   0052E0  E109               	bnz	u9550
  8229   0052E2  0E80               	movlw	128
  8230   0052E4  5C2C               	subwf	scalbnf@n^0,w,c
  8231   0052E6  A0D8               	btfss	status,0,c
  8232   0052E8  EF78  F029         	goto	u9551
  8233   0052EC  EF7A  F029         	goto	u9550
  8234   0052F0                     u9551:
  8235   0052F0  EF16  F02A         	goto	l7334
  8236   0052F4                     u9550:
  8237   0052F4  C036  F00F         	movff	scalbnf@y,___flmul@b
  8238   0052F8  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8239   0052FC  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8240   005300  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8241   005304  0E00               	movlw	0
  8242   005306  6E13               	movwf	___flmul@a^0,c
  8243   005308  0E00               	movlw	0
  8244   00530A  6E14               	movwf	(___flmul@a+1)^0,c
  8245   00530C  0E00               	movlw	0
  8246   00530E  6E15               	movwf	(___flmul@a+2)^0,c
  8247   005310  0E7F               	movlw	127
  8248   005312  6E16               	movwf	(___flmul@a+3)^0,c
  8249   005314  EC66  F020         	call	___flmul	;wreg free
  8250   005318  C00F  F036         	movff	?___flmul,scalbnf@y
  8251   00531C  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8252   005320  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8253   005324  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8254   005328  0E81               	movlw	129
  8255   00532A  262C               	addwf	scalbnf@n^0,f,c
  8256   00532C  0EFF               	movlw	255
  8257   00532E  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8258   005330  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8259   005332  EFA4  F029         	goto	u9561
  8260   005336  502D               	movf	(scalbnf@n+1)^0,w,c
  8261   005338  E109               	bnz	u9560
  8262   00533A  0E80               	movlw	128
  8263   00533C  5C2C               	subwf	scalbnf@n^0,w,c
  8264   00533E  A0D8               	btfss	status,0,c
  8265   005340  EFA4  F029         	goto	u9561
  8266   005344  EFA6  F029         	goto	u9560
  8267   005348                     u9561:
  8268   005348  EF16  F02A         	goto	l7334
  8269   00534C                     u9560:
  8270   00534C  0E00               	movlw	0
  8271   00534E  6E2D               	movwf	(scalbnf@n+1)^0,c
  8272   005350  0E7F               	movlw	127
  8273   005352  6E2C               	movwf	scalbnf@n^0,c
  8274   005354  EF16  F02A         	goto	l7334
  8275   005358                     l7318:
  8276   005358  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8277   00535A  EFB8  F029         	goto	u9571
  8278   00535E  0E82               	movlw	130
  8279   005360  5C2C               	subwf	scalbnf@n^0,w,c
  8280   005362  0EFF               	movlw	255
  8281   005364  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8282   005366  B0D8               	btfsc	status,0,c
  8283   005368  EFB8  F029         	goto	u9571
  8284   00536C  EFBA  F029         	goto	u9570
  8285   005370                     u9571:
  8286   005370  EF16  F02A         	goto	l7334
  8287   005374                     u9570:
  8288   005374  C036  F00F         	movff	scalbnf@y,___flmul@b
  8289   005378  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8290   00537C  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8291   005380  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8292   005384  0E00               	movlw	0
  8293   005386  6E13               	movwf	___flmul@a^0,c
  8294   005388  0E00               	movlw	0
  8295   00538A  6E14               	movwf	(___flmul@a+1)^0,c
  8296   00538C  0E80               	movlw	128
  8297   00538E  6E15               	movwf	(___flmul@a+2)^0,c
  8298   005390  0E0C               	movlw	12
  8299   005392  6E16               	movwf	(___flmul@a+3)^0,c
  8300   005394  EC66  F020         	call	___flmul	;wreg free
  8301   005398  C00F  F036         	movff	?___flmul,scalbnf@y
  8302   00539C  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8303   0053A0  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8304   0053A4  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8305   0053A8  0E66               	movlw	102
  8306   0053AA  262C               	addwf	scalbnf@n^0,f,c
  8307   0053AC  0E00               	movlw	0
  8308   0053AE  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8309   0053B0  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8310   0053B2  EFE4  F029         	goto	u9581
  8311   0053B6  0E82               	movlw	130
  8312   0053B8  5C2C               	subwf	scalbnf@n^0,w,c
  8313   0053BA  0EFF               	movlw	255
  8314   0053BC  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8315   0053BE  B0D8               	btfsc	status,0,c
  8316   0053C0  EFE4  F029         	goto	u9581
  8317   0053C4  EFE6  F029         	goto	u9580
  8318   0053C8                     u9581:
  8319   0053C8  EF16  F02A         	goto	l7334
  8320   0053CC                     u9580:
  8321   0053CC  C036  F00F         	movff	scalbnf@y,___flmul@b
  8322   0053D0  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8323   0053D4  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8324   0053D8  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8325   0053DC  0E00               	movlw	0
  8326   0053DE  6E13               	movwf	___flmul@a^0,c
  8327   0053E0  0E00               	movlw	0
  8328   0053E2  6E14               	movwf	(___flmul@a+1)^0,c
  8329   0053E4  0E80               	movlw	128
  8330   0053E6  6E15               	movwf	(___flmul@a+2)^0,c
  8331   0053E8  0E0C               	movlw	12
  8332   0053EA  6E16               	movwf	(___flmul@a+3)^0,c
  8333   0053EC  EC66  F020         	call	___flmul	;wreg free
  8334   0053F0  C00F  F036         	movff	?___flmul,scalbnf@y
  8335   0053F4  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8336   0053F8  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8337   0053FC  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8338   005400  0E66               	movlw	102
  8339   005402  262C               	addwf	scalbnf@n^0,f,c
  8340   005404  0E00               	movlw	0
  8341   005406  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8342   005408  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8343   00540A  EF10  F02A         	goto	u9591
  8344   00540E  0E82               	movlw	130
  8345   005410  5C2C               	subwf	scalbnf@n^0,w,c
  8346   005412  0EFF               	movlw	255
  8347   005414  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8348   005416  B0D8               	btfsc	status,0,c
  8349   005418  EF10  F02A         	goto	u9591
  8350   00541C  EF12  F02A         	goto	u9590
  8351   005420                     u9591:
  8352   005420  EF16  F02A         	goto	l7334
  8353   005424                     u9590:
  8354   005424  0EFF               	movlw	255
  8355   005426  6E2D               	movwf	(scalbnf@n+1)^0,c
  8356   005428  0E82               	movlw	130
  8357   00542A  6E2C               	movwf	scalbnf@n^0,c
  8358   00542C                     l7334:
  8359   00542C  0E7F               	movlw	127
  8360   00542E  242C               	addwf	scalbnf@n^0,w,c
  8361   005430  6E2E               	movwf	??_scalbnf^0,c
  8362   005432  0E00               	movlw	0
  8363   005434  202D               	addwfc	(scalbnf@n+1)^0,w,c
  8364   005436  6E2F               	movwf	(??_scalbnf+1)^0,c
  8365   005438  6A30               	clrf	(??_scalbnf+2)^0,c
  8366   00543A  6A31               	clrf	(??_scalbnf+3)^0,c
  8367   00543C  0E17               	movlw	23
  8368   00543E                     u9605:
  8369   00543E  90D8               	bcf	status,0,c
  8370   005440  362E               	rlcf	??_scalbnf^0,f,c
  8371   005442  362F               	rlcf	(??_scalbnf+1)^0,f,c
  8372   005444  3630               	rlcf	(??_scalbnf+2)^0,f,c
  8373   005446  3631               	rlcf	(??_scalbnf+3)^0,f,c
  8374   005448  2EE8               	decfsz	wreg,f,c
  8375   00544A  EF1F  F02A         	goto	u9605
  8376   00544E  C02E  F032         	movff	??_scalbnf,scalbnf@u
  8377   005452  C02F  F033         	movff	??_scalbnf+1,scalbnf@u+1
  8378   005456  C030  F034         	movff	??_scalbnf+2,scalbnf@u+2
  8379   00545A  C031  F035         	movff	??_scalbnf+3,scalbnf@u+3
  8380   00545E  C032  F00F         	movff	scalbnf@u,___flmul@b
  8381   005462  C033  F010         	movff	scalbnf@u+1,___flmul@b+1
  8382   005466  C034  F011         	movff	scalbnf@u+2,___flmul@b+2
  8383   00546A  C035  F012         	movff	scalbnf@u+3,___flmul@b+3
  8384   00546E  C036  F013         	movff	scalbnf@y,___flmul@a
  8385   005472  C037  F014         	movff	scalbnf@y+1,___flmul@a+1
  8386   005476  C038  F015         	movff	scalbnf@y+2,___flmul@a+2
  8387   00547A  C039  F016         	movff	scalbnf@y+3,___flmul@a+3
  8388   00547E  EC66  F020         	call	___flmul	;wreg free
  8389   005482  C00F  F028         	movff	?___flmul,scalbnf@x
  8390   005486  C010  F029         	movff	?___flmul+1,scalbnf@x+1
  8391   00548A  C011  F02A         	movff	?___flmul+2,scalbnf@x+2
  8392   00548E  C012  F02B         	movff	?___flmul+3,scalbnf@x+3
  8393   005492  C028  F028         	movff	scalbnf@x,?_scalbnf
  8394   005496  C029  F029         	movff	scalbnf@x+1,?_scalbnf+1
  8395   00549A  C02A  F02A         	movff	scalbnf@x+2,?_scalbnf+2
  8396   00549E  C02B  F02B         	movff	scalbnf@x+3,?_scalbnf+3
  8397   0054A2  0012               	return		;funcret
  8398   0054A4                     __end_of_scalbnf:
  8399                           	callstack 0
  8400                           
  8401 ;; *************** function ___xxtofl *****************
  8402 ;; Defined at:
  8403 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  sign            1    wreg     unsigned char 
  8406 ;;  val             4    0[COMRAM] long 
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  sign            1    8[COMRAM] unsigned char 
  8409 ;;  arg             4   10[COMRAM] unsigned long 
  8410 ;;  exp             1    9[COMRAM] unsigned char 
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  4    0[COMRAM] unsigned char 
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8420 ;;      Params:         4       0       0       0       0       0       0       0       0
  8421 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8422 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8423 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8424 ;;Total ram usage:       14 bytes
  8425 ;; Hardware stack levels used: 1
  8426 ;; Hardware stack levels required when called: 1
  8427 ;; This function calls:
  8428 ;;		Nothing
  8429 ;; This function is called by:
  8430 ;;		_main
  8431 ;;		_Read_Sensors
  8432 ;;		_powf
  8433 ;; This function uses a non-reentrant model
  8434 ;;
  8435                           
  8436                           	psect	text9
  8437   0056B6                     __ptext9:
  8438                           	callstack 0
  8439   0056B6                     ___xxtofl:
  8440                           	callstack 29
  8441                           
  8442                           ;incstack = 0
  8443                           ;___xxtofl@sign stored from wreg
  8444   0056B6  6E09               	movwf	___xxtofl@sign^0,c
  8445   0056B8  5009               	movf	___xxtofl@sign^0,w,c
  8446   0056BA  B4D8               	btfsc	status,2,c
  8447   0056BC  EF62  F02B         	goto	u9301
  8448   0056C0  EF64  F02B         	goto	u9300
  8449   0056C4                     u9301:
  8450   0056C4  EF86  F02B         	goto	l940
  8451   0056C8                     u9300:
  8452   0056C8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8453   0056CA  EF6B  F02B         	goto	u9310
  8454   0056CE  EF69  F02B         	goto	u9311
  8455   0056D2                     u9311:
  8456   0056D2  EF86  F02B         	goto	l940
  8457   0056D6                     u9310:
  8458   0056D6  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8459   0056DA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8460   0056DE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8461   0056E2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8462   0056E6  1E05               	comf	??___xxtofl^0,f,c
  8463   0056E8  1E06               	comf	(??___xxtofl+1)^0,f,c
  8464   0056EA  1E07               	comf	(??___xxtofl+2)^0,f,c
  8465   0056EC  1E08               	comf	(??___xxtofl+3)^0,f,c
  8466   0056EE  2A05               	incf	??___xxtofl^0,f,c
  8467   0056F0  0E00               	movlw	0
  8468   0056F2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8469   0056F4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8470   0056F6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8471   0056F8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8472   0056FC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8473   005700  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8474   005704  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8475   005708  EF8E  F02B         	goto	l7194
  8476   00570C                     l940:
  8477   00570C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8478   005710  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8479   005714  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8480   005718  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8481   00571C                     l7194:
  8482   00571C  5001               	movf	___xxtofl@val^0,w,c
  8483   00571E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8484   005720  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8485   005722  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8486   005724  A4D8               	btfss	status,2,c
  8487   005726  EF97  F02B         	goto	u9321
  8488   00572A  EF99  F02B         	goto	u9320
  8489   00572E                     u9321:
  8490   00572E  EFA3  F02B         	goto	l7200
  8491   005732                     u9320:
  8492   005732  0E00               	movlw	0
  8493   005734  6E01               	movwf	?___xxtofl^0,c
  8494   005736  0E00               	movlw	0
  8495   005738  6E02               	movwf	(?___xxtofl+1)^0,c
  8496   00573A  0E00               	movlw	0
  8497   00573C  6E03               	movwf	(?___xxtofl+2)^0,c
  8498   00573E  0E00               	movlw	0
  8499   005740  6E04               	movwf	(?___xxtofl+3)^0,c
  8500   005742  EF34  F02C         	goto	l943
  8501   005746                     l7200:
  8502   005746  0E96               	movlw	150
  8503   005748  6E0A               	movwf	___xxtofl@exp^0,c
  8504   00574A  EFAD  F02B         	goto	l7204
  8505   00574E                     l7202:
  8506   00574E  2A0A               	incf	___xxtofl@exp^0,f,c
  8507   005750  90D8               	bcf	status,0,c
  8508   005752  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8509   005754  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8510   005756  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8511   005758  320B               	rrcf	___xxtofl@arg^0,f,c
  8512   00575A                     l7204:
  8513   00575A  0E00               	movlw	0
  8514   00575C  140B               	andwf	___xxtofl@arg^0,w,c
  8515   00575E  6E05               	movwf	??___xxtofl^0,c
  8516   005760  0E00               	movlw	0
  8517   005762  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8518   005764  6E06               	movwf	(??___xxtofl+1)^0,c
  8519   005766  0E00               	movlw	0
  8520   005768  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8521   00576A  6E07               	movwf	(??___xxtofl+2)^0,c
  8522   00576C  0EFE               	movlw	254
  8523   00576E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8524   005770  6E08               	movwf	(??___xxtofl+3)^0,c
  8525   005772  5005               	movf	??___xxtofl^0,w,c
  8526   005774  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8527   005776  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8528   005778  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8529   00577A  A4D8               	btfss	status,2,c
  8530   00577C  EFC2  F02B         	goto	u9331
  8531   005780  EFC4  F02B         	goto	u9330
  8532   005784                     u9331:
  8533   005784  EFA7  F02B         	goto	l7202
  8534   005788                     u9330:
  8535   005788  EFD2  F02B         	goto	l947
  8536   00578C                     l7206:
  8537   00578C  2A0A               	incf	___xxtofl@exp^0,f,c
  8538   00578E  0E01               	movlw	1
  8539   005790  260B               	addwf	___xxtofl@arg^0,f,c
  8540   005792  0E00               	movlw	0
  8541   005794  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8542   005796  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8543   005798  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8544   00579A  90D8               	bcf	status,0,c
  8545   00579C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8546   00579E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8547   0057A0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8548   0057A2  320B               	rrcf	___xxtofl@arg^0,f,c
  8549   0057A4                     l947:
  8550   0057A4  0E00               	movlw	0
  8551   0057A6  140B               	andwf	___xxtofl@arg^0,w,c
  8552   0057A8  6E05               	movwf	??___xxtofl^0,c
  8553   0057AA  0E00               	movlw	0
  8554   0057AC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8555   0057AE  6E06               	movwf	(??___xxtofl+1)^0,c
  8556   0057B0  0E00               	movlw	0
  8557   0057B2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8558   0057B4  6E07               	movwf	(??___xxtofl+2)^0,c
  8559   0057B6  0EFF               	movlw	255
  8560   0057B8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8561   0057BA  6E08               	movwf	(??___xxtofl+3)^0,c
  8562   0057BC  5005               	movf	??___xxtofl^0,w,c
  8563   0057BE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8564   0057C0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8565   0057C2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8566   0057C4  A4D8               	btfss	status,2,c
  8567   0057C6  EFE7  F02B         	goto	u9341
  8568   0057CA  EFE9  F02B         	goto	u9340
  8569   0057CE                     u9341:
  8570   0057CE  EFC6  F02B         	goto	l7206
  8571   0057D2                     u9340:
  8572   0057D2  EFF1  F02B         	goto	l7214
  8573   0057D6                     l7212:
  8574   0057D6  060A               	decf	___xxtofl@exp^0,f,c
  8575   0057D8  90D8               	bcf	status,0,c
  8576   0057DA  360B               	rlcf	___xxtofl@arg^0,f,c
  8577   0057DC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8578   0057DE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8579   0057E0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8580   0057E2                     l7214:
  8581   0057E2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8582   0057E4  EFF6  F02B         	goto	u9351
  8583   0057E8  EFF8  F02B         	goto	u9350
  8584   0057EC                     u9351:
  8585   0057EC  EF00  F02C         	goto	l954
  8586   0057F0                     u9350:
  8587   0057F0  0E02               	movlw	2
  8588   0057F2  600A               	cpfslt	___xxtofl@exp^0,c
  8589   0057F4  EFFE  F02B         	goto	u9361
  8590   0057F8  EF00  F02C         	goto	u9360
  8591   0057FC                     u9361:
  8592   0057FC  EFEB  F02B         	goto	l7212
  8593   005800                     u9360:
  8594   005800                     l954:
  8595   005800  B00A               	btfsc	___xxtofl@exp^0,0,c
  8596   005802  EF05  F02C         	goto	u9371
  8597   005806  EF07  F02C         	goto	u9370
  8598   00580A                     u9371:
  8599   00580A  EF08  F02C         	goto	l7220
  8600   00580E                     u9370:
  8601   00580E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8602   005810                     l7220:
  8603   005810  90D8               	bcf	status,0,c
  8604   005812  320A               	rrcf	___xxtofl@exp^0,f,c
  8605   005814  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8606   005818  6A06               	clrf	(??___xxtofl+1)^0,c
  8607   00581A  6A07               	clrf	(??___xxtofl+2)^0,c
  8608   00581C  6A08               	clrf	(??___xxtofl+3)^0,c
  8609   00581E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8610   005822  6A07               	clrf	(??___xxtofl+2)^0,c
  8611   005824  6A06               	clrf	(??___xxtofl+1)^0,c
  8612   005826  6A05               	clrf	??___xxtofl^0,c
  8613   005828  5005               	movf	??___xxtofl^0,w,c
  8614   00582A  120B               	iorwf	___xxtofl@arg^0,f,c
  8615   00582C  5006               	movf	(??___xxtofl+1)^0,w,c
  8616   00582E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8617   005830  5007               	movf	(??___xxtofl+2)^0,w,c
  8618   005832  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8619   005834  5008               	movf	(??___xxtofl+3)^0,w,c
  8620   005836  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8621   005838  5009               	movf	___xxtofl@sign^0,w,c
  8622   00583A  B4D8               	btfsc	status,2,c
  8623   00583C  EF22  F02C         	goto	u9381
  8624   005840  EF24  F02C         	goto	u9380
  8625   005844                     u9381:
  8626   005844  EF2C  F02C         	goto	l7230
  8627   005848                     u9380:
  8628   005848  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8629   00584A  EF2B  F02C         	goto	u9390
  8630   00584E  EF29  F02C         	goto	u9391
  8631   005852                     u9391:
  8632   005852  EF2C  F02C         	goto	l7230
  8633   005856                     u9390:
  8634   005856  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8635   005858                     l7230:
  8636   005858  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8637   00585C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8638   005860  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8639   005864  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8640   005868                     l943:
  8641   005868  0012               	return		;funcret
  8642   00586A                     __end_of___xxtofl:
  8643                           	callstack 0
  8644                           
  8645 ;; *************** function _Apply_Filter *****************
  8646 ;; Defined at:
  8647 ;;		line 394 in file "newmain.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;  new_value       4   80[COMRAM] float 
  8650 ;;  samples         2   84[COMRAM] PTR float 
  8651 ;;		 -> temp_samples(20), 
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;  i               2    4[BANK0 ] int 
  8654 ;;  sum             4    0[BANK0 ] float 
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  4   80[COMRAM] float 
  8657 ;; Registers used:
  8658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8664 ;;      Params:         6       0       0       0       0       0       0       0       0
  8665 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8666 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8667 ;;      Totals:         8       6       0       0       0       0       0       0       0
  8668 ;;Total ram usage:       14 bytes
  8669 ;; Hardware stack levels used: 1
  8670 ;; Hardware stack levels required when called: 2
  8671 ;; This function calls:
  8672 ;;		___fladd
  8673 ;;		___fldiv
  8674 ;; This function is called by:
  8675 ;;		_Read_Sensors
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text10
  8680   0065D6                     __ptext10:
  8681                           	callstack 0
  8682   0065D6                     _Apply_Filter:
  8683                           	callstack 27
  8684   0065D6                     
  8685                           ;newmain.c: 395:     samples[sample_index] = new_value;
  8686   0065D6  0103               	movlb	3	; () banked
  8687   0065D8  5174               	movf	_sample_index& (0+255),w,b
  8688   0065DA  0D04               	mullw	4
  8689   0065DC  CFF3 F057          	movff	prodl,??_Apply_Filter
  8690   0065E0  CFF4 F058          	movff	prodh,??_Apply_Filter+1
  8691   0065E4  5057               	movf	??_Apply_Filter^0,w,c
  8692   0065E6  2455               	addwf	Apply_Filter@samples^0,w,c
  8693   0065E8  6ED9               	movwf	fsr2l,c
  8694   0065EA  5058               	movf	(??_Apply_Filter+1)^0,w,c
  8695   0065EC  2056               	addwfc	(Apply_Filter@samples+1)^0,w,c
  8696   0065EE  6EDA               	movwf	fsr2h,c
  8697   0065F0  C051  FFDE         	movff	Apply_Filter@new_value,postinc2
  8698   0065F4  C052  FFDE         	movff	Apply_Filter@new_value+1,postinc2
  8699   0065F8  C053  FFDE         	movff	Apply_Filter@new_value+2,postinc2
  8700   0065FC  C054  FFDE         	movff	Apply_Filter@new_value+3,postinc2
  8701   006600                     
  8702                           ; BSR set to: 3
  8703                           ;newmain.c: 397:     float sum = 0;
  8704   006600  0E00               	movlw	0
  8705   006602  0100               	movlb	0	; () banked
  8706   006604  6F60               	movwf	Apply_Filter@sum& (0+255),b
  8707   006606  0E00               	movlw	0
  8708   006608  6F61               	movwf	(Apply_Filter@sum+1)& (0+255),b
  8709   00660A  0E00               	movlw	0
  8710   00660C  6F62               	movwf	(Apply_Filter@sum+2)& (0+255),b
  8711   00660E  0E00               	movlw	0
  8712   006610  6F63               	movwf	(Apply_Filter@sum+3)& (0+255),b
  8713   006612                     
  8714                           ; BSR set to: 0
  8715                           ;newmain.c: 398:     for(int i = 0; i < 5; i++) {
  8716   006612  0E00               	movlw	0
  8717   006614  6F65               	movwf	(Apply_Filter@i+1)& (0+255),b
  8718   006616  0E00               	movlw	0
  8719   006618  6F64               	movwf	Apply_Filter@i& (0+255),b
  8720   00661A                     l7372:
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;newmain.c: 399:         sum += samples[i];
  8724   00661A  C060  F041         	movff	Apply_Filter@sum,___fladd@b
  8725   00661E  C061  F042         	movff	Apply_Filter@sum+1,___fladd@b+1
  8726   006622  C062  F043         	movff	Apply_Filter@sum+2,___fladd@b+2
  8727   006626  C063  F044         	movff	Apply_Filter@sum+3,___fladd@b+3
  8728   00662A  90D8               	bcf	status,0,c
  8729   00662C  3564               	rlcf	Apply_Filter@i& (0+255),w,b
  8730   00662E  6ED9               	movwf	fsr2l,c
  8731   006630  3565               	rlcf	(Apply_Filter@i+1)& (0+255),w,b
  8732   006632  6EDA               	movwf	fsr2h,c
  8733   006634  90D8               	bcf	status,0,c
  8734   006636  36D9               	rlcf	fsr2l,f,c
  8735   006638  36DA               	rlcf	fsr2h,f,c
  8736   00663A  5055               	movf	Apply_Filter@samples^0,w,c
  8737   00663C  26D9               	addwf	fsr2l,f,c
  8738   00663E  5056               	movf	(Apply_Filter@samples+1)^0,w,c
  8739   006640  22DA               	addwfc	fsr2h,f,c
  8740   006642  CFDE F045          	movff	postinc2,___fladd@a
  8741   006646  CFDE F046          	movff	postinc2,___fladd@a+1
  8742   00664A  CFDE F047          	movff	postinc2,___fladd@a+2
  8743   00664E  CFDE F048          	movff	postinc2,___fladd@a+3
  8744   006652  EC0B  F01E         	call	___fladd	;wreg free
  8745   006656  C041  F060         	movff	?___fladd,Apply_Filter@sum
  8746   00665A  C042  F061         	movff	?___fladd+1,Apply_Filter@sum+1
  8747   00665E  C043  F062         	movff	?___fladd+2,Apply_Filter@sum+2
  8748   006662  C044  F063         	movff	?___fladd+3,Apply_Filter@sum+3
  8749   006666                     
  8750                           ;newmain.c: 400:     }
  8751   006666  0100               	movlb	0	; () banked
  8752   006668  4B64               	infsnz	Apply_Filter@i& (0+255),f,b
  8753   00666A  2B65               	incf	(Apply_Filter@i+1)& (0+255),f,b
  8754   00666C                     
  8755                           ; BSR set to: 0
  8756   00666C  BF65               	btfsc	(Apply_Filter@i+1)& (0+255),7,b
  8757   00666E  EF42  F033         	goto	u9651
  8758   006672  5165               	movf	(Apply_Filter@i+1)& (0+255),w,b
  8759   006674  E109               	bnz	u9650
  8760   006676  0E05               	movlw	5
  8761   006678  5D64               	subwf	Apply_Filter@i& (0+255),w,b
  8762   00667A  A0D8               	btfss	status,0,c
  8763   00667C  EF42  F033         	goto	u9651
  8764   006680  EF44  F033         	goto	u9650
  8765   006684                     u9651:
  8766   006684  EF0D  F033         	goto	l7372
  8767   006688                     u9650:
  8768   006688                     
  8769                           ; BSR set to: 0
  8770                           ;newmain.c: 401:     return sum / 5;
  8771   006688  C060  F028         	movff	Apply_Filter@sum,___fldiv@b
  8772   00668C  C061  F029         	movff	Apply_Filter@sum+1,___fldiv@b+1
  8773   006690  C062  F02A         	movff	Apply_Filter@sum+2,___fldiv@b+2
  8774   006694  C063  F02B         	movff	Apply_Filter@sum+3,___fldiv@b+3
  8775   006698  0E00               	movlw	0
  8776   00669A  6E2C               	movwf	___fldiv@a^0,c
  8777   00669C  0E00               	movlw	0
  8778   00669E  6E2D               	movwf	(___fldiv@a+1)^0,c
  8779   0066A0  0EA0               	movlw	160
  8780   0066A2  6E2E               	movwf	(___fldiv@a+2)^0,c
  8781   0066A4  0E40               	movlw	64
  8782   0066A6  6E2F               	movwf	(___fldiv@a+3)^0,c
  8783   0066A8  EC68  F024         	call	___fldiv	;wreg free
  8784   0066AC  C028  F051         	movff	?___fldiv,?_Apply_Filter
  8785   0066B0  C029  F052         	movff	?___fldiv+1,?_Apply_Filter+1
  8786   0066B4  C02A  F053         	movff	?___fldiv+2,?_Apply_Filter+2
  8787   0066B8  C02B  F054         	movff	?___fldiv+3,?_Apply_Filter+3
  8788   0066BC  0012               	return		;funcret
  8789   0066BE                     __end_of_Apply_Filter:
  8790                           	callstack 0
  8791                           
  8792 ;; *************** function _ADC_Read *****************
  8793 ;; Defined at:
  8794 ;;		line 451 in file "newmain.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  channel         1    wreg     unsigned char 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  channel         1    4[COMRAM] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  2    0[COMRAM] unsigned int 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8808 ;;      Params:         2       0       0       0       0       0       0       0       0
  8809 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8810 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8811 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8812 ;;Total ram usage:        5 bytes
  8813 ;; Hardware stack levels used: 1
  8814 ;; Hardware stack levels required when called: 1
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_main
  8819 ;;		_Read_Sensors
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text11
  8824   006E1A                     __ptext11:
  8825                           	callstack 0
  8826   006E1A                     _ADC_Read:
  8827                           	callstack 28
  8828                           
  8829                           ;incstack = 0
  8830                           ;ADC_Read@channel stored from wreg
  8831   006E1A  6E05               	movwf	ADC_Read@channel^0,c
  8832   006E1C                     
  8833                           ;newmain.c: 452:     ADCON0bits.CHS = channel;
  8834   006E1C  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  8835   006E20  4603               	rlncf	??_ADC_Read^0,f,c
  8836   006E22  4603               	rlncf	??_ADC_Read^0,f,c
  8837   006E24  50C2               	movf	194,w,c	;volatile
  8838   006E26  1803               	xorwf	??_ADC_Read^0,w,c
  8839   006E28  0BC3               	andlw	-61
  8840   006E2A  1803               	xorwf	??_ADC_Read^0,w,c
  8841   006E2C  6EC2               	movwf	194,c	;volatile
  8842   006E2E                     
  8843                           ;newmain.c: 453:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  8844   006E2E  0E14               	movlw	20
  8845   006E30                     u10847:
  8846   006E30  2EE8               	decfsz	wreg,f,c
  8847   006E32  D7FE               	bra	u10847
  8848   006E34                     
  8849                           ;newmain.c: 454:     ADCON0bits.GO = 1;
  8850   006E34  82C2               	bsf	194,1,c	;volatile
  8851   006E36                     l273:
  8852   006E36  B2C2               	btfsc	194,1,c	;volatile
  8853   006E38  EF20  F037         	goto	u9611
  8854   006E3C  EF22  F037         	goto	u9610
  8855   006E40                     u9611:
  8856   006E40  EF1B  F037         	goto	l273
  8857   006E44                     u9610:
  8858   006E44                     
  8859                           ;newmain.c: 456:     return ((unsigned int)ADRESH << 8) | ADRESL;
  8860   006E44  50C4               	movf	196,w,c	;volatile
  8861   006E46  6E03               	movwf	??_ADC_Read^0,c
  8862   006E48  50C3               	movf	195,w,c	;volatile
  8863   006E4A  6E01               	movwf	?_ADC_Read^0,c
  8864   006E4C  C003  F002         	movff	??_ADC_Read,?_ADC_Read+1
  8865   006E50  0012               	return		;funcret
  8866   006E52                     __end_of_ADC_Read:
  8867                           	callstack 0
  8868                           
  8869 ;; *************** function _Interrupt_Init *****************
  8870 ;; Defined at:
  8871 ;;		line 459 in file "newmain.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;		None
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;		None
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  1    wreg      void 
  8878 ;; Registers used:
  8879 ;;		None
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8885 ;;      Params:         0       0       0       0       0       0       0       0       0
  8886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8888 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8889 ;;Total ram usage:        0 bytes
  8890 ;; Hardware stack levels used: 1
  8891 ;; Hardware stack levels required when called: 1
  8892 ;; This function calls:
  8893 ;;		Nothing
  8894 ;; This function is called by:
  8895 ;;		_main
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899                           	psect	text12
  8900   006F50                     __ptext12:
  8901                           	callstack 0
  8902   006F50                     _Interrupt_Init:
  8903                           	callstack 29
  8904   006F50                     
  8905                           ;newmain.c: 460:     TRISBbits.TRISB1 = 1;
  8906   006F50  8293               	bsf	147,1,c	;volatile
  8907                           
  8908                           ;newmain.c: 461:     INTCON2bits.INTEDG1 = 0;
  8909   006F52  9AF1               	bcf	241,5,c	;volatile
  8910                           
  8911                           ;newmain.c: 462:     INTCON3bits.INT1IE = 1;
  8912   006F54  86F0               	bsf	240,3,c	;volatile
  8913                           
  8914                           ;newmain.c: 463:     INTCON3bits.INT1IP = 1;
  8915   006F56  8CF0               	bsf	240,6,c	;volatile
  8916                           
  8917                           ;newmain.c: 464:     RCONbits.IPEN = 1;
  8918   006F58  8ED0               	bsf	208,7,c	;volatile
  8919                           
  8920                           ;newmain.c: 465:     INTCONbits.GIEH = 1;
  8921   006F5A  8EF2               	bsf	242,7,c	;volatile
  8922                           
  8923                           ;newmain.c: 466:     INTCONbits.GIEL = 1;
  8924   006F5C  8CF2               	bsf	242,6,c	;volatile
  8925   006F5E  0012               	return		;funcret
  8926   006F60                     __end_of_Interrupt_Init:
  8927                           	callstack 0
  8928                           
  8929 ;; *************** function _Handle_Test_Events *****************
  8930 ;; Defined at:
  8931 ;;		line 263 in file "newmain.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;		None
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;  test_data      50  202[BANK1 ] unsigned char [50]
  8936 ;;  water_used      4  252[BANK1 ] float 
  8937 ;; Return value:  Size  Location     Type
  8938 ;;                  1    wreg      void 
  8939 ;; Registers used:
  8940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8941 ;; Tracked objects:
  8942 ;;		On entry : 0/0
  8943 ;;		On exit  : 0/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8946 ;;      Params:         0       0       0       0       0       0       0       0       0
  8947 ;;      Locals:         0       0      54       0       0       0       0       0       0
  8948 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8949 ;;      Totals:         0       2      54       0       0       0       0       0       0
  8950 ;;Total ram usage:       56 bytes
  8951 ;; Hardware stack levels used: 1
  8952 ;; Hardware stack levels required when called: 10
  8953 ;; This function calls:
  8954 ;;		_Send_History_Event
  8955 ;;		___flsub
  8956 ;;		_sprintf
  8957 ;; This function is called by:
  8958 ;;		_main
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text13
  8963   006102                     __ptext13:
  8964                           	callstack 0
  8965   006102                     _Handle_Test_Events:
  8966                           	callstack 20
  8967   006102                     
  8968                           ;newmain.c: 264:     static bool prev_test = 0;;newmain.c: 267:     if(trigger_test && !
      +                          prev_test) {
  8969   006102  505E               	movf	_trigger_test^0,w,c
  8970   006104  B4D8               	btfsc	status,2,c
  8971   006106  EF87  F030         	goto	u10581
  8972   00610A  EF89  F030         	goto	u10580
  8973   00610E                     u10581:
  8974   00610E  EF9D  F030         	goto	l8020
  8975   006112                     u10580:
  8976   006112  0103               	movlb	3	; () banked
  8977   006114  5172               	movf	Handle_Test_Events@prev_test& (0+255),w,b
  8978   006116  A4D8               	btfss	status,2,c
  8979   006118  EF90  F030         	goto	u10591
  8980   00611C  EF92  F030         	goto	u10590
  8981   006120                     u10591:
  8982   006120  EF9D  F030         	goto	l8020
  8983   006124                     u10590:
  8984   006124                     
  8985                           ; BSR set to: 3
  8986                           ;newmain.c: 268:         Send_History_Event("test_start", "");
  8987   006124  0EB9               	movlw	low STR_8
  8988   006126  0100               	movlb	0	; () banked
  8989   006128  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  8990   00612A  0E7F               	movlw	high STR_8
  8991   00612C  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  8992   00612E  0E61               	movlw	low (STR_16+29)
  8993   006130  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  8994   006132  0E7F               	movlw	high (STR_16+29)
  8995   006134  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  8996   006136  EC10  F035         	call	_Send_History_Event	;wreg free
  8997   00613A                     l8020:
  8998                           
  8999                           ;newmain.c: 272:     if(!trigger_test && prev_test) {
  9000   00613A  505E               	movf	_trigger_test^0,w,c
  9001   00613C  A4D8               	btfss	status,2,c
  9002   00613E  EFA3  F030         	goto	u10601
  9003   006142  EFA5  F030         	goto	u10600
  9004   006146                     u10601:
  9005   006146  EF00  F031         	goto	l8036
  9006   00614A                     u10600:
  9007   00614A  0103               	movlb	3	; () banked
  9008   00614C  5172               	movf	Handle_Test_Events@prev_test& (0+255),w,b
  9009   00614E  B4D8               	btfsc	status,2,c
  9010   006150  EFAC  F030         	goto	u10611
  9011   006154  EFAE  F030         	goto	u10610
  9012   006158                     u10611:
  9013   006158  EF00  F031         	goto	l8036
  9014   00615C                     u10610:
  9015   00615C                     
  9016                           ; BSR set to: 3
  9017                           ;newmain.c: 273:         float water_used = total_flow - test_start_flow;
  9018   00615C  C350  F051         	movff	_total_flow,___flsub@b
  9019   006160  C351  F052         	movff	_total_flow+1,___flsub@b+1
  9020   006164  C352  F053         	movff	_total_flow+2,___flsub@b+2
  9021   006168  C353  F054         	movff	_total_flow+3,___flsub@b+3
  9022   00616C  C334  F055         	movff	_test_start_flow,___flsub@a
  9023   006170  C335  F056         	movff	_test_start_flow+1,___flsub@a+1
  9024   006174  C336  F057         	movff	_test_start_flow+2,___flsub@a+2
  9025   006178  C337  F058         	movff	_test_start_flow+3,___flsub@a+3
  9026   00617C  ECA8  F036         	call	___flsub	;wreg free
  9027   006180  C051  F1FC         	movff	?___flsub,Handle_Test_Events@water_used
  9028   006184  C052  F1FD         	movff	?___flsub+1,Handle_Test_Events@water_used+1
  9029   006188  C053  F1FE         	movff	?___flsub+2,Handle_Test_Events@water_used+2
  9030   00618C  C054  F1FF         	movff	?___flsub+3,Handle_Test_Events@water_used+3
  9031   006190                     
  9032                           ;newmain.c: 275:         char test_data[50];;newmain.c: 276:         sprintf(test_data, 
      +                          ",\"water\":%.2f", water_used);
  9033   006190  0ECA               	movlw	low Handle_Test_Events@test_data
  9034   006192  0100               	movlb	0	; () banked
  9035   006194  6FB0               	movwf	sprintf@s& (0+255),b
  9036   006196  0E01               	movlw	high Handle_Test_Events@test_data
  9037   006198  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9038   00619A  0E71               	movlw	low (STR_6+15)
  9039   00619C  6FB2               	movwf	sprintf@fmt& (0+255),b
  9040   00619E  0E7F               	movlw	high (STR_6+15)
  9041   0061A0  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9042   0061A2  C1FC  F0B4         	movff	Handle_Test_Events@water_used,?_sprintf+4
  9043   0061A6  C1FD  F0B5         	movff	Handle_Test_Events@water_used+1,?_sprintf+5
  9044   0061AA  C1FE  F0B6         	movff	Handle_Test_Events@water_used+2,?_sprintf+6
  9045   0061AE  C1FF  F0B7         	movff	Handle_Test_Events@water_used+3,?_sprintf+7
  9046   0061B2  ECCB  F036         	call	_sprintf	;wreg free
  9047   0061B6                     
  9048                           ;newmain.c: 277:         Send_History_Event("test_end", test_data);
  9049   0061B6  0ED7               	movlw	low STR_11
  9050   0061B8  0100               	movlb	0	; () banked
  9051   0061BA  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9052   0061BC  0E7F               	movlw	high STR_11
  9053   0061BE  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9054   0061C0  0ECA               	movlw	low Handle_Test_Events@test_data
  9055   0061C2  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9056   0061C4  0E01               	movlw	high Handle_Test_Events@test_data
  9057   0061C6  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9058   0061C8  EC10  F035         	call	_Send_History_Event	;wreg free
  9059   0061CC                     
  9060                           ;newmain.c: 280:         _delay((unsigned long)((3000)*(8000000/4000.0)));
  9061   0061CC  0E1F               	movlw	31
  9062   0061CE  0100               	movlb	0	; () banked
  9063   0061D0  6FE5               	movwf	(??_Handle_Test_Events+1)& (0+255),b
  9064   0061D2  0E71               	movlw	113
  9065   0061D4  6FE4               	movwf	??_Handle_Test_Events& (0+255),b
  9066   0061D6  0E1E               	movlw	30
  9067   0061D8                     u10857:
  9068   0061D8  2EE8               	decfsz	wreg,f,c
  9069   0061DA  D7FE               	bra	u10857
  9070   0061DC  2FE4               	decfsz	??_Handle_Test_Events& (0+255),f,b
  9071   0061DE  D7FC               	bra	u10857
  9072   0061E0  2FE5               	decfsz	(??_Handle_Test_Events+1)& (0+255),f,b
  9073   0061E2  D7FA               	bra	u10857
  9074   0061E4  0000               	nop	
  9075   0061E6                     
  9076                           ;newmain.c: 281:         total_flow = 0.0;
  9077   0061E6  0E00               	movlw	0
  9078   0061E8  0103               	movlb	3	; () banked
  9079   0061EA  6F50               	movwf	_total_flow& (0+255),b
  9080   0061EC  0E00               	movlw	0
  9081   0061EE  6F51               	movwf	(_total_flow+1)& (0+255),b
  9082   0061F0  0E00               	movlw	0
  9083   0061F2  6F52               	movwf	(_total_flow+2)& (0+255),b
  9084   0061F4  0E00               	movlw	0
  9085   0061F6  6F53               	movwf	(_total_flow+3)& (0+255),b
  9086   0061F8                     
  9087                           ; BSR set to: 3
  9088                           ;newmain.c: 282:         pulse_count = 0;
  9089   0061F8  0E00               	movlw	0
  9090   0061FA  6F6F               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  9091   0061FC  0E00               	movlw	0
  9092   0061FE  6F6E               	movwf	_pulse_count& (0+255),b	;volatile
  9093   006200                     l8036:
  9094                           
  9095                           ;newmain.c: 285:     prev_test = trigger_test;
  9096   006200  C05E  F372         	movff	_trigger_test,Handle_Test_Events@prev_test
  9097   006204  0012               	return		;funcret
  9098   006206                     __end_of_Handle_Test_Events:
  9099                           	callstack 0
  9100                           
  9101 ;; *************** function _Handle_Shutdown_Events *****************
  9102 ;; Defined at:
  9103 ;;		line 288 in file "newmain.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;		None
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9117 ;;      Params:         0       0       0       0       0       0       0       0       0
  9118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9120 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9121 ;;Total ram usage:        0 bytes
  9122 ;; Hardware stack levels used: 1
  9123 ;; Hardware stack levels required when called: 10
  9124 ;; This function calls:
  9125 ;;		_Send_History_Event
  9126 ;; This function is called by:
  9127 ;;		_main
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           	psect	text14
  9132   006B3C                     __ptext14:
  9133                           	callstack 0
  9134   006B3C                     _Handle_Shutdown_Events:
  9135                           	callstack 20
  9136   006B3C                     
  9137                           ;newmain.c: 289:     static bool prev_shutdown = 0;;newmain.c: 292:     if(shutdown_syst
      +                          em && !prev_shutdown) {
  9138   006B3C  0103               	movlb	3	; () banked
  9139   006B3E  5173               	movf	_shutdown_system& (0+255),w,b
  9140   006B40  B4D8               	btfsc	status,2,c
  9141   006B42  EFA5  F035         	goto	u10621
  9142   006B46  EFA7  F035         	goto	u10620
  9143   006B4A                     u10621:
  9144   006B4A  EFBA  F035         	goto	l8044
  9145   006B4E                     u10620:
  9146   006B4E                     
  9147                           ; BSR set to: 3
  9148   006B4E  5171               	movf	Handle_Shutdown_Events@prev_shutdown& (0+255),w,b
  9149   006B50  A4D8               	btfss	status,2,c
  9150   006B52  EFAD  F035         	goto	u10631
  9151   006B56  EFAF  F035         	goto	u10630
  9152   006B5A                     u10631:
  9153   006B5A  EFBA  F035         	goto	l8044
  9154   006B5E                     u10630:
  9155   006B5E                     
  9156                           ; BSR set to: 3
  9157                           ;newmain.c: 293:         Send_History_Event("shutdown", "");
  9158   006B5E  0EE0               	movlw	low STR_12
  9159   006B60  0100               	movlb	0	; () banked
  9160   006B62  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9161   006B64  0E7F               	movlw	high STR_12
  9162   006B66  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9163   006B68  0E61               	movlw	low (STR_16+29)
  9164   006B6A  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9165   006B6C  0E7F               	movlw	high (STR_16+29)
  9166   006B6E  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9167   006B70  EC10  F035         	call	_Send_History_Event	;wreg free
  9168   006B74                     l8044:
  9169                           
  9170                           ;newmain.c: 297:     if(!shutdown_system && prev_shutdown) {
  9171   006B74  0103               	movlb	3	; () banked
  9172   006B76  5173               	movf	_shutdown_system& (0+255),w,b
  9173   006B78  A4D8               	btfss	status,2,c
  9174   006B7A  EFC1  F035         	goto	u10641
  9175   006B7E  EFC3  F035         	goto	u10640
  9176   006B82                     u10641:
  9177   006B82  EFD6  F035         	goto	l8050
  9178   006B86                     u10640:
  9179   006B86                     
  9180                           ; BSR set to: 3
  9181   006B86  5171               	movf	Handle_Shutdown_Events@prev_shutdown& (0+255),w,b
  9182   006B88  B4D8               	btfsc	status,2,c
  9183   006B8A  EFC9  F035         	goto	u10651
  9184   006B8E  EFCB  F035         	goto	u10650
  9185   006B92                     u10651:
  9186   006B92  EFD6  F035         	goto	l8050
  9187   006B96                     u10650:
  9188   006B96                     
  9189                           ; BSR set to: 3
  9190                           ;newmain.c: 298:         Send_History_Event("resume", "");
  9191   006B96  0EF0               	movlw	low STR_14
  9192   006B98  0100               	movlb	0	; () banked
  9193   006B9A  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9194   006B9C  0E7F               	movlw	high STR_14
  9195   006B9E  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9196   006BA0  0E61               	movlw	low (STR_16+29)
  9197   006BA2  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9198   006BA4  0E7F               	movlw	high (STR_16+29)
  9199   006BA6  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9200   006BA8  EC10  F035         	call	_Send_History_Event	;wreg free
  9201   006BAC                     l8050:
  9202                           
  9203                           ;newmain.c: 301:     prev_shutdown = shutdown_system;
  9204   006BAC  C373  F371         	movff	_shutdown_system,Handle_Shutdown_Events@prev_shutdown
  9205   006BB0  0012               	return		;funcret
  9206   006BB2                     __end_of_Handle_Shutdown_Events:
  9207                           	callstack 0
  9208                           
  9209 ;; *************** function _Handle_Fire_Events *****************
  9210 ;; Defined at:
  9211 ;;		line 221 in file "newmain.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;		None
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  end_data      150    0[BANK2 ] unsigned char [150]
  9216 ;;  water_used      4  138[BANK0 ] float 
  9217 ;;  duration        4  134[BANK0 ] unsigned long 
  9218 ;;  start_data    100  150[BANK2 ] unsigned char [100]
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  1    wreg      void 
  9221 ;; Registers used:
  9222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9228 ;;      Params:         0       0       0       0       0       0       0       0       0
  9229 ;;      Locals:         0       8       0     250       0       0       0       0       0
  9230 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9231 ;;      Totals:         0      10       0     250       0       0       0       0       0
  9232 ;;Total ram usage:      260 bytes
  9233 ;; Hardware stack levels used: 1
  9234 ;; Hardware stack levels required when called: 10
  9235 ;; This function calls:
  9236 ;;		_Send_History_Event
  9237 ;;		___flge
  9238 ;;		___flsub
  9239 ;;		___lldiv
  9240 ;;		_sprintf
  9241 ;;		_strcpy
  9242 ;; This function is called by:
  9243 ;;		_main
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           	psect	text15
  9248   004FE6                     __ptext15:
  9249                           	callstack 0
  9250   004FE6                     _Handle_Fire_Events:
  9251                           	callstack 20
  9252   004FE6                     
  9253                           ;newmain.c: 223:     if(fire_alarm && !prev_fire_alarm) {
  9254   004FE6  0103               	movlb	3	; () banked
  9255   004FE8  5176               	movf	_fire_alarm& (0+255),w,b
  9256   004FEA  B4D8               	btfsc	status,2,c
  9257   004FEC  EFFA  F027         	goto	u10511
  9258   004FF0  EFFC  F027         	goto	u10510
  9259   004FF4                     u10511:
  9260   004FF4  EFA5  F028         	goto	l7996
  9261   004FF8                     u10510:
  9262   004FF8                     
  9263                           ; BSR set to: 3
  9264   004FF8  5175               	movf	_prev_fire_alarm& (0+255),w,b
  9265   004FFA  A4D8               	btfss	status,2,c
  9266   004FFC  EF02  F028         	goto	u10521
  9267   005000  EF04  F028         	goto	u10520
  9268   005004                     u10521:
  9269   005004  EFA5  F028         	goto	l7996
  9270   005008                     u10520:
  9271   005008                     
  9272                           ; BSR set to: 3
  9273                           ;newmain.c: 224:         fire_start_time = system_millis;
  9274   005008  C2FA  F348         	movff	_system_millis,_fire_start_time
  9275   00500C  C2FB  F349         	movff	_system_millis+1,_fire_start_time+1
  9276   005010  C2FC  F34A         	movff	_system_millis+2,_fire_start_time+2
  9277   005014  C2FD  F34B         	movff	_system_millis+3,_fire_start_time+3
  9278                           
  9279                           ;newmain.c: 225:         fire_start_temp = temperature;
  9280   005018  C364  F344         	movff	_temperature,_fire_start_temp
  9281   00501C  C365  F345         	movff	_temperature+1,_fire_start_temp+1
  9282   005020  C366  F346         	movff	_temperature+2,_fire_start_temp+2
  9283   005024  C367  F347         	movff	_temperature+3,_fire_start_temp+3
  9284                           
  9285                           ;newmain.c: 226:         fire_start_flame = flame_intensity;
  9286   005028  C360  F340         	movff	_flame_intensity,_fire_start_flame
  9287   00502C  C361  F341         	movff	_flame_intensity+1,_fire_start_flame+1
  9288   005030  C362  F342         	movff	_flame_intensity+2,_fire_start_flame+2
  9289   005034  C363  F343         	movff	_flame_intensity+3,_fire_start_flame+3
  9290                           
  9291                           ;newmain.c: 227:         fire_start_co = co_ppm;
  9292   005038  C358  F33C         	movff	_co_ppm,_fire_start_co
  9293   00503C  C359  F33D         	movff	_co_ppm+1,_fire_start_co+1
  9294   005040  C35A  F33E         	movff	_co_ppm+2,_fire_start_co+2
  9295   005044  C35B  F33F         	movff	_co_ppm+3,_fire_start_co+3
  9296                           
  9297                           ;newmain.c: 228:         fire_start_flow = total_flow;
  9298   005048  C350  F338         	movff	_total_flow,_fire_start_flow
  9299   00504C  C351  F339         	movff	_total_flow+1,_fire_start_flow+1
  9300   005050  C352  F33A         	movff	_total_flow+2,_fire_start_flow+2
  9301   005054  C353  F33B         	movff	_total_flow+3,_fire_start_flow+3
  9302   005058                     
  9303                           ; BSR set to: 3
  9304                           ;newmain.c: 231:         if(flame_detected) {
  9305   005058  5179               	movf	_flame_detected& (0+255),w,b
  9306   00505A  B4D8               	btfsc	status,2,c
  9307   00505C  EF32  F028         	goto	u10531
  9308   005060  EF34  F028         	goto	u10530
  9309   005064                     u10531:
  9310   005064  EF40  F028         	goto	l7984
  9311   005068                     u10530:
  9312   005068                     
  9313                           ; BSR set to: 3
  9314                           ;newmain.c: 232:             strcpy(fire_trigger_sensor, "flame_sensor");
  9315   005068  0ECA               	movlw	low _fire_trigger_sensor
  9316   00506A  6E01               	movwf	strcpy@dest^0,c
  9317   00506C  0E03               	movlw	high _fire_trigger_sensor
  9318   00506E  6E02               	movwf	(strcpy@dest+1)^0,c
  9319   005070  0EA1               	movlw	low STR_1
  9320   005072  6E03               	movwf	strcpy@src^0,c
  9321   005074  0E7F               	movlw	high STR_1
  9322   005076  6E04               	movwf	(strcpy@src+1)^0,c
  9323   005078  EC29  F037         	call	_strcpy	;wreg free
  9324                           
  9325                           ;newmain.c: 233:         } else if(temperature >= 40.0) {
  9326   00507C  EF8B  F028         	goto	l7992
  9327   005080                     l7984:
  9328                           
  9329                           ; BSR set to: 3
  9330   005080  C364  F060         	movff	_temperature,___flge@ff1
  9331   005084  C365  F061         	movff	_temperature+1,___flge@ff1+1
  9332   005088  C366  F062         	movff	_temperature+2,___flge@ff1+2
  9333   00508C  C367  F063         	movff	_temperature+3,___flge@ff1+3
  9334   005090  0E00               	movlw	0
  9335   005092  0100               	movlb	0	; () banked
  9336   005094  6F64               	movwf	___flge@ff2& (0+255),b
  9337   005096  0E00               	movlw	0
  9338   005098  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9339   00509A  0E20               	movlw	32
  9340   00509C  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9341   00509E  0E42               	movlw	66
  9342   0050A0  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9343   0050A2  ECFE  F02F         	call	___flge	;wreg free
  9344   0050A6  0100               	movlb	0	; () banked
  9345   0050A8  A0D8               	btfss	status,0,c
  9346   0050AA  EF59  F028         	goto	u10541
  9347   0050AE  EF5B  F028         	goto	u10540
  9348   0050B2                     u10541:
  9349   0050B2  EF67  F028         	goto	l7988
  9350   0050B6                     u10540:
  9351   0050B6                     
  9352                           ; BSR set to: 0
  9353                           ;newmain.c: 234:             strcpy(fire_trigger_sensor, "temperature_sensor");
  9354   0050B6  0ECA               	movlw	low _fire_trigger_sensor
  9355   0050B8  6E01               	movwf	strcpy@dest^0,c
  9356   0050BA  0E03               	movlw	high _fire_trigger_sensor
  9357   0050BC  6E02               	movwf	(strcpy@dest+1)^0,c
  9358   0050BE  0E7F               	movlw	low STR_2
  9359   0050C0  6E03               	movwf	strcpy@src^0,c
  9360   0050C2  0E7F               	movlw	high STR_2
  9361   0050C4  6E04               	movwf	(strcpy@src+1)^0,c
  9362   0050C6  EC29  F037         	call	_strcpy	;wreg free
  9363                           
  9364                           ;newmain.c: 235:         } else if(co_ppm >= 50.0) {
  9365   0050CA  EF8B  F028         	goto	l7992
  9366   0050CE                     l7988:
  9367                           
  9368                           ; BSR set to: 0
  9369   0050CE  C358  F060         	movff	_co_ppm,___flge@ff1
  9370   0050D2  C359  F061         	movff	_co_ppm+1,___flge@ff1+1
  9371   0050D6  C35A  F062         	movff	_co_ppm+2,___flge@ff1+2
  9372   0050DA  C35B  F063         	movff	_co_ppm+3,___flge@ff1+3
  9373   0050DE  0E00               	movlw	0
  9374   0050E0  6F64               	movwf	___flge@ff2& (0+255),b
  9375   0050E2  0E00               	movlw	0
  9376   0050E4  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9377   0050E6  0E48               	movlw	72
  9378   0050E8  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9379   0050EA  0E42               	movlw	66
  9380   0050EC  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9381   0050EE  ECFE  F02F         	call	___flge	;wreg free
  9382   0050F2  0100               	movlb	0	; () banked
  9383   0050F4  A0D8               	btfss	status,0,c
  9384   0050F6  EF7F  F028         	goto	u10551
  9385   0050FA  EF81  F028         	goto	u10550
  9386   0050FE                     u10551:
  9387   0050FE  EF8B  F028         	goto	l7992
  9388   005102                     u10550:
  9389   005102                     
  9390                           ; BSR set to: 0
  9391                           ;newmain.c: 236:             strcpy(fire_trigger_sensor, "co_sensor");
  9392   005102  0ECA               	movlw	low _fire_trigger_sensor
  9393   005104  6E01               	movwf	strcpy@dest^0,c
  9394   005106  0E03               	movlw	high _fire_trigger_sensor
  9395   005108  6E02               	movwf	(strcpy@dest+1)^0,c
  9396   00510A  0EC4               	movlw	low STR_3
  9397   00510C  6E03               	movwf	strcpy@src^0,c
  9398   00510E  0E7F               	movlw	high STR_3
  9399   005110  6E04               	movwf	(strcpy@src+1)^0,c
  9400   005112  EC29  F037         	call	_strcpy	;wreg free
  9401   005116                     l7992:
  9402                           
  9403                           ;newmain.c: 240:         char start_data[100];;newmain.c: 241:         sprintf(start_dat
      +                          a, ",\"sensor\":\"%s\"", fire_trigger_sensor);
  9404   005116  0E96               	movlw	low Handle_Fire_Events@start_data
  9405   005118  0100               	movlb	0	; () banked
  9406   00511A  6FB0               	movwf	sprintf@s& (0+255),b
  9407   00511C  0E02               	movlw	high Handle_Fire_Events@start_data
  9408   00511E  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9409   005120  0E92               	movlw	low STR_4
  9410   005122  6FB2               	movwf	sprintf@fmt& (0+255),b
  9411   005124  0E7F               	movlw	high STR_4
  9412   005126  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9413   005128  0ECA               	movlw	low _fire_trigger_sensor
  9414   00512A  6FB4               	movwf	(?_sprintf+4)& (0+255),b
  9415   00512C  0E03               	movlw	high _fire_trigger_sensor
  9416   00512E  6FB5               	movwf	(?_sprintf+5)& (0+255),b
  9417   005130  ECCB  F036         	call	_sprintf	;wreg free
  9418   005134                     
  9419                           ;newmain.c: 242:         Send_History_Event("fire_start", start_data);
  9420   005134  0EAE               	movlw	low STR_5
  9421   005136  0100               	movlb	0	; () banked
  9422   005138  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9423   00513A  0E7F               	movlw	high STR_5
  9424   00513C  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9425   00513E  0E96               	movlw	low Handle_Fire_Events@start_data
  9426   005140  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9427   005142  0E02               	movlw	high Handle_Fire_Events@start_data
  9428   005144  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9429   005146  EC10  F035         	call	_Send_History_Event	;wreg free
  9430   00514A                     l7996:
  9431                           
  9432                           ;newmain.c: 246:     if(!fire_alarm && prev_fire_alarm) {
  9433   00514A  0103               	movlb	3	; () banked
  9434   00514C  5176               	movf	_fire_alarm& (0+255),w,b
  9435   00514E  A4D8               	btfss	status,2,c
  9436   005150  EFAC  F028         	goto	u10561
  9437   005154  EFAE  F028         	goto	u10560
  9438   005158                     u10561:
  9439   005158  EF35  F029         	goto	l8012
  9440   00515C                     u10560:
  9441   00515C                     
  9442                           ; BSR set to: 3
  9443   00515C  5175               	movf	_prev_fire_alarm& (0+255),w,b
  9444   00515E  B4D8               	btfsc	status,2,c
  9445   005160  EFB4  F028         	goto	u10571
  9446   005164  EFB6  F028         	goto	u10570
  9447   005168                     u10571:
  9448   005168  EF35  F029         	goto	l8012
  9449   00516C                     u10570:
  9450   00516C                     
  9451                           ; BSR set to: 3
  9452                           ;newmain.c: 247:         unsigned long duration = (system_millis - fire_start_time) / 10
      +                          00;
  9453   00516C  5148               	movf	_fire_start_time& (0+255),w,b
  9454   00516E  0102               	movlb	2	; () banked
  9455   005170  5DFA               	subwf	_system_millis& (0+255),w,b
  9456   005172  6E01               	movwf	___lldiv@dividend^0,c
  9457   005174  0103               	movlb	3	; () banked
  9458   005176  5149               	movf	(_fire_start_time+1)& (0+255),w,b
  9459   005178  0102               	movlb	2	; () banked
  9460   00517A  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  9461   00517C  6E02               	movwf	(___lldiv@dividend+1)^0,c
  9462   00517E  0103               	movlb	3	; () banked
  9463   005180  514A               	movf	(_fire_start_time+2)& (0+255),w,b
  9464   005182  0102               	movlb	2	; () banked
  9465   005184  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  9466   005186  6E03               	movwf	(___lldiv@dividend+2)^0,c
  9467   005188  0103               	movlb	3	; () banked
  9468   00518A  514B               	movf	(_fire_start_time+3)& (0+255),w,b
  9469   00518C  0102               	movlb	2	; () banked
  9470   00518E  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  9471   005190  6E04               	movwf	(___lldiv@dividend+3)^0,c
  9472   005192  0EE8               	movlw	232
  9473   005194  6E05               	movwf	___lldiv@divisor^0,c
  9474   005196  0E03               	movlw	3
  9475   005198  6E06               	movwf	(___lldiv@divisor+1)^0,c
  9476   00519A  0E00               	movlw	0
  9477   00519C  6E07               	movwf	(___lldiv@divisor+2)^0,c
  9478   00519E  0E00               	movlw	0
  9479   0051A0  6E08               	movwf	(___lldiv@divisor+3)^0,c
  9480   0051A2  ECBE  F034         	call	___lldiv	;wreg free
  9481   0051A6  C001  F0E6         	movff	?___lldiv,Handle_Fire_Events@duration
  9482   0051AA  C002  F0E7         	movff	?___lldiv+1,Handle_Fire_Events@duration+1
  9483   0051AE  C003  F0E8         	movff	?___lldiv+2,Handle_Fire_Events@duration+2
  9484   0051B2  C004  F0E9         	movff	?___lldiv+3,Handle_Fire_Events@duration+3
  9485                           
  9486                           ;newmain.c: 248:         float water_used = total_flow - fire_start_flow;
  9487   0051B6  C350  F051         	movff	_total_flow,___flsub@b
  9488   0051BA  C351  F052         	movff	_total_flow+1,___flsub@b+1
  9489   0051BE  C352  F053         	movff	_total_flow+2,___flsub@b+2
  9490   0051C2  C353  F054         	movff	_total_flow+3,___flsub@b+3
  9491   0051C6  C338  F055         	movff	_fire_start_flow,___flsub@a
  9492   0051CA  C339  F056         	movff	_fire_start_flow+1,___flsub@a+1
  9493   0051CE  C33A  F057         	movff	_fire_start_flow+2,___flsub@a+2
  9494   0051D2  C33B  F058         	movff	_fire_start_flow+3,___flsub@a+3
  9495   0051D6  ECA8  F036         	call	___flsub	;wreg free
  9496   0051DA  C051  F0EA         	movff	?___flsub,Handle_Fire_Events@water_used
  9497   0051DE  C052  F0EB         	movff	?___flsub+1,Handle_Fire_Events@water_used+1
  9498   0051E2  C053  F0EC         	movff	?___flsub+2,Handle_Fire_Events@water_used+2
  9499   0051E6  C054  F0ED         	movff	?___flsub+3,Handle_Fire_Events@water_used+3
  9500   0051EA                     
  9501                           ;newmain.c: 250:         char end_data[150];;newmain.c: 251:         sprintf(end_data, "
      +                          ,\"duration\":%lu,\"water\":%.2f", duration, water_used);
  9502   0051EA  0E00               	movlw	low Handle_Fire_Events@end_data
  9503   0051EC  0100               	movlb	0	; () banked
  9504   0051EE  6FB0               	movwf	sprintf@s& (0+255),b
  9505   0051F0  0E02               	movlw	high Handle_Fire_Events@end_data
  9506   0051F2  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9507   0051F4  0E62               	movlw	low STR_6
  9508   0051F6  6FB2               	movwf	sprintf@fmt& (0+255),b
  9509   0051F8  0E7F               	movlw	high STR_6
  9510   0051FA  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9511   0051FC  C0E6  F0B4         	movff	Handle_Fire_Events@duration,?_sprintf+4
  9512   005200  C0E7  F0B5         	movff	Handle_Fire_Events@duration+1,?_sprintf+5
  9513   005204  C0E8  F0B6         	movff	Handle_Fire_Events@duration+2,?_sprintf+6
  9514   005208  C0E9  F0B7         	movff	Handle_Fire_Events@duration+3,?_sprintf+7
  9515   00520C  C0EA  F0B8         	movff	Handle_Fire_Events@water_used,?_sprintf+8
  9516   005210  C0EB  F0B9         	movff	Handle_Fire_Events@water_used+1,?_sprintf+9
  9517   005214  C0EC  F0BA         	movff	Handle_Fire_Events@water_used+2,?_sprintf+10
  9518   005218  C0ED  F0BB         	movff	Handle_Fire_Events@water_used+3,?_sprintf+11
  9519   00521C  ECCB  F036         	call	_sprintf	;wreg free
  9520   005220                     
  9521                           ;newmain.c: 252:         Send_History_Event("fire_end", end_data);
  9522   005220  0ECE               	movlw	low STR_7
  9523   005222  0100               	movlb	0	; () banked
  9524   005224  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9525   005226  0E7F               	movlw	high STR_7
  9526   005228  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9527   00522A  0E00               	movlw	low Handle_Fire_Events@end_data
  9528   00522C  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9529   00522E  0E02               	movlw	high Handle_Fire_Events@end_data
  9530   005230  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9531   005232  EC10  F035         	call	_Send_History_Event	;wreg free
  9532   005236                     
  9533                           ;newmain.c: 255:         _delay((unsigned long)((5000)*(8000000/4000.0)));
  9534   005236  0E33               	movlw	51
  9535   005238  0100               	movlb	0	; () banked
  9536   00523A  6FE5               	movwf	(??_Handle_Fire_Events+1)& (0+255),b
  9537   00523C  0EBB               	movlw	187
  9538   00523E  6FE4               	movwf	??_Handle_Fire_Events& (0+255),b
  9539   005240  0EDF               	movlw	223
  9540   005242                     u10867:
  9541   005242  2EE8               	decfsz	wreg,f,c
  9542   005244  D7FE               	bra	u10867
  9543   005246  2FE4               	decfsz	??_Handle_Fire_Events& (0+255),f,b
  9544   005248  D7FC               	bra	u10867
  9545   00524A  2FE5               	decfsz	(??_Handle_Fire_Events+1)& (0+255),f,b
  9546   00524C  D7FA               	bra	u10867
  9547   00524E  D000               	nop2	
  9548   005250                     
  9549                           ;newmain.c: 256:         total_flow = 0.0;
  9550   005250  0E00               	movlw	0
  9551   005252  0103               	movlb	3	; () banked
  9552   005254  6F50               	movwf	_total_flow& (0+255),b
  9553   005256  0E00               	movlw	0
  9554   005258  6F51               	movwf	(_total_flow+1)& (0+255),b
  9555   00525A  0E00               	movlw	0
  9556   00525C  6F52               	movwf	(_total_flow+2)& (0+255),b
  9557   00525E  0E00               	movlw	0
  9558   005260  6F53               	movwf	(_total_flow+3)& (0+255),b
  9559   005262                     
  9560                           ; BSR set to: 3
  9561                           ;newmain.c: 257:         pulse_count = 0;
  9562   005262  0E00               	movlw	0
  9563   005264  6F6F               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  9564   005266  0E00               	movlw	0
  9565   005268  6F6E               	movwf	_pulse_count& (0+255),b	;volatile
  9566   00526A                     l8012:
  9567                           
  9568                           ; BSR set to: 3
  9569                           ;newmain.c: 260:     prev_fire_alarm = fire_alarm;
  9570   00526A  C376  F375         	movff	_fire_alarm,_prev_fire_alarm
  9571   00526E                     
  9572                           ; BSR set to: 3
  9573   00526E  0012               	return		;funcret
  9574   005270                     __end_of_Handle_Fire_Events:
  9575                           	callstack 0
  9576                           
  9577 ;; *************** function _Send_History_Event *****************
  9578 ;; Defined at:
  9579 ;;		line 304 in file "newmain.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  event_type      2  128[BANK0 ] PTR const unsigned char 
  9582 ;;		 -> STR_14(7), STR_12(9), STR_11(9), STR_8(11), 
  9583 ;;		 -> STR_7(9), STR_5(11), 
  9584 ;;  extra_data      2  130[BANK0 ] PTR const unsigned char 
  9585 ;;		 -> STR_15(1), STR_13(1), Handle_Test_Events@test_data(50), STR_9(1), 
  9586 ;;		 -> Handle_Fire_Events@end_data(150), Handle_Fire_Events@start_data(100), 
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;  i               2  200[BANK1 ] int 
  9589 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  1    wreg      void 
  9592 ;; Registers used:
  9593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9599 ;;      Params:         0       4       0       0       0       0       0       0       0
  9600 ;;      Locals:         0       0     202       0       0       0       0       0       0
  9601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9602 ;;      Totals:         0       4     202       0       0       0       0       0       0
  9603 ;;Total ram usage:      206 bytes
  9604 ;; Hardware stack levels used: 1
  9605 ;; Hardware stack levels required when called: 9
  9606 ;; This function calls:
  9607 ;;		_sprintf
  9608 ;; This function is called by:
  9609 ;;		_Handle_Fire_Events
  9610 ;;		_Handle_Test_Events
  9611 ;;		_Handle_Shutdown_Events
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           	psect	text16
  9616   006A20                     __ptext16:
  9617                           	callstack 0
  9618   006A20                     _Send_History_Event:
  9619                           	callstack 20
  9620   006A20                     
  9621                           ;newmain.c: 305:     char buffer[200];;newmain.c: 306:     sprintf(buffer, "{\"event\":\
      +                          "%s\",\"time\":%lu%s}\r\n",
  9622   006A20  0E00               	movlw	low Send_History_Event@buffer
  9623   006A22  0100               	movlb	0	; () banked
  9624   006A24  6FB0               	movwf	sprintf@s& (0+255),b
  9625   006A26  0E01               	movlw	high Send_History_Event@buffer
  9626   006A28  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9627   006A2A  0E44               	movlw	low STR_16
  9628   006A2C  6FB2               	movwf	sprintf@fmt& (0+255),b
  9629   006A2E  0E7F               	movlw	high STR_16
  9630   006A30  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9631   006A32  C0E0  F0B4         	movff	Send_History_Event@event_type,?_sprintf+4
  9632   006A36  C0E1  F0B5         	movff	Send_History_Event@event_type+1,?_sprintf+5
  9633   006A3A  C2FA  F0B6         	movff	_system_millis,?_sprintf+6
  9634   006A3E  C2FB  F0B7         	movff	_system_millis+1,?_sprintf+7
  9635   006A42  C2FC  F0B8         	movff	_system_millis+2,?_sprintf+8
  9636   006A46  C2FD  F0B9         	movff	_system_millis+3,?_sprintf+9
  9637   006A4A  C0E2  F0BA         	movff	Send_History_Event@extra_data,?_sprintf+10
  9638   006A4E  C0E3  F0BB         	movff	Send_History_Event@extra_data+1,?_sprintf+11
  9639   006A52  ECCB  F036         	call	_sprintf	;wreg free
  9640   006A56                     l204:
  9641   006A56  A2AC               	btfss	172,1,c	;volatile
  9642   006A58  EF30  F035         	goto	u9621
  9643   006A5C  EF32  F035         	goto	u9620
  9644   006A60                     u9621:
  9645   006A60  EF2B  F035         	goto	l204
  9646   006A64                     u9620:
  9647   006A64                     
  9648                           ;newmain.c: 310:     for(int i = 0; buffer[i]; i++) {
  9649   006A64  0E00               	movlw	0
  9650   006A66  0101               	movlb	1	; () banked
  9651   006A68  6FC9               	movwf	(Send_History_Event@i+1)& (0+255),b
  9652   006A6A  0E00               	movlw	0
  9653   006A6C  6FC8               	movwf	Send_History_Event@i& (0+255),b
  9654   006A6E  EF4B  F035         	goto	l7360
  9655   006A72                     l7356:
  9656                           
  9657                           ; BSR set to: 1
  9658                           ;newmain.c: 311:         TXREG = buffer[i];
  9659   006A72  0E00               	movlw	low Send_History_Event@buffer
  9660   006A74  25C8               	addwf	Send_History_Event@i& (0+255),w,b
  9661   006A76  6ED9               	movwf	fsr2l,c
  9662   006A78  0E01               	movlw	high Send_History_Event@buffer
  9663   006A7A  21C9               	addwfc	(Send_History_Event@i+1)& (0+255),w,b
  9664   006A7C  6EDA               	movwf	fsr2h,c
  9665   006A7E  50DF               	movf	indf2,w,c
  9666   006A80  6EAD               	movwf	173,c	;volatile
  9667   006A82                     l209:
  9668   006A82  A2AC               	btfss	172,1,c	;volatile
  9669   006A84  EF46  F035         	goto	u9631
  9670   006A88  EF48  F035         	goto	u9630
  9671   006A8C                     u9631:
  9672   006A8C  EF41  F035         	goto	l209
  9673   006A90                     u9630:
  9674   006A90                     
  9675                           ;newmain.c: 313:     }
  9676   006A90  0101               	movlb	1	; () banked
  9677   006A92  4BC8               	infsnz	Send_History_Event@i& (0+255),f,b
  9678   006A94  2BC9               	incf	(Send_History_Event@i+1)& (0+255),f,b
  9679   006A96                     l7360:
  9680                           
  9681                           ; BSR set to: 1
  9682   006A96  0E00               	movlw	low Send_History_Event@buffer
  9683   006A98  25C8               	addwf	Send_History_Event@i& (0+255),w,b
  9684   006A9A  6ED9               	movwf	fsr2l,c
  9685   006A9C  0E01               	movlw	high Send_History_Event@buffer
  9686   006A9E  21C9               	addwfc	(Send_History_Event@i+1)& (0+255),w,b
  9687   006AA0  6EDA               	movwf	fsr2h,c
  9688   006AA2  50DF               	movf	indf2,w,c
  9689   006AA4  A4D8               	btfss	status,2,c
  9690   006AA6  EF57  F035         	goto	u9641
  9691   006AAA  EF59  F035         	goto	u9640
  9692   006AAE                     u9641:
  9693   006AAE  EF39  F035         	goto	l7356
  9694   006AB2                     u9640:
  9695   006AB2                     
  9696                           ; BSR set to: 1
  9697   006AB2  0012               	return		;funcret
  9698   006AB4                     __end_of_Send_History_Event:
  9699                           	callstack 0
  9700                           
  9701 ;; *************** function _sprintf *****************
  9702 ;; Defined at:
  9703 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  9704 ;; Parameters:    Size  Location     Type
  9705 ;;  s               2   80[BANK0 ] PTR unsigned char 
  9706 ;;		 -> Send_Data@buffer(200), Send_History_Event@buffer(200), Handle_Test_Events@test_data(50), Handle_Fire_Events@end_
      +data(150), 
  9707 ;;		 -> Handle_Fire_Events@start_data(100), 
  9708 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  9709 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9710 ;;		 -> STR_4(15), 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  f              11  117[BANK0 ] struct _IO_FILE
  9713 ;;  ret             2    0        int 
  9714 ;;  ap              1  116[BANK0 ] PTR void [1]
  9715 ;;		 -> ?_sprintf(2), 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  2   80[BANK0 ] int 
  9718 ;; Registers used:
  9719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9725 ;;      Params:         0      36       0       0       0       0       0       0       0
  9726 ;;      Locals:         0      12       0       0       0       0       0       0       0
  9727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9728 ;;      Totals:         0      48       0       0       0       0       0       0       0
  9729 ;;Total ram usage:       48 bytes
  9730 ;; Hardware stack levels used: 1
  9731 ;; Hardware stack levels required when called: 8
  9732 ;; This function calls:
  9733 ;;		_vfprintf
  9734 ;; This function is called by:
  9735 ;;		_Handle_Fire_Events
  9736 ;;		_Handle_Test_Events
  9737 ;;		_Send_History_Event
  9738 ;;		_Send_Data
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text17
  9743   006D96                     __ptext17:
  9744                           	callstack 0
  9745   006D96                     _sprintf:
  9746                           	callstack 21
  9747   006D96  0EB4               	movlw	low (?_sprintf+4)
  9748   006D98  0100               	movlb	0	; () banked
  9749   006D9A  6FD4               	movwf	sprintf@ap& (0+255),b
  9750   006D9C  C0B0  F0D5         	movff	sprintf@s,sprintf@f
  9751   006DA0  C0B1  F0D6         	movff	sprintf@s+1,sprintf@f+1
  9752   006DA4                     
  9753                           ; BSR set to: 0
  9754   006DA4  0E00               	movlw	0
  9755   006DA6  6FD8               	movwf	(sprintf@f+3)& (0+255),b
  9756   006DA8  0E00               	movlw	0
  9757   006DAA  6FD7               	movwf	(sprintf@f+2)& (0+255),b
  9758   006DAC                     
  9759                           ; BSR set to: 0
  9760   006DAC  0E00               	movlw	0
  9761   006DAE  6FDF               	movwf	(sprintf@f+10)& (0+255),b
  9762   006DB0  0E00               	movlw	0
  9763   006DB2  6FDE               	movwf	(sprintf@f+9)& (0+255),b
  9764   006DB4                     
  9765                           ; BSR set to: 0
  9766   006DB4  0ED5               	movlw	low sprintf@f
  9767   006DB6  6FAA               	movwf	vfprintf@fp& (0+255),b
  9768   006DB8  C0B2  F0AB         	movff	sprintf@fmt,vfprintf@fmt
  9769   006DBC  C0B3  F0AC         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9770   006DC0  0ED4               	movlw	low sprintf@ap
  9771   006DC2  6FAD               	movwf	vfprintf@ap& (0+255),b
  9772   006DC4  EC84  F036         	call	_vfprintf	;wreg free
  9773   006DC8  0100               	movlb	0	; () banked
  9774   006DCA  51D7               	movf	(sprintf@f+2)& (0+255),w,b
  9775   006DCC  25B0               	addwf	sprintf@s& (0+255),w,b
  9776   006DCE  6ED9               	movwf	fsr2l,c
  9777   006DD0  51D8               	movf	(sprintf@f+3)& (0+255),w,b
  9778   006DD2  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  9779   006DD4  6EDA               	movwf	fsr2h,c
  9780   006DD6  6ADF               	clrf	indf2,c
  9781   006DD8                     
  9782                           ; BSR set to: 0
  9783   006DD8  0012               	return		;funcret
  9784   006DDA                     __end_of_sprintf:
  9785                           	callstack 0
  9786                           
  9787 ;; *************** function _vfprintf *****************
  9788 ;; Defined at:
  9789 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9790 ;; Parameters:    Size  Location     Type
  9791 ;;  fp              1   74[BANK0 ] PTR struct _IO_FILE
  9792 ;;		 -> sprintf@f(11), 
  9793 ;;  fmt             2   75[BANK0 ] PTR const unsigned char 
  9794 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9795 ;;		 -> STR_4(15), 
  9796 ;;  ap              1   77[BANK0 ] PTR PTR void 
  9797 ;;		 -> sprintf@ap(1), 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  9800 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9801 ;;		 -> STR_4(15), 
  9802 ;; Return value:  Size  Location     Type
  9803 ;;                  2   74[BANK0 ] int 
  9804 ;; Registers used:
  9805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9811 ;;      Params:         0       4       0       0       0       0       0       0       0
  9812 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9814 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9815 ;;Total ram usage:        6 bytes
  9816 ;; Hardware stack levels used: 1
  9817 ;; Hardware stack levels required when called: 7
  9818 ;; This function calls:
  9819 ;;		_vfpfcnvrt
  9820 ;; This function is called by:
  9821 ;;		_sprintf
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           	psect	text18
  9826   006D08                     __ptext18:
  9827                           	callstack 0
  9828   006D08                     _vfprintf:
  9829                           	callstack 21
  9830   006D08                     
  9831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  9832   006D08  C0AB  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  9833   006D0C  C0AC  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9834                           
  9835                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9836   006D10  EF94  F036         	goto	l7170
  9837   006D14                     l7168:
  9838                           
  9839                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9840   006D14  C0AA  F09C         	movff	vfprintf@fp,vfpfcnvrt@fp
  9841   006D18  0EAE               	movlw	low vfprintf@cfmt
  9842   006D1A  0100               	movlb	0	; () banked
  9843   006D1C  6F9D               	movwf	vfpfcnvrt@fmt& (0+255),b
  9844   006D1E  C0AD  F09E         	movff	vfprintf@ap,vfpfcnvrt@ap
  9845   006D22  6B9F               	clrf	(vfpfcnvrt@ap+1)& (0+255),b
  9846   006D24  EC84  F01B         	call	_vfpfcnvrt	;wreg free
  9847   006D28                     l7170:
  9848                           
  9849                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9850   006D28  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  9851   006D2C  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9852   006D30                     	if	0	;tblptru may be non-zero
  9853   006D30                     	endif
  9854   006D30                     	if	0	;tblptru may be non-zero
  9855   006D30                     	endif
  9856   006D30  0008               	tblrd		*
  9857   006D32  50F5               	movf	tablat,w,c
  9858   006D34  0900               	iorlw	0
  9859   006D36  A4D8               	btfss	status,2,c
  9860   006D38  EFA0  F036         	goto	u9291
  9861   006D3C  EFA2  F036         	goto	u9290
  9862   006D40                     u9291:
  9863   006D40  EF8A  F036         	goto	l7168
  9864   006D44                     u9290:
  9865   006D44                     
  9866                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  9867   006D44  0E00               	movlw	0
  9868   006D46  0100               	movlb	0	; () banked
  9869   006D48  6FAB               	movwf	(?_vfprintf+1)& (0+255),b
  9870   006D4A  0E00               	movlw	0
  9871   006D4C  6FAA               	movwf	?_vfprintf& (0+255),b
  9872   006D4E                     
  9873                           ; BSR set to: 0
  9874   006D4E  0012               	return		;funcret
  9875   006D50                     __end_of_vfprintf:
  9876                           	callstack 0
  9877                           
  9878 ;; *************** function _vfpfcnvrt *****************
  9879 ;; Defined at:
  9880 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9881 ;; Parameters:    Size  Location     Type
  9882 ;;  fp              1   60[BANK0 ] PTR struct _IO_FILE
  9883 ;;		 -> sprintf@f(11), 
  9884 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  9885 ;;		 -> vfprintf@cfmt(2), 
  9886 ;;  ap              2   62[BANK0 ] PTR PTR void 
  9887 ;;		 -> sprintf@ap(1), 
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;  convarg         4   67[BANK0 ] struct .
  9890 ;;  cp              2   72[BANK0 ] PTR unsigned char 
  9891 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9892 ;;		 -> STR_4(15), 
  9893 ;;  c               1   71[BANK0 ] unsigned char 
  9894 ;;  done            1   66[BANK0 ] _Bool 
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9904 ;;      Params:         0       4       0       0       0       0       0       0       0
  9905 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9906 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9907 ;;      Totals:         0      14       0       0       0       0       0       0       0
  9908 ;;Total ram usage:       14 bytes
  9909 ;; Hardware stack levels used: 1
  9910 ;; Hardware stack levels required when called: 6
  9911 ;; This function calls:
  9912 ;;		_dtoa
  9913 ;;		_efgtoa
  9914 ;;		_fputc
  9915 ;;		_read_prec_or_width
  9916 ;;		_stoa
  9917 ;;		_utoa
  9918 ;; This function is called by:
  9919 ;;		_vfprintf
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           
  9923                           	psect	text19
  9924   003708                     __ptext19:
  9925                           	callstack 0
  9926   003708                     _vfpfcnvrt:
  9927                           	callstack 21
  9928   003708                     
  9929                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  9930   003708  0100               	movlb	0	; () banked
  9931   00370A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9932   00370C  6ED9               	movwf	fsr2l,c
  9933   00370E  6ADA               	clrf	fsr2h,c
  9934   003710  CFDE FFF6          	movff	postinc2,tblptrl
  9935   003714  CFDD FFF7          	movff	postdec2,tblptrh
  9936   003718                     	if	0	;tblptru may be non-zero
  9937   003718                     	endif
  9938   003718                     	if	0	;tblptru may be non-zero
  9939   003718                     	endif
  9940   003718  0008               	tblrd		*
  9941   00371A  50F5               	movf	tablat,w,c
  9942   00371C  0A25               	xorlw	37
  9943   00371E  A4D8               	btfss	status,2,c
  9944   003720  EF94  F01B         	goto	u9181
  9945   003724  EF96  F01B         	goto	u9180
  9946   003728                     u9181:
  9947   003728  EFF9  F01D         	goto	l7160
  9948   00372C                     u9180:
  9949   00372C                     
  9950                           ; BSR set to: 0
  9951                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  9952   00372C  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9953   00372E  6ED9               	movwf	fsr2l,c
  9954   003730  6ADA               	clrf	fsr2h,c
  9955   003732  2ADE               	incf	postinc2,f,c
  9956   003734  0E00               	movlw	0
  9957   003736  22DD               	addwfc	postdec2,f,c
  9958   003738                     
  9959                           ; BSR set to: 0
  9960                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  9961   003738  0E00               	movlw	0
  9962   00373A  0103               	movlb	3	; () banked
  9963   00373C  6F6B               	movwf	(_width+1)& (0+255),b
  9964   00373E  0E00               	movlw	0
  9965   003740  6F6A               	movwf	_width& (0+255),b
  9966   003742  C36A  F370         	movff	_width,_flags
  9967   003746                     
  9968                           ; BSR set to: 3
  9969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  9970   003746  0102               	movlb	2	; () banked
  9971   003748  69FE               	setf	_prec& (0+255),b
  9972   00374A  69FF               	setf	(_prec+1)& (0+255),b
  9973   00374C                     
  9974                           ; BSR set to: 2
  9975                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  9976   00374C  0100               	movlb	0	; () banked
  9977   00374E  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9978   003750  6ED9               	movwf	fsr2l,c
  9979   003752  6ADA               	clrf	fsr2h,c
  9980   003754  CFDE FFF6          	movff	postinc2,tblptrl
  9981   003758  CFDD FFF7          	movff	postdec2,tblptrh
  9982   00375C                     	if	0	;tblptru may be non-zero
  9983   00375C                     	endif
  9984   00375C                     	if	0	;tblptru may be non-zero
  9985   00375C                     	endif
  9986   00375C  0008               	tblrd		*
  9987   00375E  50F5               	movf	tablat,w,c
  9988   003760  0A2E               	xorlw	46
  9989   003762  A4D8               	btfss	status,2,c
  9990   003764  EFB6  F01B         	goto	u9191
  9991   003768  EFB8  F01B         	goto	u9190
  9992   00376C                     u9191:
  9993   00376C  EFC8  F01B         	goto	l7052
  9994   003770                     u9190:
  9995   003770                     
  9996                           ; BSR set to: 0
  9997                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  9998   003770  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9999   003772  6ED9               	movwf	fsr2l,c
 10000   003774  6ADA               	clrf	fsr2h,c
 10001   003776  2ADE               	incf	postinc2,f,c
 10002   003778  0E00               	movlw	0
 10003   00377A  22DD               	addwfc	postdec2,f,c
 10004   00377C                     
 10005                           ; BSR set to: 0
 10006                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 10007   00377C  C09D  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 10008   003780  C09E  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 10009   003784  EC13  F034         	call	_read_prec_or_width	;wreg free
 10010   003788  C001  F2FE         	movff	?_read_prec_or_width,_prec
 10011   00378C  C002  F2FF         	movff	?_read_prec_or_width+1,_prec+1
 10012   003790                     l7052:
 10013                           
 10014                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 10015   003790  0100               	movlb	0	; () banked
 10016   003792  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10017   003794  6ED9               	movwf	fsr2l,c
 10018   003796  6ADA               	clrf	fsr2h,c
 10019   003798  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
 10020   00379C  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
 10021   0037A0                     
 10022                           ; BSR set to: 0
 10023                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 10024   0037A0  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10025   0037A4  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10026   0037A8                     	if	0	;tblptru may be non-zero
 10027   0037A8                     	endif
 10028   0037A8                     	if	0	;tblptru may be non-zero
 10029   0037A8                     	endif
 10030   0037A8  0008               	tblrd		*
 10031   0037AA  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
 10032                           
 10033                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 10034   0037AE  EFE4  F01B         	goto	l7062
 10035   0037B2                     l7056:
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1309:     cp++;
 10039   0037B2  4BA8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 10040   0037B4  2BA9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 10041                           
 10042                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1316:     break;
 10043   0037B6  EFF7  F01B         	goto	l7064
 10044   0037BA                     l7058:
 10045                           
 10046                           ; BSR set to: 0
 10047                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 10048   0037BA  0E69               	movlw	105
 10049   0037BC  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
 10050                           
 10051                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1351:     break;
 10052   0037BE  EFF7  F01B         	goto	l7064
 10053   0037C2                     l1109:
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 10057   0037C2  6BA7               	clrf	vfpfcnvrt@c& (0+255),b
 10058                           
 10059                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1354:     break;
 10060   0037C4  EFF7  F01B         	goto	l7064
 10061   0037C8                     l7062:
 10062                           
 10063                           ; BSR set to: 0
 10064   0037C8  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10065                           
 10066                           ; Switch size 1, requested type "simple"
 10067                           ; Number of cases is 4, Range of values is 100 to 117
 10068                           ; switch strategies available:
 10069                           ; Name         Instructions Cycles
 10070                           ; simple_byte           13     7 (average)
 10071                           ;	Chosen strategy is simple_byte
 10072   0037CA  0A64               	xorlw	100	; case 100
 10073   0037CC  B4D8               	btfsc	status,2,c
 10074   0037CE  EFDD  F01B         	goto	l7058
 10075   0037D2  0A0D               	xorlw	13	; case 105
 10076   0037D4  B4D8               	btfsc	status,2,c
 10077   0037D6  EFDD  F01B         	goto	l7058
 10078   0037DA  0A05               	xorlw	5	; case 108
 10079   0037DC  B4D8               	btfsc	status,2,c
 10080   0037DE  EFD9  F01B         	goto	l7056
 10081   0037E2  0A19               	xorlw	25	; case 117
 10082   0037E4  B4D8               	btfsc	status,2,c
 10083   0037E6  EFDD  F01B         	goto	l7058
 10084   0037EA  EFE1  F01B         	goto	l1109
 10085   0037EE                     l7064:
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 10089   0037EE  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10090   0037F2  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10091   0037F6                     	if	0	;tblptru may be non-zero
 10092   0037F6                     	endif
 10093   0037F6                     	if	0	;tblptru may be non-zero
 10094   0037F6                     	endif
 10095   0037F6  0008               	tblrd		*
 10096   0037F8  50F5               	movf	tablat,w,c
 10097   0037FA  0A64               	xorlw	100
 10098   0037FC  B4D8               	btfsc	status,2,c
 10099   0037FE  EF03  F01C         	goto	u9201
 10100   003802  EF05  F01C         	goto	u9200
 10101   003806                     u9201:
 10102   003806  EF3C  F01C         	goto	l7074
 10103   00380A                     u9200:
 10104   00380A                     
 10105                           ; BSR set to: 0
 10106   00380A  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10107   00380E  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10108   003812                     	if	0	;tblptru may be non-zero
 10109   003812                     	endif
 10110   003812                     	if	0	;tblptru may be non-zero
 10111   003812                     	endif
 10112   003812  0008               	tblrd		*
 10113   003814  50F5               	movf	tablat,w,c
 10114   003816  0A69               	xorlw	105
 10115   003818  A4D8               	btfss	status,2,c
 10116   00381A  EF11  F01C         	goto	u9211
 10117   00381E  EF13  F01C         	goto	u9210
 10118   003822                     u9211:
 10119   003822  EF62  F01C         	goto	l7082
 10120   003826                     u9210:
 10121   003826  EF3C  F01C         	goto	l7074
 10122   00382A                     l7068:
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 10126   00382A  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10127   00382E  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10128   003832  50DF               	movf	indf2,w,c
 10129   003834  2ADF               	incf	indf2,f,c
 10130   003836  2ADF               	incf	indf2,f,c
 10131   003838  6ED9               	movwf	fsr2l,c
 10132   00383A  6ADA               	clrf	fsr2h,c
 10133   00383C  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10134   003840  CFDD F0A4          	movff	postdec2,vfpfcnvrt@convarg+1
 10135   003844  0E00               	movlw	0
 10136   003846  BFA4               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
 10137   003848  0EFF               	movlw	-1
 10138   00384A  6FA5               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
 10139   00384C  6FA6               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
 10140                           
 10141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1366:      break;
 10142   00384E  EF47  F01C         	goto	l7076
 10143   003852                     l7070:
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 10147   003852  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10148   003856  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10149   00385A  0E04               	movlw	4
 10150   00385C  26DF               	addwf	indf2,f,c
 10151   00385E  5CDF               	subwf	indf2,w,c
 10152   003860  6ED9               	movwf	fsr2l,c
 10153   003862  6ADA               	clrf	fsr2h,c
 10154   003864  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10155   003868  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10156   00386C  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10157   003870  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10158                           
 10159                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1380:      break;
 10160   003874  EF47  F01C         	goto	l7076
 10161   003878                     l7074:
 10162                           
 10163                           ; BSR set to: 0
 10164   003878  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10165                           
 10166                           ; Switch size 1, requested type "simple"
 10167                           ; Number of cases is 2, Range of values is 105 to 108
 10168                           ; switch strategies available:
 10169                           ; Name         Instructions Cycles
 10170                           ; simple_byte            7     4 (average)
 10171                           ;	Chosen strategy is simple_byte
 10172   00387A  0A69               	xorlw	105	; case 105
 10173   00387C  B4D8               	btfsc	status,2,c
 10174   00387E  EF15  F01C         	goto	l7068
 10175   003882  0A05               	xorlw	5	; case 108
 10176   003884  B4D8               	btfsc	status,2,c
 10177   003886  EF29  F01C         	goto	l7070
 10178   00388A  EF47  F01C         	goto	l7076
 10179   00388E                     l7076:
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10183   00388E  0E01               	movlw	1
 10184   003890  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10185   003892  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10186   003894  0E00               	movlw	0
 10187   003896  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10188   003898  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10189   00389A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10190   00389C  6ED9               	movwf	fsr2l,c
 10191   00389E  6ADA               	clrf	fsr2h,c
 10192   0038A0  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10193   0038A4  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10194   0038A8                     
 10195                           ; BSR set to: 0
 10196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 10197   0038A8  C09C  F017         	movff	vfpfcnvrt@fp,dtoa@fp
 10198   0038AC  C0A3  F018         	movff	vfpfcnvrt@convarg,dtoa@d
 10199   0038B0  C0A4  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 10200   0038B4  C0A5  F01A         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 10201   0038B8  C0A6  F01B         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 10202   0038BC  EC35  F02C         	call	_dtoa	;wreg free
 10203   0038C0  EF0A  F01E         	goto	l1117
 10204   0038C4                     l7082:
 10205                           
 10206                           ; BSR set to: 0
 10207   0038C4  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10208   0038C8  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10209   0038CC                     	if	0	;tblptru may be non-zero
 10210   0038CC                     	endif
 10211   0038CC                     	if	0	;tblptru may be non-zero
 10212   0038CC                     	endif
 10213   0038CC  0008               	tblrd		*
 10214   0038CE  50F5               	movf	tablat,w,c
 10215   0038D0  0A75               	xorlw	117
 10216   0038D2  A4D8               	btfss	status,2,c
 10217   0038D4  EF6E  F01C         	goto	u9221
 10218   0038D8  EF70  F01C         	goto	u9220
 10219   0038DC                     u9221:
 10220   0038DC  EFCE  F01C         	goto	l1118
 10221   0038E0                     u9220:
 10222   0038E0  EF9A  F01C         	goto	l7090
 10223   0038E4                     l7084:
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 10227   0038E4  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10228   0038E8  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10229   0038EC  50DF               	movf	indf2,w,c
 10230   0038EE  2ADF               	incf	indf2,f,c
 10231   0038F0  2ADF               	incf	indf2,f,c
 10232   0038F2  6ED9               	movwf	fsr2l,c
 10233   0038F4  6ADA               	clrf	fsr2h,c
 10234   0038F6  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10235   0038FA  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10236   0038FE  C0A0  F0A3         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
 10237   003902  C0A1  F0A4         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
 10238   003906  6BA5               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 10239   003908  6BA6               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 10240                           
 10241                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1457:      break;
 10242   00390A  EFA5  F01C         	goto	l7092
 10243   00390E                     l7086:
 10244                           
 10245                           ; BSR set to: 0
 10246                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 10247   00390E  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10248   003912  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10249   003916  0E04               	movlw	4
 10250   003918  26DF               	addwf	indf2,f,c
 10251   00391A  5CDF               	subwf	indf2,w,c
 10252   00391C  6ED9               	movwf	fsr2l,c
 10253   00391E  6ADA               	clrf	fsr2h,c
 10254   003920  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10255   003924  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10256   003928  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10257   00392C  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10258                           
 10259                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1471:      break;
 10260   003930  EFA5  F01C         	goto	l7092
 10261   003934                     l7090:
 10262                           
 10263                           ; BSR set to: 0
 10264   003934  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10265                           
 10266                           ; Switch size 1, requested type "simple"
 10267                           ; Number of cases is 2, Range of values is 105 to 108
 10268                           ; switch strategies available:
 10269                           ; Name         Instructions Cycles
 10270                           ; simple_byte            7     4 (average)
 10271                           ;	Chosen strategy is simple_byte
 10272   003936  0A69               	xorlw	105	; case 105
 10273   003938  B4D8               	btfsc	status,2,c
 10274   00393A  EF72  F01C         	goto	l7084
 10275   00393E  0A05               	xorlw	5	; case 108
 10276   003940  B4D8               	btfsc	status,2,c
 10277   003942  EF87  F01C         	goto	l7086
 10278   003946  EFA5  F01C         	goto	l7092
 10279   00394A                     l7092:
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 10283   00394A  0E01               	movlw	1
 10284   00394C  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10285   00394E  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10286   003950  0E00               	movlw	0
 10287   003952  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10288   003954  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10289   003956  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10290   003958  6ED9               	movwf	fsr2l,c
 10291   00395A  6ADA               	clrf	fsr2h,c
 10292   00395C  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10293   003960  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10294                           
 10295                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 10296   003964  EFC2  F01C         	goto	l7100
 10297   003968                     l7094:
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 10301   003968  C09C  F017         	movff	vfpfcnvrt@fp,utoa@fp
 10302   00396C  C0A3  F018         	movff	vfpfcnvrt@convarg,utoa@d
 10303   003970  C0A4  F019         	movff	vfpfcnvrt@convarg+1,utoa@d+1
 10304   003974  C0A5  F01A         	movff	vfpfcnvrt@convarg+2,utoa@d+2
 10305   003978  C0A6  F01B         	movff	vfpfcnvrt@convarg+3,utoa@d+3
 10306   00397C  EC6A  F02E         	call	_utoa	;wreg free
 10307   003980  EF0A  F01E         	goto	l1117
 10308   003984                     l7100:
 10309                           
 10310                           ; BSR set to: 0
 10311   003984  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10312   003988  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10313   00398C                     	if	0	;tblptru may be non-zero
 10314   00398C                     	endif
 10315   00398C                     	if	0	;tblptru may be non-zero
 10316   00398C                     	endif
 10317   00398C  0008               	tblrd		*
 10318   00398E  50F5               	movf	tablat,w,c
 10319                           
 10320                           ; Switch size 1, requested type "simple"
 10321                           ; Number of cases is 1, Range of values is 117 to 117
 10322                           ; switch strategies available:
 10323                           ; Name         Instructions Cycles
 10324                           ; simple_byte            4     3 (average)
 10325                           ;	Chosen strategy is simple_byte
 10326   003990  0A75               	xorlw	117	; case 117
 10327   003992  B4D8               	btfsc	status,2,c
 10328   003994  EFB4  F01C         	goto	l7094
 10329   003998  EFCE  F01C         	goto	l1118
 10330   00399C                     l1118:
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 10334   00399C  6BA2               	clrf	vfpfcnvrt@done& (0+255),b
 10335   00399E                     
 10336                           ; BSR set to: 0
 10337                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 10338   00399E  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10339   0039A0  6ED9               	movwf	fsr2l,c
 10340   0039A2  6ADA               	clrf	fsr2h,c
 10341   0039A4  CFDE FFF6          	movff	postinc2,tblptrl
 10342   0039A8  CFDD FFF7          	movff	postdec2,tblptrh
 10343   0039AC                     	if	0	;tblptru may be non-zero
 10344   0039AC                     	endif
 10345   0039AC                     	if	0	;tblptru may be non-zero
 10346   0039AC                     	endif
 10347   0039AC  0008               	tblrd		*
 10348   0039AE  50F5               	movf	tablat,w,c
 10349   0039B0  0A73               	xorlw	115
 10350   0039B2  A4D8               	btfss	status,2,c
 10351   0039B4  EFDE  F01C         	goto	u9231
 10352   0039B8  EFE0  F01C         	goto	u9230
 10353   0039BC                     u9231:
 10354   0039BC  EFEA  F01C         	goto	l7108
 10355   0039C0                     u9230:
 10356   0039C0                     
 10357                           ; BSR set to: 0
 10358                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 10359   0039C0  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10360   0039C2  6ED9               	movwf	fsr2l,c
 10361   0039C4  6ADA               	clrf	fsr2h,c
 10362   0039C6  2ADE               	incf	postinc2,f,c
 10363   0039C8  0E00               	movlw	0
 10364   0039CA  22DD               	addwfc	postdec2,f,c
 10365   0039CC                     l7106:
 10366                           
 10367                           ; BSR set to: 0
 10368                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 10369   0039CC  0E01               	movlw	1
 10370   0039CE  6FA2               	movwf	vfpfcnvrt@done& (0+255),b
 10371                           
 10372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1660:   }
 10373   0039D0  EF36  F01D         	goto	l7118
 10374   0039D4                     l7108:
 10375                           
 10376                           ; BSR set to: 0
 10377   0039D4  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10378   0039D6  6ED9               	movwf	fsr2l,c
 10379   0039D8  6ADA               	clrf	fsr2h,c
 10380   0039DA  CFDE FFF6          	movff	postinc2,tblptrl
 10381   0039DE  CFDD FFF7          	movff	postdec2,tblptrh
 10382   0039E2                     	if	0	;tblptru may be non-zero
 10383   0039E2                     	endif
 10384   0039E2                     	if	0	;tblptru may be non-zero
 10385   0039E2                     	endif
 10386   0039E2  0008               	tblrd		*
 10387   0039E4  50F5               	movf	tablat,w,c
 10388   0039E6  0A6C               	xorlw	108
 10389   0039E8  A4D8               	btfss	status,2,c
 10390   0039EA  EFF9  F01C         	goto	u9241
 10391   0039EE  EFFB  F01C         	goto	u9240
 10392   0039F2                     u9241:
 10393   0039F2  EF36  F01D         	goto	l7118
 10394   0039F6                     u9240:
 10395   0039F6                     
 10396                           ; BSR set to: 0
 10397   0039F6  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10398   0039F8  6ED9               	movwf	fsr2l,c
 10399   0039FA  6ADA               	clrf	fsr2h,c
 10400   0039FC  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10401   003A00  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10402   003A04  0E01               	movlw	1
 10403   003A06  27A0               	addwf	??_vfpfcnvrt& (0+255),f,b
 10404   003A08  0E00               	movlw	0
 10405   003A0A  23A1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10406   003A0C  C0A0  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10407   003A10  C0A1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10408   003A14                     	if	0	;tblptru may be non-zero
 10409   003A14                     	endif
 10410   003A14                     	if	0	;tblptru may be non-zero
 10411   003A14                     	endif
 10412   003A14  0008               	tblrd		*
 10413   003A16  50F5               	movf	tablat,w,c
 10414   003A18  0A6C               	xorlw	108
 10415   003A1A  A4D8               	btfss	status,2,c
 10416   003A1C  EF12  F01D         	goto	u9251
 10417   003A20  EF14  F01D         	goto	u9250
 10418   003A24                     u9251:
 10419   003A24  EF36  F01D         	goto	l7118
 10420   003A28                     u9250:
 10421   003A28                     
 10422                           ; BSR set to: 0
 10423   003A28  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10424   003A2A  6ED9               	movwf	fsr2l,c
 10425   003A2C  6ADA               	clrf	fsr2h,c
 10426   003A2E  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10427   003A32  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10428   003A36  0E02               	movlw	2
 10429   003A38  27A0               	addwf	??_vfpfcnvrt& (0+255),f,b
 10430   003A3A  0E00               	movlw	0
 10431   003A3C  23A1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10432   003A3E  C0A0  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10433   003A42  C0A1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10434   003A46                     	if	0	;tblptru may be non-zero
 10435   003A46                     	endif
 10436   003A46                     	if	0	;tblptru may be non-zero
 10437   003A46                     	endif
 10438   003A46  0008               	tblrd		*
 10439   003A48  50F5               	movf	tablat,w,c
 10440   003A4A  0A73               	xorlw	115
 10441   003A4C  A4D8               	btfss	status,2,c
 10442   003A4E  EF2B  F01D         	goto	u9261
 10443   003A52  EF2D  F01D         	goto	u9260
 10444   003A56                     u9261:
 10445   003A56  EF36  F01D         	goto	l7118
 10446   003A5A                     u9260:
 10447   003A5A                     
 10448                           ; BSR set to: 0
 10449                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 10450   003A5A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10451   003A5C  6ED9               	movwf	fsr2l,c
 10452   003A5E  6ADA               	clrf	fsr2h,c
 10453   003A60  0E03               	movlw	3
 10454   003A62  26DE               	addwf	postinc2,f,c
 10455   003A64  0E00               	movlw	0
 10456   003A66  22DD               	addwfc	postdec2,f,c
 10457   003A68  EFE6  F01C         	goto	l7106
 10458   003A6C                     l7118:
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 10462   003A6C  51A2               	movf	vfpfcnvrt@done& (0+255),w,b
 10463   003A6E  B4D8               	btfsc	status,2,c
 10464   003A70  EF3C  F01D         	goto	u9271
 10465   003A74  EF3E  F01D         	goto	u9270
 10466   003A78                     u9271:
 10467   003A78  EF51  F01D         	goto	l7124
 10468   003A7C                     u9270:
 10469   003A7C                     
 10470                           ; BSR set to: 0
 10471                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 10472   003A7C  C09C  F009         	movff	vfpfcnvrt@fp,stoa@fp
 10473   003A80  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10474   003A84  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10475   003A88  0E02               	movlw	2
 10476   003A8A  26DF               	addwf	indf2,f,c
 10477   003A8C  5CDF               	subwf	indf2,w,c
 10478   003A8E  6ED9               	movwf	fsr2l,c
 10479   003A90  6ADA               	clrf	fsr2h,c
 10480   003A92  CFDE F00A          	movff	postinc2,stoa@s
 10481   003A96  CFDE F00B          	movff	postinc2,stoa@s+1
 10482   003A9A  EC03  F031         	call	_stoa	;wreg free
 10483   003A9E  EF0A  F01E         	goto	l1117
 10484   003AA2                     l7124:
 10485                           
 10486                           ; BSR set to: 0
 10487                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 10488   003AA2  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10489   003AA4  6ED9               	movwf	fsr2l,c
 10490   003AA6  6ADA               	clrf	fsr2h,c
 10491   003AA8  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
 10492   003AAC  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
 10493   003AB0                     
 10494                           ; BSR set to: 0
 10495                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 10496   003AB0  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10497   003AB4  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10498   003AB8                     	if	0	;tblptru may be non-zero
 10499   003AB8                     	endif
 10500   003AB8                     	if	0	;tblptru may be non-zero
 10501   003AB8                     	endif
 10502   003AB8  0008               	tblrd		*
 10503   003ABA  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
 10504                           
 10505                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 10506   003ABE  EF6C  F01D         	goto	l7134
 10507   003AC2                     l7128:
 10508                           
 10509                           ; BSR set to: 0
 10510                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 10511   003AC2  4BA8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 10512   003AC4  2BA9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 10513                           
 10514                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
 10515   003AC6  EF7B  F01D         	goto	l7136
 10516   003ACA                     l7130:
 10517                           
 10518                           ; BSR set to: 0
 10519                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 10520   003ACA  0E6C               	movlw	108
 10521   003ACC  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
 10522                           
 10523                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
 10524   003ACE  EF7B  F01D         	goto	l7136
 10525   003AD2                     l1137:
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 10529   003AD2  6BA7               	clrf	vfpfcnvrt@c& (0+255),b
 10530                           
 10531                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
 10532   003AD4  EF7B  F01D         	goto	l7136
 10533   003AD8                     l7134:
 10534                           
 10535                           ; BSR set to: 0
 10536   003AD8  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10537                           
 10538                           ; Switch size 1, requested type "simple"
 10539                           ; Number of cases is 3, Range of values is 76 to 108
 10540                           ; switch strategies available:
 10541                           ; Name         Instructions Cycles
 10542                           ; simple_byte           10     6 (average)
 10543                           ;	Chosen strategy is simple_byte
 10544   003ADA  0A4C               	xorlw	76	; case 76
 10545   003ADC  B4D8               	btfsc	status,2,c
 10546   003ADE  EF61  F01D         	goto	l7128
 10547   003AE2  0A2A               	xorlw	42	; case 102
 10548   003AE4  B4D8               	btfsc	status,2,c
 10549   003AE6  EF65  F01D         	goto	l7130
 10550   003AEA  0A0A               	xorlw	10	; case 108
 10551   003AEC  B4D8               	btfsc	status,2,c
 10552   003AEE  EF61  F01D         	goto	l7128
 10553   003AF2  EF69  F01D         	goto	l1137
 10554   003AF6                     l7136:
 10555                           
 10556                           ; BSR set to: 0
 10557   003AF6  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10558   003AFA  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10559   003AFE                     	if	0	;tblptru may be non-zero
 10560   003AFE                     	endif
 10561   003AFE                     	if	0	;tblptru may be non-zero
 10562   003AFE                     	endif
 10563   003AFE  0008               	tblrd		*
 10564   003B00  50F5               	movf	tablat,w,c
 10565   003B02  0A66               	xorlw	102
 10566   003B04  A4D8               	btfss	status,2,c
 10567   003B06  EF87  F01D         	goto	u9281
 10568   003B0A  EF89  F01D         	goto	u9280
 10569   003B0E                     u9281:
 10570   003B0E  EFF0  F01D         	goto	l7156
 10571   003B12                     u9280:
 10572   003B12  EFB5  F01D         	goto	l7144
 10573   003B16                     l7138:
 10574                           
 10575                           ; BSR set to: 0
 10576                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10577   003B16  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10578   003B1A  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10579   003B1E  CFDF F0A0          	movff	indf2,??_vfpfcnvrt
 10580   003B22  0E04               	movlw	4
 10581   003B24  26DF               	addwf	indf2,f,c
 10582   003B26  51A0               	movf	??_vfpfcnvrt& (0+255),w,b
 10583   003B28  6ED9               	movwf	fsr2l,c
 10584   003B2A  6ADA               	clrf	fsr2h,c
 10585   003B2C  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10586   003B30  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10587   003B34  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10588   003B38  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10589                           
 10590                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
 10591   003B3C  EFC0  F01D         	goto	l7146
 10592   003B40                     l7140:
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 10596   003B40  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10597   003B44  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10598   003B48  CFDF F0A0          	movff	indf2,??_vfpfcnvrt
 10599   003B4C  0E04               	movlw	4
 10600   003B4E  26DF               	addwf	indf2,f,c
 10601   003B50  51A0               	movf	??_vfpfcnvrt& (0+255),w,b
 10602   003B52  6ED9               	movwf	fsr2l,c
 10603   003B54  6ADA               	clrf	fsr2h,c
 10604   003B56  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10605   003B5A  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10606   003B5E  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10607   003B62  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10608                           
 10609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
 10610   003B66  EFC0  F01D         	goto	l7146
 10611   003B6A                     l7144:
 10612                           
 10613                           ; BSR set to: 0
 10614   003B6A  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10615                           
 10616                           ; Switch size 1, requested type "simple"
 10617                           ; Number of cases is 2, Range of values is 76 to 108
 10618                           ; switch strategies available:
 10619                           ; Name         Instructions Cycles
 10620                           ; simple_byte            7     4 (average)
 10621                           ;	Chosen strategy is simple_byte
 10622   003B6C  0A4C               	xorlw	76	; case 76
 10623   003B6E  B4D8               	btfsc	status,2,c
 10624   003B70  EFA0  F01D         	goto	l7140
 10625   003B74  0A20               	xorlw	32	; case 108
 10626   003B76  B4D8               	btfsc	status,2,c
 10627   003B78  EF8B  F01D         	goto	l7138
 10628   003B7C  EFC0  F01D         	goto	l7146
 10629   003B80                     l7146:
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 10633   003B80  0E01               	movlw	1
 10634   003B82  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10635   003B84  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10636   003B86  0E00               	movlw	0
 10637   003B88  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10638   003B8A  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10639   003B8C  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10640   003B8E  6ED9               	movwf	fsr2l,c
 10641   003B90  6ADA               	clrf	fsr2h,c
 10642   003B92  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10643   003B96  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10644                           
 10645                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 10646   003B9A  EFE4  F01D         	goto	l7154
 10647   003B9E                     l7148:
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 10651   003B9E  C09C  F068         	movff	vfpfcnvrt@fp,efgtoa@fp
 10652   003BA2  C0A3  F069         	movff	vfpfcnvrt@convarg,efgtoa@f
 10653   003BA6  C0A4  F06A         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 10654   003BAA  C0A5  F06B         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 10655   003BAE  C0A6  F06C         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 10656   003BB2  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10657   003BB6  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10658   003BBA                     	if	0	;tblptru may be non-zero
 10659   003BBA                     	endif
 10660   003BBA                     	if	0	;tblptru may be non-zero
 10661   003BBA                     	endif
 10662   003BBA  0008               	tblrd		*
 10663   003BBC  CFF5 F06D          	movff	tablat,efgtoa@c
 10664   003BC0  EC64  F012         	call	_efgtoa	;wreg free
 10665   003BC4  EF0A  F01E         	goto	l1117
 10666   003BC8                     l7154:
 10667                           
 10668                           ; BSR set to: 0
 10669   003BC8  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10670   003BCC  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10671   003BD0                     	if	0	;tblptru may be non-zero
 10672   003BD0                     	endif
 10673   003BD0                     	if	0	;tblptru may be non-zero
 10674   003BD0                     	endif
 10675   003BD0  0008               	tblrd		*
 10676   003BD2  50F5               	movf	tablat,w,c
 10677                           
 10678                           ; Switch size 1, requested type "simple"
 10679                           ; Number of cases is 1, Range of values is 102 to 102
 10680                           ; switch strategies available:
 10681                           ; Name         Instructions Cycles
 10682                           ; simple_byte            4     3 (average)
 10683                           ;	Chosen strategy is simple_byte
 10684   003BD4  0A66               	xorlw	102	; case 102
 10685   003BD6  B4D8               	btfsc	status,2,c
 10686   003BD8  EFCF  F01D         	goto	l7148
 10687   003BDC  EFF0  F01D         	goto	l7156
 10688   003BE0                     l7156:
 10689                           
 10690                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 10691   003BE0  0100               	movlb	0	; () banked
 10692   003BE2  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10693   003BE4  6ED9               	movwf	fsr2l,c
 10694   003BE6  6ADA               	clrf	fsr2h,c
 10695   003BE8  2ADE               	incf	postinc2,f,c
 10696   003BEA  0E00               	movlw	0
 10697   003BEC  22DD               	addwfc	postdec2,f,c
 10698   003BEE  EF0A  F01E         	goto	l1117
 10699   003BF2                     l7160:
 10700                           
 10701                           ; BSR set to: 0
 10702                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 10703   003BF2  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10704   003BF4  6ED9               	movwf	fsr2l,c
 10705   003BF6  6ADA               	clrf	fsr2h,c
 10706   003BF8  CFDE FFF6          	movff	postinc2,tblptrl
 10707   003BFC  CFDD FFF7          	movff	postdec2,tblptrh
 10708   003C00                     	if	0	;tblptru may be non-zero
 10709   003C00                     	endif
 10710   003C00                     	if	0	;tblptru may be non-zero
 10711   003C00                     	endif
 10712   003C00  0008               	tblrd		*
 10713   003C02  50F5               	movf	tablat,w,c
 10714   003C04  6E01               	movwf	fputc@c^0,c
 10715   003C06  6A02               	clrf	(fputc@c+1)^0,c
 10716   003C08  C09C  F003         	movff	vfpfcnvrt@fp,fputc@fp
 10717   003C0C  EC5F  F033         	call	_fputc	;wreg free
 10718   003C10  EFF0  F01D         	goto	l7156
 10719   003C14                     l1117:
 10720   003C14  0012               	return		;funcret
 10721   003C16                     __end_of_vfpfcnvrt:
 10722                           	callstack 0
 10723                           
 10724 ;; *************** function _utoa *****************
 10725 ;; Defined at:
 10726 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10727 ;; Parameters:    Size  Location     Type
 10728 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 10729 ;;		 -> sprintf@f(11), 
 10730 ;;  d               4   23[COMRAM] unsigned long 
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;  i               2   31[COMRAM] int 
 10733 ;;  p               2   29[COMRAM] int 
 10734 ;;  w               2   27[COMRAM] int 
 10735 ;; Return value:  Size  Location     Type
 10736 ;;                  1    wreg      void 
 10737 ;; Registers used:
 10738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10739 ;; Tracked objects:
 10740 ;;		On entry : 0/0
 10741 ;;		On exit  : 0/0
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10744 ;;      Params:         5       0       0       0       0       0       0       0       0
 10745 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10746 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10747 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10748 ;;Total ram usage:       11 bytes
 10749 ;; Hardware stack levels used: 1
 10750 ;; Hardware stack levels required when called: 5
 10751 ;; This function calls:
 10752 ;;		___lldiv
 10753 ;;		___llmod
 10754 ;;		_pad
 10755 ;; This function is called by:
 10756 ;;		_vfpfcnvrt
 10757 ;; This function uses a non-reentrant model
 10758 ;;
 10759                           
 10760                           	psect	text20
 10761   005CD4                     __ptext20:
 10762                           	callstack 0
 10763   005CD4                     _utoa:
 10764                           	callstack 21
 10765   005CD4                     
 10766                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
 10767   005CD4  0102               	movlb	2	; () banked
 10768   005CD6  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 10769   005CD8  EF72  F02E         	goto	u9120
 10770   005CDC  EF70  F02E         	goto	u9121
 10771   005CE0                     u9121:
 10772   005CE0  EF78  F02E         	goto	l1082
 10773   005CE4                     u9120:
 10774   005CE4                     
 10775                           ; BSR set to: 2
 10776   005CE4  0E00               	movlw	0
 10777   005CE6  6E1F               	movwf	(utoa@p+1)^0,c
 10778   005CE8  0E01               	movlw	1
 10779   005CEA  6E1E               	movwf	utoa@p^0,c
 10780   005CEC  EF7C  F02E         	goto	l1084
 10781   005CF0                     l1082:
 10782                           
 10783                           ; BSR set to: 2
 10784   005CF0  C2FE  F01E         	movff	_prec,utoa@p
 10785   005CF4  C2FF  F01F         	movff	_prec+1,utoa@p+1
 10786   005CF8                     l1084:
 10787                           
 10788                           ; BSR set to: 2
 10789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 10790   005CF8  C36A  F01C         	movff	_width,utoa@w
 10791   005CFC  C36B  F01D         	movff	_width+1,utoa@w+1
 10792   005D00                     
 10793                           ; BSR set to: 2
 10794                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 10795   005D00  0E00               	movlw	0
 10796   005D02  6E21               	movwf	(utoa@i+1)^0,c
 10797   005D04  0E4F               	movlw	79
 10798   005D06  6E20               	movwf	utoa@i^0,c
 10799   005D08                     
 10800                           ; BSR set to: 2
 10801                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 10802   005D08  0103               	movlb	3	; () banked
 10803   005D0A  6BC9               	clrf	(_dbuf+79)& (0+255),b
 10804                           
 10805                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10806   005D0C  EFC6  F02E         	goto	l7014
 10807   005D10                     l7004:
 10808                           
 10809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 10810   005D10  0620               	decf	utoa@i^0,f,c
 10811   005D12  A0D8               	btfss	status,0,c
 10812   005D14  0621               	decf	(utoa@i+1)^0,f,c
 10813   005D16                     
 10814                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 10815   005D16  0E7A               	movlw	low _dbuf
 10816   005D18  2420               	addwf	utoa@i^0,w,c
 10817   005D1A  6ED9               	movwf	fsr2l,c
 10818   005D1C  0E03               	movlw	high _dbuf
 10819   005D1E  2021               	addwfc	(utoa@i+1)^0,w,c
 10820   005D20  6EDA               	movwf	fsr2h,c
 10821   005D22  C018  F001         	movff	utoa@d,___llmod@dividend
 10822   005D26  C019  F002         	movff	utoa@d+1,___llmod@dividend+1
 10823   005D2A  C01A  F003         	movff	utoa@d+2,___llmod@dividend+2
 10824   005D2E  C01B  F004         	movff	utoa@d+3,___llmod@dividend+3
 10825   005D32  0E0A               	movlw	10
 10826   005D34  6E05               	movwf	___llmod@divisor^0,c
 10827   005D36  0E00               	movlw	0
 10828   005D38  6E06               	movwf	(___llmod@divisor+1)^0,c
 10829   005D3A  0E00               	movlw	0
 10830   005D3C  6E07               	movwf	(___llmod@divisor+2)^0,c
 10831   005D3E  0E00               	movlw	0
 10832   005D40  6E08               	movwf	(___llmod@divisor+3)^0,c
 10833   005D42  EC5A  F035         	call	___llmod	;wreg free
 10834   005D46  5001               	movf	?___llmod^0,w,c
 10835   005D48  0F30               	addlw	48
 10836   005D4A  6EDF               	movwf	indf2,c
 10837   005D4C                     
 10838                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
 10839   005D4C  061E               	decf	utoa@p^0,f,c
 10840   005D4E  A0D8               	btfss	status,0,c
 10841   005D50  061F               	decf	(utoa@p+1)^0,f,c
 10842   005D52                     
 10843                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 10844   005D52  061C               	decf	utoa@w^0,f,c
 10845   005D54  A0D8               	btfss	status,0,c
 10846   005D56  061D               	decf	(utoa@w+1)^0,f,c
 10847   005D58                     
 10848                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 10849   005D58  C018  F001         	movff	utoa@d,___lldiv@dividend
 10850   005D5C  C019  F002         	movff	utoa@d+1,___lldiv@dividend+1
 10851   005D60  C01A  F003         	movff	utoa@d+2,___lldiv@dividend+2
 10852   005D64  C01B  F004         	movff	utoa@d+3,___lldiv@dividend+3
 10853   005D68  0E0A               	movlw	10
 10854   005D6A  6E05               	movwf	___lldiv@divisor^0,c
 10855   005D6C  0E00               	movlw	0
 10856   005D6E  6E06               	movwf	(___lldiv@divisor+1)^0,c
 10857   005D70  0E00               	movlw	0
 10858   005D72  6E07               	movwf	(___lldiv@divisor+2)^0,c
 10859   005D74  0E00               	movlw	0
 10860   005D76  6E08               	movwf	(___lldiv@divisor+3)^0,c
 10861   005D78  ECBE  F034         	call	___lldiv	;wreg free
 10862   005D7C  C001  F018         	movff	?___lldiv,utoa@d
 10863   005D80  C002  F019         	movff	?___lldiv+1,utoa@d+1
 10864   005D84  C003  F01A         	movff	?___lldiv+2,utoa@d+2
 10865   005D88  C004  F01B         	movff	?___lldiv+3,utoa@d+3
 10866   005D8C                     l7014:
 10867                           
 10868                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10869   005D8C  5020               	movf	utoa@i^0,w,c
 10870   005D8E  1021               	iorwf	(utoa@i+1)^0,w,c
 10871   005D90  B4D8               	btfsc	status,2,c
 10872   005D92  EFCD  F02E         	goto	u9131
 10873   005D96  EFCF  F02E         	goto	u9130
 10874   005D9A                     u9131:
 10875   005D9A  EFE7  F02E         	goto	l7020
 10876   005D9E                     u9130:
 10877   005D9E  5018               	movf	utoa@d^0,w,c
 10878   005DA0  1019               	iorwf	(utoa@d+1)^0,w,c
 10879   005DA2  101A               	iorwf	(utoa@d+2)^0,w,c
 10880   005DA4  101B               	iorwf	(utoa@d+3)^0,w,c
 10881   005DA6  A4D8               	btfss	status,2,c
 10882   005DA8  EFD8  F02E         	goto	u9141
 10883   005DAC  EFDA  F02E         	goto	u9140
 10884   005DB0                     u9141:
 10885   005DB0  EF88  F02E         	goto	l7004
 10886   005DB4                     u9140:
 10887   005DB4  BE1F               	btfsc	(utoa@p+1)^0,7,c
 10888   005DB6  EFE7  F02E         	goto	u9150
 10889   005DBA  501F               	movf	(utoa@p+1)^0,w,c
 10890   005DBC  E106               	bnz	u9151
 10891   005DBE  041E               	decf	utoa@p^0,w,c
 10892   005DC0  B0D8               	btfsc	status,0,c
 10893   005DC2  EFE5  F02E         	goto	u9151
 10894   005DC6  EFE7  F02E         	goto	u9150
 10895   005DCA                     u9151:
 10896   005DCA  EF88  F02E         	goto	l7004
 10897   005DCE                     u9150:
 10898   005DCE                     l7020:
 10899                           
 10900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 10901   005DCE  C017  F00F         	movff	utoa@fp,pad@fp
 10902   005DD2  0E7A               	movlw	low _dbuf
 10903   005DD4  2420               	addwf	utoa@i^0,w,c
 10904   005DD6  6E10               	movwf	pad@buf^0,c
 10905   005DD8  0E03               	movlw	high _dbuf
 10906   005DDA  2021               	addwfc	(utoa@i+1)^0,w,c
 10907   005DDC  6E11               	movwf	(pad@buf+1)^0,c
 10908   005DDE  C01C  F012         	movff	utoa@w,pad@p
 10909   005DE2  C01D  F013         	movff	utoa@w+1,pad@p+1
 10910   005DE6  ECD9  F035         	call	_pad	;wreg free
 10911   005DEA  0012               	return		;funcret
 10912   005DEC                     __end_of_utoa:
 10913                           	callstack 0
 10914                           
 10915 ;; *************** function ___llmod *****************
 10916 ;; Defined at:
 10917 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\llmod.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;  dividend        4    0[COMRAM] unsigned long 
 10920 ;;  divisor         4    4[COMRAM] unsigned long 
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;  counter         1    8[COMRAM] unsigned char 
 10923 ;; Return value:  Size  Location     Type
 10924 ;;                  4    0[COMRAM] unsigned long 
 10925 ;; Registers used:
 10926 ;;		wreg, status,2, status,0
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10932 ;;      Params:         8       0       0       0       0       0       0       0       0
 10933 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10934 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10935 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10936 ;;Total ram usage:        9 bytes
 10937 ;; Hardware stack levels used: 1
 10938 ;; Hardware stack levels required when called: 1
 10939 ;; This function calls:
 10940 ;;		Nothing
 10941 ;; This function is called by:
 10942 ;;		_utoa
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text21
 10947   006AB4                     __ptext21:
 10948                           	callstack 0
 10949   006AB4                     ___llmod:
 10950                           	callstack 24
 10951   006AB4  5005               	movf	___llmod@divisor^0,w,c
 10952   006AB6  1006               	iorwf	(___llmod@divisor+1)^0,w,c
 10953   006AB8  1007               	iorwf	(___llmod@divisor+2)^0,w,c
 10954   006ABA  1008               	iorwf	(___llmod@divisor+3)^0,w,c
 10955   006ABC  B4D8               	btfsc	status,2,c
 10956   006ABE  EF63  F035         	goto	u8391
 10957   006AC2  EF65  F035         	goto	u8390
 10958   006AC6                     u8391:
 10959   006AC6  EF95  F035         	goto	l705
 10960   006ACA                     u8390:
 10961   006ACA  0E01               	movlw	1
 10962   006ACC  6E09               	movwf	___llmod@counter^0,c
 10963   006ACE  EF6F  F035         	goto	l6614
 10964   006AD2                     l6612:
 10965   006AD2  90D8               	bcf	status,0,c
 10966   006AD4  3605               	rlcf	___llmod@divisor^0,f,c
 10967   006AD6  3606               	rlcf	(___llmod@divisor+1)^0,f,c
 10968   006AD8  3607               	rlcf	(___llmod@divisor+2)^0,f,c
 10969   006ADA  3608               	rlcf	(___llmod@divisor+3)^0,f,c
 10970   006ADC  2A09               	incf	___llmod@counter^0,f,c
 10971   006ADE                     l6614:
 10972   006ADE  AE08               	btfss	(___llmod@divisor+3)^0,7,c
 10973   006AE0  EF74  F035         	goto	u8401
 10974   006AE4  EF76  F035         	goto	u8400
 10975   006AE8                     u8401:
 10976   006AE8  EF69  F035         	goto	l6612
 10977   006AEC                     u8400:
 10978   006AEC                     l6616:
 10979   006AEC  5005               	movf	___llmod@divisor^0,w,c
 10980   006AEE  5C01               	subwf	___llmod@dividend^0,w,c
 10981   006AF0  5006               	movf	(___llmod@divisor+1)^0,w,c
 10982   006AF2  5802               	subwfb	(___llmod@dividend+1)^0,w,c
 10983   006AF4  5007               	movf	(___llmod@divisor+2)^0,w,c
 10984   006AF6  5803               	subwfb	(___llmod@dividend+2)^0,w,c
 10985   006AF8  5008               	movf	(___llmod@divisor+3)^0,w,c
 10986   006AFA  5804               	subwfb	(___llmod@dividend+3)^0,w,c
 10987   006AFC  A0D8               	btfss	status,0,c
 10988   006AFE  EF83  F035         	goto	u8411
 10989   006B02  EF85  F035         	goto	u8410
 10990   006B06                     u8411:
 10991   006B06  EF8D  F035         	goto	l6620
 10992   006B0A                     u8410:
 10993   006B0A  5005               	movf	___llmod@divisor^0,w,c
 10994   006B0C  5E01               	subwf	___llmod@dividend^0,f,c
 10995   006B0E  5006               	movf	(___llmod@divisor+1)^0,w,c
 10996   006B10  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
 10997   006B12  5007               	movf	(___llmod@divisor+2)^0,w,c
 10998   006B14  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
 10999   006B16  5008               	movf	(___llmod@divisor+3)^0,w,c
 11000   006B18  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
 11001   006B1A                     l6620:
 11002   006B1A  90D8               	bcf	status,0,c
 11003   006B1C  3208               	rrcf	(___llmod@divisor+3)^0,f,c
 11004   006B1E  3207               	rrcf	(___llmod@divisor+2)^0,f,c
 11005   006B20  3206               	rrcf	(___llmod@divisor+1)^0,f,c
 11006   006B22  3205               	rrcf	___llmod@divisor^0,f,c
 11007   006B24  2E09               	decfsz	___llmod@counter^0,f,c
 11008   006B26  EF76  F035         	goto	l6616
 11009   006B2A                     l705:
 11010   006B2A  C001  F001         	movff	___llmod@dividend,?___llmod
 11011   006B2E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 11012   006B32  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 11013   006B36  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 11014   006B3A  0012               	return		;funcret
 11015   006B3C                     __end_of___llmod:
 11016                           	callstack 0
 11017                           
 11018 ;; *************** function ___lldiv *****************
 11019 ;; Defined at:
 11020 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;  dividend        4    0[COMRAM] unsigned long 
 11023 ;;  divisor         4    4[COMRAM] unsigned long 
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;  quotient        4    8[COMRAM] unsigned long 
 11026 ;;  counter         1   12[COMRAM] unsigned char 
 11027 ;; Return value:  Size  Location     Type
 11028 ;;                  4    0[COMRAM] unsigned long 
 11029 ;; Registers used:
 11030 ;;		wreg, status,2, status,0
 11031 ;; Tracked objects:
 11032 ;;		On entry : 0/0
 11033 ;;		On exit  : 0/0
 11034 ;;		Unchanged: 0/0
 11035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11036 ;;      Params:         8       0       0       0       0       0       0       0       0
 11037 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11038 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11039 ;;      Totals:        13       0       0       0       0       0       0       0       0
 11040 ;;Total ram usage:       13 bytes
 11041 ;; Hardware stack levels used: 1
 11042 ;; Hardware stack levels required when called: 1
 11043 ;; This function calls:
 11044 ;;		Nothing
 11045 ;; This function is called by:
 11046 ;;		_Handle_Fire_Events
 11047 ;;		_utoa
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text22
 11052   00697C                     __ptext22:
 11053                           	callstack 0
 11054   00697C                     ___lldiv:
 11055                           	callstack 24
 11056   00697C  0E00               	movlw	0
 11057   00697E  6E09               	movwf	___lldiv@quotient^0,c
 11058   006980  0E00               	movlw	0
 11059   006982  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 11060   006984  0E00               	movlw	0
 11061   006986  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 11062   006988  0E00               	movlw	0
 11063   00698A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 11064   00698C  5005               	movf	___lldiv@divisor^0,w,c
 11065   00698E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 11066   006990  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 11067   006992  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 11068   006994  B4D8               	btfsc	status,2,c
 11069   006996  EFCF  F034         	goto	u7661
 11070   00699A  EFD1  F034         	goto	u7660
 11071   00699E                     u7661:
 11072   00699E  EF07  F035         	goto	l312
 11073   0069A2                     u7660:
 11074   0069A2  0E01               	movlw	1
 11075   0069A4  6E0D               	movwf	___lldiv@counter^0,c
 11076   0069A6  EFDB  F034         	goto	l6154
 11077   0069AA                     l6152:
 11078   0069AA  90D8               	bcf	status,0,c
 11079   0069AC  3605               	rlcf	___lldiv@divisor^0,f,c
 11080   0069AE  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 11081   0069B0  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 11082   0069B2  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 11083   0069B4  2A0D               	incf	___lldiv@counter^0,f,c
 11084   0069B6                     l6154:
 11085   0069B6  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 11086   0069B8  EFE0  F034         	goto	u7671
 11087   0069BC  EFE2  F034         	goto	u7670
 11088   0069C0                     u7671:
 11089   0069C0  EFD5  F034         	goto	l6152
 11090   0069C4                     u7670:
 11091   0069C4                     l6156:
 11092   0069C4  90D8               	bcf	status,0,c
 11093   0069C6  3609               	rlcf	___lldiv@quotient^0,f,c
 11094   0069C8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 11095   0069CA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 11096   0069CC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 11097   0069CE  5005               	movf	___lldiv@divisor^0,w,c
 11098   0069D0  5C01               	subwf	___lldiv@dividend^0,w,c
 11099   0069D2  5006               	movf	(___lldiv@divisor+1)^0,w,c
 11100   0069D4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 11101   0069D6  5007               	movf	(___lldiv@divisor+2)^0,w,c
 11102   0069D8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 11103   0069DA  5008               	movf	(___lldiv@divisor+3)^0,w,c
 11104   0069DC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 11105   0069DE  A0D8               	btfss	status,0,c
 11106   0069E0  EFF4  F034         	goto	u7681
 11107   0069E4  EFF6  F034         	goto	u7680
 11108   0069E8                     u7681:
 11109   0069E8  EFFF  F034         	goto	l6164
 11110   0069EC                     u7680:
 11111   0069EC  5005               	movf	___lldiv@divisor^0,w,c
 11112   0069EE  5E01               	subwf	___lldiv@dividend^0,f,c
 11113   0069F0  5006               	movf	(___lldiv@divisor+1)^0,w,c
 11114   0069F2  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 11115   0069F4  5007               	movf	(___lldiv@divisor+2)^0,w,c
 11116   0069F6  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 11117   0069F8  5008               	movf	(___lldiv@divisor+3)^0,w,c
 11118   0069FA  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 11119   0069FC  8009               	bsf	___lldiv@quotient^0,0,c
 11120   0069FE                     l6164:
 11121   0069FE  90D8               	bcf	status,0,c
 11122   006A00  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 11123   006A02  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 11124   006A04  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 11125   006A06  3205               	rrcf	___lldiv@divisor^0,f,c
 11126   006A08  2E0D               	decfsz	___lldiv@counter^0,f,c
 11127   006A0A  EFE2  F034         	goto	l6156
 11128   006A0E                     l312:
 11129   006A0E  C009  F001         	movff	___lldiv@quotient,?___lldiv
 11130   006A12  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 11131   006A16  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 11132   006A1A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 11133   006A1E  0012               	return		;funcret
 11134   006A20                     __end_of___lldiv:
 11135                           	callstack 0
 11136                           
 11137 ;; *************** function _stoa *****************
 11138 ;; Defined at:
 11139 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11140 ;; Parameters:    Size  Location     Type
 11141 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
 11142 ;;		 -> sprintf@f(11), 
 11143 ;;  s               2    9[COMRAM] PTR unsigned char 
 11144 ;;		 -> ?_sprintf(2), sp__powf(4), STR_15(1), STR_14(7), 
 11145 ;;		 -> STR_13(1), STR_12(9), STR_11(9), Handle_Test_Events@test_data(50), 
 11146 ;;		 -> STR_9(1), STR_8(11), STR_7(9), Handle_Fire_Events@end_data(150), 
 11147 ;;		 -> STR_5(11), Handle_Fire_Events@start_data(100), fire_trigger_sensor(20), 
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;  l               2   17[COMRAM] int 
 11150 ;;  cp              2   15[COMRAM] PTR unsigned char 
 11151 ;;		 -> STR_24(7), ?_sprintf(2), sp__powf(4), STR_15(1), 
 11152 ;;		 -> STR_14(7), STR_13(1), STR_12(9), STR_11(9), 
 11153 ;;		 -> Handle_Test_Events@test_data(50), STR_9(1), STR_8(11), STR_7(9), 
 11154 ;;		 -> Handle_Fire_Events@end_data(150), STR_5(11), Handle_Fire_Events@start_data(100), fire_trigger_sensor(20), 
 11155 ;;  p               2   13[COMRAM] int 
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  1    wreg      void 
 11158 ;; Registers used:
 11159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11165 ;;      Params:         3       0       0       0       0       0       0       0       0
 11166 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11167 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11168 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11169 ;;Total ram usage:       11 bytes
 11170 ;; Hardware stack levels used: 1
 11171 ;; Hardware stack levels required when called: 3
 11172 ;; This function calls:
 11173 ;;		_fputc
 11174 ;; This function is called by:
 11175 ;;		_vfpfcnvrt
 11176 ;; This function uses a non-reentrant model
 11177 ;;
 11178                           
 11179                           	psect	text23
 11180   006206                     __ptext23:
 11181                           	callstack 0
 11182   006206                     _stoa:
 11183                           	callstack 23
 11184   006206                     
 11185                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 951
      +                          :     cp = s;
 11186   006206  C00A  F010         	movff	stoa@s,stoa@cp
 11187   00620A  C00B  F011         	movff	stoa@s+1,stoa@cp+1
 11188                           
 11189                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 11190   00620E  5010               	movf	stoa@cp^0,w,c
 11191   006210  1011               	iorwf	(stoa@cp+1)^0,w,c
 11192   006212  A4D8               	btfss	status,2,c
 11193   006214  EF0E  F031         	goto	u9051
 11194   006218  EF10  F031         	goto	u9050
 11195   00621C                     u9051:
 11196   00621C  EF14  F031         	goto	l6978
 11197   006220                     u9050:
 11198   006220                     
 11199                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 11200   006220  0EE9               	movlw	low STR_24
 11201   006222  6E10               	movwf	stoa@cp^0,c
 11202   006224  0E7F               	movlw	high STR_24
 11203   006226  6E11               	movwf	(stoa@cp+1)^0,c
 11204   006228                     l6978:
 11205                           
 11206                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 11207   006228  0E00               	movlw	0
 11208   00622A  6E13               	movwf	(stoa@l+1)^0,c
 11209   00622C  0E00               	movlw	0
 11210   00622E  6E12               	movwf	stoa@l^0,c
 11211   006230  EF1C  F031         	goto	l6982
 11212   006234                     l6980:
 11213   006234  4A12               	infsnz	stoa@l^0,f,c
 11214   006236  2A13               	incf	(stoa@l+1)^0,f,c
 11215   006238                     l6982:
 11216   006238  5012               	movf	stoa@l^0,w,c
 11217   00623A  2410               	addwf	stoa@cp^0,w,c
 11218   00623C  6E0C               	movwf	??_stoa^0,c
 11219   00623E  5013               	movf	(stoa@l+1)^0,w,c
 11220   006240  2011               	addwfc	(stoa@cp+1)^0,w,c
 11221   006242  6E0D               	movwf	(??_stoa+1)^0,c
 11222   006244  C00C  FFF6         	movff	??_stoa,tblptrl
 11223   006248  C00D  FFF7         	movff	??_stoa+1,tblptrh
 11224   00624C  6AF8               	clrf	tblptru,c
 11225   00624E  0E07               	movlw	(high __ramtop+-1)
 11226   006250  64F7               	cpfsgt	tblptrh,c
 11227   006252  D003               	bra	u9067
 11228   006254  0008               	tblrd		*
 11229   006256  50F5               	movf	tablat,w,c
 11230   006258  D005               	bra	u9060
 11231   00625A                     u9067:
 11232   00625A  CFF6 FFE1          	movff	tblptrl,fsr1l
 11233   00625E  CFF7 FFE2          	movff	tblptrh,fsr1h
 11234   006262  50E7               	movf	indf1,w,c
 11235   006264                     u9060:
 11236   006264  0900               	iorlw	0
 11237   006266  A4D8               	btfss	status,2,c
 11238   006268  EF38  F031         	goto	u9071
 11239   00626C  EF3A  F031         	goto	u9070
 11240   006270                     u9071:
 11241   006270  EF1A  F031         	goto	l6980
 11242   006274                     u9070:
 11243   006274                     
 11244                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 11245   006274  0102               	movlb	2	; () banked
 11246   006276  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 11247   006278  EF40  F031         	goto	u9081
 11248   00627C  EF42  F031         	goto	u9080
 11249   006280                     u9081:
 11250   006280  EF55  F031         	goto	l1074
 11251   006284                     u9080:
 11252   006284                     
 11253                           ; BSR set to: 2
 11254   006284  5012               	movf	stoa@l^0,w,c
 11255   006286  5DFE               	subwf	_prec& (0+255),w,b
 11256   006288  51FF               	movf	(_prec+1)& (0+255),w,b
 11257   00628A  0A80               	xorlw	128
 11258   00628C  6E0C               	movwf	??_stoa^0,c
 11259   00628E  5013               	movf	(stoa@l+1)^0,w,c
 11260   006290  0A80               	xorlw	128
 11261   006292  580C               	subwfb	??_stoa^0,w,c
 11262   006294  B0D8               	btfsc	status,0,c
 11263   006296  EF4F  F031         	goto	u9091
 11264   00629A  EF51  F031         	goto	u9090
 11265   00629E                     u9091:
 11266   00629E  EF55  F031         	goto	l1074
 11267   0062A2                     u9090:
 11268   0062A2                     
 11269                           ; BSR set to: 2
 11270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 11271   0062A2  C2FE  F012         	movff	_prec,stoa@l
 11272   0062A6  C2FF  F013         	movff	_prec+1,stoa@l+1
 11273   0062AA                     l1074:
 11274                           
 11275                           ; BSR set to: 2
 11276                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 965:     p = l;
 11277   0062AA  C012  F00E         	movff	stoa@l,stoa@p
 11278   0062AE  C013  F00F         	movff	stoa@l+1,stoa@p+1
 11279                           
 11280                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11281   0062B2  EF75  F031         	goto	l6994
 11282   0062B6                     l6990:
 11283                           
 11284                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 11285   0062B6  C010  FFF6         	movff	stoa@cp,tblptrl
 11286   0062BA  C011  FFF7         	movff	stoa@cp+1,tblptrh
 11287   0062BE  6AF8               	clrf	tblptru,c
 11288   0062C0  0E07               	movlw	(high __ramtop+-1)
 11289   0062C2  64F7               	cpfsgt	tblptrh,c
 11290   0062C4  D003               	bra	u9107
 11291   0062C6  0008               	tblrd		*
 11292   0062C8  50F5               	movf	tablat,w,c
 11293   0062CA  D005               	bra	u9100
 11294   0062CC                     u9107:
 11295   0062CC  CFF6 FFE1          	movff	tblptrl,fsr1l
 11296   0062D0  CFF7 FFE2          	movff	tblptrh,fsr1h
 11297   0062D4  50E7               	movf	indf1,w,c
 11298   0062D6                     u9100:
 11299   0062D6  6E0C               	movwf	??_stoa^0,c
 11300   0062D8  500C               	movf	??_stoa^0,w,c
 11301   0062DA  6E01               	movwf	fputc@c^0,c
 11302   0062DC  6A02               	clrf	(fputc@c+1)^0,c
 11303   0062DE  C009  F003         	movff	stoa@fp,fputc@fp
 11304   0062E2  EC5F  F033         	call	_fputc	;wreg free
 11305   0062E6                     
 11306                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 11307   0062E6  4A10               	infsnz	stoa@cp^0,f,c
 11308   0062E8  2A11               	incf	(stoa@cp+1)^0,f,c
 11309   0062EA                     l6994:
 11310                           
 11311                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11312   0062EA  060E               	decf	stoa@p^0,f,c
 11313   0062EC  A0D8               	btfss	status,0,c
 11314   0062EE  060F               	decf	(stoa@p+1)^0,f,c
 11315   0062F0  280E               	incf	stoa@p^0,w,c
 11316   0062F2  E106               	bnz	u9111
 11317   0062F4  280F               	incf	(stoa@p+1)^0,w,c
 11318   0062F6  A4D8               	btfss	status,2,c
 11319   0062F8  EF80  F031         	goto	u9111
 11320   0062FC  EF82  F031         	goto	u9110
 11321   006300                     u9111:
 11322   006300  EF5B  F031         	goto	l6990
 11323   006304                     u9110:
 11324   006304  0012               	return		;funcret
 11325   006306                     __end_of_stoa:
 11326                           	callstack 0
 11327                           
 11328 ;; *************** function _read_prec_or_width *****************
 11329 ;; Defined at:
 11330 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
 11333 ;;		 -> vfprintf@cfmt(2), 
 11334 ;;  ap              1    1[COMRAM] PTR PTR void [1]
 11335 ;;		 -> sprintf@ap(1), 
 11336 ;; Auto vars:     Size  Location     Type
 11337 ;;  c               1    4[COMRAM] unsigned char 
 11338 ;;  n               2    5[COMRAM] int 
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  2    0[COMRAM] int 
 11341 ;; Registers used:
 11342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11348 ;;      Params:         2       0       0       0       0       0       0       0       0
 11349 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11350 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11351 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11352 ;;Total ram usage:        7 bytes
 11353 ;; Hardware stack levels used: 1
 11354 ;; Hardware stack levels required when called: 1
 11355 ;; This function calls:
 11356 ;;		Nothing
 11357 ;; This function is called by:
 11358 ;;		_vfpfcnvrt
 11359 ;; This function uses a non-reentrant model
 11360 ;;
 11361                           
 11362                           	psect	text24
 11363   006826                     __ptext24:
 11364                           	callstack 0
 11365   006826                     _read_prec_or_width:
 11366                           	callstack 25
 11367   006826                     
 11368                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11369   006826  0E00               	movlw	0
 11370   006828  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11371   00682A  0E00               	movlw	0
 11372   00682C  6E06               	movwf	read_prec_or_width@n^0,c
 11373   00682E                     
 11374                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11375   00682E  5001               	movf	read_prec_or_width@fmt^0,w,c
 11376   006830  6ED9               	movwf	fsr2l,c
 11377   006832  6ADA               	clrf	fsr2h,c
 11378   006834  CFDE FFF6          	movff	postinc2,tblptrl
 11379   006838  CFDD FFF7          	movff	postdec2,tblptrh
 11380   00683C                     	if	0	;tblptru may be non-zero
 11381   00683C                     	endif
 11382   00683C                     	if	0	;tblptru may be non-zero
 11383   00683C                     	endif
 11384   00683C  0008               	tblrd		*
 11385   00683E  50F5               	movf	tablat,w,c
 11386   006840  0A2A               	xorlw	42
 11387   006842  A4D8               	btfss	status,2,c
 11388   006844  EF26  F034         	goto	u9161
 11389   006848  EF28  F034         	goto	u9160
 11390   00684C                     u9161:
 11391   00684C  EF51  F034         	goto	l7036
 11392   006850                     u9160:
 11393   006850                     
 11394                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11395   006850  5001               	movf	read_prec_or_width@fmt^0,w,c
 11396   006852  6ED9               	movwf	fsr2l,c
 11397   006854  6ADA               	clrf	fsr2h,c
 11398   006856  2ADE               	incf	postinc2,f,c
 11399   006858  0E00               	movlw	0
 11400   00685A  22DD               	addwfc	postdec2,f,c
 11401   00685C                     
 11402                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11403   00685C  5002               	movf	read_prec_or_width@ap^0,w,c
 11404   00685E  6ED9               	movwf	fsr2l,c
 11405   006860  6ADA               	clrf	fsr2h,c
 11406   006862  0E02               	movlw	2
 11407   006864  26DF               	addwf	indf2,f,c
 11408   006866  5CDF               	subwf	indf2,w,c
 11409   006868  6ED9               	movwf	fsr2l,c
 11410   00686A  6ADA               	clrf	fsr2h,c
 11411   00686C  CFDE F006          	movff	postinc2,read_prec_or_width@n
 11412   006870  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
 11413                           
 11414                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11415   006874  EF64  F034         	goto	l1094
 11416   006878                     l7032:
 11417                           
 11418                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11419   006878  0E0A               	movlw	10
 11420   00687A  0206               	mulwf	read_prec_or_width@n^0,c
 11421   00687C  CFF3 F003          	movff	prodl,??_read_prec_or_width
 11422   006880  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
 11423   006884  0207               	mulwf	(read_prec_or_width@n+1)^0,c
 11424   006886  50F3               	movf	prodl,w,c
 11425   006888  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
 11426   00688A  5005               	movf	read_prec_or_width@c^0,w,c
 11427   00688C  2403               	addwf	??_read_prec_or_width^0,w,c
 11428   00688E  6E06               	movwf	read_prec_or_width@n^0,c
 11429   006890  0E00               	movlw	0
 11430   006892  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
 11431   006894  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11432   006896                     
 11433                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11434   006896  5001               	movf	read_prec_or_width@fmt^0,w,c
 11435   006898  6ED9               	movwf	fsr2l,c
 11436   00689A  6ADA               	clrf	fsr2h,c
 11437   00689C  2ADE               	incf	postinc2,f,c
 11438   00689E  0E00               	movlw	0
 11439   0068A0  22DD               	addwfc	postdec2,f,c
 11440   0068A2                     l7036:
 11441                           
 11442                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11443   0068A2  5001               	movf	read_prec_or_width@fmt^0,w,c
 11444   0068A4  6ED9               	movwf	fsr2l,c
 11445   0068A6  6ADA               	clrf	fsr2h,c
 11446   0068A8  CFDE FFF6          	movff	postinc2,tblptrl
 11447   0068AC  CFDD FFF7          	movff	postdec2,tblptrh
 11448   0068B0                     	if	0	;tblptru may be non-zero
 11449   0068B0                     	endif
 11450   0068B0                     	if	0	;tblptru may be non-zero
 11451   0068B0                     	endif
 11452   0068B0  0008               	tblrd		*
 11453   0068B2  50F5               	movf	tablat,w,c
 11454   0068B4  0FD0               	addlw	208
 11455   0068B6  6E05               	movwf	read_prec_or_width@c^0,c
 11456   0068B8  0E09               	movlw	9
 11457   0068BA  6405               	cpfsgt	read_prec_or_width@c^0,c
 11458   0068BC  EF62  F034         	goto	u9171
 11459   0068C0  EF64  F034         	goto	u9170
 11460   0068C4                     u9171:
 11461   0068C4  EF3C  F034         	goto	l7032
 11462   0068C8                     u9170:
 11463   0068C8                     l1094:
 11464                           
 11465                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11466   0068C8  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
 11467   0068CC  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 11468   0068D0  0012               	return		;funcret
 11469   0068D2                     __end_of_read_prec_or_width:
 11470                           	callstack 0
 11471                           
 11472 ;; *************** function _efgtoa *****************
 11473 ;; Defined at:
 11474 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 11477 ;;		 -> sprintf@f(11), 
 11478 ;;  f               4    9[BANK0 ] PTR struct _IO_FILE
 11479 ;;  c               1   13[BANK0 ] unsigned char 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;  u               4   56[BANK0 ] struct flui
 11482 ;;  g               4   50[BANK0 ] struct flui
 11483 ;;  l               4   45[BANK0 ] struct flui
 11484 ;;  h               4   41[BANK0 ] struct flui
 11485 ;;  ou              4   35[BANK0 ] struct flui
 11486 ;;  n               2   54[BANK0 ] int 
 11487 ;;  i               2   39[BANK0 ] int 
 11488 ;;  w               2   33[BANK0 ] int 
 11489 ;;  e               2   31[BANK0 ] int 
 11490 ;;  m               2   29[BANK0 ] int 
 11491 ;;  d               2   27[BANK0 ] int 
 11492 ;;  t               2   20[BANK0 ] int 
 11493 ;;  p               2   18[BANK0 ] int 
 11494 ;;  ne              2   16[BANK0 ] int 
 11495 ;;  sign            1   49[BANK0 ] unsigned char 
 11496 ;;  nmode           1   26[BANK0 ] unsigned char 
 11497 ;;  mode            1   25[BANK0 ] unsigned char 
 11498 ;;  pp              1   24[BANK0 ] unsigned char 
 11499 ;;  esign           1    0        unsigned char 
 11500 ;; Return value:  Size  Location     Type
 11501 ;;                  1    wreg      void 
 11502 ;; Registers used:
 11503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11504 ;; Tracked objects:
 11505 ;;		On entry : 0/0
 11506 ;;		On exit  : 0/0
 11507 ;;		Unchanged: 0/0
 11508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11509 ;;      Params:         0       6       0       0       0       0       0       0       0
 11510 ;;      Locals:         0      44       0       0       0       0       0       0       0
 11511 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11512 ;;      Totals:         0      52       0       0       0       0       0       0       0
 11513 ;;Total ram usage:       52 bytes
 11514 ;; Hardware stack levels used: 1
 11515 ;; Hardware stack levels required when called: 5
 11516 ;; This function calls:
 11517 ;;		___fladd
 11518 ;;		___fldiv
 11519 ;;		___fleq
 11520 ;;		___flge
 11521 ;;		___flmul
 11522 ;;		___flneg
 11523 ;;		___flsub
 11524 ;;		___fltol
 11525 ;;		___fpclassifyf
 11526 ;;		_floorf
 11527 ;;		_labs
 11528 ;;		_memcpy
 11529 ;;		_pad
 11530 ;;		_strcpy
 11531 ;; This function is called by:
 11532 ;;		_vfpfcnvrt
 11533 ;; This function uses a non-reentrant model
 11534 ;;
 11535                           
 11536                           	psect	text25
 11537   0024C8                     __ptext25:
 11538                           	callstack 0
 11539   0024C8                     _efgtoa:
 11540                           	callstack 21
 11541   0024C8                     
 11542                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 11543   0024C8  0100               	movlb	0	; () banked
 11544   0024CA  6B91               	clrf	efgtoa@sign& (0+255),b
 11545                           
 11546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 11547   0024CC  C069  F092         	movff	efgtoa@f,efgtoa@g
 11548   0024D0  C06A  F093         	movff	efgtoa@f+1,efgtoa@g+1
 11549   0024D4  C06B  F094         	movff	efgtoa@f+2,efgtoa@g+2
 11550   0024D8  C06C  F095         	movff	efgtoa@f+3,efgtoa@g+3
 11551   0024DC                     
 11552                           ; BSR set to: 0
 11553                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 11554   0024DC  BF95               	btfsc	(efgtoa@g+3)& (0+255),7,b
 11555   0024DE  EF75  F012         	goto	u8730
 11556   0024E2  EF73  F012         	goto	u8731
 11557   0024E6                     u8731:
 11558   0024E6  EF89  F012         	goto	l6762
 11559   0024EA                     u8730:
 11560   0024EA                     
 11561                           ; BSR set to: 0
 11562                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 11563   0024EA  0E01               	movlw	1
 11564   0024EC  6F91               	movwf	efgtoa@sign& (0+255),b
 11565   0024EE                     
 11566                           ; BSR set to: 0
 11567                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 11568   0024EE  C092  F001         	movff	efgtoa@g,___flneg@f1
 11569   0024F2  C093  F002         	movff	efgtoa@g+1,___flneg@f1+1
 11570   0024F6  C094  F003         	movff	efgtoa@g+2,___flneg@f1+2
 11571   0024FA  C095  F004         	movff	efgtoa@g+3,___flneg@f1+3
 11572   0024FE  EC45  F037         	call	___flneg	;wreg free
 11573   002502  C001  F092         	movff	?___flneg,efgtoa@g
 11574   002506  C002  F093         	movff	?___flneg+1,efgtoa@g+1
 11575   00250A  C003  F094         	movff	?___flneg+2,efgtoa@g+2
 11576   00250E  C004  F095         	movff	?___flneg+3,efgtoa@g+3
 11577   002512                     l6762:
 11578                           
 11579                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 11580   002512  0E00               	movlw	0
 11581   002514  0100               	movlb	0	; () banked
 11582   002516  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11583   002518  0E00               	movlw	0
 11584   00251A  6F96               	movwf	efgtoa@n& (0+255),b
 11585   00251C                     
 11586                           ; BSR set to: 0
 11587                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 11588   00251C  C36A  F081         	movff	_width,efgtoa@w
 11589   002520  C36B  F082         	movff	_width+1,efgtoa@w+1
 11590   002524                     
 11591                           ; BSR set to: 0
 11592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
 11593   002524  5191               	movf	efgtoa@sign& (0+255),w,b
 11594   002526  B4D8               	btfsc	status,2,c
 11595   002528  EF98  F012         	goto	u8741
 11596   00252C  EF9A  F012         	goto	u8740
 11597   002530                     u8741:
 11598   002530  EFAE  F012         	goto	l6776
 11599   002534                     u8740:
 11600   002534                     
 11601                           ; BSR set to: 0
 11602                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 11603   002534  5191               	movf	efgtoa@sign& (0+255),w,b
 11604   002536  A4D8               	btfss	status,2,c
 11605   002538  EFA0  F012         	goto	u8751
 11606   00253C  EFA2  F012         	goto	u8750
 11607   002540                     u8751:
 11608   002540  EFA8  F012         	goto	l6772
 11609   002544                     u8750:
 11610   002544                     
 11611                           ; BSR set to: 0
 11612   002544  0E00               	movlw	0
 11613   002546  6F77               	movwf	(_efgtoa$1379+1)& (0+255),b
 11614   002548  0E2B               	movlw	43
 11615   00254A  6F76               	movwf	_efgtoa$1379& (0+255),b
 11616   00254C  EFAC  F012         	goto	l6774
 11617   002550                     l6772:
 11618                           
 11619                           ; BSR set to: 0
 11620   002550  0E00               	movlw	0
 11621   002552  6F77               	movwf	(_efgtoa$1379+1)& (0+255),b
 11622   002554  0E2D               	movlw	45
 11623   002556  6F76               	movwf	_efgtoa$1379& (0+255),b
 11624   002558                     l6774:
 11625                           
 11626                           ; BSR set to: 0
 11627   002558  C076  F091         	movff	_efgtoa$1379,efgtoa@sign
 11628   00255C                     l6776:
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 11632   00255C  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
 11633   002560  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11634   002564  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11635   002568  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11636   00256C  EC83  F031         	call	___fpclassifyf	;wreg free
 11637   002570  0401               	decf	?___fpclassifyf^0,w,c
 11638   002572  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11639   002574  A4D8               	btfss	status,2,c
 11640   002576  EFBF  F012         	goto	u8761
 11641   00257A  EFC1  F012         	goto	u8760
 11642   00257E                     u8761:
 11643   00257E  EFF2  F012         	goto	l6794
 11644   002582                     u8760:
 11645   002582                     
 11646                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 11647   002582  0100               	movlb	0	; () banked
 11648   002584  5191               	movf	efgtoa@sign& (0+255),w,b
 11649   002586  B4D8               	btfsc	status,2,c
 11650   002588  EFC8  F012         	goto	u8771
 11651   00258C  EFCA  F012         	goto	u8770
 11652   002590                     u8771:
 11653   002590  EFD3  F012         	goto	l6786
 11654   002594                     u8770:
 11655   002594                     
 11656                           ; BSR set to: 0
 11657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 11658   002594  C091  F37A         	movff	efgtoa@sign,_dbuf
 11659   002598                     
 11660                           ; BSR set to: 0
 11661                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
 11662   002598  0781               	decf	efgtoa@w& (0+255),f,b
 11663   00259A  A0D8               	btfss	status,0,c
 11664   00259C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 11665   00259E                     
 11666                           ; BSR set to: 0
 11667                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 11668   00259E  0E00               	movlw	0
 11669   0025A0  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11670   0025A2  0E01               	movlw	1
 11671   0025A4  6F96               	movwf	efgtoa@n& (0+255),b
 11672   0025A6                     l6786:
 11673                           
 11674                           ; BSR set to: 0
 11675                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 11676   0025A6  0E7A               	movlw	low _dbuf
 11677   0025A8  2596               	addwf	efgtoa@n& (0+255),w,b
 11678   0025AA  6E01               	movwf	strcpy@dest^0,c
 11679   0025AC  0E03               	movlw	high _dbuf
 11680   0025AE  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11681   0025B0  6E02               	movwf	(strcpy@dest+1)^0,c
 11682   0025B2  0EF7               	movlw	low STR_18
 11683   0025B4  6E03               	movwf	strcpy@src^0,c
 11684   0025B6  0E7F               	movlw	high STR_18
 11685   0025B8  6E04               	movwf	(strcpy@src+1)^0,c
 11686   0025BA  EC29  F037         	call	_strcpy	;wreg free
 11687   0025BE                     l6788:
 11688                           
 11689                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 11690   0025BE  0100               	movlb	0	; () banked
 11691   0025C0  0EFD               	movlw	253
 11692   0025C2  2781               	addwf	efgtoa@w& (0+255),f,b
 11693   0025C4  0EFF               	movlw	255
 11694   0025C6  2382               	addwfc	(efgtoa@w+1)& (0+255),f,b
 11695   0025C8                     
 11696                           ; BSR set to: 0
 11697                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 11698   0025C8  C068  F00F         	movff	efgtoa@fp,pad@fp
 11699   0025CC  0E7A               	movlw	low _dbuf
 11700   0025CE  6E10               	movwf	pad@buf^0,c
 11701   0025D0  0E03               	movlw	high _dbuf
 11702   0025D2  6E11               	movwf	(pad@buf+1)^0,c
 11703   0025D4  C081  F012         	movff	efgtoa@w,pad@p
 11704   0025D8  C082  F013         	movff	efgtoa@w+1,pad@p+1
 11705   0025DC  ECD9  F035         	call	_pad	;wreg free
 11706   0025E0  EF5B  F017         	goto	l1025
 11707   0025E4                     l6794:
 11708                           
 11709                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 11710   0025E4  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
 11711   0025E8  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11712   0025EC  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11713   0025F0  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11714   0025F4  EC83  F031         	call	___fpclassifyf	;wreg free
 11715   0025F8  5001               	movf	?___fpclassifyf^0,w,c
 11716   0025FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11717   0025FC  A4D8               	btfss	status,2,c
 11718   0025FE  EF03  F013         	goto	u8781
 11719   002602  EF05  F013         	goto	u8780
 11720   002606                     u8781:
 11721   002606  EF25  F013         	goto	l6812
 11722   00260A                     u8780:
 11723   00260A                     
 11724                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 11725   00260A  0100               	movlb	0	; () banked
 11726   00260C  5191               	movf	efgtoa@sign& (0+255),w,b
 11727   00260E  B4D8               	btfsc	status,2,c
 11728   002610  EF0C  F013         	goto	u8791
 11729   002614  EF0E  F013         	goto	u8790
 11730   002618                     u8791:
 11731   002618  EF17  F013         	goto	l6804
 11732   00261C                     u8790:
 11733   00261C                     
 11734                           ; BSR set to: 0
 11735                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 11736   00261C  C091  F37A         	movff	efgtoa@sign,_dbuf
 11737   002620                     
 11738                           ; BSR set to: 0
 11739                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
 11740   002620  0781               	decf	efgtoa@w& (0+255),f,b
 11741   002622  A0D8               	btfss	status,0,c
 11742   002624  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 11743   002626                     
 11744                           ; BSR set to: 0
 11745                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 11746   002626  0E00               	movlw	0
 11747   002628  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11748   00262A  0E01               	movlw	1
 11749   00262C  6F96               	movwf	efgtoa@n& (0+255),b
 11750   00262E                     l6804:
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 11754   00262E  0E7A               	movlw	low _dbuf
 11755   002630  2596               	addwf	efgtoa@n& (0+255),w,b
 11756   002632  6E01               	movwf	strcpy@dest^0,c
 11757   002634  0E03               	movlw	high _dbuf
 11758   002636  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11759   002638  6E02               	movwf	(strcpy@dest+1)^0,c
 11760   00263A  0EFB               	movlw	low STR_21
 11761   00263C  6E03               	movwf	strcpy@src^0,c
 11762   00263E  0E7F               	movlw	high STR_21
 11763   002640  6E04               	movwf	(strcpy@src+1)^0,c
 11764   002642  EC29  F037         	call	_strcpy	;wreg free
 11765   002646  EFDF  F012         	goto	l6788
 11766   00264A                     l6812:
 11767                           
 11768                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 11769   00264A  0E00               	movlw	0
 11770   00264C  0100               	movlb	0	; () banked
 11771   00264E  6F98               	movwf	efgtoa@u& (0+255),b
 11772   002650  0E00               	movlw	0
 11773   002652  6F99               	movwf	(efgtoa@u+1)& (0+255),b
 11774   002654  0E80               	movlw	128
 11775   002656  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
 11776   002658  0E3F               	movlw	63
 11777   00265A  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
 11778                           
 11779                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 11780   00265C  0E00               	movlw	0
 11781   00265E  6F80               	movwf	(efgtoa@e+1)& (0+255),b
 11782   002660  0E00               	movlw	0
 11783   002662  6F7F               	movwf	efgtoa@e& (0+255),b
 11784   002664                     
 11785                           ; BSR set to: 0
 11786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 11787   002664  C092  F001         	movff	efgtoa@g,___fleq@ff1
 11788   002668  C093  F002         	movff	efgtoa@g+1,___fleq@ff1+1
 11789   00266C  C094  F003         	movff	efgtoa@g+2,___fleq@ff1+2
 11790   002670  C095  F004         	movff	efgtoa@g+3,___fleq@ff1+3
 11791   002674  0E00               	movlw	0
 11792   002676  6E05               	movwf	___fleq@ff2^0,c
 11793   002678  0E00               	movlw	0
 11794   00267A  6E06               	movwf	(___fleq@ff2+1)^0,c
 11795   00267C  0E00               	movlw	0
 11796   00267E  6E07               	movwf	(___fleq@ff2+2)^0,c
 11797   002680  0E00               	movlw	0
 11798   002682  6E08               	movwf	(___fleq@ff2+3)^0,c
 11799   002684  EC69  F034         	call	___fleq	;wreg free
 11800   002688  B0D8               	btfsc	status,0,c
 11801   00268A  EF49  F013         	goto	u8801
 11802   00268E  EF4B  F013         	goto	u8800
 11803   002692                     u8801:
 11804   002692  EF2B  F014         	goto	l1028
 11805   002696                     u8800:
 11806   002696  EF58  F013         	goto	l6820
 11807   00269A                     l1030:
 11808                           
 11809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 11810   00269A  C083  F098         	movff	efgtoa@ou,efgtoa@u
 11811   00269E  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
 11812   0026A2  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
 11813   0026A6  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
 11814   0026AA                     
 11815                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
 11816   0026AA  0100               	movlb	0	; () banked
 11817   0026AC  4B7F               	infsnz	efgtoa@e& (0+255),f,b
 11818   0026AE  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
 11819   0026B0                     l6820:
 11820                           
 11821                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 11822   0026B0  C098  F00F         	movff	efgtoa@u,___flmul@b
 11823   0026B4  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 11824   0026B8  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 11825   0026BC  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 11826   0026C0  0E00               	movlw	0
 11827   0026C2  6E13               	movwf	___flmul@a^0,c
 11828   0026C4  0E00               	movlw	0
 11829   0026C6  6E14               	movwf	(___flmul@a+1)^0,c
 11830   0026C8  0E20               	movlw	32
 11831   0026CA  6E15               	movwf	(___flmul@a+2)^0,c
 11832   0026CC  0E41               	movlw	65
 11833   0026CE  6E16               	movwf	(___flmul@a+3)^0,c
 11834   0026D0  EC66  F020         	call	___flmul	;wreg free
 11835   0026D4  C00F  F083         	movff	?___flmul,efgtoa@ou
 11836   0026D8  C010  F084         	movff	?___flmul+1,efgtoa@ou+1
 11837   0026DC  C011  F085         	movff	?___flmul+2,efgtoa@ou+2
 11838   0026E0  C012  F086         	movff	?___flmul+3,efgtoa@ou+3
 11839   0026E4  0100               	movlb	0	; () banked
 11840   0026E6  5183               	movf	efgtoa@ou& (0+255),w,b
 11841   0026E8  5D92               	subwf	efgtoa@g& (0+255),w,b
 11842   0026EA  6E01               	movwf	labs@a^0,c
 11843   0026EC  5184               	movf	(efgtoa@ou+1)& (0+255),w,b
 11844   0026EE  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11845   0026F0  6E02               	movwf	(labs@a+1)^0,c
 11846   0026F2  5185               	movf	(efgtoa@ou+2)& (0+255),w,b
 11847   0026F4  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11848   0026F6  6E03               	movwf	(labs@a+2)^0,c
 11849   0026F8  5186               	movf	(efgtoa@ou+3)& (0+255),w,b
 11850   0026FA  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11851   0026FC  6E04               	movwf	(labs@a+3)^0,c
 11852   0026FE  EC0C  F036         	call	_labs	;wreg free
 11853   002702  BE04               	btfsc	(?_labs+3)^0,7,c
 11854   002704  EF8F  F013         	goto	u8811
 11855   002708  5004               	movf	(?_labs+3)^0,w,c
 11856   00270A  1003               	iorwf	(?_labs+2)^0,w,c
 11857   00270C  1002               	iorwf	(?_labs+1)^0,w,c
 11858   00270E  E109               	bnz	u8810
 11859   002710  0E02               	movlw	2
 11860   002712  5C01               	subwf	?_labs^0,w,c
 11861   002714  A0D8               	btfss	status,0,c
 11862   002716  EF8F  F013         	goto	u8811
 11863   00271A  EF91  F013         	goto	u8810
 11864   00271E                     u8811:
 11865   00271E  EF4D  F013         	goto	l1030
 11866   002722                     u8810:
 11867   002722  C083  F060         	movff	efgtoa@ou,___flge@ff1
 11868   002726  C084  F061         	movff	efgtoa@ou+1,___flge@ff1+1
 11869   00272A  C085  F062         	movff	efgtoa@ou+2,___flge@ff1+2
 11870   00272E  C086  F063         	movff	efgtoa@ou+3,___flge@ff1+3
 11871   002732  C092  F064         	movff	efgtoa@g,___flge@ff2
 11872   002736  C093  F065         	movff	efgtoa@g+1,___flge@ff2+1
 11873   00273A  C094  F066         	movff	efgtoa@g+2,___flge@ff2+2
 11874   00273E  C095  F067         	movff	efgtoa@g+3,___flge@ff2+3
 11875   002742  ECFE  F02F         	call	___flge	;wreg free
 11876   002746  0100               	movlb	0	; () banked
 11877   002748  A0D8               	btfss	status,0,c
 11878   00274A  EFA9  F013         	goto	u8821
 11879   00274E  EFAB  F013         	goto	u8820
 11880   002752                     u8821:
 11881   002752  EF4D  F013         	goto	l1030
 11882   002756                     u8820:
 11883   002756                     
 11884                           ; BSR set to: 0
 11885                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 11886   002756  5198               	movf	efgtoa@u& (0+255),w,b
 11887   002758  5D92               	subwf	efgtoa@g& (0+255),w,b
 11888   00275A  6E01               	movwf	labs@a^0,c
 11889   00275C  5199               	movf	(efgtoa@u+1)& (0+255),w,b
 11890   00275E  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11891   002760  6E02               	movwf	(labs@a+1)^0,c
 11892   002762  519A               	movf	(efgtoa@u+2)& (0+255),w,b
 11893   002764  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11894   002766  6E03               	movwf	(labs@a+2)^0,c
 11895   002768  519B               	movf	(efgtoa@u+3)& (0+255),w,b
 11896   00276A  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11897   00276C  6E04               	movwf	(labs@a+3)^0,c
 11898   00276E  EC0C  F036         	call	_labs	;wreg free
 11899   002772  BE04               	btfsc	(?_labs+3)^0,7,c
 11900   002774  EFC9  F013         	goto	u8830
 11901   002778  5004               	movf	(?_labs+3)^0,w,c
 11902   00277A  1003               	iorwf	(?_labs+2)^0,w,c
 11903   00277C  1002               	iorwf	(?_labs+1)^0,w,c
 11904   00277E  E107               	bnz	u8831
 11905   002780  0E02               	movlw	2
 11906   002782  5C01               	subwf	?_labs^0,w,c
 11907   002784  B0D8               	btfsc	status,0,c
 11908   002786  EFC7  F013         	goto	u8831
 11909   00278A  EFC9  F013         	goto	u8830
 11910   00278E                     u8831:
 11911   00278E  EF11  F014         	goto	l6838
 11912   002792                     u8830:
 11913   002792                     l6828:
 11914                           
 11915                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
 11916   002792  C098  F092         	movff	efgtoa@u,efgtoa@g
 11917   002796  C099  F093         	movff	efgtoa@u+1,efgtoa@g+1
 11918   00279A  C09A  F094         	movff	efgtoa@u+2,efgtoa@g+2
 11919   00279E  C09B  F095         	movff	efgtoa@u+3,efgtoa@g+3
 11920                           
 11921                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
 11922   0027A2  EF2B  F014         	goto	l1028
 11923   0027A6                     l6830:
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 11927   0027A6  C098  F028         	movff	efgtoa@u,___fldiv@b
 11928   0027AA  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 11929   0027AE  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 11930   0027B2  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 11931   0027B6  0E00               	movlw	0
 11932   0027B8  6E2C               	movwf	___fldiv@a^0,c
 11933   0027BA  0E00               	movlw	0
 11934   0027BC  6E2D               	movwf	(___fldiv@a+1)^0,c
 11935   0027BE  0E20               	movlw	32
 11936   0027C0  6E2E               	movwf	(___fldiv@a+2)^0,c
 11937   0027C2  0E41               	movlw	65
 11938   0027C4  6E2F               	movwf	(___fldiv@a+3)^0,c
 11939   0027C6  EC68  F024         	call	___fldiv	;wreg free
 11940   0027CA  C028  F098         	movff	?___fldiv,efgtoa@u
 11941   0027CE  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 11942   0027D2  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 11943   0027D6  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 11944   0027DA                     
 11945                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
 11946   0027DA  0100               	movlb	0	; () banked
 11947   0027DC  077F               	decf	efgtoa@e& (0+255),f,b
 11948   0027DE  A0D8               	btfss	status,0,c
 11949   0027E0  0780               	decf	(efgtoa@e+1)& (0+255),f,b
 11950   0027E2                     
 11951                           ; BSR set to: 0
 11952                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 11953   0027E2  5198               	movf	efgtoa@u& (0+255),w,b
 11954   0027E4  5D92               	subwf	efgtoa@g& (0+255),w,b
 11955   0027E6  6E01               	movwf	labs@a^0,c
 11956   0027E8  5199               	movf	(efgtoa@u+1)& (0+255),w,b
 11957   0027EA  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11958   0027EC  6E02               	movwf	(labs@a+1)^0,c
 11959   0027EE  519A               	movf	(efgtoa@u+2)& (0+255),w,b
 11960   0027F0  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11961   0027F2  6E03               	movwf	(labs@a+2)^0,c
 11962   0027F4  519B               	movf	(efgtoa@u+3)& (0+255),w,b
 11963   0027F6  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11964   0027F8  6E04               	movwf	(labs@a+3)^0,c
 11965   0027FA  EC0C  F036         	call	_labs	;wreg free
 11966   0027FE  BE04               	btfsc	(?_labs+3)^0,7,c
 11967   002800  EF0F  F014         	goto	u8840
 11968   002804  5004               	movf	(?_labs+3)^0,w,c
 11969   002806  1003               	iorwf	(?_labs+2)^0,w,c
 11970   002808  1002               	iorwf	(?_labs+1)^0,w,c
 11971   00280A  E107               	bnz	u8841
 11972   00280C  0E02               	movlw	2
 11973   00280E  5C01               	subwf	?_labs^0,w,c
 11974   002810  B0D8               	btfsc	status,0,c
 11975   002812  EF0D  F014         	goto	u8841
 11976   002816  EF0F  F014         	goto	u8840
 11977   00281A                     u8841:
 11978   00281A  EF11  F014         	goto	l6838
 11979   00281E                     u8840:
 11980   00281E  EFC9  F013         	goto	l6828
 11981   002822                     l6838:
 11982                           
 11983                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 11984   002822  C092  F060         	movff	efgtoa@g,___flge@ff1
 11985   002826  C093  F061         	movff	efgtoa@g+1,___flge@ff1+1
 11986   00282A  C094  F062         	movff	efgtoa@g+2,___flge@ff1+2
 11987   00282E  C095  F063         	movff	efgtoa@g+3,___flge@ff1+3
 11988   002832  C098  F064         	movff	efgtoa@u,___flge@ff2
 11989   002836  C099  F065         	movff	efgtoa@u+1,___flge@ff2+1
 11990   00283A  C09A  F066         	movff	efgtoa@u+2,___flge@ff2+2
 11991   00283E  C09B  F067         	movff	efgtoa@u+3,___flge@ff2+3
 11992   002842  ECFE  F02F         	call	___flge	;wreg free
 11993   002846  0100               	movlb	0	; () banked
 11994   002848  A0D8               	btfss	status,0,c
 11995   00284A  EF29  F014         	goto	u8851
 11996   00284E  EF2B  F014         	goto	u8850
 11997   002852                     u8851:
 11998   002852  EFD3  F013         	goto	l6830
 11999   002856                     u8850:
 12000   002856                     l1028:
 12001                           
 12002                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 12003   002856  C06D  F079         	movff	efgtoa@c,efgtoa@mode
 12004                           
 12005                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 12006   00285A  C079  F07A         	movff	efgtoa@mode,efgtoa@nmode
 12007   00285E                     
 12008                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 12009   00285E  0102               	movlb	2	; () banked
 12010   002860  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 12011   002862  EF35  F014         	goto	u8861
 12012   002866  EF37  F014         	goto	u8860
 12013   00286A                     u8861:
 12014   00286A  EF3D  F014         	goto	l6844
 12015   00286E                     u8860:
 12016   00286E                     
 12017                           ; BSR set to: 2
 12018   00286E  C2FE  F072         	movff	_prec,efgtoa@p
 12019   002872  C2FF  F073         	movff	_prec+1,efgtoa@p+1
 12020   002876  EF42  F014         	goto	l6846
 12021   00287A                     l6844:
 12022                           
 12023                           ; BSR set to: 2
 12024   00287A  0E00               	movlw	0
 12025   00287C  0100               	movlb	0	; () banked
 12026   00287E  6F73               	movwf	(efgtoa@p+1)& (0+255),b
 12027   002880  0E06               	movlw	6
 12028   002882  6F72               	movwf	efgtoa@p& (0+255),b
 12029   002884                     l6846:
 12030                           
 12031                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 12032   002884  C072  F07D         	movff	efgtoa@p,efgtoa@m
 12033   002888  C073  F07E         	movff	efgtoa@p+1,efgtoa@m+1
 12034   00288C                     
 12035                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 12036   00288C  0100               	movlb	0	; () banked
 12037   00288E  4B7D               	infsnz	efgtoa@m& (0+255),f,b
 12038   002890  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
 12039   002892                     
 12040                           ; BSR set to: 0
 12041                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 12042   002892  0E66               	movlw	102
 12043   002894  197A               	xorwf	efgtoa@nmode& (0+255),w,b
 12044   002896  A4D8               	btfss	status,2,c
 12045   002898  EF50  F014         	goto	u8871
 12046   00289C  EF52  F014         	goto	u8870
 12047   0028A0                     u8871:
 12048   0028A0  EF72  F014         	goto	l6860
 12049   0028A4                     u8870:
 12050   0028A4                     
 12051                           ; BSR set to: 0
 12052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 12053   0028A4  BF80               	btfsc	(efgtoa@e+1)& (0+255),7,b
 12054   0028A6  EF59  F014         	goto	u8880
 12055   0028AA  EF57  F014         	goto	u8881
 12056   0028AE                     u8881:
 12057   0028AE  EF65  F014         	goto	l6856
 12058   0028B2                     u8880:
 12059   0028B2                     
 12060                           ; BSR set to: 0
 12061                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 12062   0028B2  0E00               	movlw	0
 12063   0028B4  6F98               	movwf	efgtoa@u& (0+255),b
 12064   0028B6  0E00               	movlw	0
 12065   0028B8  6F99               	movwf	(efgtoa@u+1)& (0+255),b
 12066   0028BA  0E80               	movlw	128
 12067   0028BC  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
 12068   0028BE  0E3F               	movlw	63
 12069   0028C0  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
 12070                           
 12071                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 12072   0028C2  0E00               	movlw	0
 12073   0028C4  6F80               	movwf	(efgtoa@e+1)& (0+255),b
 12074   0028C6  0E00               	movlw	0
 12075   0028C8  6F7F               	movwf	efgtoa@e& (0+255),b
 12076   0028CA                     l6856:
 12077                           
 12078                           ; BSR set to: 0
 12079                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 12080   0028CA  0E67               	movlw	103
 12081   0028CC  1979               	xorwf	efgtoa@mode& (0+255),w,b
 12082   0028CE  B4D8               	btfsc	status,2,c
 12083   0028D0  EF6C  F014         	goto	u8891
 12084   0028D4  EF6E  F014         	goto	u8890
 12085   0028D8                     u8891:
 12086   0028D8  EF72  F014         	goto	l6860
 12087   0028DC                     u8890:
 12088   0028DC                     
 12089                           ; BSR set to: 0
 12090                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 12091   0028DC  517F               	movf	efgtoa@e& (0+255),w,b
 12092   0028DE  277D               	addwf	efgtoa@m& (0+255),f,b
 12093   0028E0  5180               	movf	(efgtoa@e+1)& (0+255),w,b
 12094   0028E2  237E               	addwfc	(efgtoa@m+1)& (0+255),f,b
 12095   0028E4                     l6860:
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 12099   0028E4  0E00               	movlw	0
 12100   0028E6  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 12101   0028E8  0E00               	movlw	0
 12102   0028EA  6F87               	movwf	efgtoa@i& (0+255),b
 12103   0028EC                     
 12104                           ; BSR set to: 0
 12105                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 12106   0028EC  C092  F089         	movff	efgtoa@g,efgtoa@h
 12107   0028F0  C093  F08A         	movff	efgtoa@g+1,efgtoa@h+1
 12108   0028F4  C094  F08B         	movff	efgtoa@g+2,efgtoa@h+2
 12109   0028F8  C095  F08C         	movff	efgtoa@g+3,efgtoa@h+3
 12110   0028FC                     
 12111                           ; BSR set to: 0
 12112                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 12113   0028FC  C098  F083         	movff	efgtoa@u,efgtoa@ou
 12114   002900  C099  F084         	movff	efgtoa@u+1,efgtoa@ou+1
 12115   002904  C09A  F085         	movff	efgtoa@u+2,efgtoa@ou+2
 12116   002908  C09B  F086         	movff	efgtoa@u+3,efgtoa@ou+3
 12117                           
 12118                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12119   00290C  EF03  F015         	goto	l6874
 12120   002910                     l6866:
 12121                           
 12122                           ; BSR set to: 0
 12123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 12124   002910  C089  F028         	movff	efgtoa@h,___fldiv@b
 12125   002914  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
 12126   002918  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
 12127   00291C  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
 12128   002920  C098  F02C         	movff	efgtoa@u,___fldiv@a
 12129   002924  C099  F02D         	movff	efgtoa@u+1,___fldiv@a+1
 12130   002928  C09A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
 12131   00292C  C09B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
 12132   002930  EC68  F024         	call	___fldiv	;wreg free
 12133   002934  C028  F041         	movff	?___fldiv,floorf@x
 12134   002938  C029  F042         	movff	?___fldiv+1,floorf@x+1
 12135   00293C  C02A  F043         	movff	?___fldiv+2,floorf@x+2
 12136   002940  C02B  F044         	movff	?___fldiv+3,floorf@x+3
 12137   002944  EC52  F02A         	call	_floorf	;wreg free
 12138   002948  C041  F08D         	movff	?_floorf,efgtoa@l
 12139   00294C  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
 12140   002950  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
 12141   002954  C044  F090         	movff	?_floorf+3,efgtoa@l+3
 12142                           
 12143                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 12144   002958  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12145   00295C  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12146   002960  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12147   002964  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12148   002968  EC7B  F02F         	call	___fltol	;wreg free
 12149   00296C  C001  F07B         	movff	?___fltol,efgtoa@d
 12150   002970  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
 12151   002974                     
 12152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 12153   002974  C089  F051         	movff	efgtoa@h,___flsub@b
 12154   002978  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
 12155   00297C  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
 12156   002980  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
 12157   002984  C08D  F013         	movff	efgtoa@l,___flmul@a
 12158   002988  C08E  F014         	movff	efgtoa@l+1,___flmul@a+1
 12159   00298C  C08F  F015         	movff	efgtoa@l+2,___flmul@a+2
 12160   002990  C090  F016         	movff	efgtoa@l+3,___flmul@a+3
 12161   002994  C098  F00F         	movff	efgtoa@u,___flmul@b
 12162   002998  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12163   00299C  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12164   0029A0  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12165   0029A4  EC66  F020         	call	___flmul	;wreg free
 12166   0029A8  C00F  F055         	movff	?___flmul,___flsub@a
 12167   0029AC  C010  F056         	movff	?___flmul+1,___flsub@a+1
 12168   0029B0  C011  F057         	movff	?___flmul+2,___flsub@a+2
 12169   0029B4  C012  F058         	movff	?___flmul+3,___flsub@a+3
 12170   0029B8  ECA8  F036         	call	___flsub	;wreg free
 12171   0029BC  C051  F089         	movff	?___flsub,efgtoa@h
 12172   0029C0  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
 12173   0029C4  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
 12174   0029C8  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
 12175   0029CC                     
 12176                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 12177   0029CC  C098  F028         	movff	efgtoa@u,___fldiv@b
 12178   0029D0  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 12179   0029D4  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 12180   0029D8  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 12181   0029DC  0E00               	movlw	0
 12182   0029DE  6E2C               	movwf	___fldiv@a^0,c
 12183   0029E0  0E00               	movlw	0
 12184   0029E2  6E2D               	movwf	(___fldiv@a+1)^0,c
 12185   0029E4  0E20               	movlw	32
 12186   0029E6  6E2E               	movwf	(___fldiv@a+2)^0,c
 12187   0029E8  0E41               	movlw	65
 12188   0029EA  6E2F               	movwf	(___fldiv@a+3)^0,c
 12189   0029EC  EC68  F024         	call	___fldiv	;wreg free
 12190   0029F0  C028  F098         	movff	?___fldiv,efgtoa@u
 12191   0029F4  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 12192   0029F8  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 12193   0029FC  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 12194   002A00                     
 12195                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 12196   002A00  0100               	movlb	0	; () banked
 12197   002A02  4B87               	infsnz	efgtoa@i& (0+255),f,b
 12198   002A04  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
 12199   002A06                     l6874:
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12203   002A06  517D               	movf	efgtoa@m& (0+255),w,b
 12204   002A08  5D87               	subwf	efgtoa@i& (0+255),w,b
 12205   002A0A  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12206   002A0C  0A80               	xorlw	128
 12207   002A0E  6F6E               	movwf	??_efgtoa& (0+255),b
 12208   002A10  517E               	movf	(efgtoa@m+1)& (0+255),w,b
 12209   002A12  0A80               	xorlw	128
 12210   002A14  596E               	subwfb	??_efgtoa& (0+255),w,b
 12211   002A16  A0D8               	btfss	status,0,c
 12212   002A18  EF10  F015         	goto	u8901
 12213   002A1C  EF12  F015         	goto	u8900
 12214   002A20                     u8901:
 12215   002A20  EF88  F014         	goto	l6866
 12216   002A24                     u8900:
 12217   002A24                     
 12218                           ; BSR set to: 0
 12219                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 12220   002A24  C098  F00F         	movff	efgtoa@u,___flmul@b
 12221   002A28  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12222   002A2C  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12223   002A30  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12224   002A34  0E00               	movlw	0
 12225   002A36  6E13               	movwf	___flmul@a^0,c
 12226   002A38  0E00               	movlw	0
 12227   002A3A  6E14               	movwf	(___flmul@a+1)^0,c
 12228   002A3C  0EA0               	movlw	160
 12229   002A3E  6E15               	movwf	(___flmul@a+2)^0,c
 12230   002A40  0E40               	movlw	64
 12231   002A42  6E16               	movwf	(___flmul@a+3)^0,c
 12232   002A44  EC66  F020         	call	___flmul	;wreg free
 12233   002A48  C00F  F08D         	movff	?___flmul,efgtoa@l
 12234   002A4C  C010  F08E         	movff	?___flmul+1,efgtoa@l+1
 12235   002A50  C011  F08F         	movff	?___flmul+2,efgtoa@l+2
 12236   002A54  C012  F090         	movff	?___flmul+3,efgtoa@l+3
 12237   002A58                     
 12238                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 12239   002A58  C089  F060         	movff	efgtoa@h,___flge@ff1
 12240   002A5C  C08A  F061         	movff	efgtoa@h+1,___flge@ff1+1
 12241   002A60  C08B  F062         	movff	efgtoa@h+2,___flge@ff1+2
 12242   002A64  C08C  F063         	movff	efgtoa@h+3,___flge@ff1+3
 12243   002A68  C08D  F064         	movff	efgtoa@l,___flge@ff2
 12244   002A6C  C08E  F065         	movff	efgtoa@l+1,___flge@ff2+1
 12245   002A70  C08F  F066         	movff	efgtoa@l+2,___flge@ff2+2
 12246   002A74  C090  F067         	movff	efgtoa@l+3,___flge@ff2+3
 12247   002A78  ECFE  F02F         	call	___flge	;wreg free
 12248   002A7C  0100               	movlb	0	; () banked
 12249   002A7E  B0D8               	btfsc	status,0,c
 12250   002A80  EF44  F015         	goto	u8911
 12251   002A84  EF46  F015         	goto	u8910
 12252   002A88                     u8911:
 12253   002A88  EF50  F015         	goto	l6882
 12254   002A8C                     u8910:
 12255   002A8C                     
 12256                           ; BSR set to: 0
 12257                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 12258   002A8C  0E00               	movlw	0
 12259   002A8E  6F8D               	movwf	efgtoa@l& (0+255),b
 12260   002A90  0E00               	movlw	0
 12261   002A92  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
 12262   002A94  0E00               	movlw	0
 12263   002A96  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
 12264   002A98  0E00               	movlw	0
 12265   002A9A  6F90               	movwf	(efgtoa@l+3)& (0+255),b
 12266                           
 12267                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 12268   002A9C  EF79  F015         	goto	l6888
 12269   002AA0                     l6882:
 12270                           
 12271                           ; BSR set to: 0
 12272                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 12273   002AA0  C089  F001         	movff	efgtoa@h,___fleq@ff1
 12274   002AA4  C08A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
 12275   002AA8  C08B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
 12276   002AAC  C08C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
 12277   002AB0  C08D  F005         	movff	efgtoa@l,___fleq@ff2
 12278   002AB4  C08E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
 12279   002AB8  C08F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
 12280   002ABC  C090  F008         	movff	efgtoa@l+3,___fleq@ff2+3
 12281   002AC0  EC69  F034         	call	___fleq	;wreg free
 12282   002AC4  A0D8               	btfss	status,0,c
 12283   002AC6  EF67  F015         	goto	u8921
 12284   002ACA  EF69  F015         	goto	u8920
 12285   002ACE                     u8921:
 12286   002ACE  EF79  F015         	goto	l6888
 12287   002AD2                     u8920:
 12288   002AD2  0100               	movlb	0	; () banked
 12289   002AD4  B17B               	btfsc	efgtoa@d& (0+255),0,b
 12290   002AD6  EF6F  F015         	goto	u8931
 12291   002ADA  EF71  F015         	goto	u8930
 12292   002ADE                     u8931:
 12293   002ADE  EF79  F015         	goto	l6888
 12294   002AE2                     u8930:
 12295   002AE2                     
 12296                           ; BSR set to: 0
 12297                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 12298   002AE2  0E00               	movlw	0
 12299   002AE4  6F8D               	movwf	efgtoa@l& (0+255),b
 12300   002AE6  0E00               	movlw	0
 12301   002AE8  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
 12302   002AEA  0E00               	movlw	0
 12303   002AEC  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
 12304   002AEE  0E00               	movlw	0
 12305   002AF0  6F90               	movwf	(efgtoa@l+3)& (0+255),b
 12306   002AF2                     l6888:
 12307                           
 12308                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 12309   002AF2  C092  F041         	movff	efgtoa@g,___fladd@b
 12310   002AF6  C093  F042         	movff	efgtoa@g+1,___fladd@b+1
 12311   002AFA  C094  F043         	movff	efgtoa@g+2,___fladd@b+2
 12312   002AFE  C095  F044         	movff	efgtoa@g+3,___fladd@b+3
 12313   002B02  C08D  F045         	movff	efgtoa@l,___fladd@a
 12314   002B06  C08E  F046         	movff	efgtoa@l+1,___fladd@a+1
 12315   002B0A  C08F  F047         	movff	efgtoa@l+2,___fladd@a+2
 12316   002B0E  C090  F048         	movff	efgtoa@l+3,___fladd@a+3
 12317   002B12  EC0B  F01E         	call	___fladd	;wreg free
 12318   002B16  C041  F089         	movff	?___fladd,efgtoa@h
 12319   002B1A  C042  F08A         	movff	?___fladd+1,efgtoa@h+1
 12320   002B1E  C043  F08B         	movff	?___fladd+2,efgtoa@h+2
 12321   002B22  C044  F08C         	movff	?___fladd+3,efgtoa@h+3
 12322   002B26                     
 12323                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 12324   002B26  C089  F060         	movff	efgtoa@h,___flge@ff1
 12325   002B2A  C08A  F061         	movff	efgtoa@h+1,___flge@ff1+1
 12326   002B2E  C08B  F062         	movff	efgtoa@h+2,___flge@ff1+2
 12327   002B32  C08C  F063         	movff	efgtoa@h+3,___flge@ff1+3
 12328   002B36  0E00               	movlw	0
 12329   002B38  6E13               	movwf	___flmul@a^0,c
 12330   002B3A  0E00               	movlw	0
 12331   002B3C  6E14               	movwf	(___flmul@a+1)^0,c
 12332   002B3E  0E20               	movlw	32
 12333   002B40  6E15               	movwf	(___flmul@a+2)^0,c
 12334   002B42  0E41               	movlw	65
 12335   002B44  6E16               	movwf	(___flmul@a+3)^0,c
 12336   002B46  C083  F00F         	movff	efgtoa@ou,___flmul@b
 12337   002B4A  C084  F010         	movff	efgtoa@ou+1,___flmul@b+1
 12338   002B4E  C085  F011         	movff	efgtoa@ou+2,___flmul@b+2
 12339   002B52  C086  F012         	movff	efgtoa@ou+3,___flmul@b+3
 12340   002B56  EC66  F020         	call	___flmul	;wreg free
 12341   002B5A  C00F  F064         	movff	?___flmul,___flge@ff2
 12342   002B5E  C010  F065         	movff	?___flmul+1,___flge@ff2+1
 12343   002B62  C011  F066         	movff	?___flmul+2,___flge@ff2+2
 12344   002B66  C012  F067         	movff	?___flmul+3,___flge@ff2+3
 12345   002B6A  ECFE  F02F         	call	___flge	;wreg free
 12346   002B6E  0100               	movlb	0	; () banked
 12347   002B70  A0D8               	btfss	status,0,c
 12348   002B72  EFBD  F015         	goto	u8941
 12349   002B76  EFBF  F015         	goto	u8940
 12350   002B7A                     u8941:
 12351   002B7A  EFE7  F015         	goto	l6900
 12352   002B7E                     u8940:
 12353   002B7E                     
 12354                           ; BSR set to: 0
 12355                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 12356   002B7E  4B7F               	infsnz	efgtoa@e& (0+255),f,b
 12357   002B80  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
 12358   002B82                     
 12359                           ; BSR set to: 0
 12360                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 12361   002B82  C083  F00F         	movff	efgtoa@ou,___flmul@b
 12362   002B86  C084  F010         	movff	efgtoa@ou+1,___flmul@b+1
 12363   002B8A  C085  F011         	movff	efgtoa@ou+2,___flmul@b+2
 12364   002B8E  C086  F012         	movff	efgtoa@ou+3,___flmul@b+3
 12365   002B92  0E00               	movlw	0
 12366   002B94  6E13               	movwf	___flmul@a^0,c
 12367   002B96  0E00               	movlw	0
 12368   002B98  6E14               	movwf	(___flmul@a+1)^0,c
 12369   002B9A  0E20               	movlw	32
 12370   002B9C  6E15               	movwf	(___flmul@a+2)^0,c
 12371   002B9E  0E41               	movlw	65
 12372   002BA0  6E16               	movwf	(___flmul@a+3)^0,c
 12373   002BA2  EC66  F020         	call	___flmul	;wreg free
 12374   002BA6  C00F  F083         	movff	?___flmul,efgtoa@ou
 12375   002BAA  C010  F084         	movff	?___flmul+1,efgtoa@ou+1
 12376   002BAE  C011  F085         	movff	?___flmul+2,efgtoa@ou+2
 12377   002BB2  C012  F086         	movff	?___flmul+3,efgtoa@ou+3
 12378   002BB6                     
 12379                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 12380   002BB6  0E66               	movlw	102
 12381   002BB8  0100               	movlb	0	; () banked
 12382   002BBA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
 12383   002BBC  A4D8               	btfss	status,2,c
 12384   002BBE  EFE3  F015         	goto	u8951
 12385   002BC2  EFE5  F015         	goto	u8950
 12386   002BC6                     u8951:
 12387   002BC6  EFE7  F015         	goto	l6900
 12388   002BCA                     u8950:
 12389   002BCA                     
 12390                           ; BSR set to: 0
 12391                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 12392   002BCA  4B7D               	infsnz	efgtoa@m& (0+255),f,b
 12393   002BCC  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
 12394   002BCE                     l6900:
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 12398   002BCE  C083  F098         	movff	efgtoa@ou,efgtoa@u
 12399   002BD2  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
 12400   002BD6  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
 12401   002BDA  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
 12402   002BDE                     
 12403                           ; BSR set to: 0
 12404                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 12405   002BDE  C07F  F070         	movff	efgtoa@e,efgtoa@ne
 12406   002BE2  C080  F071         	movff	efgtoa@e+1,efgtoa@ne+1
 12407   002BE6                     
 12408                           ; BSR set to: 0
 12409                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 12410   002BE6  6B78               	clrf	efgtoa@pp& (0+255),b
 12411   002BE8                     
 12412                           ; BSR set to: 0
 12413                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 12414   002BE8  0E00               	movlw	0
 12415   002BEA  6F75               	movwf	(efgtoa@t+1)& (0+255),b
 12416   002BEC  0E00               	movlw	0
 12417   002BEE  6F74               	movwf	efgtoa@t& (0+255),b
 12418   002BF0                     
 12419                           ; BSR set to: 0
 12420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 12421   002BF0  0E00               	movlw	0
 12422   002BF2  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 12423   002BF4  0E00               	movlw	0
 12424   002BF6  6F87               	movwf	efgtoa@i& (0+255),b
 12425                           
 12426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12427   002BF8  EFE3  F016         	goto	l6950
 12428   002BFC                     l6910:
 12429                           
 12430                           ; BSR set to: 0
 12431                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 12432   002BFC  C089  F028         	movff	efgtoa@h,___fldiv@b
 12433   002C00  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
 12434   002C04  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
 12435   002C08  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
 12436   002C0C  C098  F02C         	movff	efgtoa@u,___fldiv@a
 12437   002C10  C099  F02D         	movff	efgtoa@u+1,___fldiv@a+1
 12438   002C14  C09A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
 12439   002C18  C09B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
 12440   002C1C  EC68  F024         	call	___fldiv	;wreg free
 12441   002C20  C028  F041         	movff	?___fldiv,floorf@x
 12442   002C24  C029  F042         	movff	?___fldiv+1,floorf@x+1
 12443   002C28  C02A  F043         	movff	?___fldiv+2,floorf@x+2
 12444   002C2C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
 12445   002C30  EC52  F02A         	call	_floorf	;wreg free
 12446   002C34  C041  F08D         	movff	?_floorf,efgtoa@l
 12447   002C38  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
 12448   002C3C  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
 12449   002C40  C044  F090         	movff	?_floorf+3,efgtoa@l+3
 12450                           
 12451                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 12452   002C44  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12453   002C48  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12454   002C4C  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12455   002C50  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12456   002C54  EC7B  F02F         	call	___fltol	;wreg free
 12457   002C58  BE02               	btfsc	(?___fltol+1)^0,7,c
 12458   002C5A  EF3A  F016         	goto	u8960
 12459   002C5E  5002               	movf	(?___fltol+1)^0,w,c
 12460   002C60  E107               	bnz	u8961
 12461   002C62  0E0A               	movlw	10
 12462   002C64  5C01               	subwf	?___fltol^0,w,c
 12463   002C66  B0D8               	btfsc	status,0,c
 12464   002C68  EF38  F016         	goto	u8961
 12465   002C6C  EF3A  F016         	goto	u8960
 12466   002C70                     u8961:
 12467   002C70  EF4A  F016         	goto	l6914
 12468   002C74                     u8960:
 12469   002C74  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12470   002C78  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12471   002C7C  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12472   002C80  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12473   002C84  EC7B  F02F         	call	___fltol	;wreg free
 12474   002C88  C001  F07B         	movff	?___fltol,efgtoa@d
 12475   002C8C  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
 12476   002C90  EF4F  F016         	goto	l1058
 12477   002C94                     l6914:
 12478   002C94  0E00               	movlw	0
 12479   002C96  0100               	movlb	0	; () banked
 12480   002C98  6F7C               	movwf	(efgtoa@d+1)& (0+255),b
 12481   002C9A  0E09               	movlw	9
 12482   002C9C  6F7B               	movwf	efgtoa@d& (0+255),b
 12483   002C9E                     l1058:
 12484                           
 12485                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 12486   002C9E  0100               	movlb	0	; () banked
 12487   002CA0  5178               	movf	efgtoa@pp& (0+255),w,b
 12488   002CA2  A4D8               	btfss	status,2,c
 12489   002CA4  EF56  F016         	goto	u8971
 12490   002CA8  EF58  F016         	goto	u8970
 12491   002CAC                     u8971:
 12492   002CAC  EF80  F016         	goto	l6934
 12493   002CB0                     u8970:
 12494   002CB0                     
 12495                           ; BSR set to: 0
 12496   002CB0  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 12497   002CB2  EF5F  F016         	goto	u8980
 12498   002CB6  EF5D  F016         	goto	u8981
 12499   002CBA                     u8981:
 12500   002CBA  EF80  F016         	goto	l6934
 12501   002CBE                     u8980:
 12502   002CBE                     
 12503                           ; BSR set to: 0
 12504                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 12505   002CBE  0E7A               	movlw	low _dbuf
 12506   002CC0  2596               	addwf	efgtoa@n& (0+255),w,b
 12507   002CC2  6ED9               	movwf	fsr2l,c
 12508   002CC4  0E03               	movlw	high _dbuf
 12509   002CC6  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12510   002CC8  6EDA               	movwf	fsr2h,c
 12511   002CCA  0E2E               	movlw	46
 12512   002CCC  6EDF               	movwf	indf2,c
 12513   002CCE                     
 12514                           ; BSR set to: 0
 12515   002CCE  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12516   002CD0  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12517   002CD2                     
 12518                           ; BSR set to: 0
 12519                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 12520   002CD2  0781               	decf	efgtoa@w& (0+255),f,b
 12521   002CD4  A0D8               	btfss	status,0,c
 12522   002CD6  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12523   002CD8                     
 12524                           ; BSR set to: 0
 12525                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 12526   002CD8  0E01               	movlw	1
 12527   002CDA  6F78               	movwf	efgtoa@pp& (0+255),b
 12528   002CDC  EF80  F016         	goto	l6934
 12529   002CE0                     l6926:
 12530                           
 12531                           ; BSR set to: 0
 12532                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 12533   002CE0  0E7A               	movlw	low _dbuf
 12534   002CE2  2596               	addwf	efgtoa@n& (0+255),w,b
 12535   002CE4  6ED9               	movwf	fsr2l,c
 12536   002CE6  0E03               	movlw	high _dbuf
 12537   002CE8  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12538   002CEA  6EDA               	movwf	fsr2h,c
 12539   002CEC  0E30               	movlw	48
 12540   002CEE  6EDF               	movwf	indf2,c
 12541   002CF0                     
 12542                           ; BSR set to: 0
 12543   002CF0  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12544   002CF2  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12545   002CF4                     
 12546                           ; BSR set to: 0
 12547                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 12548   002CF4  0781               	decf	efgtoa@w& (0+255),f,b
 12549   002CF6  A0D8               	btfss	status,0,c
 12550   002CF8  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12551   002CFA                     
 12552                           ; BSR set to: 0
 12553                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 12554   002CFA  0774               	decf	efgtoa@t& (0+255),f,b
 12555   002CFC  A0D8               	btfss	status,0,c
 12556   002CFE  0775               	decf	(efgtoa@t+1)& (0+255),f,b
 12557   002D00                     l6934:
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 12561   002D00  5174               	movf	efgtoa@t& (0+255),w,b
 12562   002D02  1175               	iorwf	(efgtoa@t+1)& (0+255),w,b
 12563   002D04  A4D8               	btfss	status,2,c
 12564   002D06  EF87  F016         	goto	u8991
 12565   002D0A  EF89  F016         	goto	u8990
 12566   002D0E                     u8991:
 12567   002D0E  EF70  F016         	goto	l6926
 12568   002D12                     u8990:
 12569   002D12                     
 12570                           ; BSR set to: 0
 12571                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 12572   002D12  0E7A               	movlw	low _dbuf
 12573   002D14  2596               	addwf	efgtoa@n& (0+255),w,b
 12574   002D16  6ED9               	movwf	fsr2l,c
 12575   002D18  0E03               	movlw	high _dbuf
 12576   002D1A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12577   002D1C  6EDA               	movwf	fsr2h,c
 12578   002D1E  517B               	movf	efgtoa@d& (0+255),w,b
 12579   002D20  0F30               	addlw	48
 12580   002D22  6EDF               	movwf	indf2,c
 12581   002D24                     
 12582                           ; BSR set to: 0
 12583   002D24  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12584   002D26  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12585   002D28                     
 12586                           ; BSR set to: 0
 12587                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 12588   002D28  0781               	decf	efgtoa@w& (0+255),f,b
 12589   002D2A  A0D8               	btfss	status,0,c
 12590   002D2C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12591   002D2E                     
 12592                           ; BSR set to: 0
 12593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 12594   002D2E  C089  F051         	movff	efgtoa@h,___flsub@b
 12595   002D32  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
 12596   002D36  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
 12597   002D3A  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
 12598   002D3E  C08D  F013         	movff	efgtoa@l,___flmul@a
 12599   002D42  C08E  F014         	movff	efgtoa@l+1,___flmul@a+1
 12600   002D46  C08F  F015         	movff	efgtoa@l+2,___flmul@a+2
 12601   002D4A  C090  F016         	movff	efgtoa@l+3,___flmul@a+3
 12602   002D4E  C098  F00F         	movff	efgtoa@u,___flmul@b
 12603   002D52  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12604   002D56  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12605   002D5A  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12606   002D5E  EC66  F020         	call	___flmul	;wreg free
 12607   002D62  C00F  F055         	movff	?___flmul,___flsub@a
 12608   002D66  C010  F056         	movff	?___flmul+1,___flsub@a+1
 12609   002D6A  C011  F057         	movff	?___flmul+2,___flsub@a+2
 12610   002D6E  C012  F058         	movff	?___flmul+3,___flsub@a+3
 12611   002D72  ECA8  F036         	call	___flsub	;wreg free
 12612   002D76  C051  F089         	movff	?___flsub,efgtoa@h
 12613   002D7A  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
 12614   002D7E  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
 12615   002D82  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
 12616   002D86                     
 12617                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 12618   002D86  C098  F028         	movff	efgtoa@u,___fldiv@b
 12619   002D8A  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 12620   002D8E  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 12621   002D92  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 12622   002D96  0E00               	movlw	0
 12623   002D98  6E2C               	movwf	___fldiv@a^0,c
 12624   002D9A  0E00               	movlw	0
 12625   002D9C  6E2D               	movwf	(___fldiv@a+1)^0,c
 12626   002D9E  0E20               	movlw	32
 12627   002DA0  6E2E               	movwf	(___fldiv@a+2)^0,c
 12628   002DA2  0E41               	movlw	65
 12629   002DA4  6E2F               	movwf	(___fldiv@a+3)^0,c
 12630   002DA6  EC68  F024         	call	___fldiv	;wreg free
 12631   002DAA  C028  F098         	movff	?___fldiv,efgtoa@u
 12632   002DAE  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 12633   002DB2  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 12634   002DB6  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 12635   002DBA                     
 12636                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 12637   002DBA  0100               	movlb	0	; () banked
 12638   002DBC  0770               	decf	efgtoa@ne& (0+255),f,b
 12639   002DBE  A0D8               	btfss	status,0,c
 12640   002DC0  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
 12641   002DC2                     
 12642                           ; BSR set to: 0
 12643                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 12644   002DC2  4B87               	infsnz	efgtoa@i& (0+255),f,b
 12645   002DC4  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
 12646   002DC6                     l6950:
 12647                           
 12648                           ; BSR set to: 0
 12649                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12650   002DC6  517D               	movf	efgtoa@m& (0+255),w,b
 12651   002DC8  5D87               	subwf	efgtoa@i& (0+255),w,b
 12652   002DCA  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12653   002DCC  0A80               	xorlw	128
 12654   002DCE  6F6E               	movwf	??_efgtoa& (0+255),b
 12655   002DD0  517E               	movf	(efgtoa@m+1)& (0+255),w,b
 12656   002DD2  0A80               	xorlw	128
 12657   002DD4  596E               	subwfb	??_efgtoa& (0+255),w,b
 12658   002DD6  B0D8               	btfsc	status,0,c
 12659   002DD8  EFF0  F016         	goto	u9001
 12660   002DDC  EFF2  F016         	goto	u9000
 12661   002DE0                     u9001:
 12662   002DE0  EF00  F017         	goto	l6954
 12663   002DE4                     u9000:
 12664   002DE4                     
 12665                           ; BSR set to: 0
 12666   002DE4  BF97               	btfsc	(efgtoa@n+1)& (0+255),7,b
 12667   002DE6  EFFE  F016         	goto	u9011
 12668   002DEA  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12669   002DEC  E109               	bnz	u9010
 12670   002DEE  0E4B               	movlw	75
 12671   002DF0  5D96               	subwf	efgtoa@n& (0+255),w,b
 12672   002DF2  A0D8               	btfss	status,0,c
 12673   002DF4  EFFE  F016         	goto	u9011
 12674   002DF8  EF00  F017         	goto	u9010
 12675   002DFC                     u9011:
 12676   002DFC  EFFE  F015         	goto	l6910
 12677   002E00                     u9010:
 12678   002E00                     l6954:
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 12682   002E00  0E00               	movlw	0
 12683   002E02  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 12684   002E04  0E4F               	movlw	79
 12685   002E06  6F87               	movwf	efgtoa@i& (0+255),b
 12686   002E08                     
 12687                           ; BSR set to: 0
 12688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 12689   002E08  0E7A               	movlw	low _dbuf
 12690   002E0A  2587               	addwf	efgtoa@i& (0+255),w,b
 12691   002E0C  6ED9               	movwf	fsr2l,c
 12692   002E0E  0E03               	movlw	high _dbuf
 12693   002E10  2188               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12694   002E12  6EDA               	movwf	fsr2h,c
 12695   002E14  6ADF               	clrf	indf2,c
 12696   002E16                     
 12697                           ; BSR set to: 0
 12698                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 12699   002E16  0E7A               	movlw	low _dbuf
 12700   002E18  6F6E               	movwf	??_efgtoa& (0+255),b
 12701   002E1A  0E03               	movlw	high _dbuf
 12702   002E1C  6F6F               	movwf	(??_efgtoa+1)& (0+255),b
 12703   002E1E  5196               	movf	efgtoa@n& (0+255),w,b
 12704   002E20  5F6E               	subwf	??_efgtoa& (0+255),f,b
 12705   002E22  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12706   002E24  5B6F               	subwfb	(??_efgtoa+1)& (0+255),f,b
 12707   002E26  5187               	movf	efgtoa@i& (0+255),w,b
 12708   002E28  256E               	addwf	??_efgtoa& (0+255),w,b
 12709   002E2A  6E01               	movwf	memcpy@d1^0,c
 12710   002E2C  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12711   002E2E  216F               	addwfc	(??_efgtoa+1)& (0+255),w,b
 12712   002E30  6E02               	movwf	(memcpy@d1+1)^0,c
 12713   002E32  0E7A               	movlw	low _dbuf
 12714   002E34  6E03               	movwf	memcpy@s1^0,c
 12715   002E36  0E03               	movlw	high _dbuf
 12716   002E38  6E04               	movwf	(memcpy@s1+1)^0,c
 12717   002E3A  C096  F005         	movff	efgtoa@n,memcpy@n
 12718   002E3E  C097  F006         	movff	efgtoa@n+1,memcpy@n+1
 12719   002E42  EC37  F036         	call	_memcpy	;wreg free
 12720   002E46                     
 12721                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 12722   002E46  0100               	movlb	0	; () banked
 12723   002E48  5196               	movf	efgtoa@n& (0+255),w,b
 12724   002E4A  5D87               	subwf	efgtoa@i& (0+255),w,b
 12725   002E4C  6F96               	movwf	efgtoa@n& (0+255),b
 12726   002E4E  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12727   002E50  5988               	subwfb	(efgtoa@i+1)& (0+255),w,b
 12728   002E52  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 12729   002E54                     
 12730                           ; BSR set to: 0
 12731                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 12732   002E54  5191               	movf	efgtoa@sign& (0+255),w,b
 12733   002E56  A4D8               	btfss	status,2,c
 12734   002E58  EF30  F017         	goto	u9021
 12735   002E5C  EF33  F017         	goto	u9020
 12736   002E60                     u9021:
 12737   002E60  0E01               	movlw	1
 12738   002E62  EF34  F017         	goto	u9030
 12739   002E66                     u9020:
 12740   002E66  0E00               	movlw	0
 12741   002E68                     u9030:
 12742   002E68  6F87               	movwf	efgtoa@i& (0+255),b
 12743   002E6A  6B88               	clrf	(efgtoa@i+1)& (0+255),b
 12744   002E6C                     
 12745                           ; BSR set to: 0
 12746                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 12747   002E6C  5191               	movf	efgtoa@sign& (0+255),w,b
 12748   002E6E  B4D8               	btfsc	status,2,c
 12749   002E70  EF3C  F017         	goto	u9041
 12750   002E74  EF3E  F017         	goto	u9040
 12751   002E78                     u9041:
 12752   002E78  EF49  F017         	goto	l6968
 12753   002E7C                     u9040:
 12754   002E7C                     
 12755                           ; BSR set to: 0
 12756                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 12757   002E7C  0796               	decf	efgtoa@n& (0+255),f,b
 12758   002E7E  A0D8               	btfss	status,0,c
 12759   002E80  0797               	decf	(efgtoa@n+1)& (0+255),f,b
 12760   002E82  0E7A               	movlw	low _dbuf
 12761   002E84  2596               	addwf	efgtoa@n& (0+255),w,b
 12762   002E86  6ED9               	movwf	fsr2l,c
 12763   002E88  0E03               	movlw	high _dbuf
 12764   002E8A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12765   002E8C  6EDA               	movwf	fsr2h,c
 12766   002E8E  C091  FFDF         	movff	efgtoa@sign,indf2
 12767   002E92                     l6968:
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 12771   002E92  5187               	movf	efgtoa@i& (0+255),w,b
 12772   002E94  5F81               	subwf	efgtoa@w& (0+255),f,b
 12773   002E96  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12774   002E98  5B82               	subwfb	(efgtoa@w+1)& (0+255),f,b
 12775   002E9A                     
 12776                           ; BSR set to: 0
 12777                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 12778   002E9A  C068  F00F         	movff	efgtoa@fp,pad@fp
 12779   002E9E  0E7A               	movlw	low _dbuf
 12780   002EA0  2596               	addwf	efgtoa@n& (0+255),w,b
 12781   002EA2  6E10               	movwf	pad@buf^0,c
 12782   002EA4  0E03               	movlw	high _dbuf
 12783   002EA6  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12784   002EA8  6E11               	movwf	(pad@buf+1)^0,c
 12785   002EAA  C081  F012         	movff	efgtoa@w,pad@p
 12786   002EAE  C082  F013         	movff	efgtoa@w+1,pad@p+1
 12787   002EB2  ECD9  F035         	call	_pad	;wreg free
 12788   002EB6                     l1025:
 12789   002EB6  0012               	return		;funcret
 12790   002EB8                     __end_of_efgtoa:
 12791                           	callstack 0
 12792                           
 12793 ;; *************** function _strcpy *****************
 12794 ;; Defined at:
 12795 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 12796 ;; Parameters:    Size  Location     Type
 12797 ;;  dest            2    0[COMRAM] PTR unsigned char 
 12798 ;;		 -> dbuf(80), fire_trigger_sensor(20), 
 12799 ;;  src             2    2[COMRAM] PTR const unsigned char 
 12800 ;;		 -> STR_21(4), STR_18(4), STR_3(10), STR_2(19), 
 12801 ;;		 -> STR_1(13), 
 12802 ;; Auto vars:     Size  Location     Type
 12803 ;;  d               2    4[COMRAM] PTR unsigned char 
 12804 ;;		 -> dbuf(80), fire_trigger_sensor(20), 
 12805 ;; Return value:  Size  Location     Type
 12806 ;;                  2    0[COMRAM] PTR unsigned char 
 12807 ;; Registers used:
 12808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12809 ;; Tracked objects:
 12810 ;;		On entry : 0/0
 12811 ;;		On exit  : 0/0
 12812 ;;		Unchanged: 0/0
 12813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12814 ;;      Params:         4       0       0       0       0       0       0       0       0
 12815 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12816 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12817 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12818 ;;Total ram usage:        6 bytes
 12819 ;; Hardware stack levels used: 1
 12820 ;; Hardware stack levels required when called: 1
 12821 ;; This function calls:
 12822 ;;		Nothing
 12823 ;; This function is called by:
 12824 ;;		_Handle_Fire_Events
 12825 ;;		_efgtoa
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           
 12829                           	psect	text26
 12830   006E52                     __ptext26:
 12831                           	callstack 0
 12832   006E52                     _strcpy:
 12833                           	callstack 24
 12834   006E52  C001  F005         	movff	strcpy@dest,strcpy@d
 12835   006E56  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
 12836   006E5A                     l6144:
 12837   006E5A  C003  FFF6         	movff	strcpy@src,tblptrl
 12838   006E5E  C004  FFF7         	movff	strcpy@src+1,tblptrh
 12839   006E62  4A03               	infsnz	strcpy@src^0,f,c
 12840   006E64  2A04               	incf	(strcpy@src+1)^0,f,c
 12841   006E66                     	if	0	;tblptru may be non-zero
 12842   006E66                     	endif
 12843   006E66                     	if	0	;tblptru may be non-zero
 12844   006E66                     	endif
 12845   006E66  C005  FFD9         	movff	strcpy@d,fsr2l
 12846   006E6A  C006  FFDA         	movff	strcpy@d+1,fsr2h
 12847   006E6E  4A05               	infsnz	strcpy@d^0,f,c
 12848   006E70  2A06               	incf	(strcpy@d+1)^0,f,c
 12849   006E72  0008               	tblrd		*
 12850   006E74  CFF5 FFDF          	movff	tablat,indf2
 12851   006E78  50DF               	movf	indf2,w,c
 12852   006E7A  A4D8               	btfss	status,2,c
 12853   006E7C  EF42  F037         	goto	u7651
 12854   006E80  EF44  F037         	goto	u7650
 12855   006E84                     u7651:
 12856   006E84  EF2D  F037         	goto	l6144
 12857   006E88                     u7650:
 12858   006E88  0012               	return		;funcret
 12859   006E8A                     __end_of_strcpy:
 12860                           	callstack 0
 12861                           
 12862 ;; *************** function _memcpy *****************
 12863 ;; Defined at:
 12864 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 12865 ;; Parameters:    Size  Location     Type
 12866 ;;  d1              2    0[COMRAM] PTR void 
 12867 ;;		 -> dbuf(80), 
 12868 ;;  s1              2    2[COMRAM] PTR const void 
 12869 ;;		 -> dbuf(80), 
 12870 ;;  n               2    4[COMRAM] unsigned int 
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12873 ;;		 -> dbuf(80), 
 12874 ;;  d               2    7[COMRAM] PTR unsigned char 
 12875 ;;		 -> dbuf(80), 
 12876 ;;  tmp             1    6[COMRAM] unsigned char 
 12877 ;; Return value:  Size  Location     Type
 12878 ;;                  2    0[COMRAM] PTR void 
 12879 ;; Registers used:
 12880 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12881 ;; Tracked objects:
 12882 ;;		On entry : 0/0
 12883 ;;		On exit  : 0/0
 12884 ;;		Unchanged: 0/0
 12885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12886 ;;      Params:         6       0       0       0       0       0       0       0       0
 12887 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12888 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12889 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12890 ;;Total ram usage:       11 bytes
 12891 ;; Hardware stack levels used: 1
 12892 ;; Hardware stack levels required when called: 1
 12893 ;; This function calls:
 12894 ;;		Nothing
 12895 ;; This function is called by:
 12896 ;;		_efgtoa
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           
 12900                           	psect	text27
 12901   006C6E                     __ptext27:
 12902                           	callstack 0
 12903   006C6E                     _memcpy:
 12904                           	callstack 24
 12905   006C6E  C003  F00A         	movff	memcpy@s1,memcpy@s
 12906   006C72  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
 12907   006C76  C001  F008         	movff	memcpy@d1,memcpy@d
 12908   006C7A  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
 12909   006C7E  EF51  F036         	goto	l6708
 12910   006C82                     l6700:
 12911   006C82  C00A  FFD9         	movff	memcpy@s,fsr2l
 12912   006C86  C00B  FFDA         	movff	memcpy@s+1,fsr2h
 12913   006C8A  50DF               	movf	indf2,w,c
 12914   006C8C  6E07               	movwf	memcpy@tmp^0,c
 12915   006C8E  4A0A               	infsnz	memcpy@s^0,f,c
 12916   006C90  2A0B               	incf	(memcpy@s+1)^0,f,c
 12917   006C92  C008  FFD9         	movff	memcpy@d,fsr2l
 12918   006C96  C009  FFDA         	movff	memcpy@d+1,fsr2h
 12919   006C9A  C007  FFDF         	movff	memcpy@tmp,indf2
 12920   006C9E  4A08               	infsnz	memcpy@d^0,f,c
 12921   006CA0  2A09               	incf	(memcpy@d+1)^0,f,c
 12922   006CA2                     l6708:
 12923   006CA2  0605               	decf	memcpy@n^0,f,c
 12924   006CA4  A0D8               	btfss	status,0,c
 12925   006CA6  0606               	decf	(memcpy@n+1)^0,f,c
 12926   006CA8  2805               	incf	memcpy@n^0,w,c
 12927   006CAA  E106               	bnz	u8631
 12928   006CAC  2806               	incf	(memcpy@n+1)^0,w,c
 12929   006CAE  A4D8               	btfss	status,2,c
 12930   006CB0  EF5C  F036         	goto	u8631
 12931   006CB4  EF5E  F036         	goto	u8630
 12932   006CB8                     u8631:
 12933   006CB8  EF41  F036         	goto	l6700
 12934   006CBC                     u8630:
 12935   006CBC  0012               	return		;funcret
 12936   006CBE                     __end_of_memcpy:
 12937                           	callstack 0
 12938                           
 12939 ;; *************** function _labs *****************
 12940 ;; Defined at:
 12941 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
 12942 ;; Parameters:    Size  Location     Type
 12943 ;;  a               4    0[COMRAM] long 
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;		None
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  4    0[COMRAM] long 
 12948 ;; Registers used:
 12949 ;;		wreg, status,2, status,0
 12950 ;; Tracked objects:
 12951 ;;		On entry : 0/0
 12952 ;;		On exit  : 0/0
 12953 ;;		Unchanged: 0/0
 12954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12955 ;;      Params:         4       0       0       0       0       0       0       0       0
 12956 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12957 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12958 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12959 ;;Total ram usage:        8 bytes
 12960 ;; Hardware stack levels used: 1
 12961 ;; Hardware stack levels required when called: 1
 12962 ;; This function calls:
 12963 ;;		Nothing
 12964 ;; This function is called by:
 12965 ;;		_efgtoa
 12966 ;; This function uses a non-reentrant model
 12967 ;;
 12968                           
 12969                           	psect	text28
 12970   006C18                     __ptext28:
 12971                           	callstack 0
 12972   006C18                     _labs:
 12973                           	callstack 24
 12974   006C18  BE04               	btfsc	(labs@a+3)^0,7,c
 12975   006C1A  EF11  F036         	goto	u8521
 12976   006C1E  EF13  F036         	goto	u8520
 12977   006C22                     u8521:
 12978   006C22  EF1D  F036         	goto	l6666
 12979   006C26                     u8520:
 12980   006C26  C001  F001         	movff	labs@a,?_labs
 12981   006C2A  C002  F002         	movff	labs@a+1,?_labs+1
 12982   006C2E  C003  F003         	movff	labs@a+2,?_labs+2
 12983   006C32  C004  F004         	movff	labs@a+3,?_labs+3
 12984   006C36  EF36  F036         	goto	l1191
 12985   006C3A                     l6666:
 12986   006C3A  C001  F005         	movff	labs@a,??_labs
 12987   006C3E  C002  F006         	movff	labs@a+1,??_labs+1
 12988   006C42  C003  F007         	movff	labs@a+2,??_labs+2
 12989   006C46  C004  F008         	movff	labs@a+3,??_labs+3
 12990   006C4A  1E05               	comf	??_labs^0,f,c
 12991   006C4C  1E06               	comf	(??_labs+1)^0,f,c
 12992   006C4E  1E07               	comf	(??_labs+2)^0,f,c
 12993   006C50  1E08               	comf	(??_labs+3)^0,f,c
 12994   006C52  2A05               	incf	??_labs^0,f,c
 12995   006C54  0E00               	movlw	0
 12996   006C56  2206               	addwfc	(??_labs+1)^0,f,c
 12997   006C58  2207               	addwfc	(??_labs+2)^0,f,c
 12998   006C5A  2208               	addwfc	(??_labs+3)^0,f,c
 12999   006C5C  C005  F001         	movff	??_labs,?_labs
 13000   006C60  C006  F002         	movff	??_labs+1,?_labs+1
 13001   006C64  C007  F003         	movff	??_labs+2,?_labs+2
 13002   006C68  C008  F004         	movff	??_labs+3,?_labs+3
 13003   006C6C                     l1191:
 13004   006C6C  0012               	return		;funcret
 13005   006C6E                     __end_of_labs:
 13006                           	callstack 0
 13007                           
 13008 ;; *************** function _floorf *****************
 13009 ;; Defined at:
 13010 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
 13011 ;; Parameters:    Size  Location     Type
 13012 ;;  x               4   64[COMRAM] float 
 13013 ;; Auto vars:     Size  Location     Type
 13014 ;;  u               4   80[COMRAM] struct .
 13015 ;;  m               4   74[COMRAM] unsigned long 
 13016 ;;  e               2   78[COMRAM] int 
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  4   64[COMRAM] float 
 13019 ;; Registers used:
 13020 ;;		wreg, status,2, status,0
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13026 ;;      Params:         4       0       0       0       0       0       0       0       0
 13027 ;;      Locals:        10       0       0       0       0       0       0       0       0
 13028 ;;      Temps:          6       0       0       0       0       0       0       0       0
 13029 ;;      Totals:        20       0       0       0       0       0       0       0       0
 13030 ;;Total ram usage:       20 bytes
 13031 ;; Hardware stack levels used: 1
 13032 ;; Hardware stack levels required when called: 1
 13033 ;; This function calls:
 13034 ;;		Nothing
 13035 ;; This function is called by:
 13036 ;;		_efgtoa
 13037 ;; This function uses a non-reentrant model
 13038 ;;
 13039                           
 13040                           	psect	text29
 13041   0054A4                     __ptext29:
 13042                           	callstack 0
 13043   0054A4                     _floorf:
 13044                           	callstack 24
 13045   0054A4  C314  F051         	movff	floorf@F521,floorf@u
 13046   0054A8  C315  F052         	movff	floorf@F521+1,floorf@u+1
 13047   0054AC  C316  F053         	movff	floorf@F521+2,floorf@u+2
 13048   0054B0  C317  F054         	movff	floorf@F521+3,floorf@u+3
 13049   0054B4  C041  F051         	movff	floorf@x,floorf@u
 13050   0054B8  C042  F052         	movff	floorf@x+1,floorf@u+1
 13051   0054BC  C043  F053         	movff	floorf@x+2,floorf@u+2
 13052   0054C0  C044  F054         	movff	floorf@x+3,floorf@u+3
 13053   0054C4  0E81               	movlw	129
 13054   0054C6  6E45               	movwf	??_floorf^0,c
 13055   0054C8  0EFF               	movlw	255
 13056   0054CA  6E46               	movwf	(??_floorf+1)^0,c
 13057   0054CC  C051  F047         	movff	floorf@u,??_floorf+2
 13058   0054D0  C052  F048         	movff	floorf@u+1,??_floorf+3
 13059   0054D4  C053  F049         	movff	floorf@u+2,??_floorf+4
 13060   0054D8  C054  F04A         	movff	floorf@u+3,??_floorf+5
 13061   0054DC  0E18               	movlw	24
 13062   0054DE  EF76  F02A         	goto	u8530
 13063   0054E2                     u8535:
 13064   0054E2  90D8               	bcf	status,0,c
 13065   0054E4  324A               	rrcf	(??_floorf+5)^0,f,c
 13066   0054E6  3249               	rrcf	(??_floorf+4)^0,f,c
 13067   0054E8  3248               	rrcf	(??_floorf+3)^0,f,c
 13068   0054EA  3247               	rrcf	(??_floorf+2)^0,f,c
 13069   0054EC                     u8530:
 13070   0054EC  2EE8               	decfsz	wreg,f,c
 13071   0054EE  EF71  F02A         	goto	u8535
 13072   0054F2  5047               	movf	(??_floorf+2)^0,w,c
 13073   0054F4  2445               	addwf	??_floorf^0,w,c
 13074   0054F6  6E4F               	movwf	floorf@e^0,c
 13075   0054F8  0E00               	movlw	0
 13076   0054FA  2046               	addwfc	(??_floorf+1)^0,w,c
 13077   0054FC  6E50               	movwf	(floorf@e+1)^0,c
 13078   0054FE  BE50               	btfsc	(floorf@e+1)^0,7,c
 13079   005500  EF8B  F02A         	goto	u8541
 13080   005504  5050               	movf	(floorf@e+1)^0,w,c
 13081   005506  E109               	bnz	u8540
 13082   005508  0E17               	movlw	23
 13083   00550A  5C4F               	subwf	floorf@e^0,w,c
 13084   00550C  A0D8               	btfss	status,0,c
 13085   00550E  EF8B  F02A         	goto	u8541
 13086   005512  EF8D  F02A         	goto	u8540
 13087   005516                     u8541:
 13088   005516  EF97  F02A         	goto	l6676
 13089   00551A                     u8540:
 13090   00551A                     l6674:
 13091   00551A  C041  F041         	movff	floorf@x,?_floorf
 13092   00551E  C042  F042         	movff	floorf@x+1,?_floorf+1
 13093   005522  C043  F043         	movff	floorf@x+2,?_floorf+2
 13094   005526  C044  F044         	movff	floorf@x+3,?_floorf+3
 13095   00552A  EF5A  F02B         	goto	l1177
 13096   00552E                     l6676:
 13097   00552E  BE50               	btfsc	(floorf@e+1)^0,7,c
 13098   005530  EF9C  F02A         	goto	u8551
 13099   005534  EF9E  F02A         	goto	u8550
 13100   005538                     u8551:
 13101   005538  EF0E  F02B         	goto	l6686
 13102   00553C                     u8550:
 13103   00553C  C04F  F045         	movff	floorf@e,??_floorf
 13104   005540  0EFF               	movlw	255
 13105   005542  6E46               	movwf	(??_floorf+1)^0,c
 13106   005544  0EFF               	movlw	255
 13107   005546  6E47               	movwf	(??_floorf+2)^0,c
 13108   005548  0E7F               	movlw	127
 13109   00554A  6E48               	movwf	(??_floorf+3)^0,c
 13110   00554C  0E00               	movlw	0
 13111   00554E  6E49               	movwf	(??_floorf+4)^0,c
 13112   005550                     u8565:
 13113   005550  6645               	tstfsz	??_floorf^0,c
 13114   005552  EFAD  F02A         	goto	u8566
 13115   005556  EFB5  F02A         	goto	u8567
 13116   00555A                     u8566:
 13117   00555A  3449               	rlcf	(??_floorf+4)^0,w,c
 13118   00555C  3249               	rrcf	(??_floorf+4)^0,f,c
 13119   00555E  3248               	rrcf	(??_floorf+3)^0,f,c
 13120   005560  3247               	rrcf	(??_floorf+2)^0,f,c
 13121   005562  3246               	rrcf	(??_floorf+1)^0,f,c
 13122   005564  2E45               	decfsz	??_floorf^0,f,c
 13123   005566  EFA8  F02A         	goto	u8565
 13124   00556A                     u8567:
 13125   00556A  C046  F04B         	movff	??_floorf+1,floorf@m
 13126   00556E  C047  F04C         	movff	??_floorf+2,floorf@m+1
 13127   005572  C048  F04D         	movff	??_floorf+3,floorf@m+2
 13128   005576  C049  F04E         	movff	??_floorf+4,floorf@m+3
 13129   00557A  504B               	movf	floorf@m^0,w,c
 13130   00557C  1451               	andwf	floorf@u^0,w,c
 13131   00557E  6E45               	movwf	??_floorf^0,c
 13132   005580  504C               	movf	(floorf@m+1)^0,w,c
 13133   005582  1452               	andwf	(floorf@u+1)^0,w,c
 13134   005584  6E46               	movwf	(??_floorf+1)^0,c
 13135   005586  504D               	movf	(floorf@m+2)^0,w,c
 13136   005588  1453               	andwf	(floorf@u+2)^0,w,c
 13137   00558A  6E47               	movwf	(??_floorf+2)^0,c
 13138   00558C  504E               	movf	(floorf@m+3)^0,w,c
 13139   00558E  1454               	andwf	(floorf@u+3)^0,w,c
 13140   005590  6E48               	movwf	(??_floorf+3)^0,c
 13141   005592  5045               	movf	??_floorf^0,w,c
 13142   005594  1046               	iorwf	(??_floorf+1)^0,w,c
 13143   005596  1047               	iorwf	(??_floorf+2)^0,w,c
 13144   005598  1048               	iorwf	(??_floorf+3)^0,w,c
 13145   00559A  A4D8               	btfss	status,2,c
 13146   00559C  EFD2  F02A         	goto	u8571
 13147   0055A0  EFD4  F02A         	goto	u8570
 13148   0055A4                     u8571:
 13149   0055A4  EFD6  F02A         	goto	l6682
 13150   0055A8                     u8570:
 13151   0055A8  EF8D  F02A         	goto	l6674
 13152   0055AC                     l6682:
 13153   0055AC  C051  F045         	movff	floorf@u,??_floorf
 13154   0055B0  C052  F046         	movff	floorf@u+1,??_floorf+1
 13155   0055B4  C053  F047         	movff	floorf@u+2,??_floorf+2
 13156   0055B8  C054  F048         	movff	floorf@u+3,??_floorf+3
 13157   0055BC  0E20               	movlw	32
 13158   0055BE  EFE6  F02A         	goto	u8580
 13159   0055C2                     u8585:
 13160   0055C2  90D8               	bcf	status,0,c
 13161   0055C4  3248               	rrcf	(??_floorf+3)^0,f,c
 13162   0055C6  3247               	rrcf	(??_floorf+2)^0,f,c
 13163   0055C8  3246               	rrcf	(??_floorf+1)^0,f,c
 13164   0055CA  3245               	rrcf	??_floorf^0,f,c
 13165   0055CC                     u8580:
 13166   0055CC  2EE8               	decfsz	wreg,f,c
 13167   0055CE  EFE1  F02A         	goto	u8585
 13168   0055D2  5045               	movf	??_floorf^0,w,c
 13169   0055D4  1046               	iorwf	(??_floorf+1)^0,w,c
 13170   0055D6  1047               	iorwf	(??_floorf+2)^0,w,c
 13171   0055D8  1048               	iorwf	(??_floorf+3)^0,w,c
 13172   0055DA  B4D8               	btfsc	status,2,c
 13173   0055DC  EFF2  F02A         	goto	u8591
 13174   0055E0  EFF4  F02A         	goto	u8590
 13175   0055E4                     u8591:
 13176   0055E4  EFFC  F02A         	goto	l1180
 13177   0055E8                     u8590:
 13178   0055E8  504B               	movf	floorf@m^0,w,c
 13179   0055EA  2651               	addwf	floorf@u^0,f,c
 13180   0055EC  504C               	movf	(floorf@m+1)^0,w,c
 13181   0055EE  2252               	addwfc	(floorf@u+1)^0,f,c
 13182   0055F0  504D               	movf	(floorf@m+2)^0,w,c
 13183   0055F2  2253               	addwfc	(floorf@u+2)^0,f,c
 13184   0055F4  504E               	movf	(floorf@m+3)^0,w,c
 13185   0055F6  2254               	addwfc	(floorf@u+3)^0,f,c
 13186   0055F8                     l1180:
 13187   0055F8  1C4B               	comf	floorf@m^0,w,c
 13188   0055FA  6E45               	movwf	??_floorf^0,c
 13189   0055FC  1C4C               	comf	(floorf@m+1)^0,w,c
 13190   0055FE  6E46               	movwf	(??_floorf+1)^0,c
 13191   005600  1C4D               	comf	(floorf@m+2)^0,w,c
 13192   005602  6E47               	movwf	(??_floorf+2)^0,c
 13193   005604  1C4E               	comf	(floorf@m+3)^0,w,c
 13194   005606  6E48               	movwf	(??_floorf+3)^0,c
 13195   005608  5045               	movf	??_floorf^0,w,c
 13196   00560A  1651               	andwf	floorf@u^0,f,c
 13197   00560C  5046               	movf	(??_floorf+1)^0,w,c
 13198   00560E  1652               	andwf	(floorf@u+1)^0,f,c
 13199   005610  5047               	movf	(??_floorf+2)^0,w,c
 13200   005612  1653               	andwf	(floorf@u+2)^0,f,c
 13201   005614  5048               	movf	(??_floorf+3)^0,w,c
 13202   005616  1654               	andwf	(floorf@u+3)^0,f,c
 13203   005618  EF52  F02B         	goto	l6694
 13204   00561C                     l6686:
 13205   00561C  C051  F045         	movff	floorf@u,??_floorf
 13206   005620  C052  F046         	movff	floorf@u+1,??_floorf+1
 13207   005624  C053  F047         	movff	floorf@u+2,??_floorf+2
 13208   005628  C054  F048         	movff	floorf@u+3,??_floorf+3
 13209   00562C  0E20               	movlw	32
 13210   00562E  EF1E  F02B         	goto	u8600
 13211   005632                     u8605:
 13212   005632  90D8               	bcf	status,0,c
 13213   005634  3248               	rrcf	(??_floorf+3)^0,f,c
 13214   005636  3247               	rrcf	(??_floorf+2)^0,f,c
 13215   005638  3246               	rrcf	(??_floorf+1)^0,f,c
 13216   00563A  3245               	rrcf	??_floorf^0,f,c
 13217   00563C                     u8600:
 13218   00563C  2EE8               	decfsz	wreg,f,c
 13219   00563E  EF19  F02B         	goto	u8605
 13220   005642  5045               	movf	??_floorf^0,w,c
 13221   005644  1046               	iorwf	(??_floorf+1)^0,w,c
 13222   005646  1047               	iorwf	(??_floorf+2)^0,w,c
 13223   005648  1048               	iorwf	(??_floorf+3)^0,w,c
 13224   00564A  A4D8               	btfss	status,2,c
 13225   00564C  EF2A  F02B         	goto	u8611
 13226   005650  EF2C  F02B         	goto	u8610
 13227   005654                     u8611:
 13228   005654  EF36  F02B         	goto	l6690
 13229   005658                     u8610:
 13230   005658  0E00               	movlw	0
 13231   00565A  6E51               	movwf	floorf@u^0,c
 13232   00565C  0E00               	movlw	0
 13233   00565E  6E52               	movwf	(floorf@u+1)^0,c
 13234   005660  0E00               	movlw	0
 13235   005662  6E53               	movwf	(floorf@u+2)^0,c
 13236   005664  0E00               	movlw	0
 13237   005666  6E54               	movwf	(floorf@u+3)^0,c
 13238   005668  EF52  F02B         	goto	l6694
 13239   00566C                     l6690:
 13240   00566C  90D8               	bcf	status,0,c
 13241   00566E  3451               	rlcf	floorf@u^0,w,c
 13242   005670  6E45               	movwf	??_floorf^0,c
 13243   005672  3452               	rlcf	(floorf@u+1)^0,w,c
 13244   005674  6E46               	movwf	(??_floorf+1)^0,c
 13245   005676  3453               	rlcf	(floorf@u+2)^0,w,c
 13246   005678  6E47               	movwf	(??_floorf+2)^0,c
 13247   00567A  3454               	rlcf	(floorf@u+3)^0,w,c
 13248   00567C  6E48               	movwf	(??_floorf+3)^0,c
 13249   00567E  5045               	movf	??_floorf^0,w,c
 13250   005680  1046               	iorwf	(??_floorf+1)^0,w,c
 13251   005682  1047               	iorwf	(??_floorf+2)^0,w,c
 13252   005684  1048               	iorwf	(??_floorf+3)^0,w,c
 13253   005686  B4D8               	btfsc	status,2,c
 13254   005688  EF48  F02B         	goto	u8621
 13255   00568C  EF4A  F02B         	goto	u8620
 13256   005690                     u8621:
 13257   005690  EF52  F02B         	goto	l6694
 13258   005694                     u8620:
 13259   005694  0E00               	movlw	0
 13260   005696  6E51               	movwf	floorf@u^0,c
 13261   005698  0E00               	movlw	0
 13262   00569A  6E52               	movwf	(floorf@u+1)^0,c
 13263   00569C  0E80               	movlw	128
 13264   00569E  6E53               	movwf	(floorf@u+2)^0,c
 13265   0056A0  0EBF               	movlw	191
 13266   0056A2  6E54               	movwf	(floorf@u+3)^0,c
 13267   0056A4                     l6694:
 13268   0056A4  C051  F041         	movff	floorf@u,?_floorf
 13269   0056A8  C052  F042         	movff	floorf@u+1,?_floorf+1
 13270   0056AC  C053  F043         	movff	floorf@u+2,?_floorf+2
 13271   0056B0  C054  F044         	movff	floorf@u+3,?_floorf+3
 13272   0056B4                     l1177:
 13273   0056B4  0012               	return		;funcret
 13274   0056B6                     __end_of_floorf:
 13275                           	callstack 0
 13276                           
 13277 ;; *************** function ___fpclassifyf *****************
 13278 ;; Defined at:
 13279 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
 13280 ;; Parameters:    Size  Location     Type
 13281 ;;  x               4    0[COMRAM] float 
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;  u               4   10[COMRAM] struct .
 13284 ;;  e               2    8[COMRAM] int 
 13285 ;; Return value:  Size  Location     Type
 13286 ;;                  2    0[COMRAM] int 
 13287 ;; Registers used:
 13288 ;;		wreg, status,2, status,0
 13289 ;; Tracked objects:
 13290 ;;		On entry : 0/0
 13291 ;;		On exit  : 0/0
 13292 ;;		Unchanged: 0/0
 13293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13294 ;;      Params:         4       0       0       0       0       0       0       0       0
 13295 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13296 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13297 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13298 ;;Total ram usage:       14 bytes
 13299 ;; Hardware stack levels used: 1
 13300 ;; Hardware stack levels required when called: 1
 13301 ;; This function calls:
 13302 ;;		Nothing
 13303 ;; This function is called by:
 13304 ;;		_efgtoa
 13305 ;; This function uses a non-reentrant model
 13306 ;;
 13307                           
 13308                           	psect	text30
 13309   006306                     __ptext30:
 13310                           	callstack 0
 13311   006306                     ___fpclassifyf:
 13312                           	callstack 24
 13313   006306  C318  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 13314   00630A  C319  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 13315   00630E  C31A  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 13316   006312  C31B  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 13317   006316  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 13318   00631A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 13319   00631E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 13320   006322  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 13321   006326  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13322   00632A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13323   00632E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13324   006332  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13325   006336  0E18               	movlw	24
 13326   006338  EFA3  F031         	goto	u8450
 13327   00633C                     u8455:
 13328   00633C  90D8               	bcf	status,0,c
 13329   00633E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 13330   006340  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 13331   006342  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 13332   006344  3205               	rrcf	??___fpclassifyf^0,f,c
 13333   006346                     u8450:
 13334   006346  2EE8               	decfsz	wreg,f,c
 13335   006348  EF9E  F031         	goto	u8455
 13336   00634C  5005               	movf	??___fpclassifyf^0,w,c
 13337   00634E  6E09               	movwf	___fpclassifyf@e^0,c
 13338   006350  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 13339   006352  5009               	movf	___fpclassifyf@e^0,w,c
 13340   006354  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13341   006356  A4D8               	btfss	status,2,c
 13342   006358  EFB0  F031         	goto	u8461
 13343   00635C  EFB2  F031         	goto	u8460
 13344   006360                     u8461:
 13345   006360  EFD2  F031         	goto	l6652
 13346   006364                     u8460:
 13347   006364  90D8               	bcf	status,0,c
 13348   006366  340B               	rlcf	___fpclassifyf@u^0,w,c
 13349   006368  6E05               	movwf	??___fpclassifyf^0,c
 13350   00636A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 13351   00636C  6E06               	movwf	(??___fpclassifyf+1)^0,c
 13352   00636E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 13353   006370  6E07               	movwf	(??___fpclassifyf+2)^0,c
 13354   006372  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 13355   006374  6E08               	movwf	(??___fpclassifyf+3)^0,c
 13356   006376  5005               	movf	??___fpclassifyf^0,w,c
 13357   006378  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13358   00637A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13359   00637C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13360   00637E  A4D8               	btfss	status,2,c
 13361   006380  EFC4  F031         	goto	u8471
 13362   006384  EFC6  F031         	goto	u8470
 13363   006388                     u8471:
 13364   006388  EFCC  F031         	goto	l6648
 13365   00638C                     u8470:
 13366   00638C  0E00               	movlw	0
 13367   00638E  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13368   006390  0E02               	movlw	2
 13369   006392  6E01               	movwf	?___fpclassifyf^0,c
 13370   006394  EF01  F032         	goto	l1163
 13371   006398                     l6648:
 13372   006398  0E00               	movlw	0
 13373   00639A  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13374   00639C  0E03               	movlw	3
 13375   00639E  6E01               	movwf	?___fpclassifyf^0,c
 13376   0063A0  EF01  F032         	goto	l1163
 13377   0063A4                     l6652:
 13378   0063A4  2809               	incf	___fpclassifyf@e^0,w,c
 13379   0063A6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13380   0063A8  A4D8               	btfss	status,2,c
 13381   0063AA  EFD9  F031         	goto	u8481
 13382   0063AE  EFDB  F031         	goto	u8480
 13383   0063B2                     u8481:
 13384   0063B2  EFFD  F031         	goto	l6658
 13385   0063B6                     u8480:
 13386   0063B6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13387   0063BA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13388   0063BE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13389   0063C2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13390   0063C6  0E09               	movlw	9
 13391   0063C8                     u8495:
 13392   0063C8  90D8               	bcf	status,0,c
 13393   0063CA  3605               	rlcf	??___fpclassifyf^0,f,c
 13394   0063CC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 13395   0063CE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 13396   0063D0  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 13397   0063D2  2EE8               	decfsz	wreg,f,c
 13398   0063D4  EFE4  F031         	goto	u8495
 13399   0063D8  5005               	movf	??___fpclassifyf^0,w,c
 13400   0063DA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13401   0063DC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13402   0063DE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13403   0063E0  B4D8               	btfsc	status,2,c
 13404   0063E2  EFF5  F031         	goto	u8501
 13405   0063E6  EFF8  F031         	goto	u8500
 13406   0063EA                     u8501:
 13407   0063EA  0E01               	movlw	1
 13408   0063EC  EFF9  F031         	goto	u8510
 13409   0063F0                     u8500:
 13410   0063F0  0E00               	movlw	0
 13411   0063F2                     u8510:
 13412   0063F2  6E01               	movwf	?___fpclassifyf^0,c
 13413   0063F4  6A02               	clrf	(?___fpclassifyf+1)^0,c
 13414   0063F6  EF01  F032         	goto	l1163
 13415   0063FA                     l6658:
 13416   0063FA  0E00               	movlw	0
 13417   0063FC  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13418   0063FE  0E04               	movlw	4
 13419   006400  6E01               	movwf	?___fpclassifyf^0,c
 13420   006402                     l1163:
 13421   006402  0012               	return		;funcret
 13422   006404                     __end_of___fpclassifyf:
 13423                           	callstack 0
 13424                           
 13425 ;; *************** function ___fltol *****************
 13426 ;; Defined at:
 13427 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 13428 ;; Parameters:    Size  Location     Type
 13429 ;;  f1              4    0[COMRAM] int 
 13430 ;; Auto vars:     Size  Location     Type
 13431 ;;  exp1            1    9[COMRAM] unsigned char 
 13432 ;;  sign1           1    8[COMRAM] unsigned char 
 13433 ;; Return value:  Size  Location     Type
 13434 ;;                  4    0[COMRAM] long 
 13435 ;; Registers used:
 13436 ;;		wreg, status,2, status,0
 13437 ;; Tracked objects:
 13438 ;;		On entry : 0/0
 13439 ;;		On exit  : 0/0
 13440 ;;		Unchanged: 0/0
 13441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13442 ;;      Params:         4       0       0       0       0       0       0       0       0
 13443 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13444 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13445 ;;      Totals:        10       0       0       0       0       0       0       0       0
 13446 ;;Total ram usage:       10 bytes
 13447 ;; Hardware stack levels used: 1
 13448 ;; Hardware stack levels required when called: 1
 13449 ;; This function calls:
 13450 ;;		Nothing
 13451 ;; This function is called by:
 13452 ;;		_efgtoa
 13453 ;; This function uses a non-reentrant model
 13454 ;;
 13455                           
 13456                           	psect	text31
 13457   005EF6                     __ptext31:
 13458                           	callstack 0
 13459   005EF6                     ___fltol:
 13460                           	callstack 24
 13461   005EF6  3403               	rlcf	(___fltol@f1+2)^0,w,c
 13462   005EF8  3404               	rlcf	(___fltol@f1+3)^0,w,c
 13463   005EFA  6E0A               	movwf	___fltol@exp1^0,c
 13464   005EFC  500A               	movf	___fltol@exp1^0,w,c
 13465   005EFE  A4D8               	btfss	status,2,c
 13466   005F00  EF84  F02F         	goto	u8321
 13467   005F04  EF86  F02F         	goto	u8320
 13468   005F08                     u8321:
 13469   005F08  EF90  F02F         	goto	l6570
 13470   005F0C                     u8320:
 13471   005F0C                     l6566:
 13472   005F0C  0E00               	movlw	0
 13473   005F0E  6E01               	movwf	?___fltol^0,c
 13474   005F10  0E00               	movlw	0
 13475   005F12  6E02               	movwf	(?___fltol+1)^0,c
 13476   005F14  0E00               	movlw	0
 13477   005F16  6E03               	movwf	(?___fltol+2)^0,c
 13478   005F18  0E00               	movlw	0
 13479   005F1A  6E04               	movwf	(?___fltol+3)^0,c
 13480   005F1C  EFFD  F02F         	goto	l582
 13481   005F20                     l6570:
 13482   005F20  C001  F005         	movff	___fltol@f1,??___fltol
 13483   005F24  C002  F006         	movff	___fltol@f1+1,??___fltol+1
 13484   005F28  C003  F007         	movff	___fltol@f1+2,??___fltol+2
 13485   005F2C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
 13486   005F30  0E20               	movlw	32
 13487   005F32  EFA0  F02F         	goto	u8330
 13488   005F36                     u8335:
 13489   005F36  90D8               	bcf	status,0,c
 13490   005F38  3208               	rrcf	(??___fltol+3)^0,f,c
 13491   005F3A  3207               	rrcf	(??___fltol+2)^0,f,c
 13492   005F3C  3206               	rrcf	(??___fltol+1)^0,f,c
 13493   005F3E  3205               	rrcf	??___fltol^0,f,c
 13494   005F40                     u8330:
 13495   005F40  2EE8               	decfsz	wreg,f,c
 13496   005F42  EF9B  F02F         	goto	u8335
 13497   005F46  5005               	movf	??___fltol^0,w,c
 13498   005F48  6E09               	movwf	___fltol@sign1^0,c
 13499   005F4A  8E03               	bsf	(___fltol@f1+2)^0,7,c
 13500   005F4C  0EFF               	movlw	255
 13501   005F4E  1601               	andwf	___fltol@f1^0,f,c
 13502   005F50  0EFF               	movlw	255
 13503   005F52  1602               	andwf	(___fltol@f1+1)^0,f,c
 13504   005F54  0EFF               	movlw	255
 13505   005F56  1603               	andwf	(___fltol@f1+2)^0,f,c
 13506   005F58  0E00               	movlw	0
 13507   005F5A  1604               	andwf	(___fltol@f1+3)^0,f,c
 13508   005F5C  0E96               	movlw	150
 13509   005F5E  5E0A               	subwf	___fltol@exp1^0,f,c
 13510   005F60  BE0A               	btfsc	___fltol@exp1^0,7,c
 13511   005F62  EFB7  F02F         	goto	u8340
 13512   005F66  EFB5  F02F         	goto	u8341
 13513   005F6A                     u8341:
 13514   005F6A  EFCD  F02F         	goto	l6590
 13515   005F6E                     u8340:
 13516   005F6E  500A               	movf	___fltol@exp1^0,w,c
 13517   005F70  0A80               	xorlw	128
 13518   005F72  0F97               	addlw	151
 13519   005F74  B0D8               	btfsc	status,0,c
 13520   005F76  EFBF  F02F         	goto	u8351
 13521   005F7A  EFC1  F02F         	goto	u8350
 13522   005F7E                     u8351:
 13523   005F7E  EFC3  F02F         	goto	l6586
 13524   005F82                     u8350:
 13525   005F82  EF86  F02F         	goto	l6566
 13526   005F86                     l6586:
 13527   005F86  90D8               	bcf	status,0,c
 13528   005F88  3204               	rrcf	(___fltol@f1+3)^0,f,c
 13529   005F8A  3203               	rrcf	(___fltol@f1+2)^0,f,c
 13530   005F8C  3202               	rrcf	(___fltol@f1+1)^0,f,c
 13531   005F8E  3201               	rrcf	___fltol@f1^0,f,c
 13532   005F90  3E0A               	incfsz	___fltol@exp1^0,f,c
 13533   005F92  EFC3  F02F         	goto	l6586
 13534   005F96  EFE5  F02F         	goto	l6600
 13535   005F9A                     l6590:
 13536   005F9A  0E1F               	movlw	31
 13537   005F9C  640A               	cpfsgt	___fltol@exp1^0,c
 13538   005F9E  EFD3  F02F         	goto	u8361
 13539   005FA2  EFD5  F02F         	goto	u8360
 13540   005FA6                     u8361:
 13541   005FA6  EFDD  F02F         	goto	l6598
 13542   005FAA                     u8360:
 13543   005FAA  EF86  F02F         	goto	l6566
 13544   005FAE                     l6596:
 13545   005FAE  90D8               	bcf	status,0,c
 13546   005FB0  3601               	rlcf	___fltol@f1^0,f,c
 13547   005FB2  3602               	rlcf	(___fltol@f1+1)^0,f,c
 13548   005FB4  3603               	rlcf	(___fltol@f1+2)^0,f,c
 13549   005FB6  3604               	rlcf	(___fltol@f1+3)^0,f,c
 13550   005FB8  060A               	decf	___fltol@exp1^0,f,c
 13551   005FBA                     l6598:
 13552   005FBA  500A               	movf	___fltol@exp1^0,w,c
 13553   005FBC  A4D8               	btfss	status,2,c
 13554   005FBE  EFE3  F02F         	goto	u8371
 13555   005FC2  EFE5  F02F         	goto	u8370
 13556   005FC6                     u8371:
 13557   005FC6  EFD7  F02F         	goto	l6596
 13558   005FCA                     u8370:
 13559   005FCA                     l6600:
 13560   005FCA  5009               	movf	___fltol@sign1^0,w,c
 13561   005FCC  B4D8               	btfsc	status,2,c
 13562   005FCE  EFEB  F02F         	goto	u8381
 13563   005FD2  EFED  F02F         	goto	u8380
 13564   005FD6                     u8381:
 13565   005FD6  EFF5  F02F         	goto	l6604
 13566   005FDA                     u8380:
 13567   005FDA  1E04               	comf	(___fltol@f1+3)^0,f,c
 13568   005FDC  1E03               	comf	(___fltol@f1+2)^0,f,c
 13569   005FDE  1E02               	comf	(___fltol@f1+1)^0,f,c
 13570   005FE0  6C01               	negf	___fltol@f1^0,c
 13571   005FE2  0E00               	movlw	0
 13572   005FE4  2202               	addwfc	(___fltol@f1+1)^0,f,c
 13573   005FE6  2203               	addwfc	(___fltol@f1+2)^0,f,c
 13574   005FE8  2204               	addwfc	(___fltol@f1+3)^0,f,c
 13575   005FEA                     l6604:
 13576   005FEA  C001  F001         	movff	___fltol@f1,?___fltol
 13577   005FEE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 13578   005FF2  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 13579   005FF6  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 13580   005FFA                     l582:
 13581   005FFA  0012               	return		;funcret
 13582   005FFC                     __end_of___fltol:
 13583                           	callstack 0
 13584                           
 13585 ;; *************** function ___flsub *****************
 13586 ;; Defined at:
 13587 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13588 ;; Parameters:    Size  Location     Type
 13589 ;;  b               4   80[COMRAM] long 
 13590 ;;  a               4   84[COMRAM] long 
 13591 ;; Auto vars:     Size  Location     Type
 13592 ;;		None
 13593 ;; Return value:  Size  Location     Type
 13594 ;;                  4   80[COMRAM] long 
 13595 ;; Registers used:
 13596 ;;		wreg, status,2, status,0, cstack
 13597 ;; Tracked objects:
 13598 ;;		On entry : 0/0
 13599 ;;		On exit  : 0/0
 13600 ;;		Unchanged: 0/0
 13601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13602 ;;      Params:         8       0       0       0       0       0       0       0       0
 13603 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13604 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13605 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13606 ;;Total ram usage:        8 bytes
 13607 ;; Hardware stack levels used: 1
 13608 ;; Hardware stack levels required when called: 2
 13609 ;; This function calls:
 13610 ;;		___fladd
 13611 ;; This function is called by:
 13612 ;;		_main
 13613 ;;		_Handle_Fire_Events
 13614 ;;		_Handle_Test_Events
 13615 ;;		_Read_Sensors
 13616 ;;		_efgtoa
 13617 ;;		_powf
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621                           	psect	text32
 13622   006D50                     __ptext32:
 13623                           	callstack 0
 13624   006D50                     ___flsub:
 13625                           	callstack 28
 13626   006D50  0E00               	movlw	0
 13627   006D52  1A55               	xorwf	___flsub@a^0,f,c
 13628   006D54  0E00               	movlw	0
 13629   006D56  1A56               	xorwf	(___flsub@a+1)^0,f,c
 13630   006D58  0E00               	movlw	0
 13631   006D5A  1A57               	xorwf	(___flsub@a+2)^0,f,c
 13632   006D5C  0E80               	movlw	128
 13633   006D5E  1A58               	xorwf	(___flsub@a+3)^0,f,c
 13634   006D60  C051  F041         	movff	___flsub@b,___fladd@b
 13635   006D64  C052  F042         	movff	___flsub@b+1,___fladd@b+1
 13636   006D68  C053  F043         	movff	___flsub@b+2,___fladd@b+2
 13637   006D6C  C054  F044         	movff	___flsub@b+3,___fladd@b+3
 13638   006D70  C055  F045         	movff	___flsub@a,___fladd@a
 13639   006D74  C056  F046         	movff	___flsub@a+1,___fladd@a+1
 13640   006D78  C057  F047         	movff	___flsub@a+2,___fladd@a+2
 13641   006D7C  C058  F048         	movff	___flsub@a+3,___fladd@a+3
 13642   006D80  EC0B  F01E         	call	___fladd	;wreg free
 13643   006D84  C041  F051         	movff	?___fladd,?___flsub
 13644   006D88  C042  F052         	movff	?___fladd+1,?___flsub+1
 13645   006D8C  C043  F053         	movff	?___fladd+2,?___flsub+2
 13646   006D90  C044  F054         	movff	?___fladd+3,?___flsub+3
 13647   006D94  0012               	return		;funcret
 13648   006D96                     __end_of___flsub:
 13649                           	callstack 0
 13650                           
 13651 ;; *************** function ___fladd *****************
 13652 ;; Defined at:
 13653 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13654 ;; Parameters:    Size  Location     Type
 13655 ;;  b               4   64[COMRAM] long 
 13656 ;;  a               4   68[COMRAM] long 
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;  grs             1   79[COMRAM] unsigned char 
 13659 ;;  bexp            1   78[COMRAM] unsigned char 
 13660 ;;  aexp            1   77[COMRAM] unsigned char 
 13661 ;;  signs           1   76[COMRAM] unsigned char 
 13662 ;; Return value:  Size  Location     Type
 13663 ;;                  4   64[COMRAM] unsigned char 
 13664 ;; Registers used:
 13665 ;;		wreg, status,2, status,0
 13666 ;; Tracked objects:
 13667 ;;		On entry : 0/0
 13668 ;;		On exit  : 0/0
 13669 ;;		Unchanged: 0/0
 13670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13671 ;;      Params:         8       0       0       0       0       0       0       0       0
 13672 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13673 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13674 ;;      Totals:        16       0       0       0       0       0       0       0       0
 13675 ;;Total ram usage:       16 bytes
 13676 ;; Hardware stack levels used: 1
 13677 ;; Hardware stack levels required when called: 1
 13678 ;; This function calls:
 13679 ;;		Nothing
 13680 ;; This function is called by:
 13681 ;;		_main
 13682 ;;		_Read_Sensors
 13683 ;;		_Apply_Filter
 13684 ;;		___flsub
 13685 ;;		_efgtoa
 13686 ;;		_powf
 13687 ;; This function uses a non-reentrant model
 13688 ;;
 13689                           
 13690                           	psect	text33
 13691   003C16                     __ptext33:
 13692                           	callstack 0
 13693   003C16                     ___fladd:
 13694                           	callstack 28
 13695   003C16  5044               	movf	(___fladd@b+3)^0,w,c
 13696   003C18  0B80               	andlw	128
 13697   003C1A  6E4D               	movwf	___fladd@signs^0,c
 13698   003C1C  5044               	movf	(___fladd@b+3)^0,w,c
 13699   003C1E  2444               	addwf	(___fladd@b+3)^0,w,c
 13700   003C20  6E4F               	movwf	___fladd@bexp^0,c
 13701   003C22  AE43               	btfss	(___fladd@b+2)^0,7,c
 13702   003C24  EF16  F01E         	goto	u7251
 13703   003C28  EF18  F01E         	goto	u7250
 13704   003C2C                     u7251:
 13705   003C2C  EF19  F01E         	goto	l5946
 13706   003C30                     u7250:
 13707   003C30  804F               	bsf	___fladd@bexp^0,0,c
 13708   003C32                     l5946:
 13709   003C32  504F               	movf	___fladd@bexp^0,w,c
 13710   003C34  B4D8               	btfsc	status,2,c
 13711   003C36  EF1F  F01E         	goto	u7261
 13712   003C3A  EF21  F01E         	goto	u7260
 13713   003C3E                     u7261:
 13714   003C3E  EF35  F01E         	goto	l5956
 13715   003C42                     u7260:
 13716   003C42  284F               	incf	___fladd@bexp^0,w,c
 13717   003C44  A4D8               	btfss	status,2,c
 13718   003C46  EF27  F01E         	goto	u7271
 13719   003C4A  EF29  F01E         	goto	u7270
 13720   003C4E                     u7271:
 13721   003C4E  EF31  F01E         	goto	l5952
 13722   003C52                     u7270:
 13723   003C52  0E00               	movlw	0
 13724   003C54  6E41               	movwf	___fladd@b^0,c
 13725   003C56  0E00               	movlw	0
 13726   003C58  6E42               	movwf	(___fladd@b+1)^0,c
 13727   003C5A  0E00               	movlw	0
 13728   003C5C  6E43               	movwf	(___fladd@b+2)^0,c
 13729   003C5E  0E00               	movlw	0
 13730   003C60  6E44               	movwf	(___fladd@b+3)^0,c
 13731   003C62                     l5952:
 13732   003C62  8E43               	bsf	(___fladd@b+2)^0,7,c
 13733   003C64  6A44               	clrf	(___fladd@b+3)^0,c
 13734   003C66  EF3D  F01E         	goto	l5958
 13735   003C6A                     l5956:
 13736   003C6A  0E00               	movlw	0
 13737   003C6C  6E41               	movwf	___fladd@b^0,c
 13738   003C6E  0E00               	movlw	0
 13739   003C70  6E42               	movwf	(___fladd@b+1)^0,c
 13740   003C72  0E00               	movlw	0
 13741   003C74  6E43               	movwf	(___fladd@b+2)^0,c
 13742   003C76  0E00               	movlw	0
 13743   003C78  6E44               	movwf	(___fladd@b+3)^0,c
 13744   003C7A                     l5958:
 13745   003C7A  5048               	movf	(___fladd@a+3)^0,w,c
 13746   003C7C  0B80               	andlw	128
 13747   003C7E  6E4E               	movwf	___fladd@aexp^0,c
 13748   003C80  504D               	movf	___fladd@signs^0,w,c
 13749   003C82  184E               	xorwf	___fladd@aexp^0,w,c
 13750   003C84  B4D8               	btfsc	status,2,c
 13751   003C86  EF47  F01E         	goto	u7281
 13752   003C8A  EF49  F01E         	goto	u7280
 13753   003C8E                     u7281:
 13754   003C8E  EF4A  F01E         	goto	l5964
 13755   003C92                     u7280:
 13756   003C92  8C4D               	bsf	___fladd@signs^0,6,c
 13757   003C94                     l5964:
 13758   003C94  5048               	movf	(___fladd@a+3)^0,w,c
 13759   003C96  2448               	addwf	(___fladd@a+3)^0,w,c
 13760   003C98  6E4E               	movwf	___fladd@aexp^0,c
 13761   003C9A  AE47               	btfss	(___fladd@a+2)^0,7,c
 13762   003C9C  EF52  F01E         	goto	u7291
 13763   003CA0  EF54  F01E         	goto	u7290
 13764   003CA4                     u7291:
 13765   003CA4  EF55  F01E         	goto	l5970
 13766   003CA8                     u7290:
 13767   003CA8  804E               	bsf	___fladd@aexp^0,0,c
 13768   003CAA                     l5970:
 13769   003CAA  504E               	movf	___fladd@aexp^0,w,c
 13770   003CAC  B4D8               	btfsc	status,2,c
 13771   003CAE  EF5B  F01E         	goto	u7301
 13772   003CB2  EF5D  F01E         	goto	u7300
 13773   003CB6                     u7301:
 13774   003CB6  EF71  F01E         	goto	l5980
 13775   003CBA                     u7300:
 13776   003CBA  284E               	incf	___fladd@aexp^0,w,c
 13777   003CBC  A4D8               	btfss	status,2,c
 13778   003CBE  EF63  F01E         	goto	u7311
 13779   003CC2  EF65  F01E         	goto	u7310
 13780   003CC6                     u7311:
 13781   003CC6  EF6D  F01E         	goto	l5976
 13782   003CCA                     u7310:
 13783   003CCA  0E00               	movlw	0
 13784   003CCC  6E45               	movwf	___fladd@a^0,c
 13785   003CCE  0E00               	movlw	0
 13786   003CD0  6E46               	movwf	(___fladd@a+1)^0,c
 13787   003CD2  0E00               	movlw	0
 13788   003CD4  6E47               	movwf	(___fladd@a+2)^0,c
 13789   003CD6  0E00               	movlw	0
 13790   003CD8  6E48               	movwf	(___fladd@a+3)^0,c
 13791   003CDA                     l5976:
 13792   003CDA  8E47               	bsf	(___fladd@a+2)^0,7,c
 13793   003CDC  6A48               	clrf	(___fladd@a+3)^0,c
 13794   003CDE  EF79  F01E         	goto	l5982
 13795   003CE2                     l5980:
 13796   003CE2  0E00               	movlw	0
 13797   003CE4  6E45               	movwf	___fladd@a^0,c
 13798   003CE6  0E00               	movlw	0
 13799   003CE8  6E46               	movwf	(___fladd@a+1)^0,c
 13800   003CEA  0E00               	movlw	0
 13801   003CEC  6E47               	movwf	(___fladd@a+2)^0,c
 13802   003CEE  0E00               	movlw	0
 13803   003CF0  6E48               	movwf	(___fladd@a+3)^0,c
 13804   003CF2                     l5982:
 13805   003CF2  504F               	movf	___fladd@bexp^0,w,c
 13806   003CF4  5C4E               	subwf	___fladd@aexp^0,w,c
 13807   003CF6  B0D8               	btfsc	status,0,c
 13808   003CF8  EF80  F01E         	goto	u7321
 13809   003CFC  EF82  F01E         	goto	u7320
 13810   003D00                     u7321:
 13811   003D00  EFA9  F01E         	goto	l6018
 13812   003D04                     u7320:
 13813   003D04  AC4D               	btfss	___fladd@signs^0,6,c
 13814   003D06  EF87  F01E         	goto	u7331
 13815   003D0A  EF89  F01E         	goto	u7330
 13816   003D0E                     u7331:
 13817   003D0E  EF8B  F01E         	goto	l5988
 13818   003D12                     u7330:
 13819   003D12  0E80               	movlw	128
 13820   003D14  1A4D               	xorwf	___fladd@signs^0,f,c
 13821   003D16                     l5988:
 13822   003D16  C04F  F050         	movff	___fladd@bexp,___fladd@grs
 13823   003D1A  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
 13824   003D1E  C050  F04E         	movff	___fladd@grs,___fladd@aexp
 13825   003D22  C041  F050         	movff	___fladd@b,___fladd@grs
 13826   003D26  C045  F041         	movff	___fladd@a,___fladd@b
 13827   003D2A  C050  F045         	movff	___fladd@grs,___fladd@a
 13828   003D2E  C042  F050         	movff	___fladd@b+1,___fladd@grs
 13829   003D32  C046  F042         	movff	___fladd@a+1,___fladd@b+1
 13830   003D36  C050  F046         	movff	___fladd@grs,___fladd@a+1
 13831   003D3A  C043  F050         	movff	___fladd@b+2,___fladd@grs
 13832   003D3E  C047  F043         	movff	___fladd@a+2,___fladd@b+2
 13833   003D42  C050  F047         	movff	___fladd@grs,___fladd@a+2
 13834   003D46  C044  F050         	movff	___fladd@b+3,___fladd@grs
 13835   003D4A  C048  F044         	movff	___fladd@a+3,___fladd@b+3
 13836   003D4E  C050  F048         	movff	___fladd@grs,___fladd@a+3
 13837   003D52                     l6018:
 13838   003D52  6A50               	clrf	___fladd@grs^0,c
 13839   003D54  504F               	movf	___fladd@bexp^0,w,c
 13840   003D56  C04E  F049         	movff	___fladd@aexp,??___fladd
 13841   003D5A  6A4A               	clrf	(??___fladd+1)^0,c
 13842   003D5C  5E49               	subwf	??___fladd^0,f,c
 13843   003D5E  0E00               	movlw	0
 13844   003D60  5A4A               	subwfb	(??___fladd+1)^0,f,c
 13845   003D62  BE4A               	btfsc	(??___fladd+1)^0,7,c
 13846   003D64  EFBD  F01E         	goto	u7341
 13847   003D68  504A               	movf	(??___fladd+1)^0,w,c
 13848   003D6A  E109               	bnz	u7340
 13849   003D6C  0E1A               	movlw	26
 13850   003D6E  5C49               	subwf	??___fladd^0,w,c
 13851   003D70  A0D8               	btfss	status,0,c
 13852   003D72  EFBD  F01E         	goto	u7341
 13853   003D76  EFBF  F01E         	goto	u7340
 13854   003D7A                     u7341:
 13855   003D7A  EFF6  F01E         	goto	l814
 13856   003D7E                     u7340:
 13857   003D7E  5041               	movf	___fladd@b^0,w,c
 13858   003D80  1042               	iorwf	(___fladd@b+1)^0,w,c
 13859   003D82  1043               	iorwf	(___fladd@b+2)^0,w,c
 13860   003D84  1044               	iorwf	(___fladd@b+3)^0,w,c
 13861   003D86  A4D8               	btfss	status,2,c
 13862   003D88  EFC8  F01E         	goto	u7351
 13863   003D8C  EFCB  F01E         	goto	u7350
 13864   003D90                     u7351:
 13865   003D90  0E01               	movlw	1
 13866   003D92  EFCC  F01E         	goto	u7360
 13867   003D96                     u7350:
 13868   003D96  0E00               	movlw	0
 13869   003D98                     u7360:
 13870   003D98  6E50               	movwf	___fladd@grs^0,c
 13871   003D9A  0E00               	movlw	0
 13872   003D9C  6E41               	movwf	___fladd@b^0,c
 13873   003D9E  0E00               	movlw	0
 13874   003DA0  6E42               	movwf	(___fladd@b+1)^0,c
 13875   003DA2  0E00               	movlw	0
 13876   003DA4  6E43               	movwf	(___fladd@b+2)^0,c
 13877   003DA6  0E00               	movlw	0
 13878   003DA8  6E44               	movwf	(___fladd@b+3)^0,c
 13879   003DAA  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
 13880   003DAE  EFFF  F01E         	goto	l813
 13881   003DB2                     l815:
 13882   003DB2  A050               	btfss	___fladd@grs^0,0,c
 13883   003DB4  EFDE  F01E         	goto	u7371
 13884   003DB8  EFE0  F01E         	goto	u7370
 13885   003DBC                     u7371:
 13886   003DBC  EFE6  F01E         	goto	l6028
 13887   003DC0                     u7370:
 13888   003DC0  90D8               	bcf	status,0,c
 13889   003DC2  3050               	rrcf	___fladd@grs^0,w,c
 13890   003DC4  0901               	iorlw	1
 13891   003DC6  6E50               	movwf	___fladd@grs^0,c
 13892   003DC8  EFE8  F01E         	goto	l6030
 13893   003DCC                     l6028:
 13894   003DCC  90D8               	bcf	status,0,c
 13895   003DCE  3250               	rrcf	___fladd@grs^0,f,c
 13896   003DD0                     l6030:
 13897   003DD0  A041               	btfss	___fladd@b^0,0,c
 13898   003DD2  EFED  F01E         	goto	u7381
 13899   003DD6  EFEF  F01E         	goto	u7380
 13900   003DDA                     u7381:
 13901   003DDA  EFF0  F01E         	goto	l6034
 13902   003DDE                     u7380:
 13903   003DDE  8E50               	bsf	___fladd@grs^0,7,c
 13904   003DE0                     l6034:
 13905   003DE0  3444               	rlcf	(___fladd@b+3)^0,w,c
 13906   003DE2  3244               	rrcf	(___fladd@b+3)^0,f,c
 13907   003DE4  3243               	rrcf	(___fladd@b+2)^0,f,c
 13908   003DE6  3242               	rrcf	(___fladd@b+1)^0,f,c
 13909   003DE8  3241               	rrcf	___fladd@b^0,f,c
 13910   003DEA  2A4F               	incf	___fladd@bexp^0,f,c
 13911   003DEC                     l814:
 13912   003DEC  504E               	movf	___fladd@aexp^0,w,c
 13913   003DEE  5C4F               	subwf	___fladd@bexp^0,w,c
 13914   003DF0  A0D8               	btfss	status,0,c
 13915   003DF2  EFFD  F01E         	goto	u7391
 13916   003DF6  EFFF  F01E         	goto	u7390
 13917   003DFA                     u7391:
 13918   003DFA  EFD9  F01E         	goto	l815
 13919   003DFE                     u7390:
 13920   003DFE                     l813:
 13921   003DFE  BC4D               	btfsc	___fladd@signs^0,6,c
 13922   003E00  EF04  F01F         	goto	u7401
 13923   003E04  EF06  F01F         	goto	u7400
 13924   003E08                     u7401:
 13925   003E08  EF46  F01F         	goto	l6062
 13926   003E0C                     u7400:
 13927   003E0C  504F               	movf	___fladd@bexp^0,w,c
 13928   003E0E  A4D8               	btfss	status,2,c
 13929   003E10  EF0C  F01F         	goto	u7411
 13930   003E14  EF0E  F01F         	goto	u7410
 13931   003E18                     u7411:
 13932   003E18  EF18  F01F         	goto	l6044
 13933   003E1C                     u7410:
 13934   003E1C  0E00               	movlw	0
 13935   003E1E  6E41               	movwf	?___fladd^0,c
 13936   003E20  0E00               	movlw	0
 13937   003E22  6E42               	movwf	(?___fladd+1)^0,c
 13938   003E24  0E00               	movlw	0
 13939   003E26  6E43               	movwf	(?___fladd+2)^0,c
 13940   003E28  0E00               	movlw	0
 13941   003E2A  6E44               	movwf	(?___fladd+3)^0,c
 13942   003E2C  EF65  F020         	goto	l822
 13943   003E30                     l6044:
 13944   003E30  5045               	movf	___fladd@a^0,w,c
 13945   003E32  2641               	addwf	___fladd@b^0,f,c
 13946   003E34  5046               	movf	(___fladd@a+1)^0,w,c
 13947   003E36  2242               	addwfc	(___fladd@b+1)^0,f,c
 13948   003E38  5047               	movf	(___fladd@a+2)^0,w,c
 13949   003E3A  2243               	addwfc	(___fladd@b+2)^0,f,c
 13950   003E3C  5048               	movf	(___fladd@a+3)^0,w,c
 13951   003E3E  2244               	addwfc	(___fladd@b+3)^0,f,c
 13952   003E40  A044               	btfss	(___fladd@b+3)^0,0,c
 13953   003E42  EF25  F01F         	goto	u7421
 13954   003E46  EF27  F01F         	goto	u7420
 13955   003E4A                     u7421:
 13956   003E4A  EFD3  F01F         	goto	l827
 13957   003E4E                     u7420:
 13958   003E4E  A050               	btfss	___fladd@grs^0,0,c
 13959   003E50  EF2C  F01F         	goto	u7431
 13960   003E54  EF2E  F01F         	goto	u7430
 13961   003E58                     u7431:
 13962   003E58  EF34  F01F         	goto	l6052
 13963   003E5C                     u7430:
 13964   003E5C  90D8               	bcf	status,0,c
 13965   003E5E  3050               	rrcf	___fladd@grs^0,w,c
 13966   003E60  0901               	iorlw	1
 13967   003E62  6E50               	movwf	___fladd@grs^0,c
 13968   003E64  EF36  F01F         	goto	l6054
 13969   003E68                     l6052:
 13970   003E68  90D8               	bcf	status,0,c
 13971   003E6A  3250               	rrcf	___fladd@grs^0,f,c
 13972   003E6C                     l6054:
 13973   003E6C  A041               	btfss	___fladd@b^0,0,c
 13974   003E6E  EF3B  F01F         	goto	u7441
 13975   003E72  EF3D  F01F         	goto	u7440
 13976   003E76                     u7441:
 13977   003E76  EF3E  F01F         	goto	l6058
 13978   003E7A                     u7440:
 13979   003E7A  8E50               	bsf	___fladd@grs^0,7,c
 13980   003E7C                     l6058:
 13981   003E7C  3444               	rlcf	(___fladd@b+3)^0,w,c
 13982   003E7E  3244               	rrcf	(___fladd@b+3)^0,f,c
 13983   003E80  3243               	rrcf	(___fladd@b+2)^0,f,c
 13984   003E82  3242               	rrcf	(___fladd@b+1)^0,f,c
 13985   003E84  3241               	rrcf	___fladd@b^0,f,c
 13986   003E86  2A4F               	incf	___fladd@bexp^0,f,c
 13987   003E88  EFD3  F01F         	goto	l827
 13988   003E8C                     l6062:
 13989   003E8C  5045               	movf	___fladd@a^0,w,c
 13990   003E8E  5C41               	subwf	___fladd@b^0,w,c
 13991   003E90  5046               	movf	(___fladd@a+1)^0,w,c
 13992   003E92  5842               	subwfb	(___fladd@b+1)^0,w,c
 13993   003E94  5047               	movf	(___fladd@a+2)^0,w,c
 13994   003E96  5843               	subwfb	(___fladd@b+2)^0,w,c
 13995   003E98  5044               	movf	(___fladd@b+3)^0,w,c
 13996   003E9A  0A80               	xorlw	128
 13997   003E9C  6E49               	movwf	??___fladd^0,c
 13998   003E9E  5048               	movf	(___fladd@a+3)^0,w,c
 13999   003EA0  0A80               	xorlw	128
 14000   003EA2  5849               	subwfb	??___fladd^0,w,c
 14001   003EA4  B0D8               	btfsc	status,0,c
 14002   003EA6  EF57  F01F         	goto	u7451
 14003   003EAA  EF59  F01F         	goto	u7450
 14004   003EAE                     u7451:
 14005   003EAE  EF84  F01F         	goto	l6072
 14006   003EB2                     u7450:
 14007   003EB2  5041               	movf	___fladd@b^0,w,c
 14008   003EB4  5C45               	subwf	___fladd@a^0,w,c
 14009   003EB6  6E49               	movwf	??___fladd^0,c
 14010   003EB8  5042               	movf	(___fladd@b+1)^0,w,c
 14011   003EBA  5846               	subwfb	(___fladd@a+1)^0,w,c
 14012   003EBC  6E4A               	movwf	(??___fladd+1)^0,c
 14013   003EBE  5043               	movf	(___fladd@b+2)^0,w,c
 14014   003EC0  5847               	subwfb	(___fladd@a+2)^0,w,c
 14015   003EC2  6E4B               	movwf	(??___fladd+2)^0,c
 14016   003EC4  5044               	movf	(___fladd@b+3)^0,w,c
 14017   003EC6  5848               	subwfb	(___fladd@a+3)^0,w,c
 14018   003EC8  6E4C               	movwf	(??___fladd+3)^0,c
 14019   003ECA  0EFF               	movlw	255
 14020   003ECC  2449               	addwf	??___fladd^0,w,c
 14021   003ECE  6E41               	movwf	___fladd@b^0,c
 14022   003ED0  0EFF               	movlw	255
 14023   003ED2  204A               	addwfc	(??___fladd+1)^0,w,c
 14024   003ED4  6E42               	movwf	(___fladd@b+1)^0,c
 14025   003ED6  0EFF               	movlw	255
 14026   003ED8  204B               	addwfc	(??___fladd+2)^0,w,c
 14027   003EDA  6E43               	movwf	(___fladd@b+2)^0,c
 14028   003EDC  0EFF               	movlw	255
 14029   003EDE  204C               	addwfc	(??___fladd+3)^0,w,c
 14030   003EE0  6E44               	movwf	(___fladd@b+3)^0,c
 14031   003EE2  0E80               	movlw	128
 14032   003EE4  1A4D               	xorwf	___fladd@signs^0,f,c
 14033   003EE6  6C50               	negf	___fladd@grs^0,c
 14034   003EE8  5050               	movf	___fladd@grs^0,w,c
 14035   003EEA  A4D8               	btfss	status,2,c
 14036   003EEC  EF7A  F01F         	goto	u7461
 14037   003EF0  EF7C  F01F         	goto	u7460
 14038   003EF4                     u7461:
 14039   003EF4  EF8C  F01F         	goto	l830
 14040   003EF8                     u7460:
 14041   003EF8  0E01               	movlw	1
 14042   003EFA  2641               	addwf	___fladd@b^0,f,c
 14043   003EFC  0E00               	movlw	0
 14044   003EFE  2242               	addwfc	(___fladd@b+1)^0,f,c
 14045   003F00  2243               	addwfc	(___fladd@b+2)^0,f,c
 14046   003F02  2244               	addwfc	(___fladd@b+3)^0,f,c
 14047   003F04  EF8C  F01F         	goto	l830
 14048   003F08                     l6072:
 14049   003F08  5045               	movf	___fladd@a^0,w,c
 14050   003F0A  5E41               	subwf	___fladd@b^0,f,c
 14051   003F0C  5046               	movf	(___fladd@a+1)^0,w,c
 14052   003F0E  5A42               	subwfb	(___fladd@b+1)^0,f,c
 14053   003F10  5047               	movf	(___fladd@a+2)^0,w,c
 14054   003F12  5A43               	subwfb	(___fladd@b+2)^0,f,c
 14055   003F14  5048               	movf	(___fladd@a+3)^0,w,c
 14056   003F16  5A44               	subwfb	(___fladd@b+3)^0,f,c
 14057   003F18                     l830:
 14058   003F18  5041               	movf	___fladd@b^0,w,c
 14059   003F1A  1042               	iorwf	(___fladd@b+1)^0,w,c
 14060   003F1C  1043               	iorwf	(___fladd@b+2)^0,w,c
 14061   003F1E  1044               	iorwf	(___fladd@b+3)^0,w,c
 14062   003F20  A4D8               	btfss	status,2,c
 14063   003F22  EF95  F01F         	goto	u7471
 14064   003F26  EF97  F01F         	goto	u7470
 14065   003F2A                     u7471:
 14066   003F2A  EFCC  F01F         	goto	l6096
 14067   003F2E                     u7470:
 14068   003F2E  5050               	movf	___fladd@grs^0,w,c
 14069   003F30  A4D8               	btfss	status,2,c
 14070   003F32  EF9D  F01F         	goto	u7481
 14071   003F36  EF9F  F01F         	goto	u7480
 14072   003F3A                     u7481:
 14073   003F3A  EFCC  F01F         	goto	l6096
 14074   003F3E                     u7480:
 14075   003F3E  0E00               	movlw	0
 14076   003F40  6E41               	movwf	?___fladd^0,c
 14077   003F42  0E00               	movlw	0
 14078   003F44  6E42               	movwf	(?___fladd+1)^0,c
 14079   003F46  0E00               	movlw	0
 14080   003F48  6E43               	movwf	(?___fladd+2)^0,c
 14081   003F4A  0E00               	movlw	0
 14082   003F4C  6E44               	movwf	(?___fladd+3)^0,c
 14083   003F4E  EF65  F020         	goto	l822
 14084   003F52                     l6080:
 14085   003F52  90D8               	bcf	status,0,c
 14086   003F54  3641               	rlcf	___fladd@b^0,f,c
 14087   003F56  3642               	rlcf	(___fladd@b+1)^0,f,c
 14088   003F58  3643               	rlcf	(___fladd@b+2)^0,f,c
 14089   003F5A  3644               	rlcf	(___fladd@b+3)^0,f,c
 14090   003F5C  AE50               	btfss	___fladd@grs^0,7,c
 14091   003F5E  EFB3  F01F         	goto	u7491
 14092   003F62  EFB5  F01F         	goto	u7490
 14093   003F66                     u7491:
 14094   003F66  EFB6  F01F         	goto	l6086
 14095   003F6A                     u7490:
 14096   003F6A  8041               	bsf	___fladd@b^0,0,c
 14097   003F6C                     l6086:
 14098   003F6C  A050               	btfss	___fladd@grs^0,0,c
 14099   003F6E  EFBB  F01F         	goto	u7501
 14100   003F72  EFBD  F01F         	goto	u7500
 14101   003F76                     u7501:
 14102   003F76  EFC1  F01F         	goto	l6090
 14103   003F7A                     u7500:
 14104   003F7A  80D8               	bsf	status,0,c
 14105   003F7C  3650               	rlcf	___fladd@grs^0,f,c
 14106   003F7E  EFC3  F01F         	goto	l6092
 14107   003F82                     l6090:
 14108   003F82  90D8               	bcf	status,0,c
 14109   003F84  3650               	rlcf	___fladd@grs^0,f,c
 14110   003F86                     l6092:
 14111   003F86  504F               	movf	___fladd@bexp^0,w,c
 14112   003F88  B4D8               	btfsc	status,2,c
 14113   003F8A  EFC9  F01F         	goto	u7511
 14114   003F8E  EFCB  F01F         	goto	u7510
 14115   003F92                     u7511:
 14116   003F92  EFCC  F01F         	goto	l6096
 14117   003F96                     u7510:
 14118   003F96  064F               	decf	___fladd@bexp^0,f,c
 14119   003F98                     l6096:
 14120   003F98  AE43               	btfss	(___fladd@b+2)^0,7,c
 14121   003F9A  EFD1  F01F         	goto	u7521
 14122   003F9E  EFD3  F01F         	goto	u7520
 14123   003FA2                     u7521:
 14124   003FA2  EFA9  F01F         	goto	l6080
 14125   003FA6                     u7520:
 14126   003FA6                     l827:
 14127   003FA6  6A4E               	clrf	___fladd@aexp^0,c
 14128   003FA8  AE50               	btfss	___fladd@grs^0,7,c
 14129   003FAA  EFD9  F01F         	goto	u7531
 14130   003FAE  EFDB  F01F         	goto	u7530
 14131   003FB2                     u7531:
 14132   003FB2  EFF3  F01F         	goto	l839
 14133   003FB6                     u7530:
 14134   003FB6  C050  F049         	movff	___fladd@grs,??___fladd
 14135   003FBA  0E7F               	movlw	127
 14136   003FBC  1649               	andwf	??___fladd^0,f,c
 14137   003FBE  B4D8               	btfsc	status,2,c
 14138   003FC0  EFE4  F01F         	goto	u7541
 14139   003FC4  EFE6  F01F         	goto	u7540
 14140   003FC8                     u7541:
 14141   003FC8  EFEA  F01F         	goto	l840
 14142   003FCC                     u7540:
 14143   003FCC                     l6100:
 14144   003FCC  0E01               	movlw	1
 14145   003FCE  6E4E               	movwf	___fladd@aexp^0,c
 14146   003FD0  EFF3  F01F         	goto	l839
 14147   003FD4                     l840:
 14148   003FD4  A041               	btfss	___fladd@b^0,0,c
 14149   003FD6  EFEF  F01F         	goto	u7551
 14150   003FDA  EFF1  F01F         	goto	u7550
 14151   003FDE                     u7551:
 14152   003FDE  EFF3  F01F         	goto	l839
 14153   003FE2                     u7550:
 14154   003FE2  EFE6  F01F         	goto	l6100
 14155   003FE6                     l839:
 14156   003FE6  504E               	movf	___fladd@aexp^0,w,c
 14157   003FE8  B4D8               	btfsc	status,2,c
 14158   003FEA  EFF9  F01F         	goto	u7561
 14159   003FEE  EFFB  F01F         	goto	u7560
 14160   003FF2                     u7561:
 14161   003FF2  EF26  F020         	goto	l6112
 14162   003FF6                     u7560:
 14163   003FF6  0E01               	movlw	1
 14164   003FF8  2641               	addwf	___fladd@b^0,f,c
 14165   003FFA  0E00               	movlw	0
 14166   003FFC  2242               	addwfc	(___fladd@b+1)^0,f,c
 14167   003FFE  2243               	addwfc	(___fladd@b+2)^0,f,c
 14168   004000  2244               	addwfc	(___fladd@b+3)^0,f,c
 14169   004002  A044               	btfss	(___fladd@b+3)^0,0,c
 14170   004004  EF06  F020         	goto	u7571
 14171   004008  EF08  F020         	goto	u7570
 14172   00400C                     u7571:
 14173   00400C  EF26  F020         	goto	l6112
 14174   004010                     u7570:
 14175   004010  C041  F049         	movff	___fladd@b,??___fladd
 14176   004014  C042  F04A         	movff	___fladd@b+1,??___fladd+1
 14177   004018  C043  F04B         	movff	___fladd@b+2,??___fladd+2
 14178   00401C  C044  F04C         	movff	___fladd@b+3,??___fladd+3
 14179   004020  344C               	rlcf	(??___fladd+3)^0,w,c
 14180   004022  324C               	rrcf	(??___fladd+3)^0,f,c
 14181   004024  324B               	rrcf	(??___fladd+2)^0,f,c
 14182   004026  324A               	rrcf	(??___fladd+1)^0,f,c
 14183   004028  3249               	rrcf	??___fladd^0,f,c
 14184   00402A  C049  F041         	movff	??___fladd,___fladd@b
 14185   00402E  C04A  F042         	movff	??___fladd+1,___fladd@b+1
 14186   004032  C04B  F043         	movff	??___fladd+2,___fladd@b+2
 14187   004036  C04C  F044         	movff	??___fladd+3,___fladd@b+3
 14188   00403A  284F               	incf	___fladd@bexp^0,w,c
 14189   00403C  B4D8               	btfsc	status,2,c
 14190   00403E  EF23  F020         	goto	u7581
 14191   004042  EF25  F020         	goto	u7580
 14192   004046                     u7581:
 14193   004046  EF26  F020         	goto	l6112
 14194   00404A                     u7580:
 14195   00404A  2A4F               	incf	___fladd@bexp^0,f,c
 14196   00404C                     l6112:
 14197   00404C  284F               	incf	___fladd@bexp^0,w,c
 14198   00404E  B4D8               	btfsc	status,2,c
 14199   004050  EF2C  F020         	goto	u7591
 14200   004054  EF2E  F020         	goto	u7590
 14201   004058                     u7591:
 14202   004058  EF36  F020         	goto	l6116
 14203   00405C                     u7590:
 14204   00405C  504F               	movf	___fladd@bexp^0,w,c
 14205   00405E  A4D8               	btfss	status,2,c
 14206   004060  EF34  F020         	goto	u7601
 14207   004064  EF36  F020         	goto	u7600
 14208   004068                     u7601:
 14209   004068  EF47  F020         	goto	l846
 14210   00406C                     u7600:
 14211   00406C                     l6116:
 14212   00406C  0E00               	movlw	0
 14213   00406E  6E41               	movwf	___fladd@b^0,c
 14214   004070  0E00               	movlw	0
 14215   004072  6E42               	movwf	(___fladd@b+1)^0,c
 14216   004074  0E00               	movlw	0
 14217   004076  6E43               	movwf	(___fladd@b+2)^0,c
 14218   004078  0E00               	movlw	0
 14219   00407A  6E44               	movwf	(___fladd@b+3)^0,c
 14220   00407C  504F               	movf	___fladd@bexp^0,w,c
 14221   00407E  A4D8               	btfss	status,2,c
 14222   004080  EF44  F020         	goto	u7611
 14223   004084  EF46  F020         	goto	u7610
 14224   004088                     u7611:
 14225   004088  EF47  F020         	goto	l846
 14226   00408C                     u7610:
 14227   00408C  6A4D               	clrf	___fladd@signs^0,c
 14228   00408E                     l846:
 14229   00408E  A04F               	btfss	___fladd@bexp^0,0,c
 14230   004090  EF4C  F020         	goto	u7621
 14231   004094  EF4E  F020         	goto	u7620
 14232   004098                     u7621:
 14233   004098  EF51  F020         	goto	l6122
 14234   00409C                     u7620:
 14235   00409C  8E43               	bsf	(___fladd@b+2)^0,7,c
 14236   00409E  EF52  F020         	goto	l6124
 14237   0040A2                     l6122:
 14238   0040A2  9E43               	bcf	(___fladd@b+2)^0,7,c
 14239   0040A4                     l6124:
 14240   0040A4  90D8               	bcf	status,0,c
 14241   0040A6  304F               	rrcf	___fladd@bexp^0,w,c
 14242   0040A8  6E44               	movwf	(___fladd@b+3)^0,c
 14243   0040AA  AE4D               	btfss	___fladd@signs^0,7,c
 14244   0040AC  EF5A  F020         	goto	u7631
 14245   0040B0  EF5C  F020         	goto	u7630
 14246   0040B4                     u7631:
 14247   0040B4  EF5D  F020         	goto	l6130
 14248   0040B8                     u7630:
 14249   0040B8  8E44               	bsf	(___fladd@b+3)^0,7,c
 14250   0040BA                     l6130:
 14251   0040BA  C041  F041         	movff	___fladd@b,?___fladd
 14252   0040BE  C042  F042         	movff	___fladd@b+1,?___fladd+1
 14253   0040C2  C043  F043         	movff	___fladd@b+2,?___fladd+2
 14254   0040C6  C044  F044         	movff	___fladd@b+3,?___fladd+3
 14255   0040CA                     l822:
 14256   0040CA  0012               	return		;funcret
 14257   0040CC                     __end_of___fladd:
 14258                           	callstack 0
 14259                           
 14260 ;; *************** function ___flneg *****************
 14261 ;; Defined at:
 14262 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 14263 ;; Parameters:    Size  Location     Type
 14264 ;;  f1              4    0[COMRAM] unsigned char 
 14265 ;; Auto vars:     Size  Location     Type
 14266 ;;		None
 14267 ;; Return value:  Size  Location     Type
 14268 ;;                  4    0[COMRAM] unsigned char 
 14269 ;; Registers used:
 14270 ;;		wreg, status,2, status,0
 14271 ;; Tracked objects:
 14272 ;;		On entry : 0/0
 14273 ;;		On exit  : 0/0
 14274 ;;		Unchanged: 0/0
 14275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14276 ;;      Params:         4       0       0       0       0       0       0       0       0
 14277 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14278 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14279 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14280 ;;Total ram usage:        4 bytes
 14281 ;; Hardware stack levels used: 1
 14282 ;; Hardware stack levels required when called: 1
 14283 ;; This function calls:
 14284 ;;		Nothing
 14285 ;; This function is called by:
 14286 ;;		_efgtoa
 14287 ;;		_powf
 14288 ;; This function uses a non-reentrant model
 14289 ;;
 14290                           
 14291                           	psect	text34
 14292   006E8A                     __ptext34:
 14293                           	callstack 0
 14294   006E8A                     ___flneg:
 14295                           	callstack 24
 14296   006E8A  5001               	movf	___flneg@f1^0,w,c
 14297   006E8C  1002               	iorwf	(___flneg@f1+1)^0,w,c
 14298   006E8E  1003               	iorwf	(___flneg@f1+2)^0,w,c
 14299   006E90  1004               	iorwf	(___flneg@f1+3)^0,w,c
 14300   006E92  B4D8               	btfsc	status,2,c
 14301   006E94  EF4E  F037         	goto	u8311
 14302   006E98  EF50  F037         	goto	u8310
 14303   006E9C                     u8311:
 14304   006E9C  EF58  F037         	goto	l6560
 14305   006EA0                     u8310:
 14306   006EA0  0E00               	movlw	0
 14307   006EA2  1A01               	xorwf	___flneg@f1^0,f,c
 14308   006EA4  0E00               	movlw	0
 14309   006EA6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 14310   006EA8  0E00               	movlw	0
 14311   006EAA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 14312   006EAC  0E80               	movlw	128
 14313   006EAE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 14314   006EB0                     l6560:
 14315   006EB0  C001  F001         	movff	___flneg@f1,?___flneg
 14316   006EB4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 14317   006EB8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 14318   006EBC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 14319   006EC0  0012               	return		;funcret
 14320   006EC2                     __end_of___flneg:
 14321                           	callstack 0
 14322                           
 14323 ;; *************** function ___flmul *****************
 14324 ;; Defined at:
 14325 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 14326 ;; Parameters:    Size  Location     Type
 14327 ;;  b               4   14[COMRAM] unsigned char 
 14328 ;;  a               4   18[COMRAM] unsigned char 
 14329 ;; Auto vars:     Size  Location     Type
 14330 ;;  prod            4   33[COMRAM] struct .
 14331 ;;  grs             4   28[COMRAM] unsigned long 
 14332 ;;  temp            2   37[COMRAM] struct .
 14333 ;;  bexp            1   32[COMRAM] unsigned char 
 14334 ;;  aexp            1   27[COMRAM] unsigned char 
 14335 ;;  sign            1   26[COMRAM] unsigned char 
 14336 ;; Return value:  Size  Location     Type
 14337 ;;                  4   14[COMRAM] unsigned char 
 14338 ;; Registers used:
 14339 ;;		wreg, status,2, status,0, prodl, prodh
 14340 ;; Tracked objects:
 14341 ;;		On entry : 0/0
 14342 ;;		On exit  : 0/0
 14343 ;;		Unchanged: 0/0
 14344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14345 ;;      Params:         8       0       0       0       0       0       0       0       0
 14346 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14347 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14348 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14349 ;;Total ram usage:       25 bytes
 14350 ;; Hardware stack levels used: 1
 14351 ;; Hardware stack levels required when called: 1
 14352 ;; This function calls:
 14353 ;;		Nothing
 14354 ;; This function is called by:
 14355 ;;		_main
 14356 ;;		_Read_Sensors
 14357 ;;		_efgtoa
 14358 ;;		_powf
 14359 ;;		_scalbnf
 14360 ;; This function uses a non-reentrant model
 14361 ;;
 14362                           
 14363                           	psect	text35
 14364   0040CC                     __ptext35:
 14365                           	callstack 0
 14366   0040CC                     ___flmul:
 14367                           	callstack 29
 14368   0040CC  5012               	movf	(___flmul@b+3)^0,w,c
 14369   0040CE  0B80               	andlw	128
 14370   0040D0  6E1B               	movwf	___flmul@sign^0,c
 14371   0040D2  5012               	movf	(___flmul@b+3)^0,w,c
 14372   0040D4  2412               	addwf	(___flmul@b+3)^0,w,c
 14373   0040D6  6E21               	movwf	___flmul@bexp^0,c
 14374   0040D8  AE11               	btfss	(___flmul@b+2)^0,7,c
 14375   0040DA  EF71  F020         	goto	u8041
 14376   0040DE  EF73  F020         	goto	u8040
 14377   0040E2                     u8041:
 14378   0040E2  EF74  F020         	goto	l6390
 14379   0040E6                     u8040:
 14380   0040E6  8021               	bsf	___flmul@bexp^0,0,c
 14381   0040E8                     l6390:
 14382   0040E8  5021               	movf	___flmul@bexp^0,w,c
 14383   0040EA  B4D8               	btfsc	status,2,c
 14384   0040EC  EF7A  F020         	goto	u8051
 14385   0040F0  EF7C  F020         	goto	u8050
 14386   0040F4                     u8051:
 14387   0040F4  EF8F  F020         	goto	l6398
 14388   0040F8                     u8050:
 14389   0040F8  2821               	incf	___flmul@bexp^0,w,c
 14390   0040FA  A4D8               	btfss	status,2,c
 14391   0040FC  EF82  F020         	goto	u8061
 14392   004100  EF84  F020         	goto	u8060
 14393   004104                     u8061:
 14394   004104  EF8C  F020         	goto	l6396
 14395   004108                     u8060:
 14396   004108  0E00               	movlw	0
 14397   00410A  6E0F               	movwf	___flmul@b^0,c
 14398   00410C  0E00               	movlw	0
 14399   00410E  6E10               	movwf	(___flmul@b+1)^0,c
 14400   004110  0E00               	movlw	0
 14401   004112  6E11               	movwf	(___flmul@b+2)^0,c
 14402   004114  0E00               	movlw	0
 14403   004116  6E12               	movwf	(___flmul@b+3)^0,c
 14404   004118                     l6396:
 14405   004118  8E11               	bsf	(___flmul@b+2)^0,7,c
 14406   00411A  EF97  F020         	goto	l6400
 14407   00411E                     l6398:
 14408   00411E  0E00               	movlw	0
 14409   004120  6E0F               	movwf	___flmul@b^0,c
 14410   004122  0E00               	movlw	0
 14411   004124  6E10               	movwf	(___flmul@b+1)^0,c
 14412   004126  0E00               	movlw	0
 14413   004128  6E11               	movwf	(___flmul@b+2)^0,c
 14414   00412A  0E00               	movlw	0
 14415   00412C  6E12               	movwf	(___flmul@b+3)^0,c
 14416   00412E                     l6400:
 14417   00412E  5016               	movf	(___flmul@a+3)^0,w,c
 14418   004130  0B80               	andlw	128
 14419   004132  1A1B               	xorwf	___flmul@sign^0,f,c
 14420   004134  5016               	movf	(___flmul@a+3)^0,w,c
 14421   004136  2416               	addwf	(___flmul@a+3)^0,w,c
 14422   004138  6E1C               	movwf	___flmul@aexp^0,c
 14423   00413A  AE15               	btfss	(___flmul@a+2)^0,7,c
 14424   00413C  EFA2  F020         	goto	u8071
 14425   004140  EFA4  F020         	goto	u8070
 14426   004144                     u8071:
 14427   004144  EFA5  F020         	goto	l6408
 14428   004148                     u8070:
 14429   004148  801C               	bsf	___flmul@aexp^0,0,c
 14430   00414A                     l6408:
 14431   00414A  501C               	movf	___flmul@aexp^0,w,c
 14432   00414C  B4D8               	btfsc	status,2,c
 14433   00414E  EFAB  F020         	goto	u8081
 14434   004152  EFAD  F020         	goto	u8080
 14435   004156                     u8081:
 14436   004156  EFC0  F020         	goto	l6416
 14437   00415A                     u8080:
 14438   00415A  281C               	incf	___flmul@aexp^0,w,c
 14439   00415C  A4D8               	btfss	status,2,c
 14440   00415E  EFB3  F020         	goto	u8091
 14441   004162  EFB5  F020         	goto	u8090
 14442   004166                     u8091:
 14443   004166  EFBD  F020         	goto	l6414
 14444   00416A                     u8090:
 14445   00416A  0E00               	movlw	0
 14446   00416C  6E13               	movwf	___flmul@a^0,c
 14447   00416E  0E00               	movlw	0
 14448   004170  6E14               	movwf	(___flmul@a+1)^0,c
 14449   004172  0E00               	movlw	0
 14450   004174  6E15               	movwf	(___flmul@a+2)^0,c
 14451   004176  0E00               	movlw	0
 14452   004178  6E16               	movwf	(___flmul@a+3)^0,c
 14453   00417A                     l6414:
 14454   00417A  8E15               	bsf	(___flmul@a+2)^0,7,c
 14455   00417C  EFC8  F020         	goto	l899
 14456   004180                     l6416:
 14457   004180  0E00               	movlw	0
 14458   004182  6E13               	movwf	___flmul@a^0,c
 14459   004184  0E00               	movlw	0
 14460   004186  6E14               	movwf	(___flmul@a+1)^0,c
 14461   004188  0E00               	movlw	0
 14462   00418A  6E15               	movwf	(___flmul@a+2)^0,c
 14463   00418C  0E00               	movlw	0
 14464   00418E  6E16               	movwf	(___flmul@a+3)^0,c
 14465   004190                     l899:
 14466   004190  501C               	movf	___flmul@aexp^0,w,c
 14467   004192  B4D8               	btfsc	status,2,c
 14468   004194  EFCE  F020         	goto	u8101
 14469   004198  EFD0  F020         	goto	u8100
 14470   00419C                     u8101:
 14471   00419C  EFD8  F020         	goto	l6420
 14472   0041A0                     u8100:
 14473   0041A0  5021               	movf	___flmul@bexp^0,w,c
 14474   0041A2  A4D8               	btfss	status,2,c
 14475   0041A4  EFD6  F020         	goto	u8111
 14476   0041A8  EFD8  F020         	goto	u8110
 14477   0041AC                     u8111:
 14478   0041AC  EFE2  F020         	goto	l6424
 14479   0041B0                     u8110:
 14480   0041B0                     l6420:
 14481   0041B0  0E00               	movlw	0
 14482   0041B2  6E0F               	movwf	?___flmul^0,c
 14483   0041B4  0E00               	movlw	0
 14484   0041B6  6E10               	movwf	(?___flmul+1)^0,c
 14485   0041B8  0E00               	movlw	0
 14486   0041BA  6E11               	movwf	(?___flmul+2)^0,c
 14487   0041BC  0E00               	movlw	0
 14488   0041BE  6E12               	movwf	(?___flmul+3)^0,c
 14489   0041C0  EF78  F022         	goto	l903
 14490   0041C4                     l6424:
 14491   0041C4  5015               	movf	(___flmul@a+2)^0,w,c
 14492   0041C6  020F               	mulwf	___flmul@b^0,c
 14493   0041C8  CFF3 F026          	movff	prodl,___flmul@temp
 14494   0041CC  CFF4 F027          	movff	prodh,___flmul@temp+1
 14495   0041D0  5026               	movf	___flmul@temp^0,w,c
 14496   0041D2  6E1D               	movwf	___flmul@grs^0,c
 14497   0041D4  6A1E               	clrf	(___flmul@grs+1)^0,c
 14498   0041D6  6A1F               	clrf	(___flmul@grs+2)^0,c
 14499   0041D8  6A20               	clrf	(___flmul@grs+3)^0,c
 14500   0041DA  5027               	movf	(___flmul@temp+1)^0,w,c
 14501   0041DC  6E22               	movwf	___flmul@prod^0,c
 14502   0041DE  6A23               	clrf	(___flmul@prod+1)^0,c
 14503   0041E0  6A24               	clrf	(___flmul@prod+2)^0,c
 14504   0041E2  6A25               	clrf	(___flmul@prod+3)^0,c
 14505   0041E4  5014               	movf	(___flmul@a+1)^0,w,c
 14506   0041E6  0210               	mulwf	(___flmul@b+1)^0,c
 14507   0041E8  CFF3 F026          	movff	prodl,___flmul@temp
 14508   0041EC  CFF4 F027          	movff	prodh,___flmul@temp+1
 14509   0041F0  5026               	movf	___flmul@temp^0,w,c
 14510   0041F2  261D               	addwf	___flmul@grs^0,f,c
 14511   0041F4  0E00               	movlw	0
 14512   0041F6  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14513   0041F8  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14514   0041FA  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14515   0041FC  5027               	movf	(___flmul@temp+1)^0,w,c
 14516   0041FE  2622               	addwf	___flmul@prod^0,f,c
 14517   004200  0E00               	movlw	0
 14518   004202  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14519   004204  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14520   004206  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14521   004208  5013               	movf	___flmul@a^0,w,c
 14522   00420A  0211               	mulwf	(___flmul@b+2)^0,c
 14523   00420C  CFF3 F026          	movff	prodl,___flmul@temp
 14524   004210  CFF4 F027          	movff	prodh,___flmul@temp+1
 14525   004214  5026               	movf	___flmul@temp^0,w,c
 14526   004216  261D               	addwf	___flmul@grs^0,f,c
 14527   004218  0E00               	movlw	0
 14528   00421A  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14529   00421C  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14530   00421E  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14531   004220  5027               	movf	(___flmul@temp+1)^0,w,c
 14532   004222  2622               	addwf	___flmul@prod^0,f,c
 14533   004224  0E00               	movlw	0
 14534   004226  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14535   004228  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14536   00422A  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14537   00422C  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14538   004230  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14539   004234  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14540   004238  6A1D               	clrf	___flmul@grs^0,c
 14541   00423A  5013               	movf	___flmul@a^0,w,c
 14542   00423C  0210               	mulwf	(___flmul@b+1)^0,c
 14543   00423E  CFF3 F026          	movff	prodl,___flmul@temp
 14544   004242  CFF4 F027          	movff	prodh,___flmul@temp+1
 14545   004246  5026               	movf	___flmul@temp^0,w,c
 14546   004248  261D               	addwf	___flmul@grs^0,f,c
 14547   00424A  5027               	movf	(___flmul@temp+1)^0,w,c
 14548   00424C  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14549   00424E  0E00               	movlw	0
 14550   004250  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14551   004252  0E00               	movlw	0
 14552   004254  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14553   004256  5014               	movf	(___flmul@a+1)^0,w,c
 14554   004258  020F               	mulwf	___flmul@b^0,c
 14555   00425A  CFF3 F026          	movff	prodl,___flmul@temp
 14556   00425E  CFF4 F027          	movff	prodh,___flmul@temp+1
 14557   004262  5026               	movf	___flmul@temp^0,w,c
 14558   004264  261D               	addwf	___flmul@grs^0,f,c
 14559   004266  5027               	movf	(___flmul@temp+1)^0,w,c
 14560   004268  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14561   00426A  0E00               	movlw	0
 14562   00426C  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14563   00426E  0E00               	movlw	0
 14564   004270  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14565   004272  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14566   004276  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14567   00427A  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14568   00427E  6A1D               	clrf	___flmul@grs^0,c
 14569   004280  5013               	movf	___flmul@a^0,w,c
 14570   004282  020F               	mulwf	___flmul@b^0,c
 14571   004284  CFF3 F026          	movff	prodl,___flmul@temp
 14572   004288  CFF4 F027          	movff	prodh,___flmul@temp+1
 14573   00428C  5026               	movf	___flmul@temp^0,w,c
 14574   00428E  261D               	addwf	___flmul@grs^0,f,c
 14575   004290  5027               	movf	(___flmul@temp+1)^0,w,c
 14576   004292  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14577   004294  0E00               	movlw	0
 14578   004296  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14579   004298  0E00               	movlw	0
 14580   00429A  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14581   00429C  5015               	movf	(___flmul@a+2)^0,w,c
 14582   00429E  0210               	mulwf	(___flmul@b+1)^0,c
 14583   0042A0  CFF3 F026          	movff	prodl,___flmul@temp
 14584   0042A4  CFF4 F027          	movff	prodh,___flmul@temp+1
 14585   0042A8  5026               	movf	___flmul@temp^0,w,c
 14586   0042AA  2622               	addwf	___flmul@prod^0,f,c
 14587   0042AC  5027               	movf	(___flmul@temp+1)^0,w,c
 14588   0042AE  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14589   0042B0  0E00               	movlw	0
 14590   0042B2  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14591   0042B4  0E00               	movlw	0
 14592   0042B6  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14593   0042B8  5014               	movf	(___flmul@a+1)^0,w,c
 14594   0042BA  0211               	mulwf	(___flmul@b+2)^0,c
 14595   0042BC  CFF3 F026          	movff	prodl,___flmul@temp
 14596   0042C0  CFF4 F027          	movff	prodh,___flmul@temp+1
 14597   0042C4  5026               	movf	___flmul@temp^0,w,c
 14598   0042C6  2622               	addwf	___flmul@prod^0,f,c
 14599   0042C8  5027               	movf	(___flmul@temp+1)^0,w,c
 14600   0042CA  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14601   0042CC  0E00               	movlw	0
 14602   0042CE  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14603   0042D0  0E00               	movlw	0
 14604   0042D2  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14605   0042D4  5015               	movf	(___flmul@a+2)^0,w,c
 14606   0042D6  0211               	mulwf	(___flmul@b+2)^0,c
 14607   0042D8  CFF3 F026          	movff	prodl,___flmul@temp
 14608   0042DC  CFF4 F027          	movff	prodh,___flmul@temp+1
 14609   0042E0  5026               	movf	___flmul@temp^0,w,c
 14610   0042E2  6E17               	movwf	??___flmul^0,c
 14611   0042E4  5027               	movf	(___flmul@temp+1)^0,w,c
 14612   0042E6  6E18               	movwf	(??___flmul+1)^0,c
 14613   0042E8  6A19               	clrf	(??___flmul+2)^0,c
 14614   0042EA  6A1A               	clrf	(??___flmul+3)^0,c
 14615   0042EC  C019  F01A         	movff	??___flmul+2,??___flmul+3
 14616   0042F0  C018  F019         	movff	??___flmul+1,??___flmul+2
 14617   0042F4  C017  F018         	movff	??___flmul,??___flmul+1
 14618   0042F8  6A17               	clrf	??___flmul^0,c
 14619   0042FA  5017               	movf	??___flmul^0,w,c
 14620   0042FC  2622               	addwf	___flmul@prod^0,f,c
 14621   0042FE  5018               	movf	(??___flmul+1)^0,w,c
 14622   004300  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14623   004302  5019               	movf	(??___flmul+2)^0,w,c
 14624   004304  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14625   004306  501A               	movf	(??___flmul+3)^0,w,c
 14626   004308  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14627   00430A  C01D  F017         	movff	___flmul@grs,??___flmul
 14628   00430E  C01E  F018         	movff	___flmul@grs+1,??___flmul+1
 14629   004312  C01F  F019         	movff	___flmul@grs+2,??___flmul+2
 14630   004316  C020  F01A         	movff	___flmul@grs+3,??___flmul+3
 14631   00431A  0E19               	movlw	25
 14632   00431C  EF95  F021         	goto	u8120
 14633   004320                     u8125:
 14634   004320  90D8               	bcf	status,0,c
 14635   004322  321A               	rrcf	(??___flmul+3)^0,f,c
 14636   004324  3219               	rrcf	(??___flmul+2)^0,f,c
 14637   004326  3218               	rrcf	(??___flmul+1)^0,f,c
 14638   004328  3217               	rrcf	??___flmul^0,f,c
 14639   00432A                     u8120:
 14640   00432A  2EE8               	decfsz	wreg,f,c
 14641   00432C  EF90  F021         	goto	u8125
 14642   004330  5017               	movf	??___flmul^0,w,c
 14643   004332  2622               	addwf	___flmul@prod^0,f,c
 14644   004334  5018               	movf	(??___flmul+1)^0,w,c
 14645   004336  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14646   004338  5019               	movf	(??___flmul+2)^0,w,c
 14647   00433A  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14648   00433C  501A               	movf	(??___flmul+3)^0,w,c
 14649   00433E  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14650   004340  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14651   004344  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14652   004348  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14653   00434C  6A1D               	clrf	___flmul@grs^0,c
 14654   00434E  501C               	movf	___flmul@aexp^0,w,c
 14655   004350  C021  F017         	movff	___flmul@bexp,??___flmul
 14656   004354  6A18               	clrf	(??___flmul+1)^0,c
 14657   004356  2617               	addwf	??___flmul^0,f,c
 14658   004358  0E00               	movlw	0
 14659   00435A  2218               	addwfc	(??___flmul+1)^0,f,c
 14660   00435C  0E82               	movlw	130
 14661   00435E  2417               	addwf	??___flmul^0,w,c
 14662   004360  6E26               	movwf	___flmul@temp^0,c
 14663   004362  0EFF               	movlw	255
 14664   004364  2018               	addwfc	(??___flmul+1)^0,w,c
 14665   004366  6E27               	movwf	(___flmul@temp+1)^0,c
 14666   004368  EFCB  F021         	goto	l6472
 14667   00436C                     l6466:
 14668   00436C  90D8               	bcf	status,0,c
 14669   00436E  3622               	rlcf	___flmul@prod^0,f,c
 14670   004370  3623               	rlcf	(___flmul@prod+1)^0,f,c
 14671   004372  3624               	rlcf	(___flmul@prod+2)^0,f,c
 14672   004374  3625               	rlcf	(___flmul@prod+3)^0,f,c
 14673   004376  AE20               	btfss	(___flmul@grs+3)^0,7,c
 14674   004378  EFC0  F021         	goto	u8131
 14675   00437C  EFC2  F021         	goto	u8130
 14676   004380                     u8131:
 14677   004380  EFC3  F021         	goto	l906
 14678   004384                     u8130:
 14679   004384  8022               	bsf	___flmul@prod^0,0,c
 14680   004386                     l906:
 14681   004386  90D8               	bcf	status,0,c
 14682   004388  361D               	rlcf	___flmul@grs^0,f,c
 14683   00438A  361E               	rlcf	(___flmul@grs+1)^0,f,c
 14684   00438C  361F               	rlcf	(___flmul@grs+2)^0,f,c
 14685   00438E  3620               	rlcf	(___flmul@grs+3)^0,f,c
 14686   004390  0626               	decf	___flmul@temp^0,f,c
 14687   004392  A0D8               	btfss	status,0,c
 14688   004394  0627               	decf	(___flmul@temp+1)^0,f,c
 14689   004396                     l6472:
 14690   004396  AE24               	btfss	(___flmul@prod+2)^0,7,c
 14691   004398  EFD0  F021         	goto	u8141
 14692   00439C  EFD2  F021         	goto	u8140
 14693   0043A0                     u8141:
 14694   0043A0  EFB6  F021         	goto	l6466
 14695   0043A4                     u8140:
 14696   0043A4  6A1C               	clrf	___flmul@aexp^0,c
 14697   0043A6  AE20               	btfss	(___flmul@grs+3)^0,7,c
 14698   0043A8  EFD8  F021         	goto	u8151
 14699   0043AC  EFDA  F021         	goto	u8150
 14700   0043B0                     u8151:
 14701   0043B0  EFFE  F021         	goto	l908
 14702   0043B4                     u8150:
 14703   0043B4  0EFF               	movlw	255
 14704   0043B6  141D               	andwf	___flmul@grs^0,w,c
 14705   0043B8  6E17               	movwf	??___flmul^0,c
 14706   0043BA  0EFF               	movlw	255
 14707   0043BC  141E               	andwf	(___flmul@grs+1)^0,w,c
 14708   0043BE  6E18               	movwf	(??___flmul+1)^0,c
 14709   0043C0  0EFF               	movlw	255
 14710   0043C2  141F               	andwf	(___flmul@grs+2)^0,w,c
 14711   0043C4  6E19               	movwf	(??___flmul+2)^0,c
 14712   0043C6  0E7F               	movlw	127
 14713   0043C8  1420               	andwf	(___flmul@grs+3)^0,w,c
 14714   0043CA  6E1A               	movwf	(??___flmul+3)^0,c
 14715   0043CC  5017               	movf	??___flmul^0,w,c
 14716   0043CE  1018               	iorwf	(??___flmul+1)^0,w,c
 14717   0043D0  1019               	iorwf	(??___flmul+2)^0,w,c
 14718   0043D2  101A               	iorwf	(??___flmul+3)^0,w,c
 14719   0043D4  B4D8               	btfsc	status,2,c
 14720   0043D6  EFEF  F021         	goto	u8161
 14721   0043DA  EFF1  F021         	goto	u8160
 14722   0043DE                     u8161:
 14723   0043DE  EFF5  F021         	goto	l909
 14724   0043E2                     u8160:
 14725   0043E2                     l6476:
 14726   0043E2  0E01               	movlw	1
 14727   0043E4  6E1C               	movwf	___flmul@aexp^0,c
 14728   0043E6  EFFE  F021         	goto	l908
 14729   0043EA                     l909:
 14730   0043EA  A022               	btfss	___flmul@prod^0,0,c
 14731   0043EC  EFFA  F021         	goto	u8171
 14732   0043F0  EFFC  F021         	goto	u8170
 14733   0043F4                     u8171:
 14734   0043F4  EFFE  F021         	goto	l908
 14735   0043F8                     u8170:
 14736   0043F8  EFF1  F021         	goto	l6476
 14737   0043FC                     l908:
 14738   0043FC  501C               	movf	___flmul@aexp^0,w,c
 14739   0043FE  B4D8               	btfsc	status,2,c
 14740   004400  EF04  F022         	goto	u8181
 14741   004404  EF06  F022         	goto	u8180
 14742   004408                     u8181:
 14743   004408  EF2A  F022         	goto	l6488
 14744   00440C                     u8180:
 14745   00440C  0E01               	movlw	1
 14746   00440E  2622               	addwf	___flmul@prod^0,f,c
 14747   004410  0E00               	movlw	0
 14748   004412  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14749   004414  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14750   004416  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14751   004418  A025               	btfss	(___flmul@prod+3)^0,0,c
 14752   00441A  EF11  F022         	goto	u8191
 14753   00441E  EF13  F022         	goto	u8190
 14754   004422                     u8191:
 14755   004422  EF2A  F022         	goto	l6488
 14756   004426                     u8190:
 14757   004426  C022  F017         	movff	___flmul@prod,??___flmul
 14758   00442A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 14759   00442E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 14760   004432  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 14761   004436  341A               	rlcf	(??___flmul+3)^0,w,c
 14762   004438  321A               	rrcf	(??___flmul+3)^0,f,c
 14763   00443A  3219               	rrcf	(??___flmul+2)^0,f,c
 14764   00443C  3218               	rrcf	(??___flmul+1)^0,f,c
 14765   00443E  3217               	rrcf	??___flmul^0,f,c
 14766   004440  C017  F022         	movff	??___flmul,___flmul@prod
 14767   004444  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 14768   004448  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 14769   00444C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 14770   004450  4A26               	infsnz	___flmul@temp^0,f,c
 14771   004452  2A27               	incf	(___flmul@temp+1)^0,f,c
 14772   004454                     l6488:
 14773   004454  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 14774   004456  EF35  F022         	goto	u8201
 14775   00445A  5027               	movf	(___flmul@temp+1)^0,w,c
 14776   00445C  E108               	bnz	u8200
 14777   00445E  2826               	incf	___flmul@temp^0,w,c
 14778   004460  A0D8               	btfss	status,0,c
 14779   004462  EF35  F022         	goto	u8201
 14780   004466  EF37  F022         	goto	u8200
 14781   00446A                     u8201:
 14782   00446A  EF41  F022         	goto	l6492
 14783   00446E                     u8200:
 14784   00446E  0E00               	movlw	0
 14785   004470  6E22               	movwf	___flmul@prod^0,c
 14786   004472  0E00               	movlw	0
 14787   004474  6E23               	movwf	(___flmul@prod+1)^0,c
 14788   004476  0E80               	movlw	128
 14789   004478  6E24               	movwf	(___flmul@prod+2)^0,c
 14790   00447A  0E7F               	movlw	127
 14791   00447C  6E25               	movwf	(___flmul@prod+3)^0,c
 14792   00447E  EF6E  F022         	goto	l6506
 14793   004482                     l6492:
 14794   004482  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 14795   004484  EF4E  F022         	goto	u8210
 14796   004488  5027               	movf	(___flmul@temp+1)^0,w,c
 14797   00448A  E106               	bnz	u8211
 14798   00448C  0426               	decf	___flmul@temp^0,w,c
 14799   00448E  B0D8               	btfsc	status,0,c
 14800   004490  EF4C  F022         	goto	u8211
 14801   004494  EF4E  F022         	goto	u8210
 14802   004498                     u8211:
 14803   004498  EF59  F022         	goto	l916
 14804   00449C                     u8210:
 14805   00449C  0E00               	movlw	0
 14806   00449E  6E22               	movwf	___flmul@prod^0,c
 14807   0044A0  0E00               	movlw	0
 14808   0044A2  6E23               	movwf	(___flmul@prod+1)^0,c
 14809   0044A4  0E00               	movlw	0
 14810   0044A6  6E24               	movwf	(___flmul@prod+2)^0,c
 14811   0044A8  0E00               	movlw	0
 14812   0044AA  6E25               	movwf	(___flmul@prod+3)^0,c
 14813   0044AC  6A1B               	clrf	___flmul@sign^0,c
 14814   0044AE  EF6E  F022         	goto	l6506
 14815   0044B2                     l916:
 14816   0044B2  C026  F021         	movff	___flmul@temp,___flmul@bexp
 14817   0044B6  0EFF               	movlw	255
 14818   0044B8  1622               	andwf	___flmul@prod^0,f,c
 14819   0044BA  0EFF               	movlw	255
 14820   0044BC  1623               	andwf	(___flmul@prod+1)^0,f,c
 14821   0044BE  0E7F               	movlw	127
 14822   0044C0  1624               	andwf	(___flmul@prod+2)^0,f,c
 14823   0044C2  0E00               	movlw	0
 14824   0044C4  1625               	andwf	(___flmul@prod+3)^0,f,c
 14825   0044C6  A021               	btfss	___flmul@bexp^0,0,c
 14826   0044C8  EF68  F022         	goto	u8221
 14827   0044CC  EF6A  F022         	goto	u8220
 14828   0044D0                     u8221:
 14829   0044D0  EF6B  F022         	goto	l6504
 14830   0044D4                     u8220:
 14831   0044D4  8E24               	bsf	(___flmul@prod+2)^0,7,c
 14832   0044D6                     l6504:
 14833   0044D6  90D8               	bcf	status,0,c
 14834   0044D8  3021               	rrcf	___flmul@bexp^0,w,c
 14835   0044DA  6E25               	movwf	(___flmul@prod+3)^0,c
 14836   0044DC                     l6506:
 14837   0044DC  501B               	movf	___flmul@sign^0,w,c
 14838   0044DE  1225               	iorwf	(___flmul@prod+3)^0,f,c
 14839   0044E0  C022  F00F         	movff	___flmul@prod,?___flmul
 14840   0044E4  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 14841   0044E8  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 14842   0044EC  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 14843   0044F0                     l903:
 14844   0044F0  0012               	return		;funcret
 14845   0044F2                     __end_of___flmul:
 14846                           	callstack 0
 14847                           
 14848 ;; *************** function ___flge *****************
 14849 ;; Defined at:
 14850 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 14851 ;; Parameters:    Size  Location     Type
 14852 ;;  ff1             4    0[BANK0 ] unsigned char 
 14853 ;;  ff2             4    4[BANK0 ] unsigned char 
 14854 ;; Auto vars:     Size  Location     Type
 14855 ;;		None
 14856 ;; Return value:  Size  Location     Type
 14857 ;;		None               void
 14858 ;; Registers used:
 14859 ;;		wreg, status,2, status,0
 14860 ;; Tracked objects:
 14861 ;;		On entry : 0/0
 14862 ;;		On exit  : 0/0
 14863 ;;		Unchanged: 0/0
 14864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14865 ;;      Params:         0       8       0       0       0       0       0       0       0
 14866 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14867 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14868 ;;      Totals:         4       8       0       0       0       0       0       0       0
 14869 ;;Total ram usage:       12 bytes
 14870 ;; Hardware stack levels used: 1
 14871 ;; Hardware stack levels required when called: 1
 14872 ;; This function calls:
 14873 ;;		Nothing
 14874 ;; This function is called by:
 14875 ;;		_Handle_Fire_Events
 14876 ;;		_Read_Sensors
 14877 ;;		_Update_Actuators
 14878 ;;		_efgtoa
 14879 ;;		_powf
 14880 ;; This function uses a non-reentrant model
 14881 ;;
 14882                           
 14883                           	psect	text36
 14884   005FFC                     __ptext36:
 14885                           	callstack 0
 14886   005FFC                     ___flge:
 14887                           	callstack 28
 14888   005FFC  0E00               	movlw	0
 14889   005FFE  0100               	movlb	0	; () banked
 14890   006000  1560               	andwf	___flge@ff1& (0+255),w,b
 14891   006002  6E59               	movwf	??___flge^0,c
 14892   006004  0E00               	movlw	0
 14893   006006  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
 14894   006008  6E5A               	movwf	(??___flge+1)^0,c
 14895   00600A  0E80               	movlw	128
 14896   00600C  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
 14897   00600E  6E5B               	movwf	(??___flge+2)^0,c
 14898   006010  0E7F               	movlw	127
 14899   006012  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
 14900   006014  6E5C               	movwf	(??___flge+3)^0,c
 14901   006016  5059               	movf	??___flge^0,w,c
 14902   006018  105A               	iorwf	(??___flge+1)^0,w,c
 14903   00601A  105B               	iorwf	(??___flge+2)^0,w,c
 14904   00601C  105C               	iorwf	(??___flge+3)^0,w,c
 14905   00601E  A4D8               	btfss	status,2,c
 14906   006020  EF14  F030         	goto	u8261
 14907   006024  EF16  F030         	goto	u8260
 14908   006028                     u8261:
 14909   006028  EF1E  F030         	goto	l6538
 14910   00602C                     u8260:
 14911   00602C                     
 14912                           ; BSR set to: 0
 14913   00602C  0E00               	movlw	0
 14914   00602E  6F60               	movwf	___flge@ff1& (0+255),b
 14915   006030  0E00               	movlw	0
 14916   006032  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 14917   006034  0E00               	movlw	0
 14918   006036  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 14919   006038  0E00               	movlw	0
 14920   00603A  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 14921   00603C                     l6538:
 14922                           
 14923                           ; BSR set to: 0
 14924   00603C  0E00               	movlw	0
 14925   00603E  1564               	andwf	___flge@ff2& (0+255),w,b
 14926   006040  6E59               	movwf	??___flge^0,c
 14927   006042  0E00               	movlw	0
 14928   006044  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
 14929   006046  6E5A               	movwf	(??___flge+1)^0,c
 14930   006048  0E80               	movlw	128
 14931   00604A  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
 14932   00604C  6E5B               	movwf	(??___flge+2)^0,c
 14933   00604E  0E7F               	movlw	127
 14934   006050  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
 14935   006052  6E5C               	movwf	(??___flge+3)^0,c
 14936   006054  5059               	movf	??___flge^0,w,c
 14937   006056  105A               	iorwf	(??___flge+1)^0,w,c
 14938   006058  105B               	iorwf	(??___flge+2)^0,w,c
 14939   00605A  105C               	iorwf	(??___flge+3)^0,w,c
 14940   00605C  A4D8               	btfss	status,2,c
 14941   00605E  EF33  F030         	goto	u8271
 14942   006062  EF35  F030         	goto	u8270
 14943   006066                     u8271:
 14944   006066  EF3D  F030         	goto	l6542
 14945   00606A                     u8270:
 14946   00606A                     
 14947                           ; BSR set to: 0
 14948   00606A  0E00               	movlw	0
 14949   00606C  6F64               	movwf	___flge@ff2& (0+255),b
 14950   00606E  0E00               	movlw	0
 14951   006070  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 14952   006072  0E00               	movlw	0
 14953   006074  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 14954   006076  0E00               	movlw	0
 14955   006078  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 14956   00607A                     l6542:
 14957                           
 14958                           ; BSR set to: 0
 14959   00607A  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
 14960   00607C  EF42  F030         	goto	u8281
 14961   006080  EF44  F030         	goto	u8280
 14962   006084                     u8281:
 14963   006084  EF4D  F030         	goto	l6546
 14964   006088                     u8280:
 14965   006088                     
 14966                           ; BSR set to: 0
 14967   006088  6D60               	negf	___flge@ff1& (0+255),b
 14968   00608A  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
 14969   00608C  B0D8               	btfsc	status,0,c
 14970   00608E  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
 14971   006090  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
 14972   006092  B0D8               	btfsc	status,0,c
 14973   006094  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
 14974   006096  0E80               	movlw	128
 14975   006098  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
 14976   00609A                     l6546:
 14977                           
 14978                           ; BSR set to: 0
 14979   00609A  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
 14980   00609C  EF52  F030         	goto	u8291
 14981   0060A0  EF54  F030         	goto	u8290
 14982   0060A4                     u8291:
 14983   0060A4  EF5D  F030         	goto	l550
 14984   0060A8                     u8290:
 14985   0060A8                     
 14986                           ; BSR set to: 0
 14987   0060A8  6D64               	negf	___flge@ff2& (0+255),b
 14988   0060AA  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
 14989   0060AC  B0D8               	btfsc	status,0,c
 14990   0060AE  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
 14991   0060B0  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
 14992   0060B2  B0D8               	btfsc	status,0,c
 14993   0060B4  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
 14994   0060B6  0E80               	movlw	128
 14995   0060B8  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
 14996   0060BA                     l550:
 14997                           
 14998                           ; BSR set to: 0
 14999   0060BA  0E00               	movlw	0
 15000   0060BC  1B60               	xorwf	___flge@ff1& (0+255),f,b
 15001   0060BE  0E00               	movlw	0
 15002   0060C0  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
 15003   0060C2  0E00               	movlw	0
 15004   0060C4  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
 15005   0060C6  0E80               	movlw	128
 15006   0060C8  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
 15007   0060CA  0E00               	movlw	0
 15008   0060CC  1B64               	xorwf	___flge@ff2& (0+255),f,b
 15009   0060CE  0E00               	movlw	0
 15010   0060D0  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
 15011   0060D2  0E00               	movlw	0
 15012   0060D4  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
 15013   0060D6  0E80               	movlw	128
 15014   0060D8  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
 15015   0060DA  5164               	movf	___flge@ff2& (0+255),w,b
 15016   0060DC  5D60               	subwf	___flge@ff1& (0+255),w,b
 15017   0060DE  5165               	movf	(___flge@ff2+1)& (0+255),w,b
 15018   0060E0  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
 15019   0060E2  5166               	movf	(___flge@ff2+2)& (0+255),w,b
 15020   0060E4  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
 15021   0060E6  5167               	movf	(___flge@ff2+3)& (0+255),w,b
 15022   0060E8  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
 15023   0060EA  B0D8               	btfsc	status,0,c
 15024   0060EC  EF7A  F030         	goto	u8301
 15025   0060F0  EF7C  F030         	goto	u8300
 15026   0060F4                     u8301:
 15027   0060F4  EF7F  F030         	goto	l6552
 15028   0060F8                     u8300:
 15029   0060F8                     
 15030                           ; BSR set to: 0
 15031   0060F8  90D8               	bcf	status,0,c
 15032   0060FA  EF80  F030         	goto	l555
 15033   0060FE                     l6552:
 15034                           
 15035                           ; BSR set to: 0
 15036   0060FE  80D8               	bsf	status,0,c
 15037   006100                     l555:
 15038                           
 15039                           ; BSR set to: 0
 15040   006100  0012               	return		;funcret
 15041   006102                     __end_of___flge:
 15042                           	callstack 0
 15043                           
 15044 ;; *************** function ___fleq *****************
 15045 ;; Defined at:
 15046 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 15047 ;; Parameters:    Size  Location     Type
 15048 ;;  ff1             4    0[COMRAM] unsigned char 
 15049 ;;  ff2             4    4[COMRAM] unsigned char 
 15050 ;; Auto vars:     Size  Location     Type
 15051 ;;		None
 15052 ;; Return value:  Size  Location     Type
 15053 ;;		None               void
 15054 ;; Registers used:
 15055 ;;		wreg, status,2, status,0
 15056 ;; Tracked objects:
 15057 ;;		On entry : 0/0
 15058 ;;		On exit  : 0/0
 15059 ;;		Unchanged: 0/0
 15060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15061 ;;      Params:         8       0       0       0       0       0       0       0       0
 15062 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15063 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15064 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15065 ;;Total ram usage:       12 bytes
 15066 ;; Hardware stack levels used: 1
 15067 ;; Hardware stack levels required when called: 1
 15068 ;; This function calls:
 15069 ;;		Nothing
 15070 ;; This function is called by:
 15071 ;;		_efgtoa
 15072 ;; This function uses a non-reentrant model
 15073 ;;
 15074                           
 15075                           	psect	text37
 15076   0068D2                     __ptext37:
 15077                           	callstack 0
 15078   0068D2                     ___fleq:
 15079                           	callstack 24
 15080   0068D2  0E00               	movlw	0
 15081   0068D4  1401               	andwf	___fleq@ff1^0,w,c
 15082   0068D6  6E09               	movwf	??___fleq^0,c
 15083   0068D8  0E00               	movlw	0
 15084   0068DA  1402               	andwf	(___fleq@ff1+1)^0,w,c
 15085   0068DC  6E0A               	movwf	(??___fleq+1)^0,c
 15086   0068DE  0E80               	movlw	128
 15087   0068E0  1403               	andwf	(___fleq@ff1+2)^0,w,c
 15088   0068E2  6E0B               	movwf	(??___fleq+2)^0,c
 15089   0068E4  0E7F               	movlw	127
 15090   0068E6  1404               	andwf	(___fleq@ff1+3)^0,w,c
 15091   0068E8  6E0C               	movwf	(??___fleq+3)^0,c
 15092   0068EA  5009               	movf	??___fleq^0,w,c
 15093   0068EC  100A               	iorwf	(??___fleq+1)^0,w,c
 15094   0068EE  100B               	iorwf	(??___fleq+2)^0,w,c
 15095   0068F0  100C               	iorwf	(??___fleq+3)^0,w,c
 15096   0068F2  A4D8               	btfss	status,2,c
 15097   0068F4  EF7E  F034         	goto	u8231
 15098   0068F8  EF80  F034         	goto	u8230
 15099   0068FC                     u8231:
 15100   0068FC  EF88  F034         	goto	l6522
 15101   006900                     u8230:
 15102   006900  0E00               	movlw	0
 15103   006902  6E01               	movwf	___fleq@ff1^0,c
 15104   006904  0E00               	movlw	0
 15105   006906  6E02               	movwf	(___fleq@ff1+1)^0,c
 15106   006908  0E00               	movlw	0
 15107   00690A  6E03               	movwf	(___fleq@ff1+2)^0,c
 15108   00690C  0E00               	movlw	0
 15109   00690E  6E04               	movwf	(___fleq@ff1+3)^0,c
 15110   006910                     l6522:
 15111   006910  0E00               	movlw	0
 15112   006912  1405               	andwf	___fleq@ff2^0,w,c
 15113   006914  6E09               	movwf	??___fleq^0,c
 15114   006916  0E00               	movlw	0
 15115   006918  1406               	andwf	(___fleq@ff2+1)^0,w,c
 15116   00691A  6E0A               	movwf	(??___fleq+1)^0,c
 15117   00691C  0E80               	movlw	128
 15118   00691E  1407               	andwf	(___fleq@ff2+2)^0,w,c
 15119   006920  6E0B               	movwf	(??___fleq+2)^0,c
 15120   006922  0E7F               	movlw	127
 15121   006924  1408               	andwf	(___fleq@ff2+3)^0,w,c
 15122   006926  6E0C               	movwf	(??___fleq+3)^0,c
 15123   006928  5009               	movf	??___fleq^0,w,c
 15124   00692A  100A               	iorwf	(??___fleq+1)^0,w,c
 15125   00692C  100B               	iorwf	(??___fleq+2)^0,w,c
 15126   00692E  100C               	iorwf	(??___fleq+3)^0,w,c
 15127   006930  A4D8               	btfss	status,2,c
 15128   006932  EF9D  F034         	goto	u8241
 15129   006936  EF9F  F034         	goto	u8240
 15130   00693A                     u8241:
 15131   00693A  EFA7  F034         	goto	l6526
 15132   00693E                     u8240:
 15133   00693E  0E00               	movlw	0
 15134   006940  6E05               	movwf	___fleq@ff2^0,c
 15135   006942  0E00               	movlw	0
 15136   006944  6E06               	movwf	(___fleq@ff2+1)^0,c
 15137   006946  0E00               	movlw	0
 15138   006948  6E07               	movwf	(___fleq@ff2+2)^0,c
 15139   00694A  0E00               	movlw	0
 15140   00694C  6E08               	movwf	(___fleq@ff2+3)^0,c
 15141   00694E                     l6526:
 15142   00694E  5005               	movf	___fleq@ff2^0,w,c
 15143   006950  1801               	xorwf	___fleq@ff1^0,w,c
 15144   006952  E10F               	bnz	u8250
 15145   006954  5006               	movf	(___fleq@ff2+1)^0,w,c
 15146   006956  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 15147   006958  E10C               	bnz	u8250
 15148   00695A  5007               	movf	(___fleq@ff2+2)^0,w,c
 15149   00695C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 15150   00695E  E109               	bnz	u8250
 15151   006960  5008               	movf	(___fleq@ff2+3)^0,w,c
 15152   006962  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 15153   006964  B4D8               	btfsc	status,2,c
 15154   006966  EFB7  F034         	goto	u8251
 15155   00696A  EFB9  F034         	goto	u8250
 15156   00696E                     u8251:
 15157   00696E  EFBC  F034         	goto	l6530
 15158   006972                     u8250:
 15159   006972  90D8               	bcf	status,0,c
 15160   006974  EFBD  F034         	goto	l544
 15161   006978                     l6530:
 15162   006978  80D8               	bsf	status,0,c
 15163   00697A                     l544:
 15164   00697A  0012               	return		;funcret
 15165   00697C                     __end_of___fleq:
 15166                           	callstack 0
 15167                           
 15168 ;; *************** function ___fldiv *****************
 15169 ;; Defined at:
 15170 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;  b               4   39[COMRAM] unsigned char 
 15173 ;;  a               4   43[COMRAM] unsigned char 
 15174 ;; Auto vars:     Size  Location     Type
 15175 ;;  grs             4   58[COMRAM] unsigned long 
 15176 ;;  rem             4   51[COMRAM] unsigned long 
 15177 ;;  new_exp         2   56[COMRAM] short 
 15178 ;;  aexp            1   63[COMRAM] unsigned char 
 15179 ;;  bexp            1   62[COMRAM] unsigned char 
 15180 ;;  sign            1   55[COMRAM] unsigned char 
 15181 ;; Return value:  Size  Location     Type
 15182 ;;                  4   39[COMRAM] unsigned char 
 15183 ;; Registers used:
 15184 ;;		wreg, status,2, status,0
 15185 ;; Tracked objects:
 15186 ;;		On entry : 0/0
 15187 ;;		On exit  : 0/0
 15188 ;;		Unchanged: 0/0
 15189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15190 ;;      Params:         8       0       0       0       0       0       0       0       0
 15191 ;;      Locals:        13       0       0       0       0       0       0       0       0
 15192 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15193 ;;      Totals:        25       0       0       0       0       0       0       0       0
 15194 ;;Total ram usage:       25 bytes
 15195 ;; Hardware stack levels used: 1
 15196 ;; Hardware stack levels required when called: 1
 15197 ;; This function calls:
 15198 ;;		Nothing
 15199 ;; This function is called by:
 15200 ;;		_main
 15201 ;;		_Read_Sensors
 15202 ;;		_Apply_Filter
 15203 ;;		_efgtoa
 15204 ;;		_powf
 15205 ;; This function uses a non-reentrant model
 15206 ;;
 15207                           
 15208                           	psect	text38
 15209   0048D0                     __ptext38:
 15210                           	callstack 0
 15211   0048D0                     ___fldiv:
 15212                           	callstack 29
 15213   0048D0  502B               	movf	(___fldiv@b+3)^0,w,c
 15214   0048D2  0B80               	andlw	128
 15215   0048D4  6E38               	movwf	___fldiv@sign^0,c
 15216   0048D6  502B               	movf	(___fldiv@b+3)^0,w,c
 15217   0048D8  242B               	addwf	(___fldiv@b+3)^0,w,c
 15218   0048DA  6E3F               	movwf	___fldiv@bexp^0,c
 15219   0048DC  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 15220   0048DE  EF73  F024         	goto	u7811
 15221   0048E2  EF75  F024         	goto	u7810
 15222   0048E6                     u7811:
 15223   0048E6  EF76  F024         	goto	l6254
 15224   0048EA                     u7810:
 15225   0048EA  803F               	bsf	___fldiv@bexp^0,0,c
 15226   0048EC                     l6254:
 15227   0048EC  503F               	movf	___fldiv@bexp^0,w,c
 15228   0048EE  B4D8               	btfsc	status,2,c
 15229   0048F0  EF7C  F024         	goto	u7821
 15230   0048F4  EF7E  F024         	goto	u7820
 15231   0048F8                     u7821:
 15232   0048F8  EF92  F024         	goto	l6264
 15233   0048FC                     u7820:
 15234   0048FC  283F               	incf	___fldiv@bexp^0,w,c
 15235   0048FE  A4D8               	btfss	status,2,c
 15236   004900  EF84  F024         	goto	u7831
 15237   004904  EF86  F024         	goto	u7830
 15238   004908                     u7831:
 15239   004908  EF8E  F024         	goto	l6260
 15240   00490C                     u7830:
 15241   00490C  0E00               	movlw	0
 15242   00490E  6E28               	movwf	___fldiv@b^0,c
 15243   004910  0E00               	movlw	0
 15244   004912  6E29               	movwf	(___fldiv@b+1)^0,c
 15245   004914  0E00               	movlw	0
 15246   004916  6E2A               	movwf	(___fldiv@b+2)^0,c
 15247   004918  0E00               	movlw	0
 15248   00491A  6E2B               	movwf	(___fldiv@b+3)^0,c
 15249   00491C                     l6260:
 15250   00491C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 15251   00491E  6A2B               	clrf	(___fldiv@b+3)^0,c
 15252   004920  EF9A  F024         	goto	l6266
 15253   004924                     l6264:
 15254   004924  0E00               	movlw	0
 15255   004926  6E28               	movwf	___fldiv@b^0,c
 15256   004928  0E00               	movlw	0
 15257   00492A  6E29               	movwf	(___fldiv@b+1)^0,c
 15258   00492C  0E00               	movlw	0
 15259   00492E  6E2A               	movwf	(___fldiv@b+2)^0,c
 15260   004930  0E00               	movlw	0
 15261   004932  6E2B               	movwf	(___fldiv@b+3)^0,c
 15262   004934                     l6266:
 15263   004934  502F               	movf	(___fldiv@a+3)^0,w,c
 15264   004936  0B80               	andlw	128
 15265   004938  1A38               	xorwf	___fldiv@sign^0,f,c
 15266   00493A  502F               	movf	(___fldiv@a+3)^0,w,c
 15267   00493C  242F               	addwf	(___fldiv@a+3)^0,w,c
 15268   00493E  6E40               	movwf	___fldiv@aexp^0,c
 15269   004940  AE2E               	btfss	(___fldiv@a+2)^0,7,c
 15270   004942  EFA5  F024         	goto	u7841
 15271   004946  EFA7  F024         	goto	u7840
 15272   00494A                     u7841:
 15273   00494A  EFA8  F024         	goto	l6274
 15274   00494E                     u7840:
 15275   00494E  8040               	bsf	___fldiv@aexp^0,0,c
 15276   004950                     l6274:
 15277   004950  5040               	movf	___fldiv@aexp^0,w,c
 15278   004952  B4D8               	btfsc	status,2,c
 15279   004954  EFAE  F024         	goto	u7851
 15280   004958  EFB0  F024         	goto	u7850
 15281   00495C                     u7851:
 15282   00495C  EFC4  F024         	goto	l6284
 15283   004960                     u7850:
 15284   004960  2840               	incf	___fldiv@aexp^0,w,c
 15285   004962  A4D8               	btfss	status,2,c
 15286   004964  EFB6  F024         	goto	u7861
 15287   004968  EFB8  F024         	goto	u7860
 15288   00496C                     u7861:
 15289   00496C  EFC0  F024         	goto	l6280
 15290   004970                     u7860:
 15291   004970  0E00               	movlw	0
 15292   004972  6E2C               	movwf	___fldiv@a^0,c
 15293   004974  0E00               	movlw	0
 15294   004976  6E2D               	movwf	(___fldiv@a+1)^0,c
 15295   004978  0E00               	movlw	0
 15296   00497A  6E2E               	movwf	(___fldiv@a+2)^0,c
 15297   00497C  0E00               	movlw	0
 15298   00497E  6E2F               	movwf	(___fldiv@a+3)^0,c
 15299   004980                     l6280:
 15300   004980  8E2E               	bsf	(___fldiv@a+2)^0,7,c
 15301   004982  6A2F               	clrf	(___fldiv@a+3)^0,c
 15302   004984  EFCC  F024         	goto	l6286
 15303   004988                     l6284:
 15304   004988  0E00               	movlw	0
 15305   00498A  6E2C               	movwf	___fldiv@a^0,c
 15306   00498C  0E00               	movlw	0
 15307   00498E  6E2D               	movwf	(___fldiv@a+1)^0,c
 15308   004990  0E00               	movlw	0
 15309   004992  6E2E               	movwf	(___fldiv@a+2)^0,c
 15310   004994  0E00               	movlw	0
 15311   004996  6E2F               	movwf	(___fldiv@a+3)^0,c
 15312   004998                     l6286:
 15313   004998  502C               	movf	___fldiv@a^0,w,c
 15314   00499A  102D               	iorwf	(___fldiv@a+1)^0,w,c
 15315   00499C  102E               	iorwf	(___fldiv@a+2)^0,w,c
 15316   00499E  102F               	iorwf	(___fldiv@a+3)^0,w,c
 15317   0049A0  A4D8               	btfss	status,2,c
 15318   0049A2  EFD5  F024         	goto	u7871
 15319   0049A6  EFD7  F024         	goto	u7870
 15320   0049AA                     u7871:
 15321   0049AA  EFEF  F024         	goto	l6298
 15322   0049AE                     u7870:
 15323   0049AE  0E00               	movlw	0
 15324   0049B0  6E28               	movwf	___fldiv@b^0,c
 15325   0049B2  0E00               	movlw	0
 15326   0049B4  6E29               	movwf	(___fldiv@b+1)^0,c
 15327   0049B6  0E00               	movlw	0
 15328   0049B8  6E2A               	movwf	(___fldiv@b+2)^0,c
 15329   0049BA  0E00               	movlw	0
 15330   0049BC  6E2B               	movwf	(___fldiv@b+3)^0,c
 15331   0049BE  0E80               	movlw	128
 15332   0049C0  122A               	iorwf	(___fldiv@b+2)^0,f,c
 15333   0049C2  0E7F               	movlw	127
 15334   0049C4  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15335   0049C6                     l6292:
 15336   0049C6  5038               	movf	___fldiv@sign^0,w,c
 15337   0049C8  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15338   0049CA  C028  F028         	movff	___fldiv@b,?___fldiv
 15339   0049CE  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
 15340   0049D2  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
 15341   0049D6  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
 15342   0049DA  EF2F  F026         	goto	l867
 15343   0049DE                     l6298:
 15344   0049DE  503F               	movf	___fldiv@bexp^0,w,c
 15345   0049E0  A4D8               	btfss	status,2,c
 15346   0049E2  EFF5  F024         	goto	u7881
 15347   0049E6  EFF7  F024         	goto	u7880
 15348   0049EA                     u7881:
 15349   0049EA  EF01  F025         	goto	l6306
 15350   0049EE                     u7880:
 15351   0049EE  0E00               	movlw	0
 15352   0049F0  6E28               	movwf	?___fldiv^0,c
 15353   0049F2  0E00               	movlw	0
 15354   0049F4  6E29               	movwf	(?___fldiv+1)^0,c
 15355   0049F6  0E00               	movlw	0
 15356   0049F8  6E2A               	movwf	(?___fldiv+2)^0,c
 15357   0049FA  0E00               	movlw	0
 15358   0049FC  6E2B               	movwf	(?___fldiv+3)^0,c
 15359   0049FE  EF2F  F026         	goto	l867
 15360   004A02                     l6306:
 15361   004A02  5040               	movf	___fldiv@aexp^0,w,c
 15362   004A04  C03F  F030         	movff	___fldiv@bexp,??___fldiv
 15363   004A08  6A31               	clrf	(??___fldiv+1)^0,c
 15364   004A0A  5E30               	subwf	??___fldiv^0,f,c
 15365   004A0C  0E00               	movlw	0
 15366   004A0E  5A31               	subwfb	(??___fldiv+1)^0,f,c
 15367   004A10  0E7F               	movlw	127
 15368   004A12  2430               	addwf	??___fldiv^0,w,c
 15369   004A14  6E39               	movwf	___fldiv@new_exp^0,c
 15370   004A16  0E00               	movlw	0
 15371   004A18  2031               	addwfc	(??___fldiv+1)^0,w,c
 15372   004A1A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15373   004A1C  C028  F034         	movff	___fldiv@b,___fldiv@rem
 15374   004A20  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
 15375   004A24  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
 15376   004A28  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
 15377   004A2C  0E00               	movlw	0
 15378   004A2E  6E28               	movwf	___fldiv@b^0,c
 15379   004A30  0E00               	movlw	0
 15380   004A32  6E29               	movwf	(___fldiv@b+1)^0,c
 15381   004A34  0E00               	movlw	0
 15382   004A36  6E2A               	movwf	(___fldiv@b+2)^0,c
 15383   004A38  0E00               	movlw	0
 15384   004A3A  6E2B               	movwf	(___fldiv@b+3)^0,c
 15385   004A3C  0E00               	movlw	0
 15386   004A3E  6E3B               	movwf	___fldiv@grs^0,c
 15387   004A40  0E00               	movlw	0
 15388   004A42  6E3C               	movwf	(___fldiv@grs+1)^0,c
 15389   004A44  0E00               	movlw	0
 15390   004A46  6E3D               	movwf	(___fldiv@grs+2)^0,c
 15391   004A48  0E00               	movlw	0
 15392   004A4A  6E3E               	movwf	(___fldiv@grs+3)^0,c
 15393   004A4C  6A40               	clrf	___fldiv@aexp^0,c
 15394   004A4E  EF61  F025         	goto	l869
 15395   004A52                     l6316:
 15396   004A52  5040               	movf	___fldiv@aexp^0,w,c
 15397   004A54  B4D8               	btfsc	status,2,c
 15398   004A56  EF2F  F025         	goto	u7891
 15399   004A5A  EF31  F025         	goto	u7890
 15400   004A5E                     u7891:
 15401   004A5E  EF48  F025         	goto	l6324
 15402   004A62                     u7890:
 15403   004A62  90D8               	bcf	status,0,c
 15404   004A64  3634               	rlcf	___fldiv@rem^0,f,c
 15405   004A66  3635               	rlcf	(___fldiv@rem+1)^0,f,c
 15406   004A68  3636               	rlcf	(___fldiv@rem+2)^0,f,c
 15407   004A6A  3637               	rlcf	(___fldiv@rem+3)^0,f,c
 15408   004A6C  90D8               	bcf	status,0,c
 15409   004A6E  3628               	rlcf	___fldiv@b^0,f,c
 15410   004A70  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15411   004A72  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15412   004A74  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15413   004A76  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15414   004A78  EF40  F025         	goto	u7901
 15415   004A7C  EF42  F025         	goto	u7900
 15416   004A80                     u7901:
 15417   004A80  EF43  F025         	goto	l872
 15418   004A84                     u7900:
 15419   004A84  8028               	bsf	___fldiv@b^0,0,c
 15420   004A86                     l872:
 15421   004A86  90D8               	bcf	status,0,c
 15422   004A88  363B               	rlcf	___fldiv@grs^0,f,c
 15423   004A8A  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15424   004A8C  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15425   004A8E  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15426   004A90                     l6324:
 15427   004A90  502C               	movf	___fldiv@a^0,w,c
 15428   004A92  5C34               	subwf	___fldiv@rem^0,w,c
 15429   004A94  502D               	movf	(___fldiv@a+1)^0,w,c
 15430   004A96  5835               	subwfb	(___fldiv@rem+1)^0,w,c
 15431   004A98  502E               	movf	(___fldiv@a+2)^0,w,c
 15432   004A9A  5836               	subwfb	(___fldiv@rem+2)^0,w,c
 15433   004A9C  502F               	movf	(___fldiv@a+3)^0,w,c
 15434   004A9E  5837               	subwfb	(___fldiv@rem+3)^0,w,c
 15435   004AA0  A0D8               	btfss	status,0,c
 15436   004AA2  EF55  F025         	goto	u7911
 15437   004AA6  EF57  F025         	goto	u7910
 15438   004AAA                     u7911:
 15439   004AAA  EF60  F025         	goto	l6330
 15440   004AAE                     u7910:
 15441   004AAE  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
 15442   004AB0  502C               	movf	___fldiv@a^0,w,c
 15443   004AB2  5E34               	subwf	___fldiv@rem^0,f,c
 15444   004AB4  502D               	movf	(___fldiv@a+1)^0,w,c
 15445   004AB6  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
 15446   004AB8  502E               	movf	(___fldiv@a+2)^0,w,c
 15447   004ABA  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
 15448   004ABC  502F               	movf	(___fldiv@a+3)^0,w,c
 15449   004ABE  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
 15450   004AC0                     l6330:
 15451   004AC0  2A40               	incf	___fldiv@aexp^0,f,c
 15452   004AC2                     l869:
 15453   004AC2  0E19               	movlw	25
 15454   004AC4  6440               	cpfsgt	___fldiv@aexp^0,c
 15455   004AC6  EF67  F025         	goto	u7921
 15456   004ACA  EF69  F025         	goto	u7920
 15457   004ACE                     u7921:
 15458   004ACE  EF29  F025         	goto	l6316
 15459   004AD2                     u7920:
 15460   004AD2  5034               	movf	___fldiv@rem^0,w,c
 15461   004AD4  1035               	iorwf	(___fldiv@rem+1)^0,w,c
 15462   004AD6  1036               	iorwf	(___fldiv@rem+2)^0,w,c
 15463   004AD8  1037               	iorwf	(___fldiv@rem+3)^0,w,c
 15464   004ADA  B4D8               	btfsc	status,2,c
 15465   004ADC  EF72  F025         	goto	u7931
 15466   004AE0  EF74  F025         	goto	u7930
 15467   004AE4                     u7931:
 15468   004AE4  EF8C  F025         	goto	l6342
 15469   004AE8                     u7930:
 15470   004AE8  803B               	bsf	___fldiv@grs^0,0,c
 15471   004AEA  EF8C  F025         	goto	l6342
 15472   004AEE                     l6336:
 15473   004AEE  90D8               	bcf	status,0,c
 15474   004AF0  3628               	rlcf	___fldiv@b^0,f,c
 15475   004AF2  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15476   004AF4  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15477   004AF6  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15478   004AF8  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15479   004AFA  EF81  F025         	goto	u7941
 15480   004AFE  EF83  F025         	goto	u7940
 15481   004B02                     u7941:
 15482   004B02  EF84  F025         	goto	l878
 15483   004B06                     u7940:
 15484   004B06  8028               	bsf	___fldiv@b^0,0,c
 15485   004B08                     l878:
 15486   004B08  90D8               	bcf	status,0,c
 15487   004B0A  363B               	rlcf	___fldiv@grs^0,f,c
 15488   004B0C  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15489   004B0E  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15490   004B10  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15491   004B12  0639               	decf	___fldiv@new_exp^0,f,c
 15492   004B14  A0D8               	btfss	status,0,c
 15493   004B16  063A               	decf	(___fldiv@new_exp+1)^0,f,c
 15494   004B18                     l6342:
 15495   004B18  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 15496   004B1A  EF91  F025         	goto	u7951
 15497   004B1E  EF93  F025         	goto	u7950
 15498   004B22                     u7951:
 15499   004B22  EF77  F025         	goto	l6336
 15500   004B26                     u7950:
 15501   004B26  6A40               	clrf	___fldiv@aexp^0,c
 15502   004B28  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15503   004B2A  EF99  F025         	goto	u7961
 15504   004B2E  EF9B  F025         	goto	u7960
 15505   004B32                     u7961:
 15506   004B32  EFBF  F025         	goto	l880
 15507   004B36                     u7960:
 15508   004B36  0EFF               	movlw	255
 15509   004B38  143B               	andwf	___fldiv@grs^0,w,c
 15510   004B3A  6E30               	movwf	??___fldiv^0,c
 15511   004B3C  0EFF               	movlw	255
 15512   004B3E  143C               	andwf	(___fldiv@grs+1)^0,w,c
 15513   004B40  6E31               	movwf	(??___fldiv+1)^0,c
 15514   004B42  0EFF               	movlw	255
 15515   004B44  143D               	andwf	(___fldiv@grs+2)^0,w,c
 15516   004B46  6E32               	movwf	(??___fldiv+2)^0,c
 15517   004B48  0E7F               	movlw	127
 15518   004B4A  143E               	andwf	(___fldiv@grs+3)^0,w,c
 15519   004B4C  6E33               	movwf	(??___fldiv+3)^0,c
 15520   004B4E  5030               	movf	??___fldiv^0,w,c
 15521   004B50  1031               	iorwf	(??___fldiv+1)^0,w,c
 15522   004B52  1032               	iorwf	(??___fldiv+2)^0,w,c
 15523   004B54  1033               	iorwf	(??___fldiv+3)^0,w,c
 15524   004B56  B4D8               	btfsc	status,2,c
 15525   004B58  EFB0  F025         	goto	u7971
 15526   004B5C  EFB2  F025         	goto	u7970
 15527   004B60                     u7971:
 15528   004B60  EFB6  F025         	goto	l881
 15529   004B64                     u7970:
 15530   004B64                     l6346:
 15531   004B64  0E01               	movlw	1
 15532   004B66  6E40               	movwf	___fldiv@aexp^0,c
 15533   004B68  EFBF  F025         	goto	l880
 15534   004B6C                     l881:
 15535   004B6C  A028               	btfss	___fldiv@b^0,0,c
 15536   004B6E  EFBB  F025         	goto	u7981
 15537   004B72  EFBD  F025         	goto	u7980
 15538   004B76                     u7981:
 15539   004B76  EFBF  F025         	goto	l880
 15540   004B7A                     u7980:
 15541   004B7A  EFB2  F025         	goto	l6346
 15542   004B7E                     l880:
 15543   004B7E  5040               	movf	___fldiv@aexp^0,w,c
 15544   004B80  B4D8               	btfsc	status,2,c
 15545   004B82  EFC5  F025         	goto	u7991
 15546   004B86  EFC7  F025         	goto	u7990
 15547   004B8A                     u7991:
 15548   004B8A  EFEB  F025         	goto	l6358
 15549   004B8E                     u7990:
 15550   004B8E  0E01               	movlw	1
 15551   004B90  2628               	addwf	___fldiv@b^0,f,c
 15552   004B92  0E00               	movlw	0
 15553   004B94  2229               	addwfc	(___fldiv@b+1)^0,f,c
 15554   004B96  222A               	addwfc	(___fldiv@b+2)^0,f,c
 15555   004B98  222B               	addwfc	(___fldiv@b+3)^0,f,c
 15556   004B9A  A02B               	btfss	(___fldiv@b+3)^0,0,c
 15557   004B9C  EFD2  F025         	goto	u8001
 15558   004BA0  EFD4  F025         	goto	u8000
 15559   004BA4                     u8001:
 15560   004BA4  EFEB  F025         	goto	l6358
 15561   004BA8                     u8000:
 15562   004BA8  C028  F030         	movff	___fldiv@b,??___fldiv
 15563   004BAC  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
 15564   004BB0  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
 15565   004BB4  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
 15566   004BB8  3433               	rlcf	(??___fldiv+3)^0,w,c
 15567   004BBA  3233               	rrcf	(??___fldiv+3)^0,f,c
 15568   004BBC  3232               	rrcf	(??___fldiv+2)^0,f,c
 15569   004BBE  3231               	rrcf	(??___fldiv+1)^0,f,c
 15570   004BC0  3230               	rrcf	??___fldiv^0,f,c
 15571   004BC2  C030  F028         	movff	??___fldiv,___fldiv@b
 15572   004BC6  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
 15573   004BCA  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
 15574   004BCE  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
 15575   004BD2  4A39               	infsnz	___fldiv@new_exp^0,f,c
 15576   004BD4  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
 15577   004BD6                     l6358:
 15578   004BD6  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15579   004BD8  EFF6  F025         	goto	u8011
 15580   004BDC  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15581   004BDE  E108               	bnz	u8010
 15582   004BE0  2839               	incf	___fldiv@new_exp^0,w,c
 15583   004BE2  A0D8               	btfss	status,0,c
 15584   004BE4  EFF6  F025         	goto	u8011
 15585   004BE8  EFF8  F025         	goto	u8010
 15586   004BEC                     u8011:
 15587   004BEC  EF03  F026         	goto	l6362
 15588   004BF0                     u8010:
 15589   004BF0  0E00               	movlw	0
 15590   004BF2  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15591   004BF4  6839               	setf	___fldiv@new_exp^0,c
 15592   004BF6  0E00               	movlw	0
 15593   004BF8  6E28               	movwf	___fldiv@b^0,c
 15594   004BFA  0E00               	movlw	0
 15595   004BFC  6E29               	movwf	(___fldiv@b+1)^0,c
 15596   004BFE  0E00               	movlw	0
 15597   004C00  6E2A               	movwf	(___fldiv@b+2)^0,c
 15598   004C02  0E00               	movlw	0
 15599   004C04  6E2B               	movwf	(___fldiv@b+3)^0,c
 15600   004C06                     l6362:
 15601   004C06  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15602   004C08  EF10  F026         	goto	u8020
 15603   004C0C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15604   004C0E  E106               	bnz	u8021
 15605   004C10  0439               	decf	___fldiv@new_exp^0,w,c
 15606   004C12  B0D8               	btfsc	status,0,c
 15607   004C14  EF0E  F026         	goto	u8021
 15608   004C18  EF10  F026         	goto	u8020
 15609   004C1C                     u8021:
 15610   004C1C  EF1D  F026         	goto	l6368
 15611   004C20                     u8020:
 15612   004C20  0E00               	movlw	0
 15613   004C22  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15614   004C24  0E00               	movlw	0
 15615   004C26  6E39               	movwf	___fldiv@new_exp^0,c
 15616   004C28  0E00               	movlw	0
 15617   004C2A  6E28               	movwf	___fldiv@b^0,c
 15618   004C2C  0E00               	movlw	0
 15619   004C2E  6E29               	movwf	(___fldiv@b+1)^0,c
 15620   004C30  0E00               	movlw	0
 15621   004C32  6E2A               	movwf	(___fldiv@b+2)^0,c
 15622   004C34  0E00               	movlw	0
 15623   004C36  6E2B               	movwf	(___fldiv@b+3)^0,c
 15624   004C38  6A38               	clrf	___fldiv@sign^0,c
 15625   004C3A                     l6368:
 15626   004C3A  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
 15627   004C3E  A03F               	btfss	___fldiv@bexp^0,0,c
 15628   004C40  EF24  F026         	goto	u8031
 15629   004C44  EF26  F026         	goto	u8030
 15630   004C48                     u8031:
 15631   004C48  EF29  F026         	goto	l6374
 15632   004C4C                     u8030:
 15633   004C4C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 15634   004C4E  EF2A  F026         	goto	l6376
 15635   004C52                     l6374:
 15636   004C52  9E2A               	bcf	(___fldiv@b+2)^0,7,c
 15637   004C54                     l6376:
 15638   004C54  90D8               	bcf	status,0,c
 15639   004C56  303F               	rrcf	___fldiv@bexp^0,w,c
 15640   004C58  6E2B               	movwf	(___fldiv@b+3)^0,c
 15641   004C5A  EFE3  F024         	goto	l6292
 15642   004C5E                     l867:
 15643   004C5E  0012               	return		;funcret
 15644   004C60                     __end_of___fldiv:
 15645                           	callstack 0
 15646                           
 15647 ;; *************** function _dtoa *****************
 15648 ;; Defined at:
 15649 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 15650 ;; Parameters:    Size  Location     Type
 15651 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 15652 ;;		 -> sprintf@f(11), 
 15653 ;;  d               4   23[COMRAM] long 
 15654 ;; Auto vars:     Size  Location     Type
 15655 ;;  i               2   34[COMRAM] int 
 15656 ;;  p               2   31[COMRAM] int 
 15657 ;;  w               2   29[COMRAM] int 
 15658 ;;  s               1   33[COMRAM] unsigned char 
 15659 ;; Return value:  Size  Location     Type
 15660 ;;                  1    wreg      void 
 15661 ;; Registers used:
 15662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15663 ;; Tracked objects:
 15664 ;;		On entry : 0/0
 15665 ;;		On exit  : 0/0
 15666 ;;		Unchanged: 0/0
 15667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15668 ;;      Params:         5       0       0       0       0       0       0       0       0
 15669 ;;      Locals:         9       0       0       0       0       0       0       0       0
 15670 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15671 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15672 ;;Total ram usage:       14 bytes
 15673 ;; Hardware stack levels used: 1
 15674 ;; Hardware stack levels required when called: 5
 15675 ;; This function calls:
 15676 ;;		___aldiv
 15677 ;;		___almod
 15678 ;;		_abs
 15679 ;;		_pad
 15680 ;; This function is called by:
 15681 ;;		_vfpfcnvrt
 15682 ;; This function uses a non-reentrant model
 15683 ;;
 15684                           
 15685                           	psect	text39
 15686   00586A                     __ptext39:
 15687                           	callstack 0
 15688   00586A                     _dtoa:
 15689                           	callstack 21
 15690   00586A                     
 15691                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 15692   00586A  BE1B               	btfsc	(dtoa@d+3)^0,7,c
 15693   00586C  EF3A  F02C         	goto	u8641
 15694   005870  EF3D  F02C         	goto	u8640
 15695   005874                     u8641:
 15696   005874  0E01               	movlw	1
 15697   005876  EF3E  F02C         	goto	u8650
 15698   00587A                     u8640:
 15699   00587A  0E00               	movlw	0
 15700   00587C                     u8650:
 15701   00587C  6E22               	movwf	dtoa@s^0,c
 15702                           
 15703                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 15704   00587E  0102               	movlb	2	; () banked
 15705   005880  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 15706   005882  EF47  F02C         	goto	u8660
 15707   005886  EF45  F02C         	goto	u8661
 15708   00588A                     u8661:
 15709   00588A  EF4D  F02C         	goto	l1000
 15710   00588E                     u8660:
 15711   00588E                     
 15712                           ; BSR set to: 2
 15713   00588E  0E00               	movlw	0
 15714   005890  6E21               	movwf	(dtoa@p+1)^0,c
 15715   005892  0E01               	movlw	1
 15716   005894  6E20               	movwf	dtoa@p^0,c
 15717   005896  EF51  F02C         	goto	l1002
 15718   00589A                     l1000:
 15719                           
 15720                           ; BSR set to: 2
 15721   00589A  C2FE  F020         	movff	_prec,dtoa@p
 15722   00589E  C2FF  F021         	movff	_prec+1,dtoa@p+1
 15723   0058A2                     l1002:
 15724                           
 15725                           ; BSR set to: 2
 15726                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 15727   0058A2  C36A  F01E         	movff	_width,dtoa@w
 15728   0058A6  C36B  F01F         	movff	_width+1,dtoa@w+1
 15729   0058AA                     
 15730                           ; BSR set to: 2
 15731                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 15732   0058AA  5022               	movf	dtoa@s^0,w,c
 15733   0058AC  B4D8               	btfsc	status,2,c
 15734   0058AE  EF5B  F02C         	goto	u8671
 15735   0058B2  EF5D  F02C         	goto	u8670
 15736   0058B6                     u8671:
 15737   0058B6  EF74  F02C         	goto	l1003
 15738   0058BA                     u8670:
 15739   0058BA                     
 15740                           ; BSR set to: 2
 15741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 15742   0058BA  061E               	decf	dtoa@w^0,f,c
 15743   0058BC  A0D8               	btfss	status,0,c
 15744   0058BE  061F               	decf	(dtoa@w+1)^0,f,c
 15745   0058C0                     
 15746                           ; BSR set to: 2
 15747                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 15748   0058C0  5022               	movf	dtoa@s^0,w,c
 15749   0058C2  A4D8               	btfss	status,2,c
 15750   0058C4  EF66  F02C         	goto	u8681
 15751   0058C8  EF68  F02C         	goto	u8680
 15752   0058CC                     u8681:
 15753   0058CC  EF6E  F02C         	goto	l6722
 15754   0058D0                     u8680:
 15755   0058D0                     
 15756                           ; BSR set to: 2
 15757   0058D0  0E00               	movlw	0
 15758   0058D2  6E1D               	movwf	(_dtoa$1348+1)^0,c
 15759   0058D4  0E2B               	movlw	43
 15760   0058D6  6E1C               	movwf	_dtoa$1348^0,c
 15761   0058D8  EF72  F02C         	goto	l6724
 15762   0058DC                     l6722:
 15763                           
 15764                           ; BSR set to: 2
 15765   0058DC  0E00               	movlw	0
 15766   0058DE  6E1D               	movwf	(_dtoa$1348+1)^0,c
 15767   0058E0  0E2D               	movlw	45
 15768   0058E2  6E1C               	movwf	_dtoa$1348^0,c
 15769   0058E4                     l6724:
 15770                           
 15771                           ; BSR set to: 2
 15772   0058E4  C01C  F022         	movff	_dtoa$1348,dtoa@s
 15773   0058E8                     l1003:
 15774                           
 15775                           ; BSR set to: 2
 15776                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 15777   0058E8  0E00               	movlw	0
 15778   0058EA  6E24               	movwf	(dtoa@i+1)^0,c
 15779   0058EC  0E4F               	movlw	79
 15780   0058EE  6E23               	movwf	dtoa@i^0,c
 15781   0058F0                     
 15782                           ; BSR set to: 2
 15783                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 15784   0058F0  0103               	movlb	3	; () banked
 15785   0058F2  6BC9               	clrf	(_dbuf+79)& (0+255),b
 15786                           
 15787                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 15788   0058F4  EFC0  F02C         	goto	l6738
 15789   0058F8                     l6728:
 15790                           
 15791                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 15792   0058F8  0623               	decf	dtoa@i^0,f,c
 15793   0058FA  A0D8               	btfss	status,0,c
 15794   0058FC  0624               	decf	(dtoa@i+1)^0,f,c
 15795   0058FE                     
 15796                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 15797   0058FE  0E7A               	movlw	low _dbuf
 15798   005900  2423               	addwf	dtoa@i^0,w,c
 15799   005902  6ED9               	movwf	fsr2l,c
 15800   005904  0E03               	movlw	high _dbuf
 15801   005906  2024               	addwfc	(dtoa@i+1)^0,w,c
 15802   005908  6EDA               	movwf	fsr2h,c
 15803   00590A  C018  F001         	movff	dtoa@d,___almod@dividend
 15804   00590E  C019  F002         	movff	dtoa@d+1,___almod@dividend+1
 15805   005912  C01A  F003         	movff	dtoa@d+2,___almod@dividend+2
 15806   005916  C01B  F004         	movff	dtoa@d+3,___almod@dividend+3
 15807   00591A  0E0A               	movlw	10
 15808   00591C  6E05               	movwf	___almod@divisor^0,c
 15809   00591E  0E00               	movlw	0
 15810   005920  6E06               	movwf	(___almod@divisor+1)^0,c
 15811   005922  0E00               	movlw	0
 15812   005924  6E07               	movwf	(___almod@divisor+2)^0,c
 15813   005926  0E00               	movlw	0
 15814   005928  6E08               	movwf	(___almod@divisor+3)^0,c
 15815   00592A  EC02  F032         	call	___almod	;wreg free
 15816   00592E  C001  F00B         	movff	?___almod,abs@a
 15817   005932  C002  F00C         	movff	?___almod+1,abs@a+1
 15818   005936  EC61  F037         	call	_abs	;wreg free
 15819   00593A  500B               	movf	?_abs^0,w,c
 15820   00593C  0F30               	addlw	48
 15821   00593E  6EDF               	movwf	indf2,c
 15822   005940                     
 15823                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
 15824   005940  0620               	decf	dtoa@p^0,f,c
 15825   005942  A0D8               	btfss	status,0,c
 15826   005944  0621               	decf	(dtoa@p+1)^0,f,c
 15827   005946                     
 15828                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 15829   005946  061E               	decf	dtoa@w^0,f,c
 15830   005948  A0D8               	btfss	status,0,c
 15831   00594A  061F               	decf	(dtoa@w+1)^0,f,c
 15832   00594C                     
 15833                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 15834   00594C  C018  F001         	movff	dtoa@d,___aldiv@dividend
 15835   005950  C019  F002         	movff	dtoa@d+1,___aldiv@dividend+1
 15836   005954  C01A  F003         	movff	dtoa@d+2,___aldiv@dividend+2
 15837   005958  C01B  F004         	movff	dtoa@d+3,___aldiv@dividend+3
 15838   00595C  0E0A               	movlw	10
 15839   00595E  6E05               	movwf	___aldiv@divisor^0,c
 15840   005960  0E00               	movlw	0
 15841   005962  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15842   005964  0E00               	movlw	0
 15843   005966  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15844   005968  0E00               	movlw	0
 15845   00596A  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15846   00596C  ECF6  F02E         	call	___aldiv	;wreg free
 15847   005970  C001  F018         	movff	?___aldiv,dtoa@d
 15848   005974  C002  F019         	movff	?___aldiv+1,dtoa@d+1
 15849   005978  C003  F01A         	movff	?___aldiv+2,dtoa@d+2
 15850   00597C  C004  F01B         	movff	?___aldiv+3,dtoa@d+3
 15851   005980                     l6738:
 15852                           
 15853                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 15854   005980  BE24               	btfsc	(dtoa@i+1)^0,7,c
 15855   005982  EFCB  F02C         	goto	u8691
 15856   005986  5024               	movf	(dtoa@i+1)^0,w,c
 15857   005988  E108               	bnz	u8690
 15858   00598A  0423               	decf	dtoa@i^0,w,c
 15859   00598C  A0D8               	btfss	status,0,c
 15860   00598E  EFCB  F02C         	goto	u8691
 15861   005992  EFCD  F02C         	goto	u8690
 15862   005996                     u8691:
 15863   005996  EFE5  F02C         	goto	l6744
 15864   00599A                     u8690:
 15865   00599A  5018               	movf	dtoa@d^0,w,c
 15866   00599C  1019               	iorwf	(dtoa@d+1)^0,w,c
 15867   00599E  101A               	iorwf	(dtoa@d+2)^0,w,c
 15868   0059A0  101B               	iorwf	(dtoa@d+3)^0,w,c
 15869   0059A2  A4D8               	btfss	status,2,c
 15870   0059A4  EFD6  F02C         	goto	u8701
 15871   0059A8  EFD8  F02C         	goto	u8700
 15872   0059AC                     u8701:
 15873   0059AC  EF7C  F02C         	goto	l6728
 15874   0059B0                     u8700:
 15875   0059B0  BE21               	btfsc	(dtoa@p+1)^0,7,c
 15876   0059B2  EFE5  F02C         	goto	u8710
 15877   0059B6  5021               	movf	(dtoa@p+1)^0,w,c
 15878   0059B8  E106               	bnz	u8711
 15879   0059BA  0420               	decf	dtoa@p^0,w,c
 15880   0059BC  B0D8               	btfsc	status,0,c
 15881   0059BE  EFE3  F02C         	goto	u8711
 15882   0059C2  EFE5  F02C         	goto	u8710
 15883   0059C6                     u8711:
 15884   0059C6  EF7C  F02C         	goto	l6728
 15885   0059CA                     u8710:
 15886   0059CA                     l6744:
 15887                           
 15888                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 15889   0059CA  5022               	movf	dtoa@s^0,w,c
 15890   0059CC  B4D8               	btfsc	status,2,c
 15891   0059CE  EFEB  F02C         	goto	u8721
 15892   0059D2  EFED  F02C         	goto	u8720
 15893   0059D6                     u8721:
 15894   0059D6  EFF8  F02C         	goto	l6750
 15895   0059DA                     u8720:
 15896   0059DA                     
 15897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 15898   0059DA  0623               	decf	dtoa@i^0,f,c
 15899   0059DC  A0D8               	btfss	status,0,c
 15900   0059DE  0624               	decf	(dtoa@i+1)^0,f,c
 15901   0059E0                     
 15902                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 15903   0059E0  0E7A               	movlw	low _dbuf
 15904   0059E2  2423               	addwf	dtoa@i^0,w,c
 15905   0059E4  6ED9               	movwf	fsr2l,c
 15906   0059E6  0E03               	movlw	high _dbuf
 15907   0059E8  2024               	addwfc	(dtoa@i+1)^0,w,c
 15908   0059EA  6EDA               	movwf	fsr2h,c
 15909   0059EC  C022  FFDF         	movff	dtoa@s,indf2
 15910   0059F0                     l6750:
 15911                           
 15912                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 15913   0059F0  C017  F00F         	movff	dtoa@fp,pad@fp
 15914   0059F4  0E7A               	movlw	low _dbuf
 15915   0059F6  2423               	addwf	dtoa@i^0,w,c
 15916   0059F8  6E10               	movwf	pad@buf^0,c
 15917   0059FA  0E03               	movlw	high _dbuf
 15918   0059FC  2024               	addwfc	(dtoa@i+1)^0,w,c
 15919   0059FE  6E11               	movwf	(pad@buf+1)^0,c
 15920   005A00  C01E  F012         	movff	dtoa@w,pad@p
 15921   005A04  C01F  F013         	movff	dtoa@w+1,pad@p+1
 15922   005A08  ECD9  F035         	call	_pad	;wreg free
 15923   005A0C  0012               	return		;funcret
 15924   005A0E                     __end_of_dtoa:
 15925                           	callstack 0
 15926                           
 15927 ;; *************** function _pad *****************
 15928 ;; Defined at:
 15929 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 15930 ;; Parameters:    Size  Location     Type
 15931 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
 15932 ;;		 -> sprintf@f(11), 
 15933 ;;  buf             2   15[COMRAM] PTR unsigned char 
 15934 ;;		 -> dbuf(80), 
 15935 ;;  p               2   17[COMRAM] int 
 15936 ;; Auto vars:     Size  Location     Type
 15937 ;;  i               2   20[COMRAM] int 
 15938 ;; Return value:  Size  Location     Type
 15939 ;;                  1    wreg      void 
 15940 ;; Registers used:
 15941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15942 ;; Tracked objects:
 15943 ;;		On entry : 0/0
 15944 ;;		On exit  : 0/0
 15945 ;;		Unchanged: 0/0
 15946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15947 ;;      Params:         5       0       0       0       0       0       0       0       0
 15948 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15949 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15950 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15951 ;;Total ram usage:        8 bytes
 15952 ;; Hardware stack levels used: 1
 15953 ;; Hardware stack levels required when called: 4
 15954 ;; This function calls:
 15955 ;;		_fputc
 15956 ;;		_fputs
 15957 ;; This function is called by:
 15958 ;;		_dtoa
 15959 ;;		_efgtoa
 15960 ;;		_utoa
 15961 ;; This function uses a non-reentrant model
 15962 ;;
 15963                           
 15964                           	psect	text40
 15965   006BB2                     __ptext40:
 15966                           	callstack 0
 15967   006BB2                     _pad:
 15968                           	callstack 21
 15969   006BB2                     
 15970                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 15971   006BB2  BE13               	btfsc	(pad@p+1)^0,7,c
 15972   006BB4  EFE0  F035         	goto	u8420
 15973   006BB8  EFDE  F035         	goto	u8421
 15974   006BBC                     u8421:
 15975   006BBC  EFE4  F035         	goto	l992
 15976   006BC0                     u8420:
 15977   006BC0                     
 15978                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 15979   006BC0  0E00               	movlw	0
 15980   006BC2  6E13               	movwf	(pad@p+1)^0,c
 15981   006BC4  0E00               	movlw	0
 15982   006BC6  6E12               	movwf	pad@p^0,c
 15983   006BC8                     l992:
 15984                           
 15985                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 15986   006BC8  0E00               	movlw	0
 15987   006BCA  6E16               	movwf	(pad@i+1)^0,c
 15988   006BCC  0E00               	movlw	0
 15989   006BCE  6E15               	movwf	pad@i^0,c
 15990                           
 15991                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 15992   006BD0  EFF4  F035         	goto	l6632
 15993   006BD4                     l6628:
 15994                           
 15995                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 15996   006BD4  0E00               	movlw	0
 15997   006BD6  6E02               	movwf	(fputc@c+1)^0,c
 15998   006BD8  0E20               	movlw	32
 15999   006BDA  6E01               	movwf	fputc@c^0,c
 16000   006BDC  C00F  F003         	movff	pad@fp,fputc@fp
 16001   006BE0  EC5F  F033         	call	_fputc	;wreg free
 16002   006BE4                     
 16003                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 16004   006BE4  4A15               	infsnz	pad@i^0,f,c
 16005   006BE6  2A16               	incf	(pad@i+1)^0,f,c
 16006   006BE8                     l6632:
 16007                           
 16008                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 16009   006BE8  5012               	movf	pad@p^0,w,c
 16010   006BEA  5C15               	subwf	pad@i^0,w,c
 16011   006BEC  5016               	movf	(pad@i+1)^0,w,c
 16012   006BEE  0A80               	xorlw	128
 16013   006BF0  6E14               	movwf	??_pad^0,c
 16014   006BF2  5013               	movf	(pad@p+1)^0,w,c
 16015   006BF4  0A80               	xorlw	128
 16016   006BF6  5814               	subwfb	??_pad^0,w,c
 16017   006BF8  A0D8               	btfss	status,0,c
 16018   006BFA  EF01  F036         	goto	u8431
 16019   006BFE  EF03  F036         	goto	u8430
 16020   006C02                     u8431:
 16021   006C02  EFEA  F035         	goto	l6628
 16022   006C06                     u8430:
 16023   006C06                     
 16024                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 16025   006C06  C010  F009         	movff	pad@buf,fputs@s
 16026   006C0A  C011  F00A         	movff	pad@buf+1,fputs@s+1
 16027   006C0E  C00F  F00B         	movff	pad@fp,fputs@fp
 16028   006C12  ECED  F036         	call	_fputs	;wreg free
 16029   006C16  0012               	return		;funcret
 16030   006C18                     __end_of_pad:
 16031                           	callstack 0
 16032                           
 16033 ;; *************** function _fputs *****************
 16034 ;; Defined at:
 16035 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 16036 ;; Parameters:    Size  Location     Type
 16037 ;;  s               2    8[COMRAM] PTR const unsigned char 
 16038 ;;		 -> dbuf(80), 
 16039 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
 16040 ;;		 -> sprintf@f(11), 
 16041 ;; Auto vars:     Size  Location     Type
 16042 ;;  i               2   12[COMRAM] int 
 16043 ;;  c               1   11[COMRAM] unsigned char 
 16044 ;; Return value:  Size  Location     Type
 16045 ;;                  2    8[COMRAM] int 
 16046 ;; Registers used:
 16047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16048 ;; Tracked objects:
 16049 ;;		On entry : 0/0
 16050 ;;		On exit  : 0/0
 16051 ;;		Unchanged: 0/0
 16052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16053 ;;      Params:         3       0       0       0       0       0       0       0       0
 16054 ;;      Locals:         3       0       0       0       0       0       0       0       0
 16055 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16056 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16057 ;;Total ram usage:        6 bytes
 16058 ;; Hardware stack levels used: 1
 16059 ;; Hardware stack levels required when called: 3
 16060 ;; This function calls:
 16061 ;;		_fputc
 16062 ;; This function is called by:
 16063 ;;		_pad
 16064 ;; This function uses a non-reentrant model
 16065 ;;
 16066                           
 16067                           	psect	text41
 16068   006DDA                     __ptext41:
 16069                           	callstack 0
 16070   006DDA                     _fputs:
 16071                           	callstack 21
 16072   006DDA  0E00               	movlw	0
 16073   006DDC  6E0E               	movwf	(fputs@i+1)^0,c
 16074   006DDE  0E00               	movlw	0
 16075   006DE0  6E0D               	movwf	fputs@i^0,c
 16076   006DE2  EFFC  F036         	goto	l6140
 16077   006DE6                     l6136:
 16078   006DE6  C00C  F001         	movff	fputs@c,fputc@c
 16079   006DEA  6A02               	clrf	(fputc@c+1)^0,c
 16080   006DEC  C00B  F003         	movff	fputs@fp,fputc@fp
 16081   006DF0  EC5F  F033         	call	_fputc	;wreg free
 16082   006DF4  4A0D               	infsnz	fputs@i^0,f,c
 16083   006DF6  2A0E               	incf	(fputs@i+1)^0,f,c
 16084   006DF8                     l6140:
 16085   006DF8  500D               	movf	fputs@i^0,w,c
 16086   006DFA  2409               	addwf	fputs@s^0,w,c
 16087   006DFC  6ED9               	movwf	fsr2l,c
 16088   006DFE  500E               	movf	(fputs@i+1)^0,w,c
 16089   006E00  200A               	addwfc	(fputs@s+1)^0,w,c
 16090   006E02  6EDA               	movwf	fsr2h,c
 16091   006E04  50DF               	movf	indf2,w,c
 16092   006E06  6E0C               	movwf	fputs@c^0,c
 16093   006E08  500C               	movf	fputs@c^0,w,c
 16094   006E0A  A4D8               	btfss	status,2,c
 16095   006E0C  EF0A  F037         	goto	u7641
 16096   006E10  EF0C  F037         	goto	u7640
 16097   006E14                     u7641:
 16098   006E14  EFF3  F036         	goto	l6136
 16099   006E18                     u7640:
 16100   006E18  0012               	return		;funcret
 16101   006E1A                     __end_of_fputs:
 16102                           	callstack 0
 16103                           
 16104 ;; *************** function _fputc *****************
 16105 ;; Defined at:
 16106 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 16107 ;; Parameters:    Size  Location     Type
 16108 ;;  c               2    0[COMRAM] int 
 16109 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
 16110 ;;		 -> sprintf@f(11), 
 16111 ;; Auto vars:     Size  Location     Type
 16112 ;;		None
 16113 ;; Return value:  Size  Location     Type
 16114 ;;                  2    0[COMRAM] int 
 16115 ;; Registers used:
 16116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16117 ;; Tracked objects:
 16118 ;;		On entry : 0/0
 16119 ;;		On exit  : 0/0
 16120 ;;		Unchanged: 0/0
 16121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16122 ;;      Params:         3       0       0       0       0       0       0       0       0
 16123 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16124 ;;      Temps:          5       0       0       0       0       0       0       0       0
 16125 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16126 ;;Total ram usage:        8 bytes
 16127 ;; Hardware stack levels used: 1
 16128 ;; Hardware stack levels required when called: 2
 16129 ;; This function calls:
 16130 ;;		_putch
 16131 ;; This function is called by:
 16132 ;;		_pad
 16133 ;;		_stoa
 16134 ;;		_vfpfcnvrt
 16135 ;;		_fputs
 16136 ;; This function uses a non-reentrant model
 16137 ;;
 16138                           
 16139                           	psect	text42
 16140   0066BE                     __ptext42:
 16141                           	callstack 0
 16142   0066BE                     _fputc:
 16143                           	callstack 21
 16144   0066BE  5003               	movf	fputc@fp^0,w,c
 16145   0066C0  B4D8               	btfsc	status,2,c
 16146   0066C2  EF65  F033         	goto	u7211
 16147   0066C6  EF67  F033         	goto	u7210
 16148   0066CA                     u7211:
 16149   0066CA  EF6F  F033         	goto	l5930
 16150   0066CE                     u7210:
 16151   0066CE  5003               	movf	fputc@fp^0,w,c
 16152   0066D0  A4D8               	btfss	status,2,c
 16153   0066D2  EF6D  F033         	goto	u7221
 16154   0066D6  EF6F  F033         	goto	u7220
 16155   0066DA                     u7221:
 16156   0066DA  EF74  F033         	goto	l5932
 16157   0066DE                     u7220:
 16158   0066DE                     l5930:
 16159   0066DE  5001               	movf	fputc@c^0,w,c
 16160   0066E0  ECB0  F037         	call	_putch
 16161   0066E4  EFBB  F033         	goto	l1209
 16162   0066E8                     l5932:
 16163   0066E8  5003               	movf	fputc@fp^0,w,c
 16164   0066EA  6ED9               	movwf	fsr2l,c
 16165   0066EC  6ADA               	clrf	fsr2h,c
 16166   0066EE  0E09               	movlw	9
 16167   0066F0  26D9               	addwf	fsr2l,f,c
 16168   0066F2  50DE               	movf	postinc2,w,c
 16169   0066F4  10DE               	iorwf	postinc2,w,c
 16170   0066F6  B4D8               	btfsc	status,2,c
 16171   0066F8  EF80  F033         	goto	u7231
 16172   0066FC  EF82  F033         	goto	u7230
 16173   006700                     u7231:
 16174   006700  EF9B  F033         	goto	l5936
 16175   006704                     u7230:
 16176   006704  5003               	movf	fputc@fp^0,w,c
 16177   006706  6ED9               	movwf	fsr2l,c
 16178   006708  6ADA               	clrf	fsr2h,c
 16179   00670A  0E09               	movlw	9
 16180   00670C  26D9               	addwf	fsr2l,f,c
 16181   00670E  5003               	movf	fputc@fp^0,w,c
 16182   006710  6EE1               	movwf	fsr1l,c
 16183   006712  6AE2               	clrf	fsr1h,c
 16184   006714  0E02               	movlw	2
 16185   006716  26E1               	addwf	fsr1l,f,c
 16186   006718  50DE               	movf	postinc2,w,c
 16187   00671A  5CE6               	subwf	postinc1,w,c
 16188   00671C  50E6               	movf	postinc1,w,c
 16189   00671E  0A80               	xorlw	128
 16190   006720  6E08               	movwf	(??_fputc+4)^0,c
 16191   006722  50DE               	movf	postinc2,w,c
 16192   006724  0A80               	xorlw	128
 16193   006726  5808               	subwfb	(??_fputc+4)^0,w,c
 16194   006728  B0D8               	btfsc	status,0,c
 16195   00672A  EF99  F033         	goto	u7241
 16196   00672E  EF9B  F033         	goto	u7240
 16197   006732                     u7241:
 16198   006732  EFBB  F033         	goto	l1209
 16199   006736                     u7240:
 16200   006736                     l5936:
 16201   006736  5003               	movf	fputc@fp^0,w,c
 16202   006738  6ED9               	movwf	fsr2l,c
 16203   00673A  6ADA               	clrf	fsr2h,c
 16204   00673C  0E02               	movlw	2
 16205   00673E  26D9               	addwf	fsr2l,f,c
 16206   006740  CFDE F004          	movff	postinc2,??_fputc
 16207   006744  CFDD F005          	movff	postdec2,??_fputc+1
 16208   006748  5003               	movf	fputc@fp^0,w,c
 16209   00674A  6ED9               	movwf	fsr2l,c
 16210   00674C  6ADA               	clrf	fsr2h,c
 16211   00674E  CFDE F006          	movff	postinc2,??_fputc+2
 16212   006752  CFDD F007          	movff	postdec2,??_fputc+3
 16213   006756  5004               	movf	??_fputc^0,w,c
 16214   006758  2406               	addwf	(??_fputc+2)^0,w,c
 16215   00675A  6ED9               	movwf	fsr2l,c
 16216   00675C  5005               	movf	(??_fputc+1)^0,w,c
 16217   00675E  2007               	addwfc	(??_fputc+3)^0,w,c
 16218   006760  6EDA               	movwf	fsr2h,c
 16219   006762  C001  FFDF         	movff	fputc@c,indf2
 16220   006766  5003               	movf	fputc@fp^0,w,c
 16221   006768  6ED9               	movwf	fsr2l,c
 16222   00676A  6ADA               	clrf	fsr2h,c
 16223   00676C  0E02               	movlw	2
 16224   00676E  26D9               	addwf	fsr2l,f,c
 16225   006770  2ADE               	incf	postinc2,f,c
 16226   006772  0E00               	movlw	0
 16227   006774  22DD               	addwfc	postdec2,f,c
 16228   006776                     l1209:
 16229   006776  0012               	return		;funcret
 16230   006778                     __end_of_fputc:
 16231                           	callstack 0
 16232                           
 16233 ;; *************** function _putch *****************
 16234 ;; Defined at:
 16235 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 16236 ;; Parameters:    Size  Location     Type
 16237 ;;  c               1    wreg     unsigned char 
 16238 ;; Auto vars:     Size  Location     Type
 16239 ;;  c               1    0[COMRAM] unsigned char 
 16240 ;; Return value:  Size  Location     Type
 16241 ;;                  1    wreg      void 
 16242 ;; Registers used:
 16243 ;;		wreg
 16244 ;; Tracked objects:
 16245 ;;		On entry : 0/0
 16246 ;;		On exit  : 0/0
 16247 ;;		Unchanged: 0/0
 16248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16249 ;;      Params:         0       0       0       0       0       0       0       0       0
 16250 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16251 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16252 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16253 ;;Total ram usage:        0 bytes
 16254 ;; Hardware stack levels used: 1
 16255 ;; Hardware stack levels required when called: 1
 16256 ;; This function calls:
 16257 ;;		Nothing
 16258 ;; This function is called by:
 16259 ;;		_fputc
 16260 ;; This function uses a non-reentrant model
 16261 ;;
 16262                           
 16263                           	psect	text43
 16264   006F60                     __ptext43:
 16265                           	callstack 0
 16266   006F60                     _putch:
 16267                           	callstack 21
 16268   006F60  0012               	return		;funcret
 16269   006F62                     __end_of_putch:
 16270                           	callstack 0
 16271                           
 16272 ;; *************** function _abs *****************
 16273 ;; Defined at:
 16274 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 16275 ;; Parameters:    Size  Location     Type
 16276 ;;  a               2   10[COMRAM] int 
 16277 ;; Auto vars:     Size  Location     Type
 16278 ;;		None
 16279 ;; Return value:  Size  Location     Type
 16280 ;;                  2   10[COMRAM] int 
 16281 ;; Registers used:
 16282 ;;		wreg, status,2, status,0
 16283 ;; Tracked objects:
 16284 ;;		On entry : 0/0
 16285 ;;		On exit  : 0/0
 16286 ;;		Unchanged: 0/0
 16287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16288 ;;      Params:         2       0       0       0       0       0       0       0       0
 16289 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16290 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16291 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16292 ;;Total ram usage:        4 bytes
 16293 ;; Hardware stack levels used: 1
 16294 ;; Hardware stack levels required when called: 1
 16295 ;; This function calls:
 16296 ;;		Nothing
 16297 ;; This function is called by:
 16298 ;;		_dtoa
 16299 ;; This function uses a non-reentrant model
 16300 ;;
 16301                           
 16302                           	psect	text44
 16303   006EC2                     __ptext44:
 16304                           	callstack 0
 16305   006EC2                     _abs:
 16306                           	callstack 24
 16307   006EC2  BE0C               	btfsc	(abs@a+1)^0,7,c
 16308   006EC4  EF66  F037         	goto	u8441
 16309   006EC8  EF68  F037         	goto	u8440
 16310   006ECC                     u8441:
 16311   006ECC  EF6E  F037         	goto	l1168
 16312   006ED0                     u8440:
 16313   006ED0  C00B  F00B         	movff	abs@a,?_abs
 16314   006ED4  C00C  F00C         	movff	abs@a+1,?_abs+1
 16315   006ED8  EF7A  F037         	goto	l1171
 16316   006EDC                     l1168:
 16317   006EDC  C00B  F00D         	movff	abs@a,??_abs
 16318   006EE0  C00C  F00E         	movff	abs@a+1,??_abs+1
 16319   006EE4  1E0D               	comf	??_abs^0,f,c
 16320   006EE6  1E0E               	comf	(??_abs+1)^0,f,c
 16321   006EE8  4A0D               	infsnz	??_abs^0,f,c
 16322   006EEA  2A0E               	incf	(??_abs+1)^0,f,c
 16323   006EEC  C00D  F00B         	movff	??_abs,?_abs
 16324   006EF0  C00E  F00C         	movff	??_abs+1,?_abs+1
 16325   006EF4                     l1171:
 16326   006EF4  0012               	return		;funcret
 16327   006EF6                     __end_of_abs:
 16328                           	callstack 0
 16329                           
 16330 ;; *************** function ___almod *****************
 16331 ;; Defined at:
 16332 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
 16333 ;; Parameters:    Size  Location     Type
 16334 ;;  dividend        4    0[COMRAM] long 
 16335 ;;  divisor         4    4[COMRAM] long 
 16336 ;; Auto vars:     Size  Location     Type
 16337 ;;  sign            1    9[COMRAM] unsigned char 
 16338 ;;  counter         1    8[COMRAM] unsigned char 
 16339 ;; Return value:  Size  Location     Type
 16340 ;;                  4    0[COMRAM] long 
 16341 ;; Registers used:
 16342 ;;		wreg, status,2, status,0
 16343 ;; Tracked objects:
 16344 ;;		On entry : 0/0
 16345 ;;		On exit  : 0/0
 16346 ;;		Unchanged: 0/0
 16347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16348 ;;      Params:         8       0       0       0       0       0       0       0       0
 16349 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16350 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16351 ;;      Totals:        10       0       0       0       0       0       0       0       0
 16352 ;;Total ram usage:       10 bytes
 16353 ;; Hardware stack levels used: 1
 16354 ;; Hardware stack levels required when called: 1
 16355 ;; This function calls:
 16356 ;;		Nothing
 16357 ;; This function is called by:
 16358 ;;		_dtoa
 16359 ;; This function uses a non-reentrant model
 16360 ;;
 16361                           
 16362                           	psect	text45
 16363   006404                     __ptext45:
 16364                           	callstack 0
 16365   006404                     ___almod:
 16366                           	callstack 24
 16367   006404  6A0A               	clrf	___almod@sign^0,c
 16368   006406  BE04               	btfsc	(___almod@dividend+3)^0,7,c
 16369   006408  EF0A  F032         	goto	u7750
 16370   00640C  EF08  F032         	goto	u7751
 16371   006410                     u7751:
 16372   006410  EF14  F032         	goto	l6220
 16373   006414                     u7750:
 16374   006414  1E04               	comf	(___almod@dividend+3)^0,f,c
 16375   006416  1E03               	comf	(___almod@dividend+2)^0,f,c
 16376   006418  1E02               	comf	(___almod@dividend+1)^0,f,c
 16377   00641A  6C01               	negf	___almod@dividend^0,c
 16378   00641C  0E00               	movlw	0
 16379   00641E  2202               	addwfc	(___almod@dividend+1)^0,f,c
 16380   006420  2203               	addwfc	(___almod@dividend+2)^0,f,c
 16381   006422  2204               	addwfc	(___almod@dividend+3)^0,f,c
 16382   006424  0E01               	movlw	1
 16383   006426  6E0A               	movwf	___almod@sign^0,c
 16384   006428                     l6220:
 16385   006428  BE08               	btfsc	(___almod@divisor+3)^0,7,c
 16386   00642A  EF1B  F032         	goto	u7760
 16387   00642E  EF19  F032         	goto	u7761
 16388   006432                     u7761:
 16389   006432  EF23  F032         	goto	l6224
 16390   006436                     u7760:
 16391   006436  1E08               	comf	(___almod@divisor+3)^0,f,c
 16392   006438  1E07               	comf	(___almod@divisor+2)^0,f,c
 16393   00643A  1E06               	comf	(___almod@divisor+1)^0,f,c
 16394   00643C  6C05               	negf	___almod@divisor^0,c
 16395   00643E  0E00               	movlw	0
 16396   006440  2206               	addwfc	(___almod@divisor+1)^0,f,c
 16397   006442  2207               	addwfc	(___almod@divisor+2)^0,f,c
 16398   006444  2208               	addwfc	(___almod@divisor+3)^0,f,c
 16399   006446                     l6224:
 16400   006446  5005               	movf	___almod@divisor^0,w,c
 16401   006448  1006               	iorwf	(___almod@divisor+1)^0,w,c
 16402   00644A  1007               	iorwf	(___almod@divisor+2)^0,w,c
 16403   00644C  1008               	iorwf	(___almod@divisor+3)^0,w,c
 16404   00644E  B4D8               	btfsc	status,2,c
 16405   006450  EF2C  F032         	goto	u7771
 16406   006454  EF2E  F032         	goto	u7770
 16407   006458                     u7771:
 16408   006458  EF5E  F032         	goto	l6240
 16409   00645C                     u7770:
 16410   00645C  0E01               	movlw	1
 16411   00645E  6E09               	movwf	___almod@counter^0,c
 16412   006460  EF38  F032         	goto	l6230
 16413   006464                     l6228:
 16414   006464  90D8               	bcf	status,0,c
 16415   006466  3605               	rlcf	___almod@divisor^0,f,c
 16416   006468  3606               	rlcf	(___almod@divisor+1)^0,f,c
 16417   00646A  3607               	rlcf	(___almod@divisor+2)^0,f,c
 16418   00646C  3608               	rlcf	(___almod@divisor+3)^0,f,c
 16419   00646E  2A09               	incf	___almod@counter^0,f,c
 16420   006470                     l6230:
 16421   006470  AE08               	btfss	(___almod@divisor+3)^0,7,c
 16422   006472  EF3D  F032         	goto	u7781
 16423   006476  EF3F  F032         	goto	u7780
 16424   00647A                     u7781:
 16425   00647A  EF32  F032         	goto	l6228
 16426   00647E                     u7780:
 16427   00647E                     l6232:
 16428   00647E  5005               	movf	___almod@divisor^0,w,c
 16429   006480  5C01               	subwf	___almod@dividend^0,w,c
 16430   006482  5006               	movf	(___almod@divisor+1)^0,w,c
 16431   006484  5802               	subwfb	(___almod@dividend+1)^0,w,c
 16432   006486  5007               	movf	(___almod@divisor+2)^0,w,c
 16433   006488  5803               	subwfb	(___almod@dividend+2)^0,w,c
 16434   00648A  5008               	movf	(___almod@divisor+3)^0,w,c
 16435   00648C  5804               	subwfb	(___almod@dividend+3)^0,w,c
 16436   00648E  A0D8               	btfss	status,0,c
 16437   006490  EF4C  F032         	goto	u7791
 16438   006494  EF4E  F032         	goto	u7790
 16439   006498                     u7791:
 16440   006498  EF56  F032         	goto	l6236
 16441   00649C                     u7790:
 16442   00649C  5005               	movf	___almod@divisor^0,w,c
 16443   00649E  5E01               	subwf	___almod@dividend^0,f,c
 16444   0064A0  5006               	movf	(___almod@divisor+1)^0,w,c
 16445   0064A2  5A02               	subwfb	(___almod@dividend+1)^0,f,c
 16446   0064A4  5007               	movf	(___almod@divisor+2)^0,w,c
 16447   0064A6  5A03               	subwfb	(___almod@dividend+2)^0,f,c
 16448   0064A8  5008               	movf	(___almod@divisor+3)^0,w,c
 16449   0064AA  5A04               	subwfb	(___almod@dividend+3)^0,f,c
 16450   0064AC                     l6236:
 16451   0064AC  90D8               	bcf	status,0,c
 16452   0064AE  3208               	rrcf	(___almod@divisor+3)^0,f,c
 16453   0064B0  3207               	rrcf	(___almod@divisor+2)^0,f,c
 16454   0064B2  3206               	rrcf	(___almod@divisor+1)^0,f,c
 16455   0064B4  3205               	rrcf	___almod@divisor^0,f,c
 16456   0064B6  2E09               	decfsz	___almod@counter^0,f,c
 16457   0064B8  EF3F  F032         	goto	l6232
 16458   0064BC                     l6240:
 16459   0064BC  500A               	movf	___almod@sign^0,w,c
 16460   0064BE  B4D8               	btfsc	status,2,c
 16461   0064C0  EF64  F032         	goto	u7801
 16462   0064C4  EF66  F032         	goto	u7800
 16463   0064C8                     u7801:
 16464   0064C8  EF6E  F032         	goto	l6244
 16465   0064CC                     u7800:
 16466   0064CC  1E04               	comf	(___almod@dividend+3)^0,f,c
 16467   0064CE  1E03               	comf	(___almod@dividend+2)^0,f,c
 16468   0064D0  1E02               	comf	(___almod@dividend+1)^0,f,c
 16469   0064D2  6C01               	negf	___almod@dividend^0,c
 16470   0064D4  0E00               	movlw	0
 16471   0064D6  2202               	addwfc	(___almod@dividend+1)^0,f,c
 16472   0064D8  2203               	addwfc	(___almod@dividend+2)^0,f,c
 16473   0064DA  2204               	addwfc	(___almod@dividend+3)^0,f,c
 16474   0064DC                     l6244:
 16475   0064DC  C001  F001         	movff	___almod@dividend,?___almod
 16476   0064E0  C002  F002         	movff	___almod@dividend+1,?___almod+1
 16477   0064E4  C003  F003         	movff	___almod@dividend+2,?___almod+2
 16478   0064E8  C004  F004         	movff	___almod@dividend+3,?___almod+3
 16479   0064EC  0012               	return		;funcret
 16480   0064EE                     __end_of___almod:
 16481                           	callstack 0
 16482                           
 16483 ;; *************** function ___aldiv *****************
 16484 ;; Defined at:
 16485 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
 16486 ;; Parameters:    Size  Location     Type
 16487 ;;  dividend        4    0[COMRAM] long 
 16488 ;;  divisor         4    4[COMRAM] long 
 16489 ;; Auto vars:     Size  Location     Type
 16490 ;;  quotient        4   10[COMRAM] long 
 16491 ;;  sign            1    9[COMRAM] unsigned char 
 16492 ;;  counter         1    8[COMRAM] unsigned char 
 16493 ;; Return value:  Size  Location     Type
 16494 ;;                  4    0[COMRAM] long 
 16495 ;; Registers used:
 16496 ;;		wreg, status,2, status,0
 16497 ;; Tracked objects:
 16498 ;;		On entry : 0/0
 16499 ;;		On exit  : 0/0
 16500 ;;		Unchanged: 0/0
 16501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16502 ;;      Params:         8       0       0       0       0       0       0       0       0
 16503 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16504 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16505 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16506 ;;Total ram usage:       14 bytes
 16507 ;; Hardware stack levels used: 1
 16508 ;; Hardware stack levels required when called: 1
 16509 ;; This function calls:
 16510 ;;		Nothing
 16511 ;; This function is called by:
 16512 ;;		_dtoa
 16513 ;; This function uses a non-reentrant model
 16514 ;;
 16515                           
 16516                           	psect	text46
 16517   005DEC                     __ptext46:
 16518                           	callstack 0
 16519   005DEC                     ___aldiv:
 16520                           	callstack 24
 16521   005DEC  6A0A               	clrf	___aldiv@sign^0,c
 16522   005DEE  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 16523   005DF0  EFFE  F02E         	goto	u7690
 16524   005DF4  EFFC  F02E         	goto	u7691
 16525   005DF8                     u7691:
 16526   005DF8  EF08  F02F         	goto	l6176
 16527   005DFC                     u7690:
 16528   005DFC  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 16529   005DFE  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 16530   005E00  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 16531   005E02  6C05               	negf	___aldiv@divisor^0,c
 16532   005E04  0E00               	movlw	0
 16533   005E06  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 16534   005E08  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 16535   005E0A  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 16536   005E0C  0E01               	movlw	1
 16537   005E0E  6E0A               	movwf	___aldiv@sign^0,c
 16538   005E10                     l6176:
 16539   005E10  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 16540   005E12  EF0F  F02F         	goto	u7700
 16541   005E16  EF0D  F02F         	goto	u7701
 16542   005E1A                     u7701:
 16543   005E1A  EF19  F02F         	goto	l6182
 16544   005E1E                     u7700:
 16545   005E1E  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 16546   005E20  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 16547   005E22  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 16548   005E24  6C01               	negf	___aldiv@dividend^0,c
 16549   005E26  0E00               	movlw	0
 16550   005E28  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 16551   005E2A  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 16552   005E2C  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 16553   005E2E  0E01               	movlw	1
 16554   005E30  1A0A               	xorwf	___aldiv@sign^0,f,c
 16555   005E32                     l6182:
 16556   005E32  0E00               	movlw	0
 16557   005E34  6E0B               	movwf	___aldiv@quotient^0,c
 16558   005E36  0E00               	movlw	0
 16559   005E38  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 16560   005E3A  0E00               	movlw	0
 16561   005E3C  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 16562   005E3E  0E00               	movlw	0
 16563   005E40  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 16564   005E42  5005               	movf	___aldiv@divisor^0,w,c
 16565   005E44  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 16566   005E46  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 16567   005E48  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 16568   005E4A  B4D8               	btfsc	status,2,c
 16569   005E4C  EF2A  F02F         	goto	u7711
 16570   005E50  EF2C  F02F         	goto	u7710
 16571   005E54                     u7711:
 16572   005E54  EF62  F02F         	goto	l6204
 16573   005E58                     u7710:
 16574   005E58  0E01               	movlw	1
 16575   005E5A  6E09               	movwf	___aldiv@counter^0,c
 16576   005E5C  EF36  F02F         	goto	l6190
 16577   005E60                     l6188:
 16578   005E60  90D8               	bcf	status,0,c
 16579   005E62  3605               	rlcf	___aldiv@divisor^0,f,c
 16580   005E64  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 16581   005E66  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 16582   005E68  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 16583   005E6A  2A09               	incf	___aldiv@counter^0,f,c
 16584   005E6C                     l6190:
 16585   005E6C  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 16586   005E6E  EF3B  F02F         	goto	u7721
 16587   005E72  EF3D  F02F         	goto	u7720
 16588   005E76                     u7721:
 16589   005E76  EF30  F02F         	goto	l6188
 16590   005E7A                     u7720:
 16591   005E7A                     l6192:
 16592   005E7A  90D8               	bcf	status,0,c
 16593   005E7C  360B               	rlcf	___aldiv@quotient^0,f,c
 16594   005E7E  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 16595   005E80  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 16596   005E82  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 16597   005E84  5005               	movf	___aldiv@divisor^0,w,c
 16598   005E86  5C01               	subwf	___aldiv@dividend^0,w,c
 16599   005E88  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16600   005E8A  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 16601   005E8C  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16602   005E8E  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 16603   005E90  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16604   005E92  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 16605   005E94  A0D8               	btfss	status,0,c
 16606   005E96  EF4F  F02F         	goto	u7731
 16607   005E9A  EF51  F02F         	goto	u7730
 16608   005E9E                     u7731:
 16609   005E9E  EF5A  F02F         	goto	l6200
 16610   005EA2                     u7730:
 16611   005EA2  5005               	movf	___aldiv@divisor^0,w,c
 16612   005EA4  5E01               	subwf	___aldiv@dividend^0,f,c
 16613   005EA6  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16614   005EA8  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 16615   005EAA  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16616   005EAC  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 16617   005EAE  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16618   005EB0  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 16619   005EB2  800B               	bsf	___aldiv@quotient^0,0,c
 16620   005EB4                     l6200:
 16621   005EB4  90D8               	bcf	status,0,c
 16622   005EB6  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 16623   005EB8  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 16624   005EBA  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 16625   005EBC  3205               	rrcf	___aldiv@divisor^0,f,c
 16626   005EBE  2E09               	decfsz	___aldiv@counter^0,f,c
 16627   005EC0  EF3D  F02F         	goto	l6192
 16628   005EC4                     l6204:
 16629   005EC4  500A               	movf	___aldiv@sign^0,w,c
 16630   005EC6  B4D8               	btfsc	status,2,c
 16631   005EC8  EF68  F02F         	goto	u7741
 16632   005ECC  EF6A  F02F         	goto	u7740
 16633   005ED0                     u7741:
 16634   005ED0  EF72  F02F         	goto	l6208
 16635   005ED4                     u7740:
 16636   005ED4  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 16637   005ED6  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 16638   005ED8  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 16639   005EDA  6C0B               	negf	___aldiv@quotient^0,c
 16640   005EDC  0E00               	movlw	0
 16641   005EDE  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 16642   005EE0  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 16643   005EE2  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 16644   005EE4                     l6208:
 16645   005EE4  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 16646   005EE8  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 16647   005EEC  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 16648   005EF0  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 16649   005EF4  0012               	return		;funcret
 16650   005EF6                     __end_of___aldiv:
 16651                           	callstack 0
 16652                           
 16653 ;; *************** function _Handle_Commands *****************
 16654 ;; Defined at:
 16655 ;;		line 168 in file "newmain.c"
 16656 ;; Parameters:    Size  Location     Type
 16657 ;;		None
 16658 ;; Auto vars:     Size  Location     Type
 16659 ;;  cmd             1    4[COMRAM] unsigned char 
 16660 ;; Return value:  Size  Location     Type
 16661 ;;                  1    wreg      void 
 16662 ;; Registers used:
 16663 ;;		wreg, status,2, status,0
 16664 ;; Tracked objects:
 16665 ;;		On entry : 0/0
 16666 ;;		On exit  : 0/0
 16667 ;;		Unchanged: 0/0
 16668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16669 ;;      Params:         0       0       0       0       0       0       0       0       0
 16670 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16671 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16672 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16673 ;;Total ram usage:        5 bytes
 16674 ;; Hardware stack levels used: 1
 16675 ;; Hardware stack levels required when called: 1
 16676 ;; This function calls:
 16677 ;;		Nothing
 16678 ;; This function is called by:
 16679 ;;		_main
 16680 ;; This function uses a non-reentrant model
 16681 ;;
 16682                           
 16683                           	psect	text47
 16684   005A0E                     __ptext47:
 16685                           	callstack 0
 16686   005A0E                     _Handle_Commands:
 16687                           	callstack 29
 16688   005A0E                     
 16689                           ;newmain.c: 169:     if(PIR1bits.RCIF) {
 16690   005A0E  AA9E               	btfss	158,5,c	;volatile
 16691   005A10  EF0C  F02D         	goto	u10241
 16692   005A14  EF0E  F02D         	goto	u10240
 16693   005A18                     u10241:
 16694   005A18  EF61  F02D         	goto	l7844
 16695   005A1C                     u10240:
 16696   005A1C                     
 16697                           ;newmain.c: 170:         char cmd = RCREG;
 16698   005A1C  CFAE F005          	movff	4014,Handle_Commands@cmd	;volatile
 16699                           
 16700                           ;newmain.c: 171:         switch(cmd) {
 16701   005A20  EF4E  F02D         	goto	l7842
 16702   005A24                     l7828:
 16703                           
 16704                           ;newmain.c: 173:                 if(!trigger_test) {
 16705   005A24  505E               	movf	_trigger_test^0,w,c
 16706   005A26  A4D8               	btfss	status,2,c
 16707   005A28  EF18  F02D         	goto	u10251
 16708   005A2C  EF1A  F02D         	goto	u10250
 16709   005A30                     u10251:
 16710   005A30  EF61  F02D         	goto	l7844
 16711   005A34                     u10250:
 16712   005A34                     
 16713                           ;newmain.c: 174:                     trigger_test = 1;
 16714   005A34  0E01               	movlw	1
 16715   005A36  6E5E               	movwf	_trigger_test^0,c
 16716   005A38                     
 16717                           ;newmain.c: 175:                     test_start_time = system_millis;
 16718   005A38  C2FA  F34C         	movff	_system_millis,_test_start_time
 16719   005A3C  C2FB  F34D         	movff	_system_millis+1,_test_start_time+1
 16720   005A40  C2FC  F34E         	movff	_system_millis+2,_test_start_time+2
 16721   005A44  C2FD  F34F         	movff	_system_millis+3,_test_start_time+3
 16722   005A48                     
 16723                           ;newmain.c: 176:                     test_start_flow = total_flow;
 16724   005A48  C350  F334         	movff	_total_flow,_test_start_flow
 16725   005A4C  C351  F335         	movff	_total_flow+1,_test_start_flow+1
 16726   005A50  C352  F336         	movff	_total_flow+2,_test_start_flow+2
 16727   005A54  C353  F337         	movff	_total_flow+3,_test_start_flow+3
 16728   005A58  EF61  F02D         	goto	l7844
 16729   005A5C                     l7836:
 16730                           
 16731                           ;newmain.c: 181:                 shutdown_system = 1;
 16732   005A5C  0E01               	movlw	1
 16733   005A5E  0103               	movlb	3	; () banked
 16734   005A60  6F73               	movwf	_shutdown_system& (0+255),b
 16735                           
 16736                           ;newmain.c: 182:                 break;
 16737   005A62  EF61  F02D         	goto	l7844
 16738   005A66                     l170:
 16739                           
 16740                           ;newmain.c: 185:                 shutdown_system = 0;
 16741   005A66  0103               	movlb	3	; () banked
 16742   005A68  6B73               	clrf	_shutdown_system& (0+255),b
 16743                           
 16744                           ;newmain.c: 186:                 break;
 16745   005A6A  EF61  F02D         	goto	l7844
 16746   005A6E                     l7838:
 16747                           
 16748                           ;newmain.c: 190:                 total_flow = 0.0;
 16749   005A6E  0E00               	movlw	0
 16750   005A70  0103               	movlb	3	; () banked
 16751   005A72  6F50               	movwf	_total_flow& (0+255),b
 16752   005A74  0E00               	movlw	0
 16753   005A76  6F51               	movwf	(_total_flow+1)& (0+255),b
 16754   005A78  0E00               	movlw	0
 16755   005A7A  6F52               	movwf	(_total_flow+2)& (0+255),b
 16756   005A7C  0E00               	movlw	0
 16757   005A7E  6F53               	movwf	(_total_flow+3)& (0+255),b
 16758                           
 16759                           ;newmain.c: 191:                 pulse_count = 0;
 16760   005A80  0E00               	movlw	0
 16761   005A82  6F6F               	movwf	(_pulse_count+1)& (0+255),b	;volatile
 16762   005A84  0E00               	movlw	0
 16763   005A86  6F6E               	movwf	_pulse_count& (0+255),b	;volatile
 16764                           
 16765                           ;newmain.c: 192:                 flow_rate = 0.0;
 16766   005A88  0E00               	movlw	0
 16767   005A8A  6F54               	movwf	_flow_rate& (0+255),b
 16768   005A8C  0E00               	movlw	0
 16769   005A8E  6F55               	movwf	(_flow_rate+1)& (0+255),b
 16770   005A90  0E00               	movlw	0
 16771   005A92  6F56               	movwf	(_flow_rate+2)& (0+255),b
 16772   005A94  0E00               	movlw	0
 16773   005A96  6F57               	movwf	(_flow_rate+3)& (0+255),b
 16774                           
 16775                           ;newmain.c: 193:                 break;
 16776   005A98  EF61  F02D         	goto	l7844
 16777   005A9C                     l7842:
 16778   005A9C  5005               	movf	Handle_Commands@cmd^0,w,c
 16779                           
 16780                           ; Switch size 1, requested type "simple"
 16781                           ; Number of cases is 4, Range of values is 70 to 84
 16782                           ; switch strategies available:
 16783                           ; Name         Instructions Cycles
 16784                           ; simple_byte           13     7 (average)
 16785                           ;	Chosen strategy is simple_byte
 16786   005A9E  0A46               	xorlw	70	; case 70
 16787   005AA0  B4D8               	btfsc	status,2,c
 16788   005AA2  EF37  F02D         	goto	l7838
 16789   005AA6  0A14               	xorlw	20	; case 82
 16790   005AA8  B4D8               	btfsc	status,2,c
 16791   005AAA  EF33  F02D         	goto	l170
 16792   005AAE  0A01               	xorlw	1	; case 83
 16793   005AB0  B4D8               	btfsc	status,2,c
 16794   005AB2  EF2E  F02D         	goto	l7836
 16795   005AB6  0A07               	xorlw	7	; case 84
 16796   005AB8  B4D8               	btfsc	status,2,c
 16797   005ABA  EF12  F02D         	goto	l7828
 16798   005ABE  EF61  F02D         	goto	l7844
 16799   005AC2                     l7844:
 16800                           
 16801                           ;newmain.c: 198:     if(trigger_test) {
 16802   005AC2  505E               	movf	_trigger_test^0,w,c
 16803   005AC4  B4D8               	btfsc	status,2,c
 16804   005AC6  EF67  F02D         	goto	u10261
 16805   005ACA  EF69  F02D         	goto	u10260
 16806   005ACE                     u10261:
 16807   005ACE  EFD1  F02D         	goto	l177
 16808   005AD2                     u10260:
 16809   005AD2                     
 16810                           ;newmain.c: 199:         PORTBbits.RB0 = 1;
 16811   005AD2  8081               	bsf	129,0,c	;volatile
 16812   005AD4                     
 16813                           ;newmain.c: 200:         pump_active = 1;
 16814   005AD4  0E01               	movlw	1
 16815   005AD6  0103               	movlb	3	; () banked
 16816   005AD8  6F78               	movwf	_pump_active& (0+255),b
 16817   005ADA                     
 16818                           ; BSR set to: 3
 16819                           ;newmain.c: 203:         static unsigned long last_blink = 0;;newmain.c: 204:         if
      +                          (system_millis - last_blink >= 500) {
 16820   005ADA  5130               	movf	Handle_Commands@last_blink& (0+255),w,b
 16821   005ADC  0102               	movlb	2	; () banked
 16822   005ADE  5DFA               	subwf	_system_millis& (0+255),w,b
 16823   005AE0  6E01               	movwf	??_Handle_Commands^0,c
 16824   005AE2  0103               	movlb	3	; () banked
 16825   005AE4  5131               	movf	(Handle_Commands@last_blink+1)& (0+255),w,b
 16826   005AE6  0102               	movlb	2	; () banked
 16827   005AE8  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
 16828   005AEA  6E02               	movwf	(??_Handle_Commands+1)^0,c
 16829   005AEC  0103               	movlb	3	; () banked
 16830   005AEE  5132               	movf	(Handle_Commands@last_blink+2)& (0+255),w,b
 16831   005AF0  0102               	movlb	2	; () banked
 16832   005AF2  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
 16833   005AF4  6E03               	movwf	(??_Handle_Commands+2)^0,c
 16834   005AF6  0103               	movlb	3	; () banked
 16835   005AF8  5133               	movf	(Handle_Commands@last_blink+3)& (0+255),w,b
 16836   005AFA  0102               	movlb	2	; () banked
 16837   005AFC  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
 16838   005AFE  6E04               	movwf	(??_Handle_Commands+3)^0,c
 16839   005B00  5004               	movf	(??_Handle_Commands+3)^0,w,c
 16840   005B02  1003               	iorwf	(??_Handle_Commands+2)^0,w,c
 16841   005B04  E10B               	bnz	u10270
 16842   005B06  0EF4               	movlw	244
 16843   005B08  5C01               	subwf	??_Handle_Commands^0,w,c
 16844   005B0A  0E01               	movlw	1
 16845   005B0C  5802               	subwfb	(??_Handle_Commands+1)^0,w,c
 16846   005B0E  A0D8               	btfss	status,0,c
 16847   005B10  EF8C  F02D         	goto	u10271
 16848   005B14  EF8E  F02D         	goto	u10270
 16849   005B18                     u10271:
 16850   005B18  EFA7  F02D         	goto	l7856
 16851   005B1C                     u10270:
 16852   005B1C                     
 16853                           ; BSR set to: 2
 16854                           ;newmain.c: 205:             PORTBbits.RB5 = !PORTBbits.RB5;
 16855   005B1C  AA81               	btfss	129,5,c	;volatile
 16856   005B1E  EF93  F02D         	goto	u10281
 16857   005B22  EF97  F02D         	goto	u10280
 16858   005B26                     u10281:
 16859   005B26  6A01               	clrf	??_Handle_Commands^0,c
 16860   005B28  2A01               	incf	??_Handle_Commands^0,f,c
 16861   005B2A  EF98  F02D         	goto	u10298
 16862   005B2E                     u10280:
 16863   005B2E  6A01               	clrf	??_Handle_Commands^0,c
 16864   005B30                     u10298:
 16865   005B30  3A01               	swapf	??_Handle_Commands^0,f,c
 16866   005B32  4601               	rlncf	??_Handle_Commands^0,f,c
 16867   005B34  5081               	movf	129,w,c	;volatile
 16868   005B36  1801               	xorwf	??_Handle_Commands^0,w,c
 16869   005B38  0BDF               	andlw	-33
 16870   005B3A  1801               	xorwf	??_Handle_Commands^0,w,c
 16871   005B3C  6E81               	movwf	129,c	;volatile
 16872   005B3E                     
 16873                           ;newmain.c: 206:             last_blink = system_millis;
 16874   005B3E  C2FA  F330         	movff	_system_millis,Handle_Commands@last_blink
 16875   005B42  C2FB  F331         	movff	_system_millis+1,Handle_Commands@last_blink+1
 16876   005B46  C2FC  F332         	movff	_system_millis+2,Handle_Commands@last_blink+2
 16877   005B4A  C2FD  F333         	movff	_system_millis+3,Handle_Commands@last_blink+3
 16878   005B4E                     l7856:
 16879                           
 16880                           ;newmain.c: 208:         alarm_active = 1;
 16881   005B4E  0E01               	movlw	1
 16882   005B50  0103               	movlb	3	; () banked
 16883   005B52  6F77               	movwf	_alarm_active& (0+255),b
 16884   005B54                     
 16885                           ; BSR set to: 3
 16886                           ;newmain.c: 211:         if((system_millis - test_start_time) >= TEST_DURATION) {
 16887   005B54  514C               	movf	_test_start_time& (0+255),w,b
 16888   005B56  0102               	movlb	2	; () banked
 16889   005B58  5DFA               	subwf	_system_millis& (0+255),w,b
 16890   005B5A  6E01               	movwf	??_Handle_Commands^0,c
 16891   005B5C  0103               	movlb	3	; () banked
 16892   005B5E  514D               	movf	(_test_start_time+1)& (0+255),w,b
 16893   005B60  0102               	movlb	2	; () banked
 16894   005B62  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
 16895   005B64  6E02               	movwf	(??_Handle_Commands+1)^0,c
 16896   005B66  0103               	movlb	3	; () banked
 16897   005B68  514E               	movf	(_test_start_time+2)& (0+255),w,b
 16898   005B6A  0102               	movlb	2	; () banked
 16899   005B6C  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
 16900   005B6E  6E03               	movwf	(??_Handle_Commands+2)^0,c
 16901   005B70  0103               	movlb	3	; () banked
 16902   005B72  514F               	movf	(_test_start_time+3)& (0+255),w,b
 16903   005B74  0102               	movlb	2	; () banked
 16904   005B76  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
 16905   005B78  6E04               	movwf	(??_Handle_Commands+3)^0,c
 16906   005B7A  5004               	movf	(??_Handle_Commands+3)^0,w,c
 16907   005B7C  1003               	iorwf	(??_Handle_Commands+2)^0,w,c
 16908   005B7E  E10B               	bnz	u10300
 16909   005B80  0E05               	movlw	5
 16910   005B82  5C01               	subwf	??_Handle_Commands^0,w,c
 16911   005B84  0E0D               	movlw	13
 16912   005B86  5802               	subwfb	(??_Handle_Commands+1)^0,w,c
 16913   005B88  A0D8               	btfss	status,0,c
 16914   005B8A  EFC9  F02D         	goto	u10301
 16915   005B8E  EFCB  F02D         	goto	u10300
 16916   005B92                     u10301:
 16917   005B92  EFD1  F02D         	goto	l177
 16918   005B96                     u10300:
 16919   005B96                     
 16920                           ; BSR set to: 2
 16921                           ;newmain.c: 212:             trigger_test = 0;
 16922   005B96  6A5E               	clrf	_trigger_test^0,c
 16923                           
 16924                           ;newmain.c: 213:             PORTBbits.RB0 = 0;
 16925   005B98  9081               	bcf	129,0,c	;volatile
 16926                           
 16927                           ;newmain.c: 214:             PORTBbits.RB5 = 1;
 16928   005B9A  8A81               	bsf	129,5,c	;volatile
 16929                           
 16930                           ;newmain.c: 215:             pump_active = 0;
 16931   005B9C  0103               	movlb	3	; () banked
 16932   005B9E  6B78               	clrf	_pump_active& (0+255),b
 16933                           
 16934                           ;newmain.c: 216:             alarm_active = 0;
 16935   005BA0  6B77               	clrf	_alarm_active& (0+255),b
 16936   005BA2                     l177:
 16937   005BA2  0012               	return		;funcret
 16938   005BA4                     __end_of_Handle_Commands:
 16939                           	callstack 0
 16940                           
 16941 ;; *************** function _ADC_Init *****************
 16942 ;; Defined at:
 16943 ;;		line 444 in file "newmain.c"
 16944 ;; Parameters:    Size  Location     Type
 16945 ;;		None
 16946 ;; Auto vars:     Size  Location     Type
 16947 ;;		None
 16948 ;; Return value:  Size  Location     Type
 16949 ;;                  1    wreg      void 
 16950 ;; Registers used:
 16951 ;;		wreg, status,2
 16952 ;; Tracked objects:
 16953 ;;		On entry : 0/0
 16954 ;;		On exit  : 0/0
 16955 ;;		Unchanged: 0/0
 16956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16957 ;;      Params:         0       0       0       0       0       0       0       0       0
 16958 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16959 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16960 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16961 ;;Total ram usage:        0 bytes
 16962 ;; Hardware stack levels used: 1
 16963 ;; Hardware stack levels required when called: 1
 16964 ;; This function calls:
 16965 ;;		Nothing
 16966 ;; This function is called by:
 16967 ;;		_main
 16968 ;; This function uses a non-reentrant model
 16969 ;;
 16970                           
 16971                           	psect	text48
 16972   006F3E                     __ptext48:
 16973                           	callstack 0
 16974   006F3E                     _ADC_Init:
 16975                           	callstack 29
 16976   006F3E                     
 16977                           ;newmain.c: 445:     TRISA0 = TRISA1 = TRISA2 = 1;
 16978   006F3E  8492               	bsf	3986,2,c	;volatile
 16979   006F40  8292               	bsf	3986,1,c	;volatile
 16980   006F42  8092               	bsf	3986,0,c	;volatile
 16981                           
 16982                           ;newmain.c: 446:     ADCON0bits.ADON = 1;
 16983   006F44  80C2               	bsf	194,0,c	;volatile
 16984   006F46                     
 16985                           ;newmain.c: 447:     ADCON1 = 0x0C;
 16986   006F46  0E0C               	movlw	12
 16987   006F48  6EC1               	movwf	193,c	;volatile
 16988                           
 16989                           ;newmain.c: 448:     ADCON2 = 0xBE;
 16990   006F4A  0EBE               	movlw	190
 16991   006F4C  6EC0               	movwf	192,c	;volatile
 16992   006F4E  0012               	return		;funcret
 16993   006F50                     __end_of_ADC_Init:
 16994                           	callstack 0
 16995                           
 16996 ;; *************** function _HighISR *****************
 16997 ;; Defined at:
 16998 ;;		line 100 in file "newmain.c"
 16999 ;; Parameters:    Size  Location     Type
 17000 ;;		None
 17001 ;; Auto vars:     Size  Location     Type
 17002 ;;		None
 17003 ;; Return value:  Size  Location     Type
 17004 ;;                  1    wreg      void 
 17005 ;; Registers used:
 17006 ;;		status,2, status,0
 17007 ;; Tracked objects:
 17008 ;;		On entry : 0/0
 17009 ;;		On exit  : 0/0
 17010 ;;		Unchanged: 0/0
 17011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17012 ;;      Params:         0       0       0       0       0       0       0       0       0
 17013 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17014 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17015 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17016 ;;Total ram usage:        0 bytes
 17017 ;; Hardware stack levels used: 1
 17018 ;; This function calls:
 17019 ;;		Nothing
 17020 ;; This function is called by:
 17021 ;;		Interrupt level 2
 17022 ;; This function uses a non-reentrant model
 17023 ;;
 17024                           
 17025                           	psect	intcode
 17026   000008                     __pintcode:
 17027                           	callstack 0
 17028   000008                     _HighISR:
 17029                           	callstack 20
 17030                           
 17031                           ;incstack = 0
 17032   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17033   00000A  ED7B  F037         	call	int_func,f	;refresh shadow registers
 17034                           
 17035                           	psect	intcode_body
 17036   006EF6                     __pintcode_body:
 17037                           	callstack 20
 17038   006EF6                     int_func:
 17039                           	callstack 20
 17040   006EF6  0006               	pop		; remove dummy address from shadow register refresh
 17041   006EF8                     
 17042                           ;newmain.c: 101:     if (INTCON3bits.INT1IF) {
 17043   006EF8  A0F0               	btfss	240,0,c	;volatile
 17044   006EFA  EF81  F037         	goto	i2u715_41
 17045   006EFE  EF83  F037         	goto	i2u715_40
 17046   006F02                     i2u715_41:
 17047   006F02  EF87  F037         	goto	i2l146
 17048   006F06                     i2u715_40:
 17049   006F06                     
 17050                           ;newmain.c: 102:         pulse_count++;
 17051   006F06  0103               	movlb	3	; () banked
 17052   006F08  4B6E               	infsnz	_pulse_count& (0+255),f,b	;volatile
 17053   006F0A  2B6F               	incf	(_pulse_count+1)& (0+255),f,b	;volatile
 17054   006F0C                     
 17055                           ; BSR set to: 3
 17056                           ;newmain.c: 103:         INTCON3bits.INT1IF = 0;
 17057   006F0C  90F0               	bcf	240,0,c	;volatile
 17058   006F0E                     i2l146:
 17059   006F0E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17060   006F10  0011               	retfie		f
 17061   006F12                     __end_of_HighISR:
 17062                           	callstack 0
 17063                           
 17064                           	psect	rparam
 17065   000001                     ___rparam_used  equ	1
 17066   000000                     ___param_bank   equ	0
 17067   000000                     __Lparam        equ	__Lrparam
 17068   000000                     __Hparam        equ	__Hrparam
 17069                           
 17070                           	psect	temp
 17071   00005F                     btemp:
 17072                           	callstack 0
 17073   00005F                     	ds	1
 17074   00005F                     int$flags       set	btemp
 17075   000060                     wtemp8          set	btemp+1
 17076   000060                     ttemp5          set	btemp+1
 17077   000063                     ttemp6          set	btemp+4
 17078   000067                     ttemp7          set	btemp+8
 17079                           
 17080                           	psect	idloc
 17081                           
 17082                           ;Config register IDLOC0 @ 0x200000
 17083                           ;	unspecified, using default values
 17084   200000                     	org	2097152
 17085   200000  FF                 	db	255
 17086                           
 17087                           ;Config register IDLOC1 @ 0x200001
 17088                           ;	unspecified, using default values
 17089   200001                     	org	2097153
 17090   200001  FF                 	db	255
 17091                           
 17092                           ;Config register IDLOC2 @ 0x200002
 17093                           ;	unspecified, using default values
 17094   200002                     	org	2097154
 17095   200002  FF                 	db	255
 17096                           
 17097                           ;Config register IDLOC3 @ 0x200003
 17098                           ;	unspecified, using default values
 17099   200003                     	org	2097155
 17100   200003  FF                 	db	255
 17101                           
 17102                           ;Config register IDLOC4 @ 0x200004
 17103                           ;	unspecified, using default values
 17104   200004                     	org	2097156
 17105   200004  FF                 	db	255
 17106                           
 17107                           ;Config register IDLOC5 @ 0x200005
 17108                           ;	unspecified, using default values
 17109   200005                     	org	2097157
 17110   200005  FF                 	db	255
 17111                           
 17112                           ;Config register IDLOC6 @ 0x200006
 17113                           ;	unspecified, using default values
 17114   200006                     	org	2097158
 17115   200006  FF                 	db	255
 17116                           
 17117                           ;Config register IDLOC7 @ 0x200007
 17118                           ;	unspecified, using default values
 17119   200007                     	org	2097159
 17120   200007  FF                 	db	255
 17121                           
 17122                           	psect	config
 17123                           
 17124                           ;Config register CONFIG1L @ 0x300000
 17125                           ;	unspecified, using default values
 17126                           ;	PLL Prescaler Selection bits
 17127                           ;	PLLDIV = 0x0, unprogrammed default
 17128                           ;	System Clock Postscaler Selection bits
 17129                           ;	CPUDIV = 0x0, unprogrammed default
 17130                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 17131                           ;	USBDIV = 0x0, unprogrammed default
 17132   300000                     	org	3145728
 17133   300000  00                 	db	0
 17134                           
 17135                           ;Config register CONFIG1H @ 0x300001
 17136                           ;	Oscillator Selection bits
 17137                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
 17138                           ;	Fail-Safe Clock Monitor Enable bit
 17139                           ;	FCMEN = 0x0, unprogrammed default
 17140                           ;	Internal/External Oscillator Switchover bit
 17141                           ;	IESO = 0x0, unprogrammed default
 17142   300001                     	org	3145729
 17143   300001  08                 	db	8
 17144                           
 17145                           ;Config register CONFIG2L @ 0x300002
 17146                           ;	Power-up Timer Enable bit
 17147                           ;	PWRT = ON, PWRT enabled
 17148                           ;	Brown-out Reset Enable bits
 17149                           ;	BOR = 0x3, unprogrammed default
 17150                           ;	Brown-out Reset Voltage bits
 17151                           ;	BORV = 0x3, unprogrammed default
 17152                           ;	USB Voltage Regulator Enable bit
 17153                           ;	VREGEN = 0x0, unprogrammed default
 17154   300002                     	org	3145730
 17155   300002  1E                 	db	30
 17156                           
 17157                           ;Config register CONFIG2H @ 0x300003
 17158                           ;	Watchdog Timer Enable bit
 17159                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 17160                           ;	Watchdog Timer Postscale Select bits
 17161                           ;	WDTPS = 0xF, unprogrammed default
 17162   300003                     	org	3145731
 17163   300003  1E                 	db	30
 17164                           
 17165                           ; Padding undefined space
 17166   300004                     	org	3145732
 17167   300004  FF                 	db	255
 17168                           
 17169                           ;Config register CONFIG3H @ 0x300005
 17170                           ;	CCP2 MUX bit
 17171                           ;	CCP2MX = 0x1, unprogrammed default
 17172                           ;	PORTB A/D Enable bit
 17173                           ;	PBADEN = 0x1, unprogrammed default
 17174                           ;	Low-Power Timer 1 Oscillator Enable bit
 17175                           ;	LPT1OSC = 0x0, unprogrammed default
 17176                           ;	MCLR Pin Enable bit
 17177                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 17178   300005                     	org	3145733
 17179   300005  83                 	db	131
 17180                           
 17181                           ;Config register CONFIG4L @ 0x300006
 17182                           ;	Stack Full/Underflow Reset Enable bit
 17183                           ;	STVREN = 0x1, unprogrammed default
 17184                           ;	Single-Supply ICSP Enable bit
 17185                           ;	LVP = OFF, Single-Supply ICSP disabled
 17186                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 17187                           ;	ICPRT = 0x0, unprogrammed default
 17188                           ;	Extended Instruction Set Enable bit
 17189                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17190                           ;	Background Debugger Enable bit
 17191                           ;	DEBUG = 0x1, unprogrammed default
 17192   300006                     	org	3145734
 17193   300006  81                 	db	129
 17194                           
 17195                           ; Padding undefined space
 17196   300007                     	org	3145735
 17197   300007  FF                 	db	255
 17198                           
 17199                           ;Config register CONFIG5L @ 0x300008
 17200                           ;	unspecified, using default values
 17201                           ;	Code Protection bit
 17202                           ;	CP0 = 0x1, unprogrammed default
 17203                           ;	Code Protection bit
 17204                           ;	CP1 = 0x1, unprogrammed default
 17205                           ;	Code Protection bit
 17206                           ;	CP2 = 0x1, unprogrammed default
 17207                           ;	Code Protection bit
 17208                           ;	CP3 = 0x1, unprogrammed default
 17209   300008                     	org	3145736
 17210   300008  0F                 	db	15
 17211                           
 17212                           ;Config register CONFIG5H @ 0x300009
 17213                           ;	unspecified, using default values
 17214                           ;	Boot Block Code Protection bit
 17215                           ;	CPB = 0x1, unprogrammed default
 17216                           ;	Data EEPROM Code Protection bit
 17217                           ;	CPD = 0x1, unprogrammed default
 17218   300009                     	org	3145737
 17219   300009  C0                 	db	192
 17220                           
 17221                           ;Config register CONFIG6L @ 0x30000A
 17222                           ;	unspecified, using default values
 17223                           ;	Write Protection bit
 17224                           ;	WRT0 = 0x1, unprogrammed default
 17225                           ;	Write Protection bit
 17226                           ;	WRT1 = 0x1, unprogrammed default
 17227                           ;	Write Protection bit
 17228                           ;	WRT2 = 0x1, unprogrammed default
 17229                           ;	Write Protection bit
 17230                           ;	WRT3 = 0x1, unprogrammed default
 17231   30000A                     	org	3145738
 17232   30000A  0F                 	db	15
 17233                           
 17234                           ;Config register CONFIG6H @ 0x30000B
 17235                           ;	unspecified, using default values
 17236                           ;	Configuration Register Write Protection bit
 17237                           ;	WRTC = 0x1, unprogrammed default
 17238                           ;	Boot Block Write Protection bit
 17239                           ;	WRTB = 0x1, unprogrammed default
 17240                           ;	Data EEPROM Write Protection bit
 17241                           ;	WRTD = 0x1, unprogrammed default
 17242   30000B                     	org	3145739
 17243   30000B  E0                 	db	224
 17244                           
 17245                           ;Config register CONFIG7L @ 0x30000C
 17246                           ;	unspecified, using default values
 17247                           ;	Table Read Protection bit
 17248                           ;	EBTR0 = 0x1, unprogrammed default
 17249                           ;	Table Read Protection bit
 17250                           ;	EBTR1 = 0x1, unprogrammed default
 17251                           ;	Table Read Protection bit
 17252                           ;	EBTR2 = 0x1, unprogrammed default
 17253                           ;	Table Read Protection bit
 17254                           ;	EBTR3 = 0x1, unprogrammed default
 17255   30000C                     	org	3145740
 17256   30000C  0F                 	db	15
 17257                           
 17258                           ;Config register CONFIG7H @ 0x30000D
 17259                           ;	unspecified, using default values
 17260                           ;	Boot Block Table Read Protection bit
 17261                           ;	EBTRB = 0x1, unprogrammed default
 17262   30000D                     	org	3145741
 17263   30000D  40                 	db	64
 17264                           tosu	equ	0xFFF
 17265                           tosh	equ	0xFFE
 17266                           tosl	equ	0xFFD
 17267                           stkptr	equ	0xFFC
 17268                           pclatu	equ	0xFFB
 17269                           pclath	equ	0xFFA
 17270                           pcl	equ	0xFF9
 17271                           tblptru	equ	0xFF8
 17272                           tblptrh	equ	0xFF7
 17273                           tblptrl	equ	0xFF6
 17274                           tablat	equ	0xFF5
 17275                           prodh	equ	0xFF4
 17276                           prodl	equ	0xFF3
 17277                           indf0	equ	0xFEF
 17278                           postinc0	equ	0xFEE
 17279                           postdec0	equ	0xFED
 17280                           preinc0	equ	0xFEC
 17281                           plusw0	equ	0xFEB
 17282                           fsr0h	equ	0xFEA
 17283                           fsr0l	equ	0xFE9
 17284                           wreg	equ	0xFE8
 17285                           indf1	equ	0xFE7
 17286                           postinc1	equ	0xFE6
 17287                           postdec1	equ	0xFE5
 17288                           preinc1	equ	0xFE4
 17289                           plusw1	equ	0xFE3
 17290                           fsr1h	equ	0xFE2
 17291                           fsr1l	equ	0xFE1
 17292                           bsr	equ	0xFE0
 17293                           indf2	equ	0xFDF
 17294                           postinc2	equ	0xFDE
 17295                           postdec2	equ	0xFDD
 17296                           preinc2	equ	0xFDC
 17297                           plusw2	equ	0xFDB
 17298                           fsr2h	equ	0xFDA
 17299                           fsr2l	equ	0xFD9
 17300                           status	equ	0xFD8

Data Sizes:
    Strings     302
    Constant    116
    Data        24
    BSS         229
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     144
    BANK1           256    256     256
    BANK2           256    250     256
    BANK3           256      0     246
    BANK4           256     18      18
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Apply_Filter@samples	PTR float  size(2) Largest target is 20
		 -> temp_samples(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1243$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    S1243$source	PTR const unsigned char  size(2) Largest target is 0

    Send_History_Event@event_type	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[9]), STR_12(CODE[9]), STR_14(CODE[7]), STR_5(CODE[11]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), 

    Send_History_Event@extra_data	PTR const unsigned char  size(2) Largest target is 150
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), STR_13(CODE[1]), 
		 -> STR_15(CODE[1]), STR_9(CODE[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 150
		 -> fire_trigger_sensor(BANK3[20]), Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), 
		 -> sp__powf(UNKNOWN), ?_sprintf(BANK0[2]), STR_11(CODE[9]), STR_12(CODE[9]), 
		 -> STR_13(CODE[1]), STR_14(CODE[7]), STR_15(CODE[1]), STR_24(CODE[7]), 
		 -> STR_5(CODE[11]), STR_7(CODE[9]), STR_8(CODE[11]), STR_9(CODE[1]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 150
		 -> fire_trigger_sensor(BANK3[20]), Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), 
		 -> sp__powf(UNKNOWN), ?_sprintf(BANK0[2]), STR_11(CODE[9]), STR_12(CODE[9]), 
		 -> STR_13(CODE[1]), STR_14(CODE[7]), STR_15(CODE[1]), STR_5(CODE[11]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), STR_9(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[13]), STR_18(CODE[4]), STR_2(CODE[19]), STR_21(CODE[4]), 
		 -> STR_3(CODE[10]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _main->_Update_Actuators
    _Update_Actuators->___flge
    _Read_Sensors->___flge
    _powf->___flge
    _scalbnf->___flmul
    _Apply_Filter->___fladd
    _Handle_Fire_Events->___flge
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flsub
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Handle_Fire_Events
    _Update_Actuators->___flge
    _Send_Data->_sprintf
    _Read_Sensors->_powf
    _powf->___flge
    _Handle_Test_Events->_Send_History_Event
    _Handle_Shutdown_Events->_Send_History_Event
    _Handle_Fire_Events->_Send_History_Event
    _Send_History_Event->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Handle_Test_Events
    _Read_Sensors->_powf
    _Handle_Test_Events->_Send_History_Event
    _Handle_Shutdown_Events->_Send_History_Event
    _Handle_Fire_Events->_Send_History_Event

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Handle_Fire_Events

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0  218821
                                            142 BANK0      2     2      0
                                              0 BANK4     18    18      0
                           _ADC_Init
                           _ADC_Read
                    _Handle_Commands
                 _Handle_Fire_Events
             _Handle_Shutdown_Events
                 _Handle_Test_Events
                     _Interrupt_Init
                       _Read_Sensors
                          _Send_Data
                          _UART_Init
                   _Update_Actuators
                            ___awmod
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     439
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Update_Actuators                                     5     5      0     393
                                             92 COMRAM     1     1      0
                                              8 BANK0      4     4      0
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send_Data                                          202   202      0   25802
                                              0 BANK1    202   202      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Read_Sensors                                        54    54      0   43151
                                             25 BANK0     54    54      0
                           _ADC_Read
                       _Apply_Filter
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   25096
                                              8 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               41    37      4    1070
                                              0 COMRAM    37    33      4
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    3093
                                             39 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     529
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _Apply_Filter                                        14     8      6    5293
                                             80 COMRAM     8     2      6
                                              0 BANK0      6     6      0
                            ___fladd
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Test_Events                                  56    56      0   55118
                                            132 BANK0      2     2      0
                                            202 BANK1     54    54      0
                 _Send_History_Event
                            ___flsub
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Handle_Shutdown_Events                               0     0      0   25900
                 _Send_History_Event
 ---------------------------------------------------------------------------------
 (1) _Handle_Fire_Events                                 260   260      0   55974
                                            132 BANK0     10    10      0
                                              0 BANK2    250   250      0
                 _Send_History_Event
                             ___flge
                            ___flsub
                            ___lldiv
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Send_History_Event                                 206   202      4   25900
                                            128 BANK0      4     0      4
                                              0 BANK1    202   202      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             50    14     36   25623
                                             80 BANK0     48    12     36
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4   25245
                                             74 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   24979
                                             60 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                11     6      5    1899
                                             22 COMRAM    11     6      5
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     238
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     253
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _stoa                                                11     8      3     647
                                              8 COMRAM    11     8      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     266
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   17488
                                              8 BANK0     52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     133
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     217
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     102
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     495
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     201
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     346
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    3481
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3194
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      74
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2583
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     356
                                             88 COMRAM     4     4      0
                                              0 BANK0      8     0      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     142
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1833
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                14     9      5    2629
                                             22 COMRAM    14     9      5
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    1068
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3     487
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     341
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      96
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     439
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     451
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Handle_Commands                                      5     5      0      34
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Handle_Commands
   _Handle_Fire_Events
     _Send_History_Event
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aldiv
               ___almod
               _abs
                 ___almod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _efgtoa
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                 ___xxtofl (ARG)
               ___fldiv
               ___fleq
               ___flge
                 ___fladd (ARG)
                 ___flmul (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___fldiv (ARG)
                   ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
               _strcpy
             _fputc
             _read_prec_or_width
             _stoa
               _fputc
             _utoa
               ___lldiv
               ___llmod
               _pad
     ___flge
     ___flsub
     ___lldiv
     _sprintf
     _strcpy
   _Handle_Shutdown_Events
     _Send_History_Event
   _Handle_Test_Events
     _Send_History_Event
     ___flsub
     _sprintf
   _Interrupt_Init
   _Read_Sensors
     _ADC_Read
     _Apply_Filter
       ___fladd
       ___fldiv
     ___fladd
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___xxtofl
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
   _Send_Data
     _sprintf
   _UART_Init
   _Update_Actuators
     ___flge
   ___awmod
   ___fladd
   ___fldiv
   ___flmul
   ___flsub
   ___xxtofl

 _HighISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256     18      18      7.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0     246     96.1%
BITBANK2           256      0       0      0.0%
BANK2              256    250     256    100.0%
BITBANK1           256      0       0      0.0%
BANK1              256    256     256    100.0%
BITBANK0           160      0       0      0.0%
BANK0              160    144     144     90.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     93      94    100.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    1012      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Aug 07 22:09:04 2025

                   ??_Interrupt_Init 0001                         ___fldiv@aexp 0040  
                       ___fldiv@bexp 003F                          _pump_active 0378  
                       ___fldiv@sign 0038                    _Read_Sensors$1840 0091  
                  _Read_Sensors$1838 0089                    _Read_Sensors$1839 008D  
                                 _L1 7EB9                                   _L2 7EB5  
                                 _L3 7EB1                                   _L4 7EAD  
                                 _L5 7EA9                                   _L6 7EA5  
                                 _P1 7EA1                                   _P2 7E9D  
                                 _P3 7E99                                   _P4 7E95  
                                 _P5 7E91                                   _bp 7E6D  
                                 _cp 7E7D                          _pulse_count 036E  
                                l201 6BB0                                  l204 6A56  
                                l213 6AB2                                  l312 6A0E  
                                l240 3706                                  l209 6A82  
                                l217 30EC                                  l170 5A66  
                                l250 5CCA                                  l245 66BC  
                                l270 6F4E                                  l319 6A1E  
                                l263 65A4                                  l255 5CD2  
                                l177 5BA2                                  l273 6E36  
                                l249 5C26                                  l194 6204  
                                l258 6578                                  l282 6F3C  
                                l187 526E                                  l267 65D4  
                                l364 5EF4                                  l276 6E50  
                                l550 60BA                                  l279 6F5E  
                                l544 697A                                  l712 6B3A  
                                l377 64EC                                  l705 6B2A  
                                l529 6824                                  l555 6100  
                                l813 3DFE                                  l830 3F18  
                                l822 40CA                                  l814 3DEC  
                                l582 5FFA                                  l903 44F0  
                                l559 6EC0                                  l815 3DB2  
                                l840 3FD4                                  l906 4386  
                                l907 43A4                                  l827 3FA6  
                                l916 44B2                                  l908 43FC  
                                l940 570C                                  l909 43EA  
                                l846 408E                                  l839 3FE6  
                                l855 6D94                                  l943 5868  
                                l880 4B7E                                  l872 4A86  
                                l881 4B6C                                  l954 5800  
                                l867 4C5E                                  l963 6DD8  
                                l947 57A4                                  l869 4AC2  
                                l878 4B08                                  l879 4B26  
                                l992 6BC8                                  l899 4190  
                                l996 6C16                                  _lg2 7E8D  
                                _abs 6EC2                                  _pad 6BB2  
                                _ovt 7E81                         ___awmod@sign 0006  
                                wreg 0FE8           __end_of_Handle_Test_Events 6206  
                       ___flmul@aexp 001C                         ___flmul@bexp 0021  
                       ___flmul@sign 001B                         ___flmul@temp 0026  
                       ___flmul@prod 0022                         ___fltol@exp1 000A  
                               l1000 589A                                 l1002 58A2  
                               l1003 58E8                                 l1014 5A0C  
                               l1030 269A                                 l1025 2EB6  
                               ?_abs 000B                                 l1028 2856  
                               l1117 3C14                                 l1109 37C2  
                               l1118 399C                                 l1310 055C  
                               l1302 044C                                 l1209 6776  
                               l1217 6E18                                 l1137 3AD2  
                               l1153 6D4E                                 l1058 2C9E  
                               l1074 62AA                                 l1090 5DEA  
                               l1082 5CF0                                 l1306 04FE  
                               l1171 6EF4                                 l1163 6402  
                               l1180 55F8                                 l1084 5CF8  
                               l1350 6F60                                 l1094 68C8  
                               l1078 6304                                 l1191 6C6C  
                               l1343 248A                                 l1168 6EDC  
                               l1360 54A2                                 l1177 56B4  
                               l1098 68D0                                 l1282 02F4  
                               l1380 47F8                                 l1292 038A  
                               l1197 6CBC                                 l1373 46D6  
                               l1277 24C6                                 l1382 4866  
                               l1377 4734                                 l1369 48CE  
                               l1388 6E88                                 l6000 3D2E  
                               l6010 3D42                                 l6002 3D32  
                               l6100 3FCC                                 l6020 3D7E  
                               l6012 3D46                                 l6004 3D36  
                               l6110 404A                                 l6030 3DD0  
                               l6022 3D9A                                 l6014 3D4A  
                               l6006 3D3A                                 l6200 5EB4  
                               l6120 409C                                 l6104 3FF6  
                               l6112 404C                                 l6040 3E1C  
                               l6032 3DDE                                 l6024 3DAA  
                               l6016 3D4E                                 l6008 3D3E  
                               l7000 5D00                                 l6202 5EBE  
                               l6130 40BA                                 l6122 40A2  
                               l6114 405C                                 l6106 4002  
                               l6050 3E5C                                 l6034 3DE0  
                               l6026 3DC0                                 l6018 3D52  
                               l7010 5D52                                 l7002 5D08  
                               l6204 5EC4                                 l6220 6428  
                               l6212 6404                                 l6140 6DF8  
                               l6300 49EE                                 l6124 40A4  
                               l6116 406C                                 l6108 4010  
                               l6060 3E86                                 l6052 3E68  
                               l6044 3E30                                 l6036 3DEA  
                               l6028 3DCC                                 l7020 5DCE  
                               l7012 5D58                                 l7004 5D10  
                               l7100 3984                                 l6206 5ED4  
                               l6230 6470                                 l6222 6436  
                               l6214 6406                                 l6134 6DDA  
                               l6310 4A2C                                 l6302 49EE  
                               l6126 40AA                                 l6118 408C  
                               l6070 3EF8                                 l6054 3E6C  
                               l6046 3E40                                 l6038 3E0C  
                               l6062 3E8C                                 l6142 6E52  
                               l7030 685C                                 l6150 69A2  
                               l7006 5D16                                 l7014 5D8C  
                               l7110 39F6                                 l7102 399E  
                               ?_pad 000F                                 l6208 5EE4  
                               l6232 647E                                 l6240 64BC  
                               l6224 6446                                 l6216 6414  
                               l6136 6DE6                                 l6320 4A76  
                               l6312 4A3C                                 l6400 412E  
                               l6128 40B8                                 l6080 3F52  
                               l6064 3EB2                                 l6072 3F08  
                               l6056 3E7A                                 l6048 3E4E  
                               l6144 6E5A                                 l7032 6878  
                               l7024 6826                                 l6160 69EC  
                               l6152 69AA                                 l7016 5D9E  
                               l7008 5D4C                                 l7120 3A7C  
                               l7112 3A28                                 l7104 39C0  
                               l7040 372C                                 l8000 516C  
                               l7200 5746                                 l6170 5DEE  
                               l6242 64CC                                 l6234 649C  
                               l6226 645C                                 l6218 6424  
                               l6138 6DF4                                 l6330 4AC0  
                               l6322 4A84                                 l6314 4A4C  
                               l6306 4A02                                 l6250 48DC  
                               l6410 415A                                 l6402 4134  
                               l6090 3F82                                 l6082 3F5C  
                               l6074 3F2E                                 l6066 3EE6  
                               l6058 3E7C                                 l7034 6896  
                               l7026 682E                                 l6162 69FC  
                               l6154 69B6                                 l6146 697C  
                               l7018 5DB4                                 l7130 3ACA  
                               l7114 3A5A                                 l7106 39CC  
                               l7050 377C                                 l7042 3738  
                               l8010 5262                                 l8002 51EA  
                               l7210 579A                                 l7202 574E  
                               l6180 5E2E                                 l6172 5DFC  
                               l6244 64DC                                 l6236 64AC  
                               l6228 6464                                 l6340 4B06  
                               l6332 4AD2                                 l6324 4A90  
                               l6316 4A52                                 l6308 4A1C  
                               l6260 491C                                 l6252 48EA  
                               l6500 44C6                                 l6420 41B0  
                               l6412 416A                                 l6404 413A  
                               l6092 3F86                                 l6084 3F6A  
                               l6076 3F3E                                 l6068 3EE8  
                               l7028 6850                                 l7036 68A2  
                               l6164 69FE                                 l6156 69C4  
                               l6148 698C                                 l7140 3B40  
                               l7124 3AA2                                 l7108 39D4  
                               l7052 3790                                 l7044 3746  
                               l8004 5220                                 l8012 526A  
                               l8020 613A                                 l7220 5810  
                               l7212 57D6                                 l7204 575A  
                               l7300 5270                                 l8100 4C68  
                               l6190 5E6C                                 l6182 5E32  
                               l6174 5E0C                                 l6238 64B6  
                               l6350 4B8E                                 l6334 4AE8  
                               l6342 4B18                                 l6326 4AAE  
                               l6318 4A62                                 l6270 4940  
                               l6262 491E                                 l6254 48EC  
                               l6502 44D4                                 l6430 41F0  
                               l6414 417A                                 l6406 4148  
                               l6094 3F96                                 l6086 3F6C  
                               l6166 6A08                                 l6158 69CE  
                               l7134 3AD8                                 l7126 3AB0  
                               l7118 3A6C                                 l7070 3852  
                               l7062 37C8                                 l7054 37A0  
                               l7046 374C                                 l7038 3708  
                               l8006 5236                                 l8030 61CC  
                               l8022 614A                                 l8014 6102  
                               l7230 5858                                 l7222 5814  
                               l7214 57E2                                 l7206 578C  
                               l7310 52F4                                 l7302 5280  
                               l8110 4C8C                                 l8102 4C6A  
                               l6192 5E7A                                 l6184 5E42  
                               l6176 5E10                                 l6168 5DEC  
                               l6360 4BF0                                 l6352 4B9A  
                               l6344 4B36                                 l6336 4AEE  
                               l6328 4AB0                                 l6280 4980  
                               l6272 494E                                 l6256 48FC  
                               l6264 4924                                 l6248 48D0  
                               l6520 6900                                 l6504 44D6  
                               l6440 423A                                 l6432 41FC  
                               l6424 41C4                                 l6416 4180  
                               l6408 414A                                 l6088 3F7A  
                               l6096 3F98                                 l6512 6D50  
                               l6600 5FCA                                 l7144 3B6A  
                               l7136 3AF6                                 l7128 3AC2  
                               l7064 37EE                                 l7056 37B2  
                               l7048 3770                                 l7160 3BF2  
                               l8008 5250                                 l8040 6B4E  
                               l8032 61E6                                 l8024 615C  
                               l8016 6112                                 l7224 5838  
                               l7216 57F0                                 l7208 578E  
                               l7320 5374                                 l7312 5328  
                               l7304 529C                                 l7240 4564  
                               l7400 0106                                 l8120 4C9E  
                               l8112 4C90                                 l8104 4C6C  
                               l6194 5E84                                 l6186 5E58  
                               l6178 5E1E                                 l6370 4C3E  
                               l6362 4C06                                 l6354 4BA8  
                               l6346 4B64                                 l6338 4AF8  
                               l6290 49BE                                 l6282 4982  
                               l6274 4950                                 l6266 4934  
                               l6258 490C                                 l6530 6978  
                               l6522 6910                                 l6506 44DC  
                               l6450 428C                                 l6442 4246  
                               l6434 4214                                 l6426 41D0  
                               l6418 41A0                                 l6098 3FB6  
                               l6514 6D60                                 l6602 5FDA  
                               l6610 6ACA                                 l7154 3BC8  
                               l7146 3B80                                 l7138 3B16  
                               l7090 3934                                 l7082 38C4  
                               l7066 380A                                 l7074 3878  
                               l7058 37BA                                 l7170 6D28  
                               l8050 6BAC                                 l8042 6B5E  
                               l8034 61F8                                 l8026 6190  
                               l8018 6124                                 l7226 5848  
                               l7218 580E                                 l7330 5408  
                               l7322 53A8                                 l7314 5330  
                               l7306 52D0                                 l7250 45B4  
                               l7242 4572                                 l7234 44F2  
                               l7410 0178                                 l8130 4D76  
                               l8122 4CAC                                 l8114 4C94  
                               l8106 4C6E                                 l6196 5EA2  
                               l6188 5E60                                 l6372 4C4C  
                               l6364 4C20                                 l6356 4BD2  
                               l6292 49C6                                 l6276 4960  
                               l6284 4988                                 l6268 493A  
                               l6524 693E                                 l6540 606A  
                               l6508 44E0                                 l6460 430A  
                               l6452 429C                                 l6444 4256  
                               l6436 4220                                 l6428 41DA  
                               l6604 5FEA                                 l6700 6C82  
                               l6620 6B1A                                 l6612 6AD2  
                               l7148 3B9E                                 l7156 3BE0  
                               l7092 394A                                 l7084 38E4  
                               l7076 388E                                 l7068 382A  
                               l7172 6D44                                 l7180 6DAC  
                               l8044 6B74                                 l8028 61B6  
                               l8036 6200                                 l7228 5856  
                               l7332 5424                                 l7324 53B0  
                               l7316 534C                                 l7308 52D8  
                               l7252 45E2                                 l7244 4582  
                               l7236 4502                                 l7500 06E0  
                               l7420 032E                                 l7412 018C  
                               l7404 013E                                 l8060 65B8  
                               l8052 64EE                                 l8140 4DC2  
                               l8132 4DAA                                 l8124 4D3A  
                               l8108 4C88                                 l6198 5EB2  
                               l6630 6BE4                                 l6710 586A  
                               l6374 4C52                                 l6366 4C38  
                               l6358 4BD6                                 l6294 49CA  
                               l6286 4998                                 l6278 4970  
                               l6526 694E                                 l6518 68D2  
                               l6550 60F8                                 l6542 607A  
                               l6534 5FFC                                 l6470 4384  
                               l6462 4340                                 l6454 42B8  
                               l6446 4262                                 l6438 422C  
                               l6390 40E8                                 l6702 6C8E  
                               l6622 6B24                                 l6614 6ADE  
                               l7094 3968                                 l7086 390E  
                               l7078 38A8                                 l7166 6D08  
                               l7182 6DB4                                 l8046 6B86  
                               l8038 6B3C                                 l7342 6E1C  
                               l7190 56C8                                 l7326 53CC  
                               l7334 542C                                 l7318 5358  
                               l7270 4694                                 l7238 4536  
                               l7502 06F0                                 l7430 0374  
                               l7414 01A8                                 l7406 014E  
                               l8054 6586                                 l8070 6794  
                               l8062 6778                                 l8150 4ED8  
                               l8142 4E2C                                 l8126 4D54  
                               l6632 6BE8                                 l6624 6BB2  
                               l6720 58D0                                 l6712 588E  
                               l6376 4C54                                 l6368 4C3A  
                               l6288 49AE                                 l6528 6972  
                               l6552 60FE                                 l6544 6088  
                               l6536 602C                                 l6480 440C  
                               l6472 4396                                 l6464 434E  
                               l6456 42C4                                 l6448 4272  
                               l6392 40F8                                 l6384 40CC  
                               l6560 6EB0                                 l6640 6306  
                               l6704 6C92                                 l6800 2620  
                               l6616 6AEC                                 l6608 6AB4  
                               l7168 6D14                                 l7184 6DC8  
                               l7176 6D96                                 l7360 6A96  
                               l7352 6A20                                 l8048 6B96  
                               l7344 6E2E                                 l7192 56D6  
                               l7336 545E                                 l7328 5400  
                               l7280 474E                                 l7272 46A0  
                               l7256 45F6                                 l7264 4622  
                               l7248 4596                                 l7600 0D9E  
                               l7520 0778                                 l7504 0712  
                               l7416 02A6                                 l7408 015C  
                               l8056 6594                                 l8080 67CC  
                               l8072 67A2                                 l8064 677A  
                               l8160 4F44                                 l8152 4EF4  
                               l8144 4E84                                 l8128 4D5A  
                               l5930 66DE                                 l6634 6C06  
                               l6626 6BC0                                 l6730 58FE  
                               l6722 58DC                                 l6714 58AA  
                               l6298 49DE                                 l6546 609A  
                               l6538 603C                                 l6490 446E  
                               l6482 4418                                 l6474 43B4  
                               l6466 436C                                 l6458 42E0  
                               l6394 4108                                 l6386 40D8  
                               l6570 5F20                                 l6642 6326  
                               l6706 6C9E                                 l6802 2626  
                               l6618 6B0A                                 l7178 6DA4  
                               l7354 6A64                                 l7346 6E34  
                               l7362 65D6                                 l7194 571C  
                               l7338 5492                                 l7290 4812  
                               l7282 476E                                 l7274 46AE  
                               l7266 4676                                 l7258 4604  
                               l7610 0F54                                 l7602 0DF8  
                               l7522 079C                                 l7506 0736  
                               l7450 0478                                 l7434 039E  
                               l7426 0344                                 l7418 0312  
                               l7442 03EA                                 l8058 65B2  
                               l8082 67DA                                 l8090 6804  
                               l8074 67AA                                 l8066 6788  
                               l8170 4F72                                 l8162 4F56  
                               l8154 4F28                                 l8146 4EB8  
                               l8138 4DB4                                 l6636 6EC2  
                               l5932 66E8                                 l6628 6BD4  
                               l6740 599A                                 l6732 5940  
                               l6724 58E4                                 l6716 58BA  
                               l6548 60A8                                 l6492 4482  
                               l6484 4426                                 l6476 43E2  
                               l6468 4376                                 l6396 4118  
                               l6388 40E6                                 l6556 6E8A  
                               l5940 3C16                                 l6580 5F6E  
                               l6572 5F4A                                 l6564 5EF6  
                               l6644 6364                                 l6652 63A4  
                               l6708 6CA2                                 l6900 2BCE  
                               l6820 26B0                                 l6804 262E  
                               l6812 264A                                 l7356 6A72  
                               l7348 6E44                                 l7372 661A  
                               l7364 6600                                 l7196 5732  
                               l7188 56B8                                 l7292 4828  
                               l7284 4782                                 l7276 4716  
                               l7268 468A                                 l7620 10C4  
                               l7612 0FAC                                 l7604 0E6A  
                               l7540 0860                                 l7532 07BE  
                               l7508 0744                                 l7516 0762  
                               l7444 0406                                 l7436 03AC  
                               l7428 0366                                 l8092 6814  
                               l8084 67F0                                 l8076 67BC  
                               l8068 6790                                 l8180 4FA0  
                               l8172 4F76                                 l8164 4F5A  
                               l8156 4F32                                 l8148 4ED2  
                               l6638 6ED0                                 l5934 6704  
                               l5926 66BE                                 l6750 59F0  
                               l6742 59B0                                 l6734 5946  
                               l6726 58F0                                 l6718 58C0  
                               l6494 449C                                 l6486 4450  
                               l6398 411E                                 l6558 6EA0  
                               l5950 3C52                                 l5942 3C22  
                               l6590 5F9A                                 l6574 5F4C  
                               l6566 5F0C                                 l6654 63B6  
                               l6646 638C                                 l6670 54A4  
                               l6662 6C18                                 l6910 2BFC  
                               l6902 2BDE                                 l6830 27A6  
                               l6822 26E4                                 l6814 2664  
                               l7358 6A90                                 l7374 6666  
                               l7366 6612                                 l7294 483E  
                               l7286 47C0                                 l7278 4724  
                               l7710 1A48                                 l7630 1234  
                               l7622 111C                                 l7614 0FE0  
                               l7606 0EC8                                 l7550 0A04  
                               l7542 0894                                 l7470 057A  
                               l7462 050E                                 l7454 04B0  
                               l7446 0414                                 l7438 03D4  
                               l7390 0090                                 l7382 0012  
                               l8094 681C                                 l8086 67F8  
                               l8078 67C4                                 l8182 4FA4  
                               l8174 4F7A                                 l8166 4F6A  
                               l8158 4F40                                 l5936 6736  
                               l5928 66CE                                 l6744 59CA  
                               l6736 594C                                 l6728 58F8  
                               l6496 44AC                                 l6488 4454  
                               l5960 3C80                                 l5952 3C62  
                               l5944 3C30                                 l6576 5F5C  
                               l6648 6398                                 l6672 54C4  
                               l6664 6C26                                 l6920 2CCE  
                               l6912 2C74                                 l6904 2BE6  
                               l6840 285E                                 l6832 27DA  
                               l6824 2722                                 l6760 24EE  
                               l7376 666C                                 l7288 4808  
                               l7720 1B10                                 l7640 135C  
                               l7632 128C                                 l7624 1174  
                               l7616 1014                                 l7608 0EFC  
                               l7560 0AAA                                 l7552 0A14  
                               l7544 08EC                                 l7536 07D4  
                               l7480 065A                                 l7472 05AE  
                               l7464 052A                                 l7456 04C8  
                               l7448 0460                                 l7392 00AC  
                               l7384 0032                                 l8088 67FE  
                               l8184 4FC4                                 l8176 4F92  
                               l8168 4F6E                                 l6746 59DA  
                               l6738 5980                                 l6498 44B6  
                               l5970 3CAA                                 l5962 3C92  
                               l5954 3C64                                 l5946 3C32  
                               l6586 5F86                                 l6578 5F60  
                               l6658 63FA                                 l6690 566C  
                               l6682 55AC                                 l6674 551A  
                               l6666 6C3A                                 l6930 2CF4  
                               l6922 2CD2                                 l6914 2C94  
                               l6906 2BE8                                 l6850 2892  
                               l6842 286E                                 l6834 27E2  
                               l6826 2756                                 l6818 26AA  
                               l6770 2544                                 l6762 2512  
                               l6754 24C8                                 l7378 6688  
                               l7730 1B9A                                 l7650 1422  
                               l7642 136C                                 l7634 12C0  
                               l7626 11CC                                 l7618 106C  
                               l7570 0B84                                 l7562 0AC6  
                               l7554 0A2E                                 l7546 0920  
                               l7538 0808                                 l7490 06B0  
                               l7474 05BE                                 l7482 067E  
                               l7466 0540                                 l7458 04D6  
                               l7386 007A                                 l7810 6F34  
                               l8178 4F96                                 l8098 4C60  
                               l7820 6F46                                 l6748 59E0  
                               l5972 3CBA                                 l5980 3CE2  
                               l5964 3C94                                 l5948 3C42  
                               l5956 3C6A                                 l6596 5FAE  
                               l6588 5F90                                 l6692 5694  
                               l6684 55E8                                 l6676 552E  
                               l6940 2D28                                 l6932 2CFA  
                               l6924 2CD8                                 l6916 2CB0  
                               l6908 2BF0                                 l6852 28A4  
                               l6860 28E4                                 l6844 287A  
                               l6828 2792                                 l6780 2594  
                               l6772 2550                                 l6764 251C  
                               l6756 24DC                                 l7740 1C52  
                               l7708 1A30                                 l7660 1530  
                               l7652 1456                                 l7644 1386  
                               l7636 12F4                                 l7628 1200  
                               l7580 0BEC                                 l7572 0B9C  
                               l7564 0AFA                                 l7556 0A62  
                               l7548 0954                                 l7476 0622  
                               l7468 056C                                 l7396 00C2  
                               l7900 32B2                                 l7812 6F36  
                               l7804 6F2A                                 l7830 5A34  
                               l5990 3D1A                                 l5982 3CF2  
                               l5974 3CCA                                 l5966 3C9A  
                               l5958 3C7A                                 l6598 5FBA  
                               l6694 56A4                                 l6678 553C  
                               l6686 561C                                 l6942 2D2E  
                               l6926 2CE0                                 l6918 2CBE  
                               l6934 2D00                                 l6950 2DC6  
                               l6870 29CC                                 l6862 28EC  
                               l6854 28B2                                 l6846 2884  
                               l6838 2822                                 l6790 25C8  
                               l6782 2598                                 l6774 2558  
                               l6766 2524                                 l6758 24EA  
                               l7822 6F50                                 l7750 1E8E  
                               l7742 1E06                                 l7726 1B24  
                               l7734 1BAE                                 l7718 1AC8  
                               l7670 16CC                                 l7662 1564  
                               l7654 14D2                                 l7646 13BA  
                               l7638 1328                                 l7590 0CAE  
                               l7582 0C10                                 l7574 0BAC  
                               l7566 0B0C                                 l7558 0A9A  
                               l7478 0642                                 l7486 0692  
                               l7398 00E4                                 l7910 3394  
                               l7902 32E6                                 l7814 6F38  
                               l7806 6F2E                                 l7832 5A38  
                               l7824 5A0E                                 l5992 3D1E  
                               l5984 3D04                                 l5976 3CDA  
                               l5968 3CA8                                 l6688 5658  
                               l6960 2E46                                 l6952 2DE4  
                               l6944 2D86                                 l6936 2D12  
                               l6928 2CF0                                 l6880 2A8C  
                               l6872 2A00                                 l6864 28FC  
                               l6856 28CA                                 l6848 288C  
                               l6784 259E                                 l6768 2534  
                               l6776 255C                                 l7760 1FC0  
                               l7752 1EA8                                 l7744 1E16  
                               l7736 1C20                                 l7728 1B42  
                               l7680 17F0                                 l7672 175E  
                               l7664 1598                                 l7656 1506  
                               l7648 13EE                                 l7592 0D30  
                               l7584 0C24                                 l7576 0BC4  
                               l7568 0B1C                                 l7488 06A2  
                               l7920 3450                                 l7912 33C8  
                               l7904 331A                                 l7816 6F3A  
                               l7808 6F32                                 l7818 6F3E  
                               l7850 5ADA                                 l7834 5A48  
                               l7842 5A9C                                 l7826 5A1C  
                               l5994 3D22                                 l5986 3D12  
                               l5978 3CDC                                 l6698 6C6E  
                               l6970 2E9A                                 l6962 2E54  
                               l6954 2E00                                 l6946 2DBA  
                               l6938 2D24                                 l6890 2B26  
                               l6882 2AA0                                 l6866 2910  
                               l6874 2A06                                 l6858 28DC  
                               l6786 25A6                                 l6778 2582  
                               l6794 25E4                                 l7770 20E8  
                               l7762 1FF4                                 l7754 1EDC  
                               l7746 1E4A                                 l7738 1C30  
                               l7690 1938                                 l7682 184E  
                               l7674 1792                                 l7666 15CC  
                               l7658 1516                                 l7594 0D64  
                               l7586 0C40                                 l7498 06CA  
                               l7930 3540                                 l7922 3460  
                               l7914 33FC                                 l7906 334E  
                               l7860 5B96                                 l7852 5B1C  
                               l7836 5A5C                                 l7828 5A24  
                               l7844 5AC2                                 l5996 3D26  
                               l5988 3D16                                 l6964 2E6C  
                               l6956 2E08                                 l6948 2DC2  
                               l6892 2B7E                                 l6884 2AD2  
                               l6876 2A24                                 l6868 2974  
                               l6796 260A                                 l6788 25BE  
                               l6980 6234                                 l7780 22C4  
                               l7772 2140                                 l7764 2028  
                               l7756 1F10                                 l7748 1E7E  
                               l7692 1990                                 l7684 1882  
                               l7676 17A2                                 l7668 16A6  
                               l7596 0D74                                 l7588 0C50  
                               l7940 35EC                                 l7932 3566  
                               l7924 34DC                                 l7916 340C  
                               l7908 3360                                 l7854 5B3E  
                               l7846 5AD2                                 l7838 5A6E  
                               l5998 3D2A                                 l6966 2E7C  
                               l6958 2E16                                 l6894 2B82  
                               l6886 2AE2                                 l6878 2A58  
                               l6798 261C                                 l6990 62B6  
                               l6982 6238                                 l6974 6206  
                               l7790 23C8                                 l7782 231C  
                               l7774 2198                                 l7766 205C  
                               l7758 1F68                                 l7694 19C4  
                               l7678 17BC                                 l7598 0D84  
                               l7686 18B6                                 l7950 36F6  
                               l7934 3578                                 l7942 361A  
                               l7926 34EC                                 l7918 341C  
                               l7870 2F90                                 l7862 2EB8  
                               l7856 5B4E                                 l7848 5AD4  
                               l6968 2E92                                 l6896 2BB6  
                               l6888 2AF2                                 l6992 62E6  
                               l6984 6274                                 l6976 6220  
                               l7792 240A                                 l7784 2350  
                               l7776 21F0                                 l7768 2090  
                               l7696 19F8                                 l7688 18E0  
                               l7944 3684                                 l7936 358E  
                               l7928 3538                                 l7880 30A4  
                               l7872 2F9E                                 l7864 2EC6  
                               l7960 5C2A                                 l7952 5BA4  
                               l7858 5B54                                 l6898 2BCA  
                               l6994 62EA                                 l6986 6284  
                               l6978 6228                                 l7794 245A  
                               l7786 2384                                 l7778 2248  
                               l7698 1A08                                 l7946 36DC  
                               l7938 35A2                                 l7890 3150  
                               l7882 30DA                                 l7874 3008  
                               l7866 2F30                                 l7970 5CB0  
                               l7962 5C3C                                 l7954 5BBA  
                               l6988 62A2                                 l6996 5CD4  
                               l7980 5058                                 l7796 249A  
                               l7788 23B8                                 l7948 36EE  
                               l7892 3186                                 l7884 30FE  
                               l7876 3084                                 l7868 2F64  
                               l7972 5CC0                                 l7964 5C3E  
                               l7956 5BF0                                 l6998 5CE4  
                               l7990 5102                                 l7982 5068  
                               l7974 4FE6                                 l7798 24B2  
                               l7894 318A                                 l7886 3134  
                               l7878 3094                                 l7966 5C42  
                               l7958 5C24                                 l7992 5116  
                               l7984 5080                                 l7976 4FF8  
                               l7896 3198                                 l7888 313E  
                               l7968 5C8C                      Send_Data@buffer 0100  
                               l7994 5134                                 l7986 50B6  
                               l7978 5008                                 l7898 3202  
                               l7988 50CE                                 l7996 514A  
                               l7998 515C                                 STR_1 7FA1  
                               STR_2 7F7F                                 STR_3 7FC4  
                               STR_4 7F92                                 STR_5 7FAE  
                               STR_6 7F62                                 STR_7 7FCE  
                               STR_8 7FB9                                 STR_9 7F61  
                               u8000 4BA8                                 u8001 4BA4  
                               u7210 66CE                                 u8010 4BF0  
                               u7211 66CA                                 u8011 4BEC  
                               u7220 66DE                                 u8020 4C20  
                               u8100 41A0                                 u7300 3CBA  
                               u7221 66DA                                 u8021 4C1C  
                               u8101 419C                                 u7301 3CB6  
                               u7230 6704                                 u8030 4C4C  
                               u8110 41B0                                 u7310 3CCA  
                               u7231 6700                                 u8031 4C48  
                               u8111 41AC                                 u7311 3CC6  
                               u7240 6736                                 u8200 446E  
                               u8120 432A                                 u8040 40E6  
                               u7400 3E0C                                 u7320 3D04  
                               u9000 2DE4                                 u7241 6732  
                               u8201 446A                                 u8041 40E2  
                               u7401 3E08                                 u7321 3D00  
                               u9001 2DE0                                 u8210 449C  
                               u8130 4384                                 u8050 40F8  
                               u7410 3E1C                                 u7330 3D12  
                               u7250 3C30                                 u9010 2E00  
                               u8211 4498                                 u8131 4380  
                               u8051 40F4                                 u7411 3E18  
                               u7331 3D0E                                 u7251 3C2C  
                               u9011 2DFC                                 u8300 60F8  
                               u8220 44D4                                 u8140 43A4  
                               u8060 4108                                 u7500 3F7A  
                               u7420 3E4E                                 u7340 3D7E  
                               u7260 3C42                                 u9020 2E66  
                               u9100 62D6                                 u8301 60F4  
                               u8221 44D0                                 u8141 43A0  
                               u8125 4320                                 u8061 4104  
                               u7501 3F76                                 u7421 3E4A  
                               u7341 3D7A                                 u7261 3C3E  
                               u9021 2E60                                 u8230 6900  
                               u8150 43B4                                 u8070 4148  
                               u8310 6EA0                                 u7510 3F96  
                               u7430 3E5C                                 u7350 3D96  
                               u7270 3C52                                 u9030 2E68  
                               u9110 6304                                 u8231 68FC  
                               u8151 43B0                                 u8071 4144  
                               u8311 6E9C                                 u7511 3F92  
                               u7431 3E58                                 u7351 3D90  
                               u7271 3C4E                                 u9111 6300  
                               u8240 693E                                 u8160 43E2  
                               u8080 415A                                 u7600 406C  
                               u7520 3FA6                                 u7440 3E7A  
                               u7360 3D98                                 u7280 3C92  
                               u8320 5F0C                                 u9040 2E7C  
                               u8400 6AEC                                 u9120 5CE4  
                               u9200 380A                                 u8241 693A  
                               u8161 43DE                                 u8081 4156  
                               u7601 4068                                 u7521 3FA2  
                               u7441 3E76                                 u7281 3C8E  
                               u8321 5F08                                 u9041 2E78  
                               u8401 6AE8                                 u9121 5CE0  
                               u9201 3806                                 u8250 6972  
                               u8170 43F8                                 u8090 416A  
                               u7610 408C                                 u7530 3FB6  
                               u7450 3EB2                                 u7370 3DC0  
                               u7290 3CA8                                 u8330 5F40  
                               u9050 6220                                 u8410 6B0A  
                               u9130 5D9E                                 u9210 3826  
                               u8251 696E                                 u8171 43F4  
                               u8091 4166                                 u7611 4088  
                               u7531 3FB2                                 u7451 3EAE  
                               u7371 3DBC                                 u7291 3CA4  
                               u9107 62CC                                 u9051 621C  
                               u8411 6B06                                 u9131 5D9A  
                               u9211 3822                                 u7700 5E1E  
                               u8420 6BC0                                 u8260 602C  
                               u8180 440C                                 u7620 409C  
                               u7540 3FCC                                 u7460 3EF8  
                               u7380 3DDE                                 u8340 5F6E  
                               u8500 63F0                                 u9060 6264  
                               u9140 5DB4                                 u9220 38E0  
                               u9300 56C8                                 u7701 5E1A  
                               u8421 6BBC                                 u8261 6028  
                               u8181 4408                                 u7621 4098  
                               u7541 3FC8                                 u7461 3EF4  
                               u7381 3DDA                                 u8341 5F6A  
                               u8501 63EA                                 u9141 5DB0  
                               u9221 38DC                                 u9301 56C4  
                               u7710 5E58                                 u8430 6C06  
                               u8270 606A                                 u8190 4426  
                               u7630 40B8                                 u7550 3FE2  
                               u7470 3F2E                                 u7390 3DFE  
                               u8350 5F82                                 u8510 63F2  
                               u9070 6274                                 u9150 5DCE  
                               u9230 39C0                                 u9310 56D6  
                               u7711 5E54                                 u8431 6C02  
                               u8271 6066                                 u8191 4422  
                               u7631 40B4                                 u7551 3FDE  
                               u7471 3F2A                                 u7391 3DFA  
                               u8351 5F7E                                 u8335 5F36  
                               u9071 6270                                 u9151 5DCA  
                               u9231 39BC                                 u9311 56D2  
                               u7720 5E7A                                 u7800 64CC  
                               u8440 6ED0                                 u7640 6E18  
                               u8280 6088                                 u7560 3FF6  
                               u7480 3F3E                                 u8360 5FAA  
                               u8600 563C                                 u8520 6C26  
                               u9160 6850                                 u9080 6284  
                               u9240 39F6                                 u9320 5732  
                               u9400 4536                                 u7721 5E76  
                               u7801 64C8                                 u8441 6ECC  
                               u7641 6E14                                 u8281 6084  
                               u7561 3FF2                                 u7481 3F3A  
                               u8361 5FA6                                 u8521 6C22  
                               u9161 684C                                 u9081 6280  
                               u9241 39F2                                 u9321 572E  
                               u9401 4532                                 u7730 5EA2  
                               u7810 48EA                                 u8290 60A8  
                               u7570 4010                                 u7490 3F6A  
                               u8370 5FCA                                 u8450 6346  
                               u8610 5658                                 u8530 54EC  
                               u7650 6E88                                 u9170 68C8  
                               u9090 62A2                                 u9250 3A28  
                               u9330 5788                                 u9410 4564  
                               u7731 5E9E                                 u7811 48E6  
                               u8291 60A4                                 u7571 400C  
                               u7491 3F66                                 u8371 5FC6  
                               u8611 5654                                 u7651 6E84  
                               u9171 68C4                                 u9091 629E  
                               u9067 625A                                 u9251 3A24  
                               u9331 5784                                 u9411 4560  
                               u7740 5ED4                                 u8700 59B0  
                               u7900 4A84                                 u7820 48FC  
                               u7580 404A                                 u8380 5FDA  
                               u8460 6364                                 u8620 5694  
                               u8540 551A                                 u7660 69A2  
                               u9260 3A5A                                 u9180 372C  
                               u9340 57D2                                 u9500 47C0  
                               u9420 4572                                 u7741 5ED0  
                               u8701 59AC                                 u7901 4A80  
                               u7821 48F8                                 u7581 4046  
                               u8381 5FD6                                 u8461 6360  
                               u8621 5690                                 u8605 5632  
                               u8541 5516                                 u7661 699E  
                               u9261 3A56                                 u9181 3728  
                               u9341 57CE                                 u9501 47BC  
                               u9421 456E                                 u7750 6414  
                               u8710 59CA                                 u7910 4AAE  
                               u7830 490C                                 u7590 405C  
                               u8470 638C                                 u8550 553C  
                               u8630 6CBC                                 u7670 69C4  
                               u8390 6ACA                                 u9270 3A7C  
                               u9190 3770                                 u9350 57F0  
                               u9510 4828                                 u9430 45B4  
                               u7751 6410                                 u8711 59C6  
                               u7911 4AAA                                 u7831 4908  
                               u7591 4058                                 u8471 6388  
                               u8455 633C                                 u8551 5538  
                               u8535 54E2                                 u8631 6CB8  
                               u7671 69C0                                 u8391 6AC6  
                               u9271 3A78                                 u9191 376C  
                               u9351 57EC                                 u9511 4824  
                               u9431 45B0                                 u7760 6436  
                               u8720 59DA                                 u8640 587A  
                               u7920 4AD2                                 u7840 494E  
                               u8480 63B6                                 u8800 2696  
                               u7680 69EC                                 u9280 3B12  
                               u9360 5800                                 u9520 483E  
                               u9440 45E2                                 u7761 6432  
                               u8721 59D6                                 u8641 5874  
                               u7921 4ACE                                 u7841 494A  
                               u8481 63B2                                 u8801 2692  
                               u7681 69E8                                 u9281 3B0E  
                               u9361 57FC                                 u9521 483A  
                               u9441 45DE                                 u7690 5DFC  
                               u7770 645C                                 u8650 587C  
                               u7930 4AE8                                 u7850 4960  
                               u8570 55A8                                 u8810 2722  
                               u8730 24EA                                 u9290 6D44  
                               u9610 6E44                                 u9370 580E  
                               u9450 4604                                 u7691 5DF8  
                               u7771 6458                                 u7931 4AE4  
                               u7851 495C                                 u8571 55A4  
                               u8811 271E                                 u8731 24E6  
                               u9291 6D40                                 u9611 6E40  
                               u9371 580A                                 u9451 4600  
                               u7780 647E                                 u8660 588E  
                               u7940 4B06                                 u7860 4970  
                               u8580 55CC                                 u8900 2A24  
                               u8820 2756                                 u8740 2534  
                               u9620 6A64                                 u9380 5848  
                               u9540 529C                                 u9700 015C  
                               u7781 647A                                 u8661 588A  
                               u7941 4B02                                 u7861 496C  
                               u8565 5550                                 u8901 2A20  
                               u8821 2752                                 u8741 2530  
                               u9621 6A60                                 u9381 5844  
                               u9605 543E                                 u9541 5298  
                               u9701 0158                                 u7790 649C  
                               u8670 58BA                                 u7950 4B26  
                               u7870 49AE                                 u8590 55E8  
                               u8566 555A                                 u8910 2A8C  
                               u8830 2792                                 u8750 2544  
                               u9630 6A90                                 u9390 5856  
                               u9550 52F4                                 u9470 4676  
                               u9710 0178                                 u7791 6498  
                               u8671 58B6                                 u7951 4B22  
                               u7871 49AA                                 u8495 63C8  
                               u8591 55E4                                 u8567 556A  
                               u8911 2A88                                 u8831 278E  
                               u8751 2540                                 u9631 6A8C  
                               u9391 5852                                 u9551 52F0  
                               u9535 48AA                                 u9471 4672  
                               u9711 0174                                 u8680 58D0  
                               u7960 4B36                                 u7880 49EE  
                               u8920 2AD2                                 u8840 281E  
                               u8760 2582                                 u9640 6AB2  
                               u9560 534C                                 u9480 46AE  
                               u9800 0374                                 u9720 01A8  
                               u8681 58CC                                 u7961 4B32  
                               u7881 49EA                                 u8585 55C2  
                               u8921 2ACE                                 u8841 281A  
                               u8761 257E                                 u9641 6AAE  
                               u9561 5348                                 u9481 46AA  
                               u9465 4636                                 u9801 0370  
                               u9721 01A4                                 u8690 599A  
                               u7970 4B64                                 u7890 4A62  
                               u8930 2AE2                                 u8850 2856  
                               u8770 2594                                 u9650 6688  
                               u9570 5374                                 u9490 4724  
                               u9466 4640                                 u9810 03AC  
                               u8691 5996                                 u7971 4B60  
                               u7891 4A5E                                 u8931 2ADE  
                               u8851 2852                                 u8771 2590  
                               u9651 6684                                 u9571 5370  
                               u9491 4720                                 u9467 4650  
                               u9811 03A8                                 u7980 4B7A  
                               u8940 2B7E                                 u8860 286E  
                               u8780 260A                                 u9580 53CC  
                               u9900 057A                                 u9820 0406  
                               u9660 007A                                 u7981 4B76  
                               u8941 2B7A                                 u8861 286A  
                               u8781 2606                                 u9581 53C8  
                               u9901 0576                                 u9821 0402  
                               u9661 0076                                 u7990 4B8E  
                               u8950 2BCA                                 u8870 28A4  
                               u8790 261C                                 u9590 5424  
                               u9910 05BE                                 u9830 0414  
                               u9750 026C                                 u9670 00AC  
                               u7991 4B8A                                 u8951 2BC6  
                               u8871 28A0                                 u8791 2618  
                               u9591 5420                                 u9911 05BA  
                               u9831 0410                                 u9735 01BE  
                               u9671 00A8                                 u8960 2C74  
                               u8880 28B2                                 u9920 0622  
                               u9840 0478                                 u9760 02A6  
                               u9736 01C8                                 u9680 00E4  
                               u8961 2C70                                 u8881 28AE  
                               u9921 061E                                 u9841 0474  
                               u9761 02A2                                 u9745 0218  
                               u9737 01D8                                 u9681 00E0  
                               u8970 2CB0                                 u8890 28DC  
                               u9930 065A                                 u9850 04C8  
                               u9770 0312                                 u9746 0222  
                               u9690 0106                                 u8971 2CAC  
                               u8891 28D8                                 u9931 0656  
                               u9851 04C4                                 u9771 030E  
                               u9755 0262                                 u9747 0232  
                               u9691 0102                                 u8980 2CBE  
                               u9940 06B0                                 u9860 04D6  
                               u9780 032E                                 u8981 2CBA  
                               u9941 06AC                                 u9861 04D2  
                               u9781 032A                                 u8990 2D12  
                               u9950 06C6                                 u9870 052A  
                               u9790 0366                                 u8991 2D0E  
                               u9951 06C2                                 u9871 0526  
                               u9791 0362                                 u9960 06E0  
                               u9880 0540                                 u9961 06DC  
                               u9881 053C                                 u9970 0712  
                               u9890 055C                                 u9971 070E  
                               u9891 0558                                 u9980 0736  
                               u9981 0732                                 u9990 0744  
                               u9991 0740                       Read_Sensors@Rs 00A7  
                               abs@a 000B                                 _dbuf 037A  
                               _cp_h 7ECD                                 _cp_l 7EC9  
                               _dp_h 7E65                                 _dp_l 7E5D  
                               _labs 6C18                                 _main 4C60  
                               _dtoa 586A                         _trigger_test 005E  
                               _prec 02FE                                 _powf 0012  
                               pad@i 0015                                 pad@p 0012  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf1 0FE7                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               _stoa 6206                                 btemp 005F  
                               _utoa 5CD4                     __end_of_ADC_Init 6F50  
                   __end_of_ADC_Read 6E52                        ___fpclassifyf 6306  
                               prodh 0FF4                                 prodl 0FF3  
                               start 000E                      ___fldiv@new_exp 0039  
                        main@voltage 040A                 Read_Sensors@raw_temp 007D  
                    __end_of_HighISR 6F12                 Read_Sensors@temp_adc 0095  
                       ___param_bank 0000            Handle_Commands@last_blink 0330  
                              ??_abs 000D                Read_Sensors@flame_adc 0097  
                              ??_pad 0014                    ?_Update_Actuators 0001  
                 ??_Update_Actuators 0068                   _Handle_Fire_Events 4FE6  
                      ___fltol@sign1 0009                      __end_of___aldiv 5EF6  
                              ?_labs 0001                      __end_of___almod 64EE  
                    __end_of___fladd 40CC                                ?_main 0001  
                              ?_dtoa 0017                      __end_of___fldiv 4C60  
                    __end_of___flneg 6EC2                                STR_10 7F71  
                              STR_11 7FD7                                STR_12 7FE0  
                              STR_13 7F61                                STR_21 7FFB  
                              STR_14 7FF0                                STR_15 7F61  
                              STR_24 7FE9                                STR_16 7F44  
                              STR_17 7ED1                                STR_18 7FF7  
                    __end_of___awmod 6826                      __end_of___flmul 44F2  
                              ?_powf 0068                      __end_of___flsub 6D96  
                    __end_of___fltol 5FFC                                ?_stoa 0009  
                              u10000 079C                                u10001 0798  
                              u10010 07BA                      __end_of___lldiv 6A20  
                              u10011 07B6                                u10100 1B10  
                              u10020 0AC6                                u10101 1B0C  
                              u10021 0AC2                                u10110 1B42  
                              u10111 1B3E                                ?_utoa 0017  
                              u10120 1B9A                                u10040 0BE8  
                              u10121 1B96                                u10041 0BE4  
                              u10050 0C10                                u10051 0C0C  
                              u10035 0B32                                u10300 5B96  
                              u10220 245A                                u10140 1C52  
                              u10036 0B3C                                u10301 5B92  
                              u10221 2456                                u10205 23DA  
                              u10141 1C4E                                u10037 0B4C  
                              u10230 24B2                                u10070 1A2C  
                              u10310 3094                                u10231 24AE  
                              u10215 2420                                u10135 1BDE  
                              u10071 1A28                                u10311 3090  
                              u10240 5A1C                                u10216 242A  
                              u10136 1BE8                                u10080 1A48  
                              u10400 3538                                u10320 30DA  
                              u10241 5A18                                u10217 243A  
                              u10137 1BF8                                u10081 1A44  
                              u10065 0E0A                                u10401 3534  
                              u10321 30D6                                u10250 5A34  
                              u10090 1AC4                                u10410 3566  
                              u10330 30FE                                u10251 5A30  
                              u10155 1C6C                                u10091 1AC0  
                              u10411 3562                                u10331 30FA  
                              u10260 5AD2                                u10156 1C76  
                              u10420 358E                                u10340 3134  
                              u10261 5ACE                                u10165 1CD6  
                              u10157 1C86                                u10421 358A  
                              u10341 3130                                u10270 5B1C  
                              u10510 4FF8                                u10190 1E06  
                              u10166 1CE0                                u10430 35EC  
                              u10350 3150                                u10271 5B18  
                              u10511 4FF4                                u10191 1E02  
                              u10175 1D2E                                u10167 1CF0  
                              u10431 35E8                                u10351 314C  
                              u10280 5B2E                                u10520 5008  
                              u10600 614A                                u10176 1D38  
                              u10360 3186                                u10440 5BBA  
                              u10281 5B26                                u10521 5004  
                              u10601 6146                                u10185 1DCC  
                              u10177 1D48                                u10361 3182  
                              u10441 5BB6                                u10530 5068  
                              u10610 615C                                u10186 1DD6  
                              u10370 3394                                u10450 5BF0  
                              u10531 5064                                u10611 6158  
                              u10187 1DE6                                u10371 3390  
                              u10451 5BEC                                u10540 50B6  
                              u10620 6B4E                                u10380 340C  
                              u10508 5CA2                                u10460 5C24  
                              u10700 67A2                                u10541 50B2  
                              u10621 6B4A                                u10381 3408  
                              u10461 5C20                                u10701 679E  
                              u10550 5102                                u10630 6B5E  
                              u10390 3450                                u10470 5C3C  
                              u10710 67BC                                u10551 50FE  
                              u10631 6B5A                                u10391 344C  
                              u10471 5C38                                u10711 67B8  
                              u10560 515C                                u10640 6B86  
                              u10480 5C8C                                u10720 67DA  
                    __end_of___llmod 6B3C                                u10561 5158  
                              u10641 6B82                                u10481 5C88  
                              u10721 67D6                                u10298 5B30  
                              u10570 516C                                u10650 6B96  
                              u10490 5C9E                                u10730 67F0  
                              u10571 5168                                u10651 6B92  
                              u10491 5C96                                u10731 67EC  
                              u10580 6112                                u10660 6586  
                              u10740 6814                                u10581 610E  
                              u10661 6582                                u10741 6810  
                              u10590 6124                                u10670 65B2  
                              u10750 4D76                                u10591 6120  
                              u10671 65AE                                u10751 4D72  
                              u10807 4C7A                                u10680 65D4  
                              u10760 4EF4                                u10681 65D0  
                              u10761 4EF0                                u10817 4D46  
                              u10690 6788                                u10770 4F56  
                              u10691 6784                                u10771 4F52  
                              u10827 4EC4                                u10780 4F6A  
                              u10837 4FD0                                u10781 4F66  
                              u10790 4F92                                u10847 6E30  
                              u10791 4F8E                                u10857 61D8  
                              u10867 5242                                i2l146 6F0E  
                              _RCREG 0FAE                         vfpfcnvrt@fmt 009D  
                              _SPBRG 0FAF                                _PORTB 0F81  
                              _TRISB 0F93                                _TXREG 0FAD  
                      ?_Read_Sensors 0001                  ?_Handle_Fire_Events 0001  
                              _lg2_h 7E89                                _lg2_l 7E85  
                              _flags 0370                  read_prec_or_width@c 0005  
                              _errno 0368                  read_prec_or_width@n 0006  
                              _ivln2 7E79                                _fputc 66BE  
                              _fputs 6DDA                      __end_of_ivln2_h 7EC9  
                    __end_of_ivln2_l 7E79                                _two24 7EBD  
                    __end_of_scalbnf 54A4                                labs@a 0001  
                              pad@fp 000F                                _width 036A  
                              _putch 6F60                                main@i 040E  
                              dtoa@d 0018                                dtoa@i 0023  
                              dtoa@p 0020                                _sqrtf 44F2  
                              dtoa@s 0022                                dtoa@w 001E  
                              tablat 0FF5                                powf@i 0128  
                              powf@j 01A8                                powf@k 01A4  
                              powf@n 0188                                powf@r 0150  
                              powf@s 0160                                powf@t 01B0  
                              powf@u 017C                                powf@v 0180  
                              powf@w 0144                                powf@x 0068  
                              powf@y 006C                                powf@z 01B4  
                              stoa@l 0012                                stoa@p 000E  
                              stoa@s 000A                                ttemp5 0060  
                              ttemp6 0063                                ttemp7 0067  
                              utoa@d 0018                                utoa@i 0020  
                              utoa@p 001E                                utoa@w 001C  
                              status 0FD8                                wtemp8 0060  
                    __end_of_sprintf 6DDA                       ?___fpclassifyf 0001  
                      main@adc_value 0404                           Send_Data@i 01C8  
                    _shutdown_system 0373                 ??_Handle_Fire_Events 00E4  
                    __initialization 6CBE                         __end_of_cp_h 7ED1  
                       __end_of_cp_l 7ECD                         __end_of_dp_h 7E6D  
                       __end_of_dp_l 7E65                         __end_of_labs 6C6E  
                       __end_of_main 4FE6                         __end_of_dtoa 5A0E  
                       __end_of_powf 24C8                         __end_of_stoa 6306  
                       __end_of_utoa 5DEC              ?_Handle_Shutdown_Events 0001  
                  ??_Handle_Commands 0001                 _Update_Actuators$755 005D  
               __end_of_Apply_Filter 66BE                               ??_labs 0005  
                             ??_main 00EE                               ??_dtoa 001C  
                             ??_powf 0070                               ??_stoa 000C  
                             ??_utoa 001C                        __activetblptr 0002  
                     ??_Read_Sensors 0079           __end_of_read_prec_or_width 68D2  
                             _ADCON1 0FC1                               _ADCON2 0FC0  
                             ?_fputc 0001                     ___llmod@dividend 0001  
                             ?_fputs 0009                               _ADRESH 0FC4  
                             _ADRESL 0FC3                               ?_putch 0001  
                             ?_sqrtf 0001                               i2l5832 6EF8  
                             i2l5834 6F06                               i2l5836 6F0C  
                             _MQ2_Ro 03DE                               _OSCCON 0FD3  
                      vfpfcnvrt@done 00A2                            ??_HighISR 0001  
                             _TRISA0 7C90                               _TRISA1 7C91  
                             _TRISA2 7C92                               _TRISC6 7CA6  
                             _TRISC7 7CA7         Handle_Fire_Events@water_used 00EA  
                   __end_of___xxtofl 586A                         vfprintf@cfmt 00AE  
     __end_of_Handle_Shutdown_Events 6BB2                    __end_of_UART_Init 6F3E  
       Send_History_Event@event_type 00E0                               ___flge 5FFC  
                             ___fleq 68D2         Handle_Fire_Events@start_data 0296  
                          ??___aldiv 0009                            ??___almod 0009  
                          ??___fladd 0049               Read_Sensors@last_pulse 036C  
                          ??___fldiv 0030                            ??___flneg 0005  
                          ??___awmod 0005                            ??___flmul 0017  
                          ??___flsub 0059                            ??___fltol 0005  
                          ??___lldiv 0009                            ??___llmod 0009  
                             _efgtoa 24C8                               _co_ppm 0358  
                    ADC_Read@channel 0005                               _floorf 54A4  
                             _memcpy 6C6E                 read_prec_or_width@ap 0002  
                             clear_0 6CE4           Handle_Fire_Events@end_data 0200  
                    ___awmod@divisor 0003                               isa$std 0001  
                    ___awmod@counter 0005                               pad@buf 0010  
                             dtoa@fp 0017                               _strcpy 6E52  
                    Apply_Filter@sum 0060                               fputc@c 0001  
                             fputs@c 000C                               fputs@i 000D  
                             fputs@s 0009                            ??_scalbnf 002E  
                    ___fpclassifyf@e 0009             Send_History_Event@buffer 0100  
                          ?_ADC_Init 0001                      ___fpclassifyf@u 000B  
                          ?_ADC_Read 0001                      ___fpclassifyf@x 0001  
                       __mediumconst 7E5C           Handle_Fire_Events@duration 00E6  
              Apply_Filter@new_value 0051                               powf@s2 0190  
                             powf@t1 018C                               powf@t2 011C  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             powf@y1 012C                               tblptru 0FF8  
       Send_History_Event@extra_data 00E2                               powf@ax 0178  
                             powf@is 0198                               powf@hx 0168  
                             powf@hy 0184                               powf@ix 01AC  
                             powf@iy 0194                               powf@sn 0164  
                             stoa@cp 0010                               stoa@fp 0009  
                             putch@c 0001                     __end_of_vfprintf 6D50  
                             utoa@fp 0017                               sqrtf@i 000E  
                             sqrtf@m 001A                               sqrtf@q 0012  
                             sqrtf@r 001E                               sqrtf@s 000A  
                             sqrtf@t 0016                               sqrtf@x 0001  
                          ??_sprintf 005D                           ___flge@ff1 0060  
                    ??___fpclassifyf 0005                           ___flge@ff2 0064  
                       ___xxtofl@arg 000B                         ___xxtofl@exp 000A  
                       ___xxtofl@val 0001                           ___fleq@ff1 0001  
                         ___fleq@ff2 0005                           __accesstop 0060  
            __end_of__initialization 6CFA                __end_of_TEST_DURATION 7EC5  
                         ___flneg@f1 0001  Handle_Shutdown_Events@prev_shutdown 0371  
                      ___rparam_used 0001                           ___fltol@f1 0001  
            Read_Sensors@mq2_voltage 009B                       __pcstackCOMRAM 0001  
                       __pidataBANK3 6F12                        __end_of_lg2_h 7E8D  
                      __end_of_lg2_l 7E89                        __end_of_ivln2 7E7D  
                      __end_of_fputc 6778                        __end_of_fputs 6E1A  
                      __end_of_two24 7EC1                        __end_of_putch 6F62  
                      __end_of_sqrtf 48D0                           __end_of_L1 7EBD  
                         __end_of_L2 7EB9                           __end_of_L3 7EB5  
                         __end_of_L4 7EB1                           __end_of_L5 7EAD  
                         __end_of_L6 7EA9                           __end_of_P1 7EA5  
                         __end_of_P2 7EA1                           __end_of_P3 7E9D  
                         __end_of_P4 7E99                           __end_of_P5 7E95  
                         __end_of_bp 7E75                           __end_of_cp 7E81  
                       _alarm_active 0377                           ??_ADC_Init 0001  
                         ??_ADC_Read 0003                  _fire_trigger_sensor 03CA  
                  __end_of_Send_Data 65D6                              ??_fputc 0004  
                            ??_fputs 000C                              ??_putch 0001  
                            ??_sqrtf 0005                           __pbssBANK2 02FA  
                         __pbssBANK3 0300                   _Handle_Test_Events 6102  
               __end_of_Read_Sensors 3708                              ?___flge 0060  
                            ?___fleq 0001                  ?_Handle_Test_Events 0001  
                            ?_efgtoa 0068                              ?_floorf 0041  
                            ?_memcpy 0001                           _co_samples 0300  
                Send_History_Event@i 01C8                              ?_strcpy 0001  
                          ?___xxtofl 0001                           _fire_alarm 0376  
               ??_Handle_Test_Events 00E4                         _Apply_Filter 65D6  
                            _HighISR 0008                      _Handle_Commands 5A0E  
                    _flame_intensity 0360                              __Hparam 0000  
                            __Lparam 0000                              ___aldiv 5DEC  
                            ___almod 6404                              ___fladd 3C16  
                            ___fldiv 48D0                              ___flneg 6E8A  
                            ___awmod 6778                              ___flmul 40CC  
                            ___flsub 6D50                              ___fltol 5EF6  
                            ___lldiv 697C                              ___llmod 6AB4  
                          ?_vfprintf 00AA                              __pcinit 6CBE  
                            __ramtop 0800                              __ptext0 4C60  
                            __ptext1 6778                              __ptext2 5BA4  
                            __ptext3 6F2A                              __ptext4 64EE  
                            __ptext5 2EB8                              __ptext6 0012  
                            __ptext7 44F2                              __ptext8 5270  
                            __ptext9 56B6                read_prec_or_width@fmt 0001  
                            _ivln2_h 7EC5                              _ivln2_l 7E75  
                         ??___xxtofl 0005                              _scalbnf 5270  
                   ___awmod@dividend 0001           Read_Sensors@last_flow_time 0328  
                   ___aldiv@dividend 0001                              efgtoa@c 006D  
                            efgtoa@d 007B                              efgtoa@e 007F  
                            efgtoa@f 0069                      _prev_fire_alarm 0375  
                            efgtoa@g 0092                              efgtoa@h 0089  
                            efgtoa@i 0087                              efgtoa@l 008D  
                            efgtoa@m 007D                              efgtoa@n 0096  
                            efgtoa@p 0072                              efgtoa@t 0074  
                            efgtoa@u 0098                              efgtoa@w 0081  
                            _sprintf 6D96                       __pintcode_body 6EF6  
               end_of_initialization 6CFA            Read_Sensors@no_flow_start 0324  
                            floorf@e 004F                              floorf@m 004B  
                            floorf@u 0051                              floorf@x 0041  
                            memcpy@d 0008                              memcpy@n 0005  
                            memcpy@s 000A                              fputc@fp 0003  
                      __Lmediumconst 7E5C                              int_func 6EF6  
                            fputs@fp 000B                   _read_prec_or_width 6826  
                    ___lldiv@divisor 0005                      ___lldiv@counter 000D  
                            powf@p_h 01A0                              powf@p_l 016C  
                            powf@s_h 0174                              powf@t_h 0170  
                            powf@s_l 0130                              powf@t_l 0134  
                            powf@z_h 0120                              powf@z_l 0124  
                  __end_of_vfpfcnvrt 3C16                           efgtoa@mode 0079  
                         efgtoa@sign 0091                            _RCSTAbits 0FAB  
                   ___aldiv@quotient 000B                              postdec1 0FE5  
                            postdec2 0FDD                  ?_read_prec_or_width 0001  
                            postinc0 0FEE                              postinc1 0FE6  
                            postinc2 0FDE                     vfpfcnvrt@convarg 00A3  
         __end_of_Send_History_Event 6AB4                           ??_vfprintf 005D  
                            sqrtf@ix 0022                              strcpy@d 0005  
                          _UART_Init 6F2A                            _PORTBbits 0F81  
                        ___fladd@grs 0050                        ___xxtofl@sign 0009  
                          _TRISBbits 0F93                 ??_read_prec_or_width 0003  
                        ___fldiv@grs 003B                          ___fldiv@rem 0034  
            __end_of_Handle_Commands 5BA4                  Read_Sensors@mq2_adc 0099  
                        ___flmul@grs 001D                           _total_flow 0350  
                          _TXSTAbits 0FAC                  Read_Sensors@last_co 032C  
            Read_Sensors@temp_factor 0085                       __end_of___flge 6102  
                     __end_of___fleq 697C                          vfpfcnvrt@ap 009E  
                        vfpfcnvrt@cp 00A8                          vfpfcnvrt@fp 009C  
                         ?_UART_Init 0001                        _system_millis 02FA  
                     __end_of_efgtoa 2EB8                       __end_of_floorf 56B6  
                     __end_of_memcpy 6CBE                           floorf@F521 0314  
                Apply_Filter@samples 0055                       __end_of_strcpy 6E8A  
                start_initialization 6CBE                         _Read_Sensors 2EB8  
                        __end_of_lg2 7E91                          __end_of_abs 6EF6  
                        __end_of_pad 6C18                          __end_of_ovt 7E85  
                   _Update_Actuators 5BA4           Read_Sensors@current_pulses 00A3  
            Read_Sensors@rs_ro_ratio 009F                            _Send_Data 64EE  
              __end_of___fpclassifyf 6404                      ___llmod@divisor 0005  
                    ___llmod@counter 0009                          vfprintf@fmt 00AB  
                           ??___flge 0059                             ??___fleq 0009  
                           ??_efgtoa 006E                          __pdataBANK3 03DE  
                           ??_floorf 0045                             ??_memcpy 0007  
            Read_Sensors@pulses_diff 00A5                             ??_strcpy 0005  
                          ___fladd@a 0045                            ___fladd@b 0041  
                     _Interrupt_Init 6F50                            ___fldiv@a 002C  
                          ___fldiv@b 0028                            ___flmul@a 0013  
                          ___flmul@b 000F                          __pbssCOMRAM 005E  
                          ___flsub@a 0055                            ___flsub@b 0051  
                      __pcstackBANK0 0060                        __pcstackBANK1 0100  
                      __pcstackBANK2 0200                        __pcstackBANK4 0400  
                   ?_Handle_Commands 0001                             ?_HighISR 0001  
                         ?_Send_Data 0001             ??_Handle_Shutdown_Events 005D  
                        _efgtoa$1379 0076                            _main$1837 0400  
                          _dtoa$1348 001C                   _flame_base_voltage 035C  
                          __pintcode 0008                        __pmediumconst 7E5C  
                           ?___aldiv 0001                             ?___almod 0001  
                           ?___fladd 0041                             ?___fldiv 0028  
                           ?___flneg 0001                             ?___awmod 0001  
                           ?___flmul 000F                             ?___flsub 0051  
                           ?___fltol 0001                             ?___lldiv 0001  
                     _flame_detected 0379                             ?___llmod 0001  
                        ??_UART_Init 0001               __end_of_Interrupt_Init 6F60  
                   ___almod@dividend 0001                          __smallconst 7E5C  
                           ?_scalbnf 0028                             _ADC_Init 6F3E  
                           _ADC_Read 6E1A                            _flow_rate 0354  
                           ?_sprintf 00B0                      main@cycle_count 0408  
                    ___aldiv@divisor 0005                            _powf$1841 0148  
                          _powf$1842 0158                            _powf$1850 0140  
                          _powf$1843 014C                            _powf$1851 0108  
                          _powf$1844 019C                            _powf$1852 010C  
                          _powf$1845 0138                            _powf$1853 0110  
                          _powf$1854 0114                            _powf$1846 0100  
                          _powf$1855 0118                            _powf$1847 0104  
                          _powf$1848 015C                            _powf$1849 013C  
                    ___aldiv@counter 0009                        _TEST_DURATION 7EC1  
                           _PIR1bits 0F9E                             i2u715_40 6F06  
                           i2u715_41 6F02                             _RCONbits 0FD0  
                         powf@yisint 0154                            _vfpfcnvrt 3708  
                    ?_Interrupt_Init 0001                           _ADCON0bits 0FC2  
                          main@i_676 0410                   Read_Sensors@raw_co 00AB  
                 _Send_History_Event 6A20                           vfpfcnvrt@c 00A7  
                        _INTCON2bits 0FF1                          _INTCON3bits 0FF0  
                          copy_data0 6CD2                      _test_start_flow 0334  
                ?_Send_History_Event 00E0                      _test_start_time 034C  
                        ??_Send_Data 005D           __end_of_Handle_Fire_Events 5270  
                           __Hrparam 0000                            memcpy@tmp 0007  
                         vfprintf@ap 00AD                             __Lrparam 0000  
                         vfprintf@fp 00AA                        Apply_Filter@i 0064  
                       _sample_index 0374             __end_of_Update_Actuators 5CD4  
                         ?_vfpfcnvrt 009C                 ??_Send_History_Event 005D  
                 ___fpclassifyf@F465 0318                           sprintf@fmt 00B2  
                           ___xxtofl 56B6            Read_Sensors@flame_voltage 0081  
                           __ptext10 65D6                             __ptext11 6E1A  
                           __ptext20 5CD4                             __ptext12 6F50  
                           __ptext21 6AB4                             __ptext13 6102  
                           __ptext30 6306                             __ptext22 697C  
                           __ptext14 6B3C                             __ptext31 5EF6  
                           __ptext23 6206                             __ptext15 4FE6  
                           __ptext40 6BB2                             __ptext32 6D50  
                           __ptext24 6826                             __ptext16 6A20  
                           __ptext41 6DDA                             __ptext33 3C16  
                           __ptext25 24C8                             __ptext17 6D96  
                           __ptext42 66BE                             __ptext34 6E8A  
                           __ptext26 6E52                             __ptext18 6D08  
                           __ptext43 6F60                             __ptext35 40CC  
                           __ptext27 6C6E                             __ptext19 3708  
                           __ptext44 6EC2                             __ptext36 5FFC  
                           __ptext28 6C18                             __ptext45 6404  
                           __ptext37 68D2                             __ptext29 54A4  
                           __ptext46 5DEC                             __ptext38 48D0  
                           __ptext47 5A0E                             __ptext39 586A  
                           __ptext48 6F3E                   Handle_Commands@cmd 0005  
                    ___almod@divisor 0005                      ___almod@counter 0009  
                         strcpy@dest 0001                             efgtoa@fp 0068  
                           efgtoa@ne 0070                             efgtoa@pp 0078  
                           efgtoa@ou 0083         Handle_Test_Events@water_used 01FC  
                           isa$xinst 0000                             int$flags 005F  
                           _vfprintf 6D08               _Handle_Shutdown_Events 6B3C  
                         _INTCONbits 0FF2                         _temp_samples 03E2  
                           memcpy@d1 0001                             memcpy@s1 0003  
                           scalbnf@n 002C                             scalbnf@u 0032  
                           scalbnf@x 0028                             scalbnf@y 0036  
                   _fire_start_flame 0340                             intlevel2 0000  
                          sprintf@ap 00D4                        ?_Apply_Filter 0051  
                   ___lldiv@dividend 0001                            strcpy@src 0003  
        Handle_Test_Events@prev_test 0372          Handle_Test_Events@test_data 01CA  
                        efgtoa@nmode 007A                          ??_vfpfcnvrt 00A0  
         Update_Actuators@last_blink 031C                      _fire_start_flow 0338  
                        _temperature 0364                             sprintf@f 00D5  
                           sprintf@s 00B0                      _fire_start_temp 0344  
                    _fire_start_time 0348                    main@adc_value_677 0406  
                   ___lldiv@quotient 0009                         ___aldiv@sign 000A  
                      ___fladd@signs 004D                       ??_Apply_Filter 0057  
                       ___almod@sign 000A                         ___fladd@aexp 004E  
                       ___fladd@bexp 004F                        _fire_start_co 033C  
       Read_Sensors@o_flow_start_748 0320  
