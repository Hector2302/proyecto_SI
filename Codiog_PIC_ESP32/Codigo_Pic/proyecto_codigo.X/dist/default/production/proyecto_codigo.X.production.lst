

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jul 07 22:05:02 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK3,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    59                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=3
    60                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=3
    61                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=3
    62                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Version 2.20
    75                           ; Generated 12/02/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4550 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000FE0                     bsr             equ	4064
   109   000FE9                     fsr0            equ	4073
   110   000FEA                     fsr0h           equ	4074
   111   000FE9                     fsr0l           equ	4073
   112   000FE1                     fsr1            equ	4065
   113   000FE2                     fsr1h           equ	4066
   114   000FE1                     fsr1l           equ	4065
   115   000FD9                     fsr2            equ	4057
   116   000FDA                     fsr2h           equ	4058
   117   000FD9                     fsr2l           equ	4057
   118   000FEF                     indf0           equ	4079
   119   000FE7                     indf1           equ	4071
   120   000FDF                     indf2           equ	4063
   121   000FF2                     intcon          equ	4082
   122   000000                     nvmcon          equ	0
   123   000FF9                     pcl             equ	4089
   124   000FFA                     pclath          equ	4090
   125   000FFB                     pclatu          equ	4091
   126   000FEB                     plusw0          equ	4075
   127   000FE3                     plusw1          equ	4067
   128   000FDB                     plusw2          equ	4059
   129   000FED                     postdec0        equ	4077
   130   000FE5                     postdec1        equ	4069
   131   000FDD                     postdec2        equ	4061
   132   000FEE                     postinc0        equ	4078
   133   000FE6                     postinc1        equ	4070
   134   000FDE                     postinc2        equ	4062
   135   000FEC                     preinc0         equ	4076
   136   000FE4                     preinc1         equ	4068
   137   000FDC                     preinc2         equ	4060
   138   000FF3                     prod            equ	4083
   139   000FF4                     prodh           equ	4084
   140   000FF3                     prodl           equ	4083
   141   000FD8                     status          equ	4056
   142   000FF5                     tablat          equ	4085
   143   000FF6                     tblptr          equ	4086
   144   000FF7                     tblptrh         equ	4087
   145   000FF6                     tblptrl         equ	4086
   146   000FF8                     tblptru         equ	4088
   147   000FFD                     tosl            equ	4093
   148   000FE8                     wreg            equ	4072
   149   000F62                     SPPDATA         equ	3938	;# 
   150   000F63                     SPPCFG          equ	3939	;# 
   151   000F64                     SPPEPS          equ	3940	;# 
   152   000F65                     SPPCON          equ	3941	;# 
   153   000F66                     UFRM            equ	3942	;# 
   154   000F66                     UFRML           equ	3942	;# 
   155   000F67                     UFRMH           equ	3943	;# 
   156   000F68                     UIR             equ	3944	;# 
   157   000F69                     UIE             equ	3945	;# 
   158   000F6A                     UEIR            equ	3946	;# 
   159   000F6B                     UEIE            equ	3947	;# 
   160   000F6C                     USTAT           equ	3948	;# 
   161   000F6D                     UCON            equ	3949	;# 
   162   000F6E                     UADDR           equ	3950	;# 
   163   000F6F                     UCFG            equ	3951	;# 
   164   000F70                     UEP0            equ	3952	;# 
   165   000F71                     UEP1            equ	3953	;# 
   166   000F72                     UEP2            equ	3954	;# 
   167   000F73                     UEP3            equ	3955	;# 
   168   000F74                     UEP4            equ	3956	;# 
   169   000F75                     UEP5            equ	3957	;# 
   170   000F76                     UEP6            equ	3958	;# 
   171   000F77                     UEP7            equ	3959	;# 
   172   000F78                     UEP8            equ	3960	;# 
   173   000F79                     UEP9            equ	3961	;# 
   174   000F7A                     UEP10           equ	3962	;# 
   175   000F7B                     UEP11           equ	3963	;# 
   176   000F7C                     UEP12           equ	3964	;# 
   177   000F7D                     UEP13           equ	3965	;# 
   178   000F7E                     UEP14           equ	3966	;# 
   179   000F7F                     UEP15           equ	3967	;# 
   180   000F80                     PORTA           equ	3968	;# 
   181   000F81                     PORTB           equ	3969	;# 
   182   000F82                     PORTC           equ	3970	;# 
   183   000F83                     PORTD           equ	3971	;# 
   184   000F84                     PORTE           equ	3972	;# 
   185   000F89                     LATA            equ	3977	;# 
   186   000F8A                     LATB            equ	3978	;# 
   187   000F8B                     LATC            equ	3979	;# 
   188   000F8C                     LATD            equ	3980	;# 
   189   000F8D                     LATE            equ	3981	;# 
   190   000F92                     TRISA           equ	3986	;# 
   191   000F92                     DDRA            equ	3986	;# 
   192   000F93                     TRISB           equ	3987	;# 
   193   000F93                     DDRB            equ	3987	;# 
   194   000F94                     TRISC           equ	3988	;# 
   195   000F94                     DDRC            equ	3988	;# 
   196   000F95                     TRISD           equ	3989	;# 
   197   000F95                     DDRD            equ	3989	;# 
   198   000F96                     TRISE           equ	3990	;# 
   199   000F96                     DDRE            equ	3990	;# 
   200   000F9B                     OSCTUNE         equ	3995	;# 
   201   000F9D                     PIE1            equ	3997	;# 
   202   000F9E                     PIR1            equ	3998	;# 
   203   000F9F                     IPR1            equ	3999	;# 
   204   000FA0                     PIE2            equ	4000	;# 
   205   000FA1                     PIR2            equ	4001	;# 
   206   000FA2                     IPR2            equ	4002	;# 
   207   000FA6                     EECON1          equ	4006	;# 
   208   000FA7                     EECON2          equ	4007	;# 
   209   000FA8                     EEDATA          equ	4008	;# 
   210   000FA9                     EEADR           equ	4009	;# 
   211   000FAB                     RCSTA           equ	4011	;# 
   212   000FAB                     RCSTA1          equ	4011	;# 
   213   000FAC                     TXSTA           equ	4012	;# 
   214   000FAC                     TXSTA1          equ	4012	;# 
   215   000FAD                     TXREG           equ	4013	;# 
   216   000FAD                     TXREG1          equ	4013	;# 
   217   000FAE                     RCREG           equ	4014	;# 
   218   000FAE                     RCREG1          equ	4014	;# 
   219   000FAF                     SPBRG           equ	4015	;# 
   220   000FAF                     SPBRG1          equ	4015	;# 
   221   000FB0                     SPBRGH          equ	4016	;# 
   222   000FB1                     T3CON           equ	4017	;# 
   223   000FB2                     TMR3            equ	4018	;# 
   224   000FB2                     TMR3L           equ	4018	;# 
   225   000FB3                     TMR3H           equ	4019	;# 
   226   000FB4                     CMCON           equ	4020	;# 
   227   000FB5                     CVRCON          equ	4021	;# 
   228   000FB6                     ECCP1AS         equ	4022	;# 
   229   000FB6                     CCP1AS          equ	4022	;# 
   230   000FB7                     ECCP1DEL        equ	4023	;# 
   231   000FB7                     CCP1DEL         equ	4023	;# 
   232   000FB8                     BAUDCON         equ	4024	;# 
   233   000FB8                     BAUDCTL         equ	4024	;# 
   234   000FBA                     CCP2CON         equ	4026	;# 
   235   000FBB                     CCPR2           equ	4027	;# 
   236   000FBB                     CCPR2L          equ	4027	;# 
   237   000FBC                     CCPR2H          equ	4028	;# 
   238   000FBD                     CCP1CON         equ	4029	;# 
   239   000FBD                     ECCP1CON        equ	4029	;# 
   240   000FBE                     CCPR1           equ	4030	;# 
   241   000FBE                     CCPR1L          equ	4030	;# 
   242   000FBF                     CCPR1H          equ	4031	;# 
   243   000FC0                     ADCON2          equ	4032	;# 
   244   000FC1                     ADCON1          equ	4033	;# 
   245   000FC2                     ADCON0          equ	4034	;# 
   246   000FC3                     ADRES           equ	4035	;# 
   247   000FC3                     ADRESL          equ	4035	;# 
   248   000FC4                     ADRESH          equ	4036	;# 
   249   000FC5                     SSPCON2         equ	4037	;# 
   250   000FC6                     SSPCON1         equ	4038	;# 
   251   000FC7                     SSPSTAT         equ	4039	;# 
   252   000FC8                     SSPADD          equ	4040	;# 
   253   000FC9                     SSPBUF          equ	4041	;# 
   254   000FCA                     T2CON           equ	4042	;# 
   255   000FCB                     PR2             equ	4043	;# 
   256   000FCB                     MEMCON          equ	4043	;# 
   257   000FCC                     TMR2            equ	4044	;# 
   258   000FCD                     T1CON           equ	4045	;# 
   259   000FCE                     TMR1            equ	4046	;# 
   260   000FCE                     TMR1L           equ	4046	;# 
   261   000FCF                     TMR1H           equ	4047	;# 
   262   000FD0                     RCON            equ	4048	;# 
   263   000FD1                     WDTCON          equ	4049	;# 
   264   000FD2                     HLVDCON         equ	4050	;# 
   265   000FD2                     LVDCON          equ	4050	;# 
   266   000FD3                     OSCCON          equ	4051	;# 
   267   000FD5                     T0CON           equ	4053	;# 
   268   000FD6                     TMR0            equ	4054	;# 
   269   000FD6                     TMR0L           equ	4054	;# 
   270   000FD7                     TMR0H           equ	4055	;# 
   271   000FD8                     STATUS          equ	4056	;# 
   272   000FD9                     FSR2            equ	4057	;# 
   273   000FD9                     FSR2L           equ	4057	;# 
   274   000FDA                     FSR2H           equ	4058	;# 
   275   000FDB                     PLUSW2          equ	4059	;# 
   276   000FDC                     PREINC2         equ	4060	;# 
   277   000FDD                     POSTDEC2        equ	4061	;# 
   278   000FDE                     POSTINC2        equ	4062	;# 
   279   000FDF                     INDF2           equ	4063	;# 
   280   000FE0                     BSR             equ	4064	;# 
   281   000FE1                     FSR1            equ	4065	;# 
   282   000FE1                     FSR1L           equ	4065	;# 
   283   000FE2                     FSR1H           equ	4066	;# 
   284   000FE3                     PLUSW1          equ	4067	;# 
   285   000FE4                     PREINC1         equ	4068	;# 
   286   000FE5                     POSTDEC1        equ	4069	;# 
   287   000FE6                     POSTINC1        equ	4070	;# 
   288   000FE7                     INDF1           equ	4071	;# 
   289   000FE8                     WREG            equ	4072	;# 
   290   000FE9                     FSR0            equ	4073	;# 
   291   000FE9                     FSR0L           equ	4073	;# 
   292   000FEA                     FSR0H           equ	4074	;# 
   293   000FEB                     PLUSW0          equ	4075	;# 
   294   000FEC                     PREINC0         equ	4076	;# 
   295   000FED                     POSTDEC0        equ	4077	;# 
   296   000FEE                     POSTINC0        equ	4078	;# 
   297   000FEF                     INDF0           equ	4079	;# 
   298   000FF0                     INTCON3         equ	4080	;# 
   299   000FF1                     INTCON2         equ	4081	;# 
   300   000FF2                     INTCON          equ	4082	;# 
   301   000FF3                     PROD            equ	4083	;# 
   302   000FF3                     PRODL           equ	4083	;# 
   303   000FF4                     PRODH           equ	4084	;# 
   304   000FF5                     TABLAT          equ	4085	;# 
   305   000FF6                     TBLPTR          equ	4086	;# 
   306   000FF6                     TBLPTRL         equ	4086	;# 
   307   000FF7                     TBLPTRH         equ	4087	;# 
   308   000FF8                     TBLPTRU         equ	4088	;# 
   309   000FF9                     PCLAT           equ	4089	;# 
   310   000FF9                     PC              equ	4089	;# 
   311   000FF9                     PCL             equ	4089	;# 
   312   000FFA                     PCLATH          equ	4090	;# 
   313   000FFB                     PCLATU          equ	4091	;# 
   314   000FFC                     STKPTR          equ	4092	;# 
   315   000FFD                     TOS             equ	4093	;# 
   316   000FFD                     TOSL            equ	4093	;# 
   317   000FFE                     TOSH            equ	4094	;# 
   318   000FFF                     TOSU            equ	4095	;# 
   319                           
   320                           	psect	idataBANK3
   321   006DFA                     __pidataBANK3:
   322                           	callstack 0
   323                           
   324                           ;initializer for _MQ2_Ro
   325   006DFA  0000               	dw	0
   326   006DFC  4120               	dw	16672
   327                           
   328                           ;initializer for _temp_samples
   329   006DFE  0000               	dw	0
   330   006E00  41C8               	dw	16840
   331   006E02  0000               	dw	0
   332   006E04  41C8               	dw	16840
   333   006E06  0000               	dw	0
   334   006E08  41C8               	dw	16840
   335   006E0A  0000               	dw	0
   336   006E0C  41C8               	dw	16840
   337   006E0E  0000               	dw	0
   338   006E10  41C8               	dw	16840
   339                           
   340                           	psect	mediumconst
   341   007E5C                     __pmediumconst:
   342                           	callstack 0
   343   007E5C  00                 	db	0
   344   007E5D                     _dp_l:
   345                           	callstack 0
   346   007E5D  0000               	dw	0
   347   007E5F  0000               	dw	0
   348   007E61  CFDC               	dw	53212
   349   007E63  35D1               	dw	13777
   350   007E65                     __end_of_dp_l:
   351                           	callstack 0
   352   007E65                     _dp_h:
   353                           	callstack 0
   354   007E65  0000               	dw	0
   355   007E67  0000               	dw	0
   356   007E69  C000               	dw	49152
   357   007E6B  3F15               	dw	16149
   358   007E6D                     __end_of_dp_h:
   359                           	callstack 0
   360   007E6D                     _bp:
   361                           	callstack 0
   362   007E6D  0000               	dw	0
   363   007E6F  3F80               	dw	16256
   364   007E71  0000               	dw	0
   365   007E73  3FC0               	dw	16320
   366   007E75                     __end_of_bp:
   367                           	callstack 0
   368   007E75  A570               	dw	42352
   369   007E77  36EC               	dw	14060
   370   007E79                     __end_of_ivln2_l:
   371                           	callstack 0
   372   007E79  AA3B               	dw	43579
   373   007E7B  3FB8               	dw	16312
   374   007E7D                     __end_of_ivln2:
   375                           	callstack 0
   376   007E7D  384F               	dw	14415
   377   007E7F  3F76               	dw	16246
   378   007E81                     __end_of_cp:
   379                           	callstack 0
   380   007E81  AA3C               	dw	43580
   381   007E83  3338               	dw	13112
   382   007E85                     __end_of_ovt:
   383                           	callstack 0
   384   007E85  BE8C               	dw	48780
   385   007E87  35BF               	dw	13759
   386   007E89                     __end_of_lg2_l:
   387                           	callstack 0
   388   007E89  7200               	dw	29184
   389   007E8B  3F31               	dw	16177
   390   007E8D                     __end_of_lg2_h:
   391                           	callstack 0
   392   007E8D  7218               	dw	29208
   393   007E8F  3F31               	dw	16177
   394   007E91                     __end_of_lg2:
   395                           	callstack 0
   396   007E91  BB4C               	dw	47948
   397   007E93  3331               	dw	13105
   398   007E95                     __end_of_P5:
   399                           	callstack 0
   400   007E95  EA0E               	dw	59918
   401   007E97  B5DD               	dw	46557
   402   007E99                     __end_of_P4:
   403                           	callstack 0
   404   007E99  B355               	dw	45909
   405   007E9B  388A               	dw	14474
   406   007E9D                     __end_of_P3:
   407                           	callstack 0
   408   007E9D  0B61               	dw	2913
   409   007E9F  BB36               	dw	47926
   410   007EA1                     __end_of_P2:
   411                           	callstack 0
   412   007EA1  AAAB               	dw	43691
   413   007EA3  3E2A               	dw	15914
   414   007EA5                     __end_of_P1:
   415                           	callstack 0
   416   007EA5  F142               	dw	61762
   417   007EA7  3E53               	dw	15955
   418   007EA9                     __end_of_L6:
   419                           	callstack 0
   420   007EA9  3255               	dw	12885
   421   007EAB  3E6C               	dw	15980
   422   007EAD                     __end_of_L5:
   423                           	callstack 0
   424   007EAD  A305               	dw	41733
   425   007EAF  3E8B               	dw	16011
   426   007EB1                     __end_of_L4:
   427                           	callstack 0
   428   007EB1  AAAB               	dw	43691
   429   007EB3  3EAA               	dw	16042
   430   007EB5                     __end_of_L3:
   431                           	callstack 0
   432   007EB5  6DB7               	dw	28087
   433   007EB7  3EDB               	dw	16091
   434   007EB9                     __end_of_L2:
   435                           	callstack 0
   436   007EB9  999A               	dw	39322
   437   007EBB  3F19               	dw	16153
   438   007EBD                     __end_of_L1:
   439                           	callstack 0
   440   007EBD  0000               	dw	0
   441   007EBF  4B80               	dw	19328
   442   007EC1                     __end_of_two24:
   443                           	callstack 0
   444   007EC1  2710               	dw	10000
   445   007EC3  0000               	dw	0
   446   007EC5                     __end_of_TEST_DURATION:
   447                           	callstack 0
   448   007EC5  AA00               	dw	43520
   449   007EC7  3FB8               	dw	16312
   450   007EC9                     __end_of_ivln2_h:
   451                           	callstack 0
   452   007EC9  23C6               	dw	9158
   453   007ECB  B8F6               	dw	47350
   454   007ECD                     __end_of_cp_l:
   455                           	callstack 0
   456   007ECD  4000               	dw	16384
   457   007ECF  3F76               	dw	16246
   458   007ED1                     __end_of_cp_h:
   459                           	callstack 0
   460   007CA7                     _TRISC7         set	31911
   461   007CA6                     _TRISC6         set	31910
   462   007C92                     _TRISA2         set	31890
   463   007C91                     _TRISA1         set	31889
   464   007C90                     _TRISA0         set	31888
   465   000FAB                     _RCSTAbits      set	4011
   466   000FAF                     _SPBRG          set	4015
   467   000FF2                     _INTCONbits     set	4082
   468   000FD0                     _RCONbits       set	4048
   469   000FF1                     _INTCON2bits    set	4081
   470   000F93                     _TRISBbits      set	3987
   471   000FC3                     _ADRESL         set	4035
   472   000FC4                     _ADRESH         set	4036
   473   000FC0                     _ADCON2         set	4032
   474   000FC1                     _ADCON1         set	4033
   475   000FC2                     _ADCON0bits     set	4034
   476   000FAD                     _TXREG          set	4013
   477   000FAC                     _TXSTAbits      set	4012
   478   000FAE                     _RCREG          set	4014
   479   000F9E                     _PIR1bits       set	3998
   480   000F81                     _PORTBbits      set	3969
   481   000F81                     _PORTB          set	3969
   482   000F93                     _TRISB          set	3987
   483   000FD3                     _OSCCON         set	4051
   484   000FF0                     _INTCON3bits    set	4080
   485   007ED1                     STR_17:
   486   007ED1  7B                 	db	123
   487   007ED2  22                 	db	34
   488   007ED3  74                 	db	116	;'t'
   489   007ED4  22                 	db	34
   490   007ED5  3A                 	db	58	;':'
   491   007ED6  25                 	db	37
   492   007ED7  2E                 	db	46
   493   007ED8  31                 	db	49	;'1'
   494   007ED9  66                 	db	102	;'f'
   495   007EDA  2C                 	db	44
   496   007EDB  22                 	db	34
   497   007EDC  66                 	db	102	;'f'
   498   007EDD  64                 	db	100	;'d'
   499   007EDE  22                 	db	34
   500   007EDF  3A                 	db	58	;':'
   501   007EE0  25                 	db	37
   502   007EE1  64                 	db	100	;'d'
   503   007EE2  2C                 	db	44
   504   007EE3  22                 	db	34
   505   007EE4  66                 	db	102	;'f'
   506   007EE5  69                 	db	105	;'i'
   507   007EE6  22                 	db	34
   508   007EE7  3A                 	db	58	;':'
   509   007EE8  25                 	db	37
   510   007EE9  2E                 	db	46
   511   007EEA  31                 	db	49	;'1'
   512   007EEB  66                 	db	102	;'f'
   513   007EEC  2C                 	db	44
   514   007EED  22                 	db	34
   515   007EEE  63                 	db	99	;'c'
   516   007EEF  6F                 	db	111	;'o'
   517   007EF0  22                 	db	34
   518   007EF1  3A                 	db	58	;':'
   519   007EF2  25                 	db	37
   520   007EF3  2E                 	db	46
   521   007EF4  31                 	db	49	;'1'
   522   007EF5  66                 	db	102	;'f'
   523   007EF6  2C                 	db	44
   524   007EF7  22                 	db	34
   525   007EF8  66                 	db	102	;'f'
   526   007EF9  72                 	db	114	;'r'
   527   007EFA  22                 	db	34
   528   007EFB  3A                 	db	58	;':'
   529   007EFC  25                 	db	37
   530   007EFD  2E                 	db	46
   531   007EFE  32                 	db	50	;'2'
   532   007EFF  66                 	db	102	;'f'
   533   007F00  2C                 	db	44
   534   007F01  22                 	db	34
   535   007F02  74                 	db	116	;'t'
   536   007F03  66                 	db	102	;'f'
   537   007F04  22                 	db	34
   538   007F05  3A                 	db	58	;':'
   539   007F06  25                 	db	37
   540   007F07  2E                 	db	46
   541   007F08  32                 	db	50	;'2'
   542   007F09  66                 	db	102	;'f'
   543   007F0A  2C                 	db	44
   544   007F0B  22                 	db	34
   545   007F0C  70                 	db	112	;'p'
   546   007F0D  22                 	db	34
   547   007F0E  3A                 	db	58	;':'
   548   007F0F  25                 	db	37
   549   007F10  64                 	db	100	;'d'
   550   007F11  2C                 	db	44
   551   007F12  22                 	db	34
   552   007F13  61                 	db	97	;'a'
   553   007F14  22                 	db	34
   554   007F15  3A                 	db	58	;':'
   555   007F16  25                 	db	37
   556   007F17  64                 	db	100	;'d'
   557   007F18  2C                 	db	44
   558   007F19  22                 	db	34
   559   007F1A  66                 	db	102	;'f'
   560   007F1B  61                 	db	97	;'a'
   561   007F1C  22                 	db	34
   562   007F1D  3A                 	db	58	;':'
   563   007F1E  25                 	db	37
   564   007F1F  64                 	db	100	;'d'
   565   007F20  2C                 	db	44
   566   007F21  22                 	db	34
   567   007F22  63                 	db	99	;'c'
   568   007F23  6D                 	db	109	;'m'
   569   007F24  64                 	db	100	;'d'
   570   007F25  22                 	db	34
   571   007F26  3A                 	db	58	;':'
   572   007F27  7B                 	db	123
   573   007F28  22                 	db	34
   574   007F29  74                 	db	116	;'t'
   575   007F2A  65                 	db	101	;'e'
   576   007F2B  73                 	db	115	;'s'
   577   007F2C  74                 	db	116	;'t'
   578   007F2D  22                 	db	34
   579   007F2E  3A                 	db	58	;':'
   580   007F2F  25                 	db	37
   581   007F30  64                 	db	100	;'d'
   582   007F31  2C                 	db	44
   583   007F32  22                 	db	34
   584   007F33  73                 	db	115	;'s'
   585   007F34  68                 	db	104	;'h'
   586   007F35  75                 	db	117	;'u'
   587   007F36  74                 	db	116	;'t'
   588   007F37  64                 	db	100	;'d'
   589   007F38  6F                 	db	111	;'o'
   590   007F39  77                 	db	119	;'w'
   591   007F3A  6E                 	db	110	;'n'
   592   007F3B  22                 	db	34
   593   007F3C  3A                 	db	58	;':'
   594   007F3D  25                 	db	37
   595   007F3E  64                 	db	100	;'d'
   596   007F3F  7D                 	db	125
   597   007F40  7D                 	db	125
   598   007F41  0D                 	db	13
   599   007F42  0A                 	db	10
   600   007F43  00                 	db	0
   601   007F44                     STR_16:
   602   007F44  7B                 	db	123
   603   007F45  22                 	db	34
   604   007F46  65                 	db	101	;'e'
   605   007F47  76                 	db	118	;'v'
   606   007F48  65                 	db	101	;'e'
   607   007F49  6E                 	db	110	;'n'
   608   007F4A  74                 	db	116	;'t'
   609   007F4B  22                 	db	34
   610   007F4C  3A                 	db	58	;':'
   611   007F4D  22                 	db	34
   612   007F4E  25                 	db	37
   613   007F4F  73                 	db	115	;'s'
   614   007F50  22                 	db	34
   615   007F51  2C                 	db	44
   616   007F52  22                 	db	34
   617   007F53  74                 	db	116	;'t'
   618   007F54  69                 	db	105	;'i'
   619   007F55  6D                 	db	109	;'m'
   620   007F56  65                 	db	101	;'e'
   621   007F57  22                 	db	34
   622   007F58  3A                 	db	58	;':'
   623   007F59  25                 	db	37
   624   007F5A  6C                 	db	108	;'l'
   625   007F5B  75                 	db	117	;'u'
   626   007F5C  25                 	db	37
   627   007F5D  73                 	db	115	;'s'
   628   007F5E  7D                 	db	125
   629   007F5F  0D                 	db	13
   630   007F60  0A                 	db	10
   631   007F61  00                 	db	0
   632   007F62                     STR_6:
   633   007F62  2C                 	db	44
   634   007F63  22                 	db	34
   635   007F64  64                 	db	100	;'d'
   636   007F65  75                 	db	117	;'u'
   637   007F66  72                 	db	114	;'r'
   638   007F67  61                 	db	97	;'a'
   639   007F68  74                 	db	116	;'t'
   640   007F69  69                 	db	105	;'i'
   641   007F6A  6F                 	db	111	;'o'
   642   007F6B  6E                 	db	110	;'n'
   643   007F6C  22                 	db	34
   644   007F6D  3A                 	db	58	;':'
   645   007F6E  25                 	db	37
   646   007F6F  6C                 	db	108	;'l'
   647   007F70  75                 	db	117	;'u'
   648   007F71  2C                 	db	44
   649   007F72  22                 	db	34
   650   007F73  77                 	db	119	;'w'
   651   007F74  61                 	db	97	;'a'
   652   007F75  74                 	db	116	;'t'
   653   007F76  65                 	db	101	;'e'
   654   007F77  72                 	db	114	;'r'
   655   007F78  22                 	db	34
   656   007F79  3A                 	db	58	;':'
   657   007F7A  25                 	db	37
   658   007F7B  2E                 	db	46
   659   007F7C  32                 	db	50	;'2'
   660   007F7D  66                 	db	102	;'f'
   661   007F7E  00                 	db	0
   662   007F7F                     STR_2:
   663   007F7F  74                 	db	116	;'t'
   664   007F80  65                 	db	101	;'e'
   665   007F81  6D                 	db	109	;'m'
   666   007F82  70                 	db	112	;'p'
   667   007F83  65                 	db	101	;'e'
   668   007F84  72                 	db	114	;'r'
   669   007F85  61                 	db	97	;'a'
   670   007F86  74                 	db	116	;'t'
   671   007F87  75                 	db	117	;'u'
   672   007F88  72                 	db	114	;'r'
   673   007F89  65                 	db	101	;'e'
   674   007F8A  5F                 	db	95	;'_'
   675   007F8B  73                 	db	115	;'s'
   676   007F8C  65                 	db	101	;'e'
   677   007F8D  6E                 	db	110	;'n'
   678   007F8E  73                 	db	115	;'s'
   679   007F8F  6F                 	db	111	;'o'
   680   007F90  72                 	db	114	;'r'
   681   007F91  00                 	db	0
   682   007F92                     STR_4:
   683   007F92  2C                 	db	44
   684   007F93  22                 	db	34
   685   007F94  73                 	db	115	;'s'
   686   007F95  65                 	db	101	;'e'
   687   007F96  6E                 	db	110	;'n'
   688   007F97  73                 	db	115	;'s'
   689   007F98  6F                 	db	111	;'o'
   690   007F99  72                 	db	114	;'r'
   691   007F9A  22                 	db	34
   692   007F9B  3A                 	db	58	;':'
   693   007F9C  22                 	db	34
   694   007F9D  25                 	db	37
   695   007F9E  73                 	db	115	;'s'
   696   007F9F  22                 	db	34
   697   007FA0  00                 	db	0
   698   007FA1                     STR_1:
   699   007FA1  66                 	db	102	;'f'
   700   007FA2  6C                 	db	108	;'l'
   701   007FA3  61                 	db	97	;'a'
   702   007FA4  6D                 	db	109	;'m'
   703   007FA5  65                 	db	101	;'e'
   704   007FA6  5F                 	db	95	;'_'
   705   007FA7  73                 	db	115	;'s'
   706   007FA8  65                 	db	101	;'e'
   707   007FA9  6E                 	db	110	;'n'
   708   007FAA  73                 	db	115	;'s'
   709   007FAB  6F                 	db	111	;'o'
   710   007FAC  72                 	db	114	;'r'
   711   007FAD  00                 	db	0
   712   007FAE                     STR_5:
   713   007FAE  66                 	db	102	;'f'
   714   007FAF  69                 	db	105	;'i'
   715   007FB0  72                 	db	114	;'r'
   716   007FB1  65                 	db	101	;'e'
   717   007FB2  5F                 	db	95	;'_'
   718   007FB3  73                 	db	115	;'s'
   719   007FB4  74                 	db	116	;'t'
   720   007FB5  61                 	db	97	;'a'
   721   007FB6  72                 	db	114	;'r'
   722   007FB7  74                 	db	116	;'t'
   723   007FB8  00                 	db	0
   724   007FB9                     STR_8:
   725   007FB9  74                 	db	116	;'t'
   726   007FBA  65                 	db	101	;'e'
   727   007FBB  73                 	db	115	;'s'
   728   007FBC  74                 	db	116	;'t'
   729   007FBD  5F                 	db	95	;'_'
   730   007FBE  73                 	db	115	;'s'
   731   007FBF  74                 	db	116	;'t'
   732   007FC0  61                 	db	97	;'a'
   733   007FC1  72                 	db	114	;'r'
   734   007FC2  74                 	db	116	;'t'
   735   007FC3  00                 	db	0
   736   007FC4                     STR_3:
   737   007FC4  63                 	db	99	;'c'
   738   007FC5  6F                 	db	111	;'o'
   739   007FC6  5F                 	db	95	;'_'
   740   007FC7  73                 	db	115	;'s'
   741   007FC8  65                 	db	101	;'e'
   742   007FC9  6E                 	db	110	;'n'
   743   007FCA  73                 	db	115	;'s'
   744   007FCB  6F                 	db	111	;'o'
   745   007FCC  72                 	db	114	;'r'
   746   007FCD  00                 	db	0
   747   007FCE                     STR_7:
   748   007FCE  66                 	db	102	;'f'
   749   007FCF  69                 	db	105	;'i'
   750   007FD0  72                 	db	114	;'r'
   751   007FD1  65                 	db	101	;'e'
   752   007FD2  5F                 	db	95	;'_'
   753   007FD3  65                 	db	101	;'e'
   754   007FD4  6E                 	db	110	;'n'
   755   007FD5  64                 	db	100	;'d'
   756   007FD6  00                 	db	0
   757   007FD7                     STR_11:
   758   007FD7  74                 	db	116	;'t'
   759   007FD8  65                 	db	101	;'e'
   760   007FD9  73                 	db	115	;'s'
   761   007FDA  74                 	db	116	;'t'
   762   007FDB  5F                 	db	95	;'_'
   763   007FDC  65                 	db	101	;'e'
   764   007FDD  6E                 	db	110	;'n'
   765   007FDE  64                 	db	100	;'d'
   766   007FDF  00                 	db	0
   767   007FE0                     STR_12:
   768   007FE0  73                 	db	115	;'s'
   769   007FE1  68                 	db	104	;'h'
   770   007FE2  75                 	db	117	;'u'
   771   007FE3  74                 	db	116	;'t'
   772   007FE4  64                 	db	100	;'d'
   773   007FE5  6F                 	db	111	;'o'
   774   007FE6  77                 	db	119	;'w'
   775   007FE7  6E                 	db	110	;'n'
   776   007FE8  00                 	db	0
   777   007FE9                     STR_24:
   778   007FE9  28                 	db	40
   779   007FEA  6E                 	db	110	;'n'
   780   007FEB  75                 	db	117	;'u'
   781   007FEC  6C                 	db	108	;'l'
   782   007FED  6C                 	db	108	;'l'
   783   007FEE  29                 	db	41
   784   007FEF  00                 	db	0
   785   007FF0                     STR_14:
   786   007FF0  72                 	db	114	;'r'
   787   007FF1  65                 	db	101	;'e'
   788   007FF2  73                 	db	115	;'s'
   789   007FF3  75                 	db	117	;'u'
   790   007FF4  6D                 	db	109	;'m'
   791   007FF5  65                 	db	101	;'e'
   792   007FF6  00                 	db	0
   793   007FF7                     STR_18:
   794   007FF7  69                 	db	105	;'i'
   795   007FF8  6E                 	db	110	;'n'
   796   007FF9  66                 	db	102	;'f'
   797   007FFA  00                 	db	0
   798   007FFB                     STR_21:
   799   007FFB  6E                 	db	110	;'n'
   800   007FFC  61                 	db	97	;'a'
   801   007FFD  6E                 	db	110	;'n'
   802   007FFE  00                 	db	0
   803   007FFB                     STR_22          equ	STR_21
   804   007FFB                     STR_23          equ	STR_21
   805   007FF7                     STR_19          equ	STR_18
   806   007FF7                     STR_20          equ	STR_18
   807   007F71                     STR_10          equ	STR_6+15
   808   007F61                     STR_9           equ	STR_16+29
   809   007F61                     STR_13          equ	STR_16+29
   810   007F61                     STR_15          equ	STR_16+29
   811   007FFF  00                 	db	0	; dummy byte at the end
   812   007E5C                     __smallconst    set	__pmediumconst
   813   007E5C                     __mediumconst   set	__pmediumconst
   814   000002                     __activetblptr  equ	2
   815                           
   816                           ; #config settings
   817                           
   818                           	psect	cinit
   819   006BA6                     __pcinit:
   820                           	callstack 0
   821   006BA6                     start_initialization:
   822                           	callstack 0
   823   006BA6                     __initialization:
   824                           	callstack 0
   825                           
   826                           ; Initialize objects allocated to BANK3 (24 bytes)
   827                           ; load TBLPTR registers with __pidataBANK3
   828   006BA6  0EFA               	movlw	low __pidataBANK3
   829   006BA8  6EF6               	movwf	tblptrl,c
   830   006BAA  0E6D               	movlw	high __pidataBANK3
   831   006BAC  6EF7               	movwf	tblptrh,c
   832   006BAE  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   833   006BB0  6EF8               	movwf	tblptru,c
   834   006BB2  EE03  F0D6         	lfsr	0,__pdataBANK3
   835   006BB6  EE10 F018          	lfsr	1,24
   836   006BBA                     copy_data0:
   837   006BBA  0009               	tblrd		*+
   838   006BBC  CFF5 FFEE          	movff	tablat,postinc0
   839   006BC0  50E5               	movf	postdec1,w,c
   840   006BC2  50E1               	movf	fsr1l,w,c
   841   006BC4  E1FA               	bnz	copy_data0
   842                           
   843                           ; Clear objects allocated to BANK3 (214 bytes)
   844   006BC6  EE03  F000         	lfsr	0,__pbssBANK3
   845   006BCA  0ED6               	movlw	214
   846   006BCC                     clear_0:
   847   006BCC  6AEE               	clrf	postinc0,c
   848   006BCE  06E8               	decf	wreg,f,c
   849   006BD0  E1FD               	bnz	clear_0
   850                           
   851                           ; Clear objects allocated to BANK2 (6 bytes)
   852   006BD2  0102               	movlb	2
   853   006BD4  6BFF               	clrf	(__pbssBANK2+5)& (0+255),b
   854   006BD6  6BFE               	clrf	(__pbssBANK2+4)& (0+255),b
   855   006BD8  6BFD               	clrf	(__pbssBANK2+3)& (0+255),b
   856   006BDA  6BFC               	clrf	(__pbssBANK2+2)& (0+255),b
   857   006BDC  6BFB               	clrf	(__pbssBANK2+1)& (0+255),b
   858   006BDE  6BFA               	clrf	__pbssBANK2& (0+255),b
   859                           
   860                           ; Clear objects allocated to COMRAM (1 bytes)
   861   006BE0  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   862   006BE2                     end_of_initialization:
   863                           	callstack 0
   864   006BE2                     __end_of__initialization:
   865                           	callstack 0
   866   006BE2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   867   006BE4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   868   006BE6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   869   006BE8  6EF8               	movwf	tblptru,c
   870   006BEA  0100               	movlb	0
   871   006BEC  EFC0  F025         	goto	_main	;jump to C main() function
   872                           
   873                           	psect	bssCOMRAM
   874   00005E                     __pbssCOMRAM:
   875                           	callstack 0
   876   00005E                     _trigger_test:
   877                           	callstack 0
   878   00005E                     	ds	1
   879                           
   880                           	psect	bssBANK2
   881   0002FA                     __pbssBANK2:
   882                           	callstack 0
   883   0002FA                     _system_millis:
   884                           	callstack 0
   885   0002FA                     	ds	4
   886   0002FE                     _prec:
   887                           	callstack 0
   888   0002FE                     	ds	2
   889                           
   890                           	psect	bssBANK3
   891   000300                     __pbssBANK3:
   892                           	callstack 0
   893   000300                     _co_samples:
   894                           	callstack 0
   895   000300                     	ds	20
   896   000314                     floorf@F521:
   897                           	callstack 0
   898   000314                     	ds	4
   899   000318                     ___fpclassifyf@F465:
   900                           	callstack 0
   901   000318                     	ds	4
   902   00031C                     Update_Actuators@last_blink:
   903                           	callstack 0
   904   00031C                     	ds	4
   905   000320                     Read_Sensors@last_flow_time:
   906                           	callstack 0
   907   000320                     	ds	4
   908   000324                     Read_Sensors@last_co:
   909                           	callstack 0
   910   000324                     	ds	4
   911   000328                     Handle_Commands@last_blink:
   912                           	callstack 0
   913   000328                     	ds	4
   914   00032C                     _test_start_flow:
   915                           	callstack 0
   916   00032C                     	ds	4
   917   000330                     _fire_start_flow:
   918                           	callstack 0
   919   000330                     	ds	4
   920   000334                     _fire_start_co:
   921                           	callstack 0
   922   000334                     	ds	4
   923   000338                     _fire_start_flame:
   924                           	callstack 0
   925   000338                     	ds	4
   926   00033C                     _fire_start_temp:
   927                           	callstack 0
   928   00033C                     	ds	4
   929   000340                     _fire_start_time:
   930                           	callstack 0
   931   000340                     	ds	4
   932   000344                     _test_start_time:
   933                           	callstack 0
   934   000344                     	ds	4
   935   000348                     _total_flow:
   936                           	callstack 0
   937   000348                     	ds	4
   938   00034C                     _flow_rate:
   939                           	callstack 0
   940   00034C                     	ds	4
   941   000350                     _co_ppm:
   942                           	callstack 0
   943   000350                     	ds	4
   944   000354                     _flame_base_voltage:
   945                           	callstack 0
   946   000354                     	ds	4
   947   000358                     _flame_intensity:
   948                           	callstack 0
   949   000358                     	ds	4
   950   00035C                     _temperature:
   951                           	callstack 0
   952   00035C                     	ds	4
   953   000360                     _errno:
   954                           	callstack 0
   955   000360                     	ds	2
   956   000362                     _width:
   957                           	callstack 0
   958   000362                     	ds	2
   959   000364                     Read_Sensors@last_pulse:
   960                           	callstack 0
   961   000364                     	ds	2
   962   000366                     _pulse_count:
   963                           	callstack 0
   964   000366                     	ds	2
   965   000368                     _flags:
   966                           	callstack 0
   967   000368                     	ds	1
   968   000369                     Handle_Shutdown_Events@prev_shutdown:
   969                           	callstack 0
   970   000369                     	ds	1
   971   00036A                     Handle_Test_Events@prev_test:
   972                           	callstack 0
   973   00036A                     	ds	1
   974   00036B                     _shutdown_system:
   975                           	callstack 0
   976   00036B                     	ds	1
   977   00036C                     _sample_index:
   978                           	callstack 0
   979   00036C                     	ds	1
   980   00036D                     _prev_fire_alarm:
   981                           	callstack 0
   982   00036D                     	ds	1
   983   00036E                     _fire_alarm:
   984                           	callstack 0
   985   00036E                     	ds	1
   986   00036F                     _alarm_active:
   987                           	callstack 0
   988   00036F                     	ds	1
   989   000370                     _pump_active:
   990                           	callstack 0
   991   000370                     	ds	1
   992   000371                     _flame_detected:
   993                           	callstack 0
   994   000371                     	ds	1
   995   000372                     _dbuf:
   996                           	callstack 0
   997   000372                     	ds	80
   998   0003C2                     _fire_trigger_sensor:
   999                           	callstack 0
  1000   0003C2                     	ds	20
  1001                           
  1002                           	psect	dataBANK3
  1003   0003D6                     __pdataBANK3:
  1004                           	callstack 0
  1005   0003D6                     _MQ2_Ro:
  1006                           	callstack 0
  1007   0003D6                     	ds	4
  1008   0003DA                     _temp_samples:
  1009                           	callstack 0
  1010   0003DA                     	ds	20
  1011                           
  1012                           	psect	cstackBANK3
  1013   0003EE                     __pcstackBANK3:
  1014                           	callstack 0
  1015   0003EE                     _main$1834:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x0
  1019   0003EE                     	ds	4
  1020   0003F2                     main@adc_value:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x4
  1024   0003F2                     	ds	2
  1025   0003F4                     main@adc_value_677:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x6
  1029   0003F4                     	ds	2
  1030   0003F6                     main@cycle_count:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x8
  1034   0003F6                     	ds	2
  1035   0003F8                     main@voltage:
  1036                           	callstack 0
  1037                           
  1038                           ; 4 bytes @ 0xA
  1039   0003F8                     	ds	4
  1040   0003FC                     main@i:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xE
  1044   0003FC                     	ds	2
  1045   0003FE                     main@i_676:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x10
  1049   0003FE                     	ds	2
  1050                           
  1051                           	psect	cstackBANK2
  1052   000200                     __pcstackBANK2:
  1053                           	callstack 0
  1054   000200                     Handle_Fire_Events@end_data:
  1055                           	callstack 0
  1056                           
  1057                           ; 150 bytes @ 0x0
  1058   000200                     	ds	150
  1059   000296                     Handle_Fire_Events@start_data:
  1060                           	callstack 0
  1061                           
  1062                           ; 100 bytes @ 0x96
  1063   000296                     	ds	100
  1064                           
  1065                           	psect	cstackBANK1
  1066   000100                     __pcstackBANK1:
  1067                           	callstack 0
  1068   000100                     _powf$1843:
  1069                           	callstack 0
  1070   000100                     Send_History_Event@buffer:
  1071                           	callstack 0
  1072   000100                     Send_Data@buffer:
  1073                           	callstack 0
  1074                           
  1075                           ; 200 bytes @ 0x0
  1076   000100                     	ds	4
  1077   000104                     _powf$1844:
  1078                           	callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x4
  1081   000104                     	ds	4
  1082   000108                     _powf$1848:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x8
  1086   000108                     	ds	4
  1087   00010C                     _powf$1849:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0xC
  1091   00010C                     	ds	4
  1092   000110                     _powf$1850:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x10
  1096   000110                     	ds	4
  1097   000114                     _powf$1851:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x14
  1101   000114                     	ds	4
  1102   000118                     _powf$1852:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x18
  1106   000118                     	ds	4
  1107   00011C                     powf@t2:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x1C
  1111   00011C                     	ds	4
  1112   000120                     powf@z_h:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x20
  1116   000120                     	ds	4
  1117   000124                     powf@z_l:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x24
  1121   000124                     	ds	4
  1122   000128                     powf@i:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x28
  1126   000128                     	ds	4
  1127   00012C                     powf@y1:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x2C
  1131   00012C                     	ds	4
  1132   000130                     powf@s_l:
  1133                           	callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x30
  1136   000130                     	ds	4
  1137   000134                     powf@t_l:
  1138                           	callstack 0
  1139                           
  1140                           ; 4 bytes @ 0x34
  1141   000134                     	ds	4
  1142   000138                     _powf$1842:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x38
  1146   000138                     	ds	4
  1147   00013C                     _powf$1846:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x3C
  1151   00013C                     	ds	4
  1152   000140                     _powf$1847:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x40
  1156   000140                     	ds	4
  1157   000144                     powf@w:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x44
  1161   000144                     	ds	4
  1162   000148                     _powf$1838:
  1163                           	callstack 0
  1164                           
  1165                           ; 4 bytes @ 0x48
  1166   000148                     	ds	4
  1167   00014C                     _powf$1840:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x4C
  1171   00014C                     	ds	4
  1172   000150                     powf@r:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x50
  1176   000150                     	ds	4
  1177   000154                     powf@yisint:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x54
  1181   000154                     	ds	4
  1182   000158                     _powf$1839:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x58
  1186   000158                     	ds	4
  1187   00015C                     _powf$1845:
  1188                           	callstack 0
  1189                           
  1190                           ; 4 bytes @ 0x5C
  1191   00015C                     	ds	4
  1192   000160                     powf@s:
  1193                           	callstack 0
  1194                           
  1195                           ; 4 bytes @ 0x60
  1196   000160                     	ds	4
  1197   000164                     powf@sn:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x64
  1201   000164                     	ds	4
  1202   000168                     powf@hx:
  1203                           	callstack 0
  1204                           
  1205                           ; 4 bytes @ 0x68
  1206   000168                     	ds	4
  1207   00016C                     powf@p_l:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x6C
  1211   00016C                     	ds	4
  1212   000170                     powf@t_h:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x70
  1216   000170                     	ds	4
  1217   000174                     powf@s_h:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x74
  1221   000174                     	ds	4
  1222   000178                     powf@ax:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x78
  1226   000178                     	ds	4
  1227   00017C                     powf@u:
  1228                           	callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x7C
  1231   00017C                     	ds	4
  1232   000180                     powf@v:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x80
  1236   000180                     	ds	4
  1237   000184                     powf@hy:
  1238                           	callstack 0
  1239                           
  1240                           ; 4 bytes @ 0x84
  1241   000184                     	ds	4
  1242   000188                     powf@n:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x88
  1246   000188                     	ds	4
  1247   00018C                     powf@t1:
  1248                           	callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x8C
  1251   00018C                     	ds	4
  1252   000190                     powf@s2:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x90
  1256   000190                     	ds	4
  1257   000194                     powf@iy:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x94
  1261   000194                     	ds	4
  1262   000198                     powf@is:
  1263                           	callstack 0
  1264                           
  1265                           ; 4 bytes @ 0x98
  1266   000198                     	ds	4
  1267   00019C                     _powf$1841:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x9C
  1271   00019C                     	ds	4
  1272   0001A0                     powf@p_h:
  1273                           	callstack 0
  1274                           
  1275                           ; 4 bytes @ 0xA0
  1276   0001A0                     	ds	4
  1277   0001A4                     powf@k:
  1278                           	callstack 0
  1279                           
  1280                           ; 4 bytes @ 0xA4
  1281   0001A4                     	ds	4
  1282   0001A8                     powf@j:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0xA8
  1286   0001A8                     	ds	4
  1287   0001AC                     powf@ix:
  1288                           	callstack 0
  1289                           
  1290                           ; 4 bytes @ 0xAC
  1291   0001AC                     	ds	4
  1292   0001B0                     powf@t:
  1293                           	callstack 0
  1294                           
  1295                           ; 4 bytes @ 0xB0
  1296   0001B0                     	ds	4
  1297   0001B4                     powf@z:
  1298                           	callstack 0
  1299                           
  1300                           ; 4 bytes @ 0xB4
  1301   0001B4                     	ds	20
  1302   0001C8                     Send_History_Event@i:
  1303                           	callstack 0
  1304   0001C8                     Send_Data@i:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0xC8
  1308   0001C8                     	ds	2
  1309   0001CA                     Handle_Test_Events@test_data:
  1310                           	callstack 0
  1311                           
  1312                           ; 50 bytes @ 0xCA
  1313   0001CA                     	ds	50
  1314   0001FC                     Handle_Test_Events@water_used:
  1315                           	callstack 0
  1316                           
  1317                           ; 4 bytes @ 0xFC
  1318   0001FC                     	ds	4
  1319                           
  1320                           	psect	cstackBANK0
  1321   000060                     __pcstackBANK0:
  1322                           	callstack 0
  1323   000060                     Apply_Filter@sum:
  1324                           	callstack 0
  1325   000060                     ___flge@ff1:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x0
  1329   000060                     	ds	4
  1330   000064                     Apply_Filter@i:
  1331                           	callstack 0
  1332   000064                     ___flge@ff2:
  1333                           	callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x4
  1336   000064                     	ds	4
  1337   000068                     ?_powf:
  1338                           	callstack 0
  1339   000068                     efgtoa@fp:
  1340                           	callstack 0
  1341   000068                     powf@x:
  1342                           	callstack 0
  1343   000068                     ??_Update_Actuators:
  1344                           
  1345                           ; 1 bytes @ 0x8
  1346   000068                     	ds	1
  1347   000069                     efgtoa@f:
  1348                           	callstack 0
  1349                           
  1350                           ; 4 bytes @ 0x9
  1351   000069                     	ds	3
  1352   00006C                     powf@y:
  1353                           	callstack 0
  1354                           
  1355                           ; 4 bytes @ 0xC
  1356   00006C                     	ds	1
  1357   00006D                     efgtoa@c:
  1358                           	callstack 0
  1359                           
  1360                           ; 1 bytes @ 0xD
  1361   00006D                     	ds	1
  1362   00006E                     ??_efgtoa:
  1363                           
  1364                           ; 1 bytes @ 0xE
  1365   00006E                     	ds	2
  1366   000070                     efgtoa@ne:
  1367                           	callstack 0
  1368   000070                     ??_powf:
  1369                           
  1370                           ; 1 bytes @ 0x10
  1371   000070                     	ds	2
  1372   000072                     efgtoa@p:
  1373                           	callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x12
  1376   000072                     	ds	2
  1377   000074                     efgtoa@t:
  1378                           	callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x14
  1381   000074                     	ds	2
  1382   000076                     _efgtoa$1376:
  1383                           	callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x16
  1386   000076                     	ds	2
  1387   000078                     efgtoa@pp:
  1388                           	callstack 0
  1389                           
  1390                           ; 1 bytes @ 0x18
  1391   000078                     	ds	1
  1392   000079                     efgtoa@mode:
  1393                           	callstack 0
  1394   000079                     ??_Read_Sensors:
  1395                           
  1396                           ; 1 bytes @ 0x19
  1397   000079                     	ds	1
  1398   00007A                     efgtoa@nmode:
  1399                           	callstack 0
  1400                           
  1401                           ; 1 bytes @ 0x1A
  1402   00007A                     	ds	1
  1403   00007B                     efgtoa@d:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x1B
  1407   00007B                     	ds	2
  1408   00007D                     efgtoa@m:
  1409                           	callstack 0
  1410   00007D                     Read_Sensors@raw_temp:
  1411                           	callstack 0
  1412                           
  1413                           ; 4 bytes @ 0x1D
  1414   00007D                     	ds	2
  1415   00007F                     efgtoa@e:
  1416                           	callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x1F
  1419   00007F                     	ds	2
  1420   000081                     efgtoa@w:
  1421                           	callstack 0
  1422   000081                     Read_Sensors@flame_voltage:
  1423                           	callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x21
  1426   000081                     	ds	2
  1427   000083                     efgtoa@ou:
  1428                           	callstack 0
  1429                           
  1430                           ; 4 bytes @ 0x23
  1431   000083                     	ds	2
  1432   000085                     Read_Sensors@temp_factor:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x25
  1436   000085                     	ds	2
  1437   000087                     efgtoa@i:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x27
  1441   000087                     	ds	2
  1442   000089                     efgtoa@h:
  1443                           	callstack 0
  1444   000089                     _Read_Sensors$1835:
  1445                           	callstack 0
  1446                           
  1447                           ; 4 bytes @ 0x29
  1448   000089                     	ds	4
  1449   00008D                     efgtoa@l:
  1450                           	callstack 0
  1451   00008D                     _Read_Sensors$1836:
  1452                           	callstack 0
  1453                           
  1454                           ; 4 bytes @ 0x2D
  1455   00008D                     	ds	4
  1456   000091                     efgtoa@sign:
  1457                           	callstack 0
  1458   000091                     _Read_Sensors$1837:
  1459                           	callstack 0
  1460                           
  1461                           ; 4 bytes @ 0x31
  1462   000091                     	ds	1
  1463   000092                     efgtoa@g:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x32
  1467   000092                     	ds	3
  1468   000095                     Read_Sensors@temp_adc:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x35
  1472   000095                     	ds	1
  1473   000096                     efgtoa@n:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x36
  1477   000096                     	ds	1
  1478   000097                     Read_Sensors@flame_adc:
  1479                           	callstack 0
  1480                           
  1481                           ; 2 bytes @ 0x37
  1482   000097                     	ds	1
  1483   000098                     efgtoa@u:
  1484                           	callstack 0
  1485                           
  1486                           ; 4 bytes @ 0x38
  1487   000098                     	ds	1
  1488   000099                     Read_Sensors@mq2_adc:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x39
  1492   000099                     	ds	2
  1493   00009B                     Read_Sensors@pulses:
  1494                           	callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x3B
  1497   00009B                     	ds	1
  1498   00009C                     vfpfcnvrt@fp:
  1499                           	callstack 0
  1500                           
  1501                           ; 1 bytes @ 0x3C
  1502   00009C                     	ds	1
  1503   00009D                     vfpfcnvrt@fmt:
  1504                           	callstack 0
  1505   00009D                     Read_Sensors@mq2_voltage:
  1506                           	callstack 0
  1507                           
  1508                           ; 4 bytes @ 0x3D
  1509   00009D                     	ds	1
  1510   00009E                     vfpfcnvrt@ap:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x3E
  1514   00009E                     	ds	2
  1515   0000A0                     ??_vfpfcnvrt:
  1516                           
  1517                           ; 1 bytes @ 0x40
  1518   0000A0                     	ds	1
  1519   0000A1                     Read_Sensors@rs_ro_ratio:
  1520                           	callstack 0
  1521                           
  1522                           ; 4 bytes @ 0x41
  1523   0000A1                     	ds	1
  1524   0000A2                     vfpfcnvrt@done:
  1525                           	callstack 0
  1526                           
  1527                           ; 1 bytes @ 0x42
  1528   0000A2                     	ds	1
  1529   0000A3                     vfpfcnvrt@convarg:
  1530                           	callstack 0
  1531                           
  1532                           ; 4 bytes @ 0x43
  1533   0000A3                     	ds	2
  1534   0000A5                     Read_Sensors@Rs:
  1535                           	callstack 0
  1536                           
  1537                           ; 4 bytes @ 0x45
  1538   0000A5                     	ds	2
  1539   0000A7                     vfpfcnvrt@c:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x47
  1543   0000A7                     	ds	1
  1544   0000A8                     vfpfcnvrt@cp:
  1545                           	callstack 0
  1546                           
  1547                           ; 2 bytes @ 0x48
  1548   0000A8                     	ds	1
  1549   0000A9                     Read_Sensors@raw_co:
  1550                           	callstack 0
  1551                           
  1552                           ; 4 bytes @ 0x49
  1553   0000A9                     	ds	1
  1554   0000AA                     ?_vfprintf:
  1555                           	callstack 0
  1556   0000AA                     vfprintf@fp:
  1557                           	callstack 0
  1558                           
  1559                           ; 1 bytes @ 0x4A
  1560   0000AA                     	ds	1
  1561   0000AB                     vfprintf@fmt:
  1562                           	callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x4B
  1565   0000AB                     	ds	2
  1566   0000AD                     vfprintf@ap:
  1567                           	callstack 0
  1568                           
  1569                           ; 1 bytes @ 0x4D
  1570   0000AD                     	ds	1
  1571   0000AE                     vfprintf@cfmt:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x4E
  1575   0000AE                     	ds	2
  1576   0000B0                     ?_sprintf:
  1577                           	callstack 0
  1578   0000B0                     sprintf@s:
  1579                           	callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x50
  1582   0000B0                     	ds	2
  1583   0000B2                     sprintf@fmt:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x52
  1587   0000B2                     	ds	34
  1588   0000D4                     sprintf@ap:
  1589                           	callstack 0
  1590                           
  1591                           ; 1 bytes @ 0x74
  1592   0000D4                     	ds	1
  1593   0000D5                     sprintf@f:
  1594                           	callstack 0
  1595                           
  1596                           ; 11 bytes @ 0x75
  1597   0000D5                     	ds	11
  1598   0000E0                     Send_History_Event@event_type:
  1599                           	callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x80
  1602   0000E0                     	ds	2
  1603   0000E2                     Send_History_Event@extra_data:
  1604                           	callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x82
  1607   0000E2                     	ds	2
  1608   0000E4                     ??_Handle_Fire_Events:
  1609   0000E4                     ??_Handle_Test_Events:
  1610                           
  1611                           ; 1 bytes @ 0x84
  1612   0000E4                     	ds	2
  1613   0000E6                     Handle_Fire_Events@duration:
  1614                           	callstack 0
  1615                           
  1616                           ; 4 bytes @ 0x86
  1617   0000E6                     	ds	4
  1618   0000EA                     Handle_Fire_Events@water_used:
  1619                           	callstack 0
  1620                           
  1621                           ; 4 bytes @ 0x8A
  1622   0000EA                     	ds	4
  1623   0000EE                     ??_main:
  1624                           
  1625                           ; 1 bytes @ 0x8E
  1626   0000EE                     	ds	2
  1627                           
  1628                           	psect	cstackCOMRAM
  1629   000001                     __pcstackCOMRAM:
  1630                           	callstack 0
  1631   000001                     ?_ADC_Read:
  1632                           	callstack 0
  1633   000001                     ?___fpclassifyf:
  1634                           	callstack 0
  1635   000001                     ?___awmod:
  1636                           	callstack 0
  1637   000001                     ?_read_prec_or_width:
  1638                           	callstack 0
  1639   000001                     ?_labs:
  1640                           	callstack 0
  1641   000001                     ?_sqrtf:
  1642                           	callstack 0
  1643   000001                     ?___lldiv:
  1644                           	callstack 0
  1645   000001                     ?___aldiv:
  1646                           	callstack 0
  1647   000001                     ?___almod:
  1648                           	callstack 0
  1649   000001                     ?___flneg:
  1650                           	callstack 0
  1651   000001                     ?___fltol:
  1652                           	callstack 0
  1653   000001                     ?___llmod:
  1654                           	callstack 0
  1655   000001                     ?___xxtofl:
  1656                           	callstack 0
  1657   000001                     read_prec_or_width@fmt:
  1658                           	callstack 0
  1659   000001                     ___awmod@dividend:
  1660                           	callstack 0
  1661   000001                     memcpy@d1:
  1662                           	callstack 0
  1663   000001                     fputc@c:
  1664                           	callstack 0
  1665   000001                     strcpy@dest:
  1666                           	callstack 0
  1667   000001                     ___lldiv@dividend:
  1668                           	callstack 0
  1669   000001                     ___aldiv@dividend:
  1670                           	callstack 0
  1671   000001                     ___almod@dividend:
  1672                           	callstack 0
  1673   000001                     ___fleq@ff1:
  1674                           	callstack 0
  1675   000001                     ___flneg@f1:
  1676                           	callstack 0
  1677   000001                     ___fltol@f1:
  1678                           	callstack 0
  1679   000001                     ___llmod@dividend:
  1680                           	callstack 0
  1681   000001                     ___xxtofl@val:
  1682                           	callstack 0
  1683   000001                     ___fpclassifyf@x:
  1684                           	callstack 0
  1685   000001                     labs@a:
  1686                           	callstack 0
  1687   000001                     sqrtf@x:
  1688                           	callstack 0
  1689   000001                     ??_Handle_Commands:
  1690   000001                     
  1691                           ; 1 bytes @ 0x0
  1692   000001                     	ds	1
  1693   000002                     read_prec_or_width@ap:
  1694                           	callstack 0
  1695                           
  1696                           ; 1 bytes @ 0x1
  1697   000002                     	ds	1
  1698   000003                     fputc@fp:
  1699                           	callstack 0
  1700   000003                     ___awmod@divisor:
  1701                           	callstack 0
  1702   000003                     memcpy@s1:
  1703                           	callstack 0
  1704   000003                     strcpy@src:
  1705                           	callstack 0
  1706   000003                     ??_ADC_Read:
  1707   000003                     ??_read_prec_or_width:
  1708                           
  1709                           ; 1 bytes @ 0x2
  1710   000003                     	ds	1
  1711   000004                     ??_fputc:
  1712                           
  1713                           ; 1 bytes @ 0x3
  1714   000004                     	ds	1
  1715   000005                     Handle_Commands@cmd:
  1716                           	callstack 0
  1717   000005                     ADC_Read@channel:
  1718                           	callstack 0
  1719   000005                     ___awmod@counter:
  1720                           	callstack 0
  1721   000005                     read_prec_or_width@c:
  1722                           	callstack 0
  1723   000005                     memcpy@n:
  1724                           	callstack 0
  1725   000005                     strcpy@d:
  1726                           	callstack 0
  1727   000005                     ___lldiv@divisor:
  1728                           	callstack 0
  1729   000005                     ___aldiv@divisor:
  1730                           	callstack 0
  1731   000005                     ___almod@divisor:
  1732                           	callstack 0
  1733   000005                     ___fleq@ff2:
  1734                           	callstack 0
  1735   000005                     ___llmod@divisor:
  1736                           	callstack 0
  1737   000005                     ??___fpclassifyf:
  1738   000005                     ??_labs:
  1739   000005                     ??_sqrtf:
  1740   000005                     ??___fltol:
  1741   000005                     ??___xxtofl:
  1742                           
  1743                           ; 1 bytes @ 0x4
  1744   000005                     	ds	1
  1745   000006                     ___awmod@sign:
  1746                           	callstack 0
  1747   000006                     read_prec_or_width@n:
  1748                           	callstack 0
  1749                           
  1750                           ; 2 bytes @ 0x5
  1751   000006                     	ds	1
  1752   000007                     memcpy@tmp:
  1753                           	callstack 0
  1754   000007                     
  1755                           ; 1 bytes @ 0x6
  1756   000007                     	ds	1
  1757   000008                     memcpy@d:
  1758                           	callstack 0
  1759                           
  1760                           ; 2 bytes @ 0x7
  1761   000008                     	ds	1
  1762   000009                     ___aldiv@counter:
  1763                           	callstack 0
  1764   000009                     ___almod@counter:
  1765                           	callstack 0
  1766   000009                     ___fltol@sign1:
  1767                           	callstack 0
  1768   000009                     ___llmod@counter:
  1769                           	callstack 0
  1770   000009                     ___xxtofl@sign:
  1771                           	callstack 0
  1772   000009                     stoa@fp:
  1773                           	callstack 0
  1774   000009                     ___fpclassifyf@e:
  1775                           	callstack 0
  1776   000009                     fputs@s:
  1777                           	callstack 0
  1778   000009                     ___lldiv@quotient:
  1779                           	callstack 0
  1780   000009                     ??___fleq:
  1781   000009                     
  1782                           ; 1 bytes @ 0x8
  1783   000009                     	ds	1
  1784   00000A                     ___aldiv@sign:
  1785                           	callstack 0
  1786   00000A                     ___almod@sign:
  1787                           	callstack 0
  1788   00000A                     ___fltol@exp1:
  1789                           	callstack 0
  1790   00000A                     ___xxtofl@exp:
  1791                           	callstack 0
  1792   00000A                     stoa@s:
  1793                           	callstack 0
  1794   00000A                     memcpy@s:
  1795                           	callstack 0
  1796   00000A                     sqrtf@s:
  1797                           	callstack 0
  1798                           
  1799                           ; 4 bytes @ 0x9
  1800   00000A                     	ds	1
  1801   00000B                     ?_abs:
  1802                           	callstack 0
  1803   00000B                     fputs@fp:
  1804                           	callstack 0
  1805   00000B                     abs@a:
  1806                           	callstack 0
  1807   00000B                     ___aldiv@quotient:
  1808                           	callstack 0
  1809   00000B                     ___xxtofl@arg:
  1810                           	callstack 0
  1811   00000B                     ___fpclassifyf@u:
  1812                           	callstack 0
  1813                           
  1814                           ; 4 bytes @ 0xA
  1815   00000B                     	ds	1
  1816   00000C                     fputs@c:
  1817                           	callstack 0
  1818   00000C                     ??_stoa:
  1819                           
  1820                           ; 1 bytes @ 0xB
  1821   00000C                     	ds	1
  1822   00000D                     ___lldiv@counter:
  1823                           	callstack 0
  1824   00000D                     fputs@i:
  1825                           	callstack 0
  1826   00000D                     ??_abs:
  1827                           
  1828                           ; 1 bytes @ 0xC
  1829   00000D                     	ds	1
  1830   00000E                     stoa@p:
  1831                           	callstack 0
  1832   00000E                     sqrtf@i:
  1833                           	callstack 0
  1834                           
  1835                           ; 4 bytes @ 0xD
  1836   00000E                     	ds	1
  1837   00000F                     ?___flmul:
  1838                           	callstack 0
  1839   00000F                     pad@fp:
  1840                           	callstack 0
  1841   00000F                     ___flmul@b:
  1842                           	callstack 0
  1843                           
  1844                           ; 4 bytes @ 0xE
  1845   00000F                     	ds	1
  1846   000010                     pad@buf:
  1847                           	callstack 0
  1848   000010                     stoa@cp:
  1849                           	callstack 0
  1850                           
  1851                           ; 2 bytes @ 0xF
  1852   000010                     	ds	2
  1853   000012                     pad@p:
  1854                           	callstack 0
  1855   000012                     stoa@l:
  1856                           	callstack 0
  1857   000012                     sqrtf@q:
  1858                           	callstack 0
  1859                           
  1860                           ; 4 bytes @ 0x11
  1861   000012                     	ds	1
  1862   000013                     ___flmul@a:
  1863                           	callstack 0
  1864                           
  1865                           ; 4 bytes @ 0x12
  1866   000013                     	ds	1
  1867   000014                     ??_pad:
  1868                           
  1869                           ; 1 bytes @ 0x13
  1870   000014                     	ds	1
  1871   000015                     pad@i:
  1872                           	callstack 0
  1873                           
  1874                           ; 2 bytes @ 0x14
  1875   000015                     	ds	1
  1876   000016                     sqrtf@t:
  1877                           	callstack 0
  1878                           
  1879                           ; 4 bytes @ 0x15
  1880   000016                     	ds	1
  1881   000017                     dtoa@fp:
  1882                           	callstack 0
  1883   000017                     utoa@fp:
  1884                           	callstack 0
  1885   000017                     ??___flmul:
  1886                           
  1887                           ; 1 bytes @ 0x16
  1888   000017                     	ds	1
  1889   000018                     dtoa@d:
  1890                           	callstack 0
  1891   000018                     utoa@d:
  1892                           	callstack 0
  1893                           
  1894                           ; 4 bytes @ 0x17
  1895   000018                     	ds	2
  1896   00001A                     sqrtf@m:
  1897                           	callstack 0
  1898                           
  1899                           ; 4 bytes @ 0x19
  1900   00001A                     	ds	1
  1901   00001B                     ___flmul@sign:
  1902                           	callstack 0
  1903                           
  1904                           ; 1 bytes @ 0x1A
  1905   00001B                     	ds	1
  1906   00001C                     ___flmul@aexp:
  1907                           	callstack 0
  1908   00001C                     _dtoa$1345:
  1909                           	callstack 0
  1910   00001C                     utoa@w:
  1911                           	callstack 0
  1912   00001C                     
  1913                           ; 1 bytes @ 0x1B
  1914   00001C                     	ds	1
  1915   00001D                     ___flmul@grs:
  1916                           	callstack 0
  1917                           
  1918                           ; 4 bytes @ 0x1C
  1919   00001D                     	ds	1
  1920   00001E                     dtoa@w:
  1921                           	callstack 0
  1922   00001E                     utoa@p:
  1923                           	callstack 0
  1924   00001E                     sqrtf@r:
  1925                           	callstack 0
  1926                           
  1927                           ; 4 bytes @ 0x1D
  1928   00001E                     	ds	2
  1929   000020                     dtoa@p:
  1930                           	callstack 0
  1931   000020                     utoa@i:
  1932                           	callstack 0
  1933                           
  1934                           ; 2 bytes @ 0x1F
  1935   000020                     	ds	1
  1936   000021                     ___flmul@bexp:
  1937                           	callstack 0
  1938                           
  1939                           ; 1 bytes @ 0x20
  1940   000021                     	ds	1
  1941   000022                     dtoa@s:
  1942                           	callstack 0
  1943   000022                     ___flmul@prod:
  1944                           	callstack 0
  1945   000022                     sqrtf@ix:
  1946                           	callstack 0
  1947                           
  1948                           ; 4 bytes @ 0x21
  1949   000022                     	ds	1
  1950   000023                     dtoa@i:
  1951                           	callstack 0
  1952                           
  1953                           ; 2 bytes @ 0x22
  1954   000023                     	ds	3
  1955   000026                     ___flmul@temp:
  1956                           	callstack 0
  1957                           
  1958                           ; 2 bytes @ 0x25
  1959   000026                     	ds	2
  1960   000028                     ?___fldiv:
  1961                           	callstack 0
  1962   000028                     ?_scalbnf:
  1963                           	callstack 0
  1964   000028                     ___fldiv@b:
  1965                           	callstack 0
  1966   000028                     scalbnf@x:
  1967                           	callstack 0
  1968                           
  1969                           ; 4 bytes @ 0x27
  1970   000028                     	ds	4
  1971   00002C                     scalbnf@n:
  1972                           	callstack 0
  1973   00002C                     ___fldiv@a:
  1974                           	callstack 0
  1975                           
  1976                           ; 4 bytes @ 0x2B
  1977   00002C                     	ds	2
  1978   00002E                     ??_scalbnf:
  1979                           
  1980                           ; 1 bytes @ 0x2D
  1981   00002E                     	ds	2
  1982   000030                     ??___fldiv:
  1983                           
  1984                           ; 1 bytes @ 0x2F
  1985   000030                     	ds	2
  1986   000032                     scalbnf@u:
  1987                           	callstack 0
  1988                           
  1989                           ; 4 bytes @ 0x31
  1990   000032                     	ds	2
  1991   000034                     ___fldiv@rem:
  1992                           	callstack 0
  1993                           
  1994                           ; 4 bytes @ 0x33
  1995   000034                     	ds	2
  1996   000036                     scalbnf@y:
  1997                           	callstack 0
  1998                           
  1999                           ; 4 bytes @ 0x35
  2000   000036                     	ds	2
  2001   000038                     ___fldiv@sign:
  2002                           	callstack 0
  2003                           
  2004                           ; 1 bytes @ 0x37
  2005   000038                     	ds	1
  2006   000039                     ___fldiv@new_exp:
  2007                           	callstack 0
  2008                           
  2009                           ; 2 bytes @ 0x38
  2010   000039                     	ds	2
  2011   00003B                     ___fldiv@grs:
  2012                           	callstack 0
  2013                           
  2014                           ; 4 bytes @ 0x3A
  2015   00003B                     	ds	4
  2016   00003F                     ___fldiv@bexp:
  2017                           	callstack 0
  2018                           
  2019                           ; 1 bytes @ 0x3E
  2020   00003F                     	ds	1
  2021   000040                     ___fldiv@aexp:
  2022                           	callstack 0
  2023                           
  2024                           ; 1 bytes @ 0x3F
  2025   000040                     	ds	1
  2026   000041                     ?___fladd:
  2027                           	callstack 0
  2028   000041                     ?_floorf:
  2029                           	callstack 0
  2030   000041                     ___fladd@b:
  2031                           	callstack 0
  2032   000041                     floorf@x:
  2033                           	callstack 0
  2034                           
  2035                           ; 4 bytes @ 0x40
  2036   000041                     	ds	4
  2037   000045                     ___fladd@a:
  2038                           	callstack 0
  2039   000045                     ??_floorf:
  2040                           
  2041                           ; 1 bytes @ 0x44
  2042   000045                     	ds	4
  2043   000049                     ??___fladd:
  2044                           
  2045                           ; 1 bytes @ 0x48
  2046   000049                     	ds	2
  2047   00004B                     floorf@m:
  2048                           	callstack 0
  2049                           
  2050                           ; 4 bytes @ 0x4A
  2051   00004B                     	ds	2
  2052   00004D                     ___fladd@signs:
  2053                           	callstack 0
  2054                           
  2055                           ; 1 bytes @ 0x4C
  2056   00004D                     	ds	1
  2057   00004E                     ___fladd@aexp:
  2058                           	callstack 0
  2059                           
  2060                           ; 1 bytes @ 0x4D
  2061   00004E                     	ds	1
  2062   00004F                     ___fladd@bexp:
  2063                           	callstack 0
  2064   00004F                     floorf@e:
  2065                           	callstack 0
  2066                           
  2067                           ; 2 bytes @ 0x4E
  2068   00004F                     	ds	1
  2069   000050                     ___fladd@grs:
  2070                           	callstack 0
  2071                           
  2072                           ; 1 bytes @ 0x4F
  2073   000050                     	ds	1
  2074   000051                     ?_Apply_Filter:
  2075                           	callstack 0
  2076   000051                     ?___flsub:
  2077                           	callstack 0
  2078   000051                     Apply_Filter@new_value:
  2079                           	callstack 0
  2080   000051                     ___flsub@b:
  2081                           	callstack 0
  2082   000051                     floorf@u:
  2083                           	callstack 0
  2084                           
  2085                           ; 4 bytes @ 0x50
  2086   000051                     	ds	4
  2087   000055                     Apply_Filter@samples:
  2088                           	callstack 0
  2089   000055                     ___flsub@a:
  2090                           	callstack 0
  2091                           
  2092                           ; 4 bytes @ 0x54
  2093   000055                     	ds	2
  2094   000057                     ??_Apply_Filter:
  2095                           
  2096                           ; 1 bytes @ 0x56
  2097   000057                     	ds	2
  2098   000059                     ??___flge:
  2099                           
  2100                           ; 1 bytes @ 0x58
  2101   000059                     	ds	4
  2102   00005D                     _Update_Actuators$752:
  2103                           	callstack 0
  2104   00005D                     
  2105                           ; 1 bytes @ 0x5C
  2106   00005D                     	ds	1
  2107                           
  2108 ;;
  2109 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2110 ;;
  2111 ;; *************** function _main *****************
  2112 ;; Defined at:
  2113 ;;		line 107 in file "newmain.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  voltage         4   10[BANK3 ] float 
  2118 ;;  adc_value       2    6[BANK3 ] unsigned int 
  2119 ;;  adc_value       2    4[BANK3 ] unsigned int 
  2120 ;;  i               2   16[BANK3 ] int 
  2121 ;;  i               2   14[BANK3 ] int 
  2122 ;;  cycle_count     2    8[BANK3 ] unsigned int 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2132 ;;      Params:         0       0       0       0       0       0       0       0       0
  2133 ;;      Locals:         0       0       0       0      18       0       0       0       0
  2134 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2135 ;;      Totals:         0       2       0       0      18       0       0       0       0
  2136 ;;Total ram usage:       20 bytes
  2137 ;; Hardware stack levels required when called: 11
  2138 ;; This function calls:
  2139 ;;		_ADC_Init
  2140 ;;		_ADC_Read
  2141 ;;		_Handle_Commands
  2142 ;;		_Handle_Fire_Events
  2143 ;;		_Handle_Shutdown_Events
  2144 ;;		_Handle_Test_Events
  2145 ;;		_Interrupt_Init
  2146 ;;		_Read_Sensors
  2147 ;;		_Send_Data
  2148 ;;		_UART_Init
  2149 ;;		_Update_Actuators
  2150 ;;		___awmod
  2151 ;;		___fladd
  2152 ;;		___fldiv
  2153 ;;		___flmul
  2154 ;;		___flsub
  2155 ;;		___xxtofl
  2156 ;; This function is called by:
  2157 ;;		Startup code after reset
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text0
  2162   004B80                     __ptext0:
  2163                           	callstack 0
  2164   004B80                     _main:
  2165                           	callstack 20
  2166   004B80                     
  2167                           ;newmain.c: 109:     OSCCON = 0x70;
  2168   004B80  0E70               	movlw	112
  2169   004B82  6ED3               	movwf	211,c	;volatile
  2170                           
  2171                           ;newmain.c: 110:     TRISB = 0x02;
  2172   004B84  0E02               	movlw	2
  2173   004B86  6E93               	movwf	147,c	;volatile
  2174   004B88                     
  2175                           ;newmain.c: 111:     PORTB = 0x00;
  2176   004B88  6A81               	clrf	129,c	;volatile
  2177   004B8A                     
  2178                           ;newmain.c: 112:     PORTBbits.RB5 = 1;
  2179   004B8A  8A81               	bsf	129,5,c	;volatile
  2180   004B8C                     
  2181                           ;newmain.c: 113:     PORTBbits.RB0 = 0;
  2182   004B8C  9081               	bcf	129,0,c	;volatile
  2183   004B8E                     
  2184                           ;newmain.c: 115:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  2185   004B8E  0E15               	movlw	21
  2186   004B90  0100               	movlb	0	; () banked
  2187   004B92  6FEF               	movwf	(??_main+1)& (0+255),b
  2188   004B94  0E4B               	movlw	75
  2189   004B96  6FEE               	movwf	??_main& (0+255),b
  2190   004B98  0EBE               	movlw	190
  2191   004B9A                     u10717:
  2192   004B9A  2EE8               	decfsz	wreg,f,c
  2193   004B9C  D7FE               	bra	u10717
  2194   004B9E  2FEE               	decfsz	??_main& (0+255),f,b
  2195   004BA0  D7FC               	bra	u10717
  2196   004BA2  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2197   004BA4  D7FA               	bra	u10717
  2198   004BA6  0000               	nop	
  2199   004BA8                     
  2200                           ;newmain.c: 116:     UART_Init();
  2201   004BA8  EC09  F037         	call	_UART_Init	;wreg free
  2202   004BAC                     
  2203                           ;newmain.c: 117:     ADC_Init();
  2204   004BAC  EC13  F037         	call	_ADC_Init	;wreg free
  2205   004BB0                     
  2206                           ;newmain.c: 118:     Interrupt_Init();
  2207   004BB0  EC1C  F037         	call	_Interrupt_Init	;wreg free
  2208   004BB4                     
  2209                           ;newmain.c: 121:     for(int i = 0; i < 50; i++) {
  2210   004BB4  0E00               	movlw	0
  2211   004BB6  0103               	movlb	3	; () banked
  2212   004BB8  6FFD               	movwf	(main@i+1)& (0+255),b
  2213   004BBA  0E00               	movlw	0
  2214   004BBC  6FFC               	movwf	main@i& (0+255),b
  2215   004BBE                     l8062:
  2216                           
  2217                           ; BSR set to: 3
  2218                           ;newmain.c: 122:         unsigned int adc_value = ADC_Read(1);
  2219   004BBE  0E01               	movlw	1
  2220   004BC0  EC81  F036         	call	_ADC_Read
  2221   004BC4  C001  F3F2         	movff	?_ADC_Read,main@adc_value
  2222   004BC8  C002  F3F3         	movff	?_ADC_Read+1,main@adc_value+1
  2223   004BCC                     
  2224                           ;newmain.c: 123:         flame_base_voltage += (adc_value * 5.0) / 1024.0;
  2225   004BCC  C354  F041         	movff	_flame_base_voltage,___fladd@b
  2226   004BD0  C355  F042         	movff	_flame_base_voltage+1,___fladd@b+1
  2227   004BD4  C356  F043         	movff	_flame_base_voltage+2,___fladd@b+2
  2228   004BD8  C357  F044         	movff	_flame_base_voltage+3,___fladd@b+3
  2229   004BDC  0E00               	movlw	0
  2230   004BDE  6E2C               	movwf	___fldiv@a^0,c
  2231   004BE0  0E00               	movlw	0
  2232   004BE2  6E2D               	movwf	(___fldiv@a+1)^0,c
  2233   004BE4  0E80               	movlw	128
  2234   004BE6  6E2E               	movwf	(___fldiv@a+2)^0,c
  2235   004BE8  0E44               	movlw	68
  2236   004BEA  6E2F               	movwf	(___fldiv@a+3)^0,c
  2237   004BEC  0E00               	movlw	0
  2238   004BEE  6E13               	movwf	___flmul@a^0,c
  2239   004BF0  0E00               	movlw	0
  2240   004BF2  6E14               	movwf	(___flmul@a+1)^0,c
  2241   004BF4  0EA0               	movlw	160
  2242   004BF6  6E15               	movwf	(___flmul@a+2)^0,c
  2243   004BF8  0E40               	movlw	64
  2244   004BFA  6E16               	movwf	(___flmul@a+3)^0,c
  2245   004BFC  C3F2  F001         	movff	main@adc_value,___xxtofl@val
  2246   004C00  C3F3  F002         	movff	main@adc_value+1,___xxtofl@val+1
  2247   004C04  6A03               	clrf	(___xxtofl@val+2)^0,c
  2248   004C06  6A04               	clrf	(___xxtofl@val+3)^0,c
  2249   004C08  0E00               	movlw	0
  2250   004C0A  ECEA  F02A         	call	___xxtofl
  2251   004C0E  C001  F00F         	movff	?___xxtofl,___flmul@b
  2252   004C12  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2253   004C16  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2254   004C1A  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2255   004C1E  ECF6  F01F         	call	___flmul	;wreg free
  2256   004C22  C00F  F028         	movff	?___flmul,___fldiv@b
  2257   004C26  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2258   004C2A  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2259   004C2E  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2260   004C32  ECF8  F023         	call	___fldiv	;wreg free
  2261   004C36  C028  F045         	movff	?___fldiv,___fladd@a
  2262   004C3A  C029  F046         	movff	?___fldiv+1,___fladd@a+1
  2263   004C3E  C02A  F047         	movff	?___fldiv+2,___fladd@a+2
  2264   004C42  C02B  F048         	movff	?___fldiv+3,___fladd@a+3
  2265   004C46  EC9B  F01D         	call	___fladd	;wreg free
  2266   004C4A  C041  F354         	movff	?___fladd,_flame_base_voltage
  2267   004C4E  C042  F355         	movff	?___fladd+1,_flame_base_voltage+1
  2268   004C52  C043  F356         	movff	?___fladd+2,_flame_base_voltage+2
  2269   004C56  C044  F357         	movff	?___fladd+3,_flame_base_voltage+3
  2270   004C5A                     
  2271                           ;newmain.c: 124:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2272   004C5A  0E02               	movlw	2
  2273   004C5C  0100               	movlb	0	; () banked
  2274   004C5E  6FEF               	movwf	(??_main+1)& (0+255),b
  2275   004C60  0E04               	movlw	4
  2276   004C62  6FEE               	movwf	??_main& (0+255),b
  2277   004C64  0EBA               	movlw	186
  2278   004C66                     u10727:
  2279   004C66  2EE8               	decfsz	wreg,f,c
  2280   004C68  D7FE               	bra	u10727
  2281   004C6A  2FEE               	decfsz	??_main& (0+255),f,b
  2282   004C6C  D7FC               	bra	u10727
  2283   004C6E  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2284   004C70  D7FA               	bra	u10727
  2285   004C72  0000               	nop	
  2286   004C74                     
  2287                           ;newmain.c: 125:     }
  2288   004C74  0103               	movlb	3	; () banked
  2289   004C76  4BFC               	infsnz	main@i& (0+255),f,b
  2290   004C78  2BFD               	incf	(main@i+1)& (0+255),f,b
  2291   004C7A                     
  2292                           ; BSR set to: 3
  2293   004C7A  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  2294   004C7C  EF49  F026         	goto	u10661
  2295   004C80  51FD               	movf	(main@i+1)& (0+255),w,b
  2296   004C82  E109               	bnz	u10660
  2297   004C84  0E32               	movlw	50
  2298   004C86  5DFC               	subwf	main@i& (0+255),w,b
  2299   004C88  A0D8               	btfss	status,0,c
  2300   004C8A  EF49  F026         	goto	u10661
  2301   004C8E  EF4B  F026         	goto	u10660
  2302   004C92                     u10661:
  2303   004C92  EFDF  F025         	goto	l8062
  2304   004C96                     u10660:
  2305   004C96                     
  2306                           ; BSR set to: 3
  2307                           ;newmain.c: 126:     flame_base_voltage /= 50.0;
  2308   004C96  C354  F028         	movff	_flame_base_voltage,___fldiv@b
  2309   004C9A  C355  F029         	movff	_flame_base_voltage+1,___fldiv@b+1
  2310   004C9E  C356  F02A         	movff	_flame_base_voltage+2,___fldiv@b+2
  2311   004CA2  C357  F02B         	movff	_flame_base_voltage+3,___fldiv@b+3
  2312   004CA6  0E00               	movlw	0
  2313   004CA8  6E2C               	movwf	___fldiv@a^0,c
  2314   004CAA  0E00               	movlw	0
  2315   004CAC  6E2D               	movwf	(___fldiv@a+1)^0,c
  2316   004CAE  0E48               	movlw	72
  2317   004CB0  6E2E               	movwf	(___fldiv@a+2)^0,c
  2318   004CB2  0E42               	movlw	66
  2319   004CB4  6E2F               	movwf	(___fldiv@a+3)^0,c
  2320   004CB6  ECF8  F023         	call	___fldiv	;wreg free
  2321   004CBA  C028  F354         	movff	?___fldiv,_flame_base_voltage
  2322   004CBE  C029  F355         	movff	?___fldiv+1,_flame_base_voltage+1
  2323   004CC2  C02A  F356         	movff	?___fldiv+2,_flame_base_voltage+2
  2324   004CC6  C02B  F357         	movff	?___fldiv+3,_flame_base_voltage+3
  2325   004CCA                     
  2326                           ;newmain.c: 129:     for(int i = 0; i < 50; i++) {
  2327   004CCA  0E00               	movlw	0
  2328   004CCC  0103               	movlb	3	; () banked
  2329   004CCE  6FFF               	movwf	(main@i_676+1)& (0+255),b
  2330   004CD0  0E00               	movlw	0
  2331   004CD2  6FFE               	movwf	main@i_676& (0+255),b
  2332   004CD4                     l8080:
  2333                           
  2334                           ; BSR set to: 3
  2335                           ;newmain.c: 130:         unsigned int adc_value = ADC_Read(2);
  2336   004CD4  0E02               	movlw	2
  2337   004CD6  EC81  F036         	call	_ADC_Read
  2338   004CDA  C001  F3F4         	movff	?_ADC_Read,main@adc_value_677
  2339   004CDE  C002  F3F5         	movff	?_ADC_Read+1,main@adc_value_677+1
  2340   004CE2                     
  2341                           ;newmain.c: 131:         float voltage = (adc_value * 5.0) / 1024.0;
  2342   004CE2  0E00               	movlw	0
  2343   004CE4  6E13               	movwf	___flmul@a^0,c
  2344   004CE6  0E00               	movlw	0
  2345   004CE8  6E14               	movwf	(___flmul@a+1)^0,c
  2346   004CEA  0EA0               	movlw	160
  2347   004CEC  6E15               	movwf	(___flmul@a+2)^0,c
  2348   004CEE  0E40               	movlw	64
  2349   004CF0  6E16               	movwf	(___flmul@a+3)^0,c
  2350   004CF2  C3F4  F001         	movff	main@adc_value_677,___xxtofl@val
  2351   004CF6  C3F5  F002         	movff	main@adc_value_677+1,___xxtofl@val+1
  2352   004CFA  6A03               	clrf	(___xxtofl@val+2)^0,c
  2353   004CFC  6A04               	clrf	(___xxtofl@val+3)^0,c
  2354   004CFE  0E00               	movlw	0
  2355   004D00  ECEA  F02A         	call	___xxtofl
  2356   004D04  C001  F00F         	movff	?___xxtofl,___flmul@b
  2357   004D08  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2358   004D0C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2359   004D10  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2360   004D14  ECF6  F01F         	call	___flmul	;wreg free
  2361   004D18  C00F  F028         	movff	?___flmul,___fldiv@b
  2362   004D1C  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2363   004D20  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2364   004D24  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2365   004D28  0E00               	movlw	0
  2366   004D2A  6E2C               	movwf	___fldiv@a^0,c
  2367   004D2C  0E00               	movlw	0
  2368   004D2E  6E2D               	movwf	(___fldiv@a+1)^0,c
  2369   004D30  0E80               	movlw	128
  2370   004D32  6E2E               	movwf	(___fldiv@a+2)^0,c
  2371   004D34  0E44               	movlw	68
  2372   004D36  6E2F               	movwf	(___fldiv@a+3)^0,c
  2373   004D38  ECF8  F023         	call	___fldiv	;wreg free
  2374   004D3C  C028  F3F8         	movff	?___fldiv,main@voltage
  2375   004D40  C029  F3F9         	movff	?___fldiv+1,main@voltage+1
  2376   004D44  C02A  F3FA         	movff	?___fldiv+2,main@voltage+2
  2377   004D48  C02B  F3FB         	movff	?___fldiv+3,main@voltage+3
  2378   004D4C                     
  2379                           ;newmain.c: 132:         MQ2_Ro += (5.0 - voltage) / voltage;
  2380   004D4C  C3F8  F02C         	movff	main@voltage,___fldiv@a
  2381   004D50  C3F9  F02D         	movff	main@voltage+1,___fldiv@a+1
  2382   004D54  C3FA  F02E         	movff	main@voltage+2,___fldiv@a+2
  2383   004D58  C3FB  F02F         	movff	main@voltage+3,___fldiv@a+3
  2384   004D5C  C3F8  F055         	movff	main@voltage,___flsub@a
  2385   004D60  C3F9  F056         	movff	main@voltage+1,___flsub@a+1
  2386   004D64  C3FA  F057         	movff	main@voltage+2,___flsub@a+2
  2387   004D68  C3FB  F058         	movff	main@voltage+3,___flsub@a+3
  2388   004D6C  0E00               	movlw	0
  2389   004D6E  6E51               	movwf	___flsub@b^0,c
  2390   004D70  0E00               	movlw	0
  2391   004D72  6E52               	movwf	(___flsub@b+1)^0,c
  2392   004D74  0EA0               	movlw	160
  2393   004D76  6E53               	movwf	(___flsub@b+2)^0,c
  2394   004D78  0E40               	movlw	64
  2395   004D7A  6E54               	movwf	(___flsub@b+3)^0,c
  2396   004D7C  EC1C  F036         	call	___flsub	;wreg free
  2397   004D80  C051  F028         	movff	?___flsub,___fldiv@b
  2398   004D84  C052  F029         	movff	?___flsub+1,___fldiv@b+1
  2399   004D88  C053  F02A         	movff	?___flsub+2,___fldiv@b+2
  2400   004D8C  C054  F02B         	movff	?___flsub+3,___fldiv@b+3
  2401   004D90  ECF8  F023         	call	___fldiv	;wreg free
  2402   004D94  C028  F3EE         	movff	?___fldiv,_main$1834
  2403   004D98  C029  F3EF         	movff	?___fldiv+1,_main$1834+1
  2404   004D9C  C02A  F3F0         	movff	?___fldiv+2,_main$1834+2
  2405   004DA0  C02B  F3F1         	movff	?___fldiv+3,_main$1834+3
  2406   004DA4                     
  2407                           ;newmain.c: 132:         MQ2_Ro += (5.0 - voltage) / voltage;
  2408   004DA4  C3D6  F041         	movff	_MQ2_Ro,___fladd@b
  2409   004DA8  C3D7  F042         	movff	_MQ2_Ro+1,___fladd@b+1
  2410   004DAC  C3D8  F043         	movff	_MQ2_Ro+2,___fladd@b+2
  2411   004DB0  C3D9  F044         	movff	_MQ2_Ro+3,___fladd@b+3
  2412   004DB4  C3EE  F045         	movff	_main$1834,___fladd@a
  2413   004DB8  C3EF  F046         	movff	_main$1834+1,___fladd@a+1
  2414   004DBC  C3F0  F047         	movff	_main$1834+2,___fladd@a+2
  2415   004DC0  C3F1  F048         	movff	_main$1834+3,___fladd@a+3
  2416   004DC4  EC9B  F01D         	call	___fladd	;wreg free
  2417   004DC8  C041  F3D6         	movff	?___fladd,_MQ2_Ro
  2418   004DCC  C042  F3D7         	movff	?___fladd+1,_MQ2_Ro+1
  2419   004DD0  C043  F3D8         	movff	?___fladd+2,_MQ2_Ro+2
  2420   004DD4  C044  F3D9         	movff	?___fladd+3,_MQ2_Ro+3
  2421   004DD8                     
  2422                           ;newmain.c: 133:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2423   004DD8  0E02               	movlw	2
  2424   004DDA  0100               	movlb	0	; () banked
  2425   004DDC  6FEF               	movwf	(??_main+1)& (0+255),b
  2426   004DDE  0E04               	movlw	4
  2427   004DE0  6FEE               	movwf	??_main& (0+255),b
  2428   004DE2  0EBA               	movlw	186
  2429   004DE4                     u10737:
  2430   004DE4  2EE8               	decfsz	wreg,f,c
  2431   004DE6  D7FE               	bra	u10737
  2432   004DE8  2FEE               	decfsz	??_main& (0+255),f,b
  2433   004DEA  D7FC               	bra	u10737
  2434   004DEC  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2435   004DEE  D7FA               	bra	u10737
  2436   004DF0  0000               	nop	
  2437   004DF2                     
  2438                           ;newmain.c: 134:     }
  2439   004DF2  0103               	movlb	3	; () banked
  2440   004DF4  4BFE               	infsnz	main@i_676& (0+255),f,b
  2441   004DF6  2BFF               	incf	(main@i_676+1)& (0+255),f,b
  2442   004DF8                     
  2443                           ; BSR set to: 3
  2444   004DF8  BFFF               	btfsc	(main@i_676+1)& (0+255),7,b
  2445   004DFA  EF08  F027         	goto	u10671
  2446   004DFE  51FF               	movf	(main@i_676+1)& (0+255),w,b
  2447   004E00  E109               	bnz	u10670
  2448   004E02  0E32               	movlw	50
  2449   004E04  5DFE               	subwf	main@i_676& (0+255),w,b
  2450   004E06  A0D8               	btfss	status,0,c
  2451   004E08  EF08  F027         	goto	u10671
  2452   004E0C  EF0A  F027         	goto	u10670
  2453   004E10                     u10671:
  2454   004E10  EF6A  F026         	goto	l8080
  2455   004E14                     u10670:
  2456   004E14                     
  2457                           ; BSR set to: 3
  2458                           ;newmain.c: 135:     MQ2_Ro /= 50.0;
  2459   004E14  C3D6  F028         	movff	_MQ2_Ro,___fldiv@b
  2460   004E18  C3D7  F029         	movff	_MQ2_Ro+1,___fldiv@b+1
  2461   004E1C  C3D8  F02A         	movff	_MQ2_Ro+2,___fldiv@b+2
  2462   004E20  C3D9  F02B         	movff	_MQ2_Ro+3,___fldiv@b+3
  2463   004E24  0E00               	movlw	0
  2464   004E26  6E2C               	movwf	___fldiv@a^0,c
  2465   004E28  0E00               	movlw	0
  2466   004E2A  6E2D               	movwf	(___fldiv@a+1)^0,c
  2467   004E2C  0E48               	movlw	72
  2468   004E2E  6E2E               	movwf	(___fldiv@a+2)^0,c
  2469   004E30  0E42               	movlw	66
  2470   004E32  6E2F               	movwf	(___fldiv@a+3)^0,c
  2471   004E34  ECF8  F023         	call	___fldiv	;wreg free
  2472   004E38  C028  F3D6         	movff	?___fldiv,_MQ2_Ro
  2473   004E3C  C029  F3D7         	movff	?___fldiv+1,_MQ2_Ro+1
  2474   004E40  C02A  F3D8         	movff	?___fldiv+2,_MQ2_Ro+2
  2475   004E44  C02B  F3D9         	movff	?___fldiv+3,_MQ2_Ro+3
  2476   004E48                     
  2477                           ;newmain.c: 137:     unsigned int cycle_count = 0;
  2478   004E48  0E00               	movlw	0
  2479   004E4A  0103               	movlb	3	; () banked
  2480   004E4C  6FF7               	movwf	(main@cycle_count+1)& (0+255),b
  2481   004E4E  0E00               	movlw	0
  2482   004E50  6FF6               	movwf	main@cycle_count& (0+255),b
  2483   004E52                     l8098:
  2484                           
  2485                           ;newmain.c: 141:         system_millis += 125;
  2486   004E52  0E7D               	movlw	125
  2487   004E54  0102               	movlb	2	; () banked
  2488   004E56  27FA               	addwf	_system_millis& (0+255),f,b
  2489   004E58  0E00               	movlw	0
  2490   004E5A  23FB               	addwfc	(_system_millis+1)& (0+255),f,b
  2491   004E5C  23FC               	addwfc	(_system_millis+2)& (0+255),f,b
  2492   004E5E  23FD               	addwfc	(_system_millis+3)& (0+255),f,b
  2493   004E60                     
  2494                           ; BSR set to: 2
  2495                           ;newmain.c: 143:         Handle_Commands();
  2496   004E60  EC96  F02C         	call	_Handle_Commands	;wreg free
  2497   004E64                     
  2498                           ;newmain.c: 145:         if(!shutdown_system) {
  2499   004E64  0103               	movlb	3	; () banked
  2500   004E66  516B               	movf	_shutdown_system& (0+255),w,b
  2501   004E68  A4D8               	btfss	status,2,c
  2502   004E6A  EF39  F027         	goto	u10681
  2503   004E6E  EF3B  F027         	goto	u10680
  2504   004E72                     u10681:
  2505   004E72  EF47  F027         	goto	l8110
  2506   004E76                     u10680:
  2507   004E76                     
  2508                           ; BSR set to: 3
  2509                           ;newmain.c: 146:             Read_Sensors();
  2510   004E76  EC5C  F017         	call	_Read_Sensors	;wreg free
  2511   004E7A                     
  2512                           ;newmain.c: 147:             if(!trigger_test) {
  2513   004E7A  505E               	movf	_trigger_test^0,w,c
  2514   004E7C  A4D8               	btfss	status,2,c
  2515   004E7E  EF43  F027         	goto	u10691
  2516   004E82  EF45  F027         	goto	u10690
  2517   004E86                     u10691:
  2518   004E86  EF47  F027         	goto	l8110
  2519   004E8A                     u10690:
  2520   004E8A                     
  2521                           ;newmain.c: 148:                 Update_Actuators();
  2522   004E8A  EC46  F02D         	call	_Update_Actuators	;wreg free
  2523   004E8E                     l8110:
  2524                           
  2525                           ;newmain.c: 152:         Handle_Fire_Events();
  2526   004E8E  EC82  F027         	call	_Handle_Fire_Events	;wreg free
  2527   004E92                     
  2528                           ;newmain.c: 153:         Handle_Test_Events();
  2529   004E92  ECF5  F02F         	call	_Handle_Test_Events	;wreg free
  2530   004E96                     
  2531                           ;newmain.c: 154:         Handle_Shutdown_Events();
  2532   004E96  EC12  F035         	call	_Handle_Shutdown_Events	;wreg free
  2533   004E9A                     
  2534                           ;newmain.c: 157:         if(cycle_count >= 2) {
  2535   004E9A  0103               	movlb	3	; () banked
  2536   004E9C  51F7               	movf	(main@cycle_count+1)& (0+255),w,b
  2537   004E9E  E109               	bnz	u10700
  2538   004EA0  0E02               	movlw	2
  2539   004EA2  5DF6               	subwf	main@cycle_count& (0+255),w,b
  2540   004EA4  A0D8               	btfss	status,0,c
  2541   004EA6  EF57  F027         	goto	u10701
  2542   004EAA  EF59  F027         	goto	u10700
  2543   004EAE                     u10701:
  2544   004EAE  EF60  F027         	goto	l8122
  2545   004EB2                     u10700:
  2546   004EB2                     
  2547                           ; BSR set to: 3
  2548                           ;newmain.c: 158:             Send_Data();
  2549   004EB2  ECEB  F031         	call	_Send_Data	;wreg free
  2550   004EB6                     
  2551                           ;newmain.c: 159:             cycle_count = 0;
  2552   004EB6  0E00               	movlw	0
  2553   004EB8  0103               	movlb	3	; () banked
  2554   004EBA  6FF7               	movwf	(main@cycle_count+1)& (0+255),b
  2555   004EBC  0E00               	movlw	0
  2556   004EBE  6FF6               	movwf	main@cycle_count& (0+255),b
  2557   004EC0                     l8122:
  2558                           
  2559                           ; BSR set to: 3
  2560                           ;newmain.c: 162:         cycle_count++;
  2561   004EC0  4BF6               	infsnz	main@cycle_count& (0+255),f,b
  2562   004EC2  2BF7               	incf	(main@cycle_count+1)& (0+255),f,b
  2563   004EC4                     
  2564                           ; BSR set to: 3
  2565                           ;newmain.c: 163:         sample_index = (sample_index + 1) % 5;
  2566   004EC4  0E01               	movlw	1
  2567   004EC6  256C               	addwf	_sample_index& (0+255),w,b
  2568   004EC8  6E01               	movwf	___awmod@dividend^0,c
  2569   004ECA  6A02               	clrf	(___awmod@dividend+1)^0,c
  2570   004ECC  0E00               	movlw	0
  2571   004ECE  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2572   004ED0  0E00               	movlw	0
  2573   004ED2  6E04               	movwf	(___awmod@divisor+1)^0,c
  2574   004ED4  0E05               	movlw	5
  2575   004ED6  6E03               	movwf	___awmod@divisor^0,c
  2576   004ED8  EC30  F033         	call	___awmod	;wreg free
  2577   004EDC  5001               	movf	?___awmod^0,w,c
  2578   004EDE  0103               	movlb	3	; () banked
  2579   004EE0  6F6C               	movwf	_sample_index& (0+255),b
  2580   004EE2                     
  2581                           ; BSR set to: 3
  2582                           ;newmain.c: 164:         _delay((unsigned long)((125)*(8000000/4000.0)));
  2583   004EE2  0E02               	movlw	2
  2584   004EE4  0100               	movlb	0	; () banked
  2585   004EE6  6FEF               	movwf	(??_main+1)& (0+255),b
  2586   004EE8  0E45               	movlw	69
  2587   004EEA  6FEE               	movwf	??_main& (0+255),b
  2588   004EEC  0EA9               	movlw	169
  2589   004EEE                     u10747:
  2590   004EEE  2EE8               	decfsz	wreg,f,c
  2591   004EF0  D7FE               	bra	u10747
  2592   004EF2  2FEE               	decfsz	??_main& (0+255),f,b
  2593   004EF4  D7FC               	bra	u10747
  2594   004EF6  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2595   004EF8  D7FA               	bra	u10747
  2596   004EFA  D000               	nop2	
  2597   004EFC  EF29  F027         	goto	l8098
  2598   004F00  EF07  F000         	goto	start
  2599   004F04                     __end_of_main:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function ___awmod *****************
  2603 ;; Defined at:
  2604 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  dividend        2    0[COMRAM] int 
  2607 ;;  divisor         2    2[COMRAM] int 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  sign            1    5[COMRAM] unsigned char 
  2610 ;;  counter         1    4[COMRAM] unsigned char 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  2    0[COMRAM] int 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2620 ;;      Params:         4       0       0       0       0       0       0       0       0
  2621 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2623 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2624 ;;Total ram usage:        6 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 1
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text1
  2635   006660                     __ptext1:
  2636                           	callstack 0
  2637   006660                     ___awmod:
  2638                           	callstack 29
  2639   006660  6A06               	clrf	___awmod@sign^0,c
  2640   006662  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2641   006664  EF38  F033         	goto	u10600
  2642   006668  EF36  F033         	goto	u10601
  2643   00666C                     u10601:
  2644   00666C  EF3E  F033         	goto	l8012
  2645   006670                     u10600:
  2646   006670  6C01               	negf	___awmod@dividend^0,c
  2647   006672  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2648   006674  B0D8               	btfsc	status,0,c
  2649   006676  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2650   006678  0E01               	movlw	1
  2651   00667A  6E06               	movwf	___awmod@sign^0,c
  2652   00667C                     l8012:
  2653   00667C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2654   00667E  EF45  F033         	goto	u10610
  2655   006682  EF43  F033         	goto	u10611
  2656   006686                     u10611:
  2657   006686  EF49  F033         	goto	l8016
  2658   00668A                     u10610:
  2659   00668A  6C03               	negf	___awmod@divisor^0,c
  2660   00668C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2661   00668E  B0D8               	btfsc	status,0,c
  2662   006690  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2663   006692                     l8016:
  2664   006692  5003               	movf	___awmod@divisor^0,w,c
  2665   006694  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2666   006696  B4D8               	btfsc	status,2,c
  2667   006698  EF50  F033         	goto	u10621
  2668   00669C  EF52  F033         	goto	u10620
  2669   0066A0                     u10621:
  2670   0066A0  EF76  F033         	goto	l8032
  2671   0066A4                     u10620:
  2672   0066A4  0E01               	movlw	1
  2673   0066A6  6E05               	movwf	___awmod@counter^0,c
  2674   0066A8  EF5A  F033         	goto	l8022
  2675   0066AC                     l8020:
  2676   0066AC  90D8               	bcf	status,0,c
  2677   0066AE  3603               	rlcf	___awmod@divisor^0,f,c
  2678   0066B0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2679   0066B2  2A05               	incf	___awmod@counter^0,f,c
  2680   0066B4                     l8022:
  2681   0066B4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2682   0066B6  EF5F  F033         	goto	u10631
  2683   0066BA  EF61  F033         	goto	u10630
  2684   0066BE                     u10631:
  2685   0066BE  EF56  F033         	goto	l8020
  2686   0066C2                     u10630:
  2687   0066C2                     l8024:
  2688   0066C2  5003               	movf	___awmod@divisor^0,w,c
  2689   0066C4  5C01               	subwf	___awmod@dividend^0,w,c
  2690   0066C6  5004               	movf	(___awmod@divisor+1)^0,w,c
  2691   0066C8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2692   0066CA  A0D8               	btfss	status,0,c
  2693   0066CC  EF6A  F033         	goto	u10641
  2694   0066D0  EF6C  F033         	goto	u10640
  2695   0066D4                     u10641:
  2696   0066D4  EF70  F033         	goto	l8028
  2697   0066D8                     u10640:
  2698   0066D8  5003               	movf	___awmod@divisor^0,w,c
  2699   0066DA  5E01               	subwf	___awmod@dividend^0,f,c
  2700   0066DC  5004               	movf	(___awmod@divisor+1)^0,w,c
  2701   0066DE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2702   0066E0                     l8028:
  2703   0066E0  90D8               	bcf	status,0,c
  2704   0066E2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2705   0066E4  3203               	rrcf	___awmod@divisor^0,f,c
  2706   0066E6  2E05               	decfsz	___awmod@counter^0,f,c
  2707   0066E8  EF61  F033         	goto	l8024
  2708   0066EC                     l8032:
  2709   0066EC  5006               	movf	___awmod@sign^0,w,c
  2710   0066EE  B4D8               	btfsc	status,2,c
  2711   0066F0  EF7C  F033         	goto	u10651
  2712   0066F4  EF7E  F033         	goto	u10650
  2713   0066F8                     u10651:
  2714   0066F8  EF82  F033         	goto	l8036
  2715   0066FC                     u10650:
  2716   0066FC  6C01               	negf	___awmod@dividend^0,c
  2717   0066FE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2718   006700  B0D8               	btfsc	status,0,c
  2719   006702  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2720   006704                     l8036:
  2721   006704  C001  F001         	movff	___awmod@dividend,?___awmod
  2722   006708  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2723   00670C  0012               	return		;funcret
  2724   00670E                     __end_of___awmod:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _Update_Actuators *****************
  2728 ;; Defined at:
  2729 ;;		line 376 in file "newmain.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0
  2744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2745 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2746 ;;      Totals:         1       4       0       0       0       0       0       0       0
  2747 ;;Total ram usage:        5 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 2
  2750 ;; This function calls:
  2751 ;;		___flge
  2752 ;; This function is called by:
  2753 ;;		_main
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text2
  2758   005A8C                     __ptext2:
  2759                           	callstack 0
  2760   005A8C                     _Update_Actuators:
  2761                           	callstack 28
  2762   005A8C                     
  2763                           ;newmain.c: 378:     fire_alarm = flame_detected ||
  2764   005A8C  0E01               	movlw	1
  2765   005A8E  6E5D               	movwf	_Update_Actuators$752^0,c
  2766   005A90  0103               	movlb	3	; () banked
  2767   005A92  5171               	movf	_flame_detected& (0+255),w,b
  2768   005A94  A4D8               	btfss	status,2,c
  2769   005A96  EF4F  F02D         	goto	u10351
  2770   005A9A  EF51  F02D         	goto	u10350
  2771   005A9E                     u10351:
  2772   005A9E  EF87  F02D         	goto	l239
  2773   005AA2                     u10350:
  2774   005AA2                     
  2775                           ; BSR set to: 3
  2776   005AA2  C35C  F060         	movff	_temperature,___flge@ff1
  2777   005AA6  C35D  F061         	movff	_temperature+1,___flge@ff1+1
  2778   005AAA  C35E  F062         	movff	_temperature+2,___flge@ff1+2
  2779   005AAE  C35F  F063         	movff	_temperature+3,___flge@ff1+3
  2780   005AB2  0E00               	movlw	0
  2781   005AB4  0100               	movlb	0	; () banked
  2782   005AB6  6F64               	movwf	___flge@ff2& (0+255),b
  2783   005AB8  0E00               	movlw	0
  2784   005ABA  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2785   005ABC  0E20               	movlw	32
  2786   005ABE  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2787   005AC0  0E42               	movlw	66
  2788   005AC2  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2789   005AC4  EC72  F02F         	call	___flge	;wreg free
  2790   005AC8  0100               	movlb	0	; () banked
  2791   005ACA  B0D8               	btfsc	status,0,c
  2792   005ACC  EF6A  F02D         	goto	u10361
  2793   005AD0  EF6C  F02D         	goto	u10360
  2794   005AD4                     u10361:
  2795   005AD4  EF87  F02D         	goto	l239
  2796   005AD8                     u10360:
  2797   005AD8                     
  2798                           ; BSR set to: 0
  2799   005AD8  C350  F060         	movff	_co_ppm,___flge@ff1
  2800   005ADC  C351  F061         	movff	_co_ppm+1,___flge@ff1+1
  2801   005AE0  C352  F062         	movff	_co_ppm+2,___flge@ff1+2
  2802   005AE4  C353  F063         	movff	_co_ppm+3,___flge@ff1+3
  2803   005AE8  0E00               	movlw	0
  2804   005AEA  6F64               	movwf	___flge@ff2& (0+255),b
  2805   005AEC  0E00               	movlw	0
  2806   005AEE  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2807   005AF0  0E48               	movlw	72
  2808   005AF2  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2809   005AF4  0E42               	movlw	66
  2810   005AF6  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2811   005AF8  EC72  F02F         	call	___flge	;wreg free
  2812   005AFC  0100               	movlb	0	; () banked
  2813   005AFE  B0D8               	btfsc	status,0,c
  2814   005B00  EF84  F02D         	goto	u10371
  2815   005B04  EF86  F02D         	goto	u10370
  2816   005B08                     u10371:
  2817   005B08  EF87  F02D         	goto	l239
  2818   005B0C                     u10370:
  2819   005B0C                     
  2820                           ; BSR set to: 0
  2821   005B0C  6A5D               	clrf	_Update_Actuators$752^0,c
  2822   005B0E                     l239:
  2823   005B0E  C05D  F36E         	movff	_Update_Actuators$752,_fire_alarm
  2824   005B12                     
  2825                           ;newmain.c: 383:     if(fire_alarm) {
  2826   005B12  0103               	movlb	3	; () banked
  2827   005B14  516E               	movf	_fire_alarm& (0+255),w,b
  2828   005B16  B4D8               	btfsc	status,2,c
  2829   005B18  EF90  F02D         	goto	u10381
  2830   005B1C  EF92  F02D         	goto	u10380
  2831   005B20                     u10381:
  2832   005B20  EFD9  F02D         	goto	l240
  2833   005B24                     u10380:
  2834   005B24                     
  2835                           ; BSR set to: 3
  2836                           ;newmain.c: 384:         PORTBbits.RB0 = 1;
  2837   005B24  8081               	bsf	129,0,c	;volatile
  2838   005B26                     
  2839                           ; BSR set to: 3
  2840                           ;newmain.c: 385:         pump_active = 1;
  2841   005B26  0E01               	movlw	1
  2842   005B28  6F70               	movwf	_pump_active& (0+255),b
  2843   005B2A                     
  2844                           ; BSR set to: 3
  2845                           ;newmain.c: 388:         static unsigned long last_blink = 0;;newmain.c: 389:         if
      +                          (system_millis - last_blink >= 500) {
  2846   005B2A  511C               	movf	Update_Actuators@last_blink& (0+255),w,b
  2847   005B2C  0102               	movlb	2	; () banked
  2848   005B2E  5DFA               	subwf	_system_millis& (0+255),w,b
  2849   005B30  0100               	movlb	0	; () banked
  2850   005B32  6F68               	movwf	??_Update_Actuators& (0+255),b
  2851   005B34  0103               	movlb	3	; () banked
  2852   005B36  511D               	movf	(Update_Actuators@last_blink+1)& (0+255),w,b
  2853   005B38  0102               	movlb	2	; () banked
  2854   005B3A  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  2855   005B3C  0100               	movlb	0	; () banked
  2856   005B3E  6F69               	movwf	(??_Update_Actuators+1)& (0+255),b
  2857   005B40  0103               	movlb	3	; () banked
  2858   005B42  511E               	movf	(Update_Actuators@last_blink+2)& (0+255),w,b
  2859   005B44  0102               	movlb	2	; () banked
  2860   005B46  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  2861   005B48  0100               	movlb	0	; () banked
  2862   005B4A  6F6A               	movwf	(??_Update_Actuators+2)& (0+255),b
  2863   005B4C  0103               	movlb	3	; () banked
  2864   005B4E  511F               	movf	(Update_Actuators@last_blink+3)& (0+255),w,b
  2865   005B50  0102               	movlb	2	; () banked
  2866   005B52  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  2867   005B54  0100               	movlb	0	; () banked
  2868   005B56  6F6B               	movwf	(??_Update_Actuators+3)& (0+255),b
  2869   005B58  516B               	movf	(??_Update_Actuators+3)& (0+255),w,b
  2870   005B5A  116A               	iorwf	(??_Update_Actuators+2)& (0+255),w,b
  2871   005B5C  E10B               	bnz	u10390
  2872   005B5E  0EF4               	movlw	244
  2873   005B60  5D68               	subwf	??_Update_Actuators& (0+255),w,b
  2874   005B62  0E01               	movlw	1
  2875   005B64  5969               	subwfb	(??_Update_Actuators+1)& (0+255),w,b
  2876   005B66  A0D8               	btfss	status,0,c
  2877   005B68  EFB8  F02D         	goto	u10391
  2878   005B6C  EFBA  F02D         	goto	u10390
  2879   005B70                     u10391:
  2880   005B70  EFD4  F02D         	goto	l7914
  2881   005B74                     u10390:
  2882   005B74                     
  2883                           ; BSR set to: 0
  2884                           ;newmain.c: 390:             PORTBbits.RB5 = !PORTBbits.RB5;
  2885   005B74  AA81               	btfss	129,5,c	;volatile
  2886   005B76  EFBF  F02D         	goto	u10401
  2887   005B7A  EFC3  F02D         	goto	u10400
  2888   005B7E                     u10401:
  2889   005B7E  6B68               	clrf	??_Update_Actuators& (0+255),b
  2890   005B80  2B68               	incf	??_Update_Actuators& (0+255),f,b
  2891   005B82  EFC5  F02D         	goto	u10418
  2892   005B86                     u10400:
  2893   005B86  0100               	movlb	0	; () banked
  2894   005B88  6B68               	clrf	??_Update_Actuators& (0+255),b
  2895   005B8A                     u10418:
  2896   005B8A  3B68               	swapf	??_Update_Actuators& (0+255),f,b
  2897   005B8C  4768               	rlncf	??_Update_Actuators& (0+255),f,b
  2898   005B8E  5081               	movf	129,w,c	;volatile
  2899   005B90  1968               	xorwf	??_Update_Actuators& (0+255),w,b
  2900   005B92  0BDF               	andlw	-33
  2901   005B94  1968               	xorwf	??_Update_Actuators& (0+255),w,b
  2902   005B96  6E81               	movwf	129,c	;volatile
  2903   005B98                     
  2904                           ; BSR set to: 0
  2905                           ;newmain.c: 391:             last_blink = system_millis;
  2906   005B98  C2FA  F31C         	movff	_system_millis,Update_Actuators@last_blink
  2907   005B9C  C2FB  F31D         	movff	_system_millis+1,Update_Actuators@last_blink+1
  2908   005BA0  C2FC  F31E         	movff	_system_millis+2,Update_Actuators@last_blink+2
  2909   005BA4  C2FD  F31F         	movff	_system_millis+3,Update_Actuators@last_blink+3
  2910   005BA8                     l7914:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;newmain.c: 393:         alarm_active = 1;
  2914   005BA8  0E01               	movlw	1
  2915   005BAA  0103               	movlb	3	; () banked
  2916   005BAC  6F6F               	movwf	_alarm_active& (0+255),b
  2917                           
  2918                           ;newmain.c: 394:     } else {
  2919   005BAE  EFDD  F02D         	goto	l245
  2920   005BB2                     l240:
  2921                           
  2922                           ; BSR set to: 3
  2923                           ;newmain.c: 395:         PORTBbits.RB0 = 0;
  2924   005BB2  9081               	bcf	129,0,c	;volatile
  2925                           
  2926                           ;newmain.c: 396:         pump_active = 0;
  2927   005BB4  6B70               	clrf	_pump_active& (0+255),b
  2928                           
  2929                           ;newmain.c: 397:         PORTBbits.RB5 = 1;
  2930   005BB6  8A81               	bsf	129,5,c	;volatile
  2931                           
  2932                           ;newmain.c: 398:         alarm_active = 0;
  2933   005BB8  6B6F               	clrf	_alarm_active& (0+255),b
  2934   005BBA                     l245:
  2935                           
  2936                           ; BSR set to: 3
  2937   005BBA  0012               	return		;funcret
  2938   005BBC                     __end_of_Update_Actuators:
  2939                           	callstack 0
  2940                           
  2941 ;; *************** function _UART_Init *****************
  2942 ;; Defined at:
  2943 ;;		line 441 in file "newmain.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2957 ;;      Params:         0       0       0       0       0       0       0       0       0
  2958 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2960 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2961 ;;Total ram usage:        0 bytes
  2962 ;; Hardware stack levels used: 1
  2963 ;; Hardware stack levels required when called: 1
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_main
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text3
  2972   006E12                     __ptext3:
  2973                           	callstack 0
  2974   006E12                     _UART_Init:
  2975                           	callstack 29
  2976   006E12                     
  2977                           ;newmain.c: 442:     TRISC6 = 0;
  2978   006E12  9C94               	bcf	3988,6,c	;volatile
  2979                           
  2980                           ;newmain.c: 443:     TRISC7 = 1;
  2981   006E14  8E94               	bsf	3988,7,c	;volatile
  2982   006E16                     
  2983                           ;newmain.c: 444:     SPBRG = 51;
  2984   006E16  0E33               	movlw	51
  2985   006E18  6EAF               	movwf	175,c	;volatile
  2986   006E1A                     
  2987                           ;newmain.c: 445:     TXSTAbits.BRGH = 1;
  2988   006E1A  84AC               	bsf	172,2,c	;volatile
  2989   006E1C                     
  2990                           ;newmain.c: 446:     TXSTAbits.SYNC = 0;
  2991   006E1C  98AC               	bcf	172,4,c	;volatile
  2992   006E1E                     
  2993                           ;newmain.c: 447:     TXSTAbits.TXEN = 1;
  2994   006E1E  8AAC               	bsf	172,5,c	;volatile
  2995   006E20                     
  2996                           ;newmain.c: 448:     RCSTAbits.SPEN = 1;
  2997   006E20  8EAB               	bsf	171,7,c	;volatile
  2998   006E22                     
  2999                           ;newmain.c: 449:     RCSTAbits.CREN = 1;
  3000   006E22  88AB               	bsf	171,4,c	;volatile
  3001   006E24  0012               	return		;funcret
  3002   006E26                     __end_of_UART_Init:
  3003                           	callstack 0
  3004                           
  3005 ;; *************** function _Send_Data *****************
  3006 ;; Defined at:
  3007 ;;		line 402 in file "newmain.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  i               2  200[BANK1 ] int 
  3012 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0
  3023 ;;      Locals:         0       0     202       0       0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3025 ;;      Totals:         0       0     202       0       0       0       0       0       0
  3026 ;;Total ram usage:      202 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; Hardware stack levels required when called: 9
  3029 ;; This function calls:
  3030 ;;		_sprintf
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text4
  3037   0063D6                     __ptext4:
  3038                           	callstack 0
  3039   0063D6                     _Send_Data:
  3040                           	callstack 21
  3041   0063D6                     
  3042                           ;newmain.c: 403:     char buffer[200];;newmain.c: 404:     sprintf(buffer,
  3043   0063D6  0E00               	movlw	low Send_Data@buffer
  3044   0063D8  0100               	movlb	0	; () banked
  3045   0063DA  6FB0               	movwf	sprintf@s& (0+255),b
  3046   0063DC  0E01               	movlw	high Send_Data@buffer
  3047   0063DE  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3048   0063E0  0ED1               	movlw	low STR_17
  3049   0063E2  6FB2               	movwf	sprintf@fmt& (0+255),b
  3050   0063E4  0E7E               	movlw	high STR_17
  3051   0063E6  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3052   0063E8  C35C  F0B4         	movff	_temperature,?_sprintf+4
  3053   0063EC  C35D  F0B5         	movff	_temperature+1,?_sprintf+5
  3054   0063F0  C35E  F0B6         	movff	_temperature+2,?_sprintf+6
  3055   0063F4  C35F  F0B7         	movff	_temperature+3,?_sprintf+7
  3056   0063F8  C371  F0B8         	movff	_flame_detected,?_sprintf+8
  3057   0063FC  6BB9               	clrf	(?_sprintf+9)& (0+255),b
  3058   0063FE  C358  F0BA         	movff	_flame_intensity,?_sprintf+10
  3059   006402  C359  F0BB         	movff	_flame_intensity+1,?_sprintf+11
  3060   006406  C35A  F0BC         	movff	_flame_intensity+2,?_sprintf+12
  3061   00640A  C35B  F0BD         	movff	_flame_intensity+3,?_sprintf+13
  3062   00640E  C350  F0BE         	movff	_co_ppm,?_sprintf+14
  3063   006412  C351  F0BF         	movff	_co_ppm+1,?_sprintf+15
  3064   006416  C352  F0C0         	movff	_co_ppm+2,?_sprintf+16
  3065   00641A  C353  F0C1         	movff	_co_ppm+3,?_sprintf+17
  3066   00641E  C34C  F0C2         	movff	_flow_rate,?_sprintf+18
  3067   006422  C34D  F0C3         	movff	_flow_rate+1,?_sprintf+19
  3068   006426  C34E  F0C4         	movff	_flow_rate+2,?_sprintf+20
  3069   00642A  C34F  F0C5         	movff	_flow_rate+3,?_sprintf+21
  3070   00642E  C348  F0C6         	movff	_total_flow,?_sprintf+22
  3071   006432  C349  F0C7         	movff	_total_flow+1,?_sprintf+23
  3072   006436  C34A  F0C8         	movff	_total_flow+2,?_sprintf+24
  3073   00643A  C34B  F0C9         	movff	_total_flow+3,?_sprintf+25
  3074   00643E  C370  F0CA         	movff	_pump_active,?_sprintf+26
  3075   006442  6BCB               	clrf	(?_sprintf+27)& (0+255),b
  3076   006444  C36F  F0CC         	movff	_alarm_active,?_sprintf+28
  3077   006448  6BCD               	clrf	(?_sprintf+29)& (0+255),b
  3078   00644A  C36E  F0CE         	movff	_fire_alarm,?_sprintf+30
  3079   00644E  6BCF               	clrf	(?_sprintf+31)& (0+255),b
  3080   006450  C05E  F0D0         	movff	_trigger_test,?_sprintf+32
  3081   006454  6BD1               	clrf	(?_sprintf+33)& (0+255),b
  3082   006456  C36B  F0D2         	movff	_shutdown_system,?_sprintf+34
  3083   00645A  6BD3               	clrf	(?_sprintf+35)& (0+255),b
  3084   00645C  EC3F  F036         	call	_sprintf	;wreg free
  3085   006460                     l248:
  3086   006460  A2AC               	btfss	172,1,c	;volatile
  3087   006462  EF35  F032         	goto	u10571
  3088   006466  EF37  F032         	goto	u10570
  3089   00646A                     u10571:
  3090   00646A  EF30  F032         	goto	l248
  3091   00646E                     u10570:
  3092   00646E                     
  3093                           ;newmain.c: 410:     for(int i = 0; buffer[i]; i++) {
  3094   00646E  0E00               	movlw	0
  3095   006470  0101               	movlb	1	; () banked
  3096   006472  6FC9               	movwf	(Send_Data@i+1)& (0+255),b
  3097   006474  0E00               	movlw	0
  3098   006476  6FC8               	movwf	Send_Data@i& (0+255),b
  3099   006478  EF50  F032         	goto	l8002
  3100   00647C                     l7998:
  3101                           
  3102                           ; BSR set to: 1
  3103                           ;newmain.c: 411:         TXREG = buffer[i];
  3104   00647C  0E00               	movlw	low Send_Data@buffer
  3105   00647E  25C8               	addwf	Send_Data@i& (0+255),w,b
  3106   006480  6ED9               	movwf	fsr2l,c
  3107   006482  0E01               	movlw	high Send_Data@buffer
  3108   006484  21C9               	addwfc	(Send_Data@i+1)& (0+255),w,b
  3109   006486  6EDA               	movwf	fsr2h,c
  3110   006488  50DF               	movf	indf2,w,c
  3111   00648A  6EAD               	movwf	173,c	;volatile
  3112   00648C                     l253:
  3113   00648C  A2AC               	btfss	172,1,c	;volatile
  3114   00648E  EF4B  F032         	goto	u10581
  3115   006492  EF4D  F032         	goto	u10580
  3116   006496                     u10581:
  3117   006496  EF46  F032         	goto	l253
  3118   00649A                     u10580:
  3119   00649A                     
  3120                           ;newmain.c: 413:     }
  3121   00649A  0101               	movlb	1	; () banked
  3122   00649C  4BC8               	infsnz	Send_Data@i& (0+255),f,b
  3123   00649E  2BC9               	incf	(Send_Data@i+1)& (0+255),f,b
  3124   0064A0                     l8002:
  3125                           
  3126                           ; BSR set to: 1
  3127   0064A0  0E00               	movlw	low Send_Data@buffer
  3128   0064A2  25C8               	addwf	Send_Data@i& (0+255),w,b
  3129   0064A4  6ED9               	movwf	fsr2l,c
  3130   0064A6  0E01               	movlw	high Send_Data@buffer
  3131   0064A8  21C9               	addwfc	(Send_Data@i+1)& (0+255),w,b
  3132   0064AA  6EDA               	movwf	fsr2h,c
  3133   0064AC  50DF               	movf	indf2,w,c
  3134   0064AE  A4D8               	btfss	status,2,c
  3135   0064B0  EF5C  F032         	goto	u10591
  3136   0064B4  EF5E  F032         	goto	u10590
  3137   0064B8                     u10591:
  3138   0064B8  EF3E  F032         	goto	l7998
  3139   0064BC                     u10590:
  3140   0064BC                     
  3141                           ; BSR set to: 1
  3142   0064BC  0012               	return		;funcret
  3143   0064BE                     __end_of_Send_Data:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _Read_Sensors *****************
  3147 ;; Defined at:
  3148 ;;		line 307 in file "newmain.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  pulses          2   59[BANK0 ] unsigned int 
  3153 ;;  raw_co          4   73[BANK0 ] float 
  3154 ;;  Rs              4   69[BANK0 ] float 
  3155 ;;  rs_ro_ratio     4   65[BANK0 ] float 
  3156 ;;  mq2_voltage     4   61[BANK0 ] float 
  3157 ;;  temp_factor     4   37[BANK0 ] float 
  3158 ;;  flame_voltag    4   33[BANK0 ] float 
  3159 ;;  raw_temp        4   29[BANK0 ] float 
  3160 ;;  mq2_adc         2   57[BANK0 ] unsigned int 
  3161 ;;  flame_adc       2   55[BANK0 ] unsigned int 
  3162 ;;  temp_adc        2   53[BANK0 ] unsigned int 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0
  3173 ;;      Locals:         0      48       0       0       0       0       0       0       0
  3174 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3175 ;;      Totals:         0      52       0       0       0       0       0       0       0
  3176 ;;Total ram usage:       52 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; Hardware stack levels required when called: 4
  3179 ;; This function calls:
  3180 ;;		_ADC_Read
  3181 ;;		_Apply_Filter
  3182 ;;		___fladd
  3183 ;;		___fldiv
  3184 ;;		___flge
  3185 ;;		___flmul
  3186 ;;		___flsub
  3187 ;;		___xxtofl
  3188 ;;		_powf
  3189 ;; This function is called by:
  3190 ;;		_main
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text5
  3195   002EB8                     __ptext5:
  3196                           	callstack 0
  3197   002EB8                     _Read_Sensors:
  3198                           	callstack 26
  3199   002EB8                     
  3200                           ;newmain.c: 309:     unsigned int temp_adc = ADC_Read(0);
  3201   002EB8  0E00               	movlw	0
  3202   002EBA  EC81  F036         	call	_ADC_Read
  3203   002EBE  C001  F095         	movff	?_ADC_Read,Read_Sensors@temp_adc
  3204   002EC2  C002  F096         	movff	?_ADC_Read+1,Read_Sensors@temp_adc+1
  3205   002EC6                     
  3206                           ;newmain.c: 310:     float raw_temp = (temp_adc * 5.0 / 1024.0) / 0.01;
  3207   002EC6  0E00               	movlw	0
  3208   002EC8  6E2C               	movwf	___fldiv@a^0,c
  3209   002ECA  0E00               	movlw	0
  3210   002ECC  6E2D               	movwf	(___fldiv@a+1)^0,c
  3211   002ECE  0E80               	movlw	128
  3212   002ED0  6E2E               	movwf	(___fldiv@a+2)^0,c
  3213   002ED2  0E44               	movlw	68
  3214   002ED4  6E2F               	movwf	(___fldiv@a+3)^0,c
  3215   002ED6  0E00               	movlw	0
  3216   002ED8  6E13               	movwf	___flmul@a^0,c
  3217   002EDA  0E00               	movlw	0
  3218   002EDC  6E14               	movwf	(___flmul@a+1)^0,c
  3219   002EDE  0EA0               	movlw	160
  3220   002EE0  6E15               	movwf	(___flmul@a+2)^0,c
  3221   002EE2  0E40               	movlw	64
  3222   002EE4  6E16               	movwf	(___flmul@a+3)^0,c
  3223   002EE6  C095  F001         	movff	Read_Sensors@temp_adc,___xxtofl@val
  3224   002EEA  C096  F002         	movff	Read_Sensors@temp_adc+1,___xxtofl@val+1
  3225   002EEE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3226   002EF0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3227   002EF2  0E00               	movlw	0
  3228   002EF4  ECEA  F02A         	call	___xxtofl
  3229   002EF8  C001  F00F         	movff	?___xxtofl,___flmul@b
  3230   002EFC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3231   002F00  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3232   002F04  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3233   002F08  ECF6  F01F         	call	___flmul	;wreg free
  3234   002F0C  C00F  F028         	movff	?___flmul,___fldiv@b
  3235   002F10  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3236   002F14  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3237   002F18  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3238   002F1C  ECF8  F023         	call	___fldiv	;wreg free
  3239   002F20  C028  F089         	movff	?___fldiv,_Read_Sensors$1835
  3240   002F24  C029  F08A         	movff	?___fldiv+1,_Read_Sensors$1835+1
  3241   002F28  C02A  F08B         	movff	?___fldiv+2,_Read_Sensors$1835+2
  3242   002F2C  C02B  F08C         	movff	?___fldiv+3,_Read_Sensors$1835+3
  3243   002F30                     
  3244                           ;newmain.c: 310:     float raw_temp = (temp_adc * 5.0 / 1024.0) / 0.01;
  3245   002F30  C089  F028         	movff	_Read_Sensors$1835,___fldiv@b
  3246   002F34  C08A  F029         	movff	_Read_Sensors$1835+1,___fldiv@b+1
  3247   002F38  C08B  F02A         	movff	_Read_Sensors$1835+2,___fldiv@b+2
  3248   002F3C  C08C  F02B         	movff	_Read_Sensors$1835+3,___fldiv@b+3
  3249   002F40  0E0A               	movlw	10
  3250   002F42  6E2C               	movwf	___fldiv@a^0,c
  3251   002F44  0ED7               	movlw	215
  3252   002F46  6E2D               	movwf	(___fldiv@a+1)^0,c
  3253   002F48  0E23               	movlw	35
  3254   002F4A  6E2E               	movwf	(___fldiv@a+2)^0,c
  3255   002F4C  0E3C               	movlw	60
  3256   002F4E  6E2F               	movwf	(___fldiv@a+3)^0,c
  3257   002F50  ECF8  F023         	call	___fldiv	;wreg free
  3258   002F54  C028  F07D         	movff	?___fldiv,Read_Sensors@raw_temp
  3259   002F58  C029  F07E         	movff	?___fldiv+1,Read_Sensors@raw_temp+1
  3260   002F5C  C02A  F07F         	movff	?___fldiv+2,Read_Sensors@raw_temp+2
  3261   002F60  C02B  F080         	movff	?___fldiv+3,Read_Sensors@raw_temp+3
  3262   002F64                     
  3263                           ;newmain.c: 311:     temperature = Apply_Filter(raw_temp, temp_samples);
  3264   002F64  C07D  F051         	movff	Read_Sensors@raw_temp,Apply_Filter@new_value
  3265   002F68  C07E  F052         	movff	Read_Sensors@raw_temp+1,Apply_Filter@new_value+1
  3266   002F6C  C07F  F053         	movff	Read_Sensors@raw_temp+2,Apply_Filter@new_value+2
  3267   002F70  C080  F054         	movff	Read_Sensors@raw_temp+3,Apply_Filter@new_value+3
  3268   002F74  0EDA               	movlw	low _temp_samples
  3269   002F76  6E55               	movwf	Apply_Filter@samples^0,c
  3270   002F78  0E03               	movlw	high _temp_samples
  3271   002F7A  6E56               	movwf	(Apply_Filter@samples+1)^0,c
  3272   002F7C  EC5F  F032         	call	_Apply_Filter	;wreg free
  3273   002F80  C051  F35C         	movff	?_Apply_Filter,_temperature
  3274   002F84  C052  F35D         	movff	?_Apply_Filter+1,_temperature+1
  3275   002F88  C053  F35E         	movff	?_Apply_Filter+2,_temperature+2
  3276   002F8C  C054  F35F         	movff	?_Apply_Filter+3,_temperature+3
  3277   002F90                     
  3278                           ;newmain.c: 314:     unsigned int flame_adc = ADC_Read(1);
  3279   002F90  0E01               	movlw	1
  3280   002F92  EC81  F036         	call	_ADC_Read
  3281   002F96  C001  F097         	movff	?_ADC_Read,Read_Sensors@flame_adc
  3282   002F9A  C002  F098         	movff	?_ADC_Read+1,Read_Sensors@flame_adc+1
  3283   002F9E                     
  3284                           ;newmain.c: 315:     float flame_voltage = (flame_adc * 5.0) / 1024.0;
  3285   002F9E  0E00               	movlw	0
  3286   002FA0  6E13               	movwf	___flmul@a^0,c
  3287   002FA2  0E00               	movlw	0
  3288   002FA4  6E14               	movwf	(___flmul@a+1)^0,c
  3289   002FA6  0EA0               	movlw	160
  3290   002FA8  6E15               	movwf	(___flmul@a+2)^0,c
  3291   002FAA  0E40               	movlw	64
  3292   002FAC  6E16               	movwf	(___flmul@a+3)^0,c
  3293   002FAE  C097  F001         	movff	Read_Sensors@flame_adc,___xxtofl@val
  3294   002FB2  C098  F002         	movff	Read_Sensors@flame_adc+1,___xxtofl@val+1
  3295   002FB6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3296   002FB8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3297   002FBA  0E00               	movlw	0
  3298   002FBC  ECEA  F02A         	call	___xxtofl
  3299   002FC0  C001  F00F         	movff	?___xxtofl,___flmul@b
  3300   002FC4  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3301   002FC8  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3302   002FCC  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3303   002FD0  ECF6  F01F         	call	___flmul	;wreg free
  3304   002FD4  C00F  F028         	movff	?___flmul,___fldiv@b
  3305   002FD8  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3306   002FDC  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3307   002FE0  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3308   002FE4  0E00               	movlw	0
  3309   002FE6  6E2C               	movwf	___fldiv@a^0,c
  3310   002FE8  0E00               	movlw	0
  3311   002FEA  6E2D               	movwf	(___fldiv@a+1)^0,c
  3312   002FEC  0E80               	movlw	128
  3313   002FEE  6E2E               	movwf	(___fldiv@a+2)^0,c
  3314   002FF0  0E44               	movlw	68
  3315   002FF2  6E2F               	movwf	(___fldiv@a+3)^0,c
  3316   002FF4  ECF8  F023         	call	___fldiv	;wreg free
  3317   002FF8  C028  F081         	movff	?___fldiv,Read_Sensors@flame_voltage
  3318   002FFC  C029  F082         	movff	?___fldiv+1,Read_Sensors@flame_voltage+1
  3319   003000  C02A  F083         	movff	?___fldiv+2,Read_Sensors@flame_voltage+2
  3320   003004  C02B  F084         	movff	?___fldiv+3,Read_Sensors@flame_voltage+3
  3321   003008                     
  3322                           ;newmain.c: 316:     flame_intensity = (flame_base_voltage - flame_voltage) * 100.0 / fl
      +                          ame_base_voltage;
  3323   003008  0E00               	movlw	0
  3324   00300A  6E13               	movwf	___flmul@a^0,c
  3325   00300C  0E00               	movlw	0
  3326   00300E  6E14               	movwf	(___flmul@a+1)^0,c
  3327   003010  0EC8               	movlw	200
  3328   003012  6E15               	movwf	(___flmul@a+2)^0,c
  3329   003014  0E42               	movlw	66
  3330   003016  6E16               	movwf	(___flmul@a+3)^0,c
  3331   003018  C081  F055         	movff	Read_Sensors@flame_voltage,___flsub@a
  3332   00301C  C082  F056         	movff	Read_Sensors@flame_voltage+1,___flsub@a+1
  3333   003020  C083  F057         	movff	Read_Sensors@flame_voltage+2,___flsub@a+2
  3334   003024  C084  F058         	movff	Read_Sensors@flame_voltage+3,___flsub@a+3
  3335   003028  C354  F051         	movff	_flame_base_voltage,___flsub@b
  3336   00302C  C355  F052         	movff	_flame_base_voltage+1,___flsub@b+1
  3337   003030  C356  F053         	movff	_flame_base_voltage+2,___flsub@b+2
  3338   003034  C357  F054         	movff	_flame_base_voltage+3,___flsub@b+3
  3339   003038  EC1C  F036         	call	___flsub	;wreg free
  3340   00303C  C051  F00F         	movff	?___flsub,___flmul@b
  3341   003040  C052  F010         	movff	?___flsub+1,___flmul@b+1
  3342   003044  C053  F011         	movff	?___flsub+2,___flmul@b+2
  3343   003048  C054  F012         	movff	?___flsub+3,___flmul@b+3
  3344   00304C  ECF6  F01F         	call	___flmul	;wreg free
  3345   003050  C00F  F028         	movff	?___flmul,___fldiv@b
  3346   003054  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3347   003058  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3348   00305C  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3349   003060  C354  F02C         	movff	_flame_base_voltage,___fldiv@a
  3350   003064  C355  F02D         	movff	_flame_base_voltage+1,___fldiv@a+1
  3351   003068  C356  F02E         	movff	_flame_base_voltage+2,___fldiv@a+2
  3352   00306C  C357  F02F         	movff	_flame_base_voltage+3,___fldiv@a+3
  3353   003070  ECF8  F023         	call	___fldiv	;wreg free
  3354   003074  C028  F358         	movff	?___fldiv,_flame_intensity
  3355   003078  C029  F359         	movff	?___fldiv+1,_flame_intensity+1
  3356   00307C  C02A  F35A         	movff	?___fldiv+2,_flame_intensity+2
  3357   003080  C02B  F35B         	movff	?___fldiv+3,_flame_intensity+3
  3358   003084                     
  3359                           ;newmain.c: 318:     if(flame_intensity < 0) flame_intensity = 0;
  3360   003084  0103               	movlb	3	; () banked
  3361   003086  BF5B               	btfsc	(_flame_intensity+3)& (0+255),7,b
  3362   003088  EF4A  F018         	goto	u10250
  3363   00308C  EF48  F018         	goto	u10251
  3364   003090                     u10251:
  3365   003090  EF52  F018         	goto	l7836
  3366   003094                     u10250:
  3367   003094                     
  3368                           ; BSR set to: 3
  3369   003094  0E00               	movlw	0
  3370   003096  6F58               	movwf	_flame_intensity& (0+255),b
  3371   003098  0E00               	movlw	0
  3372   00309A  6F59               	movwf	(_flame_intensity+1)& (0+255),b
  3373   00309C  0E00               	movlw	0
  3374   00309E  6F5A               	movwf	(_flame_intensity+2)& (0+255),b
  3375   0030A0  0E00               	movlw	0
  3376   0030A2  6F5B               	movwf	(_flame_intensity+3)& (0+255),b
  3377   0030A4                     l7836:
  3378                           
  3379                           ; BSR set to: 3
  3380                           ;newmain.c: 319:     if(flame_intensity > 100) flame_intensity = 100;
  3381   0030A4  0E00               	movlw	0
  3382   0030A6  0100               	movlb	0	; () banked
  3383   0030A8  6F60               	movwf	___flge@ff1& (0+255),b
  3384   0030AA  0E00               	movlw	0
  3385   0030AC  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3386   0030AE  0EC8               	movlw	200
  3387   0030B0  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3388   0030B2  0E42               	movlw	66
  3389   0030B4  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3390   0030B6  C358  F064         	movff	_flame_intensity,___flge@ff2
  3391   0030BA  C359  F065         	movff	_flame_intensity+1,___flge@ff2+1
  3392   0030BE  C35A  F066         	movff	_flame_intensity+2,___flge@ff2+2
  3393   0030C2  C35B  F067         	movff	_flame_intensity+3,___flge@ff2+3
  3394   0030C6  EC72  F02F         	call	___flge	;wreg free
  3395   0030CA  0100               	movlb	0	; () banked
  3396   0030CC  B0D8               	btfsc	status,0,c
  3397   0030CE  EF6B  F018         	goto	u10261
  3398   0030D2  EF6D  F018         	goto	u10260
  3399   0030D6                     u10261:
  3400   0030D6  EF76  F018         	goto	l216
  3401   0030DA                     u10260:
  3402   0030DA                     
  3403                           ; BSR set to: 0
  3404   0030DA  0E00               	movlw	0
  3405   0030DC  0103               	movlb	3	; () banked
  3406   0030DE  6F58               	movwf	_flame_intensity& (0+255),b
  3407   0030E0  0E00               	movlw	0
  3408   0030E2  6F59               	movwf	(_flame_intensity+1)& (0+255),b
  3409   0030E4  0EC8               	movlw	200
  3410   0030E6  6F5A               	movwf	(_flame_intensity+2)& (0+255),b
  3411   0030E8  0E42               	movlw	66
  3412   0030EA  6F5B               	movwf	(_flame_intensity+3)& (0+255),b
  3413   0030EC                     l216:
  3414                           
  3415                           ;newmain.c: 322:     if(!flame_detected && flame_intensity >= 15.0) {
  3416   0030EC  0103               	movlb	3	; () banked
  3417   0030EE  5171               	movf	_flame_detected& (0+255),w,b
  3418   0030F0  A4D8               	btfss	status,2,c
  3419   0030F2  EF7D  F018         	goto	u10271
  3420   0030F6  EF7F  F018         	goto	u10270
  3421   0030FA                     u10271:
  3422   0030FA  EF9F  F018         	goto	l7844
  3423   0030FE                     u10270:
  3424   0030FE                     
  3425                           ; BSR set to: 3
  3426   0030FE  C358  F060         	movff	_flame_intensity,___flge@ff1
  3427   003102  C359  F061         	movff	_flame_intensity+1,___flge@ff1+1
  3428   003106  C35A  F062         	movff	_flame_intensity+2,___flge@ff1+2
  3429   00310A  C35B  F063         	movff	_flame_intensity+3,___flge@ff1+3
  3430   00310E  0E00               	movlw	0
  3431   003110  0100               	movlb	0	; () banked
  3432   003112  6F64               	movwf	___flge@ff2& (0+255),b
  3433   003114  0E00               	movlw	0
  3434   003116  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3435   003118  0E70               	movlw	112
  3436   00311A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3437   00311C  0E41               	movlw	65
  3438   00311E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3439   003120  EC72  F02F         	call	___flge	;wreg free
  3440   003124  0100               	movlb	0	; () banked
  3441   003126  A0D8               	btfss	status,0,c
  3442   003128  EF98  F018         	goto	u10281
  3443   00312C  EF9A  F018         	goto	u10280
  3444   003130                     u10281:
  3445   003130  EF9F  F018         	goto	l7844
  3446   003134                     u10280:
  3447   003134                     
  3448                           ; BSR set to: 0
  3449                           ;newmain.c: 323:         flame_detected = 1;
  3450   003134  0E01               	movlw	1
  3451   003136  0103               	movlb	3	; () banked
  3452   003138  6F71               	movwf	_flame_detected& (0+255),b
  3453                           
  3454                           ;newmain.c: 324:     } else if(flame_detected && flame_intensity <= (15.0 - 3.0)) {
  3455   00313A  EFC5  F018         	goto	l7850
  3456   00313E                     l7844:
  3457   00313E  0103               	movlb	3	; () banked
  3458   003140  5171               	movf	_flame_detected& (0+255),w,b
  3459   003142  B4D8               	btfsc	status,2,c
  3460   003144  EFA6  F018         	goto	u10291
  3461   003148  EFA8  F018         	goto	u10290
  3462   00314C                     u10291:
  3463   00314C  EFC5  F018         	goto	l7850
  3464   003150                     u10290:
  3465   003150                     
  3466                           ; BSR set to: 3
  3467   003150  0E00               	movlw	0
  3468   003152  0100               	movlb	0	; () banked
  3469   003154  6F60               	movwf	___flge@ff1& (0+255),b
  3470   003156  0E00               	movlw	0
  3471   003158  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3472   00315A  0E40               	movlw	64
  3473   00315C  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3474   00315E  0E41               	movlw	65
  3475   003160  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3476   003162  C358  F064         	movff	_flame_intensity,___flge@ff2
  3477   003166  C359  F065         	movff	_flame_intensity+1,___flge@ff2+1
  3478   00316A  C35A  F066         	movff	_flame_intensity+2,___flge@ff2+2
  3479   00316E  C35B  F067         	movff	_flame_intensity+3,___flge@ff2+3
  3480   003172  EC72  F02F         	call	___flge	;wreg free
  3481   003176  0100               	movlb	0	; () banked
  3482   003178  A0D8               	btfss	status,0,c
  3483   00317A  EFC1  F018         	goto	u10301
  3484   00317E  EFC3  F018         	goto	u10300
  3485   003182                     u10301:
  3486   003182  EFC5  F018         	goto	l7850
  3487   003186                     u10300:
  3488   003186                     
  3489                           ; BSR set to: 0
  3490                           ;newmain.c: 325:         flame_detected = 0;
  3491   003186  0103               	movlb	3	; () banked
  3492   003188  6B71               	clrf	_flame_detected& (0+255),b
  3493   00318A                     l7850:
  3494                           
  3495                           ;newmain.c: 329:     unsigned int mq2_adc = ADC_Read(2);
  3496   00318A  0E02               	movlw	2
  3497   00318C  EC81  F036         	call	_ADC_Read
  3498   003190  C001  F099         	movff	?_ADC_Read,Read_Sensors@mq2_adc
  3499   003194  C002  F09A         	movff	?_ADC_Read+1,Read_Sensors@mq2_adc+1
  3500   003198                     
  3501                           ;newmain.c: 330:     float mq2_voltage = (mq2_adc * 5.0) / 1024.0;
  3502   003198  0E00               	movlw	0
  3503   00319A  6E13               	movwf	___flmul@a^0,c
  3504   00319C  0E00               	movlw	0
  3505   00319E  6E14               	movwf	(___flmul@a+1)^0,c
  3506   0031A0  0EA0               	movlw	160
  3507   0031A2  6E15               	movwf	(___flmul@a+2)^0,c
  3508   0031A4  0E40               	movlw	64
  3509   0031A6  6E16               	movwf	(___flmul@a+3)^0,c
  3510   0031A8  C099  F001         	movff	Read_Sensors@mq2_adc,___xxtofl@val
  3511   0031AC  C09A  F002         	movff	Read_Sensors@mq2_adc+1,___xxtofl@val+1
  3512   0031B0  6A03               	clrf	(___xxtofl@val+2)^0,c
  3513   0031B2  6A04               	clrf	(___xxtofl@val+3)^0,c
  3514   0031B4  0E00               	movlw	0
  3515   0031B6  ECEA  F02A         	call	___xxtofl
  3516   0031BA  C001  F00F         	movff	?___xxtofl,___flmul@b
  3517   0031BE  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3518   0031C2  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3519   0031C6  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3520   0031CA  ECF6  F01F         	call	___flmul	;wreg free
  3521   0031CE  C00F  F028         	movff	?___flmul,___fldiv@b
  3522   0031D2  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3523   0031D6  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3524   0031DA  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3525   0031DE  0E00               	movlw	0
  3526   0031E0  6E2C               	movwf	___fldiv@a^0,c
  3527   0031E2  0E00               	movlw	0
  3528   0031E4  6E2D               	movwf	(___fldiv@a+1)^0,c
  3529   0031E6  0E80               	movlw	128
  3530   0031E8  6E2E               	movwf	(___fldiv@a+2)^0,c
  3531   0031EA  0E44               	movlw	68
  3532   0031EC  6E2F               	movwf	(___fldiv@a+3)^0,c
  3533   0031EE  ECF8  F023         	call	___fldiv	;wreg free
  3534   0031F2  C028  F09D         	movff	?___fldiv,Read_Sensors@mq2_voltage
  3535   0031F6  C029  F09E         	movff	?___fldiv+1,Read_Sensors@mq2_voltage+1
  3536   0031FA  C02A  F09F         	movff	?___fldiv+2,Read_Sensors@mq2_voltage+2
  3537   0031FE  C02B  F0A0         	movff	?___fldiv+3,Read_Sensors@mq2_voltage+3
  3538   003202                     
  3539                           ;newmain.c: 331:     float Rs = (5.0 - mq2_voltage) / mq2_voltage;
  3540   003202  C09D  F055         	movff	Read_Sensors@mq2_voltage,___flsub@a
  3541   003206  C09E  F056         	movff	Read_Sensors@mq2_voltage+1,___flsub@a+1
  3542   00320A  C09F  F057         	movff	Read_Sensors@mq2_voltage+2,___flsub@a+2
  3543   00320E  C0A0  F058         	movff	Read_Sensors@mq2_voltage+3,___flsub@a+3
  3544   003212  0E00               	movlw	0
  3545   003214  6E51               	movwf	___flsub@b^0,c
  3546   003216  0E00               	movlw	0
  3547   003218  6E52               	movwf	(___flsub@b+1)^0,c
  3548   00321A  0EA0               	movlw	160
  3549   00321C  6E53               	movwf	(___flsub@b+2)^0,c
  3550   00321E  0E40               	movlw	64
  3551   003220  6E54               	movwf	(___flsub@b+3)^0,c
  3552   003222  EC1C  F036         	call	___flsub	;wreg free
  3553   003226  C051  F028         	movff	?___flsub,___fldiv@b
  3554   00322A  C052  F029         	movff	?___flsub+1,___fldiv@b+1
  3555   00322E  C053  F02A         	movff	?___flsub+2,___fldiv@b+2
  3556   003232  C054  F02B         	movff	?___flsub+3,___fldiv@b+3
  3557   003236  C09D  F02C         	movff	Read_Sensors@mq2_voltage,___fldiv@a
  3558   00323A  C09E  F02D         	movff	Read_Sensors@mq2_voltage+1,___fldiv@a+1
  3559   00323E  C09F  F02E         	movff	Read_Sensors@mq2_voltage+2,___fldiv@a+2
  3560   003242  C0A0  F02F         	movff	Read_Sensors@mq2_voltage+3,___fldiv@a+3
  3561   003246  ECF8  F023         	call	___fldiv	;wreg free
  3562   00324A  C028  F0A5         	movff	?___fldiv,Read_Sensors@Rs
  3563   00324E  C029  F0A6         	movff	?___fldiv+1,Read_Sensors@Rs+1
  3564   003252  C02A  F0A7         	movff	?___fldiv+2,Read_Sensors@Rs+2
  3565   003256  C02B  F0A8         	movff	?___fldiv+3,Read_Sensors@Rs+3
  3566                           
  3567                           ;newmain.c: 334:     float temp_factor = 1.0 + 0.02 * (temperature - 25.0);
  3568   00325A  0E0A               	movlw	10
  3569   00325C  6E13               	movwf	___flmul@a^0,c
  3570   00325E  0ED7               	movlw	215
  3571   003260  6E14               	movwf	(___flmul@a+1)^0,c
  3572   003262  0EA3               	movlw	163
  3573   003264  6E15               	movwf	(___flmul@a+2)^0,c
  3574   003266  0E3C               	movlw	60
  3575   003268  6E16               	movwf	(___flmul@a+3)^0,c
  3576   00326A  0E00               	movlw	0
  3577   00326C  6E45               	movwf	___fladd@a^0,c
  3578   00326E  0E00               	movlw	0
  3579   003270  6E46               	movwf	(___fladd@a+1)^0,c
  3580   003272  0EC8               	movlw	200
  3581   003274  6E47               	movwf	(___fladd@a+2)^0,c
  3582   003276  0EC1               	movlw	193
  3583   003278  6E48               	movwf	(___fladd@a+3)^0,c
  3584   00327A  C35C  F041         	movff	_temperature,___fladd@b
  3585   00327E  C35D  F042         	movff	_temperature+1,___fladd@b+1
  3586   003282  C35E  F043         	movff	_temperature+2,___fladd@b+2
  3587   003286  C35F  F044         	movff	_temperature+3,___fladd@b+3
  3588   00328A  EC9B  F01D         	call	___fladd	;wreg free
  3589   00328E  C041  F00F         	movff	?___fladd,___flmul@b
  3590   003292  C042  F010         	movff	?___fladd+1,___flmul@b+1
  3591   003296  C043  F011         	movff	?___fladd+2,___flmul@b+2
  3592   00329A  C044  F012         	movff	?___fladd+3,___flmul@b+3
  3593   00329E  ECF6  F01F         	call	___flmul	;wreg free
  3594   0032A2  C00F  F08D         	movff	?___flmul,_Read_Sensors$1836
  3595   0032A6  C010  F08E         	movff	?___flmul+1,_Read_Sensors$1836+1
  3596   0032AA  C011  F08F         	movff	?___flmul+2,_Read_Sensors$1836+2
  3597   0032AE  C012  F090         	movff	?___flmul+3,_Read_Sensors$1836+3
  3598   0032B2                     
  3599                           ;newmain.c: 334:     float temp_factor = 1.0 + 0.02 * (temperature - 25.0);
  3600   0032B2  C08D  F041         	movff	_Read_Sensors$1836,___fladd@b
  3601   0032B6  C08E  F042         	movff	_Read_Sensors$1836+1,___fladd@b+1
  3602   0032BA  C08F  F043         	movff	_Read_Sensors$1836+2,___fladd@b+2
  3603   0032BE  C090  F044         	movff	_Read_Sensors$1836+3,___fladd@b+3
  3604   0032C2  0E00               	movlw	0
  3605   0032C4  6E45               	movwf	___fladd@a^0,c
  3606   0032C6  0E00               	movlw	0
  3607   0032C8  6E46               	movwf	(___fladd@a+1)^0,c
  3608   0032CA  0E80               	movlw	128
  3609   0032CC  6E47               	movwf	(___fladd@a+2)^0,c
  3610   0032CE  0E3F               	movlw	63
  3611   0032D0  6E48               	movwf	(___fladd@a+3)^0,c
  3612   0032D2  EC9B  F01D         	call	___fladd	;wreg free
  3613   0032D6  C041  F085         	movff	?___fladd,Read_Sensors@temp_factor
  3614   0032DA  C042  F086         	movff	?___fladd+1,Read_Sensors@temp_factor+1
  3615   0032DE  C043  F087         	movff	?___fladd+2,Read_Sensors@temp_factor+2
  3616   0032E2  C044  F088         	movff	?___fladd+3,Read_Sensors@temp_factor+3
  3617   0032E6                     
  3618                           ;newmain.c: 335:     Rs /= temp_factor;
  3619   0032E6  C0A5  F028         	movff	Read_Sensors@Rs,___fldiv@b
  3620   0032EA  C0A6  F029         	movff	Read_Sensors@Rs+1,___fldiv@b+1
  3621   0032EE  C0A7  F02A         	movff	Read_Sensors@Rs+2,___fldiv@b+2
  3622   0032F2  C0A8  F02B         	movff	Read_Sensors@Rs+3,___fldiv@b+3
  3623   0032F6  C085  F02C         	movff	Read_Sensors@temp_factor,___fldiv@a
  3624   0032FA  C086  F02D         	movff	Read_Sensors@temp_factor+1,___fldiv@a+1
  3625   0032FE  C087  F02E         	movff	Read_Sensors@temp_factor+2,___fldiv@a+2
  3626   003302  C088  F02F         	movff	Read_Sensors@temp_factor+3,___fldiv@a+3
  3627   003306  ECF8  F023         	call	___fldiv	;wreg free
  3628   00330A  C028  F0A5         	movff	?___fldiv,Read_Sensors@Rs
  3629   00330E  C029  F0A6         	movff	?___fldiv+1,Read_Sensors@Rs+1
  3630   003312  C02A  F0A7         	movff	?___fldiv+2,Read_Sensors@Rs+2
  3631   003316  C02B  F0A8         	movff	?___fldiv+3,Read_Sensors@Rs+3
  3632   00331A                     
  3633                           ;newmain.c: 337:     float rs_ro_ratio = Rs / MQ2_Ro;
  3634   00331A  C0A5  F028         	movff	Read_Sensors@Rs,___fldiv@b
  3635   00331E  C0A6  F029         	movff	Read_Sensors@Rs+1,___fldiv@b+1
  3636   003322  C0A7  F02A         	movff	Read_Sensors@Rs+2,___fldiv@b+2
  3637   003326  C0A8  F02B         	movff	Read_Sensors@Rs+3,___fldiv@b+3
  3638   00332A  C3D6  F02C         	movff	_MQ2_Ro,___fldiv@a
  3639   00332E  C3D7  F02D         	movff	_MQ2_Ro+1,___fldiv@a+1
  3640   003332  C3D8  F02E         	movff	_MQ2_Ro+2,___fldiv@a+2
  3641   003336  C3D9  F02F         	movff	_MQ2_Ro+3,___fldiv@a+3
  3642   00333A  ECF8  F023         	call	___fldiv	;wreg free
  3643   00333E  C028  F0A1         	movff	?___fldiv,Read_Sensors@rs_ro_ratio
  3644   003342  C029  F0A2         	movff	?___fldiv+1,Read_Sensors@rs_ro_ratio+1
  3645   003346  C02A  F0A3         	movff	?___fldiv+2,Read_Sensors@rs_ro_ratio+2
  3646   00334A  C02B  F0A4         	movff	?___fldiv+3,Read_Sensors@rs_ro_ratio+3
  3647   00334E                     
  3648                           ;newmain.c: 338:     float raw_co = 0.0;
  3649   00334E  0E00               	movlw	0
  3650   003350  0100               	movlb	0	; () banked
  3651   003352  6FA9               	movwf	Read_Sensors@raw_co& (0+255),b
  3652   003354  0E00               	movlw	0
  3653   003356  6FAA               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3654   003358  0E00               	movlw	0
  3655   00335A  6FAB               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3656   00335C  0E00               	movlw	0
  3657   00335E  6FAC               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3658   003360                     
  3659                           ; BSR set to: 0
  3660                           ;newmain.c: 340:     if(rs_ro_ratio > 0.1) {
  3661   003360  0ECD               	movlw	205
  3662   003362  6F60               	movwf	___flge@ff1& (0+255),b
  3663   003364  0ECC               	movlw	204
  3664   003366  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3665   003368  0ECC               	movlw	204
  3666   00336A  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3667   00336C  0E3D               	movlw	61
  3668   00336E  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3669   003370  C0A1  F064         	movff	Read_Sensors@rs_ro_ratio,___flge@ff2
  3670   003374  C0A2  F065         	movff	Read_Sensors@rs_ro_ratio+1,___flge@ff2+1
  3671   003378  C0A3  F066         	movff	Read_Sensors@rs_ro_ratio+2,___flge@ff2+2
  3672   00337C  C0A4  F067         	movff	Read_Sensors@rs_ro_ratio+3,___flge@ff2+3
  3673   003380  EC72  F02F         	call	___flge	;wreg free
  3674   003384  0100               	movlb	0	; () banked
  3675   003386  B0D8               	btfsc	status,0,c
  3676   003388  EFC8  F019         	goto	u10311
  3677   00338C  EFCA  F019         	goto	u10310
  3678   003390                     u10311:
  3679   003390  EFFE  F019         	goto	l7870
  3680   003394                     u10310:
  3681   003394                     
  3682                           ; BSR set to: 0
  3683                           ;newmain.c: 341:         raw_co = 15.0 * powf(rs_ro_ratio,-1.5);
  3684   003394  0E00               	movlw	0
  3685   003396  6F6C               	movwf	powf@y& (0+255),b
  3686   003398  0E00               	movlw	0
  3687   00339A  6F6D               	movwf	(powf@y+1)& (0+255),b
  3688   00339C  0EC0               	movlw	192
  3689   00339E  6F6E               	movwf	(powf@y+2)& (0+255),b
  3690   0033A0  0EBF               	movlw	191
  3691   0033A2  6F6F               	movwf	(powf@y+3)& (0+255),b
  3692   0033A4  C0A1  F068         	movff	Read_Sensors@rs_ro_ratio,powf@x
  3693   0033A8  C0A2  F069         	movff	Read_Sensors@rs_ro_ratio+1,powf@x+1
  3694   0033AC  C0A3  F06A         	movff	Read_Sensors@rs_ro_ratio+2,powf@x+2
  3695   0033B0  C0A4  F06B         	movff	Read_Sensors@rs_ro_ratio+3,powf@x+3
  3696   0033B4  EC09  F000         	call	_powf	;wreg free
  3697   0033B8  C068  F091         	movff	?_powf,_Read_Sensors$1837
  3698   0033BC  C069  F092         	movff	?_powf+1,_Read_Sensors$1837+1
  3699   0033C0  C06A  F093         	movff	?_powf+2,_Read_Sensors$1837+2
  3700   0033C4  C06B  F094         	movff	?_powf+3,_Read_Sensors$1837+3
  3701   0033C8                     
  3702                           ;newmain.c: 341:         raw_co = 15.0 * powf(rs_ro_ratio,-1.5);
  3703   0033C8  C091  F00F         	movff	_Read_Sensors$1837,___flmul@b
  3704   0033CC  C092  F010         	movff	_Read_Sensors$1837+1,___flmul@b+1
  3705   0033D0  C093  F011         	movff	_Read_Sensors$1837+2,___flmul@b+2
  3706   0033D4  C094  F012         	movff	_Read_Sensors$1837+3,___flmul@b+3
  3707   0033D8  0E00               	movlw	0
  3708   0033DA  6E13               	movwf	___flmul@a^0,c
  3709   0033DC  0E00               	movlw	0
  3710   0033DE  6E14               	movwf	(___flmul@a+1)^0,c
  3711   0033E0  0E70               	movlw	112
  3712   0033E2  6E15               	movwf	(___flmul@a+2)^0,c
  3713   0033E4  0E41               	movlw	65
  3714   0033E6  6E16               	movwf	(___flmul@a+3)^0,c
  3715   0033E8  ECF6  F01F         	call	___flmul	;wreg free
  3716   0033EC  C00F  F0A9         	movff	?___flmul,Read_Sensors@raw_co
  3717   0033F0  C010  F0AA         	movff	?___flmul+1,Read_Sensors@raw_co+1
  3718   0033F4  C011  F0AB         	movff	?___flmul+2,Read_Sensors@raw_co+2
  3719   0033F8  C012  F0AC         	movff	?___flmul+3,Read_Sensors@raw_co+3
  3720   0033FC                     l7870:
  3721                           
  3722                           ;newmain.c: 344:     if(raw_co < 0) raw_co = 0;
  3723   0033FC  0100               	movlb	0	; () banked
  3724   0033FE  BFAC               	btfsc	(Read_Sensors@raw_co+3)& (0+255),7,b
  3725   003400  EF06  F01A         	goto	u10320
  3726   003404  EF04  F01A         	goto	u10321
  3727   003408                     u10321:
  3728   003408  EF0E  F01A         	goto	l7874
  3729   00340C                     u10320:
  3730   00340C                     
  3731                           ; BSR set to: 0
  3732   00340C  0E00               	movlw	0
  3733   00340E  6FA9               	movwf	Read_Sensors@raw_co& (0+255),b
  3734   003410  0E00               	movlw	0
  3735   003412  6FAA               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3736   003414  0E00               	movlw	0
  3737   003416  6FAB               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3738   003418  0E00               	movlw	0
  3739   00341A  6FAC               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3740   00341C                     l7874:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;newmain.c: 345:     if(raw_co > 1000) raw_co = 1000;
  3744   00341C  0E00               	movlw	0
  3745   00341E  6F60               	movwf	___flge@ff1& (0+255),b
  3746   003420  0E00               	movlw	0
  3747   003422  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3748   003424  0E7A               	movlw	122
  3749   003426  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3750   003428  0E44               	movlw	68
  3751   00342A  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3752   00342C  C0A9  F064         	movff	Read_Sensors@raw_co,___flge@ff2
  3753   003430  C0AA  F065         	movff	Read_Sensors@raw_co+1,___flge@ff2+1
  3754   003434  C0AB  F066         	movff	Read_Sensors@raw_co+2,___flge@ff2+2
  3755   003438  C0AC  F067         	movff	Read_Sensors@raw_co+3,___flge@ff2+3
  3756   00343C  EC72  F02F         	call	___flge	;wreg free
  3757   003440  0100               	movlb	0	; () banked
  3758   003442  B0D8               	btfsc	status,0,c
  3759   003444  EF26  F01A         	goto	u10331
  3760   003448  EF28  F01A         	goto	u10330
  3761   00344C                     u10331:
  3762   00344C  EF30  F01A         	goto	l7878
  3763   003450                     u10330:
  3764   003450                     
  3765                           ; BSR set to: 0
  3766   003450  0E00               	movlw	0
  3767   003452  6FA9               	movwf	Read_Sensors@raw_co& (0+255),b
  3768   003454  0E00               	movlw	0
  3769   003456  6FAA               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3770   003458  0E7A               	movlw	122
  3771   00345A  6FAB               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3772   00345C  0E44               	movlw	68
  3773   00345E  6FAC               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3774   003460                     l7878:
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;newmain.c: 348:     static float last_co = 0.0;;newmain.c: 349:     co_ppm = (raw_co * 
      +                          0.3) + (last_co * 0.7);
  3778   003460  0E9A               	movlw	154
  3779   003462  6E13               	movwf	___flmul@a^0,c
  3780   003464  0E99               	movlw	153
  3781   003466  6E14               	movwf	(___flmul@a+1)^0,c
  3782   003468  0E99               	movlw	153
  3783   00346A  6E15               	movwf	(___flmul@a+2)^0,c
  3784   00346C  0E3E               	movlw	62
  3785   00346E  6E16               	movwf	(___flmul@a+3)^0,c
  3786   003470  C0A9  F00F         	movff	Read_Sensors@raw_co,___flmul@b
  3787   003474  C0AA  F010         	movff	Read_Sensors@raw_co+1,___flmul@b+1
  3788   003478  C0AB  F011         	movff	Read_Sensors@raw_co+2,___flmul@b+2
  3789   00347C  C0AC  F012         	movff	Read_Sensors@raw_co+3,___flmul@b+3
  3790   003480  ECF6  F01F         	call	___flmul	;wreg free
  3791   003484  C00F  F041         	movff	?___flmul,___fladd@b
  3792   003488  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3793   00348C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3794   003490  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3795   003494  0E33               	movlw	51
  3796   003496  6E13               	movwf	___flmul@a^0,c
  3797   003498  0E33               	movlw	51
  3798   00349A  6E14               	movwf	(___flmul@a+1)^0,c
  3799   00349C  0E33               	movlw	51
  3800   00349E  6E15               	movwf	(___flmul@a+2)^0,c
  3801   0034A0  0E3F               	movlw	63
  3802   0034A2  6E16               	movwf	(___flmul@a+3)^0,c
  3803   0034A4  C324  F00F         	movff	Read_Sensors@last_co,___flmul@b
  3804   0034A8  C325  F010         	movff	Read_Sensors@last_co+1,___flmul@b+1
  3805   0034AC  C326  F011         	movff	Read_Sensors@last_co+2,___flmul@b+2
  3806   0034B0  C327  F012         	movff	Read_Sensors@last_co+3,___flmul@b+3
  3807   0034B4  ECF6  F01F         	call	___flmul	;wreg free
  3808   0034B8  C00F  F045         	movff	?___flmul,___fladd@a
  3809   0034BC  C010  F046         	movff	?___flmul+1,___fladd@a+1
  3810   0034C0  C011  F047         	movff	?___flmul+2,___fladd@a+2
  3811   0034C4  C012  F048         	movff	?___flmul+3,___fladd@a+3
  3812   0034C8  EC9B  F01D         	call	___fladd	;wreg free
  3813   0034CC  C041  F350         	movff	?___fladd,_co_ppm
  3814   0034D0  C042  F351         	movff	?___fladd+1,_co_ppm+1
  3815   0034D4  C043  F352         	movff	?___fladd+2,_co_ppm+2
  3816   0034D8  C044  F353         	movff	?___fladd+3,_co_ppm+3
  3817   0034DC                     
  3818                           ;newmain.c: 350:     last_co = co_ppm;
  3819   0034DC  C350  F324         	movff	_co_ppm,Read_Sensors@last_co
  3820   0034E0  C351  F325         	movff	_co_ppm+1,Read_Sensors@last_co+1
  3821   0034E4  C352  F326         	movff	_co_ppm+2,Read_Sensors@last_co+2
  3822   0034E8  C353  F327         	movff	_co_ppm+3,Read_Sensors@last_co+3
  3823   0034EC                     
  3824                           ;newmain.c: 353:     static unsigned int last_pulse = 0;;newmain.c: 354:     static unsi
      +                          gned long last_flow_time = 0;;newmain.c: 356:     if(system_millis - last_flow_time >= 1
      +                          000) {
  3825   0034EC  0103               	movlb	3	; () banked
  3826   0034EE  5120               	movf	Read_Sensors@last_flow_time& (0+255),w,b
  3827   0034F0  0102               	movlb	2	; () banked
  3828   0034F2  5DFA               	subwf	_system_millis& (0+255),w,b
  3829   0034F4  0100               	movlb	0	; () banked
  3830   0034F6  6F79               	movwf	??_Read_Sensors& (0+255),b
  3831   0034F8  0103               	movlb	3	; () banked
  3832   0034FA  5121               	movf	(Read_Sensors@last_flow_time+1)& (0+255),w,b
  3833   0034FC  0102               	movlb	2	; () banked
  3834   0034FE  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  3835   003500  0100               	movlb	0	; () banked
  3836   003502  6F7A               	movwf	(??_Read_Sensors+1)& (0+255),b
  3837   003504  0103               	movlb	3	; () banked
  3838   003506  5122               	movf	(Read_Sensors@last_flow_time+2)& (0+255),w,b
  3839   003508  0102               	movlb	2	; () banked
  3840   00350A  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  3841   00350C  0100               	movlb	0	; () banked
  3842   00350E  6F7B               	movwf	(??_Read_Sensors+2)& (0+255),b
  3843   003510  0103               	movlb	3	; () banked
  3844   003512  5123               	movf	(Read_Sensors@last_flow_time+3)& (0+255),w,b
  3845   003514  0102               	movlb	2	; () banked
  3846   003516  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  3847   003518  0100               	movlb	0	; () banked
  3848   00351A  6F7C               	movwf	(??_Read_Sensors+3)& (0+255),b
  3849   00351C  517C               	movf	(??_Read_Sensors+3)& (0+255),w,b
  3850   00351E  117B               	iorwf	(??_Read_Sensors+2)& (0+255),w,b
  3851   003520  E10B               	bnz	u10340
  3852   003522  0EE8               	movlw	232
  3853   003524  5D79               	subwf	??_Read_Sensors& (0+255),w,b
  3854   003526  0E03               	movlw	3
  3855   003528  597A               	subwfb	(??_Read_Sensors+1)& (0+255),w,b
  3856   00352A  A0D8               	btfss	status,0,c
  3857   00352C  EF9A  F01A         	goto	u10341
  3858   003530  EF9C  F01A         	goto	u10340
  3859   003534                     u10341:
  3860   003534  EF13  F01B         	goto	l230
  3861   003538                     u10340:
  3862   003538                     
  3863                           ; BSR set to: 0
  3864                           ;newmain.c: 357:         unsigned int pulses = pulse_count - last_pulse;
  3865   003538  0103               	movlb	3	; () banked
  3866   00353A  5164               	movf	Read_Sensors@last_pulse& (0+255),w,b
  3867   00353C  5D66               	subwf	_pulse_count& (0+255),w,b	;volatile
  3868   00353E  0100               	movlb	0	; () banked
  3869   003540  6F9B               	movwf	Read_Sensors@pulses& (0+255),b
  3870   003542  0103               	movlb	3	; () banked
  3871   003544  5165               	movf	(Read_Sensors@last_pulse+1)& (0+255),w,b
  3872   003546  5967               	subwfb	(_pulse_count+1)& (0+255),w,b	;volatile
  3873   003548  0100               	movlb	0	; () banked
  3874   00354A  6F9C               	movwf	(Read_Sensors@pulses+1)& (0+255),b
  3875   00354C                     
  3876                           ; BSR set to: 0
  3877                           ;newmain.c: 358:         flow_rate = (pulses / (float)450) * 60.0;
  3878   00354C  0E00               	movlw	0
  3879   00354E  6E2C               	movwf	___fldiv@a^0,c
  3880   003550  0E00               	movlw	0
  3881   003552  6E2D               	movwf	(___fldiv@a+1)^0,c
  3882   003554  0EE1               	movlw	225
  3883   003556  6E2E               	movwf	(___fldiv@a+2)^0,c
  3884   003558  0E43               	movlw	67
  3885   00355A  6E2F               	movwf	(___fldiv@a+3)^0,c
  3886   00355C  C09B  F001         	movff	Read_Sensors@pulses,___xxtofl@val
  3887   003560  C09C  F002         	movff	Read_Sensors@pulses+1,___xxtofl@val+1
  3888   003564  6A03               	clrf	(___xxtofl@val+2)^0,c
  3889   003566  6A04               	clrf	(___xxtofl@val+3)^0,c
  3890   003568  0E00               	movlw	0
  3891   00356A  ECEA  F02A         	call	___xxtofl
  3892   00356E  C001  F028         	movff	?___xxtofl,___fldiv@b
  3893   003572  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3894   003576  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3895   00357A  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3896   00357E  ECF8  F023         	call	___fldiv	;wreg free
  3897   003582  C028  F00F         	movff	?___fldiv,___flmul@b
  3898   003586  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3899   00358A  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3900   00358E  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3901   003592  0E00               	movlw	0
  3902   003594  6E13               	movwf	___flmul@a^0,c
  3903   003596  0E00               	movlw	0
  3904   003598  6E14               	movwf	(___flmul@a+1)^0,c
  3905   00359A  0E70               	movlw	112
  3906   00359C  6E15               	movwf	(___flmul@a+2)^0,c
  3907   00359E  0E42               	movlw	66
  3908   0035A0  6E16               	movwf	(___flmul@a+3)^0,c
  3909   0035A2  ECF6  F01F         	call	___flmul	;wreg free
  3910   0035A6  C00F  F34C         	movff	?___flmul,_flow_rate
  3911   0035AA  C010  F34D         	movff	?___flmul+1,_flow_rate+1
  3912   0035AE  C011  F34E         	movff	?___flmul+2,_flow_rate+2
  3913   0035B2  C012  F34F         	movff	?___flmul+3,_flow_rate+3
  3914   0035B6                     
  3915                           ;newmain.c: 359:         total_flow += flow_rate / 60.0;
  3916   0035B6  C348  F041         	movff	_total_flow,___fladd@b
  3917   0035BA  C349  F042         	movff	_total_flow+1,___fladd@b+1
  3918   0035BE  C34A  F043         	movff	_total_flow+2,___fladd@b+2
  3919   0035C2  C34B  F044         	movff	_total_flow+3,___fladd@b+3
  3920   0035C6  0E00               	movlw	0
  3921   0035C8  6E2C               	movwf	___fldiv@a^0,c
  3922   0035CA  0E00               	movlw	0
  3923   0035CC  6E2D               	movwf	(___fldiv@a+1)^0,c
  3924   0035CE  0E70               	movlw	112
  3925   0035D0  6E2E               	movwf	(___fldiv@a+2)^0,c
  3926   0035D2  0E42               	movlw	66
  3927   0035D4  6E2F               	movwf	(___fldiv@a+3)^0,c
  3928   0035D6  C34C  F028         	movff	_flow_rate,___fldiv@b
  3929   0035DA  C34D  F029         	movff	_flow_rate+1,___fldiv@b+1
  3930   0035DE  C34E  F02A         	movff	_flow_rate+2,___fldiv@b+2
  3931   0035E2  C34F  F02B         	movff	_flow_rate+3,___fldiv@b+3
  3932   0035E6  ECF8  F023         	call	___fldiv	;wreg free
  3933   0035EA  C028  F045         	movff	?___fldiv,___fladd@a
  3934   0035EE  C029  F046         	movff	?___fldiv+1,___fladd@a+1
  3935   0035F2  C02A  F047         	movff	?___fldiv+2,___fladd@a+2
  3936   0035F6  C02B  F048         	movff	?___fldiv+3,___fladd@a+3
  3937   0035FA  EC9B  F01D         	call	___fladd	;wreg free
  3938   0035FE  C041  F348         	movff	?___fladd,_total_flow
  3939   003602  C042  F349         	movff	?___fladd+1,_total_flow+1
  3940   003606  C043  F34A         	movff	?___fladd+2,_total_flow+2
  3941   00360A  C044  F34B         	movff	?___fladd+3,_total_flow+3
  3942   00360E                     
  3943                           ;newmain.c: 361:         last_pulse = pulse_count;
  3944   00360E  C366  F364         	movff	_pulse_count,Read_Sensors@last_pulse	;volatile
  3945   003612  C367  F365         	movff	_pulse_count+1,Read_Sensors@last_pulse+1	;volatile
  3946   003616                     
  3947                           ;newmain.c: 362:         last_flow_time = system_millis;
  3948   003616  C2FA  F320         	movff	_system_millis,Read_Sensors@last_flow_time
  3949   00361A  C2FB  F321         	movff	_system_millis+1,Read_Sensors@last_flow_time+1
  3950   00361E  C2FC  F322         	movff	_system_millis+2,Read_Sensors@last_flow_time+2
  3951   003622  C2FD  F323         	movff	_system_millis+3,Read_Sensors@last_flow_time+3
  3952   003626                     l230:
  3953   003626  0012               	return		;funcret
  3954   003628                     __end_of_Read_Sensors:
  3955                           	callstack 0
  3956                           
  3957 ;; *************** function _powf *****************
  3958 ;; Defined at:
  3959 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\powf.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  x               4    8[BANK0 ] float 
  3962 ;;  y               4   12[BANK0 ] float 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  s2              4  144[BANK1 ] float 
  3965 ;;  s_h             4  116[BANK1 ] struct fui
  3966 ;;  t_h             4  112[BANK1 ] struct fui
  3967 ;;  t_l             4   52[BANK1 ] float 
  3968 ;;  s_l             4   48[BANK1 ] float 
  3969 ;;  z               4  180[BANK1 ] struct fui
  3970 ;;  t               4  176[BANK1 ] struct fui
  3971 ;;  ix              4  172[BANK1 ] struct fui
  3972 ;;  j               4  168[BANK1 ] long 
  3973 ;;  k               4  164[BANK1 ] long 
  3974 ;;  p_h             4  160[BANK1 ] struct fui
  3975 ;;  is              4  152[BANK1 ] struct fui
  3976 ;;  iy              4  148[BANK1 ] long 
  3977 ;;  t1              4  140[BANK1 ] struct fui
  3978 ;;  n               4  136[BANK1 ] long 
  3979 ;;  hy              4  132[BANK1 ] struct fui
  3980 ;;  v               4  128[BANK1 ] float 
  3981 ;;  u               4  124[BANK1 ] float 
  3982 ;;  ax              4  120[BANK1 ] struct fui
  3983 ;;  p_l             4  108[BANK1 ] float 
  3984 ;;  hx              4  104[BANK1 ] struct fui
  3985 ;;  sn              4  100[BANK1 ] unsigned long 
  3986 ;;  s               4   96[BANK1 ] float 
  3987 ;;  yisint          4   84[BANK1 ] long 
  3988 ;;  r               4   80[BANK1 ] float 
  3989 ;;  w               4   68[BANK1 ] float 
  3990 ;;  y1              4   44[BANK1 ] struct fui
  3991 ;;  i               4   40[BANK1 ] long 
  3992 ;;  z_l             4   36[BANK1 ] float 
  3993 ;;  z_h             4   32[BANK1 ] float 
  3994 ;;  t2              4   28[BANK1 ] float 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  4    8[BANK0 ] float 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4004 ;;      Params:         0       8       0       0       0       0       0       0       0
  4005 ;;      Locals:         0       0     184       0       0       0       0       0       0
  4006 ;;      Temps:          0       9       0       0       0       0       0       0       0
  4007 ;;      Totals:         0      17     184       0       0       0       0       0       0
  4008 ;;Total ram usage:      201 bytes
  4009 ;; Hardware stack levels used: 1
  4010 ;; Hardware stack levels required when called: 3
  4011 ;; This function calls:
  4012 ;;		___fladd
  4013 ;;		___fldiv
  4014 ;;		___flge
  4015 ;;		___flmul
  4016 ;;		___flneg
  4017 ;;		___flsub
  4018 ;;		___xxtofl
  4019 ;;		_scalbnf
  4020 ;;		_sqrtf
  4021 ;; This function is called by:
  4022 ;;		_Read_Sensors
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text6
  4027   000012                     __ptext6:
  4028                           	callstack 0
  4029   000012                     _powf:
  4030                           	callstack 26
  4031   000012  C068  F168         	movff	powf@x,powf@hx
  4032   000016  C069  F169         	movff	powf@x+1,powf@hx+1
  4033   00001A  C06A  F16A         	movff	powf@x+2,powf@hx+2
  4034   00001E  C06B  F16B         	movff	powf@x+3,powf@hx+3
  4035   000022  C06C  F184         	movff	powf@y,powf@hy
  4036   000026  C06D  F185         	movff	powf@y+1,powf@hy+1
  4037   00002A  C06E  F186         	movff	powf@y+2,powf@hy+2
  4038   00002E  C06F  F187         	movff	powf@y+3,powf@hy+3
  4039   000032  0EFF               	movlw	255
  4040   000034  0101               	movlb	1	; () banked
  4041   000036  1568               	andwf	powf@hx& (0+255),w,b
  4042   000038  6FAC               	movwf	powf@ix& (0+255),b
  4043   00003A  0EFF               	movlw	255
  4044   00003C  1569               	andwf	(powf@hx+1)& (0+255),w,b
  4045   00003E  6FAD               	movwf	(powf@ix+1)& (0+255),b
  4046   000040  0EFF               	movlw	255
  4047   000042  156A               	andwf	(powf@hx+2)& (0+255),w,b
  4048   000044  6FAE               	movwf	(powf@ix+2)& (0+255),b
  4049   000046  0E7F               	movlw	127
  4050   000048  156B               	andwf	(powf@hx+3)& (0+255),w,b
  4051   00004A  6FAF               	movwf	(powf@ix+3)& (0+255),b
  4052   00004C  0EFF               	movlw	255
  4053   00004E  1584               	andwf	powf@hy& (0+255),w,b
  4054   000050  6F94               	movwf	powf@iy& (0+255),b
  4055   000052  0EFF               	movlw	255
  4056   000054  1585               	andwf	(powf@hy+1)& (0+255),w,b
  4057   000056  6F95               	movwf	(powf@iy+1)& (0+255),b
  4058   000058  0EFF               	movlw	255
  4059   00005A  1586               	andwf	(powf@hy+2)& (0+255),w,b
  4060   00005C  6F96               	movwf	(powf@iy+2)& (0+255),b
  4061   00005E  0E7F               	movlw	127
  4062   000060  1587               	andwf	(powf@hy+3)& (0+255),w,b
  4063   000062  6F97               	movwf	(powf@iy+3)& (0+255),b
  4064   000064  5194               	movf	powf@iy& (0+255),w,b
  4065   000066  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4066   000068  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  4067   00006A  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  4068   00006C  A4D8               	btfss	status,2,c
  4069   00006E  EF3B  F000         	goto	u9601
  4070   000072  EF3D  F000         	goto	u9600
  4071   000076                     u9601:
  4072   000076  EF48  F000         	goto	l7348
  4073   00007A                     u9600:
  4074   00007A                     
  4075                           ; BSR set to: 1
  4076   00007A  0E00               	movlw	0
  4077   00007C  0100               	movlb	0	; () banked
  4078   00007E  6F68               	movwf	?_powf& (0+255),b
  4079   000080  0E00               	movlw	0
  4080   000082  6F69               	movwf	(?_powf+1)& (0+255),b
  4081   000084  0E80               	movlw	128
  4082   000086  6F6A               	movwf	(?_powf+2)& (0+255),b
  4083   000088  0E3F               	movlw	63
  4084   00008A  6F6B               	movwf	(?_powf+3)& (0+255),b
  4085   00008C  EF63  F012         	goto	l1267
  4086   000090                     l7348:
  4087                           
  4088                           ; BSR set to: 1
  4089   000090  0E80               	movlw	128
  4090   000092  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  4091   000094  E109               	bnz	u9611
  4092   000096  0E3F               	movlw	63
  4093   000098  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  4094   00009A  1168               	iorwf	powf@hx& (0+255),w,b
  4095   00009C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  4096   00009E  A4D8               	btfss	status,2,c
  4097   0000A0  EF54  F000         	goto	u9611
  4098   0000A4  EF56  F000         	goto	u9610
  4099   0000A8                     u9611:
  4100   0000A8  EF61  F000         	goto	l7354
  4101   0000AC                     u9610:
  4102   0000AC                     
  4103                           ; BSR set to: 1
  4104   0000AC  0E00               	movlw	0
  4105   0000AE  0100               	movlb	0	; () banked
  4106   0000B0  6F68               	movwf	?_powf& (0+255),b
  4107   0000B2  0E00               	movlw	0
  4108   0000B4  6F69               	movwf	(?_powf+1)& (0+255),b
  4109   0000B6  0E80               	movlw	128
  4110   0000B8  6F6A               	movwf	(?_powf+2)& (0+255),b
  4111   0000BA  0E3F               	movlw	63
  4112   0000BC  6F6B               	movwf	(?_powf+3)& (0+255),b
  4113   0000BE  EF63  F012         	goto	l1267
  4114   0000C2                     l7354:
  4115                           
  4116                           ; BSR set to: 1
  4117   0000C2  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4118   0000C4  EF72  F000         	goto	u9620
  4119   0000C8  05AC               	decf	powf@ix& (0+255),w,b
  4120   0000CA  0E00               	movlw	0
  4121   0000CC  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4122   0000CE  0E80               	movlw	128
  4123   0000D0  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4124   0000D2  0E7F               	movlw	127
  4125   0000D4  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4126   0000D6  B0D8               	btfsc	status,0,c
  4127   0000D8  EF70  F000         	goto	u9621
  4128   0000DC  EF72  F000         	goto	u9620
  4129   0000E0                     u9621:
  4130   0000E0  EF83  F000         	goto	l7358
  4131   0000E4                     u9620:
  4132   0000E4                     
  4133                           ; BSR set to: 1
  4134   0000E4  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4135   0000E6  EF81  F000         	goto	u9631
  4136   0000EA  0594               	decf	powf@iy& (0+255),w,b
  4137   0000EC  0E00               	movlw	0
  4138   0000EE  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  4139   0000F0  0E80               	movlw	128
  4140   0000F2  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  4141   0000F4  0E7F               	movlw	127
  4142   0000F6  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4143   0000F8  A0D8               	btfss	status,0,c
  4144   0000FA  EF81  F000         	goto	u9631
  4145   0000FE  EF83  F000         	goto	u9630
  4146   000102                     u9631:
  4147   000102  EF9F  F000         	goto	l7362
  4148   000106                     u9630:
  4149   000106                     l7358:
  4150                           
  4151                           ; BSR set to: 1
  4152   000106  C068  F041         	movff	powf@x,___fladd@b
  4153   00010A  C069  F042         	movff	powf@x+1,___fladd@b+1
  4154   00010E  C06A  F043         	movff	powf@x+2,___fladd@b+2
  4155   000112  C06B  F044         	movff	powf@x+3,___fladd@b+3
  4156   000116  C06C  F045         	movff	powf@y,___fladd@a
  4157   00011A  C06D  F046         	movff	powf@y+1,___fladd@a+1
  4158   00011E  C06E  F047         	movff	powf@y+2,___fladd@a+2
  4159   000122  C06F  F048         	movff	powf@y+3,___fladd@a+3
  4160   000126  EC9B  F01D         	call	___fladd	;wreg free
  4161   00012A  C041  F068         	movff	?___fladd,?_powf
  4162   00012E  C042  F069         	movff	?___fladd+1,?_powf+1
  4163   000132  C043  F06A         	movff	?___fladd+2,?_powf+2
  4164   000136  C044  F06B         	movff	?___fladd+3,?_powf+3
  4165   00013A  EF63  F012         	goto	l1267
  4166   00013E                     l7362:
  4167                           
  4168                           ; BSR set to: 1
  4169   00013E  0E00               	movlw	0
  4170   000140  6F54               	movwf	powf@yisint& (0+255),b
  4171   000142  0E00               	movlw	0
  4172   000144  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4173   000146  0E00               	movlw	0
  4174   000148  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4175   00014A  0E00               	movlw	0
  4176   00014C  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4177   00014E                     
  4178                           ; BSR set to: 1
  4179   00014E  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4180   000150  EFAE  F000         	goto	u9640
  4181   000154  EFAC  F000         	goto	u9641
  4182   000158                     u9641:
  4183   000158  EF7A  F001         	goto	l1272
  4184   00015C                     u9640:
  4185   00015C                     
  4186                           ; BSR set to: 1
  4187   00015C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4188   00015E  EFBA  F000         	goto	u9651
  4189   000162  0E80               	movlw	128
  4190   000164  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4191   000166  0E4B               	movlw	75
  4192   000168  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4193   00016A  A0D8               	btfss	status,0,c
  4194   00016C  EFBA  F000         	goto	u9651
  4195   000170  EFBC  F000         	goto	u9650
  4196   000174                     u9651:
  4197   000174  EFC6  F000         	goto	l7370
  4198   000178                     u9650:
  4199   000178                     
  4200                           ; BSR set to: 1
  4201   000178  0E02               	movlw	2
  4202   00017A  6F54               	movwf	powf@yisint& (0+255),b
  4203   00017C  0E00               	movlw	0
  4204   00017E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4205   000180  0E00               	movlw	0
  4206   000182  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4207   000184  0E00               	movlw	0
  4208   000186  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4209   000188  EF7A  F001         	goto	l1272
  4210   00018C                     l7370:
  4211                           
  4212                           ; BSR set to: 1
  4213   00018C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4214   00018E  EFD2  F000         	goto	u9661
  4215   000192  0E80               	movlw	128
  4216   000194  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4217   000196  0E3F               	movlw	63
  4218   000198  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4219   00019A  A0D8               	btfss	status,0,c
  4220   00019C  EFD2  F000         	goto	u9661
  4221   0001A0  EFD4  F000         	goto	u9660
  4222   0001A4                     u9661:
  4223   0001A4  EF7A  F001         	goto	l1272
  4224   0001A8                     u9660:
  4225   0001A8                     
  4226                           ; BSR set to: 1
  4227   0001A8  0E17               	movlw	23
  4228   0001AA  0100               	movlb	0	; () banked
  4229   0001AC  6F70               	movwf	??_powf& (0+255),b
  4230   0001AE  C194  F071         	movff	powf@iy,??_powf+1
  4231   0001B2  C195  F072         	movff	powf@iy+1,??_powf+2
  4232   0001B6  C196  F073         	movff	powf@iy+2,??_powf+3
  4233   0001BA  C197  F074         	movff	powf@iy+3,??_powf+4
  4234   0001BE                     u9675:
  4235   0001BE  6770               	tstfsz	??_powf& (0+255),b
  4236   0001C0  EFE4  F000         	goto	u9676
  4237   0001C4  EFEC  F000         	goto	u9677
  4238   0001C8                     u9676:
  4239   0001C8  3574               	rlcf	(??_powf+4)& (0+255),w,b
  4240   0001CA  3374               	rrcf	(??_powf+4)& (0+255),f,b
  4241   0001CC  3373               	rrcf	(??_powf+3)& (0+255),f,b
  4242   0001CE  3372               	rrcf	(??_powf+2)& (0+255),f,b
  4243   0001D0  3371               	rrcf	(??_powf+1)& (0+255),f,b
  4244   0001D2  2F70               	decfsz	??_powf& (0+255),f,b
  4245   0001D4  EFDF  F000         	goto	u9675
  4246   0001D8                     u9677:
  4247   0001D8  0E81               	movlw	129
  4248   0001DA  0100               	movlb	0	; () banked
  4249   0001DC  2571               	addwf	(??_powf+1)& (0+255),w,b
  4250   0001DE  0101               	movlb	1	; () banked
  4251   0001E0  6FA4               	movwf	powf@k& (0+255),b
  4252   0001E2  0EFF               	movlw	255
  4253   0001E4  0100               	movlb	0	; () banked
  4254   0001E6  2172               	addwfc	(??_powf+2)& (0+255),w,b
  4255   0001E8  0101               	movlb	1	; () banked
  4256   0001EA  6FA5               	movwf	(powf@k+1)& (0+255),b
  4257   0001EC  0EFF               	movlw	255
  4258   0001EE  0100               	movlb	0	; () banked
  4259   0001F0  2173               	addwfc	(??_powf+3)& (0+255),w,b
  4260   0001F2  0101               	movlb	1	; () banked
  4261   0001F4  6FA6               	movwf	(powf@k+2)& (0+255),b
  4262   0001F6  0EFF               	movlw	255
  4263   0001F8  0100               	movlb	0	; () banked
  4264   0001FA  2174               	addwfc	(??_powf+4)& (0+255),w,b
  4265   0001FC  0101               	movlb	1	; () banked
  4266   0001FE  6FA7               	movwf	(powf@k+3)& (0+255),b
  4267   000200  51A4               	movf	powf@k& (0+255),w,b
  4268   000202  0817               	sublw	23
  4269   000204  0100               	movlb	0	; () banked
  4270   000206  6F70               	movwf	??_powf& (0+255),b
  4271   000208  C194  F071         	movff	powf@iy,??_powf+1
  4272   00020C  C195  F072         	movff	powf@iy+1,??_powf+2
  4273   000210  C196  F073         	movff	powf@iy+2,??_powf+3
  4274   000214  C197  F074         	movff	powf@iy+3,??_powf+4
  4275   000218                     u9685:
  4276   000218  6770               	tstfsz	??_powf& (0+255),b
  4277   00021A  EF11  F001         	goto	u9686
  4278   00021E  EF19  F001         	goto	u9687
  4279   000222                     u9686:
  4280   000222  3574               	rlcf	(??_powf+4)& (0+255),w,b
  4281   000224  3374               	rrcf	(??_powf+4)& (0+255),f,b
  4282   000226  3373               	rrcf	(??_powf+3)& (0+255),f,b
  4283   000228  3372               	rrcf	(??_powf+2)& (0+255),f,b
  4284   00022A  3371               	rrcf	(??_powf+1)& (0+255),f,b
  4285   00022C  2F70               	decfsz	??_powf& (0+255),f,b
  4286   00022E  EF0C  F001         	goto	u9685
  4287   000232                     u9687:
  4288   000232  C071  F1A8         	movff	??_powf+1,powf@j
  4289   000236  C072  F1A9         	movff	??_powf+2,powf@j+1
  4290   00023A  C073  F1AA         	movff	??_powf+3,powf@j+2
  4291   00023E  C074  F1AB         	movff	??_powf+4,powf@j+3
  4292   000242  0101               	movlb	1	; () banked
  4293   000244  51A4               	movf	powf@k& (0+255),w,b
  4294   000246  0817               	sublw	23
  4295   000248  0100               	movlb	0	; () banked
  4296   00024A  6F70               	movwf	??_powf& (0+255),b
  4297   00024C  C1A8  F071         	movff	powf@j,??_powf+1
  4298   000250  C1A9  F072         	movff	powf@j+1,??_powf+2
  4299   000254  C1AA  F073         	movff	powf@j+2,??_powf+3
  4300   000258  C1AB  F074         	movff	powf@j+3,??_powf+4
  4301   00025C  2B70               	incf	??_powf& (0+255),f,b
  4302   00025E  EF36  F001         	goto	u9690
  4303   000262                     u9695:
  4304   000262  90D8               	bcf	status,0,c
  4305   000264  3771               	rlcf	(??_powf+1)& (0+255),f,b
  4306   000266  3772               	rlcf	(??_powf+2)& (0+255),f,b
  4307   000268  3773               	rlcf	(??_powf+3)& (0+255),f,b
  4308   00026A  3774               	rlcf	(??_powf+4)& (0+255),f,b
  4309   00026C                     u9690:
  4310   00026C  2F70               	decfsz	??_powf& (0+255),f,b
  4311   00026E  EF31  F001         	goto	u9695
  4312   000272  0101               	movlb	1	; () banked
  4313   000274  5194               	movf	powf@iy& (0+255),w,b
  4314   000276  0100               	movlb	0	; () banked
  4315   000278  1971               	xorwf	(??_powf+1)& (0+255),w,b
  4316   00027A  E113               	bnz	u9701
  4317   00027C  0101               	movlb	1	; () banked
  4318   00027E  5195               	movf	(powf@iy+1)& (0+255),w,b
  4319   000280  0100               	movlb	0	; () banked
  4320   000282  1972               	xorwf	(??_powf+2)& (0+255),w,b
  4321   000284  E10E               	bnz	u9701
  4322   000286  0101               	movlb	1	; () banked
  4323   000288  5196               	movf	(powf@iy+2)& (0+255),w,b
  4324   00028A  0100               	movlb	0	; () banked
  4325   00028C  1973               	xorwf	(??_powf+3)& (0+255),w,b
  4326   00028E  E109               	bnz	u9701
  4327   000290  0101               	movlb	1	; () banked
  4328   000292  5197               	movf	(powf@iy+3)& (0+255),w,b
  4329   000294  0100               	movlb	0	; () banked
  4330   000296  1974               	xorwf	(??_powf+4)& (0+255),w,b
  4331   000298  A4D8               	btfss	status,2,c
  4332   00029A  EF51  F001         	goto	u9701
  4333   00029E  EF53  F001         	goto	u9700
  4334   0002A2                     u9701:
  4335   0002A2  EF7A  F001         	goto	l1272
  4336   0002A6                     u9700:
  4337   0002A6                     
  4338                           ; BSR set to: 0
  4339   0002A6  0E01               	movlw	1
  4340   0002A8  0101               	movlb	1	; () banked
  4341   0002AA  15A8               	andwf	powf@j& (0+255),w,b
  4342   0002AC  0100               	movlb	0	; () banked
  4343   0002AE  6F70               	movwf	??_powf& (0+255),b
  4344   0002B0  0E00               	movlw	0
  4345   0002B2  0101               	movlb	1	; () banked
  4346   0002B4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  4347   0002B6  0100               	movlb	0	; () banked
  4348   0002B8  6F71               	movwf	(??_powf+1)& (0+255),b
  4349   0002BA  0E00               	movlw	0
  4350   0002BC  0101               	movlb	1	; () banked
  4351   0002BE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  4352   0002C0  0100               	movlb	0	; () banked
  4353   0002C2  6F72               	movwf	(??_powf+2)& (0+255),b
  4354   0002C4  0E00               	movlw	0
  4355   0002C6  0101               	movlb	1	; () banked
  4356   0002C8  15AB               	andwf	(powf@j+3)& (0+255),w,b
  4357   0002CA  0100               	movlb	0	; () banked
  4358   0002CC  6F73               	movwf	(??_powf+3)& (0+255),b
  4359   0002CE  5170               	movf	??_powf& (0+255),w,b
  4360   0002D0  0802               	sublw	2
  4361   0002D2  0101               	movlb	1	; () banked
  4362   0002D4  6F54               	movwf	powf@yisint& (0+255),b
  4363   0002D6  0E00               	movlw	0
  4364   0002D8  0100               	movlb	0	; () banked
  4365   0002DA  5571               	subfwb	(??_powf+1)& (0+255),w,b
  4366   0002DC  0101               	movlb	1	; () banked
  4367   0002DE  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4368   0002E0  0E00               	movlw	0
  4369   0002E2  0100               	movlb	0	; () banked
  4370   0002E4  5572               	subfwb	(??_powf+2)& (0+255),w,b
  4371   0002E6  0101               	movlb	1	; () banked
  4372   0002E8  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4373   0002EA  0E00               	movlw	0
  4374   0002EC  0100               	movlb	0	; () banked
  4375   0002EE  5573               	subfwb	(??_powf+3)& (0+255),w,b
  4376   0002F0  0101               	movlb	1	; () banked
  4377   0002F2  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4378   0002F4                     l1272:
  4379   0002F4  0E80               	movlw	128
  4380   0002F6  0101               	movlb	1	; () banked
  4381   0002F8  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4382   0002FA  E109               	bnz	u9711
  4383   0002FC  0E7F               	movlw	127
  4384   0002FE  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4385   000300  1194               	iorwf	powf@iy& (0+255),w,b
  4386   000302  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4387   000304  A4D8               	btfss	status,2,c
  4388   000306  EF87  F001         	goto	u9711
  4389   00030A  EF89  F001         	goto	u9710
  4390   00030E                     u9711:
  4391   00030E  EFF5  F001         	goto	l7400
  4392   000312                     u9710:
  4393   000312                     
  4394                           ; BSR set to: 1
  4395   000312  0E80               	movlw	128
  4396   000314  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4397   000316  E109               	bnz	u9721
  4398   000318  0E3F               	movlw	63
  4399   00031A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4400   00031C  11AC               	iorwf	powf@ix& (0+255),w,b
  4401   00031E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4402   000320  A4D8               	btfss	status,2,c
  4403   000322  EF95  F001         	goto	u9721
  4404   000326  EF97  F001         	goto	u9720
  4405   00032A                     u9721:
  4406   00032A  EFA2  F001         	goto	l7384
  4407   00032E                     u9720:
  4408   00032E                     
  4409                           ; BSR set to: 1
  4410   00032E  0E00               	movlw	0
  4411   000330  0100               	movlb	0	; () banked
  4412   000332  6F68               	movwf	?_powf& (0+255),b
  4413   000334  0E00               	movlw	0
  4414   000336  6F69               	movwf	(?_powf+1)& (0+255),b
  4415   000338  0E80               	movlw	128
  4416   00033A  6F6A               	movwf	(?_powf+2)& (0+255),b
  4417   00033C  0E3F               	movlw	63
  4418   00033E  6F6B               	movwf	(?_powf+3)& (0+255),b
  4419   000340  EF63  F012         	goto	l1267
  4420   000344                     l7384:
  4421                           
  4422                           ; BSR set to: 1
  4423   000344  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4424   000346  EFB1  F001         	goto	u9731
  4425   00034A  05AC               	decf	powf@ix& (0+255),w,b
  4426   00034C  0E00               	movlw	0
  4427   00034E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4428   000350  0E80               	movlw	128
  4429   000352  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4430   000354  0E3F               	movlw	63
  4431   000356  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4432   000358  A0D8               	btfss	status,0,c
  4433   00035A  EFB1  F001         	goto	u9731
  4434   00035E  EFB3  F001         	goto	u9730
  4435   000362                     u9731:
  4436   000362  EFCF  F001         	goto	l7392
  4437   000366                     u9730:
  4438   000366                     
  4439                           ; BSR set to: 1
  4440   000366  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4441   000368  EFBA  F001         	goto	u9740
  4442   00036C  EFB8  F001         	goto	u9741
  4443   000370                     u9741:
  4444   000370  EFC5  F001         	goto	l1282
  4445   000374                     u9740:
  4446   000374                     
  4447                           ; BSR set to: 1
  4448   000374  0E00               	movlw	0
  4449   000376  0100               	movlb	0	; () banked
  4450   000378  6F68               	movwf	?_powf& (0+255),b
  4451   00037A  0E00               	movlw	0
  4452   00037C  6F69               	movwf	(?_powf+1)& (0+255),b
  4453   00037E  0E00               	movlw	0
  4454   000380  6F6A               	movwf	(?_powf+2)& (0+255),b
  4455   000382  0E00               	movlw	0
  4456   000384  6F6B               	movwf	(?_powf+3)& (0+255),b
  4457   000386  EF63  F012         	goto	l1267
  4458   00038A                     l1282:
  4459                           
  4460                           ; BSR set to: 1
  4461   00038A  C06C  F068         	movff	powf@y,?_powf
  4462   00038E  C06D  F069         	movff	powf@y+1,?_powf+1
  4463   000392  C06E  F06A         	movff	powf@y+2,?_powf+2
  4464   000396  C06F  F06B         	movff	powf@y+3,?_powf+3
  4465   00039A  EF63  F012         	goto	l1267
  4466   00039E                     l7392:
  4467                           
  4468                           ; BSR set to: 1
  4469   00039E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4470   0003A0  EFD6  F001         	goto	u9750
  4471   0003A4  EFD4  F001         	goto	u9751
  4472   0003A8                     u9751:
  4473   0003A8  EFEA  F001         	goto	l7396
  4474   0003AC                     u9750:
  4475   0003AC                     
  4476                           ; BSR set to: 1
  4477   0003AC  C06C  F001         	movff	powf@y,___flneg@f1
  4478   0003B0  C06D  F002         	movff	powf@y+1,___flneg@f1+1
  4479   0003B4  C06E  F003         	movff	powf@y+2,___flneg@f1+2
  4480   0003B8  C06F  F004         	movff	powf@y+3,___flneg@f1+3
  4481   0003BC  ECB9  F036         	call	___flneg	;wreg free
  4482   0003C0  C001  F068         	movff	?___flneg,?_powf
  4483   0003C4  C002  F069         	movff	?___flneg+1,?_powf+1
  4484   0003C8  C003  F06A         	movff	?___flneg+2,?_powf+2
  4485   0003CC  C004  F06B         	movff	?___flneg+3,?_powf+3
  4486   0003D0  EF63  F012         	goto	l1267
  4487   0003D4                     l7396:
  4488                           
  4489                           ; BSR set to: 1
  4490   0003D4  0E00               	movlw	0
  4491   0003D6  0100               	movlb	0	; () banked
  4492   0003D8  6F68               	movwf	?_powf& (0+255),b
  4493   0003DA  0E00               	movlw	0
  4494   0003DC  6F69               	movwf	(?_powf+1)& (0+255),b
  4495   0003DE  0E00               	movlw	0
  4496   0003E0  6F6A               	movwf	(?_powf+2)& (0+255),b
  4497   0003E2  0E00               	movlw	0
  4498   0003E4  6F6B               	movwf	(?_powf+3)& (0+255),b
  4499   0003E6  EF63  F012         	goto	l1267
  4500   0003EA                     l7400:
  4501                           
  4502                           ; BSR set to: 1
  4503   0003EA  0E80               	movlw	128
  4504   0003EC  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4505   0003EE  E109               	bnz	u9761
  4506   0003F0  0E3F               	movlw	63
  4507   0003F2  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4508   0003F4  1194               	iorwf	powf@iy& (0+255),w,b
  4509   0003F6  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4510   0003F8  A4D8               	btfss	status,2,c
  4511   0003FA  EF01  F002         	goto	u9761
  4512   0003FE  EF03  F002         	goto	u9760
  4513   000402                     u9761:
  4514   000402  EF30  F002         	goto	l7406
  4515   000406                     u9760:
  4516   000406                     
  4517                           ; BSR set to: 1
  4518   000406  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4519   000408  EF0A  F002         	goto	u9770
  4520   00040C  EF08  F002         	goto	u9771
  4521   000410                     u9771:
  4522   000410  EF26  F002         	goto	l1292
  4523   000414                     u9770:
  4524   000414                     
  4525                           ; BSR set to: 1
  4526   000414  0E00               	movlw	0
  4527   000416  6E28               	movwf	___fldiv@b^0,c
  4528   000418  0E00               	movlw	0
  4529   00041A  6E29               	movwf	(___fldiv@b+1)^0,c
  4530   00041C  0E80               	movlw	128
  4531   00041E  6E2A               	movwf	(___fldiv@b+2)^0,c
  4532   000420  0E3F               	movlw	63
  4533   000422  6E2B               	movwf	(___fldiv@b+3)^0,c
  4534   000424  C068  F02C         	movff	powf@x,___fldiv@a
  4535   000428  C069  F02D         	movff	powf@x+1,___fldiv@a+1
  4536   00042C  C06A  F02E         	movff	powf@x+2,___fldiv@a+2
  4537   000430  C06B  F02F         	movff	powf@x+3,___fldiv@a+3
  4538   000434  ECF8  F023         	call	___fldiv	;wreg free
  4539   000438  C028  F068         	movff	?___fldiv,?_powf
  4540   00043C  C029  F069         	movff	?___fldiv+1,?_powf+1
  4541   000440  C02A  F06A         	movff	?___fldiv+2,?_powf+2
  4542   000444  C02B  F06B         	movff	?___fldiv+3,?_powf+3
  4543   000448  EF63  F012         	goto	l1267
  4544   00044C                     l1292:
  4545                           
  4546                           ; BSR set to: 1
  4547   00044C  C068  F068         	movff	powf@x,?_powf
  4548   000450  C069  F069         	movff	powf@x+1,?_powf+1
  4549   000454  C06A  F06A         	movff	powf@x+2,?_powf+2
  4550   000458  C06B  F06B         	movff	powf@x+3,?_powf+3
  4551   00045C  EF63  F012         	goto	l1267
  4552   000460                     l7406:
  4553                           
  4554                           ; BSR set to: 1
  4555   000460  0E40               	movlw	64
  4556   000462  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4557   000464  1184               	iorwf	powf@hy& (0+255),w,b
  4558   000466  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4559   000468  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4560   00046A  A4D8               	btfss	status,2,c
  4561   00046C  EF3A  F002         	goto	u9781
  4562   000470  EF3C  F002         	goto	u9780
  4563   000474                     u9781:
  4564   000474  EF58  F002         	goto	l7412
  4565   000478                     u9780:
  4566   000478                     
  4567                           ; BSR set to: 1
  4568   000478  C068  F00F         	movff	powf@x,___flmul@b
  4569   00047C  C069  F010         	movff	powf@x+1,___flmul@b+1
  4570   000480  C06A  F011         	movff	powf@x+2,___flmul@b+2
  4571   000484  C06B  F012         	movff	powf@x+3,___flmul@b+3
  4572   000488  C068  F013         	movff	powf@x,___flmul@a
  4573   00048C  C069  F014         	movff	powf@x+1,___flmul@a+1
  4574   000490  C06A  F015         	movff	powf@x+2,___flmul@a+2
  4575   000494  C06B  F016         	movff	powf@x+3,___flmul@a+3
  4576   000498  ECF6  F01F         	call	___flmul	;wreg free
  4577   00049C  C00F  F068         	movff	?___flmul,?_powf
  4578   0004A0  C010  F069         	movff	?___flmul+1,?_powf+1
  4579   0004A4  C011  F06A         	movff	?___flmul+2,?_powf+2
  4580   0004A8  C012  F06B         	movff	?___flmul+3,?_powf+3
  4581   0004AC  EF63  F012         	goto	l1267
  4582   0004B0                     l7412:
  4583                           
  4584                           ; BSR set to: 1
  4585   0004B0  0E3F               	movlw	63
  4586   0004B2  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4587   0004B4  1184               	iorwf	powf@hy& (0+255),w,b
  4588   0004B6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4589   0004B8  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4590   0004BA  A4D8               	btfss	status,2,c
  4591   0004BC  EF62  F002         	goto	u9791
  4592   0004C0  EF64  F002         	goto	u9790
  4593   0004C4                     u9791:
  4594   0004C4  EF7F  F002         	goto	l1296
  4595   0004C8                     u9790:
  4596   0004C8                     
  4597                           ; BSR set to: 1
  4598   0004C8  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4599   0004CA  EF69  F002         	goto	u9801
  4600   0004CE  EF6B  F002         	goto	u9800
  4601   0004D2                     u9801:
  4602   0004D2  EF7F  F002         	goto	l1296
  4603   0004D6                     u9800:
  4604   0004D6                     
  4605                           ; BSR set to: 1
  4606   0004D6  C068  F001         	movff	powf@x,sqrtf@x
  4607   0004DA  C069  F002         	movff	powf@x+1,sqrtf@x+1
  4608   0004DE  C06A  F003         	movff	powf@x+2,sqrtf@x+2
  4609   0004E2  C06B  F004         	movff	powf@x+3,sqrtf@x+3
  4610   0004E6  EC09  F022         	call	_sqrtf	;wreg free
  4611   0004EA  C001  F068         	movff	?_sqrtf,?_powf
  4612   0004EE  C002  F069         	movff	?_sqrtf+1,?_powf+1
  4613   0004F2  C003  F06A         	movff	?_sqrtf+2,?_powf+2
  4614   0004F6  C004  F06B         	movff	?_sqrtf+3,?_powf+3
  4615   0004FA  EF63  F012         	goto	l1267
  4616   0004FE                     l1296:
  4617                           
  4618                           ; BSR set to: 1
  4619   0004FE  C1AC  F178         	movff	powf@ix,powf@ax
  4620   000502  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  4621   000506  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  4622   00050A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  4623   00050E                     
  4624                           ; BSR set to: 1
  4625   00050E  0E80               	movlw	128
  4626   000510  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4627   000512  E10B               	bnz	u9810
  4628   000514  0E7F               	movlw	127
  4629   000516  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4630   000518  11AC               	iorwf	powf@ix& (0+255),w,b
  4631   00051A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4632   00051C  B4D8               	btfsc	status,2,c
  4633   00051E  EF93  F002         	goto	u9811
  4634   000522  EF95  F002         	goto	u9810
  4635   000526                     u9811:
  4636   000526  EFAE  F002         	goto	l1300
  4637   00052A                     u9810:
  4638   00052A                     
  4639                           ; BSR set to: 1
  4640   00052A  51AC               	movf	powf@ix& (0+255),w,b
  4641   00052C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4642   00052E  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  4643   000530  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  4644   000532  B4D8               	btfsc	status,2,c
  4645   000534  EF9E  F002         	goto	u9821
  4646   000538  EFA0  F002         	goto	u9820
  4647   00053C                     u9821:
  4648   00053C  EFAE  F002         	goto	l1300
  4649   000540                     u9820:
  4650   000540                     
  4651                           ; BSR set to: 1
  4652   000540  0E80               	movlw	128
  4653   000542  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4654   000544  E109               	bnz	u9831
  4655   000546  0E3F               	movlw	63
  4656   000548  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4657   00054A  11AC               	iorwf	powf@ix& (0+255),w,b
  4658   00054C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4659   00054E  A4D8               	btfss	status,2,c
  4660   000550  EFAC  F002         	goto	u9831
  4661   000554  EFAE  F002         	goto	u9830
  4662   000558                     u9831:
  4663   000558  EF49  F003         	goto	l7444
  4664   00055C                     u9830:
  4665   00055C                     l1300:
  4666                           
  4667                           ; BSR set to: 1
  4668   00055C  C178  F1B4         	movff	powf@ax,powf@z
  4669   000560  C179  F1B5         	movff	powf@ax+1,powf@z+1
  4670   000564  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  4671   000568  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  4672   00056C                     
  4673                           ; BSR set to: 1
  4674   00056C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4675   00056E  EFBD  F002         	goto	u9840
  4676   000572  EFBB  F002         	goto	u9841
  4677   000576                     u9841:
  4678   000576  EFD7  F002         	goto	l7430
  4679   00057A                     u9840:
  4680   00057A                     
  4681                           ; BSR set to: 1
  4682   00057A  0E00               	movlw	0
  4683   00057C  6E28               	movwf	___fldiv@b^0,c
  4684   00057E  0E00               	movlw	0
  4685   000580  6E29               	movwf	(___fldiv@b+1)^0,c
  4686   000582  0E80               	movlw	128
  4687   000584  6E2A               	movwf	(___fldiv@b+2)^0,c
  4688   000586  0E3F               	movlw	63
  4689   000588  6E2B               	movwf	(___fldiv@b+3)^0,c
  4690   00058A  C1B4  F02C         	movff	powf@z,___fldiv@a
  4691   00058E  C1B5  F02D         	movff	powf@z+1,___fldiv@a+1
  4692   000592  C1B6  F02E         	movff	powf@z+2,___fldiv@a+2
  4693   000596  C1B7  F02F         	movff	powf@z+3,___fldiv@a+3
  4694   00059A  ECF8  F023         	call	___fldiv	;wreg free
  4695   00059E  C028  F1B4         	movff	?___fldiv,powf@z
  4696   0005A2  C029  F1B5         	movff	?___fldiv+1,powf@z+1
  4697   0005A6  C02A  F1B6         	movff	?___fldiv+2,powf@z+2
  4698   0005AA  C02B  F1B7         	movff	?___fldiv+3,powf@z+3
  4699   0005AE                     l7430:
  4700   0005AE  0101               	movlb	1	; () banked
  4701   0005B0  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4702   0005B2  EFDF  F002         	goto	u9850
  4703   0005B6  EFDD  F002         	goto	u9851
  4704   0005BA                     u9851:
  4705   0005BA  EF3F  F003         	goto	l7440
  4706   0005BE                     u9850:
  4707   0005BE                     
  4708                           ; BSR set to: 1
  4709   0005BE  0E00               	movlw	0
  4710   0005C0  25AC               	addwf	powf@ix& (0+255),w,b
  4711   0005C2  0100               	movlb	0	; () banked
  4712   0005C4  6F70               	movwf	??_powf& (0+255),b
  4713   0005C6  0E00               	movlw	0
  4714   0005C8  0101               	movlb	1	; () banked
  4715   0005CA  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  4716   0005CC  0100               	movlb	0	; () banked
  4717   0005CE  6F71               	movwf	(??_powf+1)& (0+255),b
  4718   0005D0  0E80               	movlw	128
  4719   0005D2  0101               	movlb	1	; () banked
  4720   0005D4  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  4721   0005D6  0100               	movlb	0	; () banked
  4722   0005D8  6F72               	movwf	(??_powf+2)& (0+255),b
  4723   0005DA  0EC0               	movlw	192
  4724   0005DC  0101               	movlb	1	; () banked
  4725   0005DE  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  4726   0005E0  0100               	movlb	0	; () banked
  4727   0005E2  6F73               	movwf	(??_powf+3)& (0+255),b
  4728   0005E4  0101               	movlb	1	; () banked
  4729   0005E6  5154               	movf	powf@yisint& (0+255),w,b
  4730   0005E8  0100               	movlb	0	; () banked
  4731   0005EA  1170               	iorwf	??_powf& (0+255),w,b
  4732   0005EC  6F74               	movwf	(??_powf+4)& (0+255),b
  4733   0005EE  0101               	movlb	1	; () banked
  4734   0005F0  5155               	movf	(powf@yisint+1)& (0+255),w,b
  4735   0005F2  0100               	movlb	0	; () banked
  4736   0005F4  1171               	iorwf	(??_powf+1)& (0+255),w,b
  4737   0005F6  6F75               	movwf	(??_powf+5)& (0+255),b
  4738   0005F8  0101               	movlb	1	; () banked
  4739   0005FA  5156               	movf	(powf@yisint+2)& (0+255),w,b
  4740   0005FC  0100               	movlb	0	; () banked
  4741   0005FE  1172               	iorwf	(??_powf+2)& (0+255),w,b
  4742   000600  6F76               	movwf	(??_powf+6)& (0+255),b
  4743   000602  0101               	movlb	1	; () banked
  4744   000604  5157               	movf	(powf@yisint+3)& (0+255),w,b
  4745   000606  0100               	movlb	0	; () banked
  4746   000608  1173               	iorwf	(??_powf+3)& (0+255),w,b
  4747   00060A  6F77               	movwf	(??_powf+7)& (0+255),b
  4748   00060C  5174               	movf	(??_powf+4)& (0+255),w,b
  4749   00060E  1175               	iorwf	(??_powf+5)& (0+255),w,b
  4750   000610  1176               	iorwf	(??_powf+6)& (0+255),w,b
  4751   000612  1177               	iorwf	(??_powf+7)& (0+255),w,b
  4752   000614  A4D8               	btfss	status,2,c
  4753   000616  EF0F  F003         	goto	u9861
  4754   00061A  EF11  F003         	goto	u9860
  4755   00061E                     u9861:
  4756   00061E  EF21  F003         	goto	l7436
  4757   000622                     u9860:
  4758   000622                     l7434:
  4759   000622  0E00               	movlw	0
  4760   000624  0103               	movlb	3	; () banked
  4761   000626  6F61               	movwf	(_errno+1)& (0+255),b
  4762   000628  0E21               	movlw	33
  4763   00062A  6F60               	movwf	_errno& (0+255),b
  4764   00062C  0EFF               	movlw	255
  4765   00062E  0101               	movlb	1	; () banked
  4766   000630  6FB4               	movwf	powf@z& (0+255),b
  4767   000632  0EFF               	movlw	255
  4768   000634  6FB5               	movwf	(powf@z+1)& (0+255),b
  4769   000636  0EFF               	movlw	255
  4770   000638  6FB6               	movwf	(powf@z+2)& (0+255),b
  4771   00063A  0E7F               	movlw	127
  4772   00063C  6FB7               	movwf	(powf@z+3)& (0+255),b
  4773   00063E  EF3F  F003         	goto	l7440
  4774   000642                     l7436:
  4775                           
  4776                           ; BSR set to: 0
  4777   000642  0101               	movlb	1	; () banked
  4778   000644  0554               	decf	powf@yisint& (0+255),w,b
  4779   000646  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4780   000648  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4781   00064A  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4782   00064C  A4D8               	btfss	status,2,c
  4783   00064E  EF2B  F003         	goto	u9871
  4784   000652  EF2D  F003         	goto	u9870
  4785   000656                     u9871:
  4786   000656  EF3F  F003         	goto	l7440
  4787   00065A                     u9870:
  4788   00065A                     
  4789                           ; BSR set to: 1
  4790   00065A  C1B4  F001         	movff	powf@z,___flneg@f1
  4791   00065E  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  4792   000662  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  4793   000666  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  4794   00066A  ECB9  F036         	call	___flneg	;wreg free
  4795   00066E  C001  F1B4         	movff	?___flneg,powf@z
  4796   000672  C002  F1B5         	movff	?___flneg+1,powf@z+1
  4797   000676  C003  F1B6         	movff	?___flneg+2,powf@z+2
  4798   00067A  C004  F1B7         	movff	?___flneg+3,powf@z+3
  4799   00067E                     l7440:
  4800   00067E  C1B4  F068         	movff	powf@z,?_powf
  4801   000682  C1B5  F069         	movff	powf@z+1,?_powf+1
  4802   000686  C1B6  F06A         	movff	powf@z+2,?_powf+2
  4803   00068A  C1B7  F06B         	movff	powf@z+3,?_powf+3
  4804   00068E  EF63  F012         	goto	l1267
  4805   000692                     l7444:
  4806                           
  4807                           ; BSR set to: 1
  4808   000692  0E00               	movlw	0
  4809   000694  6F64               	movwf	powf@sn& (0+255),b
  4810   000696  0E00               	movlw	0
  4811   000698  6F65               	movwf	(powf@sn+1)& (0+255),b
  4812   00069A  0E00               	movlw	0
  4813   00069C  6F66               	movwf	(powf@sn+2)& (0+255),b
  4814   00069E  0E00               	movlw	0
  4815   0006A0  6F67               	movwf	(powf@sn+3)& (0+255),b
  4816   0006A2                     
  4817                           ; BSR set to: 1
  4818   0006A2  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4819   0006A4  EF58  F003         	goto	u9880
  4820   0006A8  EF56  F003         	goto	u9881
  4821   0006AC                     u9881:
  4822   0006AC  EF78  F003         	goto	l7460
  4823   0006B0                     u9880:
  4824   0006B0                     
  4825                           ; BSR set to: 1
  4826   0006B0  5154               	movf	powf@yisint& (0+255),w,b
  4827   0006B2  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4828   0006B4  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4829   0006B6  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4830   0006B8  A4D8               	btfss	status,2,c
  4831   0006BA  EF61  F003         	goto	u9891
  4832   0006BE  EF63  F003         	goto	u9890
  4833   0006C2                     u9891:
  4834   0006C2  EF65  F003         	goto	l7456
  4835   0006C6                     u9890:
  4836   0006C6  EF11  F003         	goto	l7434
  4837   0006CA                     l7456:
  4838                           
  4839                           ; BSR set to: 1
  4840   0006CA  0554               	decf	powf@yisint& (0+255),w,b
  4841   0006CC  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4842   0006CE  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4843   0006D0  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4844   0006D2  A4D8               	btfss	status,2,c
  4845   0006D4  EF6E  F003         	goto	u9901
  4846   0006D8  EF70  F003         	goto	u9900
  4847   0006DC                     u9901:
  4848   0006DC  EF78  F003         	goto	l7460
  4849   0006E0                     u9900:
  4850   0006E0                     
  4851                           ; BSR set to: 1
  4852   0006E0  0E00               	movlw	0
  4853   0006E2  6F64               	movwf	powf@sn& (0+255),b
  4854   0006E4  0E00               	movlw	0
  4855   0006E6  6F65               	movwf	(powf@sn+1)& (0+255),b
  4856   0006E8  0E00               	movlw	0
  4857   0006EA  6F66               	movwf	(powf@sn+2)& (0+255),b
  4858   0006EC  0E80               	movlw	128
  4859   0006EE  6F67               	movwf	(powf@sn+3)& (0+255),b
  4860   0006F0                     l7460:
  4861                           
  4862                           ; BSR set to: 1
  4863   0006F0  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4864   0006F2  EF87  F003         	goto	u9911
  4865   0006F6  0594               	decf	powf@iy& (0+255),w,b
  4866   0006F8  0E00               	movlw	0
  4867   0006FA  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  4868   0006FC  0E00               	movlw	0
  4869   0006FE  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  4870   000700  0E4D               	movlw	77
  4871   000702  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4872   000704  A0D8               	btfss	status,0,c
  4873   000706  EF87  F003         	goto	u9911
  4874   00070A  EF89  F003         	goto	u9910
  4875   00070E                     u9911:
  4876   00070E  EF4D  F005         	goto	l7516
  4877   000712                     u9910:
  4878   000712                     
  4879                           ; BSR set to: 1
  4880   000712  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4881   000714  EF9B  F003         	goto	u9920
  4882   000718  0EF8               	movlw	248
  4883   00071A  5DAC               	subwf	powf@ix& (0+255),w,b
  4884   00071C  0EFF               	movlw	255
  4885   00071E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4886   000720  0E7F               	movlw	127
  4887   000722  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4888   000724  0E3F               	movlw	63
  4889   000726  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4890   000728  B0D8               	btfsc	status,0,c
  4891   00072A  EF99  F003         	goto	u9921
  4892   00072E  EF9B  F003         	goto	u9920
  4893   000732                     u9921:
  4894   000732  EFBC  F003         	goto	l7478
  4895   000736                     u9920:
  4896   000736                     
  4897                           ; BSR set to: 1
  4898   000736  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4899   000738  EFA2  F003         	goto	u9930
  4900   00073C  EFA0  F003         	goto	u9931
  4901   000740                     u9931:
  4902   000740  EFB1  F003         	goto	l7474
  4903   000744                     u9930:
  4904   000744                     l7466:
  4905   000744  0E00               	movlw	0
  4906   000746  0101               	movlb	1	; () banked
  4907   000748  1164               	iorwf	powf@sn& (0+255),w,b
  4908   00074A  6FB4               	movwf	powf@z& (0+255),b
  4909   00074C  0E00               	movlw	0
  4910   00074E  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  4911   000750  6FB5               	movwf	(powf@z+1)& (0+255),b
  4912   000752  0E80               	movlw	128
  4913   000754  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  4914   000756  6FB6               	movwf	(powf@z+2)& (0+255),b
  4915   000758  0E7F               	movlw	127
  4916   00075A  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  4917   00075C  6FB7               	movwf	(powf@z+3)& (0+255),b
  4918   00075E  EF3F  F003         	goto	l7440
  4919   000762                     l7474:
  4920                           
  4921                           ; BSR set to: 1
  4922   000762  0E00               	movlw	0
  4923   000764  0100               	movlb	0	; () banked
  4924   000766  6F68               	movwf	?_powf& (0+255),b
  4925   000768  0E00               	movlw	0
  4926   00076A  6F69               	movwf	(?_powf+1)& (0+255),b
  4927   00076C  0E00               	movlw	0
  4928   00076E  6F6A               	movwf	(?_powf+2)& (0+255),b
  4929   000770  0E00               	movlw	0
  4930   000772  6F6B               	movwf	(?_powf+3)& (0+255),b
  4931   000774  EF63  F012         	goto	l1267
  4932   000778                     l7478:
  4933                           
  4934                           ; BSR set to: 1
  4935   000778  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4936   00077A  EFCC  F003         	goto	u9941
  4937   00077E  0E08               	movlw	8
  4938   000780  5DAC               	subwf	powf@ix& (0+255),w,b
  4939   000782  0E00               	movlw	0
  4940   000784  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4941   000786  0E80               	movlw	128
  4942   000788  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4943   00078A  0E3F               	movlw	63
  4944   00078C  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4945   00078E  A0D8               	btfss	status,0,c
  4946   000790  EFCC  F003         	goto	u9941
  4947   000794  EFCE  F003         	goto	u9940
  4948   000798                     u9941:
  4949   000798  EFEA  F003         	goto	l7494
  4950   00079C                     u9940:
  4951   00079C                     
  4952                           ; BSR set to: 1
  4953   00079C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4954   00079E  EFDB  F003         	goto	u9951
  4955   0007A2  5187               	movf	(powf@hy+3)& (0+255),w,b
  4956   0007A4  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4957   0007A6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4958   0007A8  E108               	bnz	u9950
  4959   0007AA  0584               	decf	powf@hy& (0+255),w,b
  4960   0007AC  A0D8               	btfss	status,0,c
  4961   0007AE  EFDB  F003         	goto	u9951
  4962   0007B2  EFDD  F003         	goto	u9950
  4963   0007B6                     u9951:
  4964   0007B6  EFDF  F003         	goto	l7490
  4965   0007BA                     u9950:
  4966   0007BA  EFA2  F003         	goto	l7466
  4967   0007BE                     l7490:
  4968                           
  4969                           ; BSR set to: 1
  4970   0007BE  0E00               	movlw	0
  4971   0007C0  0100               	movlb	0	; () banked
  4972   0007C2  6F68               	movwf	?_powf& (0+255),b
  4973   0007C4  0E00               	movlw	0
  4974   0007C6  6F69               	movwf	(?_powf+1)& (0+255),b
  4975   0007C8  0E00               	movlw	0
  4976   0007CA  6F6A               	movwf	(?_powf+2)& (0+255),b
  4977   0007CC  0E00               	movlw	0
  4978   0007CE  6F6B               	movwf	(?_powf+3)& (0+255),b
  4979   0007D0  EF63  F012         	goto	l1267
  4980   0007D4                     l7494:
  4981                           
  4982                           ; BSR set to: 1
  4983   0007D4  C178  F041         	movff	powf@ax,___fladd@b
  4984   0007D8  C179  F042         	movff	powf@ax+1,___fladd@b+1
  4985   0007DC  C17A  F043         	movff	powf@ax+2,___fladd@b+2
  4986   0007E0  C17B  F044         	movff	powf@ax+3,___fladd@b+3
  4987   0007E4  0E00               	movlw	0
  4988   0007E6  6E45               	movwf	___fladd@a^0,c
  4989   0007E8  0E00               	movlw	0
  4990   0007EA  6E46               	movwf	(___fladd@a+1)^0,c
  4991   0007EC  0E80               	movlw	128
  4992   0007EE  6E47               	movwf	(___fladd@a+2)^0,c
  4993   0007F0  0EBF               	movlw	191
  4994   0007F2  6E48               	movwf	(___fladd@a+3)^0,c
  4995   0007F4  EC9B  F01D         	call	___fladd	;wreg free
  4996   0007F8  C041  F1B0         	movff	?___fladd,powf@t
  4997   0007FC  C042  F1B1         	movff	?___fladd+1,powf@t+1
  4998   000800  C043  F1B2         	movff	?___fladd+2,powf@t+2
  4999   000804  C044  F1B3         	movff	?___fladd+3,powf@t+3
  5000   000808  0E00               	movlw	0
  5001   00080A  6E13               	movwf	___flmul@a^0,c
  5002   00080C  0E00               	movlw	0
  5003   00080E  6E14               	movwf	(___flmul@a+1)^0,c
  5004   000810  0E80               	movlw	128
  5005   000812  6E15               	movwf	(___flmul@a+2)^0,c
  5006   000814  0E3E               	movlw	62
  5007   000816  6E16               	movwf	(___flmul@a+3)^0,c
  5008   000818  C1B0  F00F         	movff	powf@t,___flmul@b
  5009   00081C  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5010   000820  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5011   000824  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5012   000828  ECF6  F01F         	call	___flmul	;wreg free
  5013   00082C  C00F  F055         	movff	?___flmul,___flsub@a
  5014   000830  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5015   000834  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5016   000838  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5017   00083C  0EAB               	movlw	171
  5018   00083E  6E51               	movwf	___flsub@b^0,c
  5019   000840  0EAA               	movlw	170
  5020   000842  6E52               	movwf	(___flsub@b+1)^0,c
  5021   000844  0EAA               	movlw	170
  5022   000846  6E53               	movwf	(___flsub@b+2)^0,c
  5023   000848  0E3E               	movlw	62
  5024   00084A  6E54               	movwf	(___flsub@b+3)^0,c
  5025   00084C  EC1C  F036         	call	___flsub	;wreg free
  5026   000850  C051  F148         	movff	?___flsub,_powf$1838
  5027   000854  C052  F149         	movff	?___flsub+1,_powf$1838+1
  5028   000858  C053  F14A         	movff	?___flsub+2,_powf$1838+2
  5029   00085C  C054  F14B         	movff	?___flsub+3,_powf$1838+3
  5030   000860  C1B0  F013         	movff	powf@t,___flmul@a
  5031   000864  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  5032   000868  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  5033   00086C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  5034   000870  C1B0  F00F         	movff	powf@t,___flmul@b
  5035   000874  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5036   000878  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5037   00087C  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5038   000880  ECF6  F01F         	call	___flmul	;wreg free
  5039   000884  C00F  F158         	movff	?___flmul,_powf$1839
  5040   000888  C010  F159         	movff	?___flmul+1,_powf$1839+1
  5041   00088C  C011  F15A         	movff	?___flmul+2,_powf$1839+2
  5042   000890  C012  F15B         	movff	?___flmul+3,_powf$1839+3
  5043   000894  C1B0  F013         	movff	powf@t,___flmul@a
  5044   000898  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  5045   00089C  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  5046   0008A0  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  5047   0008A4  C148  F00F         	movff	_powf$1838,___flmul@b
  5048   0008A8  C149  F010         	movff	_powf$1838+1,___flmul@b+1
  5049   0008AC  C14A  F011         	movff	_powf$1838+2,___flmul@b+2
  5050   0008B0  C14B  F012         	movff	_powf$1838+3,___flmul@b+3
  5051   0008B4  ECF6  F01F         	call	___flmul	;wreg free
  5052   0008B8  C00F  F055         	movff	?___flmul,___flsub@a
  5053   0008BC  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5054   0008C0  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5055   0008C4  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5056   0008C8  0E00               	movlw	0
  5057   0008CA  6E51               	movwf	___flsub@b^0,c
  5058   0008CC  0E00               	movlw	0
  5059   0008CE  6E52               	movwf	(___flsub@b+1)^0,c
  5060   0008D0  0E00               	movlw	0
  5061   0008D2  6E53               	movwf	(___flsub@b+2)^0,c
  5062   0008D4  0E3F               	movlw	63
  5063   0008D6  6E54               	movwf	(___flsub@b+3)^0,c
  5064   0008D8  EC1C  F036         	call	___flsub	;wreg free
  5065   0008DC  C051  F14C         	movff	?___flsub,_powf$1840
  5066   0008E0  C052  F14D         	movff	?___flsub+1,_powf$1840+1
  5067   0008E4  C053  F14E         	movff	?___flsub+2,_powf$1840+2
  5068   0008E8  C054  F14F         	movff	?___flsub+3,_powf$1840+3
  5069   0008EC  C158  F00F         	movff	_powf$1839,___flmul@b
  5070   0008F0  C159  F010         	movff	_powf$1839+1,___flmul@b+1
  5071   0008F4  C15A  F011         	movff	_powf$1839+2,___flmul@b+2
  5072   0008F8  C15B  F012         	movff	_powf$1839+3,___flmul@b+3
  5073   0008FC  C14C  F013         	movff	_powf$1840,___flmul@a
  5074   000900  C14D  F014         	movff	_powf$1840+1,___flmul@a+1
  5075   000904  C14E  F015         	movff	_powf$1840+2,___flmul@a+2
  5076   000908  C14F  F016         	movff	_powf$1840+3,___flmul@a+3
  5077   00090C  ECF6  F01F         	call	___flmul	;wreg free
  5078   000910  C00F  F144         	movff	?___flmul,powf@w
  5079   000914  C010  F145         	movff	?___flmul+1,powf@w+1
  5080   000918  C011  F146         	movff	?___flmul+2,powf@w+2
  5081   00091C  C012  F147         	movff	?___flmul+3,powf@w+3
  5082   000920  C1B0  F00F         	movff	powf@t,___flmul@b
  5083   000924  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5084   000928  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5085   00092C  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5086   000930  0E00               	movlw	0
  5087   000932  6E13               	movwf	___flmul@a^0,c
  5088   000934  0EAA               	movlw	170
  5089   000936  6E14               	movwf	(___flmul@a+1)^0,c
  5090   000938  0EB8               	movlw	184
  5091   00093A  6E15               	movwf	(___flmul@a+2)^0,c
  5092   00093C  0E3F               	movlw	63
  5093   00093E  6E16               	movwf	(___flmul@a+3)^0,c
  5094   000940  ECF6  F01F         	call	___flmul	;wreg free
  5095   000944  C00F  F17C         	movff	?___flmul,powf@u
  5096   000948  C010  F17D         	movff	?___flmul+1,powf@u+1
  5097   00094C  C011  F17E         	movff	?___flmul+2,powf@u+2
  5098   000950  C012  F17F         	movff	?___flmul+3,powf@u+3
  5099   000954  0E70               	movlw	112
  5100   000956  6E13               	movwf	___flmul@a^0,c
  5101   000958  0EA5               	movlw	165
  5102   00095A  6E14               	movwf	(___flmul@a+1)^0,c
  5103   00095C  0EEC               	movlw	236
  5104   00095E  6E15               	movwf	(___flmul@a+2)^0,c
  5105   000960  0E36               	movlw	54
  5106   000962  6E16               	movwf	(___flmul@a+3)^0,c
  5107   000964  C1B0  F00F         	movff	powf@t,___flmul@b
  5108   000968  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5109   00096C  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5110   000970  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5111   000974  ECF6  F01F         	call	___flmul	;wreg free
  5112   000978  C00F  F051         	movff	?___flmul,___flsub@b
  5113   00097C  C010  F052         	movff	?___flmul+1,___flsub@b+1
  5114   000980  C011  F053         	movff	?___flmul+2,___flsub@b+2
  5115   000984  C012  F054         	movff	?___flmul+3,___flsub@b+3
  5116   000988  0E3B               	movlw	59
  5117   00098A  6E13               	movwf	___flmul@a^0,c
  5118   00098C  0EAA               	movlw	170
  5119   00098E  6E14               	movwf	(___flmul@a+1)^0,c
  5120   000990  0EB8               	movlw	184
  5121   000992  6E15               	movwf	(___flmul@a+2)^0,c
  5122   000994  0E3F               	movlw	63
  5123   000996  6E16               	movwf	(___flmul@a+3)^0,c
  5124   000998  C144  F00F         	movff	powf@w,___flmul@b
  5125   00099C  C145  F010         	movff	powf@w+1,___flmul@b+1
  5126   0009A0  C146  F011         	movff	powf@w+2,___flmul@b+2
  5127   0009A4  C147  F012         	movff	powf@w+3,___flmul@b+3
  5128   0009A8  ECF6  F01F         	call	___flmul	;wreg free
  5129   0009AC  C00F  F055         	movff	?___flmul,___flsub@a
  5130   0009B0  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5131   0009B4  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5132   0009B8  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5133   0009BC  EC1C  F036         	call	___flsub	;wreg free
  5134   0009C0  C051  F180         	movff	?___flsub,powf@v
  5135   0009C4  C052  F181         	movff	?___flsub+1,powf@v+1
  5136   0009C8  C053  F182         	movff	?___flsub+2,powf@v+2
  5137   0009CC  C054  F183         	movff	?___flsub+3,powf@v+3
  5138   0009D0  C17C  F041         	movff	powf@u,___fladd@b
  5139   0009D4  C17D  F042         	movff	powf@u+1,___fladd@b+1
  5140   0009D8  C17E  F043         	movff	powf@u+2,___fladd@b+2
  5141   0009DC  C17F  F044         	movff	powf@u+3,___fladd@b+3
  5142   0009E0  C180  F045         	movff	powf@v,___fladd@a
  5143   0009E4  C181  F046         	movff	powf@v+1,___fladd@a+1
  5144   0009E8  C182  F047         	movff	powf@v+2,___fladd@a+2
  5145   0009EC  C183  F048         	movff	powf@v+3,___fladd@a+3
  5146   0009F0  EC9B  F01D         	call	___fladd	;wreg free
  5147   0009F4  C041  F18C         	movff	?___fladd,powf@t1
  5148   0009F8  C042  F18D         	movff	?___fladd+1,powf@t1+1
  5149   0009FC  C043  F18E         	movff	?___fladd+2,powf@t1+2
  5150   000A00  C044  F18F         	movff	?___fladd+3,powf@t1+3
  5151   000A04  C18C  F198         	movff	powf@t1,powf@is
  5152   000A08  C18D  F199         	movff	powf@t1+1,powf@is+1
  5153   000A0C  C18E  F19A         	movff	powf@t1+2,powf@is+2
  5154   000A10  C18F  F19B         	movff	powf@t1+3,powf@is+3
  5155   000A14  0E00               	movlw	0
  5156   000A16  0101               	movlb	1	; () banked
  5157   000A18  1598               	andwf	powf@is& (0+255),w,b
  5158   000A1A  6F8C               	movwf	powf@t1& (0+255),b
  5159   000A1C  0EF0               	movlw	240
  5160   000A1E  1599               	andwf	(powf@is+1)& (0+255),w,b
  5161   000A20  6F8D               	movwf	(powf@t1+1)& (0+255),b
  5162   000A22  0EFF               	movlw	255
  5163   000A24  159A               	andwf	(powf@is+2)& (0+255),w,b
  5164   000A26  6F8E               	movwf	(powf@t1+2)& (0+255),b
  5165   000A28  0EFF               	movlw	255
  5166   000A2A  159B               	andwf	(powf@is+3)& (0+255),w,b
  5167   000A2C  6F8F               	movwf	(powf@t1+3)& (0+255),b
  5168   000A2E                     
  5169                           ; BSR set to: 1
  5170   000A2E  C17C  F055         	movff	powf@u,___flsub@a
  5171   000A32  C17D  F056         	movff	powf@u+1,___flsub@a+1
  5172   000A36  C17E  F057         	movff	powf@u+2,___flsub@a+2
  5173   000A3A  C17F  F058         	movff	powf@u+3,___flsub@a+3
  5174   000A3E  C18C  F051         	movff	powf@t1,___flsub@b
  5175   000A42  C18D  F052         	movff	powf@t1+1,___flsub@b+1
  5176   000A46  C18E  F053         	movff	powf@t1+2,___flsub@b+2
  5177   000A4A  C18F  F054         	movff	powf@t1+3,___flsub@b+3
  5178   000A4E  EC1C  F036         	call	___flsub	;wreg free
  5179   000A52  C051  F19C         	movff	?___flsub,_powf$1841
  5180   000A56  C052  F19D         	movff	?___flsub+1,_powf$1841+1
  5181   000A5A  C053  F19E         	movff	?___flsub+2,_powf$1841+2
  5182   000A5E  C054  F19F         	movff	?___flsub+3,_powf$1841+3
  5183   000A62  C180  F051         	movff	powf@v,___flsub@b
  5184   000A66  C181  F052         	movff	powf@v+1,___flsub@b+1
  5185   000A6A  C182  F053         	movff	powf@v+2,___flsub@b+2
  5186   000A6E  C183  F054         	movff	powf@v+3,___flsub@b+3
  5187   000A72  C19C  F055         	movff	_powf$1841,___flsub@a
  5188   000A76  C19D  F056         	movff	_powf$1841+1,___flsub@a+1
  5189   000A7A  C19E  F057         	movff	_powf$1841+2,___flsub@a+2
  5190   000A7E  C19F  F058         	movff	_powf$1841+3,___flsub@a+3
  5191   000A82  EC1C  F036         	call	___flsub	;wreg free
  5192   000A86  C051  F11C         	movff	?___flsub,powf@t2
  5193   000A8A  C052  F11D         	movff	?___flsub+1,powf@t2+1
  5194   000A8E  C053  F11E         	movff	?___flsub+2,powf@t2+2
  5195   000A92  C054  F11F         	movff	?___flsub+3,powf@t2+3
  5196   000A96  EF5B  F00C         	goto	l7644
  5197   000A9A                     l7516:
  5198                           
  5199                           ; BSR set to: 1
  5200   000A9A  0E00               	movlw	0
  5201   000A9C  6F88               	movwf	powf@n& (0+255),b
  5202   000A9E  0E00               	movlw	0
  5203   000AA0  6F89               	movwf	(powf@n+1)& (0+255),b
  5204   000AA2  0E00               	movlw	0
  5205   000AA4  6F8A               	movwf	(powf@n+2)& (0+255),b
  5206   000AA6  0E00               	movlw	0
  5207   000AA8  6F8B               	movwf	(powf@n+3)& (0+255),b
  5208   000AAA                     
  5209                           ; BSR set to: 1
  5210   000AAA  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  5211   000AAC  EF63  F005         	goto	u9960
  5212   000AB0  51AF               	movf	(powf@ix+3)& (0+255),w,b
  5213   000AB2  E107               	bnz	u9961
  5214   000AB4  0E80               	movlw	128
  5215   000AB6  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  5216   000AB8  B0D8               	btfsc	status,0,c
  5217   000ABA  EF61  F005         	goto	u9961
  5218   000ABE  EF63  F005         	goto	u9960
  5219   000AC2                     u9961:
  5220   000AC2  EF8E  F005         	goto	l7526
  5221   000AC6                     u9960:
  5222   000AC6                     
  5223                           ; BSR set to: 1
  5224   000AC6  C178  F00F         	movff	powf@ax,___flmul@b
  5225   000ACA  C179  F010         	movff	powf@ax+1,___flmul@b+1
  5226   000ACE  C17A  F011         	movff	powf@ax+2,___flmul@b+2
  5227   000AD2  C17B  F012         	movff	powf@ax+3,___flmul@b+3
  5228   000AD6  0E00               	movlw	0
  5229   000AD8  6E13               	movwf	___flmul@a^0,c
  5230   000ADA  0E00               	movlw	0
  5231   000ADC  6E14               	movwf	(___flmul@a+1)^0,c
  5232   000ADE  0E80               	movlw	128
  5233   000AE0  6E15               	movwf	(___flmul@a+2)^0,c
  5234   000AE2  0E4B               	movlw	75
  5235   000AE4  6E16               	movwf	(___flmul@a+3)^0,c
  5236   000AE6  ECF6  F01F         	call	___flmul	;wreg free
  5237   000AEA  C00F  F178         	movff	?___flmul,powf@ax
  5238   000AEE  C010  F179         	movff	?___flmul+1,powf@ax+1
  5239   000AF2  C011  F17A         	movff	?___flmul+2,powf@ax+2
  5240   000AF6  C012  F17B         	movff	?___flmul+3,powf@ax+3
  5241   000AFA  0EE8               	movlw	232
  5242   000AFC  0101               	movlb	1	; () banked
  5243   000AFE  2788               	addwf	powf@n& (0+255),f,b
  5244   000B00  0EFF               	movlw	255
  5245   000B02  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5246   000B04  0EFF               	movlw	255
  5247   000B06  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5248   000B08  0EFF               	movlw	255
  5249   000B0A  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5250   000B0C                     
  5251                           ; BSR set to: 1
  5252   000B0C  C178  F1AC         	movff	powf@ax,powf@ix
  5253   000B10  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  5254   000B14  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  5255   000B18  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  5256   000B1C                     l7526:
  5257                           
  5258                           ; BSR set to: 1
  5259   000B1C  0E17               	movlw	23
  5260   000B1E  0100               	movlb	0	; () banked
  5261   000B20  6F70               	movwf	??_powf& (0+255),b
  5262   000B22  C1AC  F071         	movff	powf@ix,??_powf+1
  5263   000B26  C1AD  F072         	movff	powf@ix+1,??_powf+2
  5264   000B2A  C1AE  F073         	movff	powf@ix+2,??_powf+3
  5265   000B2E  C1AF  F074         	movff	powf@ix+3,??_powf+4
  5266   000B32                     u9975:
  5267   000B32  6770               	tstfsz	??_powf& (0+255),b
  5268   000B34  EF9E  F005         	goto	u9976
  5269   000B38  EFA6  F005         	goto	u9977
  5270   000B3C                     u9976:
  5271   000B3C  3574               	rlcf	(??_powf+4)& (0+255),w,b
  5272   000B3E  3374               	rrcf	(??_powf+4)& (0+255),f,b
  5273   000B40  3373               	rrcf	(??_powf+3)& (0+255),f,b
  5274   000B42  3372               	rrcf	(??_powf+2)& (0+255),f,b
  5275   000B44  3371               	rrcf	(??_powf+1)& (0+255),f,b
  5276   000B46  2F70               	decfsz	??_powf& (0+255),f,b
  5277   000B48  EF99  F005         	goto	u9975
  5278   000B4C                     u9977:
  5279   000B4C  0E81               	movlw	129
  5280   000B4E  0100               	movlb	0	; () banked
  5281   000B50  2571               	addwf	(??_powf+1)& (0+255),w,b
  5282   000B52  6F75               	movwf	(??_powf+5)& (0+255),b
  5283   000B54  0EFF               	movlw	255
  5284   000B56  2172               	addwfc	(??_powf+2)& (0+255),w,b
  5285   000B58  6F76               	movwf	(??_powf+6)& (0+255),b
  5286   000B5A  0EFF               	movlw	255
  5287   000B5C  2173               	addwfc	(??_powf+3)& (0+255),w,b
  5288   000B5E  6F77               	movwf	(??_powf+7)& (0+255),b
  5289   000B60  0EFF               	movlw	255
  5290   000B62  2174               	addwfc	(??_powf+4)& (0+255),w,b
  5291   000B64  6F78               	movwf	(??_powf+8)& (0+255),b
  5292   000B66  5175               	movf	(??_powf+5)& (0+255),w,b
  5293   000B68  0101               	movlb	1	; () banked
  5294   000B6A  2788               	addwf	powf@n& (0+255),f,b
  5295   000B6C  0100               	movlb	0	; () banked
  5296   000B6E  5176               	movf	(??_powf+6)& (0+255),w,b
  5297   000B70  0101               	movlb	1	; () banked
  5298   000B72  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5299   000B74  0100               	movlb	0	; () banked
  5300   000B76  5177               	movf	(??_powf+7)& (0+255),w,b
  5301   000B78  0101               	movlb	1	; () banked
  5302   000B7A  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5303   000B7C  0100               	movlb	0	; () banked
  5304   000B7E  5178               	movf	(??_powf+8)& (0+255),w,b
  5305   000B80  0101               	movlb	1	; () banked
  5306   000B82  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5307   000B84                     
  5308                           ; BSR set to: 1
  5309   000B84  0EFF               	movlw	255
  5310   000B86  15AC               	andwf	powf@ix& (0+255),w,b
  5311   000B88  6FA8               	movwf	powf@j& (0+255),b
  5312   000B8A  0EFF               	movlw	255
  5313   000B8C  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  5314   000B8E  6FA9               	movwf	(powf@j+1)& (0+255),b
  5315   000B90  0E7F               	movlw	127
  5316   000B92  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  5317   000B94  6FAA               	movwf	(powf@j+2)& (0+255),b
  5318   000B96  0E00               	movlw	0
  5319   000B98  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  5320   000B9A  6FAB               	movwf	(powf@j+3)& (0+255),b
  5321   000B9C                     
  5322                           ; BSR set to: 1
  5323   000B9C  0E00               	movlw	0
  5324   000B9E  6FA4               	movwf	powf@k& (0+255),b
  5325   000BA0  0E00               	movlw	0
  5326   000BA2  6FA5               	movwf	(powf@k+1)& (0+255),b
  5327   000BA4  0E00               	movlw	0
  5328   000BA6  6FA6               	movwf	(powf@k+2)& (0+255),b
  5329   000BA8  0E00               	movlw	0
  5330   000BAA  6FA7               	movwf	(powf@k+3)& (0+255),b
  5331   000BAC                     
  5332                           ; BSR set to: 1
  5333   000BAC  0E00               	movlw	0
  5334   000BAE  11A8               	iorwf	powf@j& (0+255),w,b
  5335   000BB0  6FAC               	movwf	powf@ix& (0+255),b
  5336   000BB2  0E00               	movlw	0
  5337   000BB4  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  5338   000BB6  6FAD               	movwf	(powf@ix+1)& (0+255),b
  5339   000BB8  0E80               	movlw	128
  5340   000BBA  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  5341   000BBC  6FAE               	movwf	(powf@ix+2)& (0+255),b
  5342   000BBE  0E3F               	movlw	63
  5343   000BC0  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  5344   000BC2  6FAF               	movwf	(powf@ix+3)& (0+255),b
  5345   000BC4                     
  5346                           ; BSR set to: 1
  5347   000BC4  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5348   000BC6  EFF4  F005         	goto	u9980
  5349   000BCA  51AB               	movf	(powf@j+3)& (0+255),w,b
  5350   000BCC  E10B               	bnz	u9981
  5351   000BCE  0E72               	movlw	114
  5352   000BD0  5DA8               	subwf	powf@j& (0+255),w,b
  5353   000BD2  0EC4               	movlw	196
  5354   000BD4  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5355   000BD6  0E1C               	movlw	28
  5356   000BD8  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5357   000BDA  B0D8               	btfsc	status,0,c
  5358   000BDC  EFF2  F005         	goto	u9981
  5359   000BE0  EFF4  F005         	goto	u9980
  5360   000BE4                     u9981:
  5361   000BE4  EFF6  F005         	goto	l7538
  5362   000BE8                     u9980:
  5363   000BE8  EF20  F006         	goto	l7544
  5364   000BEC                     l7538:
  5365                           
  5366                           ; BSR set to: 1
  5367   000BEC  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5368   000BEE  EF08  F006         	goto	u9990
  5369   000BF2  51AB               	movf	(powf@j+3)& (0+255),w,b
  5370   000BF4  E10B               	bnz	u9991
  5371   000BF6  0ED7               	movlw	215
  5372   000BF8  5DA8               	subwf	powf@j& (0+255),w,b
  5373   000BFA  0EB3               	movlw	179
  5374   000BFC  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5375   000BFE  0E5D               	movlw	93
  5376   000C00  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5377   000C02  B0D8               	btfsc	status,0,c
  5378   000C04  EF06  F006         	goto	u9991
  5379   000C08  EF08  F006         	goto	u9990
  5380   000C0C                     u9991:
  5381   000C0C  EF12  F006         	goto	l7542
  5382   000C10                     u9990:
  5383   000C10                     
  5384                           ; BSR set to: 1
  5385   000C10  0E01               	movlw	1
  5386   000C12  6FA4               	movwf	powf@k& (0+255),b
  5387   000C14  0E00               	movlw	0
  5388   000C16  6FA5               	movwf	(powf@k+1)& (0+255),b
  5389   000C18  0E00               	movlw	0
  5390   000C1A  6FA6               	movwf	(powf@k+2)& (0+255),b
  5391   000C1C  0E00               	movlw	0
  5392   000C1E  6FA7               	movwf	(powf@k+3)& (0+255),b
  5393   000C20  EF20  F006         	goto	l7544
  5394   000C24                     l7542:
  5395                           
  5396                           ; BSR set to: 1
  5397   000C24  0E01               	movlw	1
  5398   000C26  2788               	addwf	powf@n& (0+255),f,b
  5399   000C28  0E00               	movlw	0
  5400   000C2A  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5401   000C2C  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5402   000C2E  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5403   000C30  0E00               	movlw	0
  5404   000C32  27AC               	addwf	powf@ix& (0+255),f,b
  5405   000C34  0E00               	movlw	0
  5406   000C36  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  5407   000C38  0E80               	movlw	128
  5408   000C3A  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  5409   000C3C  0EFF               	movlw	255
  5410   000C3E  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  5411   000C40                     l7544:
  5412                           
  5413                           ; BSR set to: 1
  5414   000C40  C1AC  F178         	movff	powf@ix,powf@ax
  5415   000C44  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  5416   000C48  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  5417   000C4C  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  5418   000C50                     
  5419                           ; BSR set to: 1
  5420   000C50  C178  F051         	movff	powf@ax,___flsub@b
  5421   000C54  C179  F052         	movff	powf@ax+1,___flsub@b+1
  5422   000C58  C17A  F053         	movff	powf@ax+2,___flsub@b+2
  5423   000C5C  C17B  F054         	movff	powf@ax+3,___flsub@b+3
  5424   000C60  C1A4  F070         	movff	powf@k,??_powf
  5425   000C64  C1A5  F071         	movff	powf@k+1,??_powf+1
  5426   000C68  0100               	movlb	0	; () banked
  5427   000C6A  90D8               	bcf	status,0,c
  5428   000C6C  3770               	rlcf	??_powf& (0+255),f,b
  5429   000C6E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5430   000C70  90D8               	bcf	status,0,c
  5431   000C72  3770               	rlcf	??_powf& (0+255),f,b
  5432   000C74  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5433   000C76  0E6D               	movlw	low _bp
  5434   000C78  2570               	addwf	??_powf& (0+255),w,b
  5435   000C7A  6EF6               	movwf	tblptrl,c
  5436   000C7C  0E7E               	movlw	high _bp
  5437   000C7E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5438   000C80  6EF7               	movwf	tblptrh,c
  5439   000C82                     	if	0	;There are less than 3 active tblptr bytes
  5440   000C82                     	endif
  5441   000C82  0009               	tblrd		*+
  5442   000C84  CFF5 F055          	movff	tablat,___flsub@a
  5443   000C88  0009               	tblrd		*+
  5444   000C8A  CFF5 F056          	movff	tablat,___flsub@a+1
  5445   000C8E  0009               	tblrd		*+
  5446   000C90  CFF5 F057          	movff	tablat,___flsub@a+2
  5447   000C94  000A               	tblrd		*-
  5448   000C96  CFF5 F058          	movff	tablat,___flsub@a+3
  5449   000C9A  EC1C  F036         	call	___flsub	;wreg free
  5450   000C9E  C051  F17C         	movff	?___flsub,powf@u
  5451   000CA2  C052  F17D         	movff	?___flsub+1,powf@u+1
  5452   000CA6  C053  F17E         	movff	?___flsub+2,powf@u+2
  5453   000CAA  C054  F17F         	movff	?___flsub+3,powf@u+3
  5454   000CAE  0E00               	movlw	0
  5455   000CB0  6E28               	movwf	___fldiv@b^0,c
  5456   000CB2  0E00               	movlw	0
  5457   000CB4  6E29               	movwf	(___fldiv@b+1)^0,c
  5458   000CB6  0E80               	movlw	128
  5459   000CB8  6E2A               	movwf	(___fldiv@b+2)^0,c
  5460   000CBA  0E3F               	movlw	63
  5461   000CBC  6E2B               	movwf	(___fldiv@b+3)^0,c
  5462   000CBE  C178  F045         	movff	powf@ax,___fladd@a
  5463   000CC2  C179  F046         	movff	powf@ax+1,___fladd@a+1
  5464   000CC6  C17A  F047         	movff	powf@ax+2,___fladd@a+2
  5465   000CCA  C17B  F048         	movff	powf@ax+3,___fladd@a+3
  5466   000CCE  C1A4  F070         	movff	powf@k,??_powf
  5467   000CD2  C1A5  F071         	movff	powf@k+1,??_powf+1
  5468   000CD6  0100               	movlb	0	; () banked
  5469   000CD8  90D8               	bcf	status,0,c
  5470   000CDA  3770               	rlcf	??_powf& (0+255),f,b
  5471   000CDC  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5472   000CDE  90D8               	bcf	status,0,c
  5473   000CE0  3770               	rlcf	??_powf& (0+255),f,b
  5474   000CE2  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5475   000CE4  0E6D               	movlw	low _bp
  5476   000CE6  2570               	addwf	??_powf& (0+255),w,b
  5477   000CE8  6EF6               	movwf	tblptrl,c
  5478   000CEA  0E7E               	movlw	high _bp
  5479   000CEC  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5480   000CEE  6EF7               	movwf	tblptrh,c
  5481   000CF0                     	if	0	;There are less than 3 active tblptr bytes
  5482   000CF0                     	endif
  5483   000CF0  0009               	tblrd		*+
  5484   000CF2  CFF5 F041          	movff	tablat,___fladd@b
  5485   000CF6  0009               	tblrd		*+
  5486   000CF8  CFF5 F042          	movff	tablat,___fladd@b+1
  5487   000CFC  0009               	tblrd		*+
  5488   000CFE  CFF5 F043          	movff	tablat,___fladd@b+2
  5489   000D02  000A               	tblrd		*-
  5490   000D04  CFF5 F044          	movff	tablat,___fladd@b+3
  5491   000D08  EC9B  F01D         	call	___fladd	;wreg free
  5492   000D0C  C041  F02C         	movff	?___fladd,___fldiv@a
  5493   000D10  C042  F02D         	movff	?___fladd+1,___fldiv@a+1
  5494   000D14  C043  F02E         	movff	?___fladd+2,___fldiv@a+2
  5495   000D18  C044  F02F         	movff	?___fladd+3,___fldiv@a+3
  5496   000D1C  ECF8  F023         	call	___fldiv	;wreg free
  5497   000D20  C028  F180         	movff	?___fldiv,powf@v
  5498   000D24  C029  F181         	movff	?___fldiv+1,powf@v+1
  5499   000D28  C02A  F182         	movff	?___fldiv+2,powf@v+2
  5500   000D2C  C02B  F183         	movff	?___fldiv+3,powf@v+3
  5501   000D30  C17C  F00F         	movff	powf@u,___flmul@b
  5502   000D34  C17D  F010         	movff	powf@u+1,___flmul@b+1
  5503   000D38  C17E  F011         	movff	powf@u+2,___flmul@b+2
  5504   000D3C  C17F  F012         	movff	powf@u+3,___flmul@b+3
  5505   000D40  C180  F013         	movff	powf@v,___flmul@a
  5506   000D44  C181  F014         	movff	powf@v+1,___flmul@a+1
  5507   000D48  C182  F015         	movff	powf@v+2,___flmul@a+2
  5508   000D4C  C183  F016         	movff	powf@v+3,___flmul@a+3
  5509   000D50  ECF6  F01F         	call	___flmul	;wreg free
  5510   000D54  C00F  F160         	movff	?___flmul,powf@s
  5511   000D58  C010  F161         	movff	?___flmul+1,powf@s+1
  5512   000D5C  C011  F162         	movff	?___flmul+2,powf@s+2
  5513   000D60  C012  F163         	movff	?___flmul+3,powf@s+3
  5514   000D64  C160  F174         	movff	powf@s,powf@s_h
  5515   000D68  C161  F175         	movff	powf@s+1,powf@s_h+1
  5516   000D6C  C162  F176         	movff	powf@s+2,powf@s_h+2
  5517   000D70  C163  F177         	movff	powf@s+3,powf@s_h+3
  5518   000D74  C174  F198         	movff	powf@s_h,powf@is
  5519   000D78  C175  F199         	movff	powf@s_h+1,powf@is+1
  5520   000D7C  C176  F19A         	movff	powf@s_h+2,powf@is+2
  5521   000D80  C177  F19B         	movff	powf@s_h+3,powf@is+3
  5522   000D84  0E00               	movlw	0
  5523   000D86  0101               	movlb	1	; () banked
  5524   000D88  1598               	andwf	powf@is& (0+255),w,b
  5525   000D8A  6F74               	movwf	powf@s_h& (0+255),b
  5526   000D8C  0EF0               	movlw	240
  5527   000D8E  1599               	andwf	(powf@is+1)& (0+255),w,b
  5528   000D90  6F75               	movwf	(powf@s_h+1)& (0+255),b
  5529   000D92  0EFF               	movlw	255
  5530   000D94  159A               	andwf	(powf@is+2)& (0+255),w,b
  5531   000D96  6F76               	movwf	(powf@s_h+2)& (0+255),b
  5532   000D98  0EFF               	movlw	255
  5533   000D9A  159B               	andwf	(powf@is+3)& (0+255),w,b
  5534   000D9C  6F77               	movwf	(powf@s_h+3)& (0+255),b
  5535   000D9E                     
  5536                           ; BSR set to: 1
  5537   000D9E  C1AC  F070         	movff	powf@ix,??_powf
  5538   000DA2  C1AD  F071         	movff	powf@ix+1,??_powf+1
  5539   000DA6  C1AE  F072         	movff	powf@ix+2,??_powf+2
  5540   000DAA  C1AF  F073         	movff	powf@ix+3,??_powf+3
  5541   000DAE  0100               	movlb	0	; () banked
  5542   000DB0  3573               	rlcf	(??_powf+3)& (0+255),w,b
  5543   000DB2  3373               	rrcf	(??_powf+3)& (0+255),f,b
  5544   000DB4  3372               	rrcf	(??_powf+2)& (0+255),f,b
  5545   000DB6  3371               	rrcf	(??_powf+1)& (0+255),f,b
  5546   000DB8  3370               	rrcf	??_powf& (0+255),f,b
  5547   000DBA  0E00               	movlw	0
  5548   000DBC  1570               	andwf	??_powf& (0+255),w,b
  5549   000DBE  6F74               	movwf	(??_powf+4)& (0+255),b
  5550   000DC0  0EF0               	movlw	240
  5551   000DC2  1571               	andwf	(??_powf+1)& (0+255),w,b
  5552   000DC4  6F75               	movwf	(??_powf+5)& (0+255),b
  5553   000DC6  0EFF               	movlw	255
  5554   000DC8  1572               	andwf	(??_powf+2)& (0+255),w,b
  5555   000DCA  6F76               	movwf	(??_powf+6)& (0+255),b
  5556   000DCC  0EFF               	movlw	255
  5557   000DCE  1573               	andwf	(??_powf+3)& (0+255),w,b
  5558   000DD0  6F77               	movwf	(??_powf+7)& (0+255),b
  5559   000DD2  0E00               	movlw	0
  5560   000DD4  1174               	iorwf	(??_powf+4)& (0+255),w,b
  5561   000DD6  0101               	movlb	1	; () banked
  5562   000DD8  6F98               	movwf	powf@is& (0+255),b
  5563   000DDA  0E00               	movlw	0
  5564   000DDC  0100               	movlb	0	; () banked
  5565   000DDE  1175               	iorwf	(??_powf+5)& (0+255),w,b
  5566   000DE0  0101               	movlb	1	; () banked
  5567   000DE2  6F99               	movwf	(powf@is+1)& (0+255),b
  5568   000DE4  0E00               	movlw	0
  5569   000DE6  0100               	movlb	0	; () banked
  5570   000DE8  1176               	iorwf	(??_powf+6)& (0+255),w,b
  5571   000DEA  0101               	movlb	1	; () banked
  5572   000DEC  6F9A               	movwf	(powf@is+2)& (0+255),b
  5573   000DEE  0E20               	movlw	32
  5574   000DF0  0100               	movlb	0	; () banked
  5575   000DF2  1177               	iorwf	(??_powf+7)& (0+255),w,b
  5576   000DF4  0101               	movlb	1	; () banked
  5577   000DF6  6F9B               	movwf	(powf@is+3)& (0+255),b
  5578   000DF8                     
  5579                           ; BSR set to: 1
  5580   000DF8  C1A4  F070         	movff	powf@k,??_powf
  5581   000DFC  C1A5  F071         	movff	powf@k+1,??_powf+1
  5582   000E00  C1A6  F072         	movff	powf@k+2,??_powf+2
  5583   000E04  C1A7  F073         	movff	powf@k+3,??_powf+3
  5584   000E08  0E15               	movlw	21
  5585   000E0A                     u10005:
  5586   000E0A  90D8               	bcf	status,0,c
  5587   000E0C  0100               	movlb	0	; () banked
  5588   000E0E  3770               	rlcf	??_powf& (0+255),f,b
  5589   000E10  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5590   000E12  3772               	rlcf	(??_powf+2)& (0+255),f,b
  5591   000E14  3773               	rlcf	(??_powf+3)& (0+255),f,b
  5592   000E16  2EE8               	decfsz	wreg,f,c
  5593   000E18  EF05  F007         	goto	u10005
  5594   000E1C  0101               	movlb	1	; () banked
  5595   000E1E  5198               	movf	powf@is& (0+255),w,b
  5596   000E20  0100               	movlb	0	; () banked
  5597   000E22  2570               	addwf	??_powf& (0+255),w,b
  5598   000E24  6F74               	movwf	(??_powf+4)& (0+255),b
  5599   000E26  0101               	movlb	1	; () banked
  5600   000E28  5199               	movf	(powf@is+1)& (0+255),w,b
  5601   000E2A  0100               	movlb	0	; () banked
  5602   000E2C  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5603   000E2E  6F75               	movwf	(??_powf+5)& (0+255),b
  5604   000E30  0101               	movlb	1	; () banked
  5605   000E32  519A               	movf	(powf@is+2)& (0+255),w,b
  5606   000E34  0100               	movlb	0	; () banked
  5607   000E36  2172               	addwfc	(??_powf+2)& (0+255),w,b
  5608   000E38  6F76               	movwf	(??_powf+6)& (0+255),b
  5609   000E3A  0101               	movlb	1	; () banked
  5610   000E3C  519B               	movf	(powf@is+3)& (0+255),w,b
  5611   000E3E  0100               	movlb	0	; () banked
  5612   000E40  2173               	addwfc	(??_powf+3)& (0+255),w,b
  5613   000E42  6F77               	movwf	(??_powf+7)& (0+255),b
  5614   000E44  0E00               	movlw	0
  5615   000E46  2574               	addwf	(??_powf+4)& (0+255),w,b
  5616   000E48  0101               	movlb	1	; () banked
  5617   000E4A  6F70               	movwf	powf@t_h& (0+255),b
  5618   000E4C  0E00               	movlw	0
  5619   000E4E  0100               	movlb	0	; () banked
  5620   000E50  2175               	addwfc	(??_powf+5)& (0+255),w,b
  5621   000E52  0101               	movlb	1	; () banked
  5622   000E54  6F71               	movwf	(powf@t_h+1)& (0+255),b
  5623   000E56  0E40               	movlw	64
  5624   000E58  0100               	movlb	0	; () banked
  5625   000E5A  2176               	addwfc	(??_powf+6)& (0+255),w,b
  5626   000E5C  0101               	movlb	1	; () banked
  5627   000E5E  6F72               	movwf	(powf@t_h+2)& (0+255),b
  5628   000E60  0E00               	movlw	0
  5629   000E62  0100               	movlb	0	; () banked
  5630   000E64  2177               	addwfc	(??_powf+7)& (0+255),w,b
  5631   000E66  0101               	movlb	1	; () banked
  5632   000E68  6F73               	movwf	(powf@t_h+3)& (0+255),b
  5633   000E6A                     
  5634                           ; BSR set to: 1
  5635   000E6A  C1A4  F070         	movff	powf@k,??_powf
  5636   000E6E  C1A5  F071         	movff	powf@k+1,??_powf+1
  5637   000E72  0100               	movlb	0	; () banked
  5638   000E74  90D8               	bcf	status,0,c
  5639   000E76  3770               	rlcf	??_powf& (0+255),f,b
  5640   000E78  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5641   000E7A  90D8               	bcf	status,0,c
  5642   000E7C  3770               	rlcf	??_powf& (0+255),f,b
  5643   000E7E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5644   000E80  0E6D               	movlw	low _bp
  5645   000E82  2570               	addwf	??_powf& (0+255),w,b
  5646   000E84  6EF6               	movwf	tblptrl,c
  5647   000E86  0E7E               	movlw	high _bp
  5648   000E88  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5649   000E8A  6EF7               	movwf	tblptrh,c
  5650   000E8C                     	if	0	;There are less than 3 active tblptr bytes
  5651   000E8C                     	endif
  5652   000E8C  0009               	tblrd		*+
  5653   000E8E  CFF5 F055          	movff	tablat,___flsub@a
  5654   000E92  0009               	tblrd		*+
  5655   000E94  CFF5 F056          	movff	tablat,___flsub@a+1
  5656   000E98  0009               	tblrd		*+
  5657   000E9A  CFF5 F057          	movff	tablat,___flsub@a+2
  5658   000E9E  000A               	tblrd		*-
  5659   000EA0  CFF5 F058          	movff	tablat,___flsub@a+3
  5660   000EA4  C170  F051         	movff	powf@t_h,___flsub@b
  5661   000EA8  C171  F052         	movff	powf@t_h+1,___flsub@b+1
  5662   000EAC  C172  F053         	movff	powf@t_h+2,___flsub@b+2
  5663   000EB0  C173  F054         	movff	powf@t_h+3,___flsub@b+3
  5664   000EB4  EC1C  F036         	call	___flsub	;wreg free
  5665   000EB8  C051  F19C         	movff	?___flsub,_powf$1841
  5666   000EBC  C052  F19D         	movff	?___flsub+1,_powf$1841+1
  5667   000EC0  C053  F19E         	movff	?___flsub+2,_powf$1841+2
  5668   000EC4  C054  F19F         	movff	?___flsub+3,_powf$1841+3
  5669   000EC8  C178  F051         	movff	powf@ax,___flsub@b
  5670   000ECC  C179  F052         	movff	powf@ax+1,___flsub@b+1
  5671   000ED0  C17A  F053         	movff	powf@ax+2,___flsub@b+2
  5672   000ED4  C17B  F054         	movff	powf@ax+3,___flsub@b+3
  5673   000ED8  C19C  F055         	movff	_powf$1841,___flsub@a
  5674   000EDC  C19D  F056         	movff	_powf$1841+1,___flsub@a+1
  5675   000EE0  C19E  F057         	movff	_powf$1841+2,___flsub@a+2
  5676   000EE4  C19F  F058         	movff	_powf$1841+3,___flsub@a+3
  5677   000EE8  EC1C  F036         	call	___flsub	;wreg free
  5678   000EEC  C051  F134         	movff	?___flsub,powf@t_l
  5679   000EF0  C052  F135         	movff	?___flsub+1,powf@t_l+1
  5680   000EF4  C053  F136         	movff	?___flsub+2,powf@t_l+2
  5681   000EF8  C054  F137         	movff	?___flsub+3,powf@t_l+3
  5682   000EFC  C170  F013         	movff	powf@t_h,___flmul@a
  5683   000F00  C171  F014         	movff	powf@t_h+1,___flmul@a+1
  5684   000F04  C172  F015         	movff	powf@t_h+2,___flmul@a+2
  5685   000F08  C173  F016         	movff	powf@t_h+3,___flmul@a+3
  5686   000F0C  C174  F00F         	movff	powf@s_h,___flmul@b
  5687   000F10  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5688   000F14  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5689   000F18  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5690   000F1C  ECF6  F01F         	call	___flmul	;wreg free
  5691   000F20  C00F  F055         	movff	?___flmul,___flsub@a
  5692   000F24  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5693   000F28  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5694   000F2C  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5695   000F30  C17C  F051         	movff	powf@u,___flsub@b
  5696   000F34  C17D  F052         	movff	powf@u+1,___flsub@b+1
  5697   000F38  C17E  F053         	movff	powf@u+2,___flsub@b+2
  5698   000F3C  C17F  F054         	movff	powf@u+3,___flsub@b+3
  5699   000F40  EC1C  F036         	call	___flsub	;wreg free
  5700   000F44  C051  F19C         	movff	?___flsub,_powf$1841
  5701   000F48  C052  F19D         	movff	?___flsub+1,_powf$1841+1
  5702   000F4C  C053  F19E         	movff	?___flsub+2,_powf$1841+2
  5703   000F50  C054  F19F         	movff	?___flsub+3,_powf$1841+3
  5704   000F54  C134  F013         	movff	powf@t_l,___flmul@a
  5705   000F58  C135  F014         	movff	powf@t_l+1,___flmul@a+1
  5706   000F5C  C136  F015         	movff	powf@t_l+2,___flmul@a+2
  5707   000F60  C137  F016         	movff	powf@t_l+3,___flmul@a+3
  5708   000F64  C174  F00F         	movff	powf@s_h,___flmul@b
  5709   000F68  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5710   000F6C  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5711   000F70  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5712   000F74  ECF6  F01F         	call	___flmul	;wreg free
  5713   000F78  C00F  F055         	movff	?___flmul,___flsub@a
  5714   000F7C  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5715   000F80  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5716   000F84  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5717   000F88  C19C  F051         	movff	_powf$1841,___flsub@b
  5718   000F8C  C19D  F052         	movff	_powf$1841+1,___flsub@b+1
  5719   000F90  C19E  F053         	movff	_powf$1841+2,___flsub@b+2
  5720   000F94  C19F  F054         	movff	_powf$1841+3,___flsub@b+3
  5721   000F98  EC1C  F036         	call	___flsub	;wreg free
  5722   000F9C  C051  F158         	movff	?___flsub,_powf$1839
  5723   000FA0  C052  F159         	movff	?___flsub+1,_powf$1839+1
  5724   000FA4  C053  F15A         	movff	?___flsub+2,_powf$1839+2
  5725   000FA8  C054  F15B         	movff	?___flsub+3,_powf$1839+3
  5726   000FAC  C158  F00F         	movff	_powf$1839,___flmul@b
  5727   000FB0  C159  F010         	movff	_powf$1839+1,___flmul@b+1
  5728   000FB4  C15A  F011         	movff	_powf$1839+2,___flmul@b+2
  5729   000FB8  C15B  F012         	movff	_powf$1839+3,___flmul@b+3
  5730   000FBC  C180  F013         	movff	powf@v,___flmul@a
  5731   000FC0  C181  F014         	movff	powf@v+1,___flmul@a+1
  5732   000FC4  C182  F015         	movff	powf@v+2,___flmul@a+2
  5733   000FC8  C183  F016         	movff	powf@v+3,___flmul@a+3
  5734   000FCC  ECF6  F01F         	call	___flmul	;wreg free
  5735   000FD0  C00F  F130         	movff	?___flmul,powf@s_l
  5736   000FD4  C010  F131         	movff	?___flmul+1,powf@s_l+1
  5737   000FD8  C011  F132         	movff	?___flmul+2,powf@s_l+2
  5738   000FDC  C012  F133         	movff	?___flmul+3,powf@s_l+3
  5739   000FE0  C160  F00F         	movff	powf@s,___flmul@b
  5740   000FE4  C161  F010         	movff	powf@s+1,___flmul@b+1
  5741   000FE8  C162  F011         	movff	powf@s+2,___flmul@b+2
  5742   000FEC  C163  F012         	movff	powf@s+3,___flmul@b+3
  5743   000FF0  C160  F013         	movff	powf@s,___flmul@a
  5744   000FF4  C161  F014         	movff	powf@s+1,___flmul@a+1
  5745   000FF8  C162  F015         	movff	powf@s+2,___flmul@a+2
  5746   000FFC  C163  F016         	movff	powf@s+3,___flmul@a+3
  5747   001000  ECF6  F01F         	call	___flmul	;wreg free
  5748   001004  C00F  F190         	movff	?___flmul,powf@s2
  5749   001008  C010  F191         	movff	?___flmul+1,powf@s2+1
  5750   00100C  C011  F192         	movff	?___flmul+2,powf@s2+2
  5751   001010  C012  F193         	movff	?___flmul+3,powf@s2+3
  5752   001014  0E55               	movlw	85
  5753   001016  6E45               	movwf	___fladd@a^0,c
  5754   001018  0E32               	movlw	50
  5755   00101A  6E46               	movwf	(___fladd@a+1)^0,c
  5756   00101C  0E6C               	movlw	108
  5757   00101E  6E47               	movwf	(___fladd@a+2)^0,c
  5758   001020  0E3E               	movlw	62
  5759   001022  6E48               	movwf	(___fladd@a+3)^0,c
  5760   001024  0E42               	movlw	66
  5761   001026  6E13               	movwf	___flmul@a^0,c
  5762   001028  0EF1               	movlw	241
  5763   00102A  6E14               	movwf	(___flmul@a+1)^0,c
  5764   00102C  0E53               	movlw	83
  5765   00102E  6E15               	movwf	(___flmul@a+2)^0,c
  5766   001030  0E3E               	movlw	62
  5767   001032  6E16               	movwf	(___flmul@a+3)^0,c
  5768   001034  C190  F00F         	movff	powf@s2,___flmul@b
  5769   001038  C191  F010         	movff	powf@s2+1,___flmul@b+1
  5770   00103C  C192  F011         	movff	powf@s2+2,___flmul@b+2
  5771   001040  C193  F012         	movff	powf@s2+3,___flmul@b+3
  5772   001044  ECF6  F01F         	call	___flmul	;wreg free
  5773   001048  C00F  F041         	movff	?___flmul,___fladd@b
  5774   00104C  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5775   001050  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5776   001054  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5777   001058  EC9B  F01D         	call	___fladd	;wreg free
  5778   00105C  C041  F148         	movff	?___fladd,_powf$1838
  5779   001060  C042  F149         	movff	?___fladd+1,_powf$1838+1
  5780   001064  C043  F14A         	movff	?___fladd+2,_powf$1838+2
  5781   001068  C044  F14B         	movff	?___fladd+3,_powf$1838+3
  5782   00106C  0E05               	movlw	5
  5783   00106E  6E45               	movwf	___fladd@a^0,c
  5784   001070  0EA3               	movlw	163
  5785   001072  6E46               	movwf	(___fladd@a+1)^0,c
  5786   001074  0E8B               	movlw	139
  5787   001076  6E47               	movwf	(___fladd@a+2)^0,c
  5788   001078  0E3E               	movlw	62
  5789   00107A  6E48               	movwf	(___fladd@a+3)^0,c
  5790   00107C  C190  F013         	movff	powf@s2,___flmul@a
  5791   001080  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5792   001084  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5793   001088  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5794   00108C  C148  F00F         	movff	_powf$1838,___flmul@b
  5795   001090  C149  F010         	movff	_powf$1838+1,___flmul@b+1
  5796   001094  C14A  F011         	movff	_powf$1838+2,___flmul@b+2
  5797   001098  C14B  F012         	movff	_powf$1838+3,___flmul@b+3
  5798   00109C  ECF6  F01F         	call	___flmul	;wreg free
  5799   0010A0  C00F  F041         	movff	?___flmul,___fladd@b
  5800   0010A4  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5801   0010A8  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5802   0010AC  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5803   0010B0  EC9B  F01D         	call	___fladd	;wreg free
  5804   0010B4  C041  F158         	movff	?___fladd,_powf$1839
  5805   0010B8  C042  F159         	movff	?___fladd+1,_powf$1839+1
  5806   0010BC  C043  F15A         	movff	?___fladd+2,_powf$1839+2
  5807   0010C0  C044  F15B         	movff	?___fladd+3,_powf$1839+3
  5808   0010C4  0EAB               	movlw	171
  5809   0010C6  6E45               	movwf	___fladd@a^0,c
  5810   0010C8  0EAA               	movlw	170
  5811   0010CA  6E46               	movwf	(___fladd@a+1)^0,c
  5812   0010CC  0EAA               	movlw	170
  5813   0010CE  6E47               	movwf	(___fladd@a+2)^0,c
  5814   0010D0  0E3E               	movlw	62
  5815   0010D2  6E48               	movwf	(___fladd@a+3)^0,c
  5816   0010D4  C190  F013         	movff	powf@s2,___flmul@a
  5817   0010D8  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5818   0010DC  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5819   0010E0  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5820   0010E4  C158  F00F         	movff	_powf$1839,___flmul@b
  5821   0010E8  C159  F010         	movff	_powf$1839+1,___flmul@b+1
  5822   0010EC  C15A  F011         	movff	_powf$1839+2,___flmul@b+2
  5823   0010F0  C15B  F012         	movff	_powf$1839+3,___flmul@b+3
  5824   0010F4  ECF6  F01F         	call	___flmul	;wreg free
  5825   0010F8  C00F  F041         	movff	?___flmul,___fladd@b
  5826   0010FC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5827   001100  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5828   001104  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5829   001108  EC9B  F01D         	call	___fladd	;wreg free
  5830   00110C  C041  F14C         	movff	?___fladd,_powf$1840
  5831   001110  C042  F14D         	movff	?___fladd+1,_powf$1840+1
  5832   001114  C043  F14E         	movff	?___fladd+2,_powf$1840+2
  5833   001118  C044  F14F         	movff	?___fladd+3,_powf$1840+3
  5834   00111C  0EB7               	movlw	183
  5835   00111E  6E45               	movwf	___fladd@a^0,c
  5836   001120  0E6D               	movlw	109
  5837   001122  6E46               	movwf	(___fladd@a+1)^0,c
  5838   001124  0EDB               	movlw	219
  5839   001126  6E47               	movwf	(___fladd@a+2)^0,c
  5840   001128  0E3E               	movlw	62
  5841   00112A  6E48               	movwf	(___fladd@a+3)^0,c
  5842   00112C  C190  F013         	movff	powf@s2,___flmul@a
  5843   001130  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5844   001134  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5845   001138  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5846   00113C  C14C  F00F         	movff	_powf$1840,___flmul@b
  5847   001140  C14D  F010         	movff	_powf$1840+1,___flmul@b+1
  5848   001144  C14E  F011         	movff	_powf$1840+2,___flmul@b+2
  5849   001148  C14F  F012         	movff	_powf$1840+3,___flmul@b+3
  5850   00114C  ECF6  F01F         	call	___flmul	;wreg free
  5851   001150  C00F  F041         	movff	?___flmul,___fladd@b
  5852   001154  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5853   001158  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5854   00115C  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5855   001160  EC9B  F01D         	call	___fladd	;wreg free
  5856   001164  C041  F138         	movff	?___fladd,_powf$1842
  5857   001168  C042  F139         	movff	?___fladd+1,_powf$1842+1
  5858   00116C  C043  F13A         	movff	?___fladd+2,_powf$1842+2
  5859   001170  C044  F13B         	movff	?___fladd+3,_powf$1842+3
  5860   001174  0E9A               	movlw	154
  5861   001176  6E45               	movwf	___fladd@a^0,c
  5862   001178  0E99               	movlw	153
  5863   00117A  6E46               	movwf	(___fladd@a+1)^0,c
  5864   00117C  0E19               	movlw	25
  5865   00117E  6E47               	movwf	(___fladd@a+2)^0,c
  5866   001180  0E3F               	movlw	63
  5867   001182  6E48               	movwf	(___fladd@a+3)^0,c
  5868   001184  C190  F013         	movff	powf@s2,___flmul@a
  5869   001188  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5870   00118C  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5871   001190  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5872   001194  C138  F00F         	movff	_powf$1842,___flmul@b
  5873   001198  C139  F010         	movff	_powf$1842+1,___flmul@b+1
  5874   00119C  C13A  F011         	movff	_powf$1842+2,___flmul@b+2
  5875   0011A0  C13B  F012         	movff	_powf$1842+3,___flmul@b+3
  5876   0011A4  ECF6  F01F         	call	___flmul	;wreg free
  5877   0011A8  C00F  F041         	movff	?___flmul,___fladd@b
  5878   0011AC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5879   0011B0  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5880   0011B4  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5881   0011B8  EC9B  F01D         	call	___fladd	;wreg free
  5882   0011BC  C041  F100         	movff	?___fladd,_powf$1843
  5883   0011C0  C042  F101         	movff	?___fladd+1,_powf$1843+1
  5884   0011C4  C043  F102         	movff	?___fladd+2,_powf$1843+2
  5885   0011C8  C044  F103         	movff	?___fladd+3,_powf$1843+3
  5886   0011CC  C190  F013         	movff	powf@s2,___flmul@a
  5887   0011D0  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5888   0011D4  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5889   0011D8  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5890   0011DC  C190  F00F         	movff	powf@s2,___flmul@b
  5891   0011E0  C191  F010         	movff	powf@s2+1,___flmul@b+1
  5892   0011E4  C192  F011         	movff	powf@s2+2,___flmul@b+2
  5893   0011E8  C193  F012         	movff	powf@s2+3,___flmul@b+3
  5894   0011EC  ECF6  F01F         	call	___flmul	;wreg free
  5895   0011F0  C00F  F104         	movff	?___flmul,_powf$1844
  5896   0011F4  C010  F105         	movff	?___flmul+1,_powf$1844+1
  5897   0011F8  C011  F106         	movff	?___flmul+2,_powf$1844+2
  5898   0011FC  C012  F107         	movff	?___flmul+3,_powf$1844+3
  5899   001200  C100  F00F         	movff	_powf$1843,___flmul@b
  5900   001204  C101  F010         	movff	_powf$1843+1,___flmul@b+1
  5901   001208  C102  F011         	movff	_powf$1843+2,___flmul@b+2
  5902   00120C  C103  F012         	movff	_powf$1843+3,___flmul@b+3
  5903   001210  C104  F013         	movff	_powf$1844,___flmul@a
  5904   001214  C105  F014         	movff	_powf$1844+1,___flmul@a+1
  5905   001218  C106  F015         	movff	_powf$1844+2,___flmul@a+2
  5906   00121C  C107  F016         	movff	_powf$1844+3,___flmul@a+3
  5907   001220  ECF6  F01F         	call	___flmul	;wreg free
  5908   001224  C00F  F150         	movff	?___flmul,powf@r
  5909   001228  C010  F151         	movff	?___flmul+1,powf@r+1
  5910   00122C  C011  F152         	movff	?___flmul+2,powf@r+2
  5911   001230  C012  F153         	movff	?___flmul+3,powf@r+3
  5912   001234  C130  F013         	movff	powf@s_l,___flmul@a
  5913   001238  C131  F014         	movff	powf@s_l+1,___flmul@a+1
  5914   00123C  C132  F015         	movff	powf@s_l+2,___flmul@a+2
  5915   001240  C133  F016         	movff	powf@s_l+3,___flmul@a+3
  5916   001244  C160  F045         	movff	powf@s,___fladd@a
  5917   001248  C161  F046         	movff	powf@s+1,___fladd@a+1
  5918   00124C  C162  F047         	movff	powf@s+2,___fladd@a+2
  5919   001250  C163  F048         	movff	powf@s+3,___fladd@a+3
  5920   001254  C174  F041         	movff	powf@s_h,___fladd@b
  5921   001258  C175  F042         	movff	powf@s_h+1,___fladd@b+1
  5922   00125C  C176  F043         	movff	powf@s_h+2,___fladd@b+2
  5923   001260  C177  F044         	movff	powf@s_h+3,___fladd@b+3
  5924   001264  EC9B  F01D         	call	___fladd	;wreg free
  5925   001268  C041  F00F         	movff	?___fladd,___flmul@b
  5926   00126C  C042  F010         	movff	?___fladd+1,___flmul@b+1
  5927   001270  C043  F011         	movff	?___fladd+2,___flmul@b+2
  5928   001274  C044  F012         	movff	?___fladd+3,___flmul@b+3
  5929   001278  ECF6  F01F         	call	___flmul	;wreg free
  5930   00127C  C00F  F15C         	movff	?___flmul,_powf$1845
  5931   001280  C010  F15D         	movff	?___flmul+1,_powf$1845+1
  5932   001284  C011  F15E         	movff	?___flmul+2,_powf$1845+2
  5933   001288  C012  F15F         	movff	?___flmul+3,_powf$1845+3
  5934   00128C  C150  F041         	movff	powf@r,___fladd@b
  5935   001290  C151  F042         	movff	powf@r+1,___fladd@b+1
  5936   001294  C152  F043         	movff	powf@r+2,___fladd@b+2
  5937   001298  C153  F044         	movff	powf@r+3,___fladd@b+3
  5938   00129C  C15C  F045         	movff	_powf$1845,___fladd@a
  5939   0012A0  C15D  F046         	movff	_powf$1845+1,___fladd@a+1
  5940   0012A4  C15E  F047         	movff	_powf$1845+2,___fladd@a+2
  5941   0012A8  C15F  F048         	movff	_powf$1845+3,___fladd@a+3
  5942   0012AC  EC9B  F01D         	call	___fladd	;wreg free
  5943   0012B0  C041  F150         	movff	?___fladd,powf@r
  5944   0012B4  C042  F151         	movff	?___fladd+1,powf@r+1
  5945   0012B8  C043  F152         	movff	?___fladd+2,powf@r+2
  5946   0012BC  C044  F153         	movff	?___fladd+3,powf@r+3
  5947   0012C0  C174  F00F         	movff	powf@s_h,___flmul@b
  5948   0012C4  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5949   0012C8  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5950   0012CC  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5951   0012D0  C174  F013         	movff	powf@s_h,___flmul@a
  5952   0012D4  C175  F014         	movff	powf@s_h+1,___flmul@a+1
  5953   0012D8  C176  F015         	movff	powf@s_h+2,___flmul@a+2
  5954   0012DC  C177  F016         	movff	powf@s_h+3,___flmul@a+3
  5955   0012E0  ECF6  F01F         	call	___flmul	;wreg free
  5956   0012E4  C00F  F190         	movff	?___flmul,powf@s2
  5957   0012E8  C010  F191         	movff	?___flmul+1,powf@s2+1
  5958   0012EC  C011  F192         	movff	?___flmul+2,powf@s2+2
  5959   0012F0  C012  F193         	movff	?___flmul+3,powf@s2+3
  5960   0012F4  0E00               	movlw	0
  5961   0012F6  6E45               	movwf	___fladd@a^0,c
  5962   0012F8  0E00               	movlw	0
  5963   0012FA  6E46               	movwf	(___fladd@a+1)^0,c
  5964   0012FC  0E40               	movlw	64
  5965   0012FE  6E47               	movwf	(___fladd@a+2)^0,c
  5966   001300  0E40               	movlw	64
  5967   001302  6E48               	movwf	(___fladd@a+3)^0,c
  5968   001304  C190  F041         	movff	powf@s2,___fladd@b
  5969   001308  C191  F042         	movff	powf@s2+1,___fladd@b+1
  5970   00130C  C192  F043         	movff	powf@s2+2,___fladd@b+2
  5971   001310  C193  F044         	movff	powf@s2+3,___fladd@b+3
  5972   001314  EC9B  F01D         	call	___fladd	;wreg free
  5973   001318  C041  F15C         	movff	?___fladd,_powf$1845
  5974   00131C  C042  F15D         	movff	?___fladd+1,_powf$1845+1
  5975   001320  C043  F15E         	movff	?___fladd+2,_powf$1845+2
  5976   001324  C044  F15F         	movff	?___fladd+3,_powf$1845+3
  5977   001328  C15C  F041         	movff	_powf$1845,___fladd@b
  5978   00132C  C15D  F042         	movff	_powf$1845+1,___fladd@b+1
  5979   001330  C15E  F043         	movff	_powf$1845+2,___fladd@b+2
  5980   001334  C15F  F044         	movff	_powf$1845+3,___fladd@b+3
  5981   001338  C150  F045         	movff	powf@r,___fladd@a
  5982   00133C  C151  F046         	movff	powf@r+1,___fladd@a+1
  5983   001340  C152  F047         	movff	powf@r+2,___fladd@a+2
  5984   001344  C153  F048         	movff	powf@r+3,___fladd@a+3
  5985   001348  EC9B  F01D         	call	___fladd	;wreg free
  5986   00134C  C041  F170         	movff	?___fladd,powf@t_h
  5987   001350  C042  F171         	movff	?___fladd+1,powf@t_h+1
  5988   001354  C043  F172         	movff	?___fladd+2,powf@t_h+2
  5989   001358  C044  F173         	movff	?___fladd+3,powf@t_h+3
  5990   00135C  C170  F198         	movff	powf@t_h,powf@is
  5991   001360  C171  F199         	movff	powf@t_h+1,powf@is+1
  5992   001364  C172  F19A         	movff	powf@t_h+2,powf@is+2
  5993   001368  C173  F19B         	movff	powf@t_h+3,powf@is+3
  5994   00136C  0E00               	movlw	0
  5995   00136E  0101               	movlb	1	; () banked
  5996   001370  1598               	andwf	powf@is& (0+255),w,b
  5997   001372  6F70               	movwf	powf@t_h& (0+255),b
  5998   001374  0EF0               	movlw	240
  5999   001376  1599               	andwf	(powf@is+1)& (0+255),w,b
  6000   001378  6F71               	movwf	(powf@t_h+1)& (0+255),b
  6001   00137A  0EFF               	movlw	255
  6002   00137C  159A               	andwf	(powf@is+2)& (0+255),w,b
  6003   00137E  6F72               	movwf	(powf@t_h+2)& (0+255),b
  6004   001380  0EFF               	movlw	255
  6005   001382  159B               	andwf	(powf@is+3)& (0+255),w,b
  6006   001384  6F73               	movwf	(powf@t_h+3)& (0+255),b
  6007   001386                     
  6008                           ; BSR set to: 1
  6009   001386  0E00               	movlw	0
  6010   001388  6E45               	movwf	___fladd@a^0,c
  6011   00138A  0E00               	movlw	0
  6012   00138C  6E46               	movwf	(___fladd@a+1)^0,c
  6013   00138E  0E40               	movlw	64
  6014   001390  6E47               	movwf	(___fladd@a+2)^0,c
  6015   001392  0EC0               	movlw	192
  6016   001394  6E48               	movwf	(___fladd@a+3)^0,c
  6017   001396  C170  F041         	movff	powf@t_h,___fladd@b
  6018   00139A  C171  F042         	movff	powf@t_h+1,___fladd@b+1
  6019   00139E  C172  F043         	movff	powf@t_h+2,___fladd@b+2
  6020   0013A2  C173  F044         	movff	powf@t_h+3,___fladd@b+3
  6021   0013A6  EC9B  F01D         	call	___fladd	;wreg free
  6022   0013AA  C041  F13C         	movff	?___fladd,_powf$1846
  6023   0013AE  C042  F13D         	movff	?___fladd+1,_powf$1846+1
  6024   0013B2  C043  F13E         	movff	?___fladd+2,_powf$1846+2
  6025   0013B6  C044  F13F         	movff	?___fladd+3,_powf$1846+3
  6026   0013BA  C190  F055         	movff	powf@s2,___flsub@a
  6027   0013BE  C191  F056         	movff	powf@s2+1,___flsub@a+1
  6028   0013C2  C192  F057         	movff	powf@s2+2,___flsub@a+2
  6029   0013C6  C193  F058         	movff	powf@s2+3,___flsub@a+3
  6030   0013CA  C13C  F051         	movff	_powf$1846,___flsub@b
  6031   0013CE  C13D  F052         	movff	_powf$1846+1,___flsub@b+1
  6032   0013D2  C13E  F053         	movff	_powf$1846+2,___flsub@b+2
  6033   0013D6  C13F  F054         	movff	_powf$1846+3,___flsub@b+3
  6034   0013DA  EC1C  F036         	call	___flsub	;wreg free
  6035   0013DE  C051  F140         	movff	?___flsub,_powf$1847
  6036   0013E2  C052  F141         	movff	?___flsub+1,_powf$1847+1
  6037   0013E6  C053  F142         	movff	?___flsub+2,_powf$1847+2
  6038   0013EA  C054  F143         	movff	?___flsub+3,_powf$1847+3
  6039   0013EE  C150  F051         	movff	powf@r,___flsub@b
  6040   0013F2  C151  F052         	movff	powf@r+1,___flsub@b+1
  6041   0013F6  C152  F053         	movff	powf@r+2,___flsub@b+2
  6042   0013FA  C153  F054         	movff	powf@r+3,___flsub@b+3
  6043   0013FE  C140  F055         	movff	_powf$1847,___flsub@a
  6044   001402  C141  F056         	movff	_powf$1847+1,___flsub@a+1
  6045   001406  C142  F057         	movff	_powf$1847+2,___flsub@a+2
  6046   00140A  C143  F058         	movff	_powf$1847+3,___flsub@a+3
  6047   00140E  EC1C  F036         	call	___flsub	;wreg free
  6048   001412  C051  F134         	movff	?___flsub,powf@t_l
  6049   001416  C052  F135         	movff	?___flsub+1,powf@t_l+1
  6050   00141A  C053  F136         	movff	?___flsub+2,powf@t_l+2
  6051   00141E  C054  F137         	movff	?___flsub+3,powf@t_l+3
  6052   001422  C174  F00F         	movff	powf@s_h,___flmul@b
  6053   001426  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  6054   00142A  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  6055   00142E  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  6056   001432  C170  F013         	movff	powf@t_h,___flmul@a
  6057   001436  C171  F014         	movff	powf@t_h+1,___flmul@a+1
  6058   00143A  C172  F015         	movff	powf@t_h+2,___flmul@a+2
  6059   00143E  C173  F016         	movff	powf@t_h+3,___flmul@a+3
  6060   001442  ECF6  F01F         	call	___flmul	;wreg free
  6061   001446  C00F  F17C         	movff	?___flmul,powf@u
  6062   00144A  C010  F17D         	movff	?___flmul+1,powf@u+1
  6063   00144E  C011  F17E         	movff	?___flmul+2,powf@u+2
  6064   001452  C012  F17F         	movff	?___flmul+3,powf@u+3
  6065   001456  C130  F013         	movff	powf@s_l,___flmul@a
  6066   00145A  C131  F014         	movff	powf@s_l+1,___flmul@a+1
  6067   00145E  C132  F015         	movff	powf@s_l+2,___flmul@a+2
  6068   001462  C133  F016         	movff	powf@s_l+3,___flmul@a+3
  6069   001466  C170  F00F         	movff	powf@t_h,___flmul@b
  6070   00146A  C171  F010         	movff	powf@t_h+1,___flmul@b+1
  6071   00146E  C172  F011         	movff	powf@t_h+2,___flmul@b+2
  6072   001472  C173  F012         	movff	powf@t_h+3,___flmul@b+3
  6073   001476  ECF6  F01F         	call	___flmul	;wreg free
  6074   00147A  C00F  F041         	movff	?___flmul,___fladd@b
  6075   00147E  C010  F042         	movff	?___flmul+1,___fladd@b+1
  6076   001482  C011  F043         	movff	?___flmul+2,___fladd@b+2
  6077   001486  C012  F044         	movff	?___flmul+3,___fladd@b+3
  6078   00148A  C160  F013         	movff	powf@s,___flmul@a
  6079   00148E  C161  F014         	movff	powf@s+1,___flmul@a+1
  6080   001492  C162  F015         	movff	powf@s+2,___flmul@a+2
  6081   001496  C163  F016         	movff	powf@s+3,___flmul@a+3
  6082   00149A  C134  F00F         	movff	powf@t_l,___flmul@b
  6083   00149E  C135  F010         	movff	powf@t_l+1,___flmul@b+1
  6084   0014A2  C136  F011         	movff	powf@t_l+2,___flmul@b+2
  6085   0014A6  C137  F012         	movff	powf@t_l+3,___flmul@b+3
  6086   0014AA  ECF6  F01F         	call	___flmul	;wreg free
  6087   0014AE  C00F  F045         	movff	?___flmul,___fladd@a
  6088   0014B2  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6089   0014B6  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6090   0014BA  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6091   0014BE  EC9B  F01D         	call	___fladd	;wreg free
  6092   0014C2  C041  F180         	movff	?___fladd,powf@v
  6093   0014C6  C042  F181         	movff	?___fladd+1,powf@v+1
  6094   0014CA  C043  F182         	movff	?___fladd+2,powf@v+2
  6095   0014CE  C044  F183         	movff	?___fladd+3,powf@v+3
  6096   0014D2  C17C  F041         	movff	powf@u,___fladd@b
  6097   0014D6  C17D  F042         	movff	powf@u+1,___fladd@b+1
  6098   0014DA  C17E  F043         	movff	powf@u+2,___fladd@b+2
  6099   0014DE  C17F  F044         	movff	powf@u+3,___fladd@b+3
  6100   0014E2  C180  F045         	movff	powf@v,___fladd@a
  6101   0014E6  C181  F046         	movff	powf@v+1,___fladd@a+1
  6102   0014EA  C182  F047         	movff	powf@v+2,___fladd@a+2
  6103   0014EE  C183  F048         	movff	powf@v+3,___fladd@a+3
  6104   0014F2  EC9B  F01D         	call	___fladd	;wreg free
  6105   0014F6  C041  F1A0         	movff	?___fladd,powf@p_h
  6106   0014FA  C042  F1A1         	movff	?___fladd+1,powf@p_h+1
  6107   0014FE  C043  F1A2         	movff	?___fladd+2,powf@p_h+2
  6108   001502  C044  F1A3         	movff	?___fladd+3,powf@p_h+3
  6109   001506  C1A0  F198         	movff	powf@p_h,powf@is
  6110   00150A  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  6111   00150E  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  6112   001512  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  6113   001516  0E00               	movlw	0
  6114   001518  0101               	movlb	1	; () banked
  6115   00151A  1598               	andwf	powf@is& (0+255),w,b
  6116   00151C  6FA0               	movwf	powf@p_h& (0+255),b
  6117   00151E  0EF0               	movlw	240
  6118   001520  1599               	andwf	(powf@is+1)& (0+255),w,b
  6119   001522  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  6120   001524  0EFF               	movlw	255
  6121   001526  159A               	andwf	(powf@is+2)& (0+255),w,b
  6122   001528  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  6123   00152A  0EFF               	movlw	255
  6124   00152C  159B               	andwf	(powf@is+3)& (0+255),w,b
  6125   00152E  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  6126   001530                     
  6127                           ; BSR set to: 1
  6128   001530  C17C  F055         	movff	powf@u,___flsub@a
  6129   001534  C17D  F056         	movff	powf@u+1,___flsub@a+1
  6130   001538  C17E  F057         	movff	powf@u+2,___flsub@a+2
  6131   00153C  C17F  F058         	movff	powf@u+3,___flsub@a+3
  6132   001540  C1A0  F051         	movff	powf@p_h,___flsub@b
  6133   001544  C1A1  F052         	movff	powf@p_h+1,___flsub@b+1
  6134   001548  C1A2  F053         	movff	powf@p_h+2,___flsub@b+2
  6135   00154C  C1A3  F054         	movff	powf@p_h+3,___flsub@b+3
  6136   001550  EC1C  F036         	call	___flsub	;wreg free
  6137   001554  C051  F19C         	movff	?___flsub,_powf$1841
  6138   001558  C052  F19D         	movff	?___flsub+1,_powf$1841+1
  6139   00155C  C053  F19E         	movff	?___flsub+2,_powf$1841+2
  6140   001560  C054  F19F         	movff	?___flsub+3,_powf$1841+3
  6141   001564  C180  F051         	movff	powf@v,___flsub@b
  6142   001568  C181  F052         	movff	powf@v+1,___flsub@b+1
  6143   00156C  C182  F053         	movff	powf@v+2,___flsub@b+2
  6144   001570  C183  F054         	movff	powf@v+3,___flsub@b+3
  6145   001574  C19C  F055         	movff	_powf$1841,___flsub@a
  6146   001578  C19D  F056         	movff	_powf$1841+1,___flsub@a+1
  6147   00157C  C19E  F057         	movff	_powf$1841+2,___flsub@a+2
  6148   001580  C19F  F058         	movff	_powf$1841+3,___flsub@a+3
  6149   001584  EC1C  F036         	call	___flsub	;wreg free
  6150   001588  C051  F16C         	movff	?___flsub,powf@p_l
  6151   00158C  C052  F16D         	movff	?___flsub+1,powf@p_l+1
  6152   001590  C053  F16E         	movff	?___flsub+2,powf@p_l+2
  6153   001594  C054  F16F         	movff	?___flsub+3,powf@p_l+3
  6154   001598  C1A0  F00F         	movff	powf@p_h,___flmul@b
  6155   00159C  C1A1  F010         	movff	powf@p_h+1,___flmul@b+1
  6156   0015A0  C1A2  F011         	movff	powf@p_h+2,___flmul@b+2
  6157   0015A4  C1A3  F012         	movff	powf@p_h+3,___flmul@b+3
  6158   0015A8  0E00               	movlw	0
  6159   0015AA  6E13               	movwf	___flmul@a^0,c
  6160   0015AC  0E40               	movlw	64
  6161   0015AE  6E14               	movwf	(___flmul@a+1)^0,c
  6162   0015B0  0E76               	movlw	118
  6163   0015B2  6E15               	movwf	(___flmul@a+2)^0,c
  6164   0015B4  0E3F               	movlw	63
  6165   0015B6  6E16               	movwf	(___flmul@a+3)^0,c
  6166   0015B8  ECF6  F01F         	call	___flmul	;wreg free
  6167   0015BC  C00F  F120         	movff	?___flmul,powf@z_h
  6168   0015C0  C010  F121         	movff	?___flmul+1,powf@z_h+1
  6169   0015C4  C011  F122         	movff	?___flmul+2,powf@z_h+2
  6170   0015C8  C012  F123         	movff	?___flmul+3,powf@z_h+3
  6171   0015CC  0E4F               	movlw	79
  6172   0015CE  6E13               	movwf	___flmul@a^0,c
  6173   0015D0  0E38               	movlw	56
  6174   0015D2  6E14               	movwf	(___flmul@a+1)^0,c
  6175   0015D4  0E76               	movlw	118
  6176   0015D6  6E15               	movwf	(___flmul@a+2)^0,c
  6177   0015D8  0E3F               	movlw	63
  6178   0015DA  6E16               	movwf	(___flmul@a+3)^0,c
  6179   0015DC  C16C  F00F         	movff	powf@p_l,___flmul@b
  6180   0015E0  C16D  F010         	movff	powf@p_l+1,___flmul@b+1
  6181   0015E4  C16E  F011         	movff	powf@p_l+2,___flmul@b+2
  6182   0015E8  C16F  F012         	movff	powf@p_l+3,___flmul@b+3
  6183   0015EC  ECF6  F01F         	call	___flmul	;wreg free
  6184   0015F0  C00F  F045         	movff	?___flmul,___fladd@a
  6185   0015F4  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6186   0015F8  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6187   0015FC  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6188   001600  0EC6               	movlw	198
  6189   001602  6E13               	movwf	___flmul@a^0,c
  6190   001604  0E23               	movlw	35
  6191   001606  6E14               	movwf	(___flmul@a+1)^0,c
  6192   001608  0EF6               	movlw	246
  6193   00160A  6E15               	movwf	(___flmul@a+2)^0,c
  6194   00160C  0EB8               	movlw	184
  6195   00160E  6E16               	movwf	(___flmul@a+3)^0,c
  6196   001610  C1A0  F00F         	movff	powf@p_h,___flmul@b
  6197   001614  C1A1  F010         	movff	powf@p_h+1,___flmul@b+1
  6198   001618  C1A2  F011         	movff	powf@p_h+2,___flmul@b+2
  6199   00161C  C1A3  F012         	movff	powf@p_h+3,___flmul@b+3
  6200   001620  ECF6  F01F         	call	___flmul	;wreg free
  6201   001624  C00F  F041         	movff	?___flmul,___fladd@b
  6202   001628  C010  F042         	movff	?___flmul+1,___fladd@b+1
  6203   00162C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  6204   001630  C012  F044         	movff	?___flmul+3,___fladd@b+3
  6205   001634  EC9B  F01D         	call	___fladd	;wreg free
  6206   001638  C041  F15C         	movff	?___fladd,_powf$1845
  6207   00163C  C042  F15D         	movff	?___fladd+1,_powf$1845+1
  6208   001640  C043  F15E         	movff	?___fladd+2,_powf$1845+2
  6209   001644  C044  F15F         	movff	?___fladd+3,_powf$1845+3
  6210   001648  C15C  F041         	movff	_powf$1845,___fladd@b
  6211   00164C  C15D  F042         	movff	_powf$1845+1,___fladd@b+1
  6212   001650  C15E  F043         	movff	_powf$1845+2,___fladd@b+2
  6213   001654  C15F  F044         	movff	_powf$1845+3,___fladd@b+3
  6214   001658  C1A4  F070         	movff	powf@k,??_powf
  6215   00165C  C1A5  F071         	movff	powf@k+1,??_powf+1
  6216   001660  0100               	movlb	0	; () banked
  6217   001662  90D8               	bcf	status,0,c
  6218   001664  3770               	rlcf	??_powf& (0+255),f,b
  6219   001666  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6220   001668  90D8               	bcf	status,0,c
  6221   00166A  3770               	rlcf	??_powf& (0+255),f,b
  6222   00166C  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6223   00166E  0E5D               	movlw	low _dp_l
  6224   001670  2570               	addwf	??_powf& (0+255),w,b
  6225   001672  6EF6               	movwf	tblptrl,c
  6226   001674  0E7E               	movlw	high _dp_l
  6227   001676  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6228   001678  6EF7               	movwf	tblptrh,c
  6229   00167A                     	if	0	;There are less than 3 active tblptr bytes
  6230   00167A                     	endif
  6231   00167A  0009               	tblrd		*+
  6232   00167C  CFF5 F045          	movff	tablat,___fladd@a
  6233   001680  0009               	tblrd		*+
  6234   001682  CFF5 F046          	movff	tablat,___fladd@a+1
  6235   001686  0009               	tblrd		*+
  6236   001688  CFF5 F047          	movff	tablat,___fladd@a+2
  6237   00168C  000A               	tblrd		*-
  6238   00168E  CFF5 F048          	movff	tablat,___fladd@a+3
  6239   001692  EC9B  F01D         	call	___fladd	;wreg free
  6240   001696  C041  F124         	movff	?___fladd,powf@z_l
  6241   00169A  C042  F125         	movff	?___fladd+1,powf@z_l+1
  6242   00169E  C043  F126         	movff	?___fladd+2,powf@z_l+2
  6243   0016A2  C044  F127         	movff	?___fladd+3,powf@z_l+3
  6244   0016A6  C188  F001         	movff	powf@n,___xxtofl@val
  6245   0016AA  C189  F002         	movff	powf@n+1,___xxtofl@val+1
  6246   0016AE  C18A  F003         	movff	powf@n+2,___xxtofl@val+2
  6247   0016B2  C18B  F004         	movff	powf@n+3,___xxtofl@val+3
  6248   0016B6  0E01               	movlw	1
  6249   0016B8  ECEA  F02A         	call	___xxtofl
  6250   0016BC  C001  F1B0         	movff	?___xxtofl,powf@t
  6251   0016C0  C002  F1B1         	movff	?___xxtofl+1,powf@t+1
  6252   0016C4  C003  F1B2         	movff	?___xxtofl+2,powf@t+2
  6253   0016C8  C004  F1B3         	movff	?___xxtofl+3,powf@t+3
  6254   0016CC  C124  F045         	movff	powf@z_l,___fladd@a
  6255   0016D0  C125  F046         	movff	powf@z_l+1,___fladd@a+1
  6256   0016D4  C126  F047         	movff	powf@z_l+2,___fladd@a+2
  6257   0016D8  C127  F048         	movff	powf@z_l+3,___fladd@a+3
  6258   0016DC  C120  F041         	movff	powf@z_h,___fladd@b
  6259   0016E0  C121  F042         	movff	powf@z_h+1,___fladd@b+1
  6260   0016E4  C122  F043         	movff	powf@z_h+2,___fladd@b+2
  6261   0016E8  C123  F044         	movff	powf@z_h+3,___fladd@b+3
  6262   0016EC  EC9B  F01D         	call	___fladd	;wreg free
  6263   0016F0  C041  F15C         	movff	?___fladd,_powf$1845
  6264   0016F4  C042  F15D         	movff	?___fladd+1,_powf$1845+1
  6265   0016F8  C043  F15E         	movff	?___fladd+2,_powf$1845+2
  6266   0016FC  C044  F15F         	movff	?___fladd+3,_powf$1845+3
  6267   001700  C1A4  F070         	movff	powf@k,??_powf
  6268   001704  C1A5  F071         	movff	powf@k+1,??_powf+1
  6269   001708  0100               	movlb	0	; () banked
  6270   00170A  90D8               	bcf	status,0,c
  6271   00170C  3770               	rlcf	??_powf& (0+255),f,b
  6272   00170E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6273   001710  90D8               	bcf	status,0,c
  6274   001712  3770               	rlcf	??_powf& (0+255),f,b
  6275   001714  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6276   001716  0E65               	movlw	low _dp_h
  6277   001718  2570               	addwf	??_powf& (0+255),w,b
  6278   00171A  6EF6               	movwf	tblptrl,c
  6279   00171C  0E7E               	movlw	high _dp_h
  6280   00171E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6281   001720  6EF7               	movwf	tblptrh,c
  6282   001722                     	if	0	;There are less than 3 active tblptr bytes
  6283   001722                     	endif
  6284   001722  0009               	tblrd		*+
  6285   001724  CFF5 F045          	movff	tablat,___fladd@a
  6286   001728  0009               	tblrd		*+
  6287   00172A  CFF5 F046          	movff	tablat,___fladd@a+1
  6288   00172E  0009               	tblrd		*+
  6289   001730  CFF5 F047          	movff	tablat,___fladd@a+2
  6290   001734  000A               	tblrd		*-
  6291   001736  CFF5 F048          	movff	tablat,___fladd@a+3
  6292   00173A  C15C  F041         	movff	_powf$1845,___fladd@b
  6293   00173E  C15D  F042         	movff	_powf$1845+1,___fladd@b+1
  6294   001742  C15E  F043         	movff	_powf$1845+2,___fladd@b+2
  6295   001746  C15F  F044         	movff	_powf$1845+3,___fladd@b+3
  6296   00174A  EC9B  F01D         	call	___fladd	;wreg free
  6297   00174E  C041  F108         	movff	?___fladd,_powf$1848
  6298   001752  C042  F109         	movff	?___fladd+1,_powf$1848+1
  6299   001756  C043  F10A         	movff	?___fladd+2,_powf$1848+2
  6300   00175A  C044  F10B         	movff	?___fladd+3,_powf$1848+3
  6301   00175E  C108  F041         	movff	_powf$1848,___fladd@b
  6302   001762  C109  F042         	movff	_powf$1848+1,___fladd@b+1
  6303   001766  C10A  F043         	movff	_powf$1848+2,___fladd@b+2
  6304   00176A  C10B  F044         	movff	_powf$1848+3,___fladd@b+3
  6305   00176E  C1B0  F045         	movff	powf@t,___fladd@a
  6306   001772  C1B1  F046         	movff	powf@t+1,___fladd@a+1
  6307   001776  C1B2  F047         	movff	powf@t+2,___fladd@a+2
  6308   00177A  C1B3  F048         	movff	powf@t+3,___fladd@a+3
  6309   00177E  EC9B  F01D         	call	___fladd	;wreg free
  6310   001782  C041  F18C         	movff	?___fladd,powf@t1
  6311   001786  C042  F18D         	movff	?___fladd+1,powf@t1+1
  6312   00178A  C043  F18E         	movff	?___fladd+2,powf@t1+2
  6313   00178E  C044  F18F         	movff	?___fladd+3,powf@t1+3
  6314   001792  C18C  F198         	movff	powf@t1,powf@is
  6315   001796  C18D  F199         	movff	powf@t1+1,powf@is+1
  6316   00179A  C18E  F19A         	movff	powf@t1+2,powf@is+2
  6317   00179E  C18F  F19B         	movff	powf@t1+3,powf@is+3
  6318   0017A2  0E00               	movlw	0
  6319   0017A4  0101               	movlb	1	; () banked
  6320   0017A6  1598               	andwf	powf@is& (0+255),w,b
  6321   0017A8  6F8C               	movwf	powf@t1& (0+255),b
  6322   0017AA  0EF0               	movlw	240
  6323   0017AC  1599               	andwf	(powf@is+1)& (0+255),w,b
  6324   0017AE  6F8D               	movwf	(powf@t1+1)& (0+255),b
  6325   0017B0  0EFF               	movlw	255
  6326   0017B2  159A               	andwf	(powf@is+2)& (0+255),w,b
  6327   0017B4  6F8E               	movwf	(powf@t1+2)& (0+255),b
  6328   0017B6  0EFF               	movlw	255
  6329   0017B8  159B               	andwf	(powf@is+3)& (0+255),w,b
  6330   0017BA  6F8F               	movwf	(powf@t1+3)& (0+255),b
  6331   0017BC                     
  6332                           ; BSR set to: 1
  6333   0017BC  C1B0  F055         	movff	powf@t,___flsub@a
  6334   0017C0  C1B1  F056         	movff	powf@t+1,___flsub@a+1
  6335   0017C4  C1B2  F057         	movff	powf@t+2,___flsub@a+2
  6336   0017C8  C1B3  F058         	movff	powf@t+3,___flsub@a+3
  6337   0017CC  C18C  F051         	movff	powf@t1,___flsub@b
  6338   0017D0  C18D  F052         	movff	powf@t1+1,___flsub@b+1
  6339   0017D4  C18E  F053         	movff	powf@t1+2,___flsub@b+2
  6340   0017D8  C18F  F054         	movff	powf@t1+3,___flsub@b+3
  6341   0017DC  EC1C  F036         	call	___flsub	;wreg free
  6342   0017E0  C051  F19C         	movff	?___flsub,_powf$1841
  6343   0017E4  C052  F19D         	movff	?___flsub+1,_powf$1841+1
  6344   0017E8  C053  F19E         	movff	?___flsub+2,_powf$1841+2
  6345   0017EC  C054  F19F         	movff	?___flsub+3,_powf$1841+3
  6346   0017F0  C1A4  F070         	movff	powf@k,??_powf
  6347   0017F4  C1A5  F071         	movff	powf@k+1,??_powf+1
  6348   0017F8  0100               	movlb	0	; () banked
  6349   0017FA  90D8               	bcf	status,0,c
  6350   0017FC  3770               	rlcf	??_powf& (0+255),f,b
  6351   0017FE  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6352   001800  90D8               	bcf	status,0,c
  6353   001802  3770               	rlcf	??_powf& (0+255),f,b
  6354   001804  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6355   001806  0E65               	movlw	low _dp_h
  6356   001808  2570               	addwf	??_powf& (0+255),w,b
  6357   00180A  6EF6               	movwf	tblptrl,c
  6358   00180C  0E7E               	movlw	high _dp_h
  6359   00180E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6360   001810  6EF7               	movwf	tblptrh,c
  6361   001812                     	if	0	;There are less than 3 active tblptr bytes
  6362   001812                     	endif
  6363   001812  0009               	tblrd		*+
  6364   001814  CFF5 F055          	movff	tablat,___flsub@a
  6365   001818  0009               	tblrd		*+
  6366   00181A  CFF5 F056          	movff	tablat,___flsub@a+1
  6367   00181E  0009               	tblrd		*+
  6368   001820  CFF5 F057          	movff	tablat,___flsub@a+2
  6369   001824  000A               	tblrd		*-
  6370   001826  CFF5 F058          	movff	tablat,___flsub@a+3
  6371   00182A  C19C  F051         	movff	_powf$1841,___flsub@b
  6372   00182E  C19D  F052         	movff	_powf$1841+1,___flsub@b+1
  6373   001832  C19E  F053         	movff	_powf$1841+2,___flsub@b+2
  6374   001836  C19F  F054         	movff	_powf$1841+3,___flsub@b+3
  6375   00183A  EC1C  F036         	call	___flsub	;wreg free
  6376   00183E  C051  F140         	movff	?___flsub,_powf$1847
  6377   001842  C052  F141         	movff	?___flsub+1,_powf$1847+1
  6378   001846  C053  F142         	movff	?___flsub+2,_powf$1847+2
  6379   00184A  C054  F143         	movff	?___flsub+3,_powf$1847+3
  6380   00184E  C120  F055         	movff	powf@z_h,___flsub@a
  6381   001852  C121  F056         	movff	powf@z_h+1,___flsub@a+1
  6382   001856  C122  F057         	movff	powf@z_h+2,___flsub@a+2
  6383   00185A  C123  F058         	movff	powf@z_h+3,___flsub@a+3
  6384   00185E  C140  F051         	movff	_powf$1847,___flsub@b
  6385   001862  C141  F052         	movff	_powf$1847+1,___flsub@b+1
  6386   001866  C142  F053         	movff	_powf$1847+2,___flsub@b+2
  6387   00186A  C143  F054         	movff	_powf$1847+3,___flsub@b+3
  6388   00186E  EC1C  F036         	call	___flsub	;wreg free
  6389   001872  C051  F10C         	movff	?___flsub,_powf$1849
  6390   001876  C052  F10D         	movff	?___flsub+1,_powf$1849+1
  6391   00187A  C053  F10E         	movff	?___flsub+2,_powf$1849+2
  6392   00187E  C054  F10F         	movff	?___flsub+3,_powf$1849+3
  6393   001882  C124  F051         	movff	powf@z_l,___flsub@b
  6394   001886  C125  F052         	movff	powf@z_l+1,___flsub@b+1
  6395   00188A  C126  F053         	movff	powf@z_l+2,___flsub@b+2
  6396   00188E  C127  F054         	movff	powf@z_l+3,___flsub@b+3
  6397   001892  C10C  F055         	movff	_powf$1849,___flsub@a
  6398   001896  C10D  F056         	movff	_powf$1849+1,___flsub@a+1
  6399   00189A  C10E  F057         	movff	_powf$1849+2,___flsub@a+2
  6400   00189E  C10F  F058         	movff	_powf$1849+3,___flsub@a+3
  6401   0018A2  EC1C  F036         	call	___flsub	;wreg free
  6402   0018A6  C051  F11C         	movff	?___flsub,powf@t2
  6403   0018AA  C052  F11D         	movff	?___flsub+1,powf@t2+1
  6404   0018AE  C053  F11E         	movff	?___flsub+2,powf@t2+2
  6405   0018B2  C054  F11F         	movff	?___flsub+3,powf@t2+3
  6406   0018B6                     l7644:
  6407   0018B6  C06C  F198         	movff	powf@y,powf@is
  6408   0018BA  C06D  F199         	movff	powf@y+1,powf@is+1
  6409   0018BE  C06E  F19A         	movff	powf@y+2,powf@is+2
  6410   0018C2  C06F  F19B         	movff	powf@y+3,powf@is+3
  6411   0018C6  0E00               	movlw	0
  6412   0018C8  0101               	movlb	1	; () banked
  6413   0018CA  1598               	andwf	powf@is& (0+255),w,b
  6414   0018CC  6F2C               	movwf	powf@y1& (0+255),b
  6415   0018CE  0EF0               	movlw	240
  6416   0018D0  1599               	andwf	(powf@is+1)& (0+255),w,b
  6417   0018D2  6F2D               	movwf	(powf@y1+1)& (0+255),b
  6418   0018D4  0EFF               	movlw	255
  6419   0018D6  159A               	andwf	(powf@is+2)& (0+255),w,b
  6420   0018D8  6F2E               	movwf	(powf@y1+2)& (0+255),b
  6421   0018DA  0EFF               	movlw	255
  6422   0018DC  159B               	andwf	(powf@is+3)& (0+255),w,b
  6423   0018DE  6F2F               	movwf	(powf@y1+3)& (0+255),b
  6424   0018E0                     
  6425                           ; BSR set to: 1
  6426   0018E0  C18C  F013         	movff	powf@t1,___flmul@a
  6427   0018E4  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  6428   0018E8  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  6429   0018EC  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  6430   0018F0  C12C  F055         	movff	powf@y1,___flsub@a
  6431   0018F4  C12D  F056         	movff	powf@y1+1,___flsub@a+1
  6432   0018F8  C12E  F057         	movff	powf@y1+2,___flsub@a+2
  6433   0018FC  C12F  F058         	movff	powf@y1+3,___flsub@a+3
  6434   001900  C06C  F051         	movff	powf@y,___flsub@b
  6435   001904  C06D  F052         	movff	powf@y+1,___flsub@b+1
  6436   001908  C06E  F053         	movff	powf@y+2,___flsub@b+2
  6437   00190C  C06F  F054         	movff	powf@y+3,___flsub@b+3
  6438   001910  EC1C  F036         	call	___flsub	;wreg free
  6439   001914  C051  F00F         	movff	?___flsub,___flmul@b
  6440   001918  C052  F010         	movff	?___flsub+1,___flmul@b+1
  6441   00191C  C053  F011         	movff	?___flsub+2,___flmul@b+2
  6442   001920  C054  F012         	movff	?___flsub+3,___flmul@b+3
  6443   001924  ECF6  F01F         	call	___flmul	;wreg free
  6444   001928  C00F  F110         	movff	?___flmul,_powf$1850
  6445   00192C  C010  F111         	movff	?___flmul+1,_powf$1850+1
  6446   001930  C011  F112         	movff	?___flmul+2,_powf$1850+2
  6447   001934  C012  F113         	movff	?___flmul+3,_powf$1850+3
  6448   001938  C110  F041         	movff	_powf$1850,___fladd@b
  6449   00193C  C111  F042         	movff	_powf$1850+1,___fladd@b+1
  6450   001940  C112  F043         	movff	_powf$1850+2,___fladd@b+2
  6451   001944  C113  F044         	movff	_powf$1850+3,___fladd@b+3
  6452   001948  C11C  F013         	movff	powf@t2,___flmul@a
  6453   00194C  C11D  F014         	movff	powf@t2+1,___flmul@a+1
  6454   001950  C11E  F015         	movff	powf@t2+2,___flmul@a+2
  6455   001954  C11F  F016         	movff	powf@t2+3,___flmul@a+3
  6456   001958  C06C  F00F         	movff	powf@y,___flmul@b
  6457   00195C  C06D  F010         	movff	powf@y+1,___flmul@b+1
  6458   001960  C06E  F011         	movff	powf@y+2,___flmul@b+2
  6459   001964  C06F  F012         	movff	powf@y+3,___flmul@b+3
  6460   001968  ECF6  F01F         	call	___flmul	;wreg free
  6461   00196C  C00F  F045         	movff	?___flmul,___fladd@a
  6462   001970  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6463   001974  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6464   001978  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6465   00197C  EC9B  F01D         	call	___fladd	;wreg free
  6466   001980  C041  F16C         	movff	?___fladd,powf@p_l
  6467   001984  C042  F16D         	movff	?___fladd+1,powf@p_l+1
  6468   001988  C043  F16E         	movff	?___fladd+2,powf@p_l+2
  6469   00198C  C044  F16F         	movff	?___fladd+3,powf@p_l+3
  6470   001990  C12C  F00F         	movff	powf@y1,___flmul@b
  6471   001994  C12D  F010         	movff	powf@y1+1,___flmul@b+1
  6472   001998  C12E  F011         	movff	powf@y1+2,___flmul@b+2
  6473   00199C  C12F  F012         	movff	powf@y1+3,___flmul@b+3
  6474   0019A0  C18C  F013         	movff	powf@t1,___flmul@a
  6475   0019A4  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  6476   0019A8  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  6477   0019AC  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  6478   0019B0  ECF6  F01F         	call	___flmul	;wreg free
  6479   0019B4  C00F  F1A0         	movff	?___flmul,powf@p_h
  6480   0019B8  C010  F1A1         	movff	?___flmul+1,powf@p_h+1
  6481   0019BC  C011  F1A2         	movff	?___flmul+2,powf@p_h+2
  6482   0019C0  C012  F1A3         	movff	?___flmul+3,powf@p_h+3
  6483   0019C4  C1A0  F041         	movff	powf@p_h,___fladd@b
  6484   0019C8  C1A1  F042         	movff	powf@p_h+1,___fladd@b+1
  6485   0019CC  C1A2  F043         	movff	powf@p_h+2,___fladd@b+2
  6486   0019D0  C1A3  F044         	movff	powf@p_h+3,___fladd@b+3
  6487   0019D4  C16C  F045         	movff	powf@p_l,___fladd@a
  6488   0019D8  C16D  F046         	movff	powf@p_l+1,___fladd@a+1
  6489   0019DC  C16E  F047         	movff	powf@p_l+2,___fladd@a+2
  6490   0019E0  C16F  F048         	movff	powf@p_l+3,___fladd@a+3
  6491   0019E4  EC9B  F01D         	call	___fladd	;wreg free
  6492   0019E8  C041  F1B4         	movff	?___fladd,powf@z
  6493   0019EC  C042  F1B5         	movff	?___fladd+1,powf@z+1
  6494   0019F0  C043  F1B6         	movff	?___fladd+2,powf@z+2
  6495   0019F4  C044  F1B7         	movff	?___fladd+3,powf@z+3
  6496   0019F8  C1B4  F1A8         	movff	powf@z,powf@j
  6497   0019FC  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  6498   001A00  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  6499   001A04  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  6500   001A08  0101               	movlb	1	; () banked
  6501   001A0A  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  6502   001A0C  EF14  F00D         	goto	u10011
  6503   001A10  05A8               	decf	powf@j& (0+255),w,b
  6504   001A12  0E00               	movlw	0
  6505   001A14  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  6506   001A16  0E00               	movlw	0
  6507   001A18  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  6508   001A1A  0E43               	movlw	67
  6509   001A1C  59AB               	subwfb	(powf@j+3)& (0+255),w,b
  6510   001A1E  A0D8               	btfss	status,0,c
  6511   001A20  EF14  F00D         	goto	u10011
  6512   001A24  EF16  F00D         	goto	u10010
  6513   001A28                     u10011:
  6514   001A28  EF18  F00D         	goto	l7666
  6515   001A2C                     u10010:
  6516   001A2C  EFA2  F003         	goto	l7466
  6517   001A30                     l7666:
  6518                           
  6519                           ; BSR set to: 1
  6520   001A30  0E43               	movlw	67
  6521   001A32  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6522   001A34  11A8               	iorwf	powf@j& (0+255),w,b
  6523   001A36  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6524   001A38  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  6525   001A3A  A4D8               	btfss	status,2,c
  6526   001A3C  EF22  F00D         	goto	u10021
  6527   001A40  EF24  F00D         	goto	u10020
  6528   001A44                     u10021:
  6529   001A44  EF64  F00D         	goto	l7676
  6530   001A48                     u10020:
  6531   001A48                     
  6532                           ; BSR set to: 1
  6533   001A48  C1A0  F055         	movff	powf@p_h,___flsub@a
  6534   001A4C  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  6535   001A50  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  6536   001A54  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  6537   001A58  C1B4  F051         	movff	powf@z,___flsub@b
  6538   001A5C  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  6539   001A60  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  6540   001A64  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  6541   001A68  EC1C  F036         	call	___flsub	;wreg free
  6542   001A6C  C051  F060         	movff	?___flsub,___flge@ff1
  6543   001A70  C052  F061         	movff	?___flsub+1,___flge@ff1+1
  6544   001A74  C053  F062         	movff	?___flsub+2,___flge@ff1+2
  6545   001A78  C054  F063         	movff	?___flsub+3,___flge@ff1+3
  6546   001A7C  0E3C               	movlw	60
  6547   001A7E  6E45               	movwf	___fladd@a^0,c
  6548   001A80  0EAA               	movlw	170
  6549   001A82  6E46               	movwf	(___fladd@a+1)^0,c
  6550   001A84  0E38               	movlw	56
  6551   001A86  6E47               	movwf	(___fladd@a+2)^0,c
  6552   001A88  0E33               	movlw	51
  6553   001A8A  6E48               	movwf	(___fladd@a+3)^0,c
  6554   001A8C  C16C  F041         	movff	powf@p_l,___fladd@b
  6555   001A90  C16D  F042         	movff	powf@p_l+1,___fladd@b+1
  6556   001A94  C16E  F043         	movff	powf@p_l+2,___fladd@b+2
  6557   001A98  C16F  F044         	movff	powf@p_l+3,___fladd@b+3
  6558   001A9C  EC9B  F01D         	call	___fladd	;wreg free
  6559   001AA0  C041  F064         	movff	?___fladd,___flge@ff2
  6560   001AA4  C042  F065         	movff	?___fladd+1,___flge@ff2+1
  6561   001AA8  C043  F066         	movff	?___fladd+2,___flge@ff2+2
  6562   001AAC  C044  F067         	movff	?___fladd+3,___flge@ff2+3
  6563   001AB0  EC72  F02F         	call	___flge	;wreg free
  6564   001AB4  0100               	movlb	0	; () banked
  6565   001AB6  B0D8               	btfsc	status,0,c
  6566   001AB8  EF60  F00D         	goto	u10031
  6567   001ABC  EF62  F00D         	goto	u10030
  6568   001AC0                     u10031:
  6569   001AC0  EFD7  F00D         	goto	l7692
  6570   001AC4                     u10030:
  6571   001AC4  EFA2  F003         	goto	l7466
  6572   001AC8                     l7676:
  6573                           
  6574                           ; BSR set to: 1
  6575   001AC8  0EFF               	movlw	255
  6576   001ACA  15A8               	andwf	powf@j& (0+255),w,b
  6577   001ACC  0100               	movlb	0	; () banked
  6578   001ACE  6F70               	movwf	??_powf& (0+255),b
  6579   001AD0  0EFF               	movlw	255
  6580   001AD2  0101               	movlb	1	; () banked
  6581   001AD4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6582   001AD6  0100               	movlb	0	; () banked
  6583   001AD8  6F71               	movwf	(??_powf+1)& (0+255),b
  6584   001ADA  0EFF               	movlw	255
  6585   001ADC  0101               	movlb	1	; () banked
  6586   001ADE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6587   001AE0  0100               	movlb	0	; () banked
  6588   001AE2  6F72               	movwf	(??_powf+2)& (0+255),b
  6589   001AE4  0E7F               	movlw	127
  6590   001AE6  0101               	movlb	1	; () banked
  6591   001AE8  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6592   001AEA  0100               	movlb	0	; () banked
  6593   001AEC  6F73               	movwf	(??_powf+3)& (0+255),b
  6594   001AEE  BF73               	btfsc	(??_powf+3)& (0+255),7,b
  6595   001AF0  EF86  F00D         	goto	u10041
  6596   001AF4  0570               	decf	??_powf& (0+255),w,b
  6597   001AF6  0E00               	movlw	0
  6598   001AF8  5971               	subwfb	(??_powf+1)& (0+255),w,b
  6599   001AFA  0E16               	movlw	22
  6600   001AFC  5972               	subwfb	(??_powf+2)& (0+255),w,b
  6601   001AFE  0E43               	movlw	67
  6602   001B00  5973               	subwfb	(??_powf+3)& (0+255),w,b
  6603   001B02  A0D8               	btfss	status,0,c
  6604   001B04  EF86  F00D         	goto	u10041
  6605   001B08  EF88  F00D         	goto	u10040
  6606   001B0C                     u10041:
  6607   001B0C  EF92  F00D         	goto	l7684
  6608   001B10                     u10040:
  6609   001B10                     
  6610                           ; BSR set to: 0
  6611   001B10  0E00               	movlw	0
  6612   001B12  6F68               	movwf	?_powf& (0+255),b
  6613   001B14  0E00               	movlw	0
  6614   001B16  6F69               	movwf	(?_powf+1)& (0+255),b
  6615   001B18  0E00               	movlw	0
  6616   001B1A  6F6A               	movwf	(?_powf+2)& (0+255),b
  6617   001B1C  0E00               	movlw	0
  6618   001B1E  6F6B               	movwf	(?_powf+3)& (0+255),b
  6619   001B20  EF63  F012         	goto	l1267
  6620   001B24                     l7684:
  6621                           
  6622                           ; BSR set to: 0
  6623   001B24  0E16               	movlw	22
  6624   001B26  0101               	movlb	1	; () banked
  6625   001B28  19AA               	xorwf	(powf@j+2)& (0+255),w,b
  6626   001B2A  E109               	bnz	u10051
  6627   001B2C  0EC3               	movlw	195
  6628   001B2E  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6629   001B30  11A8               	iorwf	powf@j& (0+255),w,b
  6630   001B32  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6631   001B34  A4D8               	btfss	status,2,c
  6632   001B36  EF9F  F00D         	goto	u10051
  6633   001B3A  EFA1  F00D         	goto	u10050
  6634   001B3E                     u10051:
  6635   001B3E  EFD7  F00D         	goto	l7692
  6636   001B42                     u10050:
  6637   001B42                     
  6638                           ; BSR set to: 1
  6639   001B42  C1A0  F055         	movff	powf@p_h,___flsub@a
  6640   001B46  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  6641   001B4A  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  6642   001B4E  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  6643   001B52  C1B4  F051         	movff	powf@z,___flsub@b
  6644   001B56  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  6645   001B5A  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  6646   001B5E  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  6647   001B62  EC1C  F036         	call	___flsub	;wreg free
  6648   001B66  C051  F060         	movff	?___flsub,___flge@ff1
  6649   001B6A  C052  F061         	movff	?___flsub+1,___flge@ff1+1
  6650   001B6E  C053  F062         	movff	?___flsub+2,___flge@ff1+2
  6651   001B72  C054  F063         	movff	?___flsub+3,___flge@ff1+3
  6652   001B76  C16C  F064         	movff	powf@p_l,___flge@ff2
  6653   001B7A  C16D  F065         	movff	powf@p_l+1,___flge@ff2+1
  6654   001B7E  C16E  F066         	movff	powf@p_l+2,___flge@ff2+2
  6655   001B82  C16F  F067         	movff	powf@p_l+3,___flge@ff2+3
  6656   001B86  EC72  F02F         	call	___flge	;wreg free
  6657   001B8A  0100               	movlb	0	; () banked
  6658   001B8C  A0D8               	btfss	status,0,c
  6659   001B8E  EFCB  F00D         	goto	u10061
  6660   001B92  EFCD  F00D         	goto	u10060
  6661   001B96                     u10061:
  6662   001B96  EFD7  F00D         	goto	l7692
  6663   001B9A                     u10060:
  6664   001B9A                     
  6665                           ; BSR set to: 0
  6666   001B9A  0E00               	movlw	0
  6667   001B9C  6F68               	movwf	?_powf& (0+255),b
  6668   001B9E  0E00               	movlw	0
  6669   001BA0  6F69               	movwf	(?_powf+1)& (0+255),b
  6670   001BA2  0E00               	movlw	0
  6671   001BA4  6F6A               	movwf	(?_powf+2)& (0+255),b
  6672   001BA6  0E00               	movlw	0
  6673   001BA8  6F6B               	movwf	(?_powf+3)& (0+255),b
  6674   001BAA  EF63  F012         	goto	l1267
  6675   001BAE                     l7692:
  6676   001BAE  0EFF               	movlw	255
  6677   001BB0  0101               	movlb	1	; () banked
  6678   001BB2  15A8               	andwf	powf@j& (0+255),w,b
  6679   001BB4  6F28               	movwf	powf@i& (0+255),b
  6680   001BB6  0EFF               	movlw	255
  6681   001BB8  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6682   001BBA  6F29               	movwf	(powf@i+1)& (0+255),b
  6683   001BBC  0EFF               	movlw	255
  6684   001BBE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6685   001BC0  6F2A               	movwf	(powf@i+2)& (0+255),b
  6686   001BC2  0E7F               	movlw	127
  6687   001BC4  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6688   001BC6  6F2B               	movwf	(powf@i+3)& (0+255),b
  6689   001BC8  0E17               	movlw	23
  6690   001BCA  0100               	movlb	0	; () banked
  6691   001BCC  6F70               	movwf	??_powf& (0+255),b
  6692   001BCE  C128  F071         	movff	powf@i,??_powf+1
  6693   001BD2  C129  F072         	movff	powf@i+1,??_powf+2
  6694   001BD6  C12A  F073         	movff	powf@i+2,??_powf+3
  6695   001BDA  C12B  F074         	movff	powf@i+3,??_powf+4
  6696   001BDE                     u10075:
  6697   001BDE  6770               	tstfsz	??_powf& (0+255),b
  6698   001BE0  EFF4  F00D         	goto	u10076
  6699   001BE4  EFFC  F00D         	goto	u10077
  6700   001BE8                     u10076:
  6701   001BE8  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6702   001BEA  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6703   001BEC  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6704   001BEE  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6705   001BF0  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6706   001BF2  2F70               	decfsz	??_powf& (0+255),f,b
  6707   001BF4  EFEF  F00D         	goto	u10075
  6708   001BF8                     u10077:
  6709   001BF8  0E81               	movlw	129
  6710   001BFA  0100               	movlb	0	; () banked
  6711   001BFC  2571               	addwf	(??_powf+1)& (0+255),w,b
  6712   001BFE  0101               	movlb	1	; () banked
  6713   001C00  6FA4               	movwf	powf@k& (0+255),b
  6714   001C02  0EFF               	movlw	255
  6715   001C04  0100               	movlb	0	; () banked
  6716   001C06  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6717   001C08  0101               	movlb	1	; () banked
  6718   001C0A  6FA5               	movwf	(powf@k+1)& (0+255),b
  6719   001C0C  0EFF               	movlw	255
  6720   001C0E  0100               	movlb	0	; () banked
  6721   001C10  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6722   001C12  0101               	movlb	1	; () banked
  6723   001C14  6FA6               	movwf	(powf@k+2)& (0+255),b
  6724   001C16  0EFF               	movlw	255
  6725   001C18  0100               	movlb	0	; () banked
  6726   001C1A  2174               	addwfc	(??_powf+4)& (0+255),w,b
  6727   001C1C  0101               	movlb	1	; () banked
  6728   001C1E  6FA7               	movwf	(powf@k+3)& (0+255),b
  6729   001C20                     
  6730                           ; BSR set to: 1
  6731   001C20  0E00               	movlw	0
  6732   001C22  6F88               	movwf	powf@n& (0+255),b
  6733   001C24  0E00               	movlw	0
  6734   001C26  6F89               	movwf	(powf@n+1)& (0+255),b
  6735   001C28  0E00               	movlw	0
  6736   001C2A  6F8A               	movwf	(powf@n+2)& (0+255),b
  6737   001C2C  0E00               	movlw	0
  6738   001C2E  6F8B               	movwf	(powf@n+3)& (0+255),b
  6739   001C30                     
  6740                           ; BSR set to: 1
  6741   001C30  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
  6742   001C32  EF27  F00E         	goto	u10081
  6743   001C36  0528               	decf	powf@i& (0+255),w,b
  6744   001C38  0E00               	movlw	0
  6745   001C3A  5929               	subwfb	(powf@i+1)& (0+255),w,b
  6746   001C3C  0E00               	movlw	0
  6747   001C3E  592A               	subwfb	(powf@i+2)& (0+255),w,b
  6748   001C40  0E3F               	movlw	63
  6749   001C42  592B               	subwfb	(powf@i+3)& (0+255),w,b
  6750   001C44  A0D8               	btfss	status,0,c
  6751   001C46  EF27  F00E         	goto	u10081
  6752   001C4A  EF29  F00E         	goto	u10080
  6753   001C4E                     u10081:
  6754   001C4E  EF25  F00F         	goto	l7704
  6755   001C52                     u10080:
  6756   001C52                     
  6757                           ; BSR set to: 1
  6758   001C52  C1A4  F070         	movff	powf@k,??_powf
  6759   001C56  0E01               	movlw	1
  6760   001C58  0100               	movlb	0	; () banked
  6761   001C5A  2770               	addwf	??_powf& (0+255),f,b
  6762   001C5C  0E00               	movlw	0
  6763   001C5E  6F71               	movwf	(??_powf+1)& (0+255),b
  6764   001C60  0E00               	movlw	0
  6765   001C62  6F72               	movwf	(??_powf+2)& (0+255),b
  6766   001C64  0E80               	movlw	128
  6767   001C66  6F73               	movwf	(??_powf+3)& (0+255),b
  6768   001C68  0E00               	movlw	0
  6769   001C6A  6F74               	movwf	(??_powf+4)& (0+255),b
  6770   001C6C                     u10095:
  6771   001C6C  6770               	tstfsz	??_powf& (0+255),b
  6772   001C6E  EF3B  F00E         	goto	u10096
  6773   001C72  EF43  F00E         	goto	u10097
  6774   001C76                     u10096:
  6775   001C76  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6776   001C78  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6777   001C7A  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6778   001C7C  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6779   001C7E  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6780   001C80  2F70               	decfsz	??_powf& (0+255),f,b
  6781   001C82  EF36  F00E         	goto	u10095
  6782   001C86                     u10097:
  6783   001C86  0101               	movlb	1	; () banked
  6784   001C88  51A8               	movf	powf@j& (0+255),w,b
  6785   001C8A  0100               	movlb	0	; () banked
  6786   001C8C  2571               	addwf	(??_powf+1)& (0+255),w,b
  6787   001C8E  0101               	movlb	1	; () banked
  6788   001C90  6F88               	movwf	powf@n& (0+255),b
  6789   001C92  51A9               	movf	(powf@j+1)& (0+255),w,b
  6790   001C94  0100               	movlb	0	; () banked
  6791   001C96  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6792   001C98  0101               	movlb	1	; () banked
  6793   001C9A  6F89               	movwf	(powf@n+1)& (0+255),b
  6794   001C9C  51AA               	movf	(powf@j+2)& (0+255),w,b
  6795   001C9E  0100               	movlb	0	; () banked
  6796   001CA0  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6797   001CA2  0101               	movlb	1	; () banked
  6798   001CA4  6F8A               	movwf	(powf@n+2)& (0+255),b
  6799   001CA6  51AB               	movf	(powf@j+3)& (0+255),w,b
  6800   001CA8  0100               	movlb	0	; () banked
  6801   001CAA  2174               	addwfc	(??_powf+4)& (0+255),w,b
  6802   001CAC  0101               	movlb	1	; () banked
  6803   001CAE  6F8B               	movwf	(powf@n+3)& (0+255),b
  6804   001CB0  0E81               	movlw	129
  6805   001CB2  0100               	movlb	0	; () banked
  6806   001CB4  6F70               	movwf	??_powf& (0+255),b
  6807   001CB6  0EFF               	movlw	255
  6808   001CB8  6F71               	movwf	(??_powf+1)& (0+255),b
  6809   001CBA  0EFF               	movlw	255
  6810   001CBC  6F72               	movwf	(??_powf+2)& (0+255),b
  6811   001CBE  0EFF               	movlw	255
  6812   001CC0  6F73               	movwf	(??_powf+3)& (0+255),b
  6813   001CC2  0E17               	movlw	23
  6814   001CC4  6F74               	movwf	(??_powf+4)& (0+255),b
  6815   001CC6  C188  F075         	movff	powf@n,??_powf+5
  6816   001CCA  C189  F076         	movff	powf@n+1,??_powf+6
  6817   001CCE  C18A  F077         	movff	powf@n+2,??_powf+7
  6818   001CD2  C18B  F078         	movff	powf@n+3,??_powf+8
  6819   001CD6                     u10105:
  6820   001CD6  6774               	tstfsz	(??_powf+4)& (0+255),b
  6821   001CD8  EF70  F00E         	goto	u10106
  6822   001CDC  EF78  F00E         	goto	u10107
  6823   001CE0                     u10106:
  6824   001CE0  3578               	rlcf	(??_powf+8)& (0+255),w,b
  6825   001CE2  3378               	rrcf	(??_powf+8)& (0+255),f,b
  6826   001CE4  3377               	rrcf	(??_powf+7)& (0+255),f,b
  6827   001CE6  3376               	rrcf	(??_powf+6)& (0+255),f,b
  6828   001CE8  3375               	rrcf	(??_powf+5)& (0+255),f,b
  6829   001CEA  2F74               	decfsz	(??_powf+4)& (0+255),f,b
  6830   001CEC  EF6B  F00E         	goto	u10105
  6831   001CF0                     u10107:
  6832   001CF0  0100               	movlb	0	; () banked
  6833   001CF2  5175               	movf	(??_powf+5)& (0+255),w,b
  6834   001CF4  2570               	addwf	??_powf& (0+255),w,b
  6835   001CF6  0101               	movlb	1	; () banked
  6836   001CF8  6FA4               	movwf	powf@k& (0+255),b
  6837   001CFA  0E00               	movlw	0
  6838   001CFC  0100               	movlb	0	; () banked
  6839   001CFE  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6840   001D00  0101               	movlb	1	; () banked
  6841   001D02  6FA5               	movwf	(powf@k+1)& (0+255),b
  6842   001D04  0E00               	movlw	0
  6843   001D06  0100               	movlb	0	; () banked
  6844   001D08  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6845   001D0A  0101               	movlb	1	; () banked
  6846   001D0C  6FA6               	movwf	(powf@k+2)& (0+255),b
  6847   001D0E  0E00               	movlw	0
  6848   001D10  0100               	movlb	0	; () banked
  6849   001D12  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6850   001D14  0101               	movlb	1	; () banked
  6851   001D16  6FA7               	movwf	(powf@k+3)& (0+255),b
  6852   001D18  C1A4  F070         	movff	powf@k,??_powf
  6853   001D1C  0EFF               	movlw	255
  6854   001D1E  0100               	movlb	0	; () banked
  6855   001D20  6F71               	movwf	(??_powf+1)& (0+255),b
  6856   001D22  0EFF               	movlw	255
  6857   001D24  6F72               	movwf	(??_powf+2)& (0+255),b
  6858   001D26  0E7F               	movlw	127
  6859   001D28  6F73               	movwf	(??_powf+3)& (0+255),b
  6860   001D2A  0E00               	movlw	0
  6861   001D2C  6F74               	movwf	(??_powf+4)& (0+255),b
  6862   001D2E                     u10115:
  6863   001D2E  6770               	tstfsz	??_powf& (0+255),b
  6864   001D30  EF9C  F00E         	goto	u10116
  6865   001D34  EFA4  F00E         	goto	u10117
  6866   001D38                     u10116:
  6867   001D38  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6868   001D3A  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6869   001D3C  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6870   001D3E  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6871   001D40  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6872   001D42  2F70               	decfsz	??_powf& (0+255),f,b
  6873   001D44  EF97  F00E         	goto	u10115
  6874   001D48                     u10117:
  6875   001D48  0100               	movlb	0	; () banked
  6876   001D4A  1D71               	comf	(??_powf+1)& (0+255),w,b
  6877   001D4C  6F75               	movwf	(??_powf+5)& (0+255),b
  6878   001D4E  1D72               	comf	(??_powf+2)& (0+255),w,b
  6879   001D50  6F76               	movwf	(??_powf+6)& (0+255),b
  6880   001D52  1D73               	comf	(??_powf+3)& (0+255),w,b
  6881   001D54  6F77               	movwf	(??_powf+7)& (0+255),b
  6882   001D56  1D74               	comf	(??_powf+4)& (0+255),w,b
  6883   001D58  6F78               	movwf	(??_powf+8)& (0+255),b
  6884   001D5A  0101               	movlb	1	; () banked
  6885   001D5C  5188               	movf	powf@n& (0+255),w,b
  6886   001D5E  0100               	movlb	0	; () banked
  6887   001D60  1575               	andwf	(??_powf+5)& (0+255),w,b
  6888   001D62  0101               	movlb	1	; () banked
  6889   001D64  6FB0               	movwf	powf@t& (0+255),b
  6890   001D66  5189               	movf	(powf@n+1)& (0+255),w,b
  6891   001D68  0100               	movlb	0	; () banked
  6892   001D6A  1576               	andwf	(??_powf+6)& (0+255),w,b
  6893   001D6C  0101               	movlb	1	; () banked
  6894   001D6E  6FB1               	movwf	(powf@t+1)& (0+255),b
  6895   001D70  518A               	movf	(powf@n+2)& (0+255),w,b
  6896   001D72  0100               	movlb	0	; () banked
  6897   001D74  1577               	andwf	(??_powf+7)& (0+255),w,b
  6898   001D76  0101               	movlb	1	; () banked
  6899   001D78  6FB2               	movwf	(powf@t+2)& (0+255),b
  6900   001D7A  518B               	movf	(powf@n+3)& (0+255),w,b
  6901   001D7C  0100               	movlb	0	; () banked
  6902   001D7E  1578               	andwf	(??_powf+8)& (0+255),w,b
  6903   001D80  0101               	movlb	1	; () banked
  6904   001D82  6FB3               	movwf	(powf@t+3)& (0+255),b
  6905   001D84  51A4               	movf	powf@k& (0+255),w,b
  6906   001D86  0817               	sublw	23
  6907   001D88  0100               	movlb	0	; () banked
  6908   001D8A  6F70               	movwf	??_powf& (0+255),b
  6909   001D8C  0EFF               	movlw	255
  6910   001D8E  0101               	movlb	1	; () banked
  6911   001D90  1588               	andwf	powf@n& (0+255),w,b
  6912   001D92  0100               	movlb	0	; () banked
  6913   001D94  6F71               	movwf	(??_powf+1)& (0+255),b
  6914   001D96  0EFF               	movlw	255
  6915   001D98  0101               	movlb	1	; () banked
  6916   001D9A  1589               	andwf	(powf@n+1)& (0+255),w,b
  6917   001D9C  0100               	movlb	0	; () banked
  6918   001D9E  6F72               	movwf	(??_powf+2)& (0+255),b
  6919   001DA0  0E7F               	movlw	127
  6920   001DA2  0101               	movlb	1	; () banked
  6921   001DA4  158A               	andwf	(powf@n+2)& (0+255),w,b
  6922   001DA6  0100               	movlb	0	; () banked
  6923   001DA8  6F73               	movwf	(??_powf+3)& (0+255),b
  6924   001DAA  0E00               	movlw	0
  6925   001DAC  0101               	movlb	1	; () banked
  6926   001DAE  158B               	andwf	(powf@n+3)& (0+255),w,b
  6927   001DB0  0100               	movlb	0	; () banked
  6928   001DB2  6F74               	movwf	(??_powf+4)& (0+255),b
  6929   001DB4  0E00               	movlw	0
  6930   001DB6  1171               	iorwf	(??_powf+1)& (0+255),w,b
  6931   001DB8  6F75               	movwf	(??_powf+5)& (0+255),b
  6932   001DBA  0E00               	movlw	0
  6933   001DBC  1172               	iorwf	(??_powf+2)& (0+255),w,b
  6934   001DBE  6F76               	movwf	(??_powf+6)& (0+255),b
  6935   001DC0  0E80               	movlw	128
  6936   001DC2  1173               	iorwf	(??_powf+3)& (0+255),w,b
  6937   001DC4  6F77               	movwf	(??_powf+7)& (0+255),b
  6938   001DC6  0E00               	movlw	0
  6939   001DC8  1174               	iorwf	(??_powf+4)& (0+255),w,b
  6940   001DCA  6F78               	movwf	(??_powf+8)& (0+255),b
  6941   001DCC                     u10125:
  6942   001DCC  6770               	tstfsz	??_powf& (0+255),b
  6943   001DCE  EFEB  F00E         	goto	u10126
  6944   001DD2  EFF3  F00E         	goto	u10127
  6945   001DD6                     u10126:
  6946   001DD6  3578               	rlcf	(??_powf+8)& (0+255),w,b
  6947   001DD8  3378               	rrcf	(??_powf+8)& (0+255),f,b
  6948   001DDA  3377               	rrcf	(??_powf+7)& (0+255),f,b
  6949   001DDC  3376               	rrcf	(??_powf+6)& (0+255),f,b
  6950   001DDE  3375               	rrcf	(??_powf+5)& (0+255),f,b
  6951   001DE0  2F70               	decfsz	??_powf& (0+255),f,b
  6952   001DE2  EFE6  F00E         	goto	u10125
  6953   001DE6                     u10127:
  6954   001DE6  C075  F188         	movff	??_powf+5,powf@n
  6955   001DEA  C076  F189         	movff	??_powf+6,powf@n+1
  6956   001DEE  C077  F18A         	movff	??_powf+7,powf@n+2
  6957   001DF2  C078  F18B         	movff	??_powf+8,powf@n+3
  6958   001DF6  0101               	movlb	1	; () banked
  6959   001DF8  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  6960   001DFA  EF03  F00F         	goto	u10130
  6961   001DFE  EF01  F00F         	goto	u10131
  6962   001E02                     u10131:
  6963   001E02  EF0B  F00F         	goto	l7702
  6964   001E06                     u10130:
  6965   001E06                     
  6966                           ; BSR set to: 1
  6967   001E06  1F8B               	comf	(powf@n+3)& (0+255),f,b
  6968   001E08  1F8A               	comf	(powf@n+2)& (0+255),f,b
  6969   001E0A  1F89               	comf	(powf@n+1)& (0+255),f,b
  6970   001E0C  6D88               	negf	powf@n& (0+255),b
  6971   001E0E  0E00               	movlw	0
  6972   001E10  2389               	addwfc	(powf@n+1)& (0+255),f,b
  6973   001E12  238A               	addwfc	(powf@n+2)& (0+255),f,b
  6974   001E14  238B               	addwfc	(powf@n+3)& (0+255),f,b
  6975   001E16                     l7702:
  6976                           
  6977                           ; BSR set to: 1
  6978   001E16  C1A0  F051         	movff	powf@p_h,___flsub@b
  6979   001E1A  C1A1  F052         	movff	powf@p_h+1,___flsub@b+1
  6980   001E1E  C1A2  F053         	movff	powf@p_h+2,___flsub@b+2
  6981   001E22  C1A3  F054         	movff	powf@p_h+3,___flsub@b+3
  6982   001E26  C1B0  F055         	movff	powf@t,___flsub@a
  6983   001E2A  C1B1  F056         	movff	powf@t+1,___flsub@a+1
  6984   001E2E  C1B2  F057         	movff	powf@t+2,___flsub@a+2
  6985   001E32  C1B3  F058         	movff	powf@t+3,___flsub@a+3
  6986   001E36  EC1C  F036         	call	___flsub	;wreg free
  6987   001E3A  C051  F1A0         	movff	?___flsub,powf@p_h
  6988   001E3E  C052  F1A1         	movff	?___flsub+1,powf@p_h+1
  6989   001E42  C053  F1A2         	movff	?___flsub+2,powf@p_h+2
  6990   001E46  C054  F1A3         	movff	?___flsub+3,powf@p_h+3
  6991   001E4A                     l7704:
  6992   001E4A  C1A0  F041         	movff	powf@p_h,___fladd@b
  6993   001E4E  C1A1  F042         	movff	powf@p_h+1,___fladd@b+1
  6994   001E52  C1A2  F043         	movff	powf@p_h+2,___fladd@b+2
  6995   001E56  C1A3  F044         	movff	powf@p_h+3,___fladd@b+3
  6996   001E5A  C16C  F045         	movff	powf@p_l,___fladd@a
  6997   001E5E  C16D  F046         	movff	powf@p_l+1,___fladd@a+1
  6998   001E62  C16E  F047         	movff	powf@p_l+2,___fladd@a+2
  6999   001E66  C16F  F048         	movff	powf@p_l+3,___fladd@a+3
  7000   001E6A  EC9B  F01D         	call	___fladd	;wreg free
  7001   001E6E  C041  F1B0         	movff	?___fladd,powf@t
  7002   001E72  C042  F1B1         	movff	?___fladd+1,powf@t+1
  7003   001E76  C043  F1B2         	movff	?___fladd+2,powf@t+2
  7004   001E7A  C044  F1B3         	movff	?___fladd+3,powf@t+3
  7005   001E7E  C1B0  F198         	movff	powf@t,powf@is
  7006   001E82  C1B1  F199         	movff	powf@t+1,powf@is+1
  7007   001E86  C1B2  F19A         	movff	powf@t+2,powf@is+2
  7008   001E8A  C1B3  F19B         	movff	powf@t+3,powf@is+3
  7009   001E8E  0E00               	movlw	0
  7010   001E90  0101               	movlb	1	; () banked
  7011   001E92  1598               	andwf	powf@is& (0+255),w,b
  7012   001E94  6FB0               	movwf	powf@t& (0+255),b
  7013   001E96  0E80               	movlw	128
  7014   001E98  1599               	andwf	(powf@is+1)& (0+255),w,b
  7015   001E9A  6FB1               	movwf	(powf@t+1)& (0+255),b
  7016   001E9C  0EFF               	movlw	255
  7017   001E9E  159A               	andwf	(powf@is+2)& (0+255),w,b
  7018   001EA0  6FB2               	movwf	(powf@t+2)& (0+255),b
  7019   001EA2  0EFF               	movlw	255
  7020   001EA4  159B               	andwf	(powf@is+3)& (0+255),w,b
  7021   001EA6  6FB3               	movwf	(powf@t+3)& (0+255),b
  7022   001EA8                     
  7023                           ; BSR set to: 1
  7024   001EA8  C1B0  F00F         	movff	powf@t,___flmul@b
  7025   001EAC  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7026   001EB0  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7027   001EB4  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7028   001EB8  0E00               	movlw	0
  7029   001EBA  6E13               	movwf	___flmul@a^0,c
  7030   001EBC  0E72               	movlw	114
  7031   001EBE  6E14               	movwf	(___flmul@a+1)^0,c
  7032   001EC0  0E31               	movlw	49
  7033   001EC2  6E15               	movwf	(___flmul@a+2)^0,c
  7034   001EC4  0E3F               	movlw	63
  7035   001EC6  6E16               	movwf	(___flmul@a+3)^0,c
  7036   001EC8  ECF6  F01F         	call	___flmul	;wreg free
  7037   001ECC  C00F  F17C         	movff	?___flmul,powf@u
  7038   001ED0  C010  F17D         	movff	?___flmul+1,powf@u+1
  7039   001ED4  C011  F17E         	movff	?___flmul+2,powf@u+2
  7040   001ED8  C012  F17F         	movff	?___flmul+3,powf@u+3
  7041   001EDC  C1A0  F055         	movff	powf@p_h,___flsub@a
  7042   001EE0  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  7043   001EE4  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  7044   001EE8  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  7045   001EEC  C1B0  F051         	movff	powf@t,___flsub@b
  7046   001EF0  C1B1  F052         	movff	powf@t+1,___flsub@b+1
  7047   001EF4  C1B2  F053         	movff	powf@t+2,___flsub@b+2
  7048   001EF8  C1B3  F054         	movff	powf@t+3,___flsub@b+3
  7049   001EFC  EC1C  F036         	call	___flsub	;wreg free
  7050   001F00  C051  F19C         	movff	?___flsub,_powf$1841
  7051   001F04  C052  F19D         	movff	?___flsub+1,_powf$1841+1
  7052   001F08  C053  F19E         	movff	?___flsub+2,_powf$1841+2
  7053   001F0C  C054  F19F         	movff	?___flsub+3,_powf$1841+3
  7054   001F10  0E18               	movlw	24
  7055   001F12  6E13               	movwf	___flmul@a^0,c
  7056   001F14  0E72               	movlw	114
  7057   001F16  6E14               	movwf	(___flmul@a+1)^0,c
  7058   001F18  0E31               	movlw	49
  7059   001F1A  6E15               	movwf	(___flmul@a+2)^0,c
  7060   001F1C  0E3F               	movlw	63
  7061   001F1E  6E16               	movwf	(___flmul@a+3)^0,c
  7062   001F20  C19C  F055         	movff	_powf$1841,___flsub@a
  7063   001F24  C19D  F056         	movff	_powf$1841+1,___flsub@a+1
  7064   001F28  C19E  F057         	movff	_powf$1841+2,___flsub@a+2
  7065   001F2C  C19F  F058         	movff	_powf$1841+3,___flsub@a+3
  7066   001F30  C16C  F051         	movff	powf@p_l,___flsub@b
  7067   001F34  C16D  F052         	movff	powf@p_l+1,___flsub@b+1
  7068   001F38  C16E  F053         	movff	powf@p_l+2,___flsub@b+2
  7069   001F3C  C16F  F054         	movff	powf@p_l+3,___flsub@b+3
  7070   001F40  EC1C  F036         	call	___flsub	;wreg free
  7071   001F44  C051  F00F         	movff	?___flsub,___flmul@b
  7072   001F48  C052  F010         	movff	?___flsub+1,___flmul@b+1
  7073   001F4C  C053  F011         	movff	?___flsub+2,___flmul@b+2
  7074   001F50  C054  F012         	movff	?___flsub+3,___flmul@b+3
  7075   001F54  ECF6  F01F         	call	___flmul	;wreg free
  7076   001F58  C00F  F114         	movff	?___flmul,_powf$1851
  7077   001F5C  C010  F115         	movff	?___flmul+1,_powf$1851+1
  7078   001F60  C011  F116         	movff	?___flmul+2,_powf$1851+2
  7079   001F64  C012  F117         	movff	?___flmul+3,_powf$1851+3
  7080   001F68  C114  F041         	movff	_powf$1851,___fladd@b
  7081   001F6C  C115  F042         	movff	_powf$1851+1,___fladd@b+1
  7082   001F70  C116  F043         	movff	_powf$1851+2,___fladd@b+2
  7083   001F74  C117  F044         	movff	_powf$1851+3,___fladd@b+3
  7084   001F78  0E8C               	movlw	140
  7085   001F7A  6E13               	movwf	___flmul@a^0,c
  7086   001F7C  0EBE               	movlw	190
  7087   001F7E  6E14               	movwf	(___flmul@a+1)^0,c
  7088   001F80  0EBF               	movlw	191
  7089   001F82  6E15               	movwf	(___flmul@a+2)^0,c
  7090   001F84  0E35               	movlw	53
  7091   001F86  6E16               	movwf	(___flmul@a+3)^0,c
  7092   001F88  C1B0  F00F         	movff	powf@t,___flmul@b
  7093   001F8C  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7094   001F90  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7095   001F94  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7096   001F98  ECF6  F01F         	call	___flmul	;wreg free
  7097   001F9C  C00F  F045         	movff	?___flmul,___fladd@a
  7098   001FA0  C010  F046         	movff	?___flmul+1,___fladd@a+1
  7099   001FA4  C011  F047         	movff	?___flmul+2,___fladd@a+2
  7100   001FA8  C012  F048         	movff	?___flmul+3,___fladd@a+3
  7101   001FAC  EC9B  F01D         	call	___fladd	;wreg free
  7102   001FB0  C041  F180         	movff	?___fladd,powf@v
  7103   001FB4  C042  F181         	movff	?___fladd+1,powf@v+1
  7104   001FB8  C043  F182         	movff	?___fladd+2,powf@v+2
  7105   001FBC  C044  F183         	movff	?___fladd+3,powf@v+3
  7106   001FC0  C17C  F041         	movff	powf@u,___fladd@b
  7107   001FC4  C17D  F042         	movff	powf@u+1,___fladd@b+1
  7108   001FC8  C17E  F043         	movff	powf@u+2,___fladd@b+2
  7109   001FCC  C17F  F044         	movff	powf@u+3,___fladd@b+3
  7110   001FD0  C180  F045         	movff	powf@v,___fladd@a
  7111   001FD4  C181  F046         	movff	powf@v+1,___fladd@a+1
  7112   001FD8  C182  F047         	movff	powf@v+2,___fladd@a+2
  7113   001FDC  C183  F048         	movff	powf@v+3,___fladd@a+3
  7114   001FE0  EC9B  F01D         	call	___fladd	;wreg free
  7115   001FE4  C041  F1B4         	movff	?___fladd,powf@z
  7116   001FE8  C042  F1B5         	movff	?___fladd+1,powf@z+1
  7117   001FEC  C043  F1B6         	movff	?___fladd+2,powf@z+2
  7118   001FF0  C044  F1B7         	movff	?___fladd+3,powf@z+3
  7119   001FF4  C17C  F055         	movff	powf@u,___flsub@a
  7120   001FF8  C17D  F056         	movff	powf@u+1,___flsub@a+1
  7121   001FFC  C17E  F057         	movff	powf@u+2,___flsub@a+2
  7122   002000  C17F  F058         	movff	powf@u+3,___flsub@a+3
  7123   002004  C1B4  F051         	movff	powf@z,___flsub@b
  7124   002008  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  7125   00200C  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  7126   002010  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  7127   002014  EC1C  F036         	call	___flsub	;wreg free
  7128   002018  C051  F19C         	movff	?___flsub,_powf$1841
  7129   00201C  C052  F19D         	movff	?___flsub+1,_powf$1841+1
  7130   002020  C053  F19E         	movff	?___flsub+2,_powf$1841+2
  7131   002024  C054  F19F         	movff	?___flsub+3,_powf$1841+3
  7132   002028  C180  F051         	movff	powf@v,___flsub@b
  7133   00202C  C181  F052         	movff	powf@v+1,___flsub@b+1
  7134   002030  C182  F053         	movff	powf@v+2,___flsub@b+2
  7135   002034  C183  F054         	movff	powf@v+3,___flsub@b+3
  7136   002038  C19C  F055         	movff	_powf$1841,___flsub@a
  7137   00203C  C19D  F056         	movff	_powf$1841+1,___flsub@a+1
  7138   002040  C19E  F057         	movff	_powf$1841+2,___flsub@a+2
  7139   002044  C19F  F058         	movff	_powf$1841+3,___flsub@a+3
  7140   002048  EC1C  F036         	call	___flsub	;wreg free
  7141   00204C  C051  F144         	movff	?___flsub,powf@w
  7142   002050  C052  F145         	movff	?___flsub+1,powf@w+1
  7143   002054  C053  F146         	movff	?___flsub+2,powf@w+2
  7144   002058  C054  F147         	movff	?___flsub+3,powf@w+3
  7145   00205C  C1B4  F00F         	movff	powf@z,___flmul@b
  7146   002060  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7147   002064  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7148   002068  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7149   00206C  C1B4  F013         	movff	powf@z,___flmul@a
  7150   002070  C1B5  F014         	movff	powf@z+1,___flmul@a+1
  7151   002074  C1B6  F015         	movff	powf@z+2,___flmul@a+2
  7152   002078  C1B7  F016         	movff	powf@z+3,___flmul@a+3
  7153   00207C  ECF6  F01F         	call	___flmul	;wreg free
  7154   002080  C00F  F1B0         	movff	?___flmul,powf@t
  7155   002084  C010  F1B1         	movff	?___flmul+1,powf@t+1
  7156   002088  C011  F1B2         	movff	?___flmul+2,powf@t+2
  7157   00208C  C012  F1B3         	movff	?___flmul+3,powf@t+3
  7158   002090  0E0E               	movlw	14
  7159   002092  6E45               	movwf	___fladd@a^0,c
  7160   002094  0EEA               	movlw	234
  7161   002096  6E46               	movwf	(___fladd@a+1)^0,c
  7162   002098  0EDD               	movlw	221
  7163   00209A  6E47               	movwf	(___fladd@a+2)^0,c
  7164   00209C  0EB5               	movlw	181
  7165   00209E  6E48               	movwf	(___fladd@a+3)^0,c
  7166   0020A0  0E4C               	movlw	76
  7167   0020A2  6E13               	movwf	___flmul@a^0,c
  7168   0020A4  0EBB               	movlw	187
  7169   0020A6  6E14               	movwf	(___flmul@a+1)^0,c
  7170   0020A8  0E31               	movlw	49
  7171   0020AA  6E15               	movwf	(___flmul@a+2)^0,c
  7172   0020AC  0E33               	movlw	51
  7173   0020AE  6E16               	movwf	(___flmul@a+3)^0,c
  7174   0020B0  C1B0  F00F         	movff	powf@t,___flmul@b
  7175   0020B4  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7176   0020B8  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7177   0020BC  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7178   0020C0  ECF6  F01F         	call	___flmul	;wreg free
  7179   0020C4  C00F  F041         	movff	?___flmul,___fladd@b
  7180   0020C8  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7181   0020CC  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7182   0020D0  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7183   0020D4  EC9B  F01D         	call	___fladd	;wreg free
  7184   0020D8  C041  F148         	movff	?___fladd,_powf$1838
  7185   0020DC  C042  F149         	movff	?___fladd+1,_powf$1838+1
  7186   0020E0  C043  F14A         	movff	?___fladd+2,_powf$1838+2
  7187   0020E4  C044  F14B         	movff	?___fladd+3,_powf$1838+3
  7188   0020E8  0E55               	movlw	85
  7189   0020EA  6E45               	movwf	___fladd@a^0,c
  7190   0020EC  0EB3               	movlw	179
  7191   0020EE  6E46               	movwf	(___fladd@a+1)^0,c
  7192   0020F0  0E8A               	movlw	138
  7193   0020F2  6E47               	movwf	(___fladd@a+2)^0,c
  7194   0020F4  0E38               	movlw	56
  7195   0020F6  6E48               	movwf	(___fladd@a+3)^0,c
  7196   0020F8  C1B0  F013         	movff	powf@t,___flmul@a
  7197   0020FC  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7198   002100  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7199   002104  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7200   002108  C148  F00F         	movff	_powf$1838,___flmul@b
  7201   00210C  C149  F010         	movff	_powf$1838+1,___flmul@b+1
  7202   002110  C14A  F011         	movff	_powf$1838+2,___flmul@b+2
  7203   002114  C14B  F012         	movff	_powf$1838+3,___flmul@b+3
  7204   002118  ECF6  F01F         	call	___flmul	;wreg free
  7205   00211C  C00F  F041         	movff	?___flmul,___fladd@b
  7206   002120  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7207   002124  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7208   002128  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7209   00212C  EC9B  F01D         	call	___fladd	;wreg free
  7210   002130  C041  F158         	movff	?___fladd,_powf$1839
  7211   002134  C042  F159         	movff	?___fladd+1,_powf$1839+1
  7212   002138  C043  F15A         	movff	?___fladd+2,_powf$1839+2
  7213   00213C  C044  F15B         	movff	?___fladd+3,_powf$1839+3
  7214   002140  0E61               	movlw	97
  7215   002142  6E45               	movwf	___fladd@a^0,c
  7216   002144  0E0B               	movlw	11
  7217   002146  6E46               	movwf	(___fladd@a+1)^0,c
  7218   002148  0E36               	movlw	54
  7219   00214A  6E47               	movwf	(___fladd@a+2)^0,c
  7220   00214C  0EBB               	movlw	187
  7221   00214E  6E48               	movwf	(___fladd@a+3)^0,c
  7222   002150  C1B0  F013         	movff	powf@t,___flmul@a
  7223   002154  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7224   002158  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7225   00215C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7226   002160  C158  F00F         	movff	_powf$1839,___flmul@b
  7227   002164  C159  F010         	movff	_powf$1839+1,___flmul@b+1
  7228   002168  C15A  F011         	movff	_powf$1839+2,___flmul@b+2
  7229   00216C  C15B  F012         	movff	_powf$1839+3,___flmul@b+3
  7230   002170  ECF6  F01F         	call	___flmul	;wreg free
  7231   002174  C00F  F041         	movff	?___flmul,___fladd@b
  7232   002178  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7233   00217C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7234   002180  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7235   002184  EC9B  F01D         	call	___fladd	;wreg free
  7236   002188  C041  F14C         	movff	?___fladd,_powf$1840
  7237   00218C  C042  F14D         	movff	?___fladd+1,_powf$1840+1
  7238   002190  C043  F14E         	movff	?___fladd+2,_powf$1840+2
  7239   002194  C044  F14F         	movff	?___fladd+3,_powf$1840+3
  7240   002198  0EAB               	movlw	171
  7241   00219A  6E45               	movwf	___fladd@a^0,c
  7242   00219C  0EAA               	movlw	170
  7243   00219E  6E46               	movwf	(___fladd@a+1)^0,c
  7244   0021A0  0E2A               	movlw	42
  7245   0021A2  6E47               	movwf	(___fladd@a+2)^0,c
  7246   0021A4  0E3E               	movlw	62
  7247   0021A6  6E48               	movwf	(___fladd@a+3)^0,c
  7248   0021A8  C1B0  F013         	movff	powf@t,___flmul@a
  7249   0021AC  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7250   0021B0  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7251   0021B4  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7252   0021B8  C14C  F00F         	movff	_powf$1840,___flmul@b
  7253   0021BC  C14D  F010         	movff	_powf$1840+1,___flmul@b+1
  7254   0021C0  C14E  F011         	movff	_powf$1840+2,___flmul@b+2
  7255   0021C4  C14F  F012         	movff	_powf$1840+3,___flmul@b+3
  7256   0021C8  ECF6  F01F         	call	___flmul	;wreg free
  7257   0021CC  C00F  F041         	movff	?___flmul,___fladd@b
  7258   0021D0  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7259   0021D4  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7260   0021D8  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7261   0021DC  EC9B  F01D         	call	___fladd	;wreg free
  7262   0021E0  C041  F138         	movff	?___fladd,_powf$1842
  7263   0021E4  C042  F139         	movff	?___fladd+1,_powf$1842+1
  7264   0021E8  C043  F13A         	movff	?___fladd+2,_powf$1842+2
  7265   0021EC  C044  F13B         	movff	?___fladd+3,_powf$1842+3
  7266   0021F0  C1B4  F051         	movff	powf@z,___flsub@b
  7267   0021F4  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  7268   0021F8  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  7269   0021FC  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  7270   002200  C1B0  F013         	movff	powf@t,___flmul@a
  7271   002204  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7272   002208  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7273   00220C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7274   002210  C138  F00F         	movff	_powf$1842,___flmul@b
  7275   002214  C139  F010         	movff	_powf$1842+1,___flmul@b+1
  7276   002218  C13A  F011         	movff	_powf$1842+2,___flmul@b+2
  7277   00221C  C13B  F012         	movff	_powf$1842+3,___flmul@b+3
  7278   002220  ECF6  F01F         	call	___flmul	;wreg free
  7279   002224  C00F  F055         	movff	?___flmul,___flsub@a
  7280   002228  C010  F056         	movff	?___flmul+1,___flsub@a+1
  7281   00222C  C011  F057         	movff	?___flmul+2,___flsub@a+2
  7282   002230  C012  F058         	movff	?___flmul+3,___flsub@a+3
  7283   002234  EC1C  F036         	call	___flsub	;wreg free
  7284   002238  C051  F18C         	movff	?___flsub,powf@t1
  7285   00223C  C052  F18D         	movff	?___flsub+1,powf@t1+1
  7286   002240  C053  F18E         	movff	?___flsub+2,powf@t1+2
  7287   002244  C054  F18F         	movff	?___flsub+3,powf@t1+3
  7288   002248  0E00               	movlw	0
  7289   00224A  6E45               	movwf	___fladd@a^0,c
  7290   00224C  0E00               	movlw	0
  7291   00224E  6E46               	movwf	(___fladd@a+1)^0,c
  7292   002250  0E00               	movlw	0
  7293   002252  6E47               	movwf	(___fladd@a+2)^0,c
  7294   002254  0EC0               	movlw	192
  7295   002256  6E48               	movwf	(___fladd@a+3)^0,c
  7296   002258  C18C  F041         	movff	powf@t1,___fladd@b
  7297   00225C  C18D  F042         	movff	powf@t1+1,___fladd@b+1
  7298   002260  C18E  F043         	movff	powf@t1+2,___fladd@b+2
  7299   002264  C18F  F044         	movff	powf@t1+3,___fladd@b+3
  7300   002268  EC9B  F01D         	call	___fladd	;wreg free
  7301   00226C  C041  F02C         	movff	?___fladd,___fldiv@a
  7302   002270  C042  F02D         	movff	?___fladd+1,___fldiv@a+1
  7303   002274  C043  F02E         	movff	?___fladd+2,___fldiv@a+2
  7304   002278  C044  F02F         	movff	?___fladd+3,___fldiv@a+3
  7305   00227C  C18C  F013         	movff	powf@t1,___flmul@a
  7306   002280  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  7307   002284  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  7308   002288  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  7309   00228C  C1B4  F00F         	movff	powf@z,___flmul@b
  7310   002290  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7311   002294  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7312   002298  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7313   00229C  ECF6  F01F         	call	___flmul	;wreg free
  7314   0022A0  C00F  F028         	movff	?___flmul,___fldiv@b
  7315   0022A4  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  7316   0022A8  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  7317   0022AC  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  7318   0022B0  ECF8  F023         	call	___fldiv	;wreg free
  7319   0022B4  C028  F13C         	movff	?___fldiv,_powf$1846
  7320   0022B8  C029  F13D         	movff	?___fldiv+1,_powf$1846+1
  7321   0022BC  C02A  F13E         	movff	?___fldiv+2,_powf$1846+2
  7322   0022C0  C02B  F13F         	movff	?___fldiv+3,_powf$1846+3
  7323   0022C4  C144  F045         	movff	powf@w,___fladd@a
  7324   0022C8  C145  F046         	movff	powf@w+1,___fladd@a+1
  7325   0022CC  C146  F047         	movff	powf@w+2,___fladd@a+2
  7326   0022D0  C147  F048         	movff	powf@w+3,___fladd@a+3
  7327   0022D4  C144  F013         	movff	powf@w,___flmul@a
  7328   0022D8  C145  F014         	movff	powf@w+1,___flmul@a+1
  7329   0022DC  C146  F015         	movff	powf@w+2,___flmul@a+2
  7330   0022E0  C147  F016         	movff	powf@w+3,___flmul@a+3
  7331   0022E4  C1B4  F00F         	movff	powf@z,___flmul@b
  7332   0022E8  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7333   0022EC  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7334   0022F0  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7335   0022F4  ECF6  F01F         	call	___flmul	;wreg free
  7336   0022F8  C00F  F041         	movff	?___flmul,___fladd@b
  7337   0022FC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7338   002300  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7339   002304  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7340   002308  EC9B  F01D         	call	___fladd	;wreg free
  7341   00230C  C041  F118         	movff	?___fladd,_powf$1852
  7342   002310  C042  F119         	movff	?___fladd+1,_powf$1852+1
  7343   002314  C043  F11A         	movff	?___fladd+2,_powf$1852+2
  7344   002318  C044  F11B         	movff	?___fladd+3,_powf$1852+3
  7345   00231C  C13C  F051         	movff	_powf$1846,___flsub@b
  7346   002320  C13D  F052         	movff	_powf$1846+1,___flsub@b+1
  7347   002324  C13E  F053         	movff	_powf$1846+2,___flsub@b+2
  7348   002328  C13F  F054         	movff	_powf$1846+3,___flsub@b+3
  7349   00232C  C118  F055         	movff	_powf$1852,___flsub@a
  7350   002330  C119  F056         	movff	_powf$1852+1,___flsub@a+1
  7351   002334  C11A  F057         	movff	_powf$1852+2,___flsub@a+2
  7352   002338  C11B  F058         	movff	_powf$1852+3,___flsub@a+3
  7353   00233C  EC1C  F036         	call	___flsub	;wreg free
  7354   002340  C051  F150         	movff	?___flsub,powf@r
  7355   002344  C052  F151         	movff	?___flsub+1,powf@r+1
  7356   002348  C053  F152         	movff	?___flsub+2,powf@r+2
  7357   00234C  C054  F153         	movff	?___flsub+3,powf@r+3
  7358   002350  C1B4  F055         	movff	powf@z,___flsub@a
  7359   002354  C1B5  F056         	movff	powf@z+1,___flsub@a+1
  7360   002358  C1B6  F057         	movff	powf@z+2,___flsub@a+2
  7361   00235C  C1B7  F058         	movff	powf@z+3,___flsub@a+3
  7362   002360  C150  F051         	movff	powf@r,___flsub@b
  7363   002364  C151  F052         	movff	powf@r+1,___flsub@b+1
  7364   002368  C152  F053         	movff	powf@r+2,___flsub@b+2
  7365   00236C  C153  F054         	movff	powf@r+3,___flsub@b+3
  7366   002370  EC1C  F036         	call	___flsub	;wreg free
  7367   002374  C051  F19C         	movff	?___flsub,_powf$1841
  7368   002378  C052  F19D         	movff	?___flsub+1,_powf$1841+1
  7369   00237C  C053  F19E         	movff	?___flsub+2,_powf$1841+2
  7370   002380  C054  F19F         	movff	?___flsub+3,_powf$1841+3
  7371   002384  0E00               	movlw	0
  7372   002386  6E51               	movwf	___flsub@b^0,c
  7373   002388  0E00               	movlw	0
  7374   00238A  6E52               	movwf	(___flsub@b+1)^0,c
  7375   00238C  0E80               	movlw	128
  7376   00238E  6E53               	movwf	(___flsub@b+2)^0,c
  7377   002390  0E3F               	movlw	63
  7378   002392  6E54               	movwf	(___flsub@b+3)^0,c
  7379   002394  C19C  F055         	movff	_powf$1841,___flsub@a
  7380   002398  C19D  F056         	movff	_powf$1841+1,___flsub@a+1
  7381   00239C  C19E  F057         	movff	_powf$1841+2,___flsub@a+2
  7382   0023A0  C19F  F058         	movff	_powf$1841+3,___flsub@a+3
  7383   0023A4  EC1C  F036         	call	___flsub	;wreg free
  7384   0023A8  C051  F1B4         	movff	?___flsub,powf@z
  7385   0023AC  C052  F1B5         	movff	?___flsub+1,powf@z+1
  7386   0023B0  C053  F1B6         	movff	?___flsub+2,powf@z+2
  7387   0023B4  C054  F1B7         	movff	?___flsub+3,powf@z+3
  7388   0023B8  C1B4  F1A8         	movff	powf@z,powf@j
  7389   0023BC  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  7390   0023C0  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  7391   0023C4  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  7392   0023C8  C188  F070         	movff	powf@n,??_powf
  7393   0023CC  C189  F071         	movff	powf@n+1,??_powf+1
  7394   0023D0  C18A  F072         	movff	powf@n+2,??_powf+2
  7395   0023D4  C18B  F073         	movff	powf@n+3,??_powf+3
  7396   0023D8  0E17               	movlw	23
  7397   0023DA                     u10145:
  7398   0023DA  90D8               	bcf	status,0,c
  7399   0023DC  0100               	movlb	0	; () banked
  7400   0023DE  3770               	rlcf	??_powf& (0+255),f,b
  7401   0023E0  3771               	rlcf	(??_powf+1)& (0+255),f,b
  7402   0023E2  3772               	rlcf	(??_powf+2)& (0+255),f,b
  7403   0023E4  3773               	rlcf	(??_powf+3)& (0+255),f,b
  7404   0023E6  2EE8               	decfsz	wreg,f,c
  7405   0023E8  EFED  F011         	goto	u10145
  7406   0023EC  5170               	movf	??_powf& (0+255),w,b
  7407   0023EE  0101               	movlb	1	; () banked
  7408   0023F0  27A8               	addwf	powf@j& (0+255),f,b
  7409   0023F2  0100               	movlb	0	; () banked
  7410   0023F4  5171               	movf	(??_powf+1)& (0+255),w,b
  7411   0023F6  0101               	movlb	1	; () banked
  7412   0023F8  23A9               	addwfc	(powf@j+1)& (0+255),f,b
  7413   0023FA  0100               	movlb	0	; () banked
  7414   0023FC  5172               	movf	(??_powf+2)& (0+255),w,b
  7415   0023FE  0101               	movlb	1	; () banked
  7416   002400  23AA               	addwfc	(powf@j+2)& (0+255),f,b
  7417   002402  0100               	movlb	0	; () banked
  7418   002404  5173               	movf	(??_powf+3)& (0+255),w,b
  7419   002406  0101               	movlb	1	; () banked
  7420   002408  23AB               	addwfc	(powf@j+3)& (0+255),f,b
  7421   00240A                     
  7422                           ; BSR set to: 1
  7423   00240A  0E17               	movlw	23
  7424   00240C  0100               	movlb	0	; () banked
  7425   00240E  6F70               	movwf	??_powf& (0+255),b
  7426   002410  C1A8  F071         	movff	powf@j,??_powf+1
  7427   002414  C1A9  F072         	movff	powf@j+1,??_powf+2
  7428   002418  C1AA  F073         	movff	powf@j+2,??_powf+3
  7429   00241C  C1AB  F074         	movff	powf@j+3,??_powf+4
  7430   002420                     u10155:
  7431   002420  6770               	tstfsz	??_powf& (0+255),b
  7432   002422  EF15  F012         	goto	u10156
  7433   002426  EF1D  F012         	goto	u10157
  7434   00242A                     u10156:
  7435   00242A  3574               	rlcf	(??_powf+4)& (0+255),w,b
  7436   00242C  3374               	rrcf	(??_powf+4)& (0+255),f,b
  7437   00242E  3373               	rrcf	(??_powf+3)& (0+255),f,b
  7438   002430  3372               	rrcf	(??_powf+2)& (0+255),f,b
  7439   002432  3371               	rrcf	(??_powf+1)& (0+255),f,b
  7440   002434  2F70               	decfsz	??_powf& (0+255),f,b
  7441   002436  EF10  F012         	goto	u10155
  7442   00243A                     u10157:
  7443   00243A  0100               	movlb	0	; () banked
  7444   00243C  BF74               	btfsc	(??_powf+4)& (0+255),7,b
  7445   00243E  EF2D  F012         	goto	u10160
  7446   002442  5174               	movf	(??_powf+4)& (0+255),w,b
  7447   002444  1173               	iorwf	(??_powf+3)& (0+255),w,b
  7448   002446  1172               	iorwf	(??_powf+2)& (0+255),w,b
  7449   002448  E106               	bnz	u10161
  7450   00244A  0571               	decf	(??_powf+1)& (0+255),w,b
  7451   00244C  B0D8               	btfsc	status,0,c
  7452   00244E  EF2B  F012         	goto	u10161
  7453   002452  EF2D  F012         	goto	u10160
  7454   002456                     u10161:
  7455   002456  EF45  F012         	goto	l1333
  7456   00245A                     u10160:
  7457   00245A                     
  7458                           ; BSR set to: 0
  7459   00245A  C1B4  F028         	movff	powf@z,scalbnf@x
  7460   00245E  C1B5  F029         	movff	powf@z+1,scalbnf@x+1
  7461   002462  C1B6  F02A         	movff	powf@z+2,scalbnf@x+2
  7462   002466  C1B7  F02B         	movff	powf@z+3,scalbnf@x+3
  7463   00246A  C188  F02C         	movff	powf@n,scalbnf@n
  7464   00246E  C189  F02D         	movff	powf@n+1,scalbnf@n+1
  7465   002472  ECC7  F028         	call	_scalbnf	;wreg free
  7466   002476  C028  F1B4         	movff	?_scalbnf,powf@z
  7467   00247A  C029  F1B5         	movff	?_scalbnf+1,powf@z+1
  7468   00247E  C02A  F1B6         	movff	?_scalbnf+2,powf@z+2
  7469   002482  C02B  F1B7         	movff	?_scalbnf+3,powf@z+3
  7470   002486  EF4D  F012         	goto	l7754
  7471   00248A                     l1333:
  7472                           
  7473                           ; BSR set to: 0
  7474   00248A  C1A8  F1B4         	movff	powf@j,powf@z
  7475   00248E  C1A9  F1B5         	movff	powf@j+1,powf@z+1
  7476   002492  C1AA  F1B6         	movff	powf@j+2,powf@z+2
  7477   002496  C1AB  F1B7         	movff	powf@j+3,powf@z+3
  7478   00249A                     l7754:
  7479   00249A  0101               	movlb	1	; () banked
  7480   00249C  51B4               	movf	powf@z& (0+255),w,b
  7481   00249E  11B5               	iorwf	(powf@z+1)& (0+255),w,b
  7482   0024A0  11B6               	iorwf	(powf@z+2)& (0+255),w,b
  7483   0024A2  11B7               	iorwf	(powf@z+3)& (0+255),w,b
  7484   0024A4  B4D8               	btfsc	status,2,c
  7485   0024A6  EF57  F012         	goto	u10171
  7486   0024AA  EF59  F012         	goto	u10170
  7487   0024AE                     u10171:
  7488   0024AE  EF3F  F003         	goto	l7440
  7489   0024B2                     u10170:
  7490   0024B2                     
  7491                           ; BSR set to: 1
  7492   0024B2  5164               	movf	powf@sn& (0+255),w,b
  7493   0024B4  1BB4               	xorwf	powf@z& (0+255),f,b
  7494   0024B6  5165               	movf	(powf@sn+1)& (0+255),w,b
  7495   0024B8  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
  7496   0024BA  5166               	movf	(powf@sn+2)& (0+255),w,b
  7497   0024BC  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
  7498   0024BE  5167               	movf	(powf@sn+3)& (0+255),w,b
  7499   0024C0  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
  7500   0024C2  EF3F  F003         	goto	l7440
  7501   0024C6                     l1267:
  7502   0024C6  0012               	return		;funcret
  7503   0024C8                     __end_of_powf:
  7504                           	callstack 0
  7505                           
  7506 ;; *************** function _sqrtf *****************
  7507 ;; Defined at:
  7508 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sqrtf.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  x               4    0[COMRAM] float 
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;  ix              4   33[COMRAM] struct .
  7513 ;;  r               4   29[COMRAM] unsigned long 
  7514 ;;  m               4   25[COMRAM] long 
  7515 ;;  t               4   21[COMRAM] long 
  7516 ;;  q               4   17[COMRAM] long 
  7517 ;;  i               4   13[COMRAM] long 
  7518 ;;  s               4    9[COMRAM] long 
  7519 ;;  z               4    0        float 
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  4    0[COMRAM] float 
  7522 ;; Registers used:
  7523 ;;		wreg, status,2, status,0
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7529 ;;      Params:         4       0       0       0       0       0       0       0       0
  7530 ;;      Locals:        28       0       0       0       0       0       0       0       0
  7531 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7532 ;;      Totals:        37       0       0       0       0       0       0       0       0
  7533 ;;Total ram usage:       37 bytes
  7534 ;; Hardware stack levels used: 1
  7535 ;; Hardware stack levels required when called: 1
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_powf
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           	psect	text7
  7544   004412                     __ptext7:
  7545                           	callstack 0
  7546   004412                     _sqrtf:
  7547                           	callstack 27
  7548   004412  C001  F022         	movff	sqrtf@x,sqrtf@ix
  7549   004416  C002  F023         	movff	sqrtf@x+1,sqrtf@ix+1
  7550   00441A  C003  F024         	movff	sqrtf@x+2,sqrtf@ix+2
  7551   00441E  C004  F025         	movff	sqrtf@x+3,sqrtf@ix+3
  7552   004422  0E00               	movlw	0
  7553   004424  1422               	andwf	sqrtf@ix^0,w,c
  7554   004426  6E05               	movwf	??_sqrtf^0,c
  7555   004428  0E00               	movlw	0
  7556   00442A  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7557   00442C  6E06               	movwf	(??_sqrtf+1)^0,c
  7558   00442E  0E80               	movlw	128
  7559   004430  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7560   004432  6E07               	movwf	(??_sqrtf+2)^0,c
  7561   004434  0E7F               	movlw	127
  7562   004436  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7563   004438  6E08               	movwf	(??_sqrtf+3)^0,c
  7564   00443A  0E80               	movlw	128
  7565   00443C  1807               	xorwf	(??_sqrtf+2)^0,w,c
  7566   00443E  E109               	bnz	u9341
  7567   004440  0E7F               	movlw	127
  7568   004442  1808               	xorwf	(??_sqrtf+3)^0,w,c
  7569   004444  1005               	iorwf	??_sqrtf^0,w,c
  7570   004446  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7571   004448  A4D8               	btfss	status,2,c
  7572   00444A  EF29  F022         	goto	u9341
  7573   00444E  EF2B  F022         	goto	u9340
  7574   004452                     u9341:
  7575   004452  EF5B  F022         	goto	l7206
  7576   004456                     u9340:
  7577   004456  0EFF               	movlw	255
  7578   004458  1422               	andwf	sqrtf@ix^0,w,c
  7579   00445A  6E05               	movwf	??_sqrtf^0,c
  7580   00445C  0EFF               	movlw	255
  7581   00445E  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7582   004460  6E06               	movwf	(??_sqrtf+1)^0,c
  7583   004462  0E7F               	movlw	127
  7584   004464  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7585   004466  6E07               	movwf	(??_sqrtf+2)^0,c
  7586   004468  0E00               	movlw	0
  7587   00446A  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7588   00446C  6E08               	movwf	(??_sqrtf+3)^0,c
  7589   00446E  5005               	movf	??_sqrtf^0,w,c
  7590   004470  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7591   004472  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7592   004474  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7593   004476  A4D8               	btfss	status,2,c
  7594   004478  EF40  F022         	goto	u9351
  7595   00447C  EF42  F022         	goto	u9350
  7596   004480                     u9351:
  7597   004480  EF49  F022         	goto	l7200
  7598   004484                     u9350:
  7599   004484  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7600   004486  EF49  F022         	goto	u9360
  7601   00448A  EF47  F022         	goto	u9361
  7602   00448E                     u9361:
  7603   00448E  EF51  F022         	goto	l7202
  7604   004492                     u9360:
  7605   004492                     l7200:
  7606   004492  0EFF               	movlw	255
  7607   004494  1222               	iorwf	sqrtf@ix^0,f,c
  7608   004496  0EFF               	movlw	255
  7609   004498  1223               	iorwf	(sqrtf@ix+1)^0,f,c
  7610   00449A  0E7F               	movlw	127
  7611   00449C  1224               	iorwf	(sqrtf@ix+2)^0,f,c
  7612   00449E  0E00               	movlw	0
  7613   0044A0  1225               	iorwf	(sqrtf@ix+3)^0,f,c
  7614   0044A2                     l7202:
  7615   0044A2  C022  F001         	movff	sqrtf@ix,?_sqrtf
  7616   0044A6  C023  F002         	movff	sqrtf@ix+1,?_sqrtf+1
  7617   0044AA  C024  F003         	movff	sqrtf@ix+2,?_sqrtf+2
  7618   0044AE  C025  F004         	movff	sqrtf@ix+3,?_sqrtf+3
  7619   0044B2  EFF7  F023         	goto	l1359
  7620   0044B6                     l7206:
  7621   0044B6  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7622   0044B8  EF6A  F022         	goto	u9370
  7623   0044BC  5025               	movf	(sqrtf@ix+3)^0,w,c
  7624   0044BE  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7625   0044C0  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7626   0044C2  E106               	bnz	u9371
  7627   0044C4  0422               	decf	sqrtf@ix^0,w,c
  7628   0044C6  B0D8               	btfsc	status,0,c
  7629   0044C8  EF68  F022         	goto	u9371
  7630   0044CC  EF6A  F022         	goto	u9370
  7631   0044D0                     u9371:
  7632   0044D0  EFA1  F022         	goto	l7222
  7633   0044D4                     u9370:
  7634   0044D4  0EFF               	movlw	255
  7635   0044D6  1422               	andwf	sqrtf@ix^0,w,c
  7636   0044D8  6E05               	movwf	??_sqrtf^0,c
  7637   0044DA  0EFF               	movlw	255
  7638   0044DC  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7639   0044DE  6E06               	movwf	(??_sqrtf+1)^0,c
  7640   0044E0  0EFF               	movlw	255
  7641   0044E2  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7642   0044E4  6E07               	movwf	(??_sqrtf+2)^0,c
  7643   0044E6  0E7F               	movlw	127
  7644   0044E8  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7645   0044EA  6E08               	movwf	(??_sqrtf+3)^0,c
  7646   0044EC  5005               	movf	??_sqrtf^0,w,c
  7647   0044EE  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7648   0044F0  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7649   0044F2  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7650   0044F4  A4D8               	btfss	status,2,c
  7651   0044F6  EF7F  F022         	goto	u9381
  7652   0044FA  EF81  F022         	goto	u9380
  7653   0044FE                     u9381:
  7654   0044FE  EF8B  F022         	goto	l7214
  7655   004502                     u9380:
  7656   004502  0E00               	movlw	0
  7657   004504  6E01               	movwf	?_sqrtf^0,c
  7658   004506  0E00               	movlw	0
  7659   004508  6E02               	movwf	(?_sqrtf+1)^0,c
  7660   00450A  0E00               	movlw	0
  7661   00450C  6E03               	movwf	(?_sqrtf+2)^0,c
  7662   00450E  0E00               	movlw	0
  7663   004510  6E04               	movwf	(?_sqrtf+3)^0,c
  7664   004512  EFF7  F023         	goto	l1359
  7665   004516                     l7214:
  7666   004516  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7667   004518  EF92  F022         	goto	u9390
  7668   00451C  EF90  F022         	goto	u9391
  7669   004520                     u9391:
  7670   004520  EFA1  F022         	goto	l7222
  7671   004524                     u9390:
  7672   004524  0E00               	movlw	0
  7673   004526  0103               	movlb	3	; () banked
  7674   004528  6F61               	movwf	(_errno+1)& (0+255),b
  7675   00452A  0E21               	movlw	33
  7676   00452C  6F60               	movwf	_errno& (0+255),b
  7677   00452E  0EFF               	movlw	255
  7678   004530  6E22               	movwf	sqrtf@ix^0,c
  7679   004532  0EFF               	movlw	255
  7680   004534  6E23               	movwf	(sqrtf@ix+1)^0,c
  7681   004536  0EFF               	movlw	255
  7682   004538  6E24               	movwf	(sqrtf@ix+2)^0,c
  7683   00453A  0E7F               	movlw	127
  7684   00453C  6E25               	movwf	(sqrtf@ix+3)^0,c
  7685   00453E  EF51  F022         	goto	l7202
  7686   004542                     l7222:
  7687   004542  0E17               	movlw	23
  7688   004544  6E05               	movwf	??_sqrtf^0,c
  7689   004546  C022  F006         	movff	sqrtf@ix,??_sqrtf+1
  7690   00454A  C023  F007         	movff	sqrtf@ix+1,??_sqrtf+2
  7691   00454E  C024  F008         	movff	sqrtf@ix+2,??_sqrtf+3
  7692   004552  C025  F009         	movff	sqrtf@ix+3,??_sqrtf+4
  7693   004556                     u9405:
  7694   004556  6605               	tstfsz	??_sqrtf^0,c
  7695   004558  EFB0  F022         	goto	u9406
  7696   00455C  EFB8  F022         	goto	u9407
  7697   004560                     u9406:
  7698   004560  3409               	rlcf	(??_sqrtf+4)^0,w,c
  7699   004562  3209               	rrcf	(??_sqrtf+4)^0,f,c
  7700   004564  3208               	rrcf	(??_sqrtf+3)^0,f,c
  7701   004566  3207               	rrcf	(??_sqrtf+2)^0,f,c
  7702   004568  3206               	rrcf	(??_sqrtf+1)^0,f,c
  7703   00456A  2E05               	decfsz	??_sqrtf^0,f,c
  7704   00456C  EFAB  F022         	goto	u9405
  7705   004570                     u9407:
  7706   004570  C006  F01A         	movff	??_sqrtf+1,sqrtf@m
  7707   004574  C007  F01B         	movff	??_sqrtf+2,sqrtf@m+1
  7708   004578  C008  F01C         	movff	??_sqrtf+3,sqrtf@m+2
  7709   00457C  C009  F01D         	movff	??_sqrtf+4,sqrtf@m+3
  7710   004580  501A               	movf	sqrtf@m^0,w,c
  7711   004582  101B               	iorwf	(sqrtf@m+1)^0,w,c
  7712   004584  101C               	iorwf	(sqrtf@m+2)^0,w,c
  7713   004586  101D               	iorwf	(sqrtf@m+3)^0,w,c
  7714   004588  A4D8               	btfss	status,2,c
  7715   00458A  EFC9  F022         	goto	u9411
  7716   00458E  EFCB  F022         	goto	u9410
  7717   004592                     u9411:
  7718   004592  EFFB  F022         	goto	l1363
  7719   004596                     u9410:
  7720   004596  0E00               	movlw	0
  7721   004598  6E0E               	movwf	sqrtf@i^0,c
  7722   00459A  0E00               	movlw	0
  7723   00459C  6E0F               	movwf	(sqrtf@i+1)^0,c
  7724   00459E  0E00               	movlw	0
  7725   0045A0  6E10               	movwf	(sqrtf@i+2)^0,c
  7726   0045A2  0E00               	movlw	0
  7727   0045A4  6E11               	movwf	(sqrtf@i+3)^0,c
  7728   0045A6  EFE0  F022         	goto	l7230
  7729   0045AA                     l7226:
  7730   0045AA  90D8               	bcf	status,0,c
  7731   0045AC  3622               	rlcf	sqrtf@ix^0,f,c
  7732   0045AE  3623               	rlcf	(sqrtf@ix+1)^0,f,c
  7733   0045B0  3624               	rlcf	(sqrtf@ix+2)^0,f,c
  7734   0045B2  3625               	rlcf	(sqrtf@ix+3)^0,f,c
  7735   0045B4  0E01               	movlw	1
  7736   0045B6  260E               	addwf	sqrtf@i^0,f,c
  7737   0045B8  0E00               	movlw	0
  7738   0045BA  220F               	addwfc	(sqrtf@i+1)^0,f,c
  7739   0045BC  2210               	addwfc	(sqrtf@i+2)^0,f,c
  7740   0045BE  2211               	addwfc	(sqrtf@i+3)^0,f,c
  7741   0045C0                     l7230:
  7742   0045C0  AE24               	btfss	(sqrtf@ix+2)^0,7,c
  7743   0045C2  EFE5  F022         	goto	u9421
  7744   0045C6  EFE7  F022         	goto	u9420
  7745   0045CA                     u9421:
  7746   0045CA  EFD5  F022         	goto	l7226
  7747   0045CE                     u9420:
  7748   0045CE  0EFF               	movlw	255
  7749   0045D0  240E               	addwf	sqrtf@i^0,w,c
  7750   0045D2  6E05               	movwf	??_sqrtf^0,c
  7751   0045D4  0EFF               	movlw	255
  7752   0045D6  200F               	addwfc	(sqrtf@i+1)^0,w,c
  7753   0045D8  6E06               	movwf	(??_sqrtf+1)^0,c
  7754   0045DA  0EFF               	movlw	255
  7755   0045DC  2010               	addwfc	(sqrtf@i+2)^0,w,c
  7756   0045DE  6E07               	movwf	(??_sqrtf+2)^0,c
  7757   0045E0  0EFF               	movlw	255
  7758   0045E2  2011               	addwfc	(sqrtf@i+3)^0,w,c
  7759   0045E4  6E08               	movwf	(??_sqrtf+3)^0,c
  7760   0045E6  5005               	movf	??_sqrtf^0,w,c
  7761   0045E8  5E1A               	subwf	sqrtf@m^0,f,c
  7762   0045EA  5006               	movf	(??_sqrtf+1)^0,w,c
  7763   0045EC  5A1B               	subwfb	(sqrtf@m+1)^0,f,c
  7764   0045EE  5007               	movf	(??_sqrtf+2)^0,w,c
  7765   0045F0  5A1C               	subwfb	(sqrtf@m+2)^0,f,c
  7766   0045F2  5008               	movf	(??_sqrtf+3)^0,w,c
  7767   0045F4  5A1D               	subwfb	(sqrtf@m+3)^0,f,c
  7768   0045F6                     l1363:
  7769   0045F6  0E81               	movlw	129
  7770   0045F8  261A               	addwf	sqrtf@m^0,f,c
  7771   0045FA  0EFF               	movlw	255
  7772   0045FC  221B               	addwfc	(sqrtf@m+1)^0,f,c
  7773   0045FE  0EFF               	movlw	255
  7774   004600  221C               	addwfc	(sqrtf@m+2)^0,f,c
  7775   004602  0EFF               	movlw	255
  7776   004604  221D               	addwfc	(sqrtf@m+3)^0,f,c
  7777   004606  0EFF               	movlw	255
  7778   004608  1422               	andwf	sqrtf@ix^0,w,c
  7779   00460A  6E05               	movwf	??_sqrtf^0,c
  7780   00460C  0EFF               	movlw	255
  7781   00460E  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7782   004610  6E06               	movwf	(??_sqrtf+1)^0,c
  7783   004612  0E7F               	movlw	127
  7784   004614  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7785   004616  6E07               	movwf	(??_sqrtf+2)^0,c
  7786   004618  0E00               	movlw	0
  7787   00461A  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7788   00461C  6E08               	movwf	(??_sqrtf+3)^0,c
  7789   00461E  0E00               	movlw	0
  7790   004620  1005               	iorwf	??_sqrtf^0,w,c
  7791   004622  6E22               	movwf	sqrtf@ix^0,c
  7792   004624  0E00               	movlw	0
  7793   004626  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7794   004628  6E23               	movwf	(sqrtf@ix+1)^0,c
  7795   00462A  0E80               	movlw	128
  7796   00462C  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7797   00462E  6E24               	movwf	(sqrtf@ix+2)^0,c
  7798   004630  0E00               	movlw	0
  7799   004632  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7800   004634  6E25               	movwf	(sqrtf@ix+3)^0,c
  7801   004636  A01A               	btfss	sqrtf@m^0,0,c
  7802   004638  EF20  F023         	goto	u9431
  7803   00463C  EF22  F023         	goto	u9430
  7804   004640                     u9431:
  7805   004640  EF2A  F023         	goto	l1367
  7806   004644                     u9430:
  7807   004644  5022               	movf	sqrtf@ix^0,w,c
  7808   004646  2622               	addwf	sqrtf@ix^0,f,c
  7809   004648  5023               	movf	(sqrtf@ix+1)^0,w,c
  7810   00464A  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7811   00464C  5024               	movf	(sqrtf@ix+2)^0,w,c
  7812   00464E  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7813   004650  5025               	movf	(sqrtf@ix+3)^0,w,c
  7814   004652  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7815   004654                     l1367:
  7816   004654  341D               	rlcf	(sqrtf@m+3)^0,w,c
  7817   004656  321D               	rrcf	(sqrtf@m+3)^0,f,c
  7818   004658  321C               	rrcf	(sqrtf@m+2)^0,f,c
  7819   00465A  321B               	rrcf	(sqrtf@m+1)^0,f,c
  7820   00465C  321A               	rrcf	sqrtf@m^0,f,c
  7821   00465E  5022               	movf	sqrtf@ix^0,w,c
  7822   004660  2622               	addwf	sqrtf@ix^0,f,c
  7823   004662  5023               	movf	(sqrtf@ix+1)^0,w,c
  7824   004664  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7825   004666  5024               	movf	(sqrtf@ix+2)^0,w,c
  7826   004668  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7827   00466A  5025               	movf	(sqrtf@ix+3)^0,w,c
  7828   00466C  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7829   00466E  0E00               	movlw	0
  7830   004670  6E0A               	movwf	sqrtf@s^0,c
  7831   004672  0E00               	movlw	0
  7832   004674  6E0B               	movwf	(sqrtf@s+1)^0,c
  7833   004676  0E00               	movlw	0
  7834   004678  6E0C               	movwf	(sqrtf@s+2)^0,c
  7835   00467A  0E00               	movlw	0
  7836   00467C  6E0D               	movwf	(sqrtf@s+3)^0,c
  7837   00467E  C00A  F012         	movff	sqrtf@s,sqrtf@q
  7838   004682  C00B  F013         	movff	sqrtf@s+1,sqrtf@q+1
  7839   004686  C00C  F014         	movff	sqrtf@s+2,sqrtf@q+2
  7840   00468A  C00D  F015         	movff	sqrtf@s+3,sqrtf@q+3
  7841   00468E  0E00               	movlw	0
  7842   004690  6E1E               	movwf	sqrtf@r^0,c
  7843   004692  0E00               	movlw	0
  7844   004694  6E1F               	movwf	(sqrtf@r+1)^0,c
  7845   004696  0E00               	movlw	0
  7846   004698  6E20               	movwf	(sqrtf@r+2)^0,c
  7847   00469A  0E01               	movlw	1
  7848   00469C  6E21               	movwf	(sqrtf@r+3)^0,c
  7849   00469E  EF99  F023         	goto	l7248
  7850   0046A2                     l7242:
  7851   0046A2  500A               	movf	sqrtf@s^0,w,c
  7852   0046A4  241E               	addwf	sqrtf@r^0,w,c
  7853   0046A6  6E16               	movwf	sqrtf@t^0,c
  7854   0046A8  500B               	movf	(sqrtf@s+1)^0,w,c
  7855   0046AA  201F               	addwfc	(sqrtf@r+1)^0,w,c
  7856   0046AC  6E17               	movwf	(sqrtf@t+1)^0,c
  7857   0046AE  500C               	movf	(sqrtf@s+2)^0,w,c
  7858   0046B0  2020               	addwfc	(sqrtf@r+2)^0,w,c
  7859   0046B2  6E18               	movwf	(sqrtf@t+2)^0,c
  7860   0046B4  500D               	movf	(sqrtf@s+3)^0,w,c
  7861   0046B6  2021               	addwfc	(sqrtf@r+3)^0,w,c
  7862   0046B8  6E19               	movwf	(sqrtf@t+3)^0,c
  7863   0046BA  5016               	movf	sqrtf@t^0,w,c
  7864   0046BC  5C22               	subwf	sqrtf@ix^0,w,c
  7865   0046BE  5017               	movf	(sqrtf@t+1)^0,w,c
  7866   0046C0  5823               	subwfb	(sqrtf@ix+1)^0,w,c
  7867   0046C2  5018               	movf	(sqrtf@t+2)^0,w,c
  7868   0046C4  5824               	subwfb	(sqrtf@ix+2)^0,w,c
  7869   0046C6  5025               	movf	(sqrtf@ix+3)^0,w,c
  7870   0046C8  0A80               	xorlw	128
  7871   0046CA  6E05               	movwf	??_sqrtf^0,c
  7872   0046CC  5019               	movf	(sqrtf@t+3)^0,w,c
  7873   0046CE  0A80               	xorlw	128
  7874   0046D0  5805               	subwfb	??_sqrtf^0,w,c
  7875   0046D2  A0D8               	btfss	status,0,c
  7876   0046D4  EF6E  F023         	goto	u9441
  7877   0046D8  EF70  F023         	goto	u9440
  7878   0046DC                     u9441:
  7879   0046DC  EF8C  F023         	goto	l1370
  7880   0046E0                     u9440:
  7881   0046E0  5016               	movf	sqrtf@t^0,w,c
  7882   0046E2  241E               	addwf	sqrtf@r^0,w,c
  7883   0046E4  6E0A               	movwf	sqrtf@s^0,c
  7884   0046E6  5017               	movf	(sqrtf@t+1)^0,w,c
  7885   0046E8  201F               	addwfc	(sqrtf@r+1)^0,w,c
  7886   0046EA  6E0B               	movwf	(sqrtf@s+1)^0,c
  7887   0046EC  5018               	movf	(sqrtf@t+2)^0,w,c
  7888   0046EE  2020               	addwfc	(sqrtf@r+2)^0,w,c
  7889   0046F0  6E0C               	movwf	(sqrtf@s+2)^0,c
  7890   0046F2  5019               	movf	(sqrtf@t+3)^0,w,c
  7891   0046F4  2021               	addwfc	(sqrtf@r+3)^0,w,c
  7892   0046F6  6E0D               	movwf	(sqrtf@s+3)^0,c
  7893   0046F8  5016               	movf	sqrtf@t^0,w,c
  7894   0046FA  5E22               	subwf	sqrtf@ix^0,f,c
  7895   0046FC  5017               	movf	(sqrtf@t+1)^0,w,c
  7896   0046FE  5A23               	subwfb	(sqrtf@ix+1)^0,f,c
  7897   004700  5018               	movf	(sqrtf@t+2)^0,w,c
  7898   004702  5A24               	subwfb	(sqrtf@ix+2)^0,f,c
  7899   004704  5019               	movf	(sqrtf@t+3)^0,w,c
  7900   004706  5A25               	subwfb	(sqrtf@ix+3)^0,f,c
  7901   004708  501E               	movf	sqrtf@r^0,w,c
  7902   00470A  2612               	addwf	sqrtf@q^0,f,c
  7903   00470C  501F               	movf	(sqrtf@r+1)^0,w,c
  7904   00470E  2213               	addwfc	(sqrtf@q+1)^0,f,c
  7905   004710  5020               	movf	(sqrtf@r+2)^0,w,c
  7906   004712  2214               	addwfc	(sqrtf@q+2)^0,f,c
  7907   004714  5021               	movf	(sqrtf@r+3)^0,w,c
  7908   004716  2215               	addwfc	(sqrtf@q+3)^0,f,c
  7909   004718                     l1370:
  7910   004718  5022               	movf	sqrtf@ix^0,w,c
  7911   00471A  2622               	addwf	sqrtf@ix^0,f,c
  7912   00471C  5023               	movf	(sqrtf@ix+1)^0,w,c
  7913   00471E  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7914   004720  5024               	movf	(sqrtf@ix+2)^0,w,c
  7915   004722  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7916   004724  5025               	movf	(sqrtf@ix+3)^0,w,c
  7917   004726  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7918   004728  90D8               	bcf	status,0,c
  7919   00472A  3221               	rrcf	(sqrtf@r+3)^0,f,c
  7920   00472C  3220               	rrcf	(sqrtf@r+2)^0,f,c
  7921   00472E  321F               	rrcf	(sqrtf@r+1)^0,f,c
  7922   004730  321E               	rrcf	sqrtf@r^0,f,c
  7923   004732                     l7248:
  7924   004732  501E               	movf	sqrtf@r^0,w,c
  7925   004734  101F               	iorwf	(sqrtf@r+1)^0,w,c
  7926   004736  1020               	iorwf	(sqrtf@r+2)^0,w,c
  7927   004738  1021               	iorwf	(sqrtf@r+3)^0,w,c
  7928   00473A  A4D8               	btfss	status,2,c
  7929   00473C  EFA2  F023         	goto	u9451
  7930   004740  EFA4  F023         	goto	u9450
  7931   004744                     u9451:
  7932   004744  EF51  F023         	goto	l7242
  7933   004748                     u9450:
  7934   004748  5022               	movf	sqrtf@ix^0,w,c
  7935   00474A  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7936   00474C  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7937   00474E  1025               	iorwf	(sqrtf@ix+3)^0,w,c
  7938   004750  B4D8               	btfsc	status,2,c
  7939   004752  EFAD  F023         	goto	u9461
  7940   004756  EFAF  F023         	goto	u9460
  7941   00475A                     u9461:
  7942   00475A  EFC3  F023         	goto	l1372
  7943   00475E                     u9460:
  7944   00475E  0E01               	movlw	1
  7945   004760  1412               	andwf	sqrtf@q^0,w,c
  7946   004762  6E05               	movwf	??_sqrtf^0,c
  7947   004764  0E00               	movlw	0
  7948   004766  1413               	andwf	(sqrtf@q+1)^0,w,c
  7949   004768  6E06               	movwf	(??_sqrtf+1)^0,c
  7950   00476A  0E00               	movlw	0
  7951   00476C  1414               	andwf	(sqrtf@q+2)^0,w,c
  7952   00476E  6E07               	movwf	(??_sqrtf+2)^0,c
  7953   004770  0E00               	movlw	0
  7954   004772  1415               	andwf	(sqrtf@q+3)^0,w,c
  7955   004774  6E08               	movwf	(??_sqrtf+3)^0,c
  7956   004776  5005               	movf	??_sqrtf^0,w,c
  7957   004778  2612               	addwf	sqrtf@q^0,f,c
  7958   00477A  5006               	movf	(??_sqrtf+1)^0,w,c
  7959   00477C  2213               	addwfc	(sqrtf@q+1)^0,f,c
  7960   00477E  5007               	movf	(??_sqrtf+2)^0,w,c
  7961   004780  2214               	addwfc	(sqrtf@q+2)^0,f,c
  7962   004782  5008               	movf	(??_sqrtf+3)^0,w,c
  7963   004784  2215               	addwfc	(sqrtf@q+3)^0,f,c
  7964   004786                     l1372:
  7965   004786  C012  F005         	movff	sqrtf@q,??_sqrtf
  7966   00478A  C013  F006         	movff	sqrtf@q+1,??_sqrtf+1
  7967   00478E  C014  F007         	movff	sqrtf@q+2,??_sqrtf+2
  7968   004792  C015  F008         	movff	sqrtf@q+3,??_sqrtf+3
  7969   004796  3408               	rlcf	(??_sqrtf+3)^0,w,c
  7970   004798  3208               	rrcf	(??_sqrtf+3)^0,f,c
  7971   00479A  3207               	rrcf	(??_sqrtf+2)^0,f,c
  7972   00479C  3206               	rrcf	(??_sqrtf+1)^0,f,c
  7973   00479E  3205               	rrcf	??_sqrtf^0,f,c
  7974   0047A0  0E00               	movlw	0
  7975   0047A2  2405               	addwf	??_sqrtf^0,w,c
  7976   0047A4  6E22               	movwf	sqrtf@ix^0,c
  7977   0047A6  0E00               	movlw	0
  7978   0047A8  2006               	addwfc	(??_sqrtf+1)^0,w,c
  7979   0047AA  6E23               	movwf	(sqrtf@ix+1)^0,c
  7980   0047AC  0E00               	movlw	0
  7981   0047AE  2007               	addwfc	(??_sqrtf+2)^0,w,c
  7982   0047B0  6E24               	movwf	(sqrtf@ix+2)^0,c
  7983   0047B2  0E3F               	movlw	63
  7984   0047B4  2008               	addwfc	(??_sqrtf+3)^0,w,c
  7985   0047B6  6E25               	movwf	(sqrtf@ix+3)^0,c
  7986   0047B8  C01A  F005         	movff	sqrtf@m,??_sqrtf
  7987   0047BC  C01B  F006         	movff	sqrtf@m+1,??_sqrtf+1
  7988   0047C0  C01C  F007         	movff	sqrtf@m+2,??_sqrtf+2
  7989   0047C4  C01D  F008         	movff	sqrtf@m+3,??_sqrtf+3
  7990   0047C8  0E17               	movlw	23
  7991   0047CA                     u9475:
  7992   0047CA  90D8               	bcf	status,0,c
  7993   0047CC  3605               	rlcf	??_sqrtf^0,f,c
  7994   0047CE  3606               	rlcf	(??_sqrtf+1)^0,f,c
  7995   0047D0  3607               	rlcf	(??_sqrtf+2)^0,f,c
  7996   0047D2  3608               	rlcf	(??_sqrtf+3)^0,f,c
  7997   0047D4  2EE8               	decfsz	wreg,f,c
  7998   0047D6  EFE5  F023         	goto	u9475
  7999   0047DA  5005               	movf	??_sqrtf^0,w,c
  8000   0047DC  2622               	addwf	sqrtf@ix^0,f,c
  8001   0047DE  5006               	movf	(??_sqrtf+1)^0,w,c
  8002   0047E0  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  8003   0047E2  5007               	movf	(??_sqrtf+2)^0,w,c
  8004   0047E4  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  8005   0047E6  5008               	movf	(??_sqrtf+3)^0,w,c
  8006   0047E8  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  8007   0047EA  EF51  F022         	goto	l7202
  8008   0047EE                     l1359:
  8009   0047EE  0012               	return		;funcret
  8010   0047F0                     __end_of_sqrtf:
  8011                           	callstack 0
  8012                           
  8013 ;; *************** function _scalbnf *****************
  8014 ;; Defined at:
  8015 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\scalbnf.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;  x               4   39[COMRAM] float 
  8018 ;;  n               2   43[COMRAM] int 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  y               4   53[COMRAM] float 
  8021 ;;  u               4   49[COMRAM] struct .
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  4   39[COMRAM] float 
  8024 ;; Registers used:
  8025 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8031 ;;      Params:         6       0       0       0       0       0       0       0       0
  8032 ;;      Locals:         8       0       0       0       0       0       0       0       0
  8033 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8034 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8035 ;;Total ram usage:       18 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; Hardware stack levels required when called: 2
  8038 ;; This function calls:
  8039 ;;		___flmul
  8040 ;; This function is called by:
  8041 ;;		_powf
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text8
  8046   00518E                     __ptext8:
  8047                           	callstack 0
  8048   00518E                     _scalbnf:
  8049                           	callstack 26
  8050   00518E  C028  F036         	movff	scalbnf@x,scalbnf@y
  8051   005192  C029  F037         	movff	scalbnf@x+1,scalbnf@y+1
  8052   005196  C02A  F038         	movff	scalbnf@x+2,scalbnf@y+2
  8053   00519A  C02B  F039         	movff	scalbnf@x+3,scalbnf@y+3
  8054   00519E  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8055   0051A0  EFDB  F028         	goto	u9481
  8056   0051A4  502D               	movf	(scalbnf@n+1)^0,w,c
  8057   0051A6  E109               	bnz	u9480
  8058   0051A8  0E80               	movlw	128
  8059   0051AA  5C2C               	subwf	scalbnf@n^0,w,c
  8060   0051AC  A0D8               	btfss	status,0,c
  8061   0051AE  EFDB  F028         	goto	u9481
  8062   0051B2  EFDD  F028         	goto	u9480
  8063   0051B6                     u9481:
  8064   0051B6  EF3B  F029         	goto	l7276
  8065   0051BA                     u9480:
  8066   0051BA  C036  F00F         	movff	scalbnf@y,___flmul@b
  8067   0051BE  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8068   0051C2  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8069   0051C6  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8070   0051CA  0E00               	movlw	0
  8071   0051CC  6E13               	movwf	___flmul@a^0,c
  8072   0051CE  0E00               	movlw	0
  8073   0051D0  6E14               	movwf	(___flmul@a+1)^0,c
  8074   0051D2  0E00               	movlw	0
  8075   0051D4  6E15               	movwf	(___flmul@a+2)^0,c
  8076   0051D6  0E7F               	movlw	127
  8077   0051D8  6E16               	movwf	(___flmul@a+3)^0,c
  8078   0051DA  ECF6  F01F         	call	___flmul	;wreg free
  8079   0051DE  C00F  F036         	movff	?___flmul,scalbnf@y
  8080   0051E2  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8081   0051E6  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8082   0051EA  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8083   0051EE  0E81               	movlw	129
  8084   0051F0  262C               	addwf	scalbnf@n^0,f,c
  8085   0051F2  0EFF               	movlw	255
  8086   0051F4  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8087   0051F6  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8088   0051F8  EF07  F029         	goto	u9491
  8089   0051FC  502D               	movf	(scalbnf@n+1)^0,w,c
  8090   0051FE  E109               	bnz	u9490
  8091   005200  0E80               	movlw	128
  8092   005202  5C2C               	subwf	scalbnf@n^0,w,c
  8093   005204  A0D8               	btfss	status,0,c
  8094   005206  EF07  F029         	goto	u9491
  8095   00520A  EF09  F029         	goto	u9490
  8096   00520E                     u9491:
  8097   00520E  EFA5  F029         	goto	l7292
  8098   005212                     u9490:
  8099   005212  C036  F00F         	movff	scalbnf@y,___flmul@b
  8100   005216  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8101   00521A  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8102   00521E  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8103   005222  0E00               	movlw	0
  8104   005224  6E13               	movwf	___flmul@a^0,c
  8105   005226  0E00               	movlw	0
  8106   005228  6E14               	movwf	(___flmul@a+1)^0,c
  8107   00522A  0E00               	movlw	0
  8108   00522C  6E15               	movwf	(___flmul@a+2)^0,c
  8109   00522E  0E7F               	movlw	127
  8110   005230  6E16               	movwf	(___flmul@a+3)^0,c
  8111   005232  ECF6  F01F         	call	___flmul	;wreg free
  8112   005236  C00F  F036         	movff	?___flmul,scalbnf@y
  8113   00523A  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8114   00523E  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8115   005242  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8116   005246  0E81               	movlw	129
  8117   005248  262C               	addwf	scalbnf@n^0,f,c
  8118   00524A  0EFF               	movlw	255
  8119   00524C  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8120   00524E  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8121   005250  EF33  F029         	goto	u9501
  8122   005254  502D               	movf	(scalbnf@n+1)^0,w,c
  8123   005256  E109               	bnz	u9500
  8124   005258  0E80               	movlw	128
  8125   00525A  5C2C               	subwf	scalbnf@n^0,w,c
  8126   00525C  A0D8               	btfss	status,0,c
  8127   00525E  EF33  F029         	goto	u9501
  8128   005262  EF35  F029         	goto	u9500
  8129   005266                     u9501:
  8130   005266  EFA5  F029         	goto	l7292
  8131   00526A                     u9500:
  8132   00526A  0E00               	movlw	0
  8133   00526C  6E2D               	movwf	(scalbnf@n+1)^0,c
  8134   00526E  0E7F               	movlw	127
  8135   005270  6E2C               	movwf	scalbnf@n^0,c
  8136   005272  EFA5  F029         	goto	l7292
  8137   005276                     l7276:
  8138   005276  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8139   005278  EF47  F029         	goto	u9511
  8140   00527C  0E82               	movlw	130
  8141   00527E  5C2C               	subwf	scalbnf@n^0,w,c
  8142   005280  0EFF               	movlw	255
  8143   005282  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8144   005284  B0D8               	btfsc	status,0,c
  8145   005286  EF47  F029         	goto	u9511
  8146   00528A  EF49  F029         	goto	u9510
  8147   00528E                     u9511:
  8148   00528E  EFA5  F029         	goto	l7292
  8149   005292                     u9510:
  8150   005292  C036  F00F         	movff	scalbnf@y,___flmul@b
  8151   005296  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8152   00529A  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8153   00529E  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8154   0052A2  0E00               	movlw	0
  8155   0052A4  6E13               	movwf	___flmul@a^0,c
  8156   0052A6  0E00               	movlw	0
  8157   0052A8  6E14               	movwf	(___flmul@a+1)^0,c
  8158   0052AA  0E80               	movlw	128
  8159   0052AC  6E15               	movwf	(___flmul@a+2)^0,c
  8160   0052AE  0E0C               	movlw	12
  8161   0052B0  6E16               	movwf	(___flmul@a+3)^0,c
  8162   0052B2  ECF6  F01F         	call	___flmul	;wreg free
  8163   0052B6  C00F  F036         	movff	?___flmul,scalbnf@y
  8164   0052BA  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8165   0052BE  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8166   0052C2  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8167   0052C6  0E66               	movlw	102
  8168   0052C8  262C               	addwf	scalbnf@n^0,f,c
  8169   0052CA  0E00               	movlw	0
  8170   0052CC  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8171   0052CE  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8172   0052D0  EF73  F029         	goto	u9521
  8173   0052D4  0E82               	movlw	130
  8174   0052D6  5C2C               	subwf	scalbnf@n^0,w,c
  8175   0052D8  0EFF               	movlw	255
  8176   0052DA  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8177   0052DC  B0D8               	btfsc	status,0,c
  8178   0052DE  EF73  F029         	goto	u9521
  8179   0052E2  EF75  F029         	goto	u9520
  8180   0052E6                     u9521:
  8181   0052E6  EFA5  F029         	goto	l7292
  8182   0052EA                     u9520:
  8183   0052EA  C036  F00F         	movff	scalbnf@y,___flmul@b
  8184   0052EE  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8185   0052F2  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8186   0052F6  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8187   0052FA  0E00               	movlw	0
  8188   0052FC  6E13               	movwf	___flmul@a^0,c
  8189   0052FE  0E00               	movlw	0
  8190   005300  6E14               	movwf	(___flmul@a+1)^0,c
  8191   005302  0E80               	movlw	128
  8192   005304  6E15               	movwf	(___flmul@a+2)^0,c
  8193   005306  0E0C               	movlw	12
  8194   005308  6E16               	movwf	(___flmul@a+3)^0,c
  8195   00530A  ECF6  F01F         	call	___flmul	;wreg free
  8196   00530E  C00F  F036         	movff	?___flmul,scalbnf@y
  8197   005312  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8198   005316  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8199   00531A  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8200   00531E  0E66               	movlw	102
  8201   005320  262C               	addwf	scalbnf@n^0,f,c
  8202   005322  0E00               	movlw	0
  8203   005324  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8204   005326  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8205   005328  EF9F  F029         	goto	u9531
  8206   00532C  0E82               	movlw	130
  8207   00532E  5C2C               	subwf	scalbnf@n^0,w,c
  8208   005330  0EFF               	movlw	255
  8209   005332  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8210   005334  B0D8               	btfsc	status,0,c
  8211   005336  EF9F  F029         	goto	u9531
  8212   00533A  EFA1  F029         	goto	u9530
  8213   00533E                     u9531:
  8214   00533E  EFA5  F029         	goto	l7292
  8215   005342                     u9530:
  8216   005342  0EFF               	movlw	255
  8217   005344  6E2D               	movwf	(scalbnf@n+1)^0,c
  8218   005346  0E82               	movlw	130
  8219   005348  6E2C               	movwf	scalbnf@n^0,c
  8220   00534A                     l7292:
  8221   00534A  0E7F               	movlw	127
  8222   00534C  242C               	addwf	scalbnf@n^0,w,c
  8223   00534E  6E2E               	movwf	??_scalbnf^0,c
  8224   005350  0E00               	movlw	0
  8225   005352  202D               	addwfc	(scalbnf@n+1)^0,w,c
  8226   005354  6E2F               	movwf	(??_scalbnf+1)^0,c
  8227   005356  6A30               	clrf	(??_scalbnf+2)^0,c
  8228   005358  6A31               	clrf	(??_scalbnf+3)^0,c
  8229   00535A  0E17               	movlw	23
  8230   00535C                     u9545:
  8231   00535C  90D8               	bcf	status,0,c
  8232   00535E  362E               	rlcf	??_scalbnf^0,f,c
  8233   005360  362F               	rlcf	(??_scalbnf+1)^0,f,c
  8234   005362  3630               	rlcf	(??_scalbnf+2)^0,f,c
  8235   005364  3631               	rlcf	(??_scalbnf+3)^0,f,c
  8236   005366  2EE8               	decfsz	wreg,f,c
  8237   005368  EFAE  F029         	goto	u9545
  8238   00536C  C02E  F032         	movff	??_scalbnf,scalbnf@u
  8239   005370  C02F  F033         	movff	??_scalbnf+1,scalbnf@u+1
  8240   005374  C030  F034         	movff	??_scalbnf+2,scalbnf@u+2
  8241   005378  C031  F035         	movff	??_scalbnf+3,scalbnf@u+3
  8242   00537C  C032  F00F         	movff	scalbnf@u,___flmul@b
  8243   005380  C033  F010         	movff	scalbnf@u+1,___flmul@b+1
  8244   005384  C034  F011         	movff	scalbnf@u+2,___flmul@b+2
  8245   005388  C035  F012         	movff	scalbnf@u+3,___flmul@b+3
  8246   00538C  C036  F013         	movff	scalbnf@y,___flmul@a
  8247   005390  C037  F014         	movff	scalbnf@y+1,___flmul@a+1
  8248   005394  C038  F015         	movff	scalbnf@y+2,___flmul@a+2
  8249   005398  C039  F016         	movff	scalbnf@y+3,___flmul@a+3
  8250   00539C  ECF6  F01F         	call	___flmul	;wreg free
  8251   0053A0  C00F  F028         	movff	?___flmul,scalbnf@x
  8252   0053A4  C010  F029         	movff	?___flmul+1,scalbnf@x+1
  8253   0053A8  C011  F02A         	movff	?___flmul+2,scalbnf@x+2
  8254   0053AC  C012  F02B         	movff	?___flmul+3,scalbnf@x+3
  8255   0053B0  C028  F028         	movff	scalbnf@x,?_scalbnf
  8256   0053B4  C029  F029         	movff	scalbnf@x+1,?_scalbnf+1
  8257   0053B8  C02A  F02A         	movff	scalbnf@x+2,?_scalbnf+2
  8258   0053BC  C02B  F02B         	movff	scalbnf@x+3,?_scalbnf+3
  8259   0053C0  0012               	return		;funcret
  8260   0053C2                     __end_of_scalbnf:
  8261                           	callstack 0
  8262                           
  8263 ;; *************** function ___xxtofl *****************
  8264 ;; Defined at:
  8265 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  sign            1    wreg     unsigned char 
  8268 ;;  val             4    0[COMRAM] long 
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;  sign            1    8[COMRAM] unsigned char 
  8271 ;;  arg             4   10[COMRAM] unsigned long 
  8272 ;;  exp             1    9[COMRAM] unsigned char 
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  4    0[COMRAM] unsigned char 
  8275 ;; Registers used:
  8276 ;;		wreg, status,2, status,0
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8282 ;;      Params:         4       0       0       0       0       0       0       0       0
  8283 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8284 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8285 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8286 ;;Total ram usage:       14 bytes
  8287 ;; Hardware stack levels used: 1
  8288 ;; Hardware stack levels required when called: 1
  8289 ;; This function calls:
  8290 ;;		Nothing
  8291 ;; This function is called by:
  8292 ;;		_main
  8293 ;;		_Read_Sensors
  8294 ;;		_powf
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           	psect	text9
  8299   0055D4                     __ptext9:
  8300                           	callstack 0
  8301   0055D4                     ___xxtofl:
  8302                           	callstack 29
  8303                           
  8304                           ;incstack = 0
  8305                           ;___xxtofl@sign stored from wreg
  8306   0055D4  6E09               	movwf	___xxtofl@sign^0,c
  8307   0055D6  5009               	movf	___xxtofl@sign^0,w,c
  8308   0055D8  B4D8               	btfsc	status,2,c
  8309   0055DA  EFF1  F02A         	goto	u9241
  8310   0055DE  EFF3  F02A         	goto	u9240
  8311   0055E2                     u9241:
  8312   0055E2  EF15  F02B         	goto	l930
  8313   0055E6                     u9240:
  8314   0055E6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8315   0055E8  EFFA  F02A         	goto	u9250
  8316   0055EC  EFF8  F02A         	goto	u9251
  8317   0055F0                     u9251:
  8318   0055F0  EF15  F02B         	goto	l930
  8319   0055F4                     u9250:
  8320   0055F4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8321   0055F8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8322   0055FC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8323   005600  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8324   005604  1E05               	comf	??___xxtofl^0,f,c
  8325   005606  1E06               	comf	(??___xxtofl+1)^0,f,c
  8326   005608  1E07               	comf	(??___xxtofl+2)^0,f,c
  8327   00560A  1E08               	comf	(??___xxtofl+3)^0,f,c
  8328   00560C  2A05               	incf	??___xxtofl^0,f,c
  8329   00560E  0E00               	movlw	0
  8330   005610  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8331   005612  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8332   005614  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8333   005616  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8334   00561A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8335   00561E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8336   005622  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8337   005626  EF1D  F02B         	goto	l7152
  8338   00562A                     l930:
  8339   00562A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8340   00562E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8341   005632  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8342   005636  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8343   00563A                     l7152:
  8344   00563A  5001               	movf	___xxtofl@val^0,w,c
  8345   00563C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8346   00563E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8347   005640  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8348   005642  A4D8               	btfss	status,2,c
  8349   005644  EF26  F02B         	goto	u9261
  8350   005648  EF28  F02B         	goto	u9260
  8351   00564C                     u9261:
  8352   00564C  EF32  F02B         	goto	l7158
  8353   005650                     u9260:
  8354   005650  0E00               	movlw	0
  8355   005652  6E01               	movwf	?___xxtofl^0,c
  8356   005654  0E00               	movlw	0
  8357   005656  6E02               	movwf	(?___xxtofl+1)^0,c
  8358   005658  0E00               	movlw	0
  8359   00565A  6E03               	movwf	(?___xxtofl+2)^0,c
  8360   00565C  0E00               	movlw	0
  8361   00565E  6E04               	movwf	(?___xxtofl+3)^0,c
  8362   005660  EFC3  F02B         	goto	l933
  8363   005664                     l7158:
  8364   005664  0E96               	movlw	150
  8365   005666  6E0A               	movwf	___xxtofl@exp^0,c
  8366   005668  EF3C  F02B         	goto	l7162
  8367   00566C                     l7160:
  8368   00566C  2A0A               	incf	___xxtofl@exp^0,f,c
  8369   00566E  90D8               	bcf	status,0,c
  8370   005670  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8371   005672  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8372   005674  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8373   005676  320B               	rrcf	___xxtofl@arg^0,f,c
  8374   005678                     l7162:
  8375   005678  0E00               	movlw	0
  8376   00567A  140B               	andwf	___xxtofl@arg^0,w,c
  8377   00567C  6E05               	movwf	??___xxtofl^0,c
  8378   00567E  0E00               	movlw	0
  8379   005680  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8380   005682  6E06               	movwf	(??___xxtofl+1)^0,c
  8381   005684  0E00               	movlw	0
  8382   005686  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8383   005688  6E07               	movwf	(??___xxtofl+2)^0,c
  8384   00568A  0EFE               	movlw	254
  8385   00568C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8386   00568E  6E08               	movwf	(??___xxtofl+3)^0,c
  8387   005690  5005               	movf	??___xxtofl^0,w,c
  8388   005692  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8389   005694  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8390   005696  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8391   005698  A4D8               	btfss	status,2,c
  8392   00569A  EF51  F02B         	goto	u9271
  8393   00569E  EF53  F02B         	goto	u9270
  8394   0056A2                     u9271:
  8395   0056A2  EF36  F02B         	goto	l7160
  8396   0056A6                     u9270:
  8397   0056A6  EF61  F02B         	goto	l937
  8398   0056AA                     l7164:
  8399   0056AA  2A0A               	incf	___xxtofl@exp^0,f,c
  8400   0056AC  0E01               	movlw	1
  8401   0056AE  260B               	addwf	___xxtofl@arg^0,f,c
  8402   0056B0  0E00               	movlw	0
  8403   0056B2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8404   0056B4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8405   0056B6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8406   0056B8  90D8               	bcf	status,0,c
  8407   0056BA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8408   0056BC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8409   0056BE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8410   0056C0  320B               	rrcf	___xxtofl@arg^0,f,c
  8411   0056C2                     l937:
  8412   0056C2  0E00               	movlw	0
  8413   0056C4  140B               	andwf	___xxtofl@arg^0,w,c
  8414   0056C6  6E05               	movwf	??___xxtofl^0,c
  8415   0056C8  0E00               	movlw	0
  8416   0056CA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8417   0056CC  6E06               	movwf	(??___xxtofl+1)^0,c
  8418   0056CE  0E00               	movlw	0
  8419   0056D0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8420   0056D2  6E07               	movwf	(??___xxtofl+2)^0,c
  8421   0056D4  0EFF               	movlw	255
  8422   0056D6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8423   0056D8  6E08               	movwf	(??___xxtofl+3)^0,c
  8424   0056DA  5005               	movf	??___xxtofl^0,w,c
  8425   0056DC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8426   0056DE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8427   0056E0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8428   0056E2  A4D8               	btfss	status,2,c
  8429   0056E4  EF76  F02B         	goto	u9281
  8430   0056E8  EF78  F02B         	goto	u9280
  8431   0056EC                     u9281:
  8432   0056EC  EF55  F02B         	goto	l7164
  8433   0056F0                     u9280:
  8434   0056F0  EF80  F02B         	goto	l7172
  8435   0056F4                     l7170:
  8436   0056F4  060A               	decf	___xxtofl@exp^0,f,c
  8437   0056F6  90D8               	bcf	status,0,c
  8438   0056F8  360B               	rlcf	___xxtofl@arg^0,f,c
  8439   0056FA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8440   0056FC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8441   0056FE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8442   005700                     l7172:
  8443   005700  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8444   005702  EF85  F02B         	goto	u9291
  8445   005706  EF87  F02B         	goto	u9290
  8446   00570A                     u9291:
  8447   00570A  EF8F  F02B         	goto	l944
  8448   00570E                     u9290:
  8449   00570E  0E02               	movlw	2
  8450   005710  600A               	cpfslt	___xxtofl@exp^0,c
  8451   005712  EF8D  F02B         	goto	u9301
  8452   005716  EF8F  F02B         	goto	u9300
  8453   00571A                     u9301:
  8454   00571A  EF7A  F02B         	goto	l7170
  8455   00571E                     u9300:
  8456   00571E                     l944:
  8457   00571E  B00A               	btfsc	___xxtofl@exp^0,0,c
  8458   005720  EF94  F02B         	goto	u9311
  8459   005724  EF96  F02B         	goto	u9310
  8460   005728                     u9311:
  8461   005728  EF97  F02B         	goto	l7178
  8462   00572C                     u9310:
  8463   00572C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8464   00572E                     l7178:
  8465   00572E  90D8               	bcf	status,0,c
  8466   005730  320A               	rrcf	___xxtofl@exp^0,f,c
  8467   005732  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8468   005736  6A06               	clrf	(??___xxtofl+1)^0,c
  8469   005738  6A07               	clrf	(??___xxtofl+2)^0,c
  8470   00573A  6A08               	clrf	(??___xxtofl+3)^0,c
  8471   00573C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8472   005740  6A07               	clrf	(??___xxtofl+2)^0,c
  8473   005742  6A06               	clrf	(??___xxtofl+1)^0,c
  8474   005744  6A05               	clrf	??___xxtofl^0,c
  8475   005746  5005               	movf	??___xxtofl^0,w,c
  8476   005748  120B               	iorwf	___xxtofl@arg^0,f,c
  8477   00574A  5006               	movf	(??___xxtofl+1)^0,w,c
  8478   00574C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8479   00574E  5007               	movf	(??___xxtofl+2)^0,w,c
  8480   005750  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8481   005752  5008               	movf	(??___xxtofl+3)^0,w,c
  8482   005754  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8483   005756  5009               	movf	___xxtofl@sign^0,w,c
  8484   005758  B4D8               	btfsc	status,2,c
  8485   00575A  EFB1  F02B         	goto	u9321
  8486   00575E  EFB3  F02B         	goto	u9320
  8487   005762                     u9321:
  8488   005762  EFBB  F02B         	goto	l7188
  8489   005766                     u9320:
  8490   005766  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8491   005768  EFBA  F02B         	goto	u9330
  8492   00576C  EFB8  F02B         	goto	u9331
  8493   005770                     u9331:
  8494   005770  EFBB  F02B         	goto	l7188
  8495   005774                     u9330:
  8496   005774  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8497   005776                     l7188:
  8498   005776  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8499   00577A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8500   00577E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8501   005782  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8502   005786                     l933:
  8503   005786  0012               	return		;funcret
  8504   005788                     __end_of___xxtofl:
  8505                           	callstack 0
  8506                           
  8507 ;; *************** function _Apply_Filter *****************
  8508 ;; Defined at:
  8509 ;;		line 366 in file "newmain.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  new_value       4   80[COMRAM] float 
  8512 ;;  samples         2   84[COMRAM] PTR float 
  8513 ;;		 -> temp_samples(20), 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  i               2    4[BANK0 ] int 
  8516 ;;  sum             4    0[BANK0 ] float 
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  4   80[COMRAM] float 
  8519 ;; Registers used:
  8520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8526 ;;      Params:         6       0       0       0       0       0       0       0       0
  8527 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8528 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8529 ;;      Totals:         8       6       0       0       0       0       0       0       0
  8530 ;;Total ram usage:       14 bytes
  8531 ;; Hardware stack levels used: 1
  8532 ;; Hardware stack levels required when called: 2
  8533 ;; This function calls:
  8534 ;;		___fladd
  8535 ;;		___fldiv
  8536 ;; This function is called by:
  8537 ;;		_Read_Sensors
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text10
  8542   0064BE                     __ptext10:
  8543                           	callstack 0
  8544   0064BE                     _Apply_Filter:
  8545                           	callstack 27
  8546   0064BE                     
  8547                           ;newmain.c: 367:     samples[sample_index] = new_value;
  8548   0064BE  0103               	movlb	3	; () banked
  8549   0064C0  516C               	movf	_sample_index& (0+255),w,b
  8550   0064C2  0D04               	mullw	4
  8551   0064C4  CFF3 F057          	movff	prodl,??_Apply_Filter
  8552   0064C8  CFF4 F058          	movff	prodh,??_Apply_Filter+1
  8553   0064CC  5057               	movf	??_Apply_Filter^0,w,c
  8554   0064CE  2455               	addwf	Apply_Filter@samples^0,w,c
  8555   0064D0  6ED9               	movwf	fsr2l,c
  8556   0064D2  5058               	movf	(??_Apply_Filter+1)^0,w,c
  8557   0064D4  2056               	addwfc	(Apply_Filter@samples+1)^0,w,c
  8558   0064D6  6EDA               	movwf	fsr2h,c
  8559   0064D8  C051  FFDE         	movff	Apply_Filter@new_value,postinc2
  8560   0064DC  C052  FFDE         	movff	Apply_Filter@new_value+1,postinc2
  8561   0064E0  C053  FFDE         	movff	Apply_Filter@new_value+2,postinc2
  8562   0064E4  C054  FFDE         	movff	Apply_Filter@new_value+3,postinc2
  8563   0064E8                     
  8564                           ; BSR set to: 3
  8565                           ;newmain.c: 369:     float sum = 0;
  8566   0064E8  0E00               	movlw	0
  8567   0064EA  0100               	movlb	0	; () banked
  8568   0064EC  6F60               	movwf	Apply_Filter@sum& (0+255),b
  8569   0064EE  0E00               	movlw	0
  8570   0064F0  6F61               	movwf	(Apply_Filter@sum+1)& (0+255),b
  8571   0064F2  0E00               	movlw	0
  8572   0064F4  6F62               	movwf	(Apply_Filter@sum+2)& (0+255),b
  8573   0064F6  0E00               	movlw	0
  8574   0064F8  6F63               	movwf	(Apply_Filter@sum+3)& (0+255),b
  8575   0064FA                     
  8576                           ; BSR set to: 0
  8577                           ;newmain.c: 370:     for(int i = 0; i < 5; i++) {
  8578   0064FA  0E00               	movlw	0
  8579   0064FC  6F65               	movwf	(Apply_Filter@i+1)& (0+255),b
  8580   0064FE  0E00               	movlw	0
  8581   006500  6F64               	movwf	Apply_Filter@i& (0+255),b
  8582   006502                     l7330:
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;newmain.c: 371:         sum += samples[i];
  8586   006502  C060  F041         	movff	Apply_Filter@sum,___fladd@b
  8587   006506  C061  F042         	movff	Apply_Filter@sum+1,___fladd@b+1
  8588   00650A  C062  F043         	movff	Apply_Filter@sum+2,___fladd@b+2
  8589   00650E  C063  F044         	movff	Apply_Filter@sum+3,___fladd@b+3
  8590   006512  90D8               	bcf	status,0,c
  8591   006514  3564               	rlcf	Apply_Filter@i& (0+255),w,b
  8592   006516  6ED9               	movwf	fsr2l,c
  8593   006518  3565               	rlcf	(Apply_Filter@i+1)& (0+255),w,b
  8594   00651A  6EDA               	movwf	fsr2h,c
  8595   00651C  90D8               	bcf	status,0,c
  8596   00651E  36D9               	rlcf	fsr2l,f,c
  8597   006520  36DA               	rlcf	fsr2h,f,c
  8598   006522  5055               	movf	Apply_Filter@samples^0,w,c
  8599   006524  26D9               	addwf	fsr2l,f,c
  8600   006526  5056               	movf	(Apply_Filter@samples+1)^0,w,c
  8601   006528  22DA               	addwfc	fsr2h,f,c
  8602   00652A  CFDE F045          	movff	postinc2,___fladd@a
  8603   00652E  CFDE F046          	movff	postinc2,___fladd@a+1
  8604   006532  CFDE F047          	movff	postinc2,___fladd@a+2
  8605   006536  CFDE F048          	movff	postinc2,___fladd@a+3
  8606   00653A  EC9B  F01D         	call	___fladd	;wreg free
  8607   00653E  C041  F060         	movff	?___fladd,Apply_Filter@sum
  8608   006542  C042  F061         	movff	?___fladd+1,Apply_Filter@sum+1
  8609   006546  C043  F062         	movff	?___fladd+2,Apply_Filter@sum+2
  8610   00654A  C044  F063         	movff	?___fladd+3,Apply_Filter@sum+3
  8611   00654E                     
  8612                           ;newmain.c: 372:     }
  8613   00654E  0100               	movlb	0	; () banked
  8614   006550  4B64               	infsnz	Apply_Filter@i& (0+255),f,b
  8615   006552  2B65               	incf	(Apply_Filter@i+1)& (0+255),f,b
  8616   006554                     
  8617                           ; BSR set to: 0
  8618   006554  BF65               	btfsc	(Apply_Filter@i+1)& (0+255),7,b
  8619   006556  EFB6  F032         	goto	u9591
  8620   00655A  5165               	movf	(Apply_Filter@i+1)& (0+255),w,b
  8621   00655C  E109               	bnz	u9590
  8622   00655E  0E05               	movlw	5
  8623   006560  5D64               	subwf	Apply_Filter@i& (0+255),w,b
  8624   006562  A0D8               	btfss	status,0,c
  8625   006564  EFB6  F032         	goto	u9591
  8626   006568  EFB8  F032         	goto	u9590
  8627   00656C                     u9591:
  8628   00656C  EF81  F032         	goto	l7330
  8629   006570                     u9590:
  8630   006570                     
  8631                           ; BSR set to: 0
  8632                           ;newmain.c: 373:     return sum / 5;
  8633   006570  C060  F028         	movff	Apply_Filter@sum,___fldiv@b
  8634   006574  C061  F029         	movff	Apply_Filter@sum+1,___fldiv@b+1
  8635   006578  C062  F02A         	movff	Apply_Filter@sum+2,___fldiv@b+2
  8636   00657C  C063  F02B         	movff	Apply_Filter@sum+3,___fldiv@b+3
  8637   006580  0E00               	movlw	0
  8638   006582  6E2C               	movwf	___fldiv@a^0,c
  8639   006584  0E00               	movlw	0
  8640   006586  6E2D               	movwf	(___fldiv@a+1)^0,c
  8641   006588  0EA0               	movlw	160
  8642   00658A  6E2E               	movwf	(___fldiv@a+2)^0,c
  8643   00658C  0E40               	movlw	64
  8644   00658E  6E2F               	movwf	(___fldiv@a+3)^0,c
  8645   006590  ECF8  F023         	call	___fldiv	;wreg free
  8646   006594  C028  F051         	movff	?___fldiv,?_Apply_Filter
  8647   006598  C029  F052         	movff	?___fldiv+1,?_Apply_Filter+1
  8648   00659C  C02A  F053         	movff	?___fldiv+2,?_Apply_Filter+2
  8649   0065A0  C02B  F054         	movff	?___fldiv+3,?_Apply_Filter+3
  8650   0065A4  0012               	return		;funcret
  8651   0065A6                     __end_of_Apply_Filter:
  8652                           	callstack 0
  8653                           
  8654 ;; *************** function _ADC_Read *****************
  8655 ;; Defined at:
  8656 ;;		line 423 in file "newmain.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;  channel         1    wreg     unsigned char 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;  channel         1    4[COMRAM] unsigned char 
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  2    0[COMRAM] unsigned int 
  8663 ;; Registers used:
  8664 ;;		wreg, status,2, status,0
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8670 ;;      Params:         2       0       0       0       0       0       0       0       0
  8671 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8672 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8673 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8674 ;;Total ram usage:        5 bytes
  8675 ;; Hardware stack levels used: 1
  8676 ;; Hardware stack levels required when called: 1
  8677 ;; This function calls:
  8678 ;;		Nothing
  8679 ;; This function is called by:
  8680 ;;		_main
  8681 ;;		_Read_Sensors
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text11
  8686   006D02                     __ptext11:
  8687                           	callstack 0
  8688   006D02                     _ADC_Read:
  8689                           	callstack 28
  8690                           
  8691                           ;incstack = 0
  8692                           ;ADC_Read@channel stored from wreg
  8693   006D02  6E05               	movwf	ADC_Read@channel^0,c
  8694   006D04                     
  8695                           ;newmain.c: 424:     ADCON0bits.CHS = channel;
  8696   006D04  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  8697   006D08  4603               	rlncf	??_ADC_Read^0,f,c
  8698   006D0A  4603               	rlncf	??_ADC_Read^0,f,c
  8699   006D0C  50C2               	movf	194,w,c	;volatile
  8700   006D0E  1803               	xorwf	??_ADC_Read^0,w,c
  8701   006D10  0BC3               	andlw	-61
  8702   006D12  1803               	xorwf	??_ADC_Read^0,w,c
  8703   006D14  6EC2               	movwf	194,c	;volatile
  8704   006D16                     
  8705                           ;newmain.c: 425:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  8706   006D16  0E14               	movlw	20
  8707   006D18                     u10757:
  8708   006D18  2EE8               	decfsz	wreg,f,c
  8709   006D1A  D7FE               	bra	u10757
  8710   006D1C                     
  8711                           ;newmain.c: 426:     ADCON0bits.GO = 1;
  8712   006D1C  82C2               	bsf	194,1,c	;volatile
  8713   006D1E                     l263:
  8714   006D1E  B2C2               	btfsc	194,1,c	;volatile
  8715   006D20  EF94  F036         	goto	u9551
  8716   006D24  EF96  F036         	goto	u9550
  8717   006D28                     u9551:
  8718   006D28  EF8F  F036         	goto	l263
  8719   006D2C                     u9550:
  8720   006D2C                     
  8721                           ;newmain.c: 428:     return ((unsigned int)ADRESH << 8) | ADRESL;
  8722   006D2C  50C4               	movf	196,w,c	;volatile
  8723   006D2E  6E03               	movwf	??_ADC_Read^0,c
  8724   006D30  50C3               	movf	195,w,c	;volatile
  8725   006D32  6E01               	movwf	?_ADC_Read^0,c
  8726   006D34  C003  F002         	movff	??_ADC_Read,?_ADC_Read+1
  8727   006D38  0012               	return		;funcret
  8728   006D3A                     __end_of_ADC_Read:
  8729                           	callstack 0
  8730                           
  8731 ;; *************** function _Interrupt_Init *****************
  8732 ;; Defined at:
  8733 ;;		line 431 in file "newmain.c"
  8734 ;; Parameters:    Size  Location     Type
  8735 ;;		None
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;		None
  8738 ;; Return value:  Size  Location     Type
  8739 ;;                  1    wreg      void 
  8740 ;; Registers used:
  8741 ;;		None
  8742 ;; Tracked objects:
  8743 ;;		On entry : 0/0
  8744 ;;		On exit  : 0/0
  8745 ;;		Unchanged: 0/0
  8746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8747 ;;      Params:         0       0       0       0       0       0       0       0       0
  8748 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8750 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8751 ;;Total ram usage:        0 bytes
  8752 ;; Hardware stack levels used: 1
  8753 ;; Hardware stack levels required when called: 1
  8754 ;; This function calls:
  8755 ;;		Nothing
  8756 ;; This function is called by:
  8757 ;;		_main
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           	psect	text12
  8762   006E38                     __ptext12:
  8763                           	callstack 0
  8764   006E38                     _Interrupt_Init:
  8765                           	callstack 29
  8766   006E38                     
  8767                           ;newmain.c: 432:     TRISBbits.TRISB1 = 1;
  8768   006E38  8293               	bsf	147,1,c	;volatile
  8769                           
  8770                           ;newmain.c: 433:     INTCON2bits.INTEDG1 = 0;
  8771   006E3A  9AF1               	bcf	241,5,c	;volatile
  8772                           
  8773                           ;newmain.c: 434:     INTCON3bits.INT1IE = 1;
  8774   006E3C  86F0               	bsf	240,3,c	;volatile
  8775                           
  8776                           ;newmain.c: 435:     INTCON3bits.INT1IP = 1;
  8777   006E3E  8CF0               	bsf	240,6,c	;volatile
  8778                           
  8779                           ;newmain.c: 436:     RCONbits.IPEN = 1;
  8780   006E40  8ED0               	bsf	208,7,c	;volatile
  8781                           
  8782                           ;newmain.c: 437:     INTCONbits.GIEH = 1;
  8783   006E42  8EF2               	bsf	242,7,c	;volatile
  8784                           
  8785                           ;newmain.c: 438:     INTCONbits.GIEL = 1;
  8786   006E44  8CF2               	bsf	242,6,c	;volatile
  8787   006E46  0012               	return		;funcret
  8788   006E48                     __end_of_Interrupt_Init:
  8789                           	callstack 0
  8790                           
  8791 ;; *************** function _Handle_Test_Events *****************
  8792 ;; Defined at:
  8793 ;;		line 254 in file "newmain.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;		None
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  test_data      50  202[BANK1 ] unsigned char [50]
  8798 ;;  water_used      4  252[BANK1 ] float 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8808 ;;      Params:         0       0       0       0       0       0       0       0       0
  8809 ;;      Locals:         0       0      54       0       0       0       0       0       0
  8810 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8811 ;;      Totals:         0       2      54       0       0       0       0       0       0
  8812 ;;Total ram usage:       56 bytes
  8813 ;; Hardware stack levels used: 1
  8814 ;; Hardware stack levels required when called: 10
  8815 ;; This function calls:
  8816 ;;		_Send_History_Event
  8817 ;;		___flsub
  8818 ;;		_sprintf
  8819 ;; This function is called by:
  8820 ;;		_main
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text13
  8825   005FEA                     __ptext13:
  8826                           	callstack 0
  8827   005FEA                     _Handle_Test_Events:
  8828                           	callstack 20
  8829   005FEA                     
  8830                           ;newmain.c: 255:     static bool prev_test = 0;;newmain.c: 258:     if(trigger_test && !
      +                          prev_test) {
  8831   005FEA  505E               	movf	_trigger_test^0,w,c
  8832   005FEC  B4D8               	btfsc	status,2,c
  8833   005FEE  EFFB  F02F         	goto	u10491
  8834   005FF2  EFFD  F02F         	goto	u10490
  8835   005FF6                     u10491:
  8836   005FF6  EF11  F030         	goto	l7962
  8837   005FFA                     u10490:
  8838   005FFA  0103               	movlb	3	; () banked
  8839   005FFC  516A               	movf	Handle_Test_Events@prev_test& (0+255),w,b
  8840   005FFE  A4D8               	btfss	status,2,c
  8841   006000  EF04  F030         	goto	u10501
  8842   006004  EF06  F030         	goto	u10500
  8843   006008                     u10501:
  8844   006008  EF11  F030         	goto	l7962
  8845   00600C                     u10500:
  8846   00600C                     
  8847                           ; BSR set to: 3
  8848                           ;newmain.c: 259:         Send_History_Event("test_start", "");
  8849   00600C  0EB9               	movlw	low STR_8
  8850   00600E  0100               	movlb	0	; () banked
  8851   006010  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  8852   006012  0E7F               	movlw	high STR_8
  8853   006014  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  8854   006016  0E61               	movlw	low (STR_16+29)
  8855   006018  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  8856   00601A  0E7F               	movlw	high (STR_16+29)
  8857   00601C  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  8858   00601E  EC84  F034         	call	_Send_History_Event	;wreg free
  8859   006022                     l7962:
  8860                           
  8861                           ;newmain.c: 263:     if(!trigger_test && prev_test) {
  8862   006022  505E               	movf	_trigger_test^0,w,c
  8863   006024  A4D8               	btfss	status,2,c
  8864   006026  EF17  F030         	goto	u10511
  8865   00602A  EF19  F030         	goto	u10510
  8866   00602E                     u10511:
  8867   00602E  EF74  F030         	goto	l7978
  8868   006032                     u10510:
  8869   006032  0103               	movlb	3	; () banked
  8870   006034  516A               	movf	Handle_Test_Events@prev_test& (0+255),w,b
  8871   006036  B4D8               	btfsc	status,2,c
  8872   006038  EF20  F030         	goto	u10521
  8873   00603C  EF22  F030         	goto	u10520
  8874   006040                     u10521:
  8875   006040  EF74  F030         	goto	l7978
  8876   006044                     u10520:
  8877   006044                     
  8878                           ; BSR set to: 3
  8879                           ;newmain.c: 264:         float water_used = total_flow - test_start_flow;
  8880   006044  C348  F051         	movff	_total_flow,___flsub@b
  8881   006048  C349  F052         	movff	_total_flow+1,___flsub@b+1
  8882   00604C  C34A  F053         	movff	_total_flow+2,___flsub@b+2
  8883   006050  C34B  F054         	movff	_total_flow+3,___flsub@b+3
  8884   006054  C32C  F055         	movff	_test_start_flow,___flsub@a
  8885   006058  C32D  F056         	movff	_test_start_flow+1,___flsub@a+1
  8886   00605C  C32E  F057         	movff	_test_start_flow+2,___flsub@a+2
  8887   006060  C32F  F058         	movff	_test_start_flow+3,___flsub@a+3
  8888   006064  EC1C  F036         	call	___flsub	;wreg free
  8889   006068  C051  F1FC         	movff	?___flsub,Handle_Test_Events@water_used
  8890   00606C  C052  F1FD         	movff	?___flsub+1,Handle_Test_Events@water_used+1
  8891   006070  C053  F1FE         	movff	?___flsub+2,Handle_Test_Events@water_used+2
  8892   006074  C054  F1FF         	movff	?___flsub+3,Handle_Test_Events@water_used+3
  8893   006078                     
  8894                           ;newmain.c: 266:         char test_data[50];;newmain.c: 267:         sprintf(test_data, 
      +                          ",\"water\":%.2f", water_used);
  8895   006078  0ECA               	movlw	low Handle_Test_Events@test_data
  8896   00607A  0100               	movlb	0	; () banked
  8897   00607C  6FB0               	movwf	sprintf@s& (0+255),b
  8898   00607E  0E01               	movlw	high Handle_Test_Events@test_data
  8899   006080  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  8900   006082  0E71               	movlw	low (STR_6+15)
  8901   006084  6FB2               	movwf	sprintf@fmt& (0+255),b
  8902   006086  0E7F               	movlw	high (STR_6+15)
  8903   006088  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  8904   00608A  C1FC  F0B4         	movff	Handle_Test_Events@water_used,?_sprintf+4
  8905   00608E  C1FD  F0B5         	movff	Handle_Test_Events@water_used+1,?_sprintf+5
  8906   006092  C1FE  F0B6         	movff	Handle_Test_Events@water_used+2,?_sprintf+6
  8907   006096  C1FF  F0B7         	movff	Handle_Test_Events@water_used+3,?_sprintf+7
  8908   00609A  EC3F  F036         	call	_sprintf	;wreg free
  8909   00609E                     
  8910                           ;newmain.c: 268:         Send_History_Event("test_end", test_data);
  8911   00609E  0ED7               	movlw	low STR_11
  8912   0060A0  0100               	movlb	0	; () banked
  8913   0060A2  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  8914   0060A4  0E7F               	movlw	high STR_11
  8915   0060A6  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  8916   0060A8  0ECA               	movlw	low Handle_Test_Events@test_data
  8917   0060AA  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  8918   0060AC  0E01               	movlw	high Handle_Test_Events@test_data
  8919   0060AE  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  8920   0060B0  EC84  F034         	call	_Send_History_Event	;wreg free
  8921   0060B4                     
  8922                           ;newmain.c: 271:         _delay((unsigned long)((3000)*(8000000/4000.0)));
  8923   0060B4  0E1F               	movlw	31
  8924   0060B6  0100               	movlb	0	; () banked
  8925   0060B8  6FE5               	movwf	(??_Handle_Test_Events+1)& (0+255),b
  8926   0060BA  0E71               	movlw	113
  8927   0060BC  6FE4               	movwf	??_Handle_Test_Events& (0+255),b
  8928   0060BE  0E1E               	movlw	30
  8929   0060C0                     u10767:
  8930   0060C0  2EE8               	decfsz	wreg,f,c
  8931   0060C2  D7FE               	bra	u10767
  8932   0060C4  2FE4               	decfsz	??_Handle_Test_Events& (0+255),f,b
  8933   0060C6  D7FC               	bra	u10767
  8934   0060C8  2FE5               	decfsz	(??_Handle_Test_Events+1)& (0+255),f,b
  8935   0060CA  D7FA               	bra	u10767
  8936   0060CC  0000               	nop	
  8937   0060CE                     
  8938                           ;newmain.c: 272:         total_flow = 0.0;
  8939   0060CE  0E00               	movlw	0
  8940   0060D0  0103               	movlb	3	; () banked
  8941   0060D2  6F48               	movwf	_total_flow& (0+255),b
  8942   0060D4  0E00               	movlw	0
  8943   0060D6  6F49               	movwf	(_total_flow+1)& (0+255),b
  8944   0060D8  0E00               	movlw	0
  8945   0060DA  6F4A               	movwf	(_total_flow+2)& (0+255),b
  8946   0060DC  0E00               	movlw	0
  8947   0060DE  6F4B               	movwf	(_total_flow+3)& (0+255),b
  8948   0060E0                     
  8949                           ; BSR set to: 3
  8950                           ;newmain.c: 273:         pulse_count = 0;
  8951   0060E0  0E00               	movlw	0
  8952   0060E2  6F67               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  8953   0060E4  0E00               	movlw	0
  8954   0060E6  6F66               	movwf	_pulse_count& (0+255),b	;volatile
  8955   0060E8                     l7978:
  8956                           
  8957                           ;newmain.c: 276:     prev_test = trigger_test;
  8958   0060E8  C05E  F36A         	movff	_trigger_test,Handle_Test_Events@prev_test
  8959   0060EC  0012               	return		;funcret
  8960   0060EE                     __end_of_Handle_Test_Events:
  8961                           	callstack 0
  8962                           
  8963 ;; *************** function _Handle_Shutdown_Events *****************
  8964 ;; Defined at:
  8965 ;;		line 279 in file "newmain.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;		None
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;		None
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  1    wreg      void 
  8972 ;; Registers used:
  8973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8979 ;;      Params:         0       0       0       0       0       0       0       0       0
  8980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8982 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8983 ;;Total ram usage:        0 bytes
  8984 ;; Hardware stack levels used: 1
  8985 ;; Hardware stack levels required when called: 10
  8986 ;; This function calls:
  8987 ;;		_Send_History_Event
  8988 ;; This function is called by:
  8989 ;;		_main
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text14
  8994   006A24                     __ptext14:
  8995                           	callstack 0
  8996   006A24                     _Handle_Shutdown_Events:
  8997                           	callstack 20
  8998   006A24                     
  8999                           ;newmain.c: 280:     static bool prev_shutdown = 0;;newmain.c: 283:     if(shutdown_syst
      +                          em && !prev_shutdown) {
  9000   006A24  0103               	movlb	3	; () banked
  9001   006A26  516B               	movf	_shutdown_system& (0+255),w,b
  9002   006A28  B4D8               	btfsc	status,2,c
  9003   006A2A  EF19  F035         	goto	u10531
  9004   006A2E  EF1B  F035         	goto	u10530
  9005   006A32                     u10531:
  9006   006A32  EF2E  F035         	goto	l7986
  9007   006A36                     u10530:
  9008   006A36                     
  9009                           ; BSR set to: 3
  9010   006A36  5169               	movf	Handle_Shutdown_Events@prev_shutdown& (0+255),w,b
  9011   006A38  A4D8               	btfss	status,2,c
  9012   006A3A  EF21  F035         	goto	u10541
  9013   006A3E  EF23  F035         	goto	u10540
  9014   006A42                     u10541:
  9015   006A42  EF2E  F035         	goto	l7986
  9016   006A46                     u10540:
  9017   006A46                     
  9018                           ; BSR set to: 3
  9019                           ;newmain.c: 284:         Send_History_Event("shutdown", "");
  9020   006A46  0EE0               	movlw	low STR_12
  9021   006A48  0100               	movlb	0	; () banked
  9022   006A4A  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9023   006A4C  0E7F               	movlw	high STR_12
  9024   006A4E  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9025   006A50  0E61               	movlw	low (STR_16+29)
  9026   006A52  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9027   006A54  0E7F               	movlw	high (STR_16+29)
  9028   006A56  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9029   006A58  EC84  F034         	call	_Send_History_Event	;wreg free
  9030   006A5C                     l7986:
  9031                           
  9032                           ;newmain.c: 288:     if(!shutdown_system && prev_shutdown) {
  9033   006A5C  0103               	movlb	3	; () banked
  9034   006A5E  516B               	movf	_shutdown_system& (0+255),w,b
  9035   006A60  A4D8               	btfss	status,2,c
  9036   006A62  EF35  F035         	goto	u10551
  9037   006A66  EF37  F035         	goto	u10550
  9038   006A6A                     u10551:
  9039   006A6A  EF4A  F035         	goto	l7992
  9040   006A6E                     u10550:
  9041   006A6E                     
  9042                           ; BSR set to: 3
  9043   006A6E  5169               	movf	Handle_Shutdown_Events@prev_shutdown& (0+255),w,b
  9044   006A70  B4D8               	btfsc	status,2,c
  9045   006A72  EF3D  F035         	goto	u10561
  9046   006A76  EF3F  F035         	goto	u10560
  9047   006A7A                     u10561:
  9048   006A7A  EF4A  F035         	goto	l7992
  9049   006A7E                     u10560:
  9050   006A7E                     
  9051                           ; BSR set to: 3
  9052                           ;newmain.c: 289:         Send_History_Event("resume", "");
  9053   006A7E  0EF0               	movlw	low STR_14
  9054   006A80  0100               	movlb	0	; () banked
  9055   006A82  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9056   006A84  0E7F               	movlw	high STR_14
  9057   006A86  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9058   006A88  0E61               	movlw	low (STR_16+29)
  9059   006A8A  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9060   006A8C  0E7F               	movlw	high (STR_16+29)
  9061   006A8E  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9062   006A90  EC84  F034         	call	_Send_History_Event	;wreg free
  9063   006A94                     l7992:
  9064                           
  9065                           ;newmain.c: 292:     prev_shutdown = shutdown_system;
  9066   006A94  C36B  F369         	movff	_shutdown_system,Handle_Shutdown_Events@prev_shutdown
  9067   006A98  0012               	return		;funcret
  9068   006A9A                     __end_of_Handle_Shutdown_Events:
  9069                           	callstack 0
  9070                           
  9071 ;; *************** function _Handle_Fire_Events *****************
  9072 ;; Defined at:
  9073 ;;		line 212 in file "newmain.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;		None
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;  end_data      150    0[BANK2 ] unsigned char [150]
  9078 ;;  water_used      4  138[BANK0 ] float 
  9079 ;;  duration        4  134[BANK0 ] unsigned long 
  9080 ;;  start_data    100  150[BANK2 ] unsigned char [100]
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1    wreg      void 
  9083 ;; Registers used:
  9084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9090 ;;      Params:         0       0       0       0       0       0       0       0       0
  9091 ;;      Locals:         0       8       0     250       0       0       0       0       0
  9092 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9093 ;;      Totals:         0      10       0     250       0       0       0       0       0
  9094 ;;Total ram usage:      260 bytes
  9095 ;; Hardware stack levels used: 1
  9096 ;; Hardware stack levels required when called: 10
  9097 ;; This function calls:
  9098 ;;		_Send_History_Event
  9099 ;;		___flge
  9100 ;;		___flsub
  9101 ;;		___lldiv
  9102 ;;		_sprintf
  9103 ;;		_strcpy
  9104 ;; This function is called by:
  9105 ;;		_main
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           	psect	text15
  9110   004F04                     __ptext15:
  9111                           	callstack 0
  9112   004F04                     _Handle_Fire_Events:
  9113                           	callstack 20
  9114   004F04                     
  9115                           ;newmain.c: 214:     if(fire_alarm && !prev_fire_alarm) {
  9116   004F04  0103               	movlb	3	; () banked
  9117   004F06  516E               	movf	_fire_alarm& (0+255),w,b
  9118   004F08  B4D8               	btfsc	status,2,c
  9119   004F0A  EF89  F027         	goto	u10421
  9120   004F0E  EF8B  F027         	goto	u10420
  9121   004F12                     u10421:
  9122   004F12  EF34  F028         	goto	l7938
  9123   004F16                     u10420:
  9124   004F16                     
  9125                           ; BSR set to: 3
  9126   004F16  516D               	movf	_prev_fire_alarm& (0+255),w,b
  9127   004F18  A4D8               	btfss	status,2,c
  9128   004F1A  EF91  F027         	goto	u10431
  9129   004F1E  EF93  F027         	goto	u10430
  9130   004F22                     u10431:
  9131   004F22  EF34  F028         	goto	l7938
  9132   004F26                     u10430:
  9133   004F26                     
  9134                           ; BSR set to: 3
  9135                           ;newmain.c: 215:         fire_start_time = system_millis;
  9136   004F26  C2FA  F340         	movff	_system_millis,_fire_start_time
  9137   004F2A  C2FB  F341         	movff	_system_millis+1,_fire_start_time+1
  9138   004F2E  C2FC  F342         	movff	_system_millis+2,_fire_start_time+2
  9139   004F32  C2FD  F343         	movff	_system_millis+3,_fire_start_time+3
  9140                           
  9141                           ;newmain.c: 216:         fire_start_temp = temperature;
  9142   004F36  C35C  F33C         	movff	_temperature,_fire_start_temp
  9143   004F3A  C35D  F33D         	movff	_temperature+1,_fire_start_temp+1
  9144   004F3E  C35E  F33E         	movff	_temperature+2,_fire_start_temp+2
  9145   004F42  C35F  F33F         	movff	_temperature+3,_fire_start_temp+3
  9146                           
  9147                           ;newmain.c: 217:         fire_start_flame = flame_intensity;
  9148   004F46  C358  F338         	movff	_flame_intensity,_fire_start_flame
  9149   004F4A  C359  F339         	movff	_flame_intensity+1,_fire_start_flame+1
  9150   004F4E  C35A  F33A         	movff	_flame_intensity+2,_fire_start_flame+2
  9151   004F52  C35B  F33B         	movff	_flame_intensity+3,_fire_start_flame+3
  9152                           
  9153                           ;newmain.c: 218:         fire_start_co = co_ppm;
  9154   004F56  C350  F334         	movff	_co_ppm,_fire_start_co
  9155   004F5A  C351  F335         	movff	_co_ppm+1,_fire_start_co+1
  9156   004F5E  C352  F336         	movff	_co_ppm+2,_fire_start_co+2
  9157   004F62  C353  F337         	movff	_co_ppm+3,_fire_start_co+3
  9158                           
  9159                           ;newmain.c: 219:         fire_start_flow = total_flow;
  9160   004F66  C348  F330         	movff	_total_flow,_fire_start_flow
  9161   004F6A  C349  F331         	movff	_total_flow+1,_fire_start_flow+1
  9162   004F6E  C34A  F332         	movff	_total_flow+2,_fire_start_flow+2
  9163   004F72  C34B  F333         	movff	_total_flow+3,_fire_start_flow+3
  9164   004F76                     
  9165                           ; BSR set to: 3
  9166                           ;newmain.c: 222:         if(flame_detected) {
  9167   004F76  5171               	movf	_flame_detected& (0+255),w,b
  9168   004F78  B4D8               	btfsc	status,2,c
  9169   004F7A  EFC1  F027         	goto	u10441
  9170   004F7E  EFC3  F027         	goto	u10440
  9171   004F82                     u10441:
  9172   004F82  EFCF  F027         	goto	l7926
  9173   004F86                     u10440:
  9174   004F86                     
  9175                           ; BSR set to: 3
  9176                           ;newmain.c: 223:             strcpy(fire_trigger_sensor, "flame_sensor");
  9177   004F86  0EC2               	movlw	low _fire_trigger_sensor
  9178   004F88  6E01               	movwf	strcpy@dest^0,c
  9179   004F8A  0E03               	movlw	high _fire_trigger_sensor
  9180   004F8C  6E02               	movwf	(strcpy@dest+1)^0,c
  9181   004F8E  0EA1               	movlw	low STR_1
  9182   004F90  6E03               	movwf	strcpy@src^0,c
  9183   004F92  0E7F               	movlw	high STR_1
  9184   004F94  6E04               	movwf	(strcpy@src+1)^0,c
  9185   004F96  EC9D  F036         	call	_strcpy	;wreg free
  9186                           
  9187                           ;newmain.c: 224:         } else if(temperature >= 40.0) {
  9188   004F9A  EF1A  F028         	goto	l7934
  9189   004F9E                     l7926:
  9190                           
  9191                           ; BSR set to: 3
  9192   004F9E  C35C  F060         	movff	_temperature,___flge@ff1
  9193   004FA2  C35D  F061         	movff	_temperature+1,___flge@ff1+1
  9194   004FA6  C35E  F062         	movff	_temperature+2,___flge@ff1+2
  9195   004FAA  C35F  F063         	movff	_temperature+3,___flge@ff1+3
  9196   004FAE  0E00               	movlw	0
  9197   004FB0  0100               	movlb	0	; () banked
  9198   004FB2  6F64               	movwf	___flge@ff2& (0+255),b
  9199   004FB4  0E00               	movlw	0
  9200   004FB6  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9201   004FB8  0E20               	movlw	32
  9202   004FBA  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9203   004FBC  0E42               	movlw	66
  9204   004FBE  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9205   004FC0  EC72  F02F         	call	___flge	;wreg free
  9206   004FC4  0100               	movlb	0	; () banked
  9207   004FC6  A0D8               	btfss	status,0,c
  9208   004FC8  EFE8  F027         	goto	u10451
  9209   004FCC  EFEA  F027         	goto	u10450
  9210   004FD0                     u10451:
  9211   004FD0  EFF6  F027         	goto	l7930
  9212   004FD4                     u10450:
  9213   004FD4                     
  9214                           ; BSR set to: 0
  9215                           ;newmain.c: 225:             strcpy(fire_trigger_sensor, "temperature_sensor");
  9216   004FD4  0EC2               	movlw	low _fire_trigger_sensor
  9217   004FD6  6E01               	movwf	strcpy@dest^0,c
  9218   004FD8  0E03               	movlw	high _fire_trigger_sensor
  9219   004FDA  6E02               	movwf	(strcpy@dest+1)^0,c
  9220   004FDC  0E7F               	movlw	low STR_2
  9221   004FDE  6E03               	movwf	strcpy@src^0,c
  9222   004FE0  0E7F               	movlw	high STR_2
  9223   004FE2  6E04               	movwf	(strcpy@src+1)^0,c
  9224   004FE4  EC9D  F036         	call	_strcpy	;wreg free
  9225                           
  9226                           ;newmain.c: 226:         } else if(co_ppm >= 50.0) {
  9227   004FE8  EF1A  F028         	goto	l7934
  9228   004FEC                     l7930:
  9229                           
  9230                           ; BSR set to: 0
  9231   004FEC  C350  F060         	movff	_co_ppm,___flge@ff1
  9232   004FF0  C351  F061         	movff	_co_ppm+1,___flge@ff1+1
  9233   004FF4  C352  F062         	movff	_co_ppm+2,___flge@ff1+2
  9234   004FF8  C353  F063         	movff	_co_ppm+3,___flge@ff1+3
  9235   004FFC  0E00               	movlw	0
  9236   004FFE  6F64               	movwf	___flge@ff2& (0+255),b
  9237   005000  0E00               	movlw	0
  9238   005002  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9239   005004  0E48               	movlw	72
  9240   005006  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9241   005008  0E42               	movlw	66
  9242   00500A  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9243   00500C  EC72  F02F         	call	___flge	;wreg free
  9244   005010  0100               	movlb	0	; () banked
  9245   005012  A0D8               	btfss	status,0,c
  9246   005014  EF0E  F028         	goto	u10461
  9247   005018  EF10  F028         	goto	u10460
  9248   00501C                     u10461:
  9249   00501C  EF1A  F028         	goto	l7934
  9250   005020                     u10460:
  9251   005020                     
  9252                           ; BSR set to: 0
  9253                           ;newmain.c: 227:             strcpy(fire_trigger_sensor, "co_sensor");
  9254   005020  0EC2               	movlw	low _fire_trigger_sensor
  9255   005022  6E01               	movwf	strcpy@dest^0,c
  9256   005024  0E03               	movlw	high _fire_trigger_sensor
  9257   005026  6E02               	movwf	(strcpy@dest+1)^0,c
  9258   005028  0EC4               	movlw	low STR_3
  9259   00502A  6E03               	movwf	strcpy@src^0,c
  9260   00502C  0E7F               	movlw	high STR_3
  9261   00502E  6E04               	movwf	(strcpy@src+1)^0,c
  9262   005030  EC9D  F036         	call	_strcpy	;wreg free
  9263   005034                     l7934:
  9264                           
  9265                           ;newmain.c: 231:         char start_data[100];;newmain.c: 232:         sprintf(start_dat
      +                          a, ",\"sensor\":\"%s\"", fire_trigger_sensor);
  9266   005034  0E96               	movlw	low Handle_Fire_Events@start_data
  9267   005036  0100               	movlb	0	; () banked
  9268   005038  6FB0               	movwf	sprintf@s& (0+255),b
  9269   00503A  0E02               	movlw	high Handle_Fire_Events@start_data
  9270   00503C  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9271   00503E  0E92               	movlw	low STR_4
  9272   005040  6FB2               	movwf	sprintf@fmt& (0+255),b
  9273   005042  0E7F               	movlw	high STR_4
  9274   005044  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9275   005046  0EC2               	movlw	low _fire_trigger_sensor
  9276   005048  6FB4               	movwf	(?_sprintf+4)& (0+255),b
  9277   00504A  0E03               	movlw	high _fire_trigger_sensor
  9278   00504C  6FB5               	movwf	(?_sprintf+5)& (0+255),b
  9279   00504E  EC3F  F036         	call	_sprintf	;wreg free
  9280   005052                     
  9281                           ;newmain.c: 233:         Send_History_Event("fire_start", start_data);
  9282   005052  0EAE               	movlw	low STR_5
  9283   005054  0100               	movlb	0	; () banked
  9284   005056  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9285   005058  0E7F               	movlw	high STR_5
  9286   00505A  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9287   00505C  0E96               	movlw	low Handle_Fire_Events@start_data
  9288   00505E  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9289   005060  0E02               	movlw	high Handle_Fire_Events@start_data
  9290   005062  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9291   005064  EC84  F034         	call	_Send_History_Event	;wreg free
  9292   005068                     l7938:
  9293                           
  9294                           ;newmain.c: 237:     if(!fire_alarm && prev_fire_alarm) {
  9295   005068  0103               	movlb	3	; () banked
  9296   00506A  516E               	movf	_fire_alarm& (0+255),w,b
  9297   00506C  A4D8               	btfss	status,2,c
  9298   00506E  EF3B  F028         	goto	u10471
  9299   005072  EF3D  F028         	goto	u10470
  9300   005076                     u10471:
  9301   005076  EFC4  F028         	goto	l7954
  9302   00507A                     u10470:
  9303   00507A                     
  9304                           ; BSR set to: 3
  9305   00507A  516D               	movf	_prev_fire_alarm& (0+255),w,b
  9306   00507C  B4D8               	btfsc	status,2,c
  9307   00507E  EF43  F028         	goto	u10481
  9308   005082  EF45  F028         	goto	u10480
  9309   005086                     u10481:
  9310   005086  EFC4  F028         	goto	l7954
  9311   00508A                     u10480:
  9312   00508A                     
  9313                           ; BSR set to: 3
  9314                           ;newmain.c: 238:         unsigned long duration = (system_millis - fire_start_time) / 10
      +                          00;
  9315   00508A  5140               	movf	_fire_start_time& (0+255),w,b
  9316   00508C  0102               	movlb	2	; () banked
  9317   00508E  5DFA               	subwf	_system_millis& (0+255),w,b
  9318   005090  6E01               	movwf	___lldiv@dividend^0,c
  9319   005092  0103               	movlb	3	; () banked
  9320   005094  5141               	movf	(_fire_start_time+1)& (0+255),w,b
  9321   005096  0102               	movlb	2	; () banked
  9322   005098  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  9323   00509A  6E02               	movwf	(___lldiv@dividend+1)^0,c
  9324   00509C  0103               	movlb	3	; () banked
  9325   00509E  5142               	movf	(_fire_start_time+2)& (0+255),w,b
  9326   0050A0  0102               	movlb	2	; () banked
  9327   0050A2  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  9328   0050A4  6E03               	movwf	(___lldiv@dividend+2)^0,c
  9329   0050A6  0103               	movlb	3	; () banked
  9330   0050A8  5143               	movf	(_fire_start_time+3)& (0+255),w,b
  9331   0050AA  0102               	movlb	2	; () banked
  9332   0050AC  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  9333   0050AE  6E04               	movwf	(___lldiv@dividend+3)^0,c
  9334   0050B0  0EE8               	movlw	232
  9335   0050B2  6E05               	movwf	___lldiv@divisor^0,c
  9336   0050B4  0E03               	movlw	3
  9337   0050B6  6E06               	movwf	(___lldiv@divisor+1)^0,c
  9338   0050B8  0E00               	movlw	0
  9339   0050BA  6E07               	movwf	(___lldiv@divisor+2)^0,c
  9340   0050BC  0E00               	movlw	0
  9341   0050BE  6E08               	movwf	(___lldiv@divisor+3)^0,c
  9342   0050C0  EC32  F034         	call	___lldiv	;wreg free
  9343   0050C4  C001  F0E6         	movff	?___lldiv,Handle_Fire_Events@duration
  9344   0050C8  C002  F0E7         	movff	?___lldiv+1,Handle_Fire_Events@duration+1
  9345   0050CC  C003  F0E8         	movff	?___lldiv+2,Handle_Fire_Events@duration+2
  9346   0050D0  C004  F0E9         	movff	?___lldiv+3,Handle_Fire_Events@duration+3
  9347                           
  9348                           ;newmain.c: 239:         float water_used = total_flow - fire_start_flow;
  9349   0050D4  C348  F051         	movff	_total_flow,___flsub@b
  9350   0050D8  C349  F052         	movff	_total_flow+1,___flsub@b+1
  9351   0050DC  C34A  F053         	movff	_total_flow+2,___flsub@b+2
  9352   0050E0  C34B  F054         	movff	_total_flow+3,___flsub@b+3
  9353   0050E4  C330  F055         	movff	_fire_start_flow,___flsub@a
  9354   0050E8  C331  F056         	movff	_fire_start_flow+1,___flsub@a+1
  9355   0050EC  C332  F057         	movff	_fire_start_flow+2,___flsub@a+2
  9356   0050F0  C333  F058         	movff	_fire_start_flow+3,___flsub@a+3
  9357   0050F4  EC1C  F036         	call	___flsub	;wreg free
  9358   0050F8  C051  F0EA         	movff	?___flsub,Handle_Fire_Events@water_used
  9359   0050FC  C052  F0EB         	movff	?___flsub+1,Handle_Fire_Events@water_used+1
  9360   005100  C053  F0EC         	movff	?___flsub+2,Handle_Fire_Events@water_used+2
  9361   005104  C054  F0ED         	movff	?___flsub+3,Handle_Fire_Events@water_used+3
  9362   005108                     
  9363                           ;newmain.c: 241:         char end_data[150];;newmain.c: 242:         sprintf(end_data, "
      +                          ,\"duration\":%lu,\"water\":%.2f", duration, water_used);
  9364   005108  0E00               	movlw	low Handle_Fire_Events@end_data
  9365   00510A  0100               	movlb	0	; () banked
  9366   00510C  6FB0               	movwf	sprintf@s& (0+255),b
  9367   00510E  0E02               	movlw	high Handle_Fire_Events@end_data
  9368   005110  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9369   005112  0E62               	movlw	low STR_6
  9370   005114  6FB2               	movwf	sprintf@fmt& (0+255),b
  9371   005116  0E7F               	movlw	high STR_6
  9372   005118  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9373   00511A  C0E6  F0B4         	movff	Handle_Fire_Events@duration,?_sprintf+4
  9374   00511E  C0E7  F0B5         	movff	Handle_Fire_Events@duration+1,?_sprintf+5
  9375   005122  C0E8  F0B6         	movff	Handle_Fire_Events@duration+2,?_sprintf+6
  9376   005126  C0E9  F0B7         	movff	Handle_Fire_Events@duration+3,?_sprintf+7
  9377   00512A  C0EA  F0B8         	movff	Handle_Fire_Events@water_used,?_sprintf+8
  9378   00512E  C0EB  F0B9         	movff	Handle_Fire_Events@water_used+1,?_sprintf+9
  9379   005132  C0EC  F0BA         	movff	Handle_Fire_Events@water_used+2,?_sprintf+10
  9380   005136  C0ED  F0BB         	movff	Handle_Fire_Events@water_used+3,?_sprintf+11
  9381   00513A  EC3F  F036         	call	_sprintf	;wreg free
  9382   00513E                     
  9383                           ;newmain.c: 243:         Send_History_Event("fire_end", end_data);
  9384   00513E  0ECE               	movlw	low STR_7
  9385   005140  0100               	movlb	0	; () banked
  9386   005142  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9387   005144  0E7F               	movlw	high STR_7
  9388   005146  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9389   005148  0E00               	movlw	low Handle_Fire_Events@end_data
  9390   00514A  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9391   00514C  0E02               	movlw	high Handle_Fire_Events@end_data
  9392   00514E  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9393   005150  EC84  F034         	call	_Send_History_Event	;wreg free
  9394   005154                     
  9395                           ;newmain.c: 246:         _delay((unsigned long)((5000)*(8000000/4000.0)));
  9396   005154  0E33               	movlw	51
  9397   005156  0100               	movlb	0	; () banked
  9398   005158  6FE5               	movwf	(??_Handle_Fire_Events+1)& (0+255),b
  9399   00515A  0EBB               	movlw	187
  9400   00515C  6FE4               	movwf	??_Handle_Fire_Events& (0+255),b
  9401   00515E  0EDF               	movlw	223
  9402   005160                     u10777:
  9403   005160  2EE8               	decfsz	wreg,f,c
  9404   005162  D7FE               	bra	u10777
  9405   005164  2FE4               	decfsz	??_Handle_Fire_Events& (0+255),f,b
  9406   005166  D7FC               	bra	u10777
  9407   005168  2FE5               	decfsz	(??_Handle_Fire_Events+1)& (0+255),f,b
  9408   00516A  D7FA               	bra	u10777
  9409   00516C  D000               	nop2	
  9410   00516E                     
  9411                           ;newmain.c: 247:         total_flow = 0.0;
  9412   00516E  0E00               	movlw	0
  9413   005170  0103               	movlb	3	; () banked
  9414   005172  6F48               	movwf	_total_flow& (0+255),b
  9415   005174  0E00               	movlw	0
  9416   005176  6F49               	movwf	(_total_flow+1)& (0+255),b
  9417   005178  0E00               	movlw	0
  9418   00517A  6F4A               	movwf	(_total_flow+2)& (0+255),b
  9419   00517C  0E00               	movlw	0
  9420   00517E  6F4B               	movwf	(_total_flow+3)& (0+255),b
  9421   005180                     
  9422                           ; BSR set to: 3
  9423                           ;newmain.c: 248:         pulse_count = 0;
  9424   005180  0E00               	movlw	0
  9425   005182  6F67               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  9426   005184  0E00               	movlw	0
  9427   005186  6F66               	movwf	_pulse_count& (0+255),b	;volatile
  9428   005188                     l7954:
  9429                           
  9430                           ; BSR set to: 3
  9431                           ;newmain.c: 251:     prev_fire_alarm = fire_alarm;
  9432   005188  C36E  F36D         	movff	_fire_alarm,_prev_fire_alarm
  9433   00518C                     
  9434                           ; BSR set to: 3
  9435   00518C  0012               	return		;funcret
  9436   00518E                     __end_of_Handle_Fire_Events:
  9437                           	callstack 0
  9438                           
  9439 ;; *************** function _Send_History_Event *****************
  9440 ;; Defined at:
  9441 ;;		line 295 in file "newmain.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;  event_type      2  128[BANK0 ] PTR const unsigned char 
  9444 ;;		 -> STR_14(7), STR_12(9), STR_11(9), STR_8(11), 
  9445 ;;		 -> STR_7(9), STR_5(11), 
  9446 ;;  extra_data      2  130[BANK0 ] PTR const unsigned char 
  9447 ;;		 -> STR_15(1), STR_13(1), Handle_Test_Events@test_data(50), STR_9(1), 
  9448 ;;		 -> Handle_Fire_Events@end_data(150), Handle_Fire_Events@start_data(100), 
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;  i               2  200[BANK1 ] int 
  9451 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  1    wreg      void 
  9454 ;; Registers used:
  9455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9461 ;;      Params:         0       4       0       0       0       0       0       0       0
  9462 ;;      Locals:         0       0     202       0       0       0       0       0       0
  9463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9464 ;;      Totals:         0       4     202       0       0       0       0       0       0
  9465 ;;Total ram usage:      206 bytes
  9466 ;; Hardware stack levels used: 1
  9467 ;; Hardware stack levels required when called: 9
  9468 ;; This function calls:
  9469 ;;		_sprintf
  9470 ;; This function is called by:
  9471 ;;		_Handle_Fire_Events
  9472 ;;		_Handle_Test_Events
  9473 ;;		_Handle_Shutdown_Events
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text16
  9478   006908                     __ptext16:
  9479                           	callstack 0
  9480   006908                     _Send_History_Event:
  9481                           	callstack 20
  9482   006908                     
  9483                           ;newmain.c: 296:     char buffer[200];;newmain.c: 297:     sprintf(buffer, "{\"event\":\
      +                          "%s\",\"time\":%lu%s}\r\n",
  9484   006908  0E00               	movlw	low Send_History_Event@buffer
  9485   00690A  0100               	movlb	0	; () banked
  9486   00690C  6FB0               	movwf	sprintf@s& (0+255),b
  9487   00690E  0E01               	movlw	high Send_History_Event@buffer
  9488   006910  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9489   006912  0E44               	movlw	low STR_16
  9490   006914  6FB2               	movwf	sprintf@fmt& (0+255),b
  9491   006916  0E7F               	movlw	high STR_16
  9492   006918  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9493   00691A  C0E0  F0B4         	movff	Send_History_Event@event_type,?_sprintf+4
  9494   00691E  C0E1  F0B5         	movff	Send_History_Event@event_type+1,?_sprintf+5
  9495   006922  C2FA  F0B6         	movff	_system_millis,?_sprintf+6
  9496   006926  C2FB  F0B7         	movff	_system_millis+1,?_sprintf+7
  9497   00692A  C2FC  F0B8         	movff	_system_millis+2,?_sprintf+8
  9498   00692E  C2FD  F0B9         	movff	_system_millis+3,?_sprintf+9
  9499   006932  C0E2  F0BA         	movff	Send_History_Event@extra_data,?_sprintf+10
  9500   006936  C0E3  F0BB         	movff	Send_History_Event@extra_data+1,?_sprintf+11
  9501   00693A  EC3F  F036         	call	_sprintf	;wreg free
  9502   00693E                     l203:
  9503   00693E  A2AC               	btfss	172,1,c	;volatile
  9504   006940  EFA4  F034         	goto	u9561
  9505   006944  EFA6  F034         	goto	u9560
  9506   006948                     u9561:
  9507   006948  EF9F  F034         	goto	l203
  9508   00694C                     u9560:
  9509   00694C                     
  9510                           ;newmain.c: 301:     for(int i = 0; buffer[i]; i++) {
  9511   00694C  0E00               	movlw	0
  9512   00694E  0101               	movlb	1	; () banked
  9513   006950  6FC9               	movwf	(Send_History_Event@i+1)& (0+255),b
  9514   006952  0E00               	movlw	0
  9515   006954  6FC8               	movwf	Send_History_Event@i& (0+255),b
  9516   006956  EFBF  F034         	goto	l7318
  9517   00695A                     l7314:
  9518                           
  9519                           ; BSR set to: 1
  9520                           ;newmain.c: 302:         TXREG = buffer[i];
  9521   00695A  0E00               	movlw	low Send_History_Event@buffer
  9522   00695C  25C8               	addwf	Send_History_Event@i& (0+255),w,b
  9523   00695E  6ED9               	movwf	fsr2l,c
  9524   006960  0E01               	movlw	high Send_History_Event@buffer
  9525   006962  21C9               	addwfc	(Send_History_Event@i+1)& (0+255),w,b
  9526   006964  6EDA               	movwf	fsr2h,c
  9527   006966  50DF               	movf	indf2,w,c
  9528   006968  6EAD               	movwf	173,c	;volatile
  9529   00696A                     l208:
  9530   00696A  A2AC               	btfss	172,1,c	;volatile
  9531   00696C  EFBA  F034         	goto	u9571
  9532   006970  EFBC  F034         	goto	u9570
  9533   006974                     u9571:
  9534   006974  EFB5  F034         	goto	l208
  9535   006978                     u9570:
  9536   006978                     
  9537                           ;newmain.c: 304:     }
  9538   006978  0101               	movlb	1	; () banked
  9539   00697A  4BC8               	infsnz	Send_History_Event@i& (0+255),f,b
  9540   00697C  2BC9               	incf	(Send_History_Event@i+1)& (0+255),f,b
  9541   00697E                     l7318:
  9542                           
  9543                           ; BSR set to: 1
  9544   00697E  0E00               	movlw	low Send_History_Event@buffer
  9545   006980  25C8               	addwf	Send_History_Event@i& (0+255),w,b
  9546   006982  6ED9               	movwf	fsr2l,c
  9547   006984  0E01               	movlw	high Send_History_Event@buffer
  9548   006986  21C9               	addwfc	(Send_History_Event@i+1)& (0+255),w,b
  9549   006988  6EDA               	movwf	fsr2h,c
  9550   00698A  50DF               	movf	indf2,w,c
  9551   00698C  A4D8               	btfss	status,2,c
  9552   00698E  EFCB  F034         	goto	u9581
  9553   006992  EFCD  F034         	goto	u9580
  9554   006996                     u9581:
  9555   006996  EFAD  F034         	goto	l7314
  9556   00699A                     u9580:
  9557   00699A                     
  9558                           ; BSR set to: 1
  9559   00699A  0012               	return		;funcret
  9560   00699C                     __end_of_Send_History_Event:
  9561                           	callstack 0
  9562                           
  9563 ;; *************** function _sprintf *****************
  9564 ;; Defined at:
  9565 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  s               2   80[BANK0 ] PTR unsigned char 
  9568 ;;		 -> Send_Data@buffer(200), Send_History_Event@buffer(200), Handle_Test_Events@test_data(50), Handle_Fire_Events@end_
      +data(150), 
  9569 ;;		 -> Handle_Fire_Events@start_data(100), 
  9570 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  9571 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9572 ;;		 -> STR_4(15), 
  9573 ;; Auto vars:     Size  Location     Type
  9574 ;;  f              11  117[BANK0 ] struct _IO_FILE
  9575 ;;  ret             2    0        int 
  9576 ;;  ap              1  116[BANK0 ] PTR void [1]
  9577 ;;		 -> ?_sprintf(2), 
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  2   80[BANK0 ] int 
  9580 ;; Registers used:
  9581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9587 ;;      Params:         0      36       0       0       0       0       0       0       0
  9588 ;;      Locals:         0      12       0       0       0       0       0       0       0
  9589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9590 ;;      Totals:         0      48       0       0       0       0       0       0       0
  9591 ;;Total ram usage:       48 bytes
  9592 ;; Hardware stack levels used: 1
  9593 ;; Hardware stack levels required when called: 8
  9594 ;; This function calls:
  9595 ;;		_vfprintf
  9596 ;; This function is called by:
  9597 ;;		_Handle_Fire_Events
  9598 ;;		_Handle_Test_Events
  9599 ;;		_Send_History_Event
  9600 ;;		_Send_Data
  9601 ;; This function uses a non-reentrant model
  9602 ;;
  9603                           
  9604                           	psect	text17
  9605   006C7E                     __ptext17:
  9606                           	callstack 0
  9607   006C7E                     _sprintf:
  9608                           	callstack 21
  9609   006C7E  0EB4               	movlw	low (?_sprintf+4)
  9610   006C80  0100               	movlb	0	; () banked
  9611   006C82  6FD4               	movwf	sprintf@ap& (0+255),b
  9612   006C84  C0B0  F0D5         	movff	sprintf@s,sprintf@f
  9613   006C88  C0B1  F0D6         	movff	sprintf@s+1,sprintf@f+1
  9614   006C8C                     
  9615                           ; BSR set to: 0
  9616   006C8C  0E00               	movlw	0
  9617   006C8E  6FD8               	movwf	(sprintf@f+3)& (0+255),b
  9618   006C90  0E00               	movlw	0
  9619   006C92  6FD7               	movwf	(sprintf@f+2)& (0+255),b
  9620   006C94                     
  9621                           ; BSR set to: 0
  9622   006C94  0E00               	movlw	0
  9623   006C96  6FDF               	movwf	(sprintf@f+10)& (0+255),b
  9624   006C98  0E00               	movlw	0
  9625   006C9A  6FDE               	movwf	(sprintf@f+9)& (0+255),b
  9626   006C9C                     
  9627                           ; BSR set to: 0
  9628   006C9C  0ED5               	movlw	low sprintf@f
  9629   006C9E  6FAA               	movwf	vfprintf@fp& (0+255),b
  9630   006CA0  C0B2  F0AB         	movff	sprintf@fmt,vfprintf@fmt
  9631   006CA4  C0B3  F0AC         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9632   006CA8  0ED4               	movlw	low sprintf@ap
  9633   006CAA  6FAD               	movwf	vfprintf@ap& (0+255),b
  9634   006CAC  ECF8  F035         	call	_vfprintf	;wreg free
  9635   006CB0  0100               	movlb	0	; () banked
  9636   006CB2  51D7               	movf	(sprintf@f+2)& (0+255),w,b
  9637   006CB4  25B0               	addwf	sprintf@s& (0+255),w,b
  9638   006CB6  6ED9               	movwf	fsr2l,c
  9639   006CB8  51D8               	movf	(sprintf@f+3)& (0+255),w,b
  9640   006CBA  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  9641   006CBC  6EDA               	movwf	fsr2h,c
  9642   006CBE  6ADF               	clrf	indf2,c
  9643   006CC0                     
  9644                           ; BSR set to: 0
  9645   006CC0  0012               	return		;funcret
  9646   006CC2                     __end_of_sprintf:
  9647                           	callstack 0
  9648                           
  9649 ;; *************** function _vfprintf *****************
  9650 ;; Defined at:
  9651 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  fp              1   74[BANK0 ] PTR struct _IO_FILE
  9654 ;;		 -> sprintf@f(11), 
  9655 ;;  fmt             2   75[BANK0 ] PTR const unsigned char 
  9656 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9657 ;;		 -> STR_4(15), 
  9658 ;;  ap              1   77[BANK0 ] PTR PTR void 
  9659 ;;		 -> sprintf@ap(1), 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  9662 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9663 ;;		 -> STR_4(15), 
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  2   74[BANK0 ] int 
  9666 ;; Registers used:
  9667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9673 ;;      Params:         0       4       0       0       0       0       0       0       0
  9674 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9676 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9677 ;;Total ram usage:        6 bytes
  9678 ;; Hardware stack levels used: 1
  9679 ;; Hardware stack levels required when called: 7
  9680 ;; This function calls:
  9681 ;;		_vfpfcnvrt
  9682 ;; This function is called by:
  9683 ;;		_sprintf
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           
  9687                           	psect	text18
  9688   006BF0                     __ptext18:
  9689                           	callstack 0
  9690   006BF0                     _vfprintf:
  9691                           	callstack 21
  9692   006BF0                     
  9693                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  9694   006BF0  C0AB  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  9695   006BF4  C0AC  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9696                           
  9697                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9698   006BF8  EF08  F036         	goto	l7128
  9699   006BFC                     l7126:
  9700                           
  9701                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9702   006BFC  C0AA  F09C         	movff	vfprintf@fp,vfpfcnvrt@fp
  9703   006C00  0EAE               	movlw	low vfprintf@cfmt
  9704   006C02  0100               	movlb	0	; () banked
  9705   006C04  6F9D               	movwf	vfpfcnvrt@fmt& (0+255),b
  9706   006C06  C0AD  F09E         	movff	vfprintf@ap,vfpfcnvrt@ap
  9707   006C0A  6B9F               	clrf	(vfpfcnvrt@ap+1)& (0+255),b
  9708   006C0C  EC14  F01B         	call	_vfpfcnvrt	;wreg free
  9709   006C10                     l7128:
  9710                           
  9711                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9712   006C10  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  9713   006C14  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9714   006C18                     	if	0	;tblptru may be non-zero
  9715   006C18                     	endif
  9716   006C18                     	if	0	;tblptru may be non-zero
  9717   006C18                     	endif
  9718   006C18  0008               	tblrd		*
  9719   006C1A  50F5               	movf	tablat,w,c
  9720   006C1C  0900               	iorlw	0
  9721   006C1E  A4D8               	btfss	status,2,c
  9722   006C20  EF14  F036         	goto	u9231
  9723   006C24  EF16  F036         	goto	u9230
  9724   006C28                     u9231:
  9725   006C28  EFFE  F035         	goto	l7126
  9726   006C2C                     u9230:
  9727   006C2C                     
  9728                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  9729   006C2C  0E00               	movlw	0
  9730   006C2E  0100               	movlb	0	; () banked
  9731   006C30  6FAB               	movwf	(?_vfprintf+1)& (0+255),b
  9732   006C32  0E00               	movlw	0
  9733   006C34  6FAA               	movwf	?_vfprintf& (0+255),b
  9734   006C36                     
  9735                           ; BSR set to: 0
  9736   006C36  0012               	return		;funcret
  9737   006C38                     __end_of_vfprintf:
  9738                           	callstack 0
  9739                           
  9740 ;; *************** function _vfpfcnvrt *****************
  9741 ;; Defined at:
  9742 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;  fp              1   60[BANK0 ] PTR struct _IO_FILE
  9745 ;;		 -> sprintf@f(11), 
  9746 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  9747 ;;		 -> vfprintf@cfmt(2), 
  9748 ;;  ap              2   62[BANK0 ] PTR PTR void 
  9749 ;;		 -> sprintf@ap(1), 
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;  convarg         4   67[BANK0 ] struct .
  9752 ;;  cp              2   72[BANK0 ] PTR unsigned char 
  9753 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9754 ;;		 -> STR_4(15), 
  9755 ;;  c               1   71[BANK0 ] unsigned char 
  9756 ;;  done            1   66[BANK0 ] _Bool 
  9757 ;; Return value:  Size  Location     Type
  9758 ;;                  1    wreg      void 
  9759 ;; Registers used:
  9760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9761 ;; Tracked objects:
  9762 ;;		On entry : 0/0
  9763 ;;		On exit  : 0/0
  9764 ;;		Unchanged: 0/0
  9765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9766 ;;      Params:         0       4       0       0       0       0       0       0       0
  9767 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9768 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9769 ;;      Totals:         0      14       0       0       0       0       0       0       0
  9770 ;;Total ram usage:       14 bytes
  9771 ;; Hardware stack levels used: 1
  9772 ;; Hardware stack levels required when called: 6
  9773 ;; This function calls:
  9774 ;;		_dtoa
  9775 ;;		_efgtoa
  9776 ;;		_fputc
  9777 ;;		_read_prec_or_width
  9778 ;;		_stoa
  9779 ;;		_utoa
  9780 ;; This function is called by:
  9781 ;;		_vfprintf
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text19
  9786   003628                     __ptext19:
  9787                           	callstack 0
  9788   003628                     _vfpfcnvrt:
  9789                           	callstack 21
  9790   003628                     
  9791                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  9792   003628  0100               	movlb	0	; () banked
  9793   00362A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9794   00362C  6ED9               	movwf	fsr2l,c
  9795   00362E  6ADA               	clrf	fsr2h,c
  9796   003630  CFDE FFF6          	movff	postinc2,tblptrl
  9797   003634  CFDD FFF7          	movff	postdec2,tblptrh
  9798   003638                     	if	0	;tblptru may be non-zero
  9799   003638                     	endif
  9800   003638                     	if	0	;tblptru may be non-zero
  9801   003638                     	endif
  9802   003638  0008               	tblrd		*
  9803   00363A  50F5               	movf	tablat,w,c
  9804   00363C  0A25               	xorlw	37
  9805   00363E  A4D8               	btfss	status,2,c
  9806   003640  EF24  F01B         	goto	u9121
  9807   003644  EF26  F01B         	goto	u9120
  9808   003648                     u9121:
  9809   003648  EF89  F01D         	goto	l7118
  9810   00364C                     u9120:
  9811   00364C                     
  9812                           ; BSR set to: 0
  9813                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  9814   00364C  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9815   00364E  6ED9               	movwf	fsr2l,c
  9816   003650  6ADA               	clrf	fsr2h,c
  9817   003652  2ADE               	incf	postinc2,f,c
  9818   003654  0E00               	movlw	0
  9819   003656  22DD               	addwfc	postdec2,f,c
  9820   003658                     
  9821                           ; BSR set to: 0
  9822                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  9823   003658  0E00               	movlw	0
  9824   00365A  0103               	movlb	3	; () banked
  9825   00365C  6F63               	movwf	(_width+1)& (0+255),b
  9826   00365E  0E00               	movlw	0
  9827   003660  6F62               	movwf	_width& (0+255),b
  9828   003662  C362  F368         	movff	_width,_flags
  9829   003666                     
  9830                           ; BSR set to: 3
  9831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  9832   003666  0102               	movlb	2	; () banked
  9833   003668  69FE               	setf	_prec& (0+255),b
  9834   00366A  69FF               	setf	(_prec+1)& (0+255),b
  9835   00366C                     
  9836                           ; BSR set to: 2
  9837                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  9838   00366C  0100               	movlb	0	; () banked
  9839   00366E  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9840   003670  6ED9               	movwf	fsr2l,c
  9841   003672  6ADA               	clrf	fsr2h,c
  9842   003674  CFDE FFF6          	movff	postinc2,tblptrl
  9843   003678  CFDD FFF7          	movff	postdec2,tblptrh
  9844   00367C                     	if	0	;tblptru may be non-zero
  9845   00367C                     	endif
  9846   00367C                     	if	0	;tblptru may be non-zero
  9847   00367C                     	endif
  9848   00367C  0008               	tblrd		*
  9849   00367E  50F5               	movf	tablat,w,c
  9850   003680  0A2E               	xorlw	46
  9851   003682  A4D8               	btfss	status,2,c
  9852   003684  EF46  F01B         	goto	u9131
  9853   003688  EF48  F01B         	goto	u9130
  9854   00368C                     u9131:
  9855   00368C  EF58  F01B         	goto	l7010
  9856   003690                     u9130:
  9857   003690                     
  9858                           ; BSR set to: 0
  9859                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  9860   003690  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9861   003692  6ED9               	movwf	fsr2l,c
  9862   003694  6ADA               	clrf	fsr2h,c
  9863   003696  2ADE               	incf	postinc2,f,c
  9864   003698  0E00               	movlw	0
  9865   00369A  22DD               	addwfc	postdec2,f,c
  9866   00369C                     
  9867                           ; BSR set to: 0
  9868                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  9869   00369C  C09D  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  9870   0036A0  C09E  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  9871   0036A4  EC87  F033         	call	_read_prec_or_width	;wreg free
  9872   0036A8  C001  F2FE         	movff	?_read_prec_or_width,_prec
  9873   0036AC  C002  F2FF         	movff	?_read_prec_or_width+1,_prec+1
  9874   0036B0                     l7010:
  9875                           
  9876                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  9877   0036B0  0100               	movlb	0	; () banked
  9878   0036B2  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9879   0036B4  6ED9               	movwf	fsr2l,c
  9880   0036B6  6ADA               	clrf	fsr2h,c
  9881   0036B8  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
  9882   0036BC  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
  9883   0036C0                     
  9884                           ; BSR set to: 0
  9885                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  9886   0036C0  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9887   0036C4  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9888   0036C8                     	if	0	;tblptru may be non-zero
  9889   0036C8                     	endif
  9890   0036C8                     	if	0	;tblptru may be non-zero
  9891   0036C8                     	endif
  9892   0036C8  0008               	tblrd		*
  9893   0036CA  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
  9894                           
  9895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  9896   0036CE  EF74  F01B         	goto	l7020
  9897   0036D2                     l7014:
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  9901   0036D2  4BA8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  9902   0036D4  2BA9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  9903                           
  9904                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1316:     break;
  9905   0036D6  EF87  F01B         	goto	l7022
  9906   0036DA                     l7016:
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  9910   0036DA  0E69               	movlw	105
  9911   0036DC  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
  9912                           
  9913                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1351:     break;
  9914   0036DE  EF87  F01B         	goto	l7022
  9915   0036E2                     l1099:
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  9919   0036E2  6BA7               	clrf	vfpfcnvrt@c& (0+255),b
  9920                           
  9921                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1354:     break;
  9922   0036E4  EF87  F01B         	goto	l7022
  9923   0036E8                     l7020:
  9924                           
  9925                           ; BSR set to: 0
  9926   0036E8  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
  9927                           
  9928                           ; Switch size 1, requested type "simple"
  9929                           ; Number of cases is 4, Range of values is 100 to 117
  9930                           ; switch strategies available:
  9931                           ; Name         Instructions Cycles
  9932                           ; simple_byte           13     7 (average)
  9933                           ;	Chosen strategy is simple_byte
  9934   0036EA  0A64               	xorlw	100	; case 100
  9935   0036EC  B4D8               	btfsc	status,2,c
  9936   0036EE  EF6D  F01B         	goto	l7016
  9937   0036F2  0A0D               	xorlw	13	; case 105
  9938   0036F4  B4D8               	btfsc	status,2,c
  9939   0036F6  EF6D  F01B         	goto	l7016
  9940   0036FA  0A05               	xorlw	5	; case 108
  9941   0036FC  B4D8               	btfsc	status,2,c
  9942   0036FE  EF69  F01B         	goto	l7014
  9943   003702  0A19               	xorlw	25	; case 117
  9944   003704  B4D8               	btfsc	status,2,c
  9945   003706  EF6D  F01B         	goto	l7016
  9946   00370A  EF71  F01B         	goto	l1099
  9947   00370E                     l7022:
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  9951   00370E  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9952   003712  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9953   003716                     	if	0	;tblptru may be non-zero
  9954   003716                     	endif
  9955   003716                     	if	0	;tblptru may be non-zero
  9956   003716                     	endif
  9957   003716  0008               	tblrd		*
  9958   003718  50F5               	movf	tablat,w,c
  9959   00371A  0A64               	xorlw	100
  9960   00371C  B4D8               	btfsc	status,2,c
  9961   00371E  EF93  F01B         	goto	u9141
  9962   003722  EF95  F01B         	goto	u9140
  9963   003726                     u9141:
  9964   003726  EFCC  F01B         	goto	l7032
  9965   00372A                     u9140:
  9966   00372A                     
  9967                           ; BSR set to: 0
  9968   00372A  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9969   00372E  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9970   003732                     	if	0	;tblptru may be non-zero
  9971   003732                     	endif
  9972   003732                     	if	0	;tblptru may be non-zero
  9973   003732                     	endif
  9974   003732  0008               	tblrd		*
  9975   003734  50F5               	movf	tablat,w,c
  9976   003736  0A69               	xorlw	105
  9977   003738  A4D8               	btfss	status,2,c
  9978   00373A  EFA1  F01B         	goto	u9151
  9979   00373E  EFA3  F01B         	goto	u9150
  9980   003742                     u9151:
  9981   003742  EFF2  F01B         	goto	l7040
  9982   003746                     u9150:
  9983   003746  EFCC  F01B         	goto	l7032
  9984   00374A                     l7026:
  9985                           
  9986                           ; BSR set to: 0
  9987                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  9988   00374A  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9989   00374E  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9990   003752  50DF               	movf	indf2,w,c
  9991   003754  2ADF               	incf	indf2,f,c
  9992   003756  2ADF               	incf	indf2,f,c
  9993   003758  6ED9               	movwf	fsr2l,c
  9994   00375A  6ADA               	clrf	fsr2h,c
  9995   00375C  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  9996   003760  CFDD F0A4          	movff	postdec2,vfpfcnvrt@convarg+1
  9997   003764  0E00               	movlw	0
  9998   003766  BFA4               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  9999   003768  0EFF               	movlw	-1
 10000   00376A  6FA5               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
 10001   00376C  6FA6               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
 10002                           
 10003                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1366:      break;
 10004   00376E  EFD7  F01B         	goto	l7034
 10005   003772                     l7028:
 10006                           
 10007                           ; BSR set to: 0
 10008                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 10009   003772  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10010   003776  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10011   00377A  0E04               	movlw	4
 10012   00377C  26DF               	addwf	indf2,f,c
 10013   00377E  5CDF               	subwf	indf2,w,c
 10014   003780  6ED9               	movwf	fsr2l,c
 10015   003782  6ADA               	clrf	fsr2h,c
 10016   003784  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10017   003788  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10018   00378C  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10019   003790  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10020                           
 10021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1380:      break;
 10022   003794  EFD7  F01B         	goto	l7034
 10023   003798                     l7032:
 10024                           
 10025                           ; BSR set to: 0
 10026   003798  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10027                           
 10028                           ; Switch size 1, requested type "simple"
 10029                           ; Number of cases is 2, Range of values is 105 to 108
 10030                           ; switch strategies available:
 10031                           ; Name         Instructions Cycles
 10032                           ; simple_byte            7     4 (average)
 10033                           ;	Chosen strategy is simple_byte
 10034   00379A  0A69               	xorlw	105	; case 105
 10035   00379C  B4D8               	btfsc	status,2,c
 10036   00379E  EFA5  F01B         	goto	l7026
 10037   0037A2  0A05               	xorlw	5	; case 108
 10038   0037A4  B4D8               	btfsc	status,2,c
 10039   0037A6  EFB9  F01B         	goto	l7028
 10040   0037AA  EFD7  F01B         	goto	l7034
 10041   0037AE                     l7034:
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10045   0037AE  0E01               	movlw	1
 10046   0037B0  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10047   0037B2  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10048   0037B4  0E00               	movlw	0
 10049   0037B6  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10050   0037B8  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10051   0037BA  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10052   0037BC  6ED9               	movwf	fsr2l,c
 10053   0037BE  6ADA               	clrf	fsr2h,c
 10054   0037C0  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10055   0037C4  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10056   0037C8                     
 10057                           ; BSR set to: 0
 10058                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 10059   0037C8  C09C  F017         	movff	vfpfcnvrt@fp,dtoa@fp
 10060   0037CC  C0A3  F018         	movff	vfpfcnvrt@convarg,dtoa@d
 10061   0037D0  C0A4  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 10062   0037D4  C0A5  F01A         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 10063   0037D8  C0A6  F01B         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 10064   0037DC  ECC4  F02B         	call	_dtoa	;wreg free
 10065   0037E0  EF9A  F01D         	goto	l1107
 10066   0037E4                     l7040:
 10067                           
 10068                           ; BSR set to: 0
 10069   0037E4  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10070   0037E8  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10071   0037EC                     	if	0	;tblptru may be non-zero
 10072   0037EC                     	endif
 10073   0037EC                     	if	0	;tblptru may be non-zero
 10074   0037EC                     	endif
 10075   0037EC  0008               	tblrd		*
 10076   0037EE  50F5               	movf	tablat,w,c
 10077   0037F0  0A75               	xorlw	117
 10078   0037F2  A4D8               	btfss	status,2,c
 10079   0037F4  EFFE  F01B         	goto	u9161
 10080   0037F8  EF00  F01C         	goto	u9160
 10081   0037FC                     u9161:
 10082   0037FC  EF5E  F01C         	goto	l1108
 10083   003800                     u9160:
 10084   003800  EF2A  F01C         	goto	l7048
 10085   003804                     l7042:
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 10089   003804  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10090   003808  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10091   00380C  50DF               	movf	indf2,w,c
 10092   00380E  2ADF               	incf	indf2,f,c
 10093   003810  2ADF               	incf	indf2,f,c
 10094   003812  6ED9               	movwf	fsr2l,c
 10095   003814  6ADA               	clrf	fsr2h,c
 10096   003816  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10097   00381A  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10098   00381E  C0A0  F0A3         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
 10099   003822  C0A1  F0A4         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
 10100   003826  6BA5               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 10101   003828  6BA6               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 10102                           
 10103                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1457:      break;
 10104   00382A  EF35  F01C         	goto	l7050
 10105   00382E                     l7044:
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 10109   00382E  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10110   003832  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10111   003836  0E04               	movlw	4
 10112   003838  26DF               	addwf	indf2,f,c
 10113   00383A  5CDF               	subwf	indf2,w,c
 10114   00383C  6ED9               	movwf	fsr2l,c
 10115   00383E  6ADA               	clrf	fsr2h,c
 10116   003840  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10117   003844  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10118   003848  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10119   00384C  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10120                           
 10121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1471:      break;
 10122   003850  EF35  F01C         	goto	l7050
 10123   003854                     l7048:
 10124                           
 10125                           ; BSR set to: 0
 10126   003854  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10127                           
 10128                           ; Switch size 1, requested type "simple"
 10129                           ; Number of cases is 2, Range of values is 105 to 108
 10130                           ; switch strategies available:
 10131                           ; Name         Instructions Cycles
 10132                           ; simple_byte            7     4 (average)
 10133                           ;	Chosen strategy is simple_byte
 10134   003856  0A69               	xorlw	105	; case 105
 10135   003858  B4D8               	btfsc	status,2,c
 10136   00385A  EF02  F01C         	goto	l7042
 10137   00385E  0A05               	xorlw	5	; case 108
 10138   003860  B4D8               	btfsc	status,2,c
 10139   003862  EF17  F01C         	goto	l7044
 10140   003866  EF35  F01C         	goto	l7050
 10141   00386A                     l7050:
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 10145   00386A  0E01               	movlw	1
 10146   00386C  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10147   00386E  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10148   003870  0E00               	movlw	0
 10149   003872  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10150   003874  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10151   003876  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10152   003878  6ED9               	movwf	fsr2l,c
 10153   00387A  6ADA               	clrf	fsr2h,c
 10154   00387C  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10155   003880  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10156                           
 10157                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 10158   003884  EF52  F01C         	goto	l7058
 10159   003888                     l7052:
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 10163   003888  C09C  F017         	movff	vfpfcnvrt@fp,utoa@fp
 10164   00388C  C0A3  F018         	movff	vfpfcnvrt@convarg,utoa@d
 10165   003890  C0A4  F019         	movff	vfpfcnvrt@convarg+1,utoa@d+1
 10166   003894  C0A5  F01A         	movff	vfpfcnvrt@convarg+2,utoa@d+2
 10167   003898  C0A6  F01B         	movff	vfpfcnvrt@convarg+3,utoa@d+3
 10168   00389C  ECDE  F02D         	call	_utoa	;wreg free
 10169   0038A0  EF9A  F01D         	goto	l1107
 10170   0038A4                     l7058:
 10171                           
 10172                           ; BSR set to: 0
 10173   0038A4  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10174   0038A8  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10175   0038AC                     	if	0	;tblptru may be non-zero
 10176   0038AC                     	endif
 10177   0038AC                     	if	0	;tblptru may be non-zero
 10178   0038AC                     	endif
 10179   0038AC  0008               	tblrd		*
 10180   0038AE  50F5               	movf	tablat,w,c
 10181                           
 10182                           ; Switch size 1, requested type "simple"
 10183                           ; Number of cases is 1, Range of values is 117 to 117
 10184                           ; switch strategies available:
 10185                           ; Name         Instructions Cycles
 10186                           ; simple_byte            4     3 (average)
 10187                           ;	Chosen strategy is simple_byte
 10188   0038B0  0A75               	xorlw	117	; case 117
 10189   0038B2  B4D8               	btfsc	status,2,c
 10190   0038B4  EF44  F01C         	goto	l7052
 10191   0038B8  EF5E  F01C         	goto	l1108
 10192   0038BC                     l1108:
 10193                           
 10194                           ; BSR set to: 0
 10195                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 10196   0038BC  6BA2               	clrf	vfpfcnvrt@done& (0+255),b
 10197   0038BE                     
 10198                           ; BSR set to: 0
 10199                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 10200   0038BE  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10201   0038C0  6ED9               	movwf	fsr2l,c
 10202   0038C2  6ADA               	clrf	fsr2h,c
 10203   0038C4  CFDE FFF6          	movff	postinc2,tblptrl
 10204   0038C8  CFDD FFF7          	movff	postdec2,tblptrh
 10205   0038CC                     	if	0	;tblptru may be non-zero
 10206   0038CC                     	endif
 10207   0038CC                     	if	0	;tblptru may be non-zero
 10208   0038CC                     	endif
 10209   0038CC  0008               	tblrd		*
 10210   0038CE  50F5               	movf	tablat,w,c
 10211   0038D0  0A73               	xorlw	115
 10212   0038D2  A4D8               	btfss	status,2,c
 10213   0038D4  EF6E  F01C         	goto	u9171
 10214   0038D8  EF70  F01C         	goto	u9170
 10215   0038DC                     u9171:
 10216   0038DC  EF7A  F01C         	goto	l7066
 10217   0038E0                     u9170:
 10218   0038E0                     
 10219                           ; BSR set to: 0
 10220                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 10221   0038E0  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10222   0038E2  6ED9               	movwf	fsr2l,c
 10223   0038E4  6ADA               	clrf	fsr2h,c
 10224   0038E6  2ADE               	incf	postinc2,f,c
 10225   0038E8  0E00               	movlw	0
 10226   0038EA  22DD               	addwfc	postdec2,f,c
 10227   0038EC                     l7064:
 10228                           
 10229                           ; BSR set to: 0
 10230                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 10231   0038EC  0E01               	movlw	1
 10232   0038EE  6FA2               	movwf	vfpfcnvrt@done& (0+255),b
 10233                           
 10234                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1660:   }
 10235   0038F0  EFC6  F01C         	goto	l7076
 10236   0038F4                     l7066:
 10237                           
 10238                           ; BSR set to: 0
 10239   0038F4  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10240   0038F6  6ED9               	movwf	fsr2l,c
 10241   0038F8  6ADA               	clrf	fsr2h,c
 10242   0038FA  CFDE FFF6          	movff	postinc2,tblptrl
 10243   0038FE  CFDD FFF7          	movff	postdec2,tblptrh
 10244   003902                     	if	0	;tblptru may be non-zero
 10245   003902                     	endif
 10246   003902                     	if	0	;tblptru may be non-zero
 10247   003902                     	endif
 10248   003902  0008               	tblrd		*
 10249   003904  50F5               	movf	tablat,w,c
 10250   003906  0A6C               	xorlw	108
 10251   003908  A4D8               	btfss	status,2,c
 10252   00390A  EF89  F01C         	goto	u9181
 10253   00390E  EF8B  F01C         	goto	u9180
 10254   003912                     u9181:
 10255   003912  EFC6  F01C         	goto	l7076
 10256   003916                     u9180:
 10257   003916                     
 10258                           ; BSR set to: 0
 10259   003916  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10260   003918  6ED9               	movwf	fsr2l,c
 10261   00391A  6ADA               	clrf	fsr2h,c
 10262   00391C  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10263   003920  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10264   003924  0E01               	movlw	1
 10265   003926  27A0               	addwf	??_vfpfcnvrt& (0+255),f,b
 10266   003928  0E00               	movlw	0
 10267   00392A  23A1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10268   00392C  C0A0  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10269   003930  C0A1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10270   003934                     	if	0	;tblptru may be non-zero
 10271   003934                     	endif
 10272   003934                     	if	0	;tblptru may be non-zero
 10273   003934                     	endif
 10274   003934  0008               	tblrd		*
 10275   003936  50F5               	movf	tablat,w,c
 10276   003938  0A6C               	xorlw	108
 10277   00393A  A4D8               	btfss	status,2,c
 10278   00393C  EFA2  F01C         	goto	u9191
 10279   003940  EFA4  F01C         	goto	u9190
 10280   003944                     u9191:
 10281   003944  EFC6  F01C         	goto	l7076
 10282   003948                     u9190:
 10283   003948                     
 10284                           ; BSR set to: 0
 10285   003948  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10286   00394A  6ED9               	movwf	fsr2l,c
 10287   00394C  6ADA               	clrf	fsr2h,c
 10288   00394E  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10289   003952  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10290   003956  0E02               	movlw	2
 10291   003958  27A0               	addwf	??_vfpfcnvrt& (0+255),f,b
 10292   00395A  0E00               	movlw	0
 10293   00395C  23A1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10294   00395E  C0A0  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10295   003962  C0A1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10296   003966                     	if	0	;tblptru may be non-zero
 10297   003966                     	endif
 10298   003966                     	if	0	;tblptru may be non-zero
 10299   003966                     	endif
 10300   003966  0008               	tblrd		*
 10301   003968  50F5               	movf	tablat,w,c
 10302   00396A  0A73               	xorlw	115
 10303   00396C  A4D8               	btfss	status,2,c
 10304   00396E  EFBB  F01C         	goto	u9201
 10305   003972  EFBD  F01C         	goto	u9200
 10306   003976                     u9201:
 10307   003976  EFC6  F01C         	goto	l7076
 10308   00397A                     u9200:
 10309   00397A                     
 10310                           ; BSR set to: 0
 10311                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 10312   00397A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10313   00397C  6ED9               	movwf	fsr2l,c
 10314   00397E  6ADA               	clrf	fsr2h,c
 10315   003980  0E03               	movlw	3
 10316   003982  26DE               	addwf	postinc2,f,c
 10317   003984  0E00               	movlw	0
 10318   003986  22DD               	addwfc	postdec2,f,c
 10319   003988  EF76  F01C         	goto	l7064
 10320   00398C                     l7076:
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 10324   00398C  51A2               	movf	vfpfcnvrt@done& (0+255),w,b
 10325   00398E  B4D8               	btfsc	status,2,c
 10326   003990  EFCC  F01C         	goto	u9211
 10327   003994  EFCE  F01C         	goto	u9210
 10328   003998                     u9211:
 10329   003998  EFE1  F01C         	goto	l7082
 10330   00399C                     u9210:
 10331   00399C                     
 10332                           ; BSR set to: 0
 10333                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 10334   00399C  C09C  F009         	movff	vfpfcnvrt@fp,stoa@fp
 10335   0039A0  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10336   0039A4  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10337   0039A8  0E02               	movlw	2
 10338   0039AA  26DF               	addwf	indf2,f,c
 10339   0039AC  5CDF               	subwf	indf2,w,c
 10340   0039AE  6ED9               	movwf	fsr2l,c
 10341   0039B0  6ADA               	clrf	fsr2h,c
 10342   0039B2  CFDE F00A          	movff	postinc2,stoa@s
 10343   0039B6  CFDE F00B          	movff	postinc2,stoa@s+1
 10344   0039BA  EC77  F030         	call	_stoa	;wreg free
 10345   0039BE  EF9A  F01D         	goto	l1107
 10346   0039C2                     l7082:
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 10350   0039C2  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10351   0039C4  6ED9               	movwf	fsr2l,c
 10352   0039C6  6ADA               	clrf	fsr2h,c
 10353   0039C8  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
 10354   0039CC  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
 10355   0039D0                     
 10356                           ; BSR set to: 0
 10357                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 10358   0039D0  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10359   0039D4  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10360   0039D8                     	if	0	;tblptru may be non-zero
 10361   0039D8                     	endif
 10362   0039D8                     	if	0	;tblptru may be non-zero
 10363   0039D8                     	endif
 10364   0039D8  0008               	tblrd		*
 10365   0039DA  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
 10366                           
 10367                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 10368   0039DE  EFFC  F01C         	goto	l7092
 10369   0039E2                     l7086:
 10370                           
 10371                           ; BSR set to: 0
 10372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 10373   0039E2  4BA8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 10374   0039E4  2BA9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 10375                           
 10376                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
 10377   0039E6  EF0B  F01D         	goto	l7094
 10378   0039EA                     l7088:
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 10382   0039EA  0E6C               	movlw	108
 10383   0039EC  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
 10384                           
 10385                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
 10386   0039EE  EF0B  F01D         	goto	l7094
 10387   0039F2                     l1127:
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 10391   0039F2  6BA7               	clrf	vfpfcnvrt@c& (0+255),b
 10392                           
 10393                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
 10394   0039F4  EF0B  F01D         	goto	l7094
 10395   0039F8                     l7092:
 10396                           
 10397                           ; BSR set to: 0
 10398   0039F8  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10399                           
 10400                           ; Switch size 1, requested type "simple"
 10401                           ; Number of cases is 3, Range of values is 76 to 108
 10402                           ; switch strategies available:
 10403                           ; Name         Instructions Cycles
 10404                           ; simple_byte           10     6 (average)
 10405                           ;	Chosen strategy is simple_byte
 10406   0039FA  0A4C               	xorlw	76	; case 76
 10407   0039FC  B4D8               	btfsc	status,2,c
 10408   0039FE  EFF1  F01C         	goto	l7086
 10409   003A02  0A2A               	xorlw	42	; case 102
 10410   003A04  B4D8               	btfsc	status,2,c
 10411   003A06  EFF5  F01C         	goto	l7088
 10412   003A0A  0A0A               	xorlw	10	; case 108
 10413   003A0C  B4D8               	btfsc	status,2,c
 10414   003A0E  EFF1  F01C         	goto	l7086
 10415   003A12  EFF9  F01C         	goto	l1127
 10416   003A16                     l7094:
 10417                           
 10418                           ; BSR set to: 0
 10419   003A16  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10420   003A1A  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10421   003A1E                     	if	0	;tblptru may be non-zero
 10422   003A1E                     	endif
 10423   003A1E                     	if	0	;tblptru may be non-zero
 10424   003A1E                     	endif
 10425   003A1E  0008               	tblrd		*
 10426   003A20  50F5               	movf	tablat,w,c
 10427   003A22  0A66               	xorlw	102
 10428   003A24  A4D8               	btfss	status,2,c
 10429   003A26  EF17  F01D         	goto	u9221
 10430   003A2A  EF19  F01D         	goto	u9220
 10431   003A2E                     u9221:
 10432   003A2E  EF80  F01D         	goto	l7114
 10433   003A32                     u9220:
 10434   003A32  EF45  F01D         	goto	l7102
 10435   003A36                     l7096:
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10439   003A36  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10440   003A3A  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10441   003A3E  CFDF F0A0          	movff	indf2,??_vfpfcnvrt
 10442   003A42  0E04               	movlw	4
 10443   003A44  26DF               	addwf	indf2,f,c
 10444   003A46  51A0               	movf	??_vfpfcnvrt& (0+255),w,b
 10445   003A48  6ED9               	movwf	fsr2l,c
 10446   003A4A  6ADA               	clrf	fsr2h,c
 10447   003A4C  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10448   003A50  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10449   003A54  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10450   003A58  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10451                           
 10452                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
 10453   003A5C  EF50  F01D         	goto	l7104
 10454   003A60                     l7098:
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 10458   003A60  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10459   003A64  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10460   003A68  CFDF F0A0          	movff	indf2,??_vfpfcnvrt
 10461   003A6C  0E04               	movlw	4
 10462   003A6E  26DF               	addwf	indf2,f,c
 10463   003A70  51A0               	movf	??_vfpfcnvrt& (0+255),w,b
 10464   003A72  6ED9               	movwf	fsr2l,c
 10465   003A74  6ADA               	clrf	fsr2h,c
 10466   003A76  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10467   003A7A  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10468   003A7E  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10469   003A82  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10470                           
 10471                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
 10472   003A86  EF50  F01D         	goto	l7104
 10473   003A8A                     l7102:
 10474                           
 10475                           ; BSR set to: 0
 10476   003A8A  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10477                           
 10478                           ; Switch size 1, requested type "simple"
 10479                           ; Number of cases is 2, Range of values is 76 to 108
 10480                           ; switch strategies available:
 10481                           ; Name         Instructions Cycles
 10482                           ; simple_byte            7     4 (average)
 10483                           ;	Chosen strategy is simple_byte
 10484   003A8C  0A4C               	xorlw	76	; case 76
 10485   003A8E  B4D8               	btfsc	status,2,c
 10486   003A90  EF30  F01D         	goto	l7098
 10487   003A94  0A20               	xorlw	32	; case 108
 10488   003A96  B4D8               	btfsc	status,2,c
 10489   003A98  EF1B  F01D         	goto	l7096
 10490   003A9C  EF50  F01D         	goto	l7104
 10491   003AA0                     l7104:
 10492                           
 10493                           ; BSR set to: 0
 10494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 10495   003AA0  0E01               	movlw	1
 10496   003AA2  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10497   003AA4  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10498   003AA6  0E00               	movlw	0
 10499   003AA8  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10500   003AAA  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10501   003AAC  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10502   003AAE  6ED9               	movwf	fsr2l,c
 10503   003AB0  6ADA               	clrf	fsr2h,c
 10504   003AB2  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10505   003AB6  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10506                           
 10507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 10508   003ABA  EF74  F01D         	goto	l7112
 10509   003ABE                     l7106:
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 10513   003ABE  C09C  F068         	movff	vfpfcnvrt@fp,efgtoa@fp
 10514   003AC2  C0A3  F069         	movff	vfpfcnvrt@convarg,efgtoa@f
 10515   003AC6  C0A4  F06A         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 10516   003ACA  C0A5  F06B         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 10517   003ACE  C0A6  F06C         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 10518   003AD2  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10519   003AD6  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10520   003ADA                     	if	0	;tblptru may be non-zero
 10521   003ADA                     	endif
 10522   003ADA                     	if	0	;tblptru may be non-zero
 10523   003ADA                     	endif
 10524   003ADA  0008               	tblrd		*
 10525   003ADC  CFF5 F06D          	movff	tablat,efgtoa@c
 10526   003AE0  EC64  F012         	call	_efgtoa	;wreg free
 10527   003AE4  EF9A  F01D         	goto	l1107
 10528   003AE8                     l7112:
 10529                           
 10530                           ; BSR set to: 0
 10531   003AE8  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10532   003AEC  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10533   003AF0                     	if	0	;tblptru may be non-zero
 10534   003AF0                     	endif
 10535   003AF0                     	if	0	;tblptru may be non-zero
 10536   003AF0                     	endif
 10537   003AF0  0008               	tblrd		*
 10538   003AF2  50F5               	movf	tablat,w,c
 10539                           
 10540                           ; Switch size 1, requested type "simple"
 10541                           ; Number of cases is 1, Range of values is 102 to 102
 10542                           ; switch strategies available:
 10543                           ; Name         Instructions Cycles
 10544                           ; simple_byte            4     3 (average)
 10545                           ;	Chosen strategy is simple_byte
 10546   003AF4  0A66               	xorlw	102	; case 102
 10547   003AF6  B4D8               	btfsc	status,2,c
 10548   003AF8  EF5F  F01D         	goto	l7106
 10549   003AFC  EF80  F01D         	goto	l7114
 10550   003B00                     l7114:
 10551                           
 10552                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 10553   003B00  0100               	movlb	0	; () banked
 10554   003B02  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10555   003B04  6ED9               	movwf	fsr2l,c
 10556   003B06  6ADA               	clrf	fsr2h,c
 10557   003B08  2ADE               	incf	postinc2,f,c
 10558   003B0A  0E00               	movlw	0
 10559   003B0C  22DD               	addwfc	postdec2,f,c
 10560   003B0E  EF9A  F01D         	goto	l1107
 10561   003B12                     l7118:
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 10565   003B12  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10566   003B14  6ED9               	movwf	fsr2l,c
 10567   003B16  6ADA               	clrf	fsr2h,c
 10568   003B18  CFDE FFF6          	movff	postinc2,tblptrl
 10569   003B1C  CFDD FFF7          	movff	postdec2,tblptrh
 10570   003B20                     	if	0	;tblptru may be non-zero
 10571   003B20                     	endif
 10572   003B20                     	if	0	;tblptru may be non-zero
 10573   003B20                     	endif
 10574   003B20  0008               	tblrd		*
 10575   003B22  50F5               	movf	tablat,w,c
 10576   003B24  6E01               	movwf	fputc@c^0,c
 10577   003B26  6A02               	clrf	(fputc@c+1)^0,c
 10578   003B28  C09C  F003         	movff	vfpfcnvrt@fp,fputc@fp
 10579   003B2C  ECD3  F032         	call	_fputc	;wreg free
 10580   003B30  EF80  F01D         	goto	l7114
 10581   003B34                     l1107:
 10582   003B34  0012               	return		;funcret
 10583   003B36                     __end_of_vfpfcnvrt:
 10584                           	callstack 0
 10585                           
 10586 ;; *************** function _utoa *****************
 10587 ;; Defined at:
 10588 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 10591 ;;		 -> sprintf@f(11), 
 10592 ;;  d               4   23[COMRAM] unsigned long 
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;  i               2   31[COMRAM] int 
 10595 ;;  p               2   29[COMRAM] int 
 10596 ;;  w               2   27[COMRAM] int 
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  1    wreg      void 
 10599 ;; Registers used:
 10600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10606 ;;      Params:         5       0       0       0       0       0       0       0       0
 10607 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10608 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10609 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10610 ;;Total ram usage:       11 bytes
 10611 ;; Hardware stack levels used: 1
 10612 ;; Hardware stack levels required when called: 5
 10613 ;; This function calls:
 10614 ;;		___lldiv
 10615 ;;		___llmod
 10616 ;;		_pad
 10617 ;; This function is called by:
 10618 ;;		_vfpfcnvrt
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           	psect	text20
 10623   005BBC                     __ptext20:
 10624                           	callstack 0
 10625   005BBC                     _utoa:
 10626                           	callstack 21
 10627   005BBC                     
 10628                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
 10629   005BBC  0102               	movlb	2	; () banked
 10630   005BBE  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 10631   005BC0  EFE6  F02D         	goto	u9060
 10632   005BC4  EFE4  F02D         	goto	u9061
 10633   005BC8                     u9061:
 10634   005BC8  EFEC  F02D         	goto	l1072
 10635   005BCC                     u9060:
 10636   005BCC                     
 10637                           ; BSR set to: 2
 10638   005BCC  0E00               	movlw	0
 10639   005BCE  6E1F               	movwf	(utoa@p+1)^0,c
 10640   005BD0  0E01               	movlw	1
 10641   005BD2  6E1E               	movwf	utoa@p^0,c
 10642   005BD4  EFF0  F02D         	goto	l1074
 10643   005BD8                     l1072:
 10644                           
 10645                           ; BSR set to: 2
 10646   005BD8  C2FE  F01E         	movff	_prec,utoa@p
 10647   005BDC  C2FF  F01F         	movff	_prec+1,utoa@p+1
 10648   005BE0                     l1074:
 10649                           
 10650                           ; BSR set to: 2
 10651                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 10652   005BE0  C362  F01C         	movff	_width,utoa@w
 10653   005BE4  C363  F01D         	movff	_width+1,utoa@w+1
 10654   005BE8                     
 10655                           ; BSR set to: 2
 10656                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 10657   005BE8  0E00               	movlw	0
 10658   005BEA  6E21               	movwf	(utoa@i+1)^0,c
 10659   005BEC  0E4F               	movlw	79
 10660   005BEE  6E20               	movwf	utoa@i^0,c
 10661   005BF0                     
 10662                           ; BSR set to: 2
 10663                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 10664   005BF0  0103               	movlb	3	; () banked
 10665   005BF2  6BC1               	clrf	(_dbuf+79)& (0+255),b
 10666                           
 10667                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10668   005BF4  EF3A  F02E         	goto	l6972
 10669   005BF8                     l6962:
 10670                           
 10671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 10672   005BF8  0620               	decf	utoa@i^0,f,c
 10673   005BFA  A0D8               	btfss	status,0,c
 10674   005BFC  0621               	decf	(utoa@i+1)^0,f,c
 10675   005BFE                     
 10676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 10677   005BFE  0E72               	movlw	low _dbuf
 10678   005C00  2420               	addwf	utoa@i^0,w,c
 10679   005C02  6ED9               	movwf	fsr2l,c
 10680   005C04  0E03               	movlw	high _dbuf
 10681   005C06  2021               	addwfc	(utoa@i+1)^0,w,c
 10682   005C08  6EDA               	movwf	fsr2h,c
 10683   005C0A  C018  F001         	movff	utoa@d,___llmod@dividend
 10684   005C0E  C019  F002         	movff	utoa@d+1,___llmod@dividend+1
 10685   005C12  C01A  F003         	movff	utoa@d+2,___llmod@dividend+2
 10686   005C16  C01B  F004         	movff	utoa@d+3,___llmod@dividend+3
 10687   005C1A  0E0A               	movlw	10
 10688   005C1C  6E05               	movwf	___llmod@divisor^0,c
 10689   005C1E  0E00               	movlw	0
 10690   005C20  6E06               	movwf	(___llmod@divisor+1)^0,c
 10691   005C22  0E00               	movlw	0
 10692   005C24  6E07               	movwf	(___llmod@divisor+2)^0,c
 10693   005C26  0E00               	movlw	0
 10694   005C28  6E08               	movwf	(___llmod@divisor+3)^0,c
 10695   005C2A  ECCE  F034         	call	___llmod	;wreg free
 10696   005C2E  5001               	movf	?___llmod^0,w,c
 10697   005C30  0F30               	addlw	48
 10698   005C32  6EDF               	movwf	indf2,c
 10699   005C34                     
 10700                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
 10701   005C34  061E               	decf	utoa@p^0,f,c
 10702   005C36  A0D8               	btfss	status,0,c
 10703   005C38  061F               	decf	(utoa@p+1)^0,f,c
 10704   005C3A                     
 10705                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 10706   005C3A  061C               	decf	utoa@w^0,f,c
 10707   005C3C  A0D8               	btfss	status,0,c
 10708   005C3E  061D               	decf	(utoa@w+1)^0,f,c
 10709   005C40                     
 10710                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 10711   005C40  C018  F001         	movff	utoa@d,___lldiv@dividend
 10712   005C44  C019  F002         	movff	utoa@d+1,___lldiv@dividend+1
 10713   005C48  C01A  F003         	movff	utoa@d+2,___lldiv@dividend+2
 10714   005C4C  C01B  F004         	movff	utoa@d+3,___lldiv@dividend+3
 10715   005C50  0E0A               	movlw	10
 10716   005C52  6E05               	movwf	___lldiv@divisor^0,c
 10717   005C54  0E00               	movlw	0
 10718   005C56  6E06               	movwf	(___lldiv@divisor+1)^0,c
 10719   005C58  0E00               	movlw	0
 10720   005C5A  6E07               	movwf	(___lldiv@divisor+2)^0,c
 10721   005C5C  0E00               	movlw	0
 10722   005C5E  6E08               	movwf	(___lldiv@divisor+3)^0,c
 10723   005C60  EC32  F034         	call	___lldiv	;wreg free
 10724   005C64  C001  F018         	movff	?___lldiv,utoa@d
 10725   005C68  C002  F019         	movff	?___lldiv+1,utoa@d+1
 10726   005C6C  C003  F01A         	movff	?___lldiv+2,utoa@d+2
 10727   005C70  C004  F01B         	movff	?___lldiv+3,utoa@d+3
 10728   005C74                     l6972:
 10729                           
 10730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10731   005C74  5020               	movf	utoa@i^0,w,c
 10732   005C76  1021               	iorwf	(utoa@i+1)^0,w,c
 10733   005C78  B4D8               	btfsc	status,2,c
 10734   005C7A  EF41  F02E         	goto	u9071
 10735   005C7E  EF43  F02E         	goto	u9070
 10736   005C82                     u9071:
 10737   005C82  EF5B  F02E         	goto	l6978
 10738   005C86                     u9070:
 10739   005C86  5018               	movf	utoa@d^0,w,c
 10740   005C88  1019               	iorwf	(utoa@d+1)^0,w,c
 10741   005C8A  101A               	iorwf	(utoa@d+2)^0,w,c
 10742   005C8C  101B               	iorwf	(utoa@d+3)^0,w,c
 10743   005C8E  A4D8               	btfss	status,2,c
 10744   005C90  EF4C  F02E         	goto	u9081
 10745   005C94  EF4E  F02E         	goto	u9080
 10746   005C98                     u9081:
 10747   005C98  EFFC  F02D         	goto	l6962
 10748   005C9C                     u9080:
 10749   005C9C  BE1F               	btfsc	(utoa@p+1)^0,7,c
 10750   005C9E  EF5B  F02E         	goto	u9090
 10751   005CA2  501F               	movf	(utoa@p+1)^0,w,c
 10752   005CA4  E106               	bnz	u9091
 10753   005CA6  041E               	decf	utoa@p^0,w,c
 10754   005CA8  B0D8               	btfsc	status,0,c
 10755   005CAA  EF59  F02E         	goto	u9091
 10756   005CAE  EF5B  F02E         	goto	u9090
 10757   005CB2                     u9091:
 10758   005CB2  EFFC  F02D         	goto	l6962
 10759   005CB6                     u9090:
 10760   005CB6                     l6978:
 10761                           
 10762                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 10763   005CB6  C017  F00F         	movff	utoa@fp,pad@fp
 10764   005CBA  0E72               	movlw	low _dbuf
 10765   005CBC  2420               	addwf	utoa@i^0,w,c
 10766   005CBE  6E10               	movwf	pad@buf^0,c
 10767   005CC0  0E03               	movlw	high _dbuf
 10768   005CC2  2021               	addwfc	(utoa@i+1)^0,w,c
 10769   005CC4  6E11               	movwf	(pad@buf+1)^0,c
 10770   005CC6  C01C  F012         	movff	utoa@w,pad@p
 10771   005CCA  C01D  F013         	movff	utoa@w+1,pad@p+1
 10772   005CCE  EC4D  F035         	call	_pad	;wreg free
 10773   005CD2  0012               	return		;funcret
 10774   005CD4                     __end_of_utoa:
 10775                           	callstack 0
 10776                           
 10777 ;; *************** function ___llmod *****************
 10778 ;; Defined at:
 10779 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\llmod.c"
 10780 ;; Parameters:    Size  Location     Type
 10781 ;;  dividend        4    0[COMRAM] unsigned long 
 10782 ;;  divisor         4    4[COMRAM] unsigned long 
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;  counter         1    8[COMRAM] unsigned char 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  4    0[COMRAM] unsigned long 
 10787 ;; Registers used:
 10788 ;;		wreg, status,2, status,0
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10794 ;;      Params:         8       0       0       0       0       0       0       0       0
 10795 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10797 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10798 ;;Total ram usage:        9 bytes
 10799 ;; Hardware stack levels used: 1
 10800 ;; Hardware stack levels required when called: 1
 10801 ;; This function calls:
 10802 ;;		Nothing
 10803 ;; This function is called by:
 10804 ;;		_utoa
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           	psect	text21
 10809   00699C                     __ptext21:
 10810                           	callstack 0
 10811   00699C                     ___llmod:
 10812                           	callstack 24
 10813   00699C  5005               	movf	___llmod@divisor^0,w,c
 10814   00699E  1006               	iorwf	(___llmod@divisor+1)^0,w,c
 10815   0069A0  1007               	iorwf	(___llmod@divisor+2)^0,w,c
 10816   0069A2  1008               	iorwf	(___llmod@divisor+3)^0,w,c
 10817   0069A4  B4D8               	btfsc	status,2,c
 10818   0069A6  EFD7  F034         	goto	u8331
 10819   0069AA  EFD9  F034         	goto	u8330
 10820   0069AE                     u8331:
 10821   0069AE  EF09  F035         	goto	l695
 10822   0069B2                     u8330:
 10823   0069B2  0E01               	movlw	1
 10824   0069B4  6E09               	movwf	___llmod@counter^0,c
 10825   0069B6  EFE3  F034         	goto	l6572
 10826   0069BA                     l6570:
 10827   0069BA  90D8               	bcf	status,0,c
 10828   0069BC  3605               	rlcf	___llmod@divisor^0,f,c
 10829   0069BE  3606               	rlcf	(___llmod@divisor+1)^0,f,c
 10830   0069C0  3607               	rlcf	(___llmod@divisor+2)^0,f,c
 10831   0069C2  3608               	rlcf	(___llmod@divisor+3)^0,f,c
 10832   0069C4  2A09               	incf	___llmod@counter^0,f,c
 10833   0069C6                     l6572:
 10834   0069C6  AE08               	btfss	(___llmod@divisor+3)^0,7,c
 10835   0069C8  EFE8  F034         	goto	u8341
 10836   0069CC  EFEA  F034         	goto	u8340
 10837   0069D0                     u8341:
 10838   0069D0  EFDD  F034         	goto	l6570
 10839   0069D4                     u8340:
 10840   0069D4                     l6574:
 10841   0069D4  5005               	movf	___llmod@divisor^0,w,c
 10842   0069D6  5C01               	subwf	___llmod@dividend^0,w,c
 10843   0069D8  5006               	movf	(___llmod@divisor+1)^0,w,c
 10844   0069DA  5802               	subwfb	(___llmod@dividend+1)^0,w,c
 10845   0069DC  5007               	movf	(___llmod@divisor+2)^0,w,c
 10846   0069DE  5803               	subwfb	(___llmod@dividend+2)^0,w,c
 10847   0069E0  5008               	movf	(___llmod@divisor+3)^0,w,c
 10848   0069E2  5804               	subwfb	(___llmod@dividend+3)^0,w,c
 10849   0069E4  A0D8               	btfss	status,0,c
 10850   0069E6  EFF7  F034         	goto	u8351
 10851   0069EA  EFF9  F034         	goto	u8350
 10852   0069EE                     u8351:
 10853   0069EE  EF01  F035         	goto	l6578
 10854   0069F2                     u8350:
 10855   0069F2  5005               	movf	___llmod@divisor^0,w,c
 10856   0069F4  5E01               	subwf	___llmod@dividend^0,f,c
 10857   0069F6  5006               	movf	(___llmod@divisor+1)^0,w,c
 10858   0069F8  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
 10859   0069FA  5007               	movf	(___llmod@divisor+2)^0,w,c
 10860   0069FC  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
 10861   0069FE  5008               	movf	(___llmod@divisor+3)^0,w,c
 10862   006A00  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
 10863   006A02                     l6578:
 10864   006A02  90D8               	bcf	status,0,c
 10865   006A04  3208               	rrcf	(___llmod@divisor+3)^0,f,c
 10866   006A06  3207               	rrcf	(___llmod@divisor+2)^0,f,c
 10867   006A08  3206               	rrcf	(___llmod@divisor+1)^0,f,c
 10868   006A0A  3205               	rrcf	___llmod@divisor^0,f,c
 10869   006A0C  2E09               	decfsz	___llmod@counter^0,f,c
 10870   006A0E  EFEA  F034         	goto	l6574
 10871   006A12                     l695:
 10872   006A12  C001  F001         	movff	___llmod@dividend,?___llmod
 10873   006A16  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 10874   006A1A  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 10875   006A1E  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 10876   006A22  0012               	return		;funcret
 10877   006A24                     __end_of___llmod:
 10878                           	callstack 0
 10879                           
 10880 ;; *************** function ___lldiv *****************
 10881 ;; Defined at:
 10882 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;  dividend        4    0[COMRAM] unsigned long 
 10885 ;;  divisor         4    4[COMRAM] unsigned long 
 10886 ;; Auto vars:     Size  Location     Type
 10887 ;;  quotient        4    8[COMRAM] unsigned long 
 10888 ;;  counter         1   12[COMRAM] unsigned char 
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  4    0[COMRAM] unsigned long 
 10891 ;; Registers used:
 10892 ;;		wreg, status,2, status,0
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/0
 10895 ;;		On exit  : 0/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10898 ;;      Params:         8       0       0       0       0       0       0       0       0
 10899 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10900 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10901 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10902 ;;Total ram usage:       13 bytes
 10903 ;; Hardware stack levels used: 1
 10904 ;; Hardware stack levels required when called: 1
 10905 ;; This function calls:
 10906 ;;		Nothing
 10907 ;; This function is called by:
 10908 ;;		_Handle_Fire_Events
 10909 ;;		_utoa
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           	psect	text22
 10914   006864                     __ptext22:
 10915                           	callstack 0
 10916   006864                     ___lldiv:
 10917                           	callstack 24
 10918   006864  0E00               	movlw	0
 10919   006866  6E09               	movwf	___lldiv@quotient^0,c
 10920   006868  0E00               	movlw	0
 10921   00686A  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 10922   00686C  0E00               	movlw	0
 10923   00686E  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 10924   006870  0E00               	movlw	0
 10925   006872  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 10926   006874  5005               	movf	___lldiv@divisor^0,w,c
 10927   006876  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 10928   006878  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 10929   00687A  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 10930   00687C  B4D8               	btfsc	status,2,c
 10931   00687E  EF43  F034         	goto	u7601
 10932   006882  EF45  F034         	goto	u7600
 10933   006886                     u7601:
 10934   006886  EF7B  F034         	goto	l302
 10935   00688A                     u7600:
 10936   00688A  0E01               	movlw	1
 10937   00688C  6E0D               	movwf	___lldiv@counter^0,c
 10938   00688E  EF4F  F034         	goto	l6112
 10939   006892                     l6110:
 10940   006892  90D8               	bcf	status,0,c
 10941   006894  3605               	rlcf	___lldiv@divisor^0,f,c
 10942   006896  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 10943   006898  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 10944   00689A  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 10945   00689C  2A0D               	incf	___lldiv@counter^0,f,c
 10946   00689E                     l6112:
 10947   00689E  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 10948   0068A0  EF54  F034         	goto	u7611
 10949   0068A4  EF56  F034         	goto	u7610
 10950   0068A8                     u7611:
 10951   0068A8  EF49  F034         	goto	l6110
 10952   0068AC                     u7610:
 10953   0068AC                     l6114:
 10954   0068AC  90D8               	bcf	status,0,c
 10955   0068AE  3609               	rlcf	___lldiv@quotient^0,f,c
 10956   0068B0  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 10957   0068B2  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 10958   0068B4  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 10959   0068B6  5005               	movf	___lldiv@divisor^0,w,c
 10960   0068B8  5C01               	subwf	___lldiv@dividend^0,w,c
 10961   0068BA  5006               	movf	(___lldiv@divisor+1)^0,w,c
 10962   0068BC  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 10963   0068BE  5007               	movf	(___lldiv@divisor+2)^0,w,c
 10964   0068C0  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 10965   0068C2  5008               	movf	(___lldiv@divisor+3)^0,w,c
 10966   0068C4  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 10967   0068C6  A0D8               	btfss	status,0,c
 10968   0068C8  EF68  F034         	goto	u7621
 10969   0068CC  EF6A  F034         	goto	u7620
 10970   0068D0                     u7621:
 10971   0068D0  EF73  F034         	goto	l6122
 10972   0068D4                     u7620:
 10973   0068D4  5005               	movf	___lldiv@divisor^0,w,c
 10974   0068D6  5E01               	subwf	___lldiv@dividend^0,f,c
 10975   0068D8  5006               	movf	(___lldiv@divisor+1)^0,w,c
 10976   0068DA  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 10977   0068DC  5007               	movf	(___lldiv@divisor+2)^0,w,c
 10978   0068DE  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 10979   0068E0  5008               	movf	(___lldiv@divisor+3)^0,w,c
 10980   0068E2  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 10981   0068E4  8009               	bsf	___lldiv@quotient^0,0,c
 10982   0068E6                     l6122:
 10983   0068E6  90D8               	bcf	status,0,c
 10984   0068E8  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 10985   0068EA  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 10986   0068EC  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 10987   0068EE  3205               	rrcf	___lldiv@divisor^0,f,c
 10988   0068F0  2E0D               	decfsz	___lldiv@counter^0,f,c
 10989   0068F2  EF56  F034         	goto	l6114
 10990   0068F6                     l302:
 10991   0068F6  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10992   0068FA  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10993   0068FE  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10994   006902  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10995   006906  0012               	return		;funcret
 10996   006908                     __end_of___lldiv:
 10997                           	callstack 0
 10998                           
 10999 ;; *************** function _stoa *****************
 11000 ;; Defined at:
 11001 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
 11004 ;;		 -> sprintf@f(11), 
 11005 ;;  s               2    9[COMRAM] PTR unsigned char 
 11006 ;;		 -> ?_sprintf(2), sp__powf(4), STR_15(1), STR_14(7), 
 11007 ;;		 -> STR_13(1), STR_12(9), STR_11(9), Handle_Test_Events@test_data(50), 
 11008 ;;		 -> STR_9(1), STR_8(11), STR_7(9), Handle_Fire_Events@end_data(150), 
 11009 ;;		 -> STR_5(11), Handle_Fire_Events@start_data(100), fire_trigger_sensor(20), 
 11010 ;; Auto vars:     Size  Location     Type
 11011 ;;  l               2   17[COMRAM] int 
 11012 ;;  cp              2   15[COMRAM] PTR unsigned char 
 11013 ;;		 -> STR_24(7), ?_sprintf(2), sp__powf(4), STR_15(1), 
 11014 ;;		 -> STR_14(7), STR_13(1), STR_12(9), STR_11(9), 
 11015 ;;		 -> Handle_Test_Events@test_data(50), STR_9(1), STR_8(11), STR_7(9), 
 11016 ;;		 -> Handle_Fire_Events@end_data(150), STR_5(11), Handle_Fire_Events@start_data(100), fire_trigger_sensor(20), 
 11017 ;;  p               2   13[COMRAM] int 
 11018 ;; Return value:  Size  Location     Type
 11019 ;;                  1    wreg      void 
 11020 ;; Registers used:
 11021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11027 ;;      Params:         3       0       0       0       0       0       0       0       0
 11028 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11029 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11030 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11031 ;;Total ram usage:       11 bytes
 11032 ;; Hardware stack levels used: 1
 11033 ;; Hardware stack levels required when called: 3
 11034 ;; This function calls:
 11035 ;;		_fputc
 11036 ;; This function is called by:
 11037 ;;		_vfpfcnvrt
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text23
 11042   0060EE                     __ptext23:
 11043                           	callstack 0
 11044   0060EE                     _stoa:
 11045                           	callstack 23
 11046   0060EE                     
 11047                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 951
      +                          :     cp = s;
 11048   0060EE  C00A  F010         	movff	stoa@s,stoa@cp
 11049   0060F2  C00B  F011         	movff	stoa@s+1,stoa@cp+1
 11050                           
 11051                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 11052   0060F6  5010               	movf	stoa@cp^0,w,c
 11053   0060F8  1011               	iorwf	(stoa@cp+1)^0,w,c
 11054   0060FA  A4D8               	btfss	status,2,c
 11055   0060FC  EF82  F030         	goto	u8991
 11056   006100  EF84  F030         	goto	u8990
 11057   006104                     u8991:
 11058   006104  EF88  F030         	goto	l6936
 11059   006108                     u8990:
 11060   006108                     
 11061                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 11062   006108  0EE9               	movlw	low STR_24
 11063   00610A  6E10               	movwf	stoa@cp^0,c
 11064   00610C  0E7F               	movlw	high STR_24
 11065   00610E  6E11               	movwf	(stoa@cp+1)^0,c
 11066   006110                     l6936:
 11067                           
 11068                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 11069   006110  0E00               	movlw	0
 11070   006112  6E13               	movwf	(stoa@l+1)^0,c
 11071   006114  0E00               	movlw	0
 11072   006116  6E12               	movwf	stoa@l^0,c
 11073   006118  EF90  F030         	goto	l6940
 11074   00611C                     l6938:
 11075   00611C  4A12               	infsnz	stoa@l^0,f,c
 11076   00611E  2A13               	incf	(stoa@l+1)^0,f,c
 11077   006120                     l6940:
 11078   006120  5012               	movf	stoa@l^0,w,c
 11079   006122  2410               	addwf	stoa@cp^0,w,c
 11080   006124  6E0C               	movwf	??_stoa^0,c
 11081   006126  5013               	movf	(stoa@l+1)^0,w,c
 11082   006128  2011               	addwfc	(stoa@cp+1)^0,w,c
 11083   00612A  6E0D               	movwf	(??_stoa+1)^0,c
 11084   00612C  C00C  FFF6         	movff	??_stoa,tblptrl
 11085   006130  C00D  FFF7         	movff	??_stoa+1,tblptrh
 11086   006134  6AF8               	clrf	tblptru,c
 11087   006136  0E07               	movlw	(high __ramtop+-1)
 11088   006138  64F7               	cpfsgt	tblptrh,c
 11089   00613A  D003               	bra	u9007
 11090   00613C  0008               	tblrd		*
 11091   00613E  50F5               	movf	tablat,w,c
 11092   006140  D005               	bra	u9000
 11093   006142                     u9007:
 11094   006142  CFF6 FFE1          	movff	tblptrl,fsr1l
 11095   006146  CFF7 FFE2          	movff	tblptrh,fsr1h
 11096   00614A  50E7               	movf	indf1,w,c
 11097   00614C                     u9000:
 11098   00614C  0900               	iorlw	0
 11099   00614E  A4D8               	btfss	status,2,c
 11100   006150  EFAC  F030         	goto	u9011
 11101   006154  EFAE  F030         	goto	u9010
 11102   006158                     u9011:
 11103   006158  EF8E  F030         	goto	l6938
 11104   00615C                     u9010:
 11105   00615C                     
 11106                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 11107   00615C  0102               	movlb	2	; () banked
 11108   00615E  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 11109   006160  EFB4  F030         	goto	u9021
 11110   006164  EFB6  F030         	goto	u9020
 11111   006168                     u9021:
 11112   006168  EFC9  F030         	goto	l1064
 11113   00616C                     u9020:
 11114   00616C                     
 11115                           ; BSR set to: 2
 11116   00616C  5012               	movf	stoa@l^0,w,c
 11117   00616E  5DFE               	subwf	_prec& (0+255),w,b
 11118   006170  51FF               	movf	(_prec+1)& (0+255),w,b
 11119   006172  0A80               	xorlw	128
 11120   006174  6E0C               	movwf	??_stoa^0,c
 11121   006176  5013               	movf	(stoa@l+1)^0,w,c
 11122   006178  0A80               	xorlw	128
 11123   00617A  580C               	subwfb	??_stoa^0,w,c
 11124   00617C  B0D8               	btfsc	status,0,c
 11125   00617E  EFC3  F030         	goto	u9031
 11126   006182  EFC5  F030         	goto	u9030
 11127   006186                     u9031:
 11128   006186  EFC9  F030         	goto	l1064
 11129   00618A                     u9030:
 11130   00618A                     
 11131                           ; BSR set to: 2
 11132                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 11133   00618A  C2FE  F012         	movff	_prec,stoa@l
 11134   00618E  C2FF  F013         	movff	_prec+1,stoa@l+1
 11135   006192                     l1064:
 11136                           
 11137                           ; BSR set to: 2
 11138                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 965:     p = l;
 11139   006192  C012  F00E         	movff	stoa@l,stoa@p
 11140   006196  C013  F00F         	movff	stoa@l+1,stoa@p+1
 11141                           
 11142                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11143   00619A  EFE9  F030         	goto	l6952
 11144   00619E                     l6948:
 11145                           
 11146                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 11147   00619E  C010  FFF6         	movff	stoa@cp,tblptrl
 11148   0061A2  C011  FFF7         	movff	stoa@cp+1,tblptrh
 11149   0061A6  6AF8               	clrf	tblptru,c
 11150   0061A8  0E07               	movlw	(high __ramtop+-1)
 11151   0061AA  64F7               	cpfsgt	tblptrh,c
 11152   0061AC  D003               	bra	u9047
 11153   0061AE  0008               	tblrd		*
 11154   0061B0  50F5               	movf	tablat,w,c
 11155   0061B2  D005               	bra	u9040
 11156   0061B4                     u9047:
 11157   0061B4  CFF6 FFE1          	movff	tblptrl,fsr1l
 11158   0061B8  CFF7 FFE2          	movff	tblptrh,fsr1h
 11159   0061BC  50E7               	movf	indf1,w,c
 11160   0061BE                     u9040:
 11161   0061BE  6E0C               	movwf	??_stoa^0,c
 11162   0061C0  500C               	movf	??_stoa^0,w,c
 11163   0061C2  6E01               	movwf	fputc@c^0,c
 11164   0061C4  6A02               	clrf	(fputc@c+1)^0,c
 11165   0061C6  C009  F003         	movff	stoa@fp,fputc@fp
 11166   0061CA  ECD3  F032         	call	_fputc	;wreg free
 11167   0061CE                     
 11168                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 11169   0061CE  4A10               	infsnz	stoa@cp^0,f,c
 11170   0061D0  2A11               	incf	(stoa@cp+1)^0,f,c
 11171   0061D2                     l6952:
 11172                           
 11173                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11174   0061D2  060E               	decf	stoa@p^0,f,c
 11175   0061D4  A0D8               	btfss	status,0,c
 11176   0061D6  060F               	decf	(stoa@p+1)^0,f,c
 11177   0061D8  280E               	incf	stoa@p^0,w,c
 11178   0061DA  E106               	bnz	u9051
 11179   0061DC  280F               	incf	(stoa@p+1)^0,w,c
 11180   0061DE  A4D8               	btfss	status,2,c
 11181   0061E0  EFF4  F030         	goto	u9051
 11182   0061E4  EFF6  F030         	goto	u9050
 11183   0061E8                     u9051:
 11184   0061E8  EFCF  F030         	goto	l6948
 11185   0061EC                     u9050:
 11186   0061EC  0012               	return		;funcret
 11187   0061EE                     __end_of_stoa:
 11188                           	callstack 0
 11189                           
 11190 ;; *************** function _read_prec_or_width *****************
 11191 ;; Defined at:
 11192 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
 11195 ;;		 -> vfprintf@cfmt(2), 
 11196 ;;  ap              1    1[COMRAM] PTR PTR void [1]
 11197 ;;		 -> sprintf@ap(1), 
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;  c               1    4[COMRAM] unsigned char 
 11200 ;;  n               2    5[COMRAM] int 
 11201 ;; Return value:  Size  Location     Type
 11202 ;;                  2    0[COMRAM] int 
 11203 ;; Registers used:
 11204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11205 ;; Tracked objects:
 11206 ;;		On entry : 0/0
 11207 ;;		On exit  : 0/0
 11208 ;;		Unchanged: 0/0
 11209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11210 ;;      Params:         2       0       0       0       0       0       0       0       0
 11211 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11212 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11213 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11214 ;;Total ram usage:        7 bytes
 11215 ;; Hardware stack levels used: 1
 11216 ;; Hardware stack levels required when called: 1
 11217 ;; This function calls:
 11218 ;;		Nothing
 11219 ;; This function is called by:
 11220 ;;		_vfpfcnvrt
 11221 ;; This function uses a non-reentrant model
 11222 ;;
 11223                           
 11224                           	psect	text24
 11225   00670E                     __ptext24:
 11226                           	callstack 0
 11227   00670E                     _read_prec_or_width:
 11228                           	callstack 25
 11229   00670E                     
 11230                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11231   00670E  0E00               	movlw	0
 11232   006710  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11233   006712  0E00               	movlw	0
 11234   006714  6E06               	movwf	read_prec_or_width@n^0,c
 11235   006716                     
 11236                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11237   006716  5001               	movf	read_prec_or_width@fmt^0,w,c
 11238   006718  6ED9               	movwf	fsr2l,c
 11239   00671A  6ADA               	clrf	fsr2h,c
 11240   00671C  CFDE FFF6          	movff	postinc2,tblptrl
 11241   006720  CFDD FFF7          	movff	postdec2,tblptrh
 11242   006724                     	if	0	;tblptru may be non-zero
 11243   006724                     	endif
 11244   006724                     	if	0	;tblptru may be non-zero
 11245   006724                     	endif
 11246   006724  0008               	tblrd		*
 11247   006726  50F5               	movf	tablat,w,c
 11248   006728  0A2A               	xorlw	42
 11249   00672A  A4D8               	btfss	status,2,c
 11250   00672C  EF9A  F033         	goto	u9101
 11251   006730  EF9C  F033         	goto	u9100
 11252   006734                     u9101:
 11253   006734  EFC5  F033         	goto	l6994
 11254   006738                     u9100:
 11255   006738                     
 11256                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11257   006738  5001               	movf	read_prec_or_width@fmt^0,w,c
 11258   00673A  6ED9               	movwf	fsr2l,c
 11259   00673C  6ADA               	clrf	fsr2h,c
 11260   00673E  2ADE               	incf	postinc2,f,c
 11261   006740  0E00               	movlw	0
 11262   006742  22DD               	addwfc	postdec2,f,c
 11263   006744                     
 11264                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11265   006744  5002               	movf	read_prec_or_width@ap^0,w,c
 11266   006746  6ED9               	movwf	fsr2l,c
 11267   006748  6ADA               	clrf	fsr2h,c
 11268   00674A  0E02               	movlw	2
 11269   00674C  26DF               	addwf	indf2,f,c
 11270   00674E  5CDF               	subwf	indf2,w,c
 11271   006750  6ED9               	movwf	fsr2l,c
 11272   006752  6ADA               	clrf	fsr2h,c
 11273   006754  CFDE F006          	movff	postinc2,read_prec_or_width@n
 11274   006758  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
 11275                           
 11276                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11277   00675C  EFD8  F033         	goto	l1084
 11278   006760                     l6990:
 11279                           
 11280                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11281   006760  0E0A               	movlw	10
 11282   006762  0206               	mulwf	read_prec_or_width@n^0,c
 11283   006764  CFF3 F003          	movff	prodl,??_read_prec_or_width
 11284   006768  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
 11285   00676C  0207               	mulwf	(read_prec_or_width@n+1)^0,c
 11286   00676E  50F3               	movf	prodl,w,c
 11287   006770  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
 11288   006772  5005               	movf	read_prec_or_width@c^0,w,c
 11289   006774  2403               	addwf	??_read_prec_or_width^0,w,c
 11290   006776  6E06               	movwf	read_prec_or_width@n^0,c
 11291   006778  0E00               	movlw	0
 11292   00677A  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
 11293   00677C  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11294   00677E                     
 11295                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11296   00677E  5001               	movf	read_prec_or_width@fmt^0,w,c
 11297   006780  6ED9               	movwf	fsr2l,c
 11298   006782  6ADA               	clrf	fsr2h,c
 11299   006784  2ADE               	incf	postinc2,f,c
 11300   006786  0E00               	movlw	0
 11301   006788  22DD               	addwfc	postdec2,f,c
 11302   00678A                     l6994:
 11303                           
 11304                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11305   00678A  5001               	movf	read_prec_or_width@fmt^0,w,c
 11306   00678C  6ED9               	movwf	fsr2l,c
 11307   00678E  6ADA               	clrf	fsr2h,c
 11308   006790  CFDE FFF6          	movff	postinc2,tblptrl
 11309   006794  CFDD FFF7          	movff	postdec2,tblptrh
 11310   006798                     	if	0	;tblptru may be non-zero
 11311   006798                     	endif
 11312   006798                     	if	0	;tblptru may be non-zero
 11313   006798                     	endif
 11314   006798  0008               	tblrd		*
 11315   00679A  50F5               	movf	tablat,w,c
 11316   00679C  0FD0               	addlw	208
 11317   00679E  6E05               	movwf	read_prec_or_width@c^0,c
 11318   0067A0  0E09               	movlw	9
 11319   0067A2  6405               	cpfsgt	read_prec_or_width@c^0,c
 11320   0067A4  EFD6  F033         	goto	u9111
 11321   0067A8  EFD8  F033         	goto	u9110
 11322   0067AC                     u9111:
 11323   0067AC  EFB0  F033         	goto	l6990
 11324   0067B0                     u9110:
 11325   0067B0                     l1084:
 11326                           
 11327                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11328   0067B0  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
 11329   0067B4  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 11330   0067B8  0012               	return		;funcret
 11331   0067BA                     __end_of_read_prec_or_width:
 11332                           	callstack 0
 11333                           
 11334 ;; *************** function _efgtoa *****************
 11335 ;; Defined at:
 11336 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 11339 ;;		 -> sprintf@f(11), 
 11340 ;;  f               4    9[BANK0 ] PTR struct _IO_FILE
 11341 ;;  c               1   13[BANK0 ] unsigned char 
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;  u               4   56[BANK0 ] struct flui
 11344 ;;  g               4   50[BANK0 ] struct flui
 11345 ;;  l               4   45[BANK0 ] struct flui
 11346 ;;  h               4   41[BANK0 ] struct flui
 11347 ;;  ou              4   35[BANK0 ] struct flui
 11348 ;;  n               2   54[BANK0 ] int 
 11349 ;;  i               2   39[BANK0 ] int 
 11350 ;;  w               2   33[BANK0 ] int 
 11351 ;;  e               2   31[BANK0 ] int 
 11352 ;;  m               2   29[BANK0 ] int 
 11353 ;;  d               2   27[BANK0 ] int 
 11354 ;;  t               2   20[BANK0 ] int 
 11355 ;;  p               2   18[BANK0 ] int 
 11356 ;;  ne              2   16[BANK0 ] int 
 11357 ;;  sign            1   49[BANK0 ] unsigned char 
 11358 ;;  nmode           1   26[BANK0 ] unsigned char 
 11359 ;;  mode            1   25[BANK0 ] unsigned char 
 11360 ;;  pp              1   24[BANK0 ] unsigned char 
 11361 ;;  esign           1    0        unsigned char 
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      void 
 11364 ;; Registers used:
 11365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11371 ;;      Params:         0       6       0       0       0       0       0       0       0
 11372 ;;      Locals:         0      44       0       0       0       0       0       0       0
 11373 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11374 ;;      Totals:         0      52       0       0       0       0       0       0       0
 11375 ;;Total ram usage:       52 bytes
 11376 ;; Hardware stack levels used: 1
 11377 ;; Hardware stack levels required when called: 5
 11378 ;; This function calls:
 11379 ;;		___fladd
 11380 ;;		___fldiv
 11381 ;;		___fleq
 11382 ;;		___flge
 11383 ;;		___flmul
 11384 ;;		___flneg
 11385 ;;		___flsub
 11386 ;;		___fltol
 11387 ;;		___fpclassifyf
 11388 ;;		_floorf
 11389 ;;		_labs
 11390 ;;		_memcpy
 11391 ;;		_pad
 11392 ;;		_strcpy
 11393 ;; This function is called by:
 11394 ;;		_vfpfcnvrt
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           	psect	text25
 11399   0024C8                     __ptext25:
 11400                           	callstack 0
 11401   0024C8                     _efgtoa:
 11402                           	callstack 21
 11403   0024C8                     
 11404                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 11405   0024C8  0100               	movlb	0	; () banked
 11406   0024CA  6B91               	clrf	efgtoa@sign& (0+255),b
 11407                           
 11408                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 11409   0024CC  C069  F092         	movff	efgtoa@f,efgtoa@g
 11410   0024D0  C06A  F093         	movff	efgtoa@f+1,efgtoa@g+1
 11411   0024D4  C06B  F094         	movff	efgtoa@f+2,efgtoa@g+2
 11412   0024D8  C06C  F095         	movff	efgtoa@f+3,efgtoa@g+3
 11413   0024DC                     
 11414                           ; BSR set to: 0
 11415                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 11416   0024DC  BF95               	btfsc	(efgtoa@g+3)& (0+255),7,b
 11417   0024DE  EF75  F012         	goto	u8670
 11418   0024E2  EF73  F012         	goto	u8671
 11419   0024E6                     u8671:
 11420   0024E6  EF89  F012         	goto	l6720
 11421   0024EA                     u8670:
 11422   0024EA                     
 11423                           ; BSR set to: 0
 11424                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 11425   0024EA  0E01               	movlw	1
 11426   0024EC  6F91               	movwf	efgtoa@sign& (0+255),b
 11427   0024EE                     
 11428                           ; BSR set to: 0
 11429                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 11430   0024EE  C092  F001         	movff	efgtoa@g,___flneg@f1
 11431   0024F2  C093  F002         	movff	efgtoa@g+1,___flneg@f1+1
 11432   0024F6  C094  F003         	movff	efgtoa@g+2,___flneg@f1+2
 11433   0024FA  C095  F004         	movff	efgtoa@g+3,___flneg@f1+3
 11434   0024FE  ECB9  F036         	call	___flneg	;wreg free
 11435   002502  C001  F092         	movff	?___flneg,efgtoa@g
 11436   002506  C002  F093         	movff	?___flneg+1,efgtoa@g+1
 11437   00250A  C003  F094         	movff	?___flneg+2,efgtoa@g+2
 11438   00250E  C004  F095         	movff	?___flneg+3,efgtoa@g+3
 11439   002512                     l6720:
 11440                           
 11441                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 11442   002512  0E00               	movlw	0
 11443   002514  0100               	movlb	0	; () banked
 11444   002516  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11445   002518  0E00               	movlw	0
 11446   00251A  6F96               	movwf	efgtoa@n& (0+255),b
 11447   00251C                     
 11448                           ; BSR set to: 0
 11449                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 11450   00251C  C362  F081         	movff	_width,efgtoa@w
 11451   002520  C363  F082         	movff	_width+1,efgtoa@w+1
 11452   002524                     
 11453                           ; BSR set to: 0
 11454                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
 11455   002524  5191               	movf	efgtoa@sign& (0+255),w,b
 11456   002526  B4D8               	btfsc	status,2,c
 11457   002528  EF98  F012         	goto	u8681
 11458   00252C  EF9A  F012         	goto	u8680
 11459   002530                     u8681:
 11460   002530  EFAE  F012         	goto	l6734
 11461   002534                     u8680:
 11462   002534                     
 11463                           ; BSR set to: 0
 11464                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 11465   002534  5191               	movf	efgtoa@sign& (0+255),w,b
 11466   002536  A4D8               	btfss	status,2,c
 11467   002538  EFA0  F012         	goto	u8691
 11468   00253C  EFA2  F012         	goto	u8690
 11469   002540                     u8691:
 11470   002540  EFA8  F012         	goto	l6730
 11471   002544                     u8690:
 11472   002544                     
 11473                           ; BSR set to: 0
 11474   002544  0E00               	movlw	0
 11475   002546  6F77               	movwf	(_efgtoa$1376+1)& (0+255),b
 11476   002548  0E2B               	movlw	43
 11477   00254A  6F76               	movwf	_efgtoa$1376& (0+255),b
 11478   00254C  EFAC  F012         	goto	l6732
 11479   002550                     l6730:
 11480                           
 11481                           ; BSR set to: 0
 11482   002550  0E00               	movlw	0
 11483   002552  6F77               	movwf	(_efgtoa$1376+1)& (0+255),b
 11484   002554  0E2D               	movlw	45
 11485   002556  6F76               	movwf	_efgtoa$1376& (0+255),b
 11486   002558                     l6732:
 11487                           
 11488                           ; BSR set to: 0
 11489   002558  C076  F091         	movff	_efgtoa$1376,efgtoa@sign
 11490   00255C                     l6734:
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 11494   00255C  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
 11495   002560  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11496   002564  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11497   002568  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11498   00256C  ECF7  F030         	call	___fpclassifyf	;wreg free
 11499   002570  0401               	decf	?___fpclassifyf^0,w,c
 11500   002572  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11501   002574  A4D8               	btfss	status,2,c
 11502   002576  EFBF  F012         	goto	u8701
 11503   00257A  EFC1  F012         	goto	u8700
 11504   00257E                     u8701:
 11505   00257E  EFF2  F012         	goto	l6752
 11506   002582                     u8700:
 11507   002582                     
 11508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 11509   002582  0100               	movlb	0	; () banked
 11510   002584  5191               	movf	efgtoa@sign& (0+255),w,b
 11511   002586  B4D8               	btfsc	status,2,c
 11512   002588  EFC8  F012         	goto	u8711
 11513   00258C  EFCA  F012         	goto	u8710
 11514   002590                     u8711:
 11515   002590  EFD3  F012         	goto	l6744
 11516   002594                     u8710:
 11517   002594                     
 11518                           ; BSR set to: 0
 11519                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 11520   002594  C091  F372         	movff	efgtoa@sign,_dbuf
 11521   002598                     
 11522                           ; BSR set to: 0
 11523                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
 11524   002598  0781               	decf	efgtoa@w& (0+255),f,b
 11525   00259A  A0D8               	btfss	status,0,c
 11526   00259C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 11527   00259E                     
 11528                           ; BSR set to: 0
 11529                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 11530   00259E  0E00               	movlw	0
 11531   0025A0  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11532   0025A2  0E01               	movlw	1
 11533   0025A4  6F96               	movwf	efgtoa@n& (0+255),b
 11534   0025A6                     l6744:
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 11538   0025A6  0E72               	movlw	low _dbuf
 11539   0025A8  2596               	addwf	efgtoa@n& (0+255),w,b
 11540   0025AA  6E01               	movwf	strcpy@dest^0,c
 11541   0025AC  0E03               	movlw	high _dbuf
 11542   0025AE  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11543   0025B0  6E02               	movwf	(strcpy@dest+1)^0,c
 11544   0025B2  0EF7               	movlw	low STR_18
 11545   0025B4  6E03               	movwf	strcpy@src^0,c
 11546   0025B6  0E7F               	movlw	high STR_18
 11547   0025B8  6E04               	movwf	(strcpy@src+1)^0,c
 11548   0025BA  EC9D  F036         	call	_strcpy	;wreg free
 11549   0025BE                     l6746:
 11550                           
 11551                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 11552   0025BE  0100               	movlb	0	; () banked
 11553   0025C0  0EFD               	movlw	253
 11554   0025C2  2781               	addwf	efgtoa@w& (0+255),f,b
 11555   0025C4  0EFF               	movlw	255
 11556   0025C6  2382               	addwfc	(efgtoa@w+1)& (0+255),f,b
 11557   0025C8                     
 11558                           ; BSR set to: 0
 11559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 11560   0025C8  C068  F00F         	movff	efgtoa@fp,pad@fp
 11561   0025CC  0E72               	movlw	low _dbuf
 11562   0025CE  6E10               	movwf	pad@buf^0,c
 11563   0025D0  0E03               	movlw	high _dbuf
 11564   0025D2  6E11               	movwf	(pad@buf+1)^0,c
 11565   0025D4  C081  F012         	movff	efgtoa@w,pad@p
 11566   0025D8  C082  F013         	movff	efgtoa@w+1,pad@p+1
 11567   0025DC  EC4D  F035         	call	_pad	;wreg free
 11568   0025E0  EF5B  F017         	goto	l1015
 11569   0025E4                     l6752:
 11570                           
 11571                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 11572   0025E4  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
 11573   0025E8  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11574   0025EC  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11575   0025F0  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11576   0025F4  ECF7  F030         	call	___fpclassifyf	;wreg free
 11577   0025F8  5001               	movf	?___fpclassifyf^0,w,c
 11578   0025FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11579   0025FC  A4D8               	btfss	status,2,c
 11580   0025FE  EF03  F013         	goto	u8721
 11581   002602  EF05  F013         	goto	u8720
 11582   002606                     u8721:
 11583   002606  EF25  F013         	goto	l6770
 11584   00260A                     u8720:
 11585   00260A                     
 11586                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 11587   00260A  0100               	movlb	0	; () banked
 11588   00260C  5191               	movf	efgtoa@sign& (0+255),w,b
 11589   00260E  B4D8               	btfsc	status,2,c
 11590   002610  EF0C  F013         	goto	u8731
 11591   002614  EF0E  F013         	goto	u8730
 11592   002618                     u8731:
 11593   002618  EF17  F013         	goto	l6762
 11594   00261C                     u8730:
 11595   00261C                     
 11596                           ; BSR set to: 0
 11597                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 11598   00261C  C091  F372         	movff	efgtoa@sign,_dbuf
 11599   002620                     
 11600                           ; BSR set to: 0
 11601                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
 11602   002620  0781               	decf	efgtoa@w& (0+255),f,b
 11603   002622  A0D8               	btfss	status,0,c
 11604   002624  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 11605   002626                     
 11606                           ; BSR set to: 0
 11607                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 11608   002626  0E00               	movlw	0
 11609   002628  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11610   00262A  0E01               	movlw	1
 11611   00262C  6F96               	movwf	efgtoa@n& (0+255),b
 11612   00262E                     l6762:
 11613                           
 11614                           ; BSR set to: 0
 11615                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 11616   00262E  0E72               	movlw	low _dbuf
 11617   002630  2596               	addwf	efgtoa@n& (0+255),w,b
 11618   002632  6E01               	movwf	strcpy@dest^0,c
 11619   002634  0E03               	movlw	high _dbuf
 11620   002636  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11621   002638  6E02               	movwf	(strcpy@dest+1)^0,c
 11622   00263A  0EFB               	movlw	low STR_21
 11623   00263C  6E03               	movwf	strcpy@src^0,c
 11624   00263E  0E7F               	movlw	high STR_21
 11625   002640  6E04               	movwf	(strcpy@src+1)^0,c
 11626   002642  EC9D  F036         	call	_strcpy	;wreg free
 11627   002646  EFDF  F012         	goto	l6746
 11628   00264A                     l6770:
 11629                           
 11630                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 11631   00264A  0E00               	movlw	0
 11632   00264C  0100               	movlb	0	; () banked
 11633   00264E  6F98               	movwf	efgtoa@u& (0+255),b
 11634   002650  0E00               	movlw	0
 11635   002652  6F99               	movwf	(efgtoa@u+1)& (0+255),b
 11636   002654  0E80               	movlw	128
 11637   002656  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
 11638   002658  0E3F               	movlw	63
 11639   00265A  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
 11640                           
 11641                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 11642   00265C  0E00               	movlw	0
 11643   00265E  6F80               	movwf	(efgtoa@e+1)& (0+255),b
 11644   002660  0E00               	movlw	0
 11645   002662  6F7F               	movwf	efgtoa@e& (0+255),b
 11646   002664                     
 11647                           ; BSR set to: 0
 11648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 11649   002664  C092  F001         	movff	efgtoa@g,___fleq@ff1
 11650   002668  C093  F002         	movff	efgtoa@g+1,___fleq@ff1+1
 11651   00266C  C094  F003         	movff	efgtoa@g+2,___fleq@ff1+2
 11652   002670  C095  F004         	movff	efgtoa@g+3,___fleq@ff1+3
 11653   002674  0E00               	movlw	0
 11654   002676  6E05               	movwf	___fleq@ff2^0,c
 11655   002678  0E00               	movlw	0
 11656   00267A  6E06               	movwf	(___fleq@ff2+1)^0,c
 11657   00267C  0E00               	movlw	0
 11658   00267E  6E07               	movwf	(___fleq@ff2+2)^0,c
 11659   002680  0E00               	movlw	0
 11660   002682  6E08               	movwf	(___fleq@ff2+3)^0,c
 11661   002684  ECDD  F033         	call	___fleq	;wreg free
 11662   002688  B0D8               	btfsc	status,0,c
 11663   00268A  EF49  F013         	goto	u8741
 11664   00268E  EF4B  F013         	goto	u8740
 11665   002692                     u8741:
 11666   002692  EF2B  F014         	goto	l1018
 11667   002696                     u8740:
 11668   002696  EF58  F013         	goto	l6778
 11669   00269A                     l1020:
 11670                           
 11671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 11672   00269A  C083  F098         	movff	efgtoa@ou,efgtoa@u
 11673   00269E  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
 11674   0026A2  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
 11675   0026A6  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
 11676   0026AA                     
 11677                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
 11678   0026AA  0100               	movlb	0	; () banked
 11679   0026AC  4B7F               	infsnz	efgtoa@e& (0+255),f,b
 11680   0026AE  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
 11681   0026B0                     l6778:
 11682                           
 11683                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 11684   0026B0  C098  F00F         	movff	efgtoa@u,___flmul@b
 11685   0026B4  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 11686   0026B8  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 11687   0026BC  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 11688   0026C0  0E00               	movlw	0
 11689   0026C2  6E13               	movwf	___flmul@a^0,c
 11690   0026C4  0E00               	movlw	0
 11691   0026C6  6E14               	movwf	(___flmul@a+1)^0,c
 11692   0026C8  0E20               	movlw	32
 11693   0026CA  6E15               	movwf	(___flmul@a+2)^0,c
 11694   0026CC  0E41               	movlw	65
 11695   0026CE  6E16               	movwf	(___flmul@a+3)^0,c
 11696   0026D0  ECF6  F01F         	call	___flmul	;wreg free
 11697   0026D4  C00F  F083         	movff	?___flmul,efgtoa@ou
 11698   0026D8  C010  F084         	movff	?___flmul+1,efgtoa@ou+1
 11699   0026DC  C011  F085         	movff	?___flmul+2,efgtoa@ou+2
 11700   0026E0  C012  F086         	movff	?___flmul+3,efgtoa@ou+3
 11701   0026E4  0100               	movlb	0	; () banked
 11702   0026E6  5183               	movf	efgtoa@ou& (0+255),w,b
 11703   0026E8  5D92               	subwf	efgtoa@g& (0+255),w,b
 11704   0026EA  6E01               	movwf	labs@a^0,c
 11705   0026EC  5184               	movf	(efgtoa@ou+1)& (0+255),w,b
 11706   0026EE  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11707   0026F0  6E02               	movwf	(labs@a+1)^0,c
 11708   0026F2  5185               	movf	(efgtoa@ou+2)& (0+255),w,b
 11709   0026F4  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11710   0026F6  6E03               	movwf	(labs@a+2)^0,c
 11711   0026F8  5186               	movf	(efgtoa@ou+3)& (0+255),w,b
 11712   0026FA  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11713   0026FC  6E04               	movwf	(labs@a+3)^0,c
 11714   0026FE  EC80  F035         	call	_labs	;wreg free
 11715   002702  BE04               	btfsc	(?_labs+3)^0,7,c
 11716   002704  EF8F  F013         	goto	u8751
 11717   002708  5004               	movf	(?_labs+3)^0,w,c
 11718   00270A  1003               	iorwf	(?_labs+2)^0,w,c
 11719   00270C  1002               	iorwf	(?_labs+1)^0,w,c
 11720   00270E  E109               	bnz	u8750
 11721   002710  0E02               	movlw	2
 11722   002712  5C01               	subwf	?_labs^0,w,c
 11723   002714  A0D8               	btfss	status,0,c
 11724   002716  EF8F  F013         	goto	u8751
 11725   00271A  EF91  F013         	goto	u8750
 11726   00271E                     u8751:
 11727   00271E  EF4D  F013         	goto	l1020
 11728   002722                     u8750:
 11729   002722  C083  F060         	movff	efgtoa@ou,___flge@ff1
 11730   002726  C084  F061         	movff	efgtoa@ou+1,___flge@ff1+1
 11731   00272A  C085  F062         	movff	efgtoa@ou+2,___flge@ff1+2
 11732   00272E  C086  F063         	movff	efgtoa@ou+3,___flge@ff1+3
 11733   002732  C092  F064         	movff	efgtoa@g,___flge@ff2
 11734   002736  C093  F065         	movff	efgtoa@g+1,___flge@ff2+1
 11735   00273A  C094  F066         	movff	efgtoa@g+2,___flge@ff2+2
 11736   00273E  C095  F067         	movff	efgtoa@g+3,___flge@ff2+3
 11737   002742  EC72  F02F         	call	___flge	;wreg free
 11738   002746  0100               	movlb	0	; () banked
 11739   002748  A0D8               	btfss	status,0,c
 11740   00274A  EFA9  F013         	goto	u8761
 11741   00274E  EFAB  F013         	goto	u8760
 11742   002752                     u8761:
 11743   002752  EF4D  F013         	goto	l1020
 11744   002756                     u8760:
 11745   002756                     
 11746                           ; BSR set to: 0
 11747                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 11748   002756  5198               	movf	efgtoa@u& (0+255),w,b
 11749   002758  5D92               	subwf	efgtoa@g& (0+255),w,b
 11750   00275A  6E01               	movwf	labs@a^0,c
 11751   00275C  5199               	movf	(efgtoa@u+1)& (0+255),w,b
 11752   00275E  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11753   002760  6E02               	movwf	(labs@a+1)^0,c
 11754   002762  519A               	movf	(efgtoa@u+2)& (0+255),w,b
 11755   002764  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11756   002766  6E03               	movwf	(labs@a+2)^0,c
 11757   002768  519B               	movf	(efgtoa@u+3)& (0+255),w,b
 11758   00276A  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11759   00276C  6E04               	movwf	(labs@a+3)^0,c
 11760   00276E  EC80  F035         	call	_labs	;wreg free
 11761   002772  BE04               	btfsc	(?_labs+3)^0,7,c
 11762   002774  EFC9  F013         	goto	u8770
 11763   002778  5004               	movf	(?_labs+3)^0,w,c
 11764   00277A  1003               	iorwf	(?_labs+2)^0,w,c
 11765   00277C  1002               	iorwf	(?_labs+1)^0,w,c
 11766   00277E  E107               	bnz	u8771
 11767   002780  0E02               	movlw	2
 11768   002782  5C01               	subwf	?_labs^0,w,c
 11769   002784  B0D8               	btfsc	status,0,c
 11770   002786  EFC7  F013         	goto	u8771
 11771   00278A  EFC9  F013         	goto	u8770
 11772   00278E                     u8771:
 11773   00278E  EF11  F014         	goto	l6796
 11774   002792                     u8770:
 11775   002792                     l6786:
 11776                           
 11777                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
 11778   002792  C098  F092         	movff	efgtoa@u,efgtoa@g
 11779   002796  C099  F093         	movff	efgtoa@u+1,efgtoa@g+1
 11780   00279A  C09A  F094         	movff	efgtoa@u+2,efgtoa@g+2
 11781   00279E  C09B  F095         	movff	efgtoa@u+3,efgtoa@g+3
 11782                           
 11783                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
 11784   0027A2  EF2B  F014         	goto	l1018
 11785   0027A6                     l6788:
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 11789   0027A6  C098  F028         	movff	efgtoa@u,___fldiv@b
 11790   0027AA  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 11791   0027AE  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 11792   0027B2  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 11793   0027B6  0E00               	movlw	0
 11794   0027B8  6E2C               	movwf	___fldiv@a^0,c
 11795   0027BA  0E00               	movlw	0
 11796   0027BC  6E2D               	movwf	(___fldiv@a+1)^0,c
 11797   0027BE  0E20               	movlw	32
 11798   0027C0  6E2E               	movwf	(___fldiv@a+2)^0,c
 11799   0027C2  0E41               	movlw	65
 11800   0027C4  6E2F               	movwf	(___fldiv@a+3)^0,c
 11801   0027C6  ECF8  F023         	call	___fldiv	;wreg free
 11802   0027CA  C028  F098         	movff	?___fldiv,efgtoa@u
 11803   0027CE  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 11804   0027D2  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 11805   0027D6  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 11806   0027DA                     
 11807                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
 11808   0027DA  0100               	movlb	0	; () banked
 11809   0027DC  077F               	decf	efgtoa@e& (0+255),f,b
 11810   0027DE  A0D8               	btfss	status,0,c
 11811   0027E0  0780               	decf	(efgtoa@e+1)& (0+255),f,b
 11812   0027E2                     
 11813                           ; BSR set to: 0
 11814                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 11815   0027E2  5198               	movf	efgtoa@u& (0+255),w,b
 11816   0027E4  5D92               	subwf	efgtoa@g& (0+255),w,b
 11817   0027E6  6E01               	movwf	labs@a^0,c
 11818   0027E8  5199               	movf	(efgtoa@u+1)& (0+255),w,b
 11819   0027EA  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11820   0027EC  6E02               	movwf	(labs@a+1)^0,c
 11821   0027EE  519A               	movf	(efgtoa@u+2)& (0+255),w,b
 11822   0027F0  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11823   0027F2  6E03               	movwf	(labs@a+2)^0,c
 11824   0027F4  519B               	movf	(efgtoa@u+3)& (0+255),w,b
 11825   0027F6  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11826   0027F8  6E04               	movwf	(labs@a+3)^0,c
 11827   0027FA  EC80  F035         	call	_labs	;wreg free
 11828   0027FE  BE04               	btfsc	(?_labs+3)^0,7,c
 11829   002800  EF0F  F014         	goto	u8780
 11830   002804  5004               	movf	(?_labs+3)^0,w,c
 11831   002806  1003               	iorwf	(?_labs+2)^0,w,c
 11832   002808  1002               	iorwf	(?_labs+1)^0,w,c
 11833   00280A  E107               	bnz	u8781
 11834   00280C  0E02               	movlw	2
 11835   00280E  5C01               	subwf	?_labs^0,w,c
 11836   002810  B0D8               	btfsc	status,0,c
 11837   002812  EF0D  F014         	goto	u8781
 11838   002816  EF0F  F014         	goto	u8780
 11839   00281A                     u8781:
 11840   00281A  EF11  F014         	goto	l6796
 11841   00281E                     u8780:
 11842   00281E  EFC9  F013         	goto	l6786
 11843   002822                     l6796:
 11844                           
 11845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 11846   002822  C092  F060         	movff	efgtoa@g,___flge@ff1
 11847   002826  C093  F061         	movff	efgtoa@g+1,___flge@ff1+1
 11848   00282A  C094  F062         	movff	efgtoa@g+2,___flge@ff1+2
 11849   00282E  C095  F063         	movff	efgtoa@g+3,___flge@ff1+3
 11850   002832  C098  F064         	movff	efgtoa@u,___flge@ff2
 11851   002836  C099  F065         	movff	efgtoa@u+1,___flge@ff2+1
 11852   00283A  C09A  F066         	movff	efgtoa@u+2,___flge@ff2+2
 11853   00283E  C09B  F067         	movff	efgtoa@u+3,___flge@ff2+3
 11854   002842  EC72  F02F         	call	___flge	;wreg free
 11855   002846  0100               	movlb	0	; () banked
 11856   002848  A0D8               	btfss	status,0,c
 11857   00284A  EF29  F014         	goto	u8791
 11858   00284E  EF2B  F014         	goto	u8790
 11859   002852                     u8791:
 11860   002852  EFD3  F013         	goto	l6788
 11861   002856                     u8790:
 11862   002856                     l1018:
 11863                           
 11864                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 11865   002856  C06D  F079         	movff	efgtoa@c,efgtoa@mode
 11866                           
 11867                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 11868   00285A  C079  F07A         	movff	efgtoa@mode,efgtoa@nmode
 11869   00285E                     
 11870                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 11871   00285E  0102               	movlb	2	; () banked
 11872   002860  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 11873   002862  EF35  F014         	goto	u8801
 11874   002866  EF37  F014         	goto	u8800
 11875   00286A                     u8801:
 11876   00286A  EF3D  F014         	goto	l6802
 11877   00286E                     u8800:
 11878   00286E                     
 11879                           ; BSR set to: 2
 11880   00286E  C2FE  F072         	movff	_prec,efgtoa@p
 11881   002872  C2FF  F073         	movff	_prec+1,efgtoa@p+1
 11882   002876  EF42  F014         	goto	l6804
 11883   00287A                     l6802:
 11884                           
 11885                           ; BSR set to: 2
 11886   00287A  0E00               	movlw	0
 11887   00287C  0100               	movlb	0	; () banked
 11888   00287E  6F73               	movwf	(efgtoa@p+1)& (0+255),b
 11889   002880  0E06               	movlw	6
 11890   002882  6F72               	movwf	efgtoa@p& (0+255),b
 11891   002884                     l6804:
 11892                           
 11893                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 11894   002884  C072  F07D         	movff	efgtoa@p,efgtoa@m
 11895   002888  C073  F07E         	movff	efgtoa@p+1,efgtoa@m+1
 11896   00288C                     
 11897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 11898   00288C  0100               	movlb	0	; () banked
 11899   00288E  4B7D               	infsnz	efgtoa@m& (0+255),f,b
 11900   002890  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
 11901   002892                     
 11902                           ; BSR set to: 0
 11903                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 11904   002892  0E66               	movlw	102
 11905   002894  197A               	xorwf	efgtoa@nmode& (0+255),w,b
 11906   002896  A4D8               	btfss	status,2,c
 11907   002898  EF50  F014         	goto	u8811
 11908   00289C  EF52  F014         	goto	u8810
 11909   0028A0                     u8811:
 11910   0028A0  EF72  F014         	goto	l6818
 11911   0028A4                     u8810:
 11912   0028A4                     
 11913                           ; BSR set to: 0
 11914                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 11915   0028A4  BF80               	btfsc	(efgtoa@e+1)& (0+255),7,b
 11916   0028A6  EF59  F014         	goto	u8820
 11917   0028AA  EF57  F014         	goto	u8821
 11918   0028AE                     u8821:
 11919   0028AE  EF65  F014         	goto	l6814
 11920   0028B2                     u8820:
 11921   0028B2                     
 11922                           ; BSR set to: 0
 11923                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 11924   0028B2  0E00               	movlw	0
 11925   0028B4  6F98               	movwf	efgtoa@u& (0+255),b
 11926   0028B6  0E00               	movlw	0
 11927   0028B8  6F99               	movwf	(efgtoa@u+1)& (0+255),b
 11928   0028BA  0E80               	movlw	128
 11929   0028BC  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
 11930   0028BE  0E3F               	movlw	63
 11931   0028C0  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
 11932                           
 11933                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 11934   0028C2  0E00               	movlw	0
 11935   0028C4  6F80               	movwf	(efgtoa@e+1)& (0+255),b
 11936   0028C6  0E00               	movlw	0
 11937   0028C8  6F7F               	movwf	efgtoa@e& (0+255),b
 11938   0028CA                     l6814:
 11939                           
 11940                           ; BSR set to: 0
 11941                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 11942   0028CA  0E67               	movlw	103
 11943   0028CC  1979               	xorwf	efgtoa@mode& (0+255),w,b
 11944   0028CE  B4D8               	btfsc	status,2,c
 11945   0028D0  EF6C  F014         	goto	u8831
 11946   0028D4  EF6E  F014         	goto	u8830
 11947   0028D8                     u8831:
 11948   0028D8  EF72  F014         	goto	l6818
 11949   0028DC                     u8830:
 11950   0028DC                     
 11951                           ; BSR set to: 0
 11952                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 11953   0028DC  517F               	movf	efgtoa@e& (0+255),w,b
 11954   0028DE  277D               	addwf	efgtoa@m& (0+255),f,b
 11955   0028E0  5180               	movf	(efgtoa@e+1)& (0+255),w,b
 11956   0028E2  237E               	addwfc	(efgtoa@m+1)& (0+255),f,b
 11957   0028E4                     l6818:
 11958                           
 11959                           ; BSR set to: 0
 11960                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 11961   0028E4  0E00               	movlw	0
 11962   0028E6  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 11963   0028E8  0E00               	movlw	0
 11964   0028EA  6F87               	movwf	efgtoa@i& (0+255),b
 11965   0028EC                     
 11966                           ; BSR set to: 0
 11967                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 11968   0028EC  C092  F089         	movff	efgtoa@g,efgtoa@h
 11969   0028F0  C093  F08A         	movff	efgtoa@g+1,efgtoa@h+1
 11970   0028F4  C094  F08B         	movff	efgtoa@g+2,efgtoa@h+2
 11971   0028F8  C095  F08C         	movff	efgtoa@g+3,efgtoa@h+3
 11972   0028FC                     
 11973                           ; BSR set to: 0
 11974                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 11975   0028FC  C098  F083         	movff	efgtoa@u,efgtoa@ou
 11976   002900  C099  F084         	movff	efgtoa@u+1,efgtoa@ou+1
 11977   002904  C09A  F085         	movff	efgtoa@u+2,efgtoa@ou+2
 11978   002908  C09B  F086         	movff	efgtoa@u+3,efgtoa@ou+3
 11979                           
 11980                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 11981   00290C  EF03  F015         	goto	l6832
 11982   002910                     l6824:
 11983                           
 11984                           ; BSR set to: 0
 11985                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 11986   002910  C089  F028         	movff	efgtoa@h,___fldiv@b
 11987   002914  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
 11988   002918  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
 11989   00291C  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
 11990   002920  C098  F02C         	movff	efgtoa@u,___fldiv@a
 11991   002924  C099  F02D         	movff	efgtoa@u+1,___fldiv@a+1
 11992   002928  C09A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
 11993   00292C  C09B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
 11994   002930  ECF8  F023         	call	___fldiv	;wreg free
 11995   002934  C028  F041         	movff	?___fldiv,floorf@x
 11996   002938  C029  F042         	movff	?___fldiv+1,floorf@x+1
 11997   00293C  C02A  F043         	movff	?___fldiv+2,floorf@x+2
 11998   002940  C02B  F044         	movff	?___fldiv+3,floorf@x+3
 11999   002944  ECE1  F029         	call	_floorf	;wreg free
 12000   002948  C041  F08D         	movff	?_floorf,efgtoa@l
 12001   00294C  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
 12002   002950  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
 12003   002954  C044  F090         	movff	?_floorf+3,efgtoa@l+3
 12004                           
 12005                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 12006   002958  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12007   00295C  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12008   002960  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12009   002964  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12010   002968  ECEF  F02E         	call	___fltol	;wreg free
 12011   00296C  C001  F07B         	movff	?___fltol,efgtoa@d
 12012   002970  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
 12013   002974                     
 12014                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 12015   002974  C089  F051         	movff	efgtoa@h,___flsub@b
 12016   002978  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
 12017   00297C  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
 12018   002980  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
 12019   002984  C08D  F013         	movff	efgtoa@l,___flmul@a
 12020   002988  C08E  F014         	movff	efgtoa@l+1,___flmul@a+1
 12021   00298C  C08F  F015         	movff	efgtoa@l+2,___flmul@a+2
 12022   002990  C090  F016         	movff	efgtoa@l+3,___flmul@a+3
 12023   002994  C098  F00F         	movff	efgtoa@u,___flmul@b
 12024   002998  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12025   00299C  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12026   0029A0  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12027   0029A4  ECF6  F01F         	call	___flmul	;wreg free
 12028   0029A8  C00F  F055         	movff	?___flmul,___flsub@a
 12029   0029AC  C010  F056         	movff	?___flmul+1,___flsub@a+1
 12030   0029B0  C011  F057         	movff	?___flmul+2,___flsub@a+2
 12031   0029B4  C012  F058         	movff	?___flmul+3,___flsub@a+3
 12032   0029B8  EC1C  F036         	call	___flsub	;wreg free
 12033   0029BC  C051  F089         	movff	?___flsub,efgtoa@h
 12034   0029C0  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
 12035   0029C4  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
 12036   0029C8  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
 12037   0029CC                     
 12038                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 12039   0029CC  C098  F028         	movff	efgtoa@u,___fldiv@b
 12040   0029D0  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 12041   0029D4  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 12042   0029D8  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 12043   0029DC  0E00               	movlw	0
 12044   0029DE  6E2C               	movwf	___fldiv@a^0,c
 12045   0029E0  0E00               	movlw	0
 12046   0029E2  6E2D               	movwf	(___fldiv@a+1)^0,c
 12047   0029E4  0E20               	movlw	32
 12048   0029E6  6E2E               	movwf	(___fldiv@a+2)^0,c
 12049   0029E8  0E41               	movlw	65
 12050   0029EA  6E2F               	movwf	(___fldiv@a+3)^0,c
 12051   0029EC  ECF8  F023         	call	___fldiv	;wreg free
 12052   0029F0  C028  F098         	movff	?___fldiv,efgtoa@u
 12053   0029F4  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 12054   0029F8  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 12055   0029FC  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 12056   002A00                     
 12057                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 12058   002A00  0100               	movlb	0	; () banked
 12059   002A02  4B87               	infsnz	efgtoa@i& (0+255),f,b
 12060   002A04  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
 12061   002A06                     l6832:
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12065   002A06  517D               	movf	efgtoa@m& (0+255),w,b
 12066   002A08  5D87               	subwf	efgtoa@i& (0+255),w,b
 12067   002A0A  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12068   002A0C  0A80               	xorlw	128
 12069   002A0E  6F6E               	movwf	??_efgtoa& (0+255),b
 12070   002A10  517E               	movf	(efgtoa@m+1)& (0+255),w,b
 12071   002A12  0A80               	xorlw	128
 12072   002A14  596E               	subwfb	??_efgtoa& (0+255),w,b
 12073   002A16  A0D8               	btfss	status,0,c
 12074   002A18  EF10  F015         	goto	u8841
 12075   002A1C  EF12  F015         	goto	u8840
 12076   002A20                     u8841:
 12077   002A20  EF88  F014         	goto	l6824
 12078   002A24                     u8840:
 12079   002A24                     
 12080                           ; BSR set to: 0
 12081                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 12082   002A24  C098  F00F         	movff	efgtoa@u,___flmul@b
 12083   002A28  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12084   002A2C  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12085   002A30  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12086   002A34  0E00               	movlw	0
 12087   002A36  6E13               	movwf	___flmul@a^0,c
 12088   002A38  0E00               	movlw	0
 12089   002A3A  6E14               	movwf	(___flmul@a+1)^0,c
 12090   002A3C  0EA0               	movlw	160
 12091   002A3E  6E15               	movwf	(___flmul@a+2)^0,c
 12092   002A40  0E40               	movlw	64
 12093   002A42  6E16               	movwf	(___flmul@a+3)^0,c
 12094   002A44  ECF6  F01F         	call	___flmul	;wreg free
 12095   002A48  C00F  F08D         	movff	?___flmul,efgtoa@l
 12096   002A4C  C010  F08E         	movff	?___flmul+1,efgtoa@l+1
 12097   002A50  C011  F08F         	movff	?___flmul+2,efgtoa@l+2
 12098   002A54  C012  F090         	movff	?___flmul+3,efgtoa@l+3
 12099   002A58                     
 12100                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 12101   002A58  C089  F060         	movff	efgtoa@h,___flge@ff1
 12102   002A5C  C08A  F061         	movff	efgtoa@h+1,___flge@ff1+1
 12103   002A60  C08B  F062         	movff	efgtoa@h+2,___flge@ff1+2
 12104   002A64  C08C  F063         	movff	efgtoa@h+3,___flge@ff1+3
 12105   002A68  C08D  F064         	movff	efgtoa@l,___flge@ff2
 12106   002A6C  C08E  F065         	movff	efgtoa@l+1,___flge@ff2+1
 12107   002A70  C08F  F066         	movff	efgtoa@l+2,___flge@ff2+2
 12108   002A74  C090  F067         	movff	efgtoa@l+3,___flge@ff2+3
 12109   002A78  EC72  F02F         	call	___flge	;wreg free
 12110   002A7C  0100               	movlb	0	; () banked
 12111   002A7E  B0D8               	btfsc	status,0,c
 12112   002A80  EF44  F015         	goto	u8851
 12113   002A84  EF46  F015         	goto	u8850
 12114   002A88                     u8851:
 12115   002A88  EF50  F015         	goto	l6840
 12116   002A8C                     u8850:
 12117   002A8C                     
 12118                           ; BSR set to: 0
 12119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 12120   002A8C  0E00               	movlw	0
 12121   002A8E  6F8D               	movwf	efgtoa@l& (0+255),b
 12122   002A90  0E00               	movlw	0
 12123   002A92  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
 12124   002A94  0E00               	movlw	0
 12125   002A96  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
 12126   002A98  0E00               	movlw	0
 12127   002A9A  6F90               	movwf	(efgtoa@l+3)& (0+255),b
 12128                           
 12129                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 12130   002A9C  EF79  F015         	goto	l6846
 12131   002AA0                     l6840:
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 12135   002AA0  C089  F001         	movff	efgtoa@h,___fleq@ff1
 12136   002AA4  C08A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
 12137   002AA8  C08B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
 12138   002AAC  C08C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
 12139   002AB0  C08D  F005         	movff	efgtoa@l,___fleq@ff2
 12140   002AB4  C08E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
 12141   002AB8  C08F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
 12142   002ABC  C090  F008         	movff	efgtoa@l+3,___fleq@ff2+3
 12143   002AC0  ECDD  F033         	call	___fleq	;wreg free
 12144   002AC4  A0D8               	btfss	status,0,c
 12145   002AC6  EF67  F015         	goto	u8861
 12146   002ACA  EF69  F015         	goto	u8860
 12147   002ACE                     u8861:
 12148   002ACE  EF79  F015         	goto	l6846
 12149   002AD2                     u8860:
 12150   002AD2  0100               	movlb	0	; () banked
 12151   002AD4  B17B               	btfsc	efgtoa@d& (0+255),0,b
 12152   002AD6  EF6F  F015         	goto	u8871
 12153   002ADA  EF71  F015         	goto	u8870
 12154   002ADE                     u8871:
 12155   002ADE  EF79  F015         	goto	l6846
 12156   002AE2                     u8870:
 12157   002AE2                     
 12158                           ; BSR set to: 0
 12159                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 12160   002AE2  0E00               	movlw	0
 12161   002AE4  6F8D               	movwf	efgtoa@l& (0+255),b
 12162   002AE6  0E00               	movlw	0
 12163   002AE8  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
 12164   002AEA  0E00               	movlw	0
 12165   002AEC  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
 12166   002AEE  0E00               	movlw	0
 12167   002AF0  6F90               	movwf	(efgtoa@l+3)& (0+255),b
 12168   002AF2                     l6846:
 12169                           
 12170                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 12171   002AF2  C092  F041         	movff	efgtoa@g,___fladd@b
 12172   002AF6  C093  F042         	movff	efgtoa@g+1,___fladd@b+1
 12173   002AFA  C094  F043         	movff	efgtoa@g+2,___fladd@b+2
 12174   002AFE  C095  F044         	movff	efgtoa@g+3,___fladd@b+3
 12175   002B02  C08D  F045         	movff	efgtoa@l,___fladd@a
 12176   002B06  C08E  F046         	movff	efgtoa@l+1,___fladd@a+1
 12177   002B0A  C08F  F047         	movff	efgtoa@l+2,___fladd@a+2
 12178   002B0E  C090  F048         	movff	efgtoa@l+3,___fladd@a+3
 12179   002B12  EC9B  F01D         	call	___fladd	;wreg free
 12180   002B16  C041  F089         	movff	?___fladd,efgtoa@h
 12181   002B1A  C042  F08A         	movff	?___fladd+1,efgtoa@h+1
 12182   002B1E  C043  F08B         	movff	?___fladd+2,efgtoa@h+2
 12183   002B22  C044  F08C         	movff	?___fladd+3,efgtoa@h+3
 12184   002B26                     
 12185                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 12186   002B26  C089  F060         	movff	efgtoa@h,___flge@ff1
 12187   002B2A  C08A  F061         	movff	efgtoa@h+1,___flge@ff1+1
 12188   002B2E  C08B  F062         	movff	efgtoa@h+2,___flge@ff1+2
 12189   002B32  C08C  F063         	movff	efgtoa@h+3,___flge@ff1+3
 12190   002B36  0E00               	movlw	0
 12191   002B38  6E13               	movwf	___flmul@a^0,c
 12192   002B3A  0E00               	movlw	0
 12193   002B3C  6E14               	movwf	(___flmul@a+1)^0,c
 12194   002B3E  0E20               	movlw	32
 12195   002B40  6E15               	movwf	(___flmul@a+2)^0,c
 12196   002B42  0E41               	movlw	65
 12197   002B44  6E16               	movwf	(___flmul@a+3)^0,c
 12198   002B46  C083  F00F         	movff	efgtoa@ou,___flmul@b
 12199   002B4A  C084  F010         	movff	efgtoa@ou+1,___flmul@b+1
 12200   002B4E  C085  F011         	movff	efgtoa@ou+2,___flmul@b+2
 12201   002B52  C086  F012         	movff	efgtoa@ou+3,___flmul@b+3
 12202   002B56  ECF6  F01F         	call	___flmul	;wreg free
 12203   002B5A  C00F  F064         	movff	?___flmul,___flge@ff2
 12204   002B5E  C010  F065         	movff	?___flmul+1,___flge@ff2+1
 12205   002B62  C011  F066         	movff	?___flmul+2,___flge@ff2+2
 12206   002B66  C012  F067         	movff	?___flmul+3,___flge@ff2+3
 12207   002B6A  EC72  F02F         	call	___flge	;wreg free
 12208   002B6E  0100               	movlb	0	; () banked
 12209   002B70  A0D8               	btfss	status,0,c
 12210   002B72  EFBD  F015         	goto	u8881
 12211   002B76  EFBF  F015         	goto	u8880
 12212   002B7A                     u8881:
 12213   002B7A  EFE7  F015         	goto	l6858
 12214   002B7E                     u8880:
 12215   002B7E                     
 12216                           ; BSR set to: 0
 12217                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 12218   002B7E  4B7F               	infsnz	efgtoa@e& (0+255),f,b
 12219   002B80  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
 12220   002B82                     
 12221                           ; BSR set to: 0
 12222                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 12223   002B82  C083  F00F         	movff	efgtoa@ou,___flmul@b
 12224   002B86  C084  F010         	movff	efgtoa@ou+1,___flmul@b+1
 12225   002B8A  C085  F011         	movff	efgtoa@ou+2,___flmul@b+2
 12226   002B8E  C086  F012         	movff	efgtoa@ou+3,___flmul@b+3
 12227   002B92  0E00               	movlw	0
 12228   002B94  6E13               	movwf	___flmul@a^0,c
 12229   002B96  0E00               	movlw	0
 12230   002B98  6E14               	movwf	(___flmul@a+1)^0,c
 12231   002B9A  0E20               	movlw	32
 12232   002B9C  6E15               	movwf	(___flmul@a+2)^0,c
 12233   002B9E  0E41               	movlw	65
 12234   002BA0  6E16               	movwf	(___flmul@a+3)^0,c
 12235   002BA2  ECF6  F01F         	call	___flmul	;wreg free
 12236   002BA6  C00F  F083         	movff	?___flmul,efgtoa@ou
 12237   002BAA  C010  F084         	movff	?___flmul+1,efgtoa@ou+1
 12238   002BAE  C011  F085         	movff	?___flmul+2,efgtoa@ou+2
 12239   002BB2  C012  F086         	movff	?___flmul+3,efgtoa@ou+3
 12240   002BB6                     
 12241                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 12242   002BB6  0E66               	movlw	102
 12243   002BB8  0100               	movlb	0	; () banked
 12244   002BBA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
 12245   002BBC  A4D8               	btfss	status,2,c
 12246   002BBE  EFE3  F015         	goto	u8891
 12247   002BC2  EFE5  F015         	goto	u8890
 12248   002BC6                     u8891:
 12249   002BC6  EFE7  F015         	goto	l6858
 12250   002BCA                     u8890:
 12251   002BCA                     
 12252                           ; BSR set to: 0
 12253                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 12254   002BCA  4B7D               	infsnz	efgtoa@m& (0+255),f,b
 12255   002BCC  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
 12256   002BCE                     l6858:
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 12260   002BCE  C083  F098         	movff	efgtoa@ou,efgtoa@u
 12261   002BD2  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
 12262   002BD6  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
 12263   002BDA  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
 12264   002BDE                     
 12265                           ; BSR set to: 0
 12266                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 12267   002BDE  C07F  F070         	movff	efgtoa@e,efgtoa@ne
 12268   002BE2  C080  F071         	movff	efgtoa@e+1,efgtoa@ne+1
 12269   002BE6                     
 12270                           ; BSR set to: 0
 12271                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 12272   002BE6  6B78               	clrf	efgtoa@pp& (0+255),b
 12273   002BE8                     
 12274                           ; BSR set to: 0
 12275                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 12276   002BE8  0E00               	movlw	0
 12277   002BEA  6F75               	movwf	(efgtoa@t+1)& (0+255),b
 12278   002BEC  0E00               	movlw	0
 12279   002BEE  6F74               	movwf	efgtoa@t& (0+255),b
 12280   002BF0                     
 12281                           ; BSR set to: 0
 12282                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 12283   002BF0  0E00               	movlw	0
 12284   002BF2  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 12285   002BF4  0E00               	movlw	0
 12286   002BF6  6F87               	movwf	efgtoa@i& (0+255),b
 12287                           
 12288                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12289   002BF8  EFE3  F016         	goto	l6908
 12290   002BFC                     l6868:
 12291                           
 12292                           ; BSR set to: 0
 12293                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 12294   002BFC  C089  F028         	movff	efgtoa@h,___fldiv@b
 12295   002C00  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
 12296   002C04  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
 12297   002C08  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
 12298   002C0C  C098  F02C         	movff	efgtoa@u,___fldiv@a
 12299   002C10  C099  F02D         	movff	efgtoa@u+1,___fldiv@a+1
 12300   002C14  C09A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
 12301   002C18  C09B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
 12302   002C1C  ECF8  F023         	call	___fldiv	;wreg free
 12303   002C20  C028  F041         	movff	?___fldiv,floorf@x
 12304   002C24  C029  F042         	movff	?___fldiv+1,floorf@x+1
 12305   002C28  C02A  F043         	movff	?___fldiv+2,floorf@x+2
 12306   002C2C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
 12307   002C30  ECE1  F029         	call	_floorf	;wreg free
 12308   002C34  C041  F08D         	movff	?_floorf,efgtoa@l
 12309   002C38  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
 12310   002C3C  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
 12311   002C40  C044  F090         	movff	?_floorf+3,efgtoa@l+3
 12312                           
 12313                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 12314   002C44  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12315   002C48  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12316   002C4C  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12317   002C50  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12318   002C54  ECEF  F02E         	call	___fltol	;wreg free
 12319   002C58  BE02               	btfsc	(?___fltol+1)^0,7,c
 12320   002C5A  EF3A  F016         	goto	u8900
 12321   002C5E  5002               	movf	(?___fltol+1)^0,w,c
 12322   002C60  E107               	bnz	u8901
 12323   002C62  0E0A               	movlw	10
 12324   002C64  5C01               	subwf	?___fltol^0,w,c
 12325   002C66  B0D8               	btfsc	status,0,c
 12326   002C68  EF38  F016         	goto	u8901
 12327   002C6C  EF3A  F016         	goto	u8900
 12328   002C70                     u8901:
 12329   002C70  EF4A  F016         	goto	l6872
 12330   002C74                     u8900:
 12331   002C74  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12332   002C78  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12333   002C7C  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12334   002C80  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12335   002C84  ECEF  F02E         	call	___fltol	;wreg free
 12336   002C88  C001  F07B         	movff	?___fltol,efgtoa@d
 12337   002C8C  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
 12338   002C90  EF4F  F016         	goto	l1048
 12339   002C94                     l6872:
 12340   002C94  0E00               	movlw	0
 12341   002C96  0100               	movlb	0	; () banked
 12342   002C98  6F7C               	movwf	(efgtoa@d+1)& (0+255),b
 12343   002C9A  0E09               	movlw	9
 12344   002C9C  6F7B               	movwf	efgtoa@d& (0+255),b
 12345   002C9E                     l1048:
 12346                           
 12347                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 12348   002C9E  0100               	movlb	0	; () banked
 12349   002CA0  5178               	movf	efgtoa@pp& (0+255),w,b
 12350   002CA2  A4D8               	btfss	status,2,c
 12351   002CA4  EF56  F016         	goto	u8911
 12352   002CA8  EF58  F016         	goto	u8910
 12353   002CAC                     u8911:
 12354   002CAC  EF80  F016         	goto	l6892
 12355   002CB0                     u8910:
 12356   002CB0                     
 12357                           ; BSR set to: 0
 12358   002CB0  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 12359   002CB2  EF5F  F016         	goto	u8920
 12360   002CB6  EF5D  F016         	goto	u8921
 12361   002CBA                     u8921:
 12362   002CBA  EF80  F016         	goto	l6892
 12363   002CBE                     u8920:
 12364   002CBE                     
 12365                           ; BSR set to: 0
 12366                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 12367   002CBE  0E72               	movlw	low _dbuf
 12368   002CC0  2596               	addwf	efgtoa@n& (0+255),w,b
 12369   002CC2  6ED9               	movwf	fsr2l,c
 12370   002CC4  0E03               	movlw	high _dbuf
 12371   002CC6  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12372   002CC8  6EDA               	movwf	fsr2h,c
 12373   002CCA  0E2E               	movlw	46
 12374   002CCC  6EDF               	movwf	indf2,c
 12375   002CCE                     
 12376                           ; BSR set to: 0
 12377   002CCE  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12378   002CD0  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12379   002CD2                     
 12380                           ; BSR set to: 0
 12381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 12382   002CD2  0781               	decf	efgtoa@w& (0+255),f,b
 12383   002CD4  A0D8               	btfss	status,0,c
 12384   002CD6  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12385   002CD8                     
 12386                           ; BSR set to: 0
 12387                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 12388   002CD8  0E01               	movlw	1
 12389   002CDA  6F78               	movwf	efgtoa@pp& (0+255),b
 12390   002CDC  EF80  F016         	goto	l6892
 12391   002CE0                     l6884:
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 12395   002CE0  0E72               	movlw	low _dbuf
 12396   002CE2  2596               	addwf	efgtoa@n& (0+255),w,b
 12397   002CE4  6ED9               	movwf	fsr2l,c
 12398   002CE6  0E03               	movlw	high _dbuf
 12399   002CE8  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12400   002CEA  6EDA               	movwf	fsr2h,c
 12401   002CEC  0E30               	movlw	48
 12402   002CEE  6EDF               	movwf	indf2,c
 12403   002CF0                     
 12404                           ; BSR set to: 0
 12405   002CF0  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12406   002CF2  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12407   002CF4                     
 12408                           ; BSR set to: 0
 12409                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 12410   002CF4  0781               	decf	efgtoa@w& (0+255),f,b
 12411   002CF6  A0D8               	btfss	status,0,c
 12412   002CF8  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12413   002CFA                     
 12414                           ; BSR set to: 0
 12415                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 12416   002CFA  0774               	decf	efgtoa@t& (0+255),f,b
 12417   002CFC  A0D8               	btfss	status,0,c
 12418   002CFE  0775               	decf	(efgtoa@t+1)& (0+255),f,b
 12419   002D00                     l6892:
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 12423   002D00  5174               	movf	efgtoa@t& (0+255),w,b
 12424   002D02  1175               	iorwf	(efgtoa@t+1)& (0+255),w,b
 12425   002D04  A4D8               	btfss	status,2,c
 12426   002D06  EF87  F016         	goto	u8931
 12427   002D0A  EF89  F016         	goto	u8930
 12428   002D0E                     u8931:
 12429   002D0E  EF70  F016         	goto	l6884
 12430   002D12                     u8930:
 12431   002D12                     
 12432                           ; BSR set to: 0
 12433                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 12434   002D12  0E72               	movlw	low _dbuf
 12435   002D14  2596               	addwf	efgtoa@n& (0+255),w,b
 12436   002D16  6ED9               	movwf	fsr2l,c
 12437   002D18  0E03               	movlw	high _dbuf
 12438   002D1A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12439   002D1C  6EDA               	movwf	fsr2h,c
 12440   002D1E  517B               	movf	efgtoa@d& (0+255),w,b
 12441   002D20  0F30               	addlw	48
 12442   002D22  6EDF               	movwf	indf2,c
 12443   002D24                     
 12444                           ; BSR set to: 0
 12445   002D24  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12446   002D26  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12447   002D28                     
 12448                           ; BSR set to: 0
 12449                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 12450   002D28  0781               	decf	efgtoa@w& (0+255),f,b
 12451   002D2A  A0D8               	btfss	status,0,c
 12452   002D2C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12453   002D2E                     
 12454                           ; BSR set to: 0
 12455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 12456   002D2E  C089  F051         	movff	efgtoa@h,___flsub@b
 12457   002D32  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
 12458   002D36  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
 12459   002D3A  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
 12460   002D3E  C08D  F013         	movff	efgtoa@l,___flmul@a
 12461   002D42  C08E  F014         	movff	efgtoa@l+1,___flmul@a+1
 12462   002D46  C08F  F015         	movff	efgtoa@l+2,___flmul@a+2
 12463   002D4A  C090  F016         	movff	efgtoa@l+3,___flmul@a+3
 12464   002D4E  C098  F00F         	movff	efgtoa@u,___flmul@b
 12465   002D52  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12466   002D56  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12467   002D5A  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12468   002D5E  ECF6  F01F         	call	___flmul	;wreg free
 12469   002D62  C00F  F055         	movff	?___flmul,___flsub@a
 12470   002D66  C010  F056         	movff	?___flmul+1,___flsub@a+1
 12471   002D6A  C011  F057         	movff	?___flmul+2,___flsub@a+2
 12472   002D6E  C012  F058         	movff	?___flmul+3,___flsub@a+3
 12473   002D72  EC1C  F036         	call	___flsub	;wreg free
 12474   002D76  C051  F089         	movff	?___flsub,efgtoa@h
 12475   002D7A  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
 12476   002D7E  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
 12477   002D82  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
 12478   002D86                     
 12479                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 12480   002D86  C098  F028         	movff	efgtoa@u,___fldiv@b
 12481   002D8A  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 12482   002D8E  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 12483   002D92  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 12484   002D96  0E00               	movlw	0
 12485   002D98  6E2C               	movwf	___fldiv@a^0,c
 12486   002D9A  0E00               	movlw	0
 12487   002D9C  6E2D               	movwf	(___fldiv@a+1)^0,c
 12488   002D9E  0E20               	movlw	32
 12489   002DA0  6E2E               	movwf	(___fldiv@a+2)^0,c
 12490   002DA2  0E41               	movlw	65
 12491   002DA4  6E2F               	movwf	(___fldiv@a+3)^0,c
 12492   002DA6  ECF8  F023         	call	___fldiv	;wreg free
 12493   002DAA  C028  F098         	movff	?___fldiv,efgtoa@u
 12494   002DAE  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 12495   002DB2  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 12496   002DB6  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 12497   002DBA                     
 12498                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 12499   002DBA  0100               	movlb	0	; () banked
 12500   002DBC  0770               	decf	efgtoa@ne& (0+255),f,b
 12501   002DBE  A0D8               	btfss	status,0,c
 12502   002DC0  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
 12503   002DC2                     
 12504                           ; BSR set to: 0
 12505                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 12506   002DC2  4B87               	infsnz	efgtoa@i& (0+255),f,b
 12507   002DC4  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
 12508   002DC6                     l6908:
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12512   002DC6  517D               	movf	efgtoa@m& (0+255),w,b
 12513   002DC8  5D87               	subwf	efgtoa@i& (0+255),w,b
 12514   002DCA  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12515   002DCC  0A80               	xorlw	128
 12516   002DCE  6F6E               	movwf	??_efgtoa& (0+255),b
 12517   002DD0  517E               	movf	(efgtoa@m+1)& (0+255),w,b
 12518   002DD2  0A80               	xorlw	128
 12519   002DD4  596E               	subwfb	??_efgtoa& (0+255),w,b
 12520   002DD6  B0D8               	btfsc	status,0,c
 12521   002DD8  EFF0  F016         	goto	u8941
 12522   002DDC  EFF2  F016         	goto	u8940
 12523   002DE0                     u8941:
 12524   002DE0  EF00  F017         	goto	l6912
 12525   002DE4                     u8940:
 12526   002DE4                     
 12527                           ; BSR set to: 0
 12528   002DE4  BF97               	btfsc	(efgtoa@n+1)& (0+255),7,b
 12529   002DE6  EFFE  F016         	goto	u8951
 12530   002DEA  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12531   002DEC  E109               	bnz	u8950
 12532   002DEE  0E4B               	movlw	75
 12533   002DF0  5D96               	subwf	efgtoa@n& (0+255),w,b
 12534   002DF2  A0D8               	btfss	status,0,c
 12535   002DF4  EFFE  F016         	goto	u8951
 12536   002DF8  EF00  F017         	goto	u8950
 12537   002DFC                     u8951:
 12538   002DFC  EFFE  F015         	goto	l6868
 12539   002E00                     u8950:
 12540   002E00                     l6912:
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 12544   002E00  0E00               	movlw	0
 12545   002E02  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 12546   002E04  0E4F               	movlw	79
 12547   002E06  6F87               	movwf	efgtoa@i& (0+255),b
 12548   002E08                     
 12549                           ; BSR set to: 0
 12550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 12551   002E08  0E72               	movlw	low _dbuf
 12552   002E0A  2587               	addwf	efgtoa@i& (0+255),w,b
 12553   002E0C  6ED9               	movwf	fsr2l,c
 12554   002E0E  0E03               	movlw	high _dbuf
 12555   002E10  2188               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12556   002E12  6EDA               	movwf	fsr2h,c
 12557   002E14  6ADF               	clrf	indf2,c
 12558   002E16                     
 12559                           ; BSR set to: 0
 12560                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 12561   002E16  0E72               	movlw	low _dbuf
 12562   002E18  6F6E               	movwf	??_efgtoa& (0+255),b
 12563   002E1A  0E03               	movlw	high _dbuf
 12564   002E1C  6F6F               	movwf	(??_efgtoa+1)& (0+255),b
 12565   002E1E  5196               	movf	efgtoa@n& (0+255),w,b
 12566   002E20  5F6E               	subwf	??_efgtoa& (0+255),f,b
 12567   002E22  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12568   002E24  5B6F               	subwfb	(??_efgtoa+1)& (0+255),f,b
 12569   002E26  5187               	movf	efgtoa@i& (0+255),w,b
 12570   002E28  256E               	addwf	??_efgtoa& (0+255),w,b
 12571   002E2A  6E01               	movwf	memcpy@d1^0,c
 12572   002E2C  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12573   002E2E  216F               	addwfc	(??_efgtoa+1)& (0+255),w,b
 12574   002E30  6E02               	movwf	(memcpy@d1+1)^0,c
 12575   002E32  0E72               	movlw	low _dbuf
 12576   002E34  6E03               	movwf	memcpy@s1^0,c
 12577   002E36  0E03               	movlw	high _dbuf
 12578   002E38  6E04               	movwf	(memcpy@s1+1)^0,c
 12579   002E3A  C096  F005         	movff	efgtoa@n,memcpy@n
 12580   002E3E  C097  F006         	movff	efgtoa@n+1,memcpy@n+1
 12581   002E42  ECAB  F035         	call	_memcpy	;wreg free
 12582   002E46                     
 12583                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 12584   002E46  0100               	movlb	0	; () banked
 12585   002E48  5196               	movf	efgtoa@n& (0+255),w,b
 12586   002E4A  5D87               	subwf	efgtoa@i& (0+255),w,b
 12587   002E4C  6F96               	movwf	efgtoa@n& (0+255),b
 12588   002E4E  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12589   002E50  5988               	subwfb	(efgtoa@i+1)& (0+255),w,b
 12590   002E52  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 12591   002E54                     
 12592                           ; BSR set to: 0
 12593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 12594   002E54  5191               	movf	efgtoa@sign& (0+255),w,b
 12595   002E56  A4D8               	btfss	status,2,c
 12596   002E58  EF30  F017         	goto	u8961
 12597   002E5C  EF33  F017         	goto	u8960
 12598   002E60                     u8961:
 12599   002E60  0E01               	movlw	1
 12600   002E62  EF34  F017         	goto	u8970
 12601   002E66                     u8960:
 12602   002E66  0E00               	movlw	0
 12603   002E68                     u8970:
 12604   002E68  6F87               	movwf	efgtoa@i& (0+255),b
 12605   002E6A  6B88               	clrf	(efgtoa@i+1)& (0+255),b
 12606   002E6C                     
 12607                           ; BSR set to: 0
 12608                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 12609   002E6C  5191               	movf	efgtoa@sign& (0+255),w,b
 12610   002E6E  B4D8               	btfsc	status,2,c
 12611   002E70  EF3C  F017         	goto	u8981
 12612   002E74  EF3E  F017         	goto	u8980
 12613   002E78                     u8981:
 12614   002E78  EF49  F017         	goto	l6926
 12615   002E7C                     u8980:
 12616   002E7C                     
 12617                           ; BSR set to: 0
 12618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 12619   002E7C  0796               	decf	efgtoa@n& (0+255),f,b
 12620   002E7E  A0D8               	btfss	status,0,c
 12621   002E80  0797               	decf	(efgtoa@n+1)& (0+255),f,b
 12622   002E82  0E72               	movlw	low _dbuf
 12623   002E84  2596               	addwf	efgtoa@n& (0+255),w,b
 12624   002E86  6ED9               	movwf	fsr2l,c
 12625   002E88  0E03               	movlw	high _dbuf
 12626   002E8A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12627   002E8C  6EDA               	movwf	fsr2h,c
 12628   002E8E  C091  FFDF         	movff	efgtoa@sign,indf2
 12629   002E92                     l6926:
 12630                           
 12631                           ; BSR set to: 0
 12632                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 12633   002E92  5187               	movf	efgtoa@i& (0+255),w,b
 12634   002E94  5F81               	subwf	efgtoa@w& (0+255),f,b
 12635   002E96  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12636   002E98  5B82               	subwfb	(efgtoa@w+1)& (0+255),f,b
 12637   002E9A                     
 12638                           ; BSR set to: 0
 12639                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 12640   002E9A  C068  F00F         	movff	efgtoa@fp,pad@fp
 12641   002E9E  0E72               	movlw	low _dbuf
 12642   002EA0  2596               	addwf	efgtoa@n& (0+255),w,b
 12643   002EA2  6E10               	movwf	pad@buf^0,c
 12644   002EA4  0E03               	movlw	high _dbuf
 12645   002EA6  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12646   002EA8  6E11               	movwf	(pad@buf+1)^0,c
 12647   002EAA  C081  F012         	movff	efgtoa@w,pad@p
 12648   002EAE  C082  F013         	movff	efgtoa@w+1,pad@p+1
 12649   002EB2  EC4D  F035         	call	_pad	;wreg free
 12650   002EB6                     l1015:
 12651   002EB6  0012               	return		;funcret
 12652   002EB8                     __end_of_efgtoa:
 12653                           	callstack 0
 12654                           
 12655 ;; *************** function _strcpy *****************
 12656 ;; Defined at:
 12657 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;  dest            2    0[COMRAM] PTR unsigned char 
 12660 ;;		 -> dbuf(80), fire_trigger_sensor(20), 
 12661 ;;  src             2    2[COMRAM] PTR const unsigned char 
 12662 ;;		 -> STR_21(4), STR_18(4), STR_3(10), STR_2(19), 
 12663 ;;		 -> STR_1(13), 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;  d               2    4[COMRAM] PTR unsigned char 
 12666 ;;		 -> dbuf(80), fire_trigger_sensor(20), 
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  2    0[COMRAM] PTR unsigned char 
 12669 ;; Registers used:
 12670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12676 ;;      Params:         4       0       0       0       0       0       0       0       0
 12677 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12678 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12679 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12680 ;;Total ram usage:        6 bytes
 12681 ;; Hardware stack levels used: 1
 12682 ;; Hardware stack levels required when called: 1
 12683 ;; This function calls:
 12684 ;;		Nothing
 12685 ;; This function is called by:
 12686 ;;		_Handle_Fire_Events
 12687 ;;		_efgtoa
 12688 ;; This function uses a non-reentrant model
 12689 ;;
 12690                           
 12691                           	psect	text26
 12692   006D3A                     __ptext26:
 12693                           	callstack 0
 12694   006D3A                     _strcpy:
 12695                           	callstack 24
 12696   006D3A  C001  F005         	movff	strcpy@dest,strcpy@d
 12697   006D3E  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
 12698   006D42                     l6102:
 12699   006D42  C003  FFF6         	movff	strcpy@src,tblptrl
 12700   006D46  C004  FFF7         	movff	strcpy@src+1,tblptrh
 12701   006D4A  4A03               	infsnz	strcpy@src^0,f,c
 12702   006D4C  2A04               	incf	(strcpy@src+1)^0,f,c
 12703   006D4E                     	if	0	;tblptru may be non-zero
 12704   006D4E                     	endif
 12705   006D4E                     	if	0	;tblptru may be non-zero
 12706   006D4E                     	endif
 12707   006D4E  C005  FFD9         	movff	strcpy@d,fsr2l
 12708   006D52  C006  FFDA         	movff	strcpy@d+1,fsr2h
 12709   006D56  4A05               	infsnz	strcpy@d^0,f,c
 12710   006D58  2A06               	incf	(strcpy@d+1)^0,f,c
 12711   006D5A  0008               	tblrd		*
 12712   006D5C  CFF5 FFDF          	movff	tablat,indf2
 12713   006D60  50DF               	movf	indf2,w,c
 12714   006D62  A4D8               	btfss	status,2,c
 12715   006D64  EFB6  F036         	goto	u7591
 12716   006D68  EFB8  F036         	goto	u7590
 12717   006D6C                     u7591:
 12718   006D6C  EFA1  F036         	goto	l6102
 12719   006D70                     u7590:
 12720   006D70  0012               	return		;funcret
 12721   006D72                     __end_of_strcpy:
 12722                           	callstack 0
 12723                           
 12724 ;; *************** function _memcpy *****************
 12725 ;; Defined at:
 12726 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 12727 ;; Parameters:    Size  Location     Type
 12728 ;;  d1              2    0[COMRAM] PTR void 
 12729 ;;		 -> dbuf(80), 
 12730 ;;  s1              2    2[COMRAM] PTR const void 
 12731 ;;		 -> dbuf(80), 
 12732 ;;  n               2    4[COMRAM] unsigned int 
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12735 ;;		 -> dbuf(80), 
 12736 ;;  d               2    7[COMRAM] PTR unsigned char 
 12737 ;;		 -> dbuf(80), 
 12738 ;;  tmp             1    6[COMRAM] unsigned char 
 12739 ;; Return value:  Size  Location     Type
 12740 ;;                  2    0[COMRAM] PTR void 
 12741 ;; Registers used:
 12742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12743 ;; Tracked objects:
 12744 ;;		On entry : 0/0
 12745 ;;		On exit  : 0/0
 12746 ;;		Unchanged: 0/0
 12747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12748 ;;      Params:         6       0       0       0       0       0       0       0       0
 12749 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12750 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12751 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12752 ;;Total ram usage:       11 bytes
 12753 ;; Hardware stack levels used: 1
 12754 ;; Hardware stack levels required when called: 1
 12755 ;; This function calls:
 12756 ;;		Nothing
 12757 ;; This function is called by:
 12758 ;;		_efgtoa
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           	psect	text27
 12763   006B56                     __ptext27:
 12764                           	callstack 0
 12765   006B56                     _memcpy:
 12766                           	callstack 24
 12767   006B56  C003  F00A         	movff	memcpy@s1,memcpy@s
 12768   006B5A  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
 12769   006B5E  C001  F008         	movff	memcpy@d1,memcpy@d
 12770   006B62  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
 12771   006B66  EFC5  F035         	goto	l6666
 12772   006B6A                     l6658:
 12773   006B6A  C00A  FFD9         	movff	memcpy@s,fsr2l
 12774   006B6E  C00B  FFDA         	movff	memcpy@s+1,fsr2h
 12775   006B72  50DF               	movf	indf2,w,c
 12776   006B74  6E07               	movwf	memcpy@tmp^0,c
 12777   006B76  4A0A               	infsnz	memcpy@s^0,f,c
 12778   006B78  2A0B               	incf	(memcpy@s+1)^0,f,c
 12779   006B7A  C008  FFD9         	movff	memcpy@d,fsr2l
 12780   006B7E  C009  FFDA         	movff	memcpy@d+1,fsr2h
 12781   006B82  C007  FFDF         	movff	memcpy@tmp,indf2
 12782   006B86  4A08               	infsnz	memcpy@d^0,f,c
 12783   006B88  2A09               	incf	(memcpy@d+1)^0,f,c
 12784   006B8A                     l6666:
 12785   006B8A  0605               	decf	memcpy@n^0,f,c
 12786   006B8C  A0D8               	btfss	status,0,c
 12787   006B8E  0606               	decf	(memcpy@n+1)^0,f,c
 12788   006B90  2805               	incf	memcpy@n^0,w,c
 12789   006B92  E106               	bnz	u8571
 12790   006B94  2806               	incf	(memcpy@n+1)^0,w,c
 12791   006B96  A4D8               	btfss	status,2,c
 12792   006B98  EFD0  F035         	goto	u8571
 12793   006B9C  EFD2  F035         	goto	u8570
 12794   006BA0                     u8571:
 12795   006BA0  EFB5  F035         	goto	l6658
 12796   006BA4                     u8570:
 12797   006BA4  0012               	return		;funcret
 12798   006BA6                     __end_of_memcpy:
 12799                           	callstack 0
 12800                           
 12801 ;; *************** function _labs *****************
 12802 ;; Defined at:
 12803 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
 12804 ;; Parameters:    Size  Location     Type
 12805 ;;  a               4    0[COMRAM] long 
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;		None
 12808 ;; Return value:  Size  Location     Type
 12809 ;;                  4    0[COMRAM] long 
 12810 ;; Registers used:
 12811 ;;		wreg, status,2, status,0
 12812 ;; Tracked objects:
 12813 ;;		On entry : 0/0
 12814 ;;		On exit  : 0/0
 12815 ;;		Unchanged: 0/0
 12816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12817 ;;      Params:         4       0       0       0       0       0       0       0       0
 12818 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12819 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12820 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12821 ;;Total ram usage:        8 bytes
 12822 ;; Hardware stack levels used: 1
 12823 ;; Hardware stack levels required when called: 1
 12824 ;; This function calls:
 12825 ;;		Nothing
 12826 ;; This function is called by:
 12827 ;;		_efgtoa
 12828 ;; This function uses a non-reentrant model
 12829 ;;
 12830                           
 12831                           	psect	text28
 12832   006B00                     __ptext28:
 12833                           	callstack 0
 12834   006B00                     _labs:
 12835                           	callstack 24
 12836   006B00  BE04               	btfsc	(labs@a+3)^0,7,c
 12837   006B02  EF85  F035         	goto	u8461
 12838   006B06  EF87  F035         	goto	u8460
 12839   006B0A                     u8461:
 12840   006B0A  EF91  F035         	goto	l6624
 12841   006B0E                     u8460:
 12842   006B0E  C001  F001         	movff	labs@a,?_labs
 12843   006B12  C002  F002         	movff	labs@a+1,?_labs+1
 12844   006B16  C003  F003         	movff	labs@a+2,?_labs+2
 12845   006B1A  C004  F004         	movff	labs@a+3,?_labs+3
 12846   006B1E  EFAA  F035         	goto	l1181
 12847   006B22                     l6624:
 12848   006B22  C001  F005         	movff	labs@a,??_labs
 12849   006B26  C002  F006         	movff	labs@a+1,??_labs+1
 12850   006B2A  C003  F007         	movff	labs@a+2,??_labs+2
 12851   006B2E  C004  F008         	movff	labs@a+3,??_labs+3
 12852   006B32  1E05               	comf	??_labs^0,f,c
 12853   006B34  1E06               	comf	(??_labs+1)^0,f,c
 12854   006B36  1E07               	comf	(??_labs+2)^0,f,c
 12855   006B38  1E08               	comf	(??_labs+3)^0,f,c
 12856   006B3A  2A05               	incf	??_labs^0,f,c
 12857   006B3C  0E00               	movlw	0
 12858   006B3E  2206               	addwfc	(??_labs+1)^0,f,c
 12859   006B40  2207               	addwfc	(??_labs+2)^0,f,c
 12860   006B42  2208               	addwfc	(??_labs+3)^0,f,c
 12861   006B44  C005  F001         	movff	??_labs,?_labs
 12862   006B48  C006  F002         	movff	??_labs+1,?_labs+1
 12863   006B4C  C007  F003         	movff	??_labs+2,?_labs+2
 12864   006B50  C008  F004         	movff	??_labs+3,?_labs+3
 12865   006B54                     l1181:
 12866   006B54  0012               	return		;funcret
 12867   006B56                     __end_of_labs:
 12868                           	callstack 0
 12869                           
 12870 ;; *************** function _floorf *****************
 12871 ;; Defined at:
 12872 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
 12873 ;; Parameters:    Size  Location     Type
 12874 ;;  x               4   64[COMRAM] float 
 12875 ;; Auto vars:     Size  Location     Type
 12876 ;;  u               4   80[COMRAM] struct .
 12877 ;;  m               4   74[COMRAM] unsigned long 
 12878 ;;  e               2   78[COMRAM] int 
 12879 ;; Return value:  Size  Location     Type
 12880 ;;                  4   64[COMRAM] float 
 12881 ;; Registers used:
 12882 ;;		wreg, status,2, status,0
 12883 ;; Tracked objects:
 12884 ;;		On entry : 0/0
 12885 ;;		On exit  : 0/0
 12886 ;;		Unchanged: 0/0
 12887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12888 ;;      Params:         4       0       0       0       0       0       0       0       0
 12889 ;;      Locals:        10       0       0       0       0       0       0       0       0
 12890 ;;      Temps:          6       0       0       0       0       0       0       0       0
 12891 ;;      Totals:        20       0       0       0       0       0       0       0       0
 12892 ;;Total ram usage:       20 bytes
 12893 ;; Hardware stack levels used: 1
 12894 ;; Hardware stack levels required when called: 1
 12895 ;; This function calls:
 12896 ;;		Nothing
 12897 ;; This function is called by:
 12898 ;;		_efgtoa
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           
 12902                           	psect	text29
 12903   0053C2                     __ptext29:
 12904                           	callstack 0
 12905   0053C2                     _floorf:
 12906                           	callstack 24
 12907   0053C2  C314  F051         	movff	floorf@F521,floorf@u
 12908   0053C6  C315  F052         	movff	floorf@F521+1,floorf@u+1
 12909   0053CA  C316  F053         	movff	floorf@F521+2,floorf@u+2
 12910   0053CE  C317  F054         	movff	floorf@F521+3,floorf@u+3
 12911   0053D2  C041  F051         	movff	floorf@x,floorf@u
 12912   0053D6  C042  F052         	movff	floorf@x+1,floorf@u+1
 12913   0053DA  C043  F053         	movff	floorf@x+2,floorf@u+2
 12914   0053DE  C044  F054         	movff	floorf@x+3,floorf@u+3
 12915   0053E2  0E81               	movlw	129
 12916   0053E4  6E45               	movwf	??_floorf^0,c
 12917   0053E6  0EFF               	movlw	255
 12918   0053E8  6E46               	movwf	(??_floorf+1)^0,c
 12919   0053EA  C051  F047         	movff	floorf@u,??_floorf+2
 12920   0053EE  C052  F048         	movff	floorf@u+1,??_floorf+3
 12921   0053F2  C053  F049         	movff	floorf@u+2,??_floorf+4
 12922   0053F6  C054  F04A         	movff	floorf@u+3,??_floorf+5
 12923   0053FA  0E18               	movlw	24
 12924   0053FC  EF05  F02A         	goto	u8470
 12925   005400                     u8475:
 12926   005400  90D8               	bcf	status,0,c
 12927   005402  324A               	rrcf	(??_floorf+5)^0,f,c
 12928   005404  3249               	rrcf	(??_floorf+4)^0,f,c
 12929   005406  3248               	rrcf	(??_floorf+3)^0,f,c
 12930   005408  3247               	rrcf	(??_floorf+2)^0,f,c
 12931   00540A                     u8470:
 12932   00540A  2EE8               	decfsz	wreg,f,c
 12933   00540C  EF00  F02A         	goto	u8475
 12934   005410  5047               	movf	(??_floorf+2)^0,w,c
 12935   005412  2445               	addwf	??_floorf^0,w,c
 12936   005414  6E4F               	movwf	floorf@e^0,c
 12937   005416  0E00               	movlw	0
 12938   005418  2046               	addwfc	(??_floorf+1)^0,w,c
 12939   00541A  6E50               	movwf	(floorf@e+1)^0,c
 12940   00541C  BE50               	btfsc	(floorf@e+1)^0,7,c
 12941   00541E  EF1A  F02A         	goto	u8481
 12942   005422  5050               	movf	(floorf@e+1)^0,w,c
 12943   005424  E109               	bnz	u8480
 12944   005426  0E17               	movlw	23
 12945   005428  5C4F               	subwf	floorf@e^0,w,c
 12946   00542A  A0D8               	btfss	status,0,c
 12947   00542C  EF1A  F02A         	goto	u8481
 12948   005430  EF1C  F02A         	goto	u8480
 12949   005434                     u8481:
 12950   005434  EF26  F02A         	goto	l6634
 12951   005438                     u8480:
 12952   005438                     l6632:
 12953   005438  C041  F041         	movff	floorf@x,?_floorf
 12954   00543C  C042  F042         	movff	floorf@x+1,?_floorf+1
 12955   005440  C043  F043         	movff	floorf@x+2,?_floorf+2
 12956   005444  C044  F044         	movff	floorf@x+3,?_floorf+3
 12957   005448  EFE9  F02A         	goto	l1167
 12958   00544C                     l6634:
 12959   00544C  BE50               	btfsc	(floorf@e+1)^0,7,c
 12960   00544E  EF2B  F02A         	goto	u8491
 12961   005452  EF2D  F02A         	goto	u8490
 12962   005456                     u8491:
 12963   005456  EF9D  F02A         	goto	l6644
 12964   00545A                     u8490:
 12965   00545A  C04F  F045         	movff	floorf@e,??_floorf
 12966   00545E  0EFF               	movlw	255
 12967   005460  6E46               	movwf	(??_floorf+1)^0,c
 12968   005462  0EFF               	movlw	255
 12969   005464  6E47               	movwf	(??_floorf+2)^0,c
 12970   005466  0E7F               	movlw	127
 12971   005468  6E48               	movwf	(??_floorf+3)^0,c
 12972   00546A  0E00               	movlw	0
 12973   00546C  6E49               	movwf	(??_floorf+4)^0,c
 12974   00546E                     u8505:
 12975   00546E  6645               	tstfsz	??_floorf^0,c
 12976   005470  EF3C  F02A         	goto	u8506
 12977   005474  EF44  F02A         	goto	u8507
 12978   005478                     u8506:
 12979   005478  3449               	rlcf	(??_floorf+4)^0,w,c
 12980   00547A  3249               	rrcf	(??_floorf+4)^0,f,c
 12981   00547C  3248               	rrcf	(??_floorf+3)^0,f,c
 12982   00547E  3247               	rrcf	(??_floorf+2)^0,f,c
 12983   005480  3246               	rrcf	(??_floorf+1)^0,f,c
 12984   005482  2E45               	decfsz	??_floorf^0,f,c
 12985   005484  EF37  F02A         	goto	u8505
 12986   005488                     u8507:
 12987   005488  C046  F04B         	movff	??_floorf+1,floorf@m
 12988   00548C  C047  F04C         	movff	??_floorf+2,floorf@m+1
 12989   005490  C048  F04D         	movff	??_floorf+3,floorf@m+2
 12990   005494  C049  F04E         	movff	??_floorf+4,floorf@m+3
 12991   005498  504B               	movf	floorf@m^0,w,c
 12992   00549A  1451               	andwf	floorf@u^0,w,c
 12993   00549C  6E45               	movwf	??_floorf^0,c
 12994   00549E  504C               	movf	(floorf@m+1)^0,w,c
 12995   0054A0  1452               	andwf	(floorf@u+1)^0,w,c
 12996   0054A2  6E46               	movwf	(??_floorf+1)^0,c
 12997   0054A4  504D               	movf	(floorf@m+2)^0,w,c
 12998   0054A6  1453               	andwf	(floorf@u+2)^0,w,c
 12999   0054A8  6E47               	movwf	(??_floorf+2)^0,c
 13000   0054AA  504E               	movf	(floorf@m+3)^0,w,c
 13001   0054AC  1454               	andwf	(floorf@u+3)^0,w,c
 13002   0054AE  6E48               	movwf	(??_floorf+3)^0,c
 13003   0054B0  5045               	movf	??_floorf^0,w,c
 13004   0054B2  1046               	iorwf	(??_floorf+1)^0,w,c
 13005   0054B4  1047               	iorwf	(??_floorf+2)^0,w,c
 13006   0054B6  1048               	iorwf	(??_floorf+3)^0,w,c
 13007   0054B8  A4D8               	btfss	status,2,c
 13008   0054BA  EF61  F02A         	goto	u8511
 13009   0054BE  EF63  F02A         	goto	u8510
 13010   0054C2                     u8511:
 13011   0054C2  EF65  F02A         	goto	l6640
 13012   0054C6                     u8510:
 13013   0054C6  EF1C  F02A         	goto	l6632
 13014   0054CA                     l6640:
 13015   0054CA  C051  F045         	movff	floorf@u,??_floorf
 13016   0054CE  C052  F046         	movff	floorf@u+1,??_floorf+1
 13017   0054D2  C053  F047         	movff	floorf@u+2,??_floorf+2
 13018   0054D6  C054  F048         	movff	floorf@u+3,??_floorf+3
 13019   0054DA  0E20               	movlw	32
 13020   0054DC  EF75  F02A         	goto	u8520
 13021   0054E0                     u8525:
 13022   0054E0  90D8               	bcf	status,0,c
 13023   0054E2  3248               	rrcf	(??_floorf+3)^0,f,c
 13024   0054E4  3247               	rrcf	(??_floorf+2)^0,f,c
 13025   0054E6  3246               	rrcf	(??_floorf+1)^0,f,c
 13026   0054E8  3245               	rrcf	??_floorf^0,f,c
 13027   0054EA                     u8520:
 13028   0054EA  2EE8               	decfsz	wreg,f,c
 13029   0054EC  EF70  F02A         	goto	u8525
 13030   0054F0  5045               	movf	??_floorf^0,w,c
 13031   0054F2  1046               	iorwf	(??_floorf+1)^0,w,c
 13032   0054F4  1047               	iorwf	(??_floorf+2)^0,w,c
 13033   0054F6  1048               	iorwf	(??_floorf+3)^0,w,c
 13034   0054F8  B4D8               	btfsc	status,2,c
 13035   0054FA  EF81  F02A         	goto	u8531
 13036   0054FE  EF83  F02A         	goto	u8530
 13037   005502                     u8531:
 13038   005502  EF8B  F02A         	goto	l1170
 13039   005506                     u8530:
 13040   005506  504B               	movf	floorf@m^0,w,c
 13041   005508  2651               	addwf	floorf@u^0,f,c
 13042   00550A  504C               	movf	(floorf@m+1)^0,w,c
 13043   00550C  2252               	addwfc	(floorf@u+1)^0,f,c
 13044   00550E  504D               	movf	(floorf@m+2)^0,w,c
 13045   005510  2253               	addwfc	(floorf@u+2)^0,f,c
 13046   005512  504E               	movf	(floorf@m+3)^0,w,c
 13047   005514  2254               	addwfc	(floorf@u+3)^0,f,c
 13048   005516                     l1170:
 13049   005516  1C4B               	comf	floorf@m^0,w,c
 13050   005518  6E45               	movwf	??_floorf^0,c
 13051   00551A  1C4C               	comf	(floorf@m+1)^0,w,c
 13052   00551C  6E46               	movwf	(??_floorf+1)^0,c
 13053   00551E  1C4D               	comf	(floorf@m+2)^0,w,c
 13054   005520  6E47               	movwf	(??_floorf+2)^0,c
 13055   005522  1C4E               	comf	(floorf@m+3)^0,w,c
 13056   005524  6E48               	movwf	(??_floorf+3)^0,c
 13057   005526  5045               	movf	??_floorf^0,w,c
 13058   005528  1651               	andwf	floorf@u^0,f,c
 13059   00552A  5046               	movf	(??_floorf+1)^0,w,c
 13060   00552C  1652               	andwf	(floorf@u+1)^0,f,c
 13061   00552E  5047               	movf	(??_floorf+2)^0,w,c
 13062   005530  1653               	andwf	(floorf@u+2)^0,f,c
 13063   005532  5048               	movf	(??_floorf+3)^0,w,c
 13064   005534  1654               	andwf	(floorf@u+3)^0,f,c
 13065   005536  EFE1  F02A         	goto	l6652
 13066   00553A                     l6644:
 13067   00553A  C051  F045         	movff	floorf@u,??_floorf
 13068   00553E  C052  F046         	movff	floorf@u+1,??_floorf+1
 13069   005542  C053  F047         	movff	floorf@u+2,??_floorf+2
 13070   005546  C054  F048         	movff	floorf@u+3,??_floorf+3
 13071   00554A  0E20               	movlw	32
 13072   00554C  EFAD  F02A         	goto	u8540
 13073   005550                     u8545:
 13074   005550  90D8               	bcf	status,0,c
 13075   005552  3248               	rrcf	(??_floorf+3)^0,f,c
 13076   005554  3247               	rrcf	(??_floorf+2)^0,f,c
 13077   005556  3246               	rrcf	(??_floorf+1)^0,f,c
 13078   005558  3245               	rrcf	??_floorf^0,f,c
 13079   00555A                     u8540:
 13080   00555A  2EE8               	decfsz	wreg,f,c
 13081   00555C  EFA8  F02A         	goto	u8545
 13082   005560  5045               	movf	??_floorf^0,w,c
 13083   005562  1046               	iorwf	(??_floorf+1)^0,w,c
 13084   005564  1047               	iorwf	(??_floorf+2)^0,w,c
 13085   005566  1048               	iorwf	(??_floorf+3)^0,w,c
 13086   005568  A4D8               	btfss	status,2,c
 13087   00556A  EFB9  F02A         	goto	u8551
 13088   00556E  EFBB  F02A         	goto	u8550
 13089   005572                     u8551:
 13090   005572  EFC5  F02A         	goto	l6648
 13091   005576                     u8550:
 13092   005576  0E00               	movlw	0
 13093   005578  6E51               	movwf	floorf@u^0,c
 13094   00557A  0E00               	movlw	0
 13095   00557C  6E52               	movwf	(floorf@u+1)^0,c
 13096   00557E  0E00               	movlw	0
 13097   005580  6E53               	movwf	(floorf@u+2)^0,c
 13098   005582  0E00               	movlw	0
 13099   005584  6E54               	movwf	(floorf@u+3)^0,c
 13100   005586  EFE1  F02A         	goto	l6652
 13101   00558A                     l6648:
 13102   00558A  90D8               	bcf	status,0,c
 13103   00558C  3451               	rlcf	floorf@u^0,w,c
 13104   00558E  6E45               	movwf	??_floorf^0,c
 13105   005590  3452               	rlcf	(floorf@u+1)^0,w,c
 13106   005592  6E46               	movwf	(??_floorf+1)^0,c
 13107   005594  3453               	rlcf	(floorf@u+2)^0,w,c
 13108   005596  6E47               	movwf	(??_floorf+2)^0,c
 13109   005598  3454               	rlcf	(floorf@u+3)^0,w,c
 13110   00559A  6E48               	movwf	(??_floorf+3)^0,c
 13111   00559C  5045               	movf	??_floorf^0,w,c
 13112   00559E  1046               	iorwf	(??_floorf+1)^0,w,c
 13113   0055A0  1047               	iorwf	(??_floorf+2)^0,w,c
 13114   0055A2  1048               	iorwf	(??_floorf+3)^0,w,c
 13115   0055A4  B4D8               	btfsc	status,2,c
 13116   0055A6  EFD7  F02A         	goto	u8561
 13117   0055AA  EFD9  F02A         	goto	u8560
 13118   0055AE                     u8561:
 13119   0055AE  EFE1  F02A         	goto	l6652
 13120   0055B2                     u8560:
 13121   0055B2  0E00               	movlw	0
 13122   0055B4  6E51               	movwf	floorf@u^0,c
 13123   0055B6  0E00               	movlw	0
 13124   0055B8  6E52               	movwf	(floorf@u+1)^0,c
 13125   0055BA  0E80               	movlw	128
 13126   0055BC  6E53               	movwf	(floorf@u+2)^0,c
 13127   0055BE  0EBF               	movlw	191
 13128   0055C0  6E54               	movwf	(floorf@u+3)^0,c
 13129   0055C2                     l6652:
 13130   0055C2  C051  F041         	movff	floorf@u,?_floorf
 13131   0055C6  C052  F042         	movff	floorf@u+1,?_floorf+1
 13132   0055CA  C053  F043         	movff	floorf@u+2,?_floorf+2
 13133   0055CE  C054  F044         	movff	floorf@u+3,?_floorf+3
 13134   0055D2                     l1167:
 13135   0055D2  0012               	return		;funcret
 13136   0055D4                     __end_of_floorf:
 13137                           	callstack 0
 13138                           
 13139 ;; *************** function ___fpclassifyf *****************
 13140 ;; Defined at:
 13141 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
 13142 ;; Parameters:    Size  Location     Type
 13143 ;;  x               4    0[COMRAM] float 
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;  u               4   10[COMRAM] struct .
 13146 ;;  e               2    8[COMRAM] int 
 13147 ;; Return value:  Size  Location     Type
 13148 ;;                  2    0[COMRAM] int 
 13149 ;; Registers used:
 13150 ;;		wreg, status,2, status,0
 13151 ;; Tracked objects:
 13152 ;;		On entry : 0/0
 13153 ;;		On exit  : 0/0
 13154 ;;		Unchanged: 0/0
 13155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13156 ;;      Params:         4       0       0       0       0       0       0       0       0
 13157 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13158 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13159 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13160 ;;Total ram usage:       14 bytes
 13161 ;; Hardware stack levels used: 1
 13162 ;; Hardware stack levels required when called: 1
 13163 ;; This function calls:
 13164 ;;		Nothing
 13165 ;; This function is called by:
 13166 ;;		_efgtoa
 13167 ;; This function uses a non-reentrant model
 13168 ;;
 13169                           
 13170                           	psect	text30
 13171   0061EE                     __ptext30:
 13172                           	callstack 0
 13173   0061EE                     ___fpclassifyf:
 13174                           	callstack 24
 13175   0061EE  C318  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 13176   0061F2  C319  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 13177   0061F6  C31A  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 13178   0061FA  C31B  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 13179   0061FE  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 13180   006202  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 13181   006206  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 13182   00620A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 13183   00620E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13184   006212  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13185   006216  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13186   00621A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13187   00621E  0E18               	movlw	24
 13188   006220  EF17  F031         	goto	u8390
 13189   006224                     u8395:
 13190   006224  90D8               	bcf	status,0,c
 13191   006226  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 13192   006228  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 13193   00622A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 13194   00622C  3205               	rrcf	??___fpclassifyf^0,f,c
 13195   00622E                     u8390:
 13196   00622E  2EE8               	decfsz	wreg,f,c
 13197   006230  EF12  F031         	goto	u8395
 13198   006234  5005               	movf	??___fpclassifyf^0,w,c
 13199   006236  6E09               	movwf	___fpclassifyf@e^0,c
 13200   006238  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 13201   00623A  5009               	movf	___fpclassifyf@e^0,w,c
 13202   00623C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13203   00623E  A4D8               	btfss	status,2,c
 13204   006240  EF24  F031         	goto	u8401
 13205   006244  EF26  F031         	goto	u8400
 13206   006248                     u8401:
 13207   006248  EF46  F031         	goto	l6610
 13208   00624C                     u8400:
 13209   00624C  90D8               	bcf	status,0,c
 13210   00624E  340B               	rlcf	___fpclassifyf@u^0,w,c
 13211   006250  6E05               	movwf	??___fpclassifyf^0,c
 13212   006252  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 13213   006254  6E06               	movwf	(??___fpclassifyf+1)^0,c
 13214   006256  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 13215   006258  6E07               	movwf	(??___fpclassifyf+2)^0,c
 13216   00625A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 13217   00625C  6E08               	movwf	(??___fpclassifyf+3)^0,c
 13218   00625E  5005               	movf	??___fpclassifyf^0,w,c
 13219   006260  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13220   006262  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13221   006264  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13222   006266  A4D8               	btfss	status,2,c
 13223   006268  EF38  F031         	goto	u8411
 13224   00626C  EF3A  F031         	goto	u8410
 13225   006270                     u8411:
 13226   006270  EF40  F031         	goto	l6606
 13227   006274                     u8410:
 13228   006274  0E00               	movlw	0
 13229   006276  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13230   006278  0E02               	movlw	2
 13231   00627A  6E01               	movwf	?___fpclassifyf^0,c
 13232   00627C  EF75  F031         	goto	l1153
 13233   006280                     l6606:
 13234   006280  0E00               	movlw	0
 13235   006282  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13236   006284  0E03               	movlw	3
 13237   006286  6E01               	movwf	?___fpclassifyf^0,c
 13238   006288  EF75  F031         	goto	l1153
 13239   00628C                     l6610:
 13240   00628C  2809               	incf	___fpclassifyf@e^0,w,c
 13241   00628E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13242   006290  A4D8               	btfss	status,2,c
 13243   006292  EF4D  F031         	goto	u8421
 13244   006296  EF4F  F031         	goto	u8420
 13245   00629A                     u8421:
 13246   00629A  EF71  F031         	goto	l6616
 13247   00629E                     u8420:
 13248   00629E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13249   0062A2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13250   0062A6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13251   0062AA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13252   0062AE  0E09               	movlw	9
 13253   0062B0                     u8435:
 13254   0062B0  90D8               	bcf	status,0,c
 13255   0062B2  3605               	rlcf	??___fpclassifyf^0,f,c
 13256   0062B4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 13257   0062B6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 13258   0062B8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 13259   0062BA  2EE8               	decfsz	wreg,f,c
 13260   0062BC  EF58  F031         	goto	u8435
 13261   0062C0  5005               	movf	??___fpclassifyf^0,w,c
 13262   0062C2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13263   0062C4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13264   0062C6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13265   0062C8  B4D8               	btfsc	status,2,c
 13266   0062CA  EF69  F031         	goto	u8441
 13267   0062CE  EF6C  F031         	goto	u8440
 13268   0062D2                     u8441:
 13269   0062D2  0E01               	movlw	1
 13270   0062D4  EF6D  F031         	goto	u8450
 13271   0062D8                     u8440:
 13272   0062D8  0E00               	movlw	0
 13273   0062DA                     u8450:
 13274   0062DA  6E01               	movwf	?___fpclassifyf^0,c
 13275   0062DC  6A02               	clrf	(?___fpclassifyf+1)^0,c
 13276   0062DE  EF75  F031         	goto	l1153
 13277   0062E2                     l6616:
 13278   0062E2  0E00               	movlw	0
 13279   0062E4  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13280   0062E6  0E04               	movlw	4
 13281   0062E8  6E01               	movwf	?___fpclassifyf^0,c
 13282   0062EA                     l1153:
 13283   0062EA  0012               	return		;funcret
 13284   0062EC                     __end_of___fpclassifyf:
 13285                           	callstack 0
 13286                           
 13287 ;; *************** function ___fltol *****************
 13288 ;; Defined at:
 13289 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 13290 ;; Parameters:    Size  Location     Type
 13291 ;;  f1              4    0[COMRAM] int 
 13292 ;; Auto vars:     Size  Location     Type
 13293 ;;  exp1            1    9[COMRAM] unsigned char 
 13294 ;;  sign1           1    8[COMRAM] unsigned char 
 13295 ;; Return value:  Size  Location     Type
 13296 ;;                  4    0[COMRAM] long 
 13297 ;; Registers used:
 13298 ;;		wreg, status,2, status,0
 13299 ;; Tracked objects:
 13300 ;;		On entry : 0/0
 13301 ;;		On exit  : 0/0
 13302 ;;		Unchanged: 0/0
 13303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13304 ;;      Params:         4       0       0       0       0       0       0       0       0
 13305 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13306 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13307 ;;      Totals:        10       0       0       0       0       0       0       0       0
 13308 ;;Total ram usage:       10 bytes
 13309 ;; Hardware stack levels used: 1
 13310 ;; Hardware stack levels required when called: 1
 13311 ;; This function calls:
 13312 ;;		Nothing
 13313 ;; This function is called by:
 13314 ;;		_efgtoa
 13315 ;; This function uses a non-reentrant model
 13316 ;;
 13317                           
 13318                           	psect	text31
 13319   005DDE                     __ptext31:
 13320                           	callstack 0
 13321   005DDE                     ___fltol:
 13322                           	callstack 24
 13323   005DDE  3403               	rlcf	(___fltol@f1+2)^0,w,c
 13324   005DE0  3404               	rlcf	(___fltol@f1+3)^0,w,c
 13325   005DE2  6E0A               	movwf	___fltol@exp1^0,c
 13326   005DE4  500A               	movf	___fltol@exp1^0,w,c
 13327   005DE6  A4D8               	btfss	status,2,c
 13328   005DE8  EFF8  F02E         	goto	u8261
 13329   005DEC  EFFA  F02E         	goto	u8260
 13330   005DF0                     u8261:
 13331   005DF0  EF04  F02F         	goto	l6528
 13332   005DF4                     u8260:
 13333   005DF4                     l6524:
 13334   005DF4  0E00               	movlw	0
 13335   005DF6  6E01               	movwf	?___fltol^0,c
 13336   005DF8  0E00               	movlw	0
 13337   005DFA  6E02               	movwf	(?___fltol+1)^0,c
 13338   005DFC  0E00               	movlw	0
 13339   005DFE  6E03               	movwf	(?___fltol+2)^0,c
 13340   005E00  0E00               	movlw	0
 13341   005E02  6E04               	movwf	(?___fltol+3)^0,c
 13342   005E04  EF71  F02F         	goto	l572
 13343   005E08                     l6528:
 13344   005E08  C001  F005         	movff	___fltol@f1,??___fltol
 13345   005E0C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
 13346   005E10  C003  F007         	movff	___fltol@f1+2,??___fltol+2
 13347   005E14  C004  F008         	movff	___fltol@f1+3,??___fltol+3
 13348   005E18  0E20               	movlw	32
 13349   005E1A  EF14  F02F         	goto	u8270
 13350   005E1E                     u8275:
 13351   005E1E  90D8               	bcf	status,0,c
 13352   005E20  3208               	rrcf	(??___fltol+3)^0,f,c
 13353   005E22  3207               	rrcf	(??___fltol+2)^0,f,c
 13354   005E24  3206               	rrcf	(??___fltol+1)^0,f,c
 13355   005E26  3205               	rrcf	??___fltol^0,f,c
 13356   005E28                     u8270:
 13357   005E28  2EE8               	decfsz	wreg,f,c
 13358   005E2A  EF0F  F02F         	goto	u8275
 13359   005E2E  5005               	movf	??___fltol^0,w,c
 13360   005E30  6E09               	movwf	___fltol@sign1^0,c
 13361   005E32  8E03               	bsf	(___fltol@f1+2)^0,7,c
 13362   005E34  0EFF               	movlw	255
 13363   005E36  1601               	andwf	___fltol@f1^0,f,c
 13364   005E38  0EFF               	movlw	255
 13365   005E3A  1602               	andwf	(___fltol@f1+1)^0,f,c
 13366   005E3C  0EFF               	movlw	255
 13367   005E3E  1603               	andwf	(___fltol@f1+2)^0,f,c
 13368   005E40  0E00               	movlw	0
 13369   005E42  1604               	andwf	(___fltol@f1+3)^0,f,c
 13370   005E44  0E96               	movlw	150
 13371   005E46  5E0A               	subwf	___fltol@exp1^0,f,c
 13372   005E48  BE0A               	btfsc	___fltol@exp1^0,7,c
 13373   005E4A  EF2B  F02F         	goto	u8280
 13374   005E4E  EF29  F02F         	goto	u8281
 13375   005E52                     u8281:
 13376   005E52  EF41  F02F         	goto	l6548
 13377   005E56                     u8280:
 13378   005E56  500A               	movf	___fltol@exp1^0,w,c
 13379   005E58  0A80               	xorlw	128
 13380   005E5A  0F97               	addlw	151
 13381   005E5C  B0D8               	btfsc	status,0,c
 13382   005E5E  EF33  F02F         	goto	u8291
 13383   005E62  EF35  F02F         	goto	u8290
 13384   005E66                     u8291:
 13385   005E66  EF37  F02F         	goto	l6544
 13386   005E6A                     u8290:
 13387   005E6A  EFFA  F02E         	goto	l6524
 13388   005E6E                     l6544:
 13389   005E6E  90D8               	bcf	status,0,c
 13390   005E70  3204               	rrcf	(___fltol@f1+3)^0,f,c
 13391   005E72  3203               	rrcf	(___fltol@f1+2)^0,f,c
 13392   005E74  3202               	rrcf	(___fltol@f1+1)^0,f,c
 13393   005E76  3201               	rrcf	___fltol@f1^0,f,c
 13394   005E78  3E0A               	incfsz	___fltol@exp1^0,f,c
 13395   005E7A  EF37  F02F         	goto	l6544
 13396   005E7E  EF59  F02F         	goto	l6558
 13397   005E82                     l6548:
 13398   005E82  0E1F               	movlw	31
 13399   005E84  640A               	cpfsgt	___fltol@exp1^0,c
 13400   005E86  EF47  F02F         	goto	u8301
 13401   005E8A  EF49  F02F         	goto	u8300
 13402   005E8E                     u8301:
 13403   005E8E  EF51  F02F         	goto	l6556
 13404   005E92                     u8300:
 13405   005E92  EFFA  F02E         	goto	l6524
 13406   005E96                     l6554:
 13407   005E96  90D8               	bcf	status,0,c
 13408   005E98  3601               	rlcf	___fltol@f1^0,f,c
 13409   005E9A  3602               	rlcf	(___fltol@f1+1)^0,f,c
 13410   005E9C  3603               	rlcf	(___fltol@f1+2)^0,f,c
 13411   005E9E  3604               	rlcf	(___fltol@f1+3)^0,f,c
 13412   005EA0  060A               	decf	___fltol@exp1^0,f,c
 13413   005EA2                     l6556:
 13414   005EA2  500A               	movf	___fltol@exp1^0,w,c
 13415   005EA4  A4D8               	btfss	status,2,c
 13416   005EA6  EF57  F02F         	goto	u8311
 13417   005EAA  EF59  F02F         	goto	u8310
 13418   005EAE                     u8311:
 13419   005EAE  EF4B  F02F         	goto	l6554
 13420   005EB2                     u8310:
 13421   005EB2                     l6558:
 13422   005EB2  5009               	movf	___fltol@sign1^0,w,c
 13423   005EB4  B4D8               	btfsc	status,2,c
 13424   005EB6  EF5F  F02F         	goto	u8321
 13425   005EBA  EF61  F02F         	goto	u8320
 13426   005EBE                     u8321:
 13427   005EBE  EF69  F02F         	goto	l6562
 13428   005EC2                     u8320:
 13429   005EC2  1E04               	comf	(___fltol@f1+3)^0,f,c
 13430   005EC4  1E03               	comf	(___fltol@f1+2)^0,f,c
 13431   005EC6  1E02               	comf	(___fltol@f1+1)^0,f,c
 13432   005EC8  6C01               	negf	___fltol@f1^0,c
 13433   005ECA  0E00               	movlw	0
 13434   005ECC  2202               	addwfc	(___fltol@f1+1)^0,f,c
 13435   005ECE  2203               	addwfc	(___fltol@f1+2)^0,f,c
 13436   005ED0  2204               	addwfc	(___fltol@f1+3)^0,f,c
 13437   005ED2                     l6562:
 13438   005ED2  C001  F001         	movff	___fltol@f1,?___fltol
 13439   005ED6  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 13440   005EDA  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 13441   005EDE  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 13442   005EE2                     l572:
 13443   005EE2  0012               	return		;funcret
 13444   005EE4                     __end_of___fltol:
 13445                           	callstack 0
 13446                           
 13447 ;; *************** function ___flsub *****************
 13448 ;; Defined at:
 13449 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13450 ;; Parameters:    Size  Location     Type
 13451 ;;  b               4   80[COMRAM] long 
 13452 ;;  a               4   84[COMRAM] long 
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;		None
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  4   80[COMRAM] long 
 13457 ;; Registers used:
 13458 ;;		wreg, status,2, status,0, cstack
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13464 ;;      Params:         8       0       0       0       0       0       0       0       0
 13465 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13466 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13467 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13468 ;;Total ram usage:        8 bytes
 13469 ;; Hardware stack levels used: 1
 13470 ;; Hardware stack levels required when called: 2
 13471 ;; This function calls:
 13472 ;;		___fladd
 13473 ;; This function is called by:
 13474 ;;		_main
 13475 ;;		_Handle_Fire_Events
 13476 ;;		_Handle_Test_Events
 13477 ;;		_Read_Sensors
 13478 ;;		_efgtoa
 13479 ;;		_powf
 13480 ;; This function uses a non-reentrant model
 13481 ;;
 13482                           
 13483                           	psect	text32
 13484   006C38                     __ptext32:
 13485                           	callstack 0
 13486   006C38                     ___flsub:
 13487                           	callstack 28
 13488   006C38  0E00               	movlw	0
 13489   006C3A  1A55               	xorwf	___flsub@a^0,f,c
 13490   006C3C  0E00               	movlw	0
 13491   006C3E  1A56               	xorwf	(___flsub@a+1)^0,f,c
 13492   006C40  0E00               	movlw	0
 13493   006C42  1A57               	xorwf	(___flsub@a+2)^0,f,c
 13494   006C44  0E80               	movlw	128
 13495   006C46  1A58               	xorwf	(___flsub@a+3)^0,f,c
 13496   006C48  C051  F041         	movff	___flsub@b,___fladd@b
 13497   006C4C  C052  F042         	movff	___flsub@b+1,___fladd@b+1
 13498   006C50  C053  F043         	movff	___flsub@b+2,___fladd@b+2
 13499   006C54  C054  F044         	movff	___flsub@b+3,___fladd@b+3
 13500   006C58  C055  F045         	movff	___flsub@a,___fladd@a
 13501   006C5C  C056  F046         	movff	___flsub@a+1,___fladd@a+1
 13502   006C60  C057  F047         	movff	___flsub@a+2,___fladd@a+2
 13503   006C64  C058  F048         	movff	___flsub@a+3,___fladd@a+3
 13504   006C68  EC9B  F01D         	call	___fladd	;wreg free
 13505   006C6C  C041  F051         	movff	?___fladd,?___flsub
 13506   006C70  C042  F052         	movff	?___fladd+1,?___flsub+1
 13507   006C74  C043  F053         	movff	?___fladd+2,?___flsub+2
 13508   006C78  C044  F054         	movff	?___fladd+3,?___flsub+3
 13509   006C7C  0012               	return		;funcret
 13510   006C7E                     __end_of___flsub:
 13511                           	callstack 0
 13512                           
 13513 ;; *************** function ___fladd *****************
 13514 ;; Defined at:
 13515 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13516 ;; Parameters:    Size  Location     Type
 13517 ;;  b               4   64[COMRAM] long 
 13518 ;;  a               4   68[COMRAM] long 
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;  grs             1   79[COMRAM] unsigned char 
 13521 ;;  bexp            1   78[COMRAM] unsigned char 
 13522 ;;  aexp            1   77[COMRAM] unsigned char 
 13523 ;;  signs           1   76[COMRAM] unsigned char 
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  4   64[COMRAM] unsigned char 
 13526 ;; Registers used:
 13527 ;;		wreg, status,2, status,0
 13528 ;; Tracked objects:
 13529 ;;		On entry : 0/0
 13530 ;;		On exit  : 0/0
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13533 ;;      Params:         8       0       0       0       0       0       0       0       0
 13534 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13535 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13536 ;;      Totals:        16       0       0       0       0       0       0       0       0
 13537 ;;Total ram usage:       16 bytes
 13538 ;; Hardware stack levels used: 1
 13539 ;; Hardware stack levels required when called: 1
 13540 ;; This function calls:
 13541 ;;		Nothing
 13542 ;; This function is called by:
 13543 ;;		_main
 13544 ;;		_Read_Sensors
 13545 ;;		_Apply_Filter
 13546 ;;		___flsub
 13547 ;;		_efgtoa
 13548 ;;		_powf
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           	psect	text33
 13553   003B36                     __ptext33:
 13554                           	callstack 0
 13555   003B36                     ___fladd:
 13556                           	callstack 28
 13557   003B36  5044               	movf	(___fladd@b+3)^0,w,c
 13558   003B38  0B80               	andlw	128
 13559   003B3A  6E4D               	movwf	___fladd@signs^0,c
 13560   003B3C  5044               	movf	(___fladd@b+3)^0,w,c
 13561   003B3E  2444               	addwf	(___fladd@b+3)^0,w,c
 13562   003B40  6E4F               	movwf	___fladd@bexp^0,c
 13563   003B42  AE43               	btfss	(___fladd@b+2)^0,7,c
 13564   003B44  EFA6  F01D         	goto	u7191
 13565   003B48  EFA8  F01D         	goto	u7190
 13566   003B4C                     u7191:
 13567   003B4C  EFA9  F01D         	goto	l5904
 13568   003B50                     u7190:
 13569   003B50  804F               	bsf	___fladd@bexp^0,0,c
 13570   003B52                     l5904:
 13571   003B52  504F               	movf	___fladd@bexp^0,w,c
 13572   003B54  B4D8               	btfsc	status,2,c
 13573   003B56  EFAF  F01D         	goto	u7201
 13574   003B5A  EFB1  F01D         	goto	u7200
 13575   003B5E                     u7201:
 13576   003B5E  EFC5  F01D         	goto	l5914
 13577   003B62                     u7200:
 13578   003B62  284F               	incf	___fladd@bexp^0,w,c
 13579   003B64  A4D8               	btfss	status,2,c
 13580   003B66  EFB7  F01D         	goto	u7211
 13581   003B6A  EFB9  F01D         	goto	u7210
 13582   003B6E                     u7211:
 13583   003B6E  EFC1  F01D         	goto	l5910
 13584   003B72                     u7210:
 13585   003B72  0E00               	movlw	0
 13586   003B74  6E41               	movwf	___fladd@b^0,c
 13587   003B76  0E00               	movlw	0
 13588   003B78  6E42               	movwf	(___fladd@b+1)^0,c
 13589   003B7A  0E00               	movlw	0
 13590   003B7C  6E43               	movwf	(___fladd@b+2)^0,c
 13591   003B7E  0E00               	movlw	0
 13592   003B80  6E44               	movwf	(___fladd@b+3)^0,c
 13593   003B82                     l5910:
 13594   003B82  8E43               	bsf	(___fladd@b+2)^0,7,c
 13595   003B84  6A44               	clrf	(___fladd@b+3)^0,c
 13596   003B86  EFCD  F01D         	goto	l5916
 13597   003B8A                     l5914:
 13598   003B8A  0E00               	movlw	0
 13599   003B8C  6E41               	movwf	___fladd@b^0,c
 13600   003B8E  0E00               	movlw	0
 13601   003B90  6E42               	movwf	(___fladd@b+1)^0,c
 13602   003B92  0E00               	movlw	0
 13603   003B94  6E43               	movwf	(___fladd@b+2)^0,c
 13604   003B96  0E00               	movlw	0
 13605   003B98  6E44               	movwf	(___fladd@b+3)^0,c
 13606   003B9A                     l5916:
 13607   003B9A  5048               	movf	(___fladd@a+3)^0,w,c
 13608   003B9C  0B80               	andlw	128
 13609   003B9E  6E4E               	movwf	___fladd@aexp^0,c
 13610   003BA0  504D               	movf	___fladd@signs^0,w,c
 13611   003BA2  184E               	xorwf	___fladd@aexp^0,w,c
 13612   003BA4  B4D8               	btfsc	status,2,c
 13613   003BA6  EFD7  F01D         	goto	u7221
 13614   003BAA  EFD9  F01D         	goto	u7220
 13615   003BAE                     u7221:
 13616   003BAE  EFDA  F01D         	goto	l5922
 13617   003BB2                     u7220:
 13618   003BB2  8C4D               	bsf	___fladd@signs^0,6,c
 13619   003BB4                     l5922:
 13620   003BB4  5048               	movf	(___fladd@a+3)^0,w,c
 13621   003BB6  2448               	addwf	(___fladd@a+3)^0,w,c
 13622   003BB8  6E4E               	movwf	___fladd@aexp^0,c
 13623   003BBA  AE47               	btfss	(___fladd@a+2)^0,7,c
 13624   003BBC  EFE2  F01D         	goto	u7231
 13625   003BC0  EFE4  F01D         	goto	u7230
 13626   003BC4                     u7231:
 13627   003BC4  EFE5  F01D         	goto	l5928
 13628   003BC8                     u7230:
 13629   003BC8  804E               	bsf	___fladd@aexp^0,0,c
 13630   003BCA                     l5928:
 13631   003BCA  504E               	movf	___fladd@aexp^0,w,c
 13632   003BCC  B4D8               	btfsc	status,2,c
 13633   003BCE  EFEB  F01D         	goto	u7241
 13634   003BD2  EFED  F01D         	goto	u7240
 13635   003BD6                     u7241:
 13636   003BD6  EF01  F01E         	goto	l5938
 13637   003BDA                     u7240:
 13638   003BDA  284E               	incf	___fladd@aexp^0,w,c
 13639   003BDC  A4D8               	btfss	status,2,c
 13640   003BDE  EFF3  F01D         	goto	u7251
 13641   003BE2  EFF5  F01D         	goto	u7250
 13642   003BE6                     u7251:
 13643   003BE6  EFFD  F01D         	goto	l5934
 13644   003BEA                     u7250:
 13645   003BEA  0E00               	movlw	0
 13646   003BEC  6E45               	movwf	___fladd@a^0,c
 13647   003BEE  0E00               	movlw	0
 13648   003BF0  6E46               	movwf	(___fladd@a+1)^0,c
 13649   003BF2  0E00               	movlw	0
 13650   003BF4  6E47               	movwf	(___fladd@a+2)^0,c
 13651   003BF6  0E00               	movlw	0
 13652   003BF8  6E48               	movwf	(___fladd@a+3)^0,c
 13653   003BFA                     l5934:
 13654   003BFA  8E47               	bsf	(___fladd@a+2)^0,7,c
 13655   003BFC  6A48               	clrf	(___fladd@a+3)^0,c
 13656   003BFE  EF09  F01E         	goto	l5940
 13657   003C02                     l5938:
 13658   003C02  0E00               	movlw	0
 13659   003C04  6E45               	movwf	___fladd@a^0,c
 13660   003C06  0E00               	movlw	0
 13661   003C08  6E46               	movwf	(___fladd@a+1)^0,c
 13662   003C0A  0E00               	movlw	0
 13663   003C0C  6E47               	movwf	(___fladd@a+2)^0,c
 13664   003C0E  0E00               	movlw	0
 13665   003C10  6E48               	movwf	(___fladd@a+3)^0,c
 13666   003C12                     l5940:
 13667   003C12  504F               	movf	___fladd@bexp^0,w,c
 13668   003C14  5C4E               	subwf	___fladd@aexp^0,w,c
 13669   003C16  B0D8               	btfsc	status,0,c
 13670   003C18  EF10  F01E         	goto	u7261
 13671   003C1C  EF12  F01E         	goto	u7260
 13672   003C20                     u7261:
 13673   003C20  EF39  F01E         	goto	l5976
 13674   003C24                     u7260:
 13675   003C24  AC4D               	btfss	___fladd@signs^0,6,c
 13676   003C26  EF17  F01E         	goto	u7271
 13677   003C2A  EF19  F01E         	goto	u7270
 13678   003C2E                     u7271:
 13679   003C2E  EF1B  F01E         	goto	l5946
 13680   003C32                     u7270:
 13681   003C32  0E80               	movlw	128
 13682   003C34  1A4D               	xorwf	___fladd@signs^0,f,c
 13683   003C36                     l5946:
 13684   003C36  C04F  F050         	movff	___fladd@bexp,___fladd@grs
 13685   003C3A  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
 13686   003C3E  C050  F04E         	movff	___fladd@grs,___fladd@aexp
 13687   003C42  C041  F050         	movff	___fladd@b,___fladd@grs
 13688   003C46  C045  F041         	movff	___fladd@a,___fladd@b
 13689   003C4A  C050  F045         	movff	___fladd@grs,___fladd@a
 13690   003C4E  C042  F050         	movff	___fladd@b+1,___fladd@grs
 13691   003C52  C046  F042         	movff	___fladd@a+1,___fladd@b+1
 13692   003C56  C050  F046         	movff	___fladd@grs,___fladd@a+1
 13693   003C5A  C043  F050         	movff	___fladd@b+2,___fladd@grs
 13694   003C5E  C047  F043         	movff	___fladd@a+2,___fladd@b+2
 13695   003C62  C050  F047         	movff	___fladd@grs,___fladd@a+2
 13696   003C66  C044  F050         	movff	___fladd@b+3,___fladd@grs
 13697   003C6A  C048  F044         	movff	___fladd@a+3,___fladd@b+3
 13698   003C6E  C050  F048         	movff	___fladd@grs,___fladd@a+3
 13699   003C72                     l5976:
 13700   003C72  6A50               	clrf	___fladd@grs^0,c
 13701   003C74  504F               	movf	___fladd@bexp^0,w,c
 13702   003C76  C04E  F049         	movff	___fladd@aexp,??___fladd
 13703   003C7A  6A4A               	clrf	(??___fladd+1)^0,c
 13704   003C7C  5E49               	subwf	??___fladd^0,f,c
 13705   003C7E  0E00               	movlw	0
 13706   003C80  5A4A               	subwfb	(??___fladd+1)^0,f,c
 13707   003C82  BE4A               	btfsc	(??___fladd+1)^0,7,c
 13708   003C84  EF4D  F01E         	goto	u7281
 13709   003C88  504A               	movf	(??___fladd+1)^0,w,c
 13710   003C8A  E109               	bnz	u7280
 13711   003C8C  0E1A               	movlw	26
 13712   003C8E  5C49               	subwf	??___fladd^0,w,c
 13713   003C90  A0D8               	btfss	status,0,c
 13714   003C92  EF4D  F01E         	goto	u7281
 13715   003C96  EF4F  F01E         	goto	u7280
 13716   003C9A                     u7281:
 13717   003C9A  EF86  F01E         	goto	l804
 13718   003C9E                     u7280:
 13719   003C9E  5041               	movf	___fladd@b^0,w,c
 13720   003CA0  1042               	iorwf	(___fladd@b+1)^0,w,c
 13721   003CA2  1043               	iorwf	(___fladd@b+2)^0,w,c
 13722   003CA4  1044               	iorwf	(___fladd@b+3)^0,w,c
 13723   003CA6  A4D8               	btfss	status,2,c
 13724   003CA8  EF58  F01E         	goto	u7291
 13725   003CAC  EF5B  F01E         	goto	u7290
 13726   003CB0                     u7291:
 13727   003CB0  0E01               	movlw	1
 13728   003CB2  EF5C  F01E         	goto	u7300
 13729   003CB6                     u7290:
 13730   003CB6  0E00               	movlw	0
 13731   003CB8                     u7300:
 13732   003CB8  6E50               	movwf	___fladd@grs^0,c
 13733   003CBA  0E00               	movlw	0
 13734   003CBC  6E41               	movwf	___fladd@b^0,c
 13735   003CBE  0E00               	movlw	0
 13736   003CC0  6E42               	movwf	(___fladd@b+1)^0,c
 13737   003CC2  0E00               	movlw	0
 13738   003CC4  6E43               	movwf	(___fladd@b+2)^0,c
 13739   003CC6  0E00               	movlw	0
 13740   003CC8  6E44               	movwf	(___fladd@b+3)^0,c
 13741   003CCA  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
 13742   003CCE  EF8F  F01E         	goto	l803
 13743   003CD2                     l805:
 13744   003CD2  A050               	btfss	___fladd@grs^0,0,c
 13745   003CD4  EF6E  F01E         	goto	u7311
 13746   003CD8  EF70  F01E         	goto	u7310
 13747   003CDC                     u7311:
 13748   003CDC  EF76  F01E         	goto	l5986
 13749   003CE0                     u7310:
 13750   003CE0  90D8               	bcf	status,0,c
 13751   003CE2  3050               	rrcf	___fladd@grs^0,w,c
 13752   003CE4  0901               	iorlw	1
 13753   003CE6  6E50               	movwf	___fladd@grs^0,c
 13754   003CE8  EF78  F01E         	goto	l5988
 13755   003CEC                     l5986:
 13756   003CEC  90D8               	bcf	status,0,c
 13757   003CEE  3250               	rrcf	___fladd@grs^0,f,c
 13758   003CF0                     l5988:
 13759   003CF0  A041               	btfss	___fladd@b^0,0,c
 13760   003CF2  EF7D  F01E         	goto	u7321
 13761   003CF6  EF7F  F01E         	goto	u7320
 13762   003CFA                     u7321:
 13763   003CFA  EF80  F01E         	goto	l5992
 13764   003CFE                     u7320:
 13765   003CFE  8E50               	bsf	___fladd@grs^0,7,c
 13766   003D00                     l5992:
 13767   003D00  3444               	rlcf	(___fladd@b+3)^0,w,c
 13768   003D02  3244               	rrcf	(___fladd@b+3)^0,f,c
 13769   003D04  3243               	rrcf	(___fladd@b+2)^0,f,c
 13770   003D06  3242               	rrcf	(___fladd@b+1)^0,f,c
 13771   003D08  3241               	rrcf	___fladd@b^0,f,c
 13772   003D0A  2A4F               	incf	___fladd@bexp^0,f,c
 13773   003D0C                     l804:
 13774   003D0C  504E               	movf	___fladd@aexp^0,w,c
 13775   003D0E  5C4F               	subwf	___fladd@bexp^0,w,c
 13776   003D10  A0D8               	btfss	status,0,c
 13777   003D12  EF8D  F01E         	goto	u7331
 13778   003D16  EF8F  F01E         	goto	u7330
 13779   003D1A                     u7331:
 13780   003D1A  EF69  F01E         	goto	l805
 13781   003D1E                     u7330:
 13782   003D1E                     l803:
 13783   003D1E  BC4D               	btfsc	___fladd@signs^0,6,c
 13784   003D20  EF94  F01E         	goto	u7341
 13785   003D24  EF96  F01E         	goto	u7340
 13786   003D28                     u7341:
 13787   003D28  EFD6  F01E         	goto	l6020
 13788   003D2C                     u7340:
 13789   003D2C  504F               	movf	___fladd@bexp^0,w,c
 13790   003D2E  A4D8               	btfss	status,2,c
 13791   003D30  EF9C  F01E         	goto	u7351
 13792   003D34  EF9E  F01E         	goto	u7350
 13793   003D38                     u7351:
 13794   003D38  EFA8  F01E         	goto	l6002
 13795   003D3C                     u7350:
 13796   003D3C  0E00               	movlw	0
 13797   003D3E  6E41               	movwf	?___fladd^0,c
 13798   003D40  0E00               	movlw	0
 13799   003D42  6E42               	movwf	(?___fladd+1)^0,c
 13800   003D44  0E00               	movlw	0
 13801   003D46  6E43               	movwf	(?___fladd+2)^0,c
 13802   003D48  0E00               	movlw	0
 13803   003D4A  6E44               	movwf	(?___fladd+3)^0,c
 13804   003D4C  EFF5  F01F         	goto	l812
 13805   003D50                     l6002:
 13806   003D50  5045               	movf	___fladd@a^0,w,c
 13807   003D52  2641               	addwf	___fladd@b^0,f,c
 13808   003D54  5046               	movf	(___fladd@a+1)^0,w,c
 13809   003D56  2242               	addwfc	(___fladd@b+1)^0,f,c
 13810   003D58  5047               	movf	(___fladd@a+2)^0,w,c
 13811   003D5A  2243               	addwfc	(___fladd@b+2)^0,f,c
 13812   003D5C  5048               	movf	(___fladd@a+3)^0,w,c
 13813   003D5E  2244               	addwfc	(___fladd@b+3)^0,f,c
 13814   003D60  A044               	btfss	(___fladd@b+3)^0,0,c
 13815   003D62  EFB5  F01E         	goto	u7361
 13816   003D66  EFB7  F01E         	goto	u7360
 13817   003D6A                     u7361:
 13818   003D6A  EF63  F01F         	goto	l817
 13819   003D6E                     u7360:
 13820   003D6E  A050               	btfss	___fladd@grs^0,0,c
 13821   003D70  EFBC  F01E         	goto	u7371
 13822   003D74  EFBE  F01E         	goto	u7370
 13823   003D78                     u7371:
 13824   003D78  EFC4  F01E         	goto	l6010
 13825   003D7C                     u7370:
 13826   003D7C  90D8               	bcf	status,0,c
 13827   003D7E  3050               	rrcf	___fladd@grs^0,w,c
 13828   003D80  0901               	iorlw	1
 13829   003D82  6E50               	movwf	___fladd@grs^0,c
 13830   003D84  EFC6  F01E         	goto	l6012
 13831   003D88                     l6010:
 13832   003D88  90D8               	bcf	status,0,c
 13833   003D8A  3250               	rrcf	___fladd@grs^0,f,c
 13834   003D8C                     l6012:
 13835   003D8C  A041               	btfss	___fladd@b^0,0,c
 13836   003D8E  EFCB  F01E         	goto	u7381
 13837   003D92  EFCD  F01E         	goto	u7380
 13838   003D96                     u7381:
 13839   003D96  EFCE  F01E         	goto	l6016
 13840   003D9A                     u7380:
 13841   003D9A  8E50               	bsf	___fladd@grs^0,7,c
 13842   003D9C                     l6016:
 13843   003D9C  3444               	rlcf	(___fladd@b+3)^0,w,c
 13844   003D9E  3244               	rrcf	(___fladd@b+3)^0,f,c
 13845   003DA0  3243               	rrcf	(___fladd@b+2)^0,f,c
 13846   003DA2  3242               	rrcf	(___fladd@b+1)^0,f,c
 13847   003DA4  3241               	rrcf	___fladd@b^0,f,c
 13848   003DA6  2A4F               	incf	___fladd@bexp^0,f,c
 13849   003DA8  EF63  F01F         	goto	l817
 13850   003DAC                     l6020:
 13851   003DAC  5045               	movf	___fladd@a^0,w,c
 13852   003DAE  5C41               	subwf	___fladd@b^0,w,c
 13853   003DB0  5046               	movf	(___fladd@a+1)^0,w,c
 13854   003DB2  5842               	subwfb	(___fladd@b+1)^0,w,c
 13855   003DB4  5047               	movf	(___fladd@a+2)^0,w,c
 13856   003DB6  5843               	subwfb	(___fladd@b+2)^0,w,c
 13857   003DB8  5044               	movf	(___fladd@b+3)^0,w,c
 13858   003DBA  0A80               	xorlw	128
 13859   003DBC  6E49               	movwf	??___fladd^0,c
 13860   003DBE  5048               	movf	(___fladd@a+3)^0,w,c
 13861   003DC0  0A80               	xorlw	128
 13862   003DC2  5849               	subwfb	??___fladd^0,w,c
 13863   003DC4  B0D8               	btfsc	status,0,c
 13864   003DC6  EFE7  F01E         	goto	u7391
 13865   003DCA  EFE9  F01E         	goto	u7390
 13866   003DCE                     u7391:
 13867   003DCE  EF14  F01F         	goto	l6030
 13868   003DD2                     u7390:
 13869   003DD2  5041               	movf	___fladd@b^0,w,c
 13870   003DD4  5C45               	subwf	___fladd@a^0,w,c
 13871   003DD6  6E49               	movwf	??___fladd^0,c
 13872   003DD8  5042               	movf	(___fladd@b+1)^0,w,c
 13873   003DDA  5846               	subwfb	(___fladd@a+1)^0,w,c
 13874   003DDC  6E4A               	movwf	(??___fladd+1)^0,c
 13875   003DDE  5043               	movf	(___fladd@b+2)^0,w,c
 13876   003DE0  5847               	subwfb	(___fladd@a+2)^0,w,c
 13877   003DE2  6E4B               	movwf	(??___fladd+2)^0,c
 13878   003DE4  5044               	movf	(___fladd@b+3)^0,w,c
 13879   003DE6  5848               	subwfb	(___fladd@a+3)^0,w,c
 13880   003DE8  6E4C               	movwf	(??___fladd+3)^0,c
 13881   003DEA  0EFF               	movlw	255
 13882   003DEC  2449               	addwf	??___fladd^0,w,c
 13883   003DEE  6E41               	movwf	___fladd@b^0,c
 13884   003DF0  0EFF               	movlw	255
 13885   003DF2  204A               	addwfc	(??___fladd+1)^0,w,c
 13886   003DF4  6E42               	movwf	(___fladd@b+1)^0,c
 13887   003DF6  0EFF               	movlw	255
 13888   003DF8  204B               	addwfc	(??___fladd+2)^0,w,c
 13889   003DFA  6E43               	movwf	(___fladd@b+2)^0,c
 13890   003DFC  0EFF               	movlw	255
 13891   003DFE  204C               	addwfc	(??___fladd+3)^0,w,c
 13892   003E00  6E44               	movwf	(___fladd@b+3)^0,c
 13893   003E02  0E80               	movlw	128
 13894   003E04  1A4D               	xorwf	___fladd@signs^0,f,c
 13895   003E06  6C50               	negf	___fladd@grs^0,c
 13896   003E08  5050               	movf	___fladd@grs^0,w,c
 13897   003E0A  A4D8               	btfss	status,2,c
 13898   003E0C  EF0A  F01F         	goto	u7401
 13899   003E10  EF0C  F01F         	goto	u7400
 13900   003E14                     u7401:
 13901   003E14  EF1C  F01F         	goto	l820
 13902   003E18                     u7400:
 13903   003E18  0E01               	movlw	1
 13904   003E1A  2641               	addwf	___fladd@b^0,f,c
 13905   003E1C  0E00               	movlw	0
 13906   003E1E  2242               	addwfc	(___fladd@b+1)^0,f,c
 13907   003E20  2243               	addwfc	(___fladd@b+2)^0,f,c
 13908   003E22  2244               	addwfc	(___fladd@b+3)^0,f,c
 13909   003E24  EF1C  F01F         	goto	l820
 13910   003E28                     l6030:
 13911   003E28  5045               	movf	___fladd@a^0,w,c
 13912   003E2A  5E41               	subwf	___fladd@b^0,f,c
 13913   003E2C  5046               	movf	(___fladd@a+1)^0,w,c
 13914   003E2E  5A42               	subwfb	(___fladd@b+1)^0,f,c
 13915   003E30  5047               	movf	(___fladd@a+2)^0,w,c
 13916   003E32  5A43               	subwfb	(___fladd@b+2)^0,f,c
 13917   003E34  5048               	movf	(___fladd@a+3)^0,w,c
 13918   003E36  5A44               	subwfb	(___fladd@b+3)^0,f,c
 13919   003E38                     l820:
 13920   003E38  5041               	movf	___fladd@b^0,w,c
 13921   003E3A  1042               	iorwf	(___fladd@b+1)^0,w,c
 13922   003E3C  1043               	iorwf	(___fladd@b+2)^0,w,c
 13923   003E3E  1044               	iorwf	(___fladd@b+3)^0,w,c
 13924   003E40  A4D8               	btfss	status,2,c
 13925   003E42  EF25  F01F         	goto	u7411
 13926   003E46  EF27  F01F         	goto	u7410
 13927   003E4A                     u7411:
 13928   003E4A  EF5C  F01F         	goto	l6054
 13929   003E4E                     u7410:
 13930   003E4E  5050               	movf	___fladd@grs^0,w,c
 13931   003E50  A4D8               	btfss	status,2,c
 13932   003E52  EF2D  F01F         	goto	u7421
 13933   003E56  EF2F  F01F         	goto	u7420
 13934   003E5A                     u7421:
 13935   003E5A  EF5C  F01F         	goto	l6054
 13936   003E5E                     u7420:
 13937   003E5E  0E00               	movlw	0
 13938   003E60  6E41               	movwf	?___fladd^0,c
 13939   003E62  0E00               	movlw	0
 13940   003E64  6E42               	movwf	(?___fladd+1)^0,c
 13941   003E66  0E00               	movlw	0
 13942   003E68  6E43               	movwf	(?___fladd+2)^0,c
 13943   003E6A  0E00               	movlw	0
 13944   003E6C  6E44               	movwf	(?___fladd+3)^0,c
 13945   003E6E  EFF5  F01F         	goto	l812
 13946   003E72                     l6038:
 13947   003E72  90D8               	bcf	status,0,c
 13948   003E74  3641               	rlcf	___fladd@b^0,f,c
 13949   003E76  3642               	rlcf	(___fladd@b+1)^0,f,c
 13950   003E78  3643               	rlcf	(___fladd@b+2)^0,f,c
 13951   003E7A  3644               	rlcf	(___fladd@b+3)^0,f,c
 13952   003E7C  AE50               	btfss	___fladd@grs^0,7,c
 13953   003E7E  EF43  F01F         	goto	u7431
 13954   003E82  EF45  F01F         	goto	u7430
 13955   003E86                     u7431:
 13956   003E86  EF46  F01F         	goto	l6044
 13957   003E8A                     u7430:
 13958   003E8A  8041               	bsf	___fladd@b^0,0,c
 13959   003E8C                     l6044:
 13960   003E8C  A050               	btfss	___fladd@grs^0,0,c
 13961   003E8E  EF4B  F01F         	goto	u7441
 13962   003E92  EF4D  F01F         	goto	u7440
 13963   003E96                     u7441:
 13964   003E96  EF51  F01F         	goto	l6048
 13965   003E9A                     u7440:
 13966   003E9A  80D8               	bsf	status,0,c
 13967   003E9C  3650               	rlcf	___fladd@grs^0,f,c
 13968   003E9E  EF53  F01F         	goto	l6050
 13969   003EA2                     l6048:
 13970   003EA2  90D8               	bcf	status,0,c
 13971   003EA4  3650               	rlcf	___fladd@grs^0,f,c
 13972   003EA6                     l6050:
 13973   003EA6  504F               	movf	___fladd@bexp^0,w,c
 13974   003EA8  B4D8               	btfsc	status,2,c
 13975   003EAA  EF59  F01F         	goto	u7451
 13976   003EAE  EF5B  F01F         	goto	u7450
 13977   003EB2                     u7451:
 13978   003EB2  EF5C  F01F         	goto	l6054
 13979   003EB6                     u7450:
 13980   003EB6  064F               	decf	___fladd@bexp^0,f,c
 13981   003EB8                     l6054:
 13982   003EB8  AE43               	btfss	(___fladd@b+2)^0,7,c
 13983   003EBA  EF61  F01F         	goto	u7461
 13984   003EBE  EF63  F01F         	goto	u7460
 13985   003EC2                     u7461:
 13986   003EC2  EF39  F01F         	goto	l6038
 13987   003EC6                     u7460:
 13988   003EC6                     l817:
 13989   003EC6  6A4E               	clrf	___fladd@aexp^0,c
 13990   003EC8  AE50               	btfss	___fladd@grs^0,7,c
 13991   003ECA  EF69  F01F         	goto	u7471
 13992   003ECE  EF6B  F01F         	goto	u7470
 13993   003ED2                     u7471:
 13994   003ED2  EF83  F01F         	goto	l829
 13995   003ED6                     u7470:
 13996   003ED6  C050  F049         	movff	___fladd@grs,??___fladd
 13997   003EDA  0E7F               	movlw	127
 13998   003EDC  1649               	andwf	??___fladd^0,f,c
 13999   003EDE  B4D8               	btfsc	status,2,c
 14000   003EE0  EF74  F01F         	goto	u7481
 14001   003EE4  EF76  F01F         	goto	u7480
 14002   003EE8                     u7481:
 14003   003EE8  EF7A  F01F         	goto	l830
 14004   003EEC                     u7480:
 14005   003EEC                     l6058:
 14006   003EEC  0E01               	movlw	1
 14007   003EEE  6E4E               	movwf	___fladd@aexp^0,c
 14008   003EF0  EF83  F01F         	goto	l829
 14009   003EF4                     l830:
 14010   003EF4  A041               	btfss	___fladd@b^0,0,c
 14011   003EF6  EF7F  F01F         	goto	u7491
 14012   003EFA  EF81  F01F         	goto	u7490
 14013   003EFE                     u7491:
 14014   003EFE  EF83  F01F         	goto	l829
 14015   003F02                     u7490:
 14016   003F02  EF76  F01F         	goto	l6058
 14017   003F06                     l829:
 14018   003F06  504E               	movf	___fladd@aexp^0,w,c
 14019   003F08  B4D8               	btfsc	status,2,c
 14020   003F0A  EF89  F01F         	goto	u7501
 14021   003F0E  EF8B  F01F         	goto	u7500
 14022   003F12                     u7501:
 14023   003F12  EFB6  F01F         	goto	l6070
 14024   003F16                     u7500:
 14025   003F16  0E01               	movlw	1
 14026   003F18  2641               	addwf	___fladd@b^0,f,c
 14027   003F1A  0E00               	movlw	0
 14028   003F1C  2242               	addwfc	(___fladd@b+1)^0,f,c
 14029   003F1E  2243               	addwfc	(___fladd@b+2)^0,f,c
 14030   003F20  2244               	addwfc	(___fladd@b+3)^0,f,c
 14031   003F22  A044               	btfss	(___fladd@b+3)^0,0,c
 14032   003F24  EF96  F01F         	goto	u7511
 14033   003F28  EF98  F01F         	goto	u7510
 14034   003F2C                     u7511:
 14035   003F2C  EFB6  F01F         	goto	l6070
 14036   003F30                     u7510:
 14037   003F30  C041  F049         	movff	___fladd@b,??___fladd
 14038   003F34  C042  F04A         	movff	___fladd@b+1,??___fladd+1
 14039   003F38  C043  F04B         	movff	___fladd@b+2,??___fladd+2
 14040   003F3C  C044  F04C         	movff	___fladd@b+3,??___fladd+3
 14041   003F40  344C               	rlcf	(??___fladd+3)^0,w,c
 14042   003F42  324C               	rrcf	(??___fladd+3)^0,f,c
 14043   003F44  324B               	rrcf	(??___fladd+2)^0,f,c
 14044   003F46  324A               	rrcf	(??___fladd+1)^0,f,c
 14045   003F48  3249               	rrcf	??___fladd^0,f,c
 14046   003F4A  C049  F041         	movff	??___fladd,___fladd@b
 14047   003F4E  C04A  F042         	movff	??___fladd+1,___fladd@b+1
 14048   003F52  C04B  F043         	movff	??___fladd+2,___fladd@b+2
 14049   003F56  C04C  F044         	movff	??___fladd+3,___fladd@b+3
 14050   003F5A  284F               	incf	___fladd@bexp^0,w,c
 14051   003F5C  B4D8               	btfsc	status,2,c
 14052   003F5E  EFB3  F01F         	goto	u7521
 14053   003F62  EFB5  F01F         	goto	u7520
 14054   003F66                     u7521:
 14055   003F66  EFB6  F01F         	goto	l6070
 14056   003F6A                     u7520:
 14057   003F6A  2A4F               	incf	___fladd@bexp^0,f,c
 14058   003F6C                     l6070:
 14059   003F6C  284F               	incf	___fladd@bexp^0,w,c
 14060   003F6E  B4D8               	btfsc	status,2,c
 14061   003F70  EFBC  F01F         	goto	u7531
 14062   003F74  EFBE  F01F         	goto	u7530
 14063   003F78                     u7531:
 14064   003F78  EFC6  F01F         	goto	l6074
 14065   003F7C                     u7530:
 14066   003F7C  504F               	movf	___fladd@bexp^0,w,c
 14067   003F7E  A4D8               	btfss	status,2,c
 14068   003F80  EFC4  F01F         	goto	u7541
 14069   003F84  EFC6  F01F         	goto	u7540
 14070   003F88                     u7541:
 14071   003F88  EFD7  F01F         	goto	l836
 14072   003F8C                     u7540:
 14073   003F8C                     l6074:
 14074   003F8C  0E00               	movlw	0
 14075   003F8E  6E41               	movwf	___fladd@b^0,c
 14076   003F90  0E00               	movlw	0
 14077   003F92  6E42               	movwf	(___fladd@b+1)^0,c
 14078   003F94  0E00               	movlw	0
 14079   003F96  6E43               	movwf	(___fladd@b+2)^0,c
 14080   003F98  0E00               	movlw	0
 14081   003F9A  6E44               	movwf	(___fladd@b+3)^0,c
 14082   003F9C  504F               	movf	___fladd@bexp^0,w,c
 14083   003F9E  A4D8               	btfss	status,2,c
 14084   003FA0  EFD4  F01F         	goto	u7551
 14085   003FA4  EFD6  F01F         	goto	u7550
 14086   003FA8                     u7551:
 14087   003FA8  EFD7  F01F         	goto	l836
 14088   003FAC                     u7550:
 14089   003FAC  6A4D               	clrf	___fladd@signs^0,c
 14090   003FAE                     l836:
 14091   003FAE  A04F               	btfss	___fladd@bexp^0,0,c
 14092   003FB0  EFDC  F01F         	goto	u7561
 14093   003FB4  EFDE  F01F         	goto	u7560
 14094   003FB8                     u7561:
 14095   003FB8  EFE1  F01F         	goto	l6080
 14096   003FBC                     u7560:
 14097   003FBC  8E43               	bsf	(___fladd@b+2)^0,7,c
 14098   003FBE  EFE2  F01F         	goto	l6082
 14099   003FC2                     l6080:
 14100   003FC2  9E43               	bcf	(___fladd@b+2)^0,7,c
 14101   003FC4                     l6082:
 14102   003FC4  90D8               	bcf	status,0,c
 14103   003FC6  304F               	rrcf	___fladd@bexp^0,w,c
 14104   003FC8  6E44               	movwf	(___fladd@b+3)^0,c
 14105   003FCA  AE4D               	btfss	___fladd@signs^0,7,c
 14106   003FCC  EFEA  F01F         	goto	u7571
 14107   003FD0  EFEC  F01F         	goto	u7570
 14108   003FD4                     u7571:
 14109   003FD4  EFED  F01F         	goto	l6088
 14110   003FD8                     u7570:
 14111   003FD8  8E44               	bsf	(___fladd@b+3)^0,7,c
 14112   003FDA                     l6088:
 14113   003FDA  C041  F041         	movff	___fladd@b,?___fladd
 14114   003FDE  C042  F042         	movff	___fladd@b+1,?___fladd+1
 14115   003FE2  C043  F043         	movff	___fladd@b+2,?___fladd+2
 14116   003FE6  C044  F044         	movff	___fladd@b+3,?___fladd+3
 14117   003FEA                     l812:
 14118   003FEA  0012               	return		;funcret
 14119   003FEC                     __end_of___fladd:
 14120                           	callstack 0
 14121                           
 14122 ;; *************** function ___flneg *****************
 14123 ;; Defined at:
 14124 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;  f1              4    0[COMRAM] unsigned char 
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;		None
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  4    0[COMRAM] unsigned char 
 14131 ;; Registers used:
 14132 ;;		wreg, status,2, status,0
 14133 ;; Tracked objects:
 14134 ;;		On entry : 0/0
 14135 ;;		On exit  : 0/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14138 ;;      Params:         4       0       0       0       0       0       0       0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14140 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14141 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14142 ;;Total ram usage:        4 bytes
 14143 ;; Hardware stack levels used: 1
 14144 ;; Hardware stack levels required when called: 1
 14145 ;; This function calls:
 14146 ;;		Nothing
 14147 ;; This function is called by:
 14148 ;;		_efgtoa
 14149 ;;		_powf
 14150 ;; This function uses a non-reentrant model
 14151 ;;
 14152                           
 14153                           	psect	text34
 14154   006D72                     __ptext34:
 14155                           	callstack 0
 14156   006D72                     ___flneg:
 14157                           	callstack 24
 14158   006D72  5001               	movf	___flneg@f1^0,w,c
 14159   006D74  1002               	iorwf	(___flneg@f1+1)^0,w,c
 14160   006D76  1003               	iorwf	(___flneg@f1+2)^0,w,c
 14161   006D78  1004               	iorwf	(___flneg@f1+3)^0,w,c
 14162   006D7A  B4D8               	btfsc	status,2,c
 14163   006D7C  EFC2  F036         	goto	u8251
 14164   006D80  EFC4  F036         	goto	u8250
 14165   006D84                     u8251:
 14166   006D84  EFCC  F036         	goto	l6518
 14167   006D88                     u8250:
 14168   006D88  0E00               	movlw	0
 14169   006D8A  1A01               	xorwf	___flneg@f1^0,f,c
 14170   006D8C  0E00               	movlw	0
 14171   006D8E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 14172   006D90  0E00               	movlw	0
 14173   006D92  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 14174   006D94  0E80               	movlw	128
 14175   006D96  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 14176   006D98                     l6518:
 14177   006D98  C001  F001         	movff	___flneg@f1,?___flneg
 14178   006D9C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 14179   006DA0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 14180   006DA4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 14181   006DA8  0012               	return		;funcret
 14182   006DAA                     __end_of___flneg:
 14183                           	callstack 0
 14184                           
 14185 ;; *************** function ___flmul *****************
 14186 ;; Defined at:
 14187 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 14188 ;; Parameters:    Size  Location     Type
 14189 ;;  b               4   14[COMRAM] unsigned char 
 14190 ;;  a               4   18[COMRAM] unsigned char 
 14191 ;; Auto vars:     Size  Location     Type
 14192 ;;  prod            4   33[COMRAM] struct .
 14193 ;;  grs             4   28[COMRAM] unsigned long 
 14194 ;;  temp            2   37[COMRAM] struct .
 14195 ;;  bexp            1   32[COMRAM] unsigned char 
 14196 ;;  aexp            1   27[COMRAM] unsigned char 
 14197 ;;  sign            1   26[COMRAM] unsigned char 
 14198 ;; Return value:  Size  Location     Type
 14199 ;;                  4   14[COMRAM] unsigned char 
 14200 ;; Registers used:
 14201 ;;		wreg, status,2, status,0, prodl, prodh
 14202 ;; Tracked objects:
 14203 ;;		On entry : 0/0
 14204 ;;		On exit  : 0/0
 14205 ;;		Unchanged: 0/0
 14206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14207 ;;      Params:         8       0       0       0       0       0       0       0       0
 14208 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14209 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14210 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14211 ;;Total ram usage:       25 bytes
 14212 ;; Hardware stack levels used: 1
 14213 ;; Hardware stack levels required when called: 1
 14214 ;; This function calls:
 14215 ;;		Nothing
 14216 ;; This function is called by:
 14217 ;;		_main
 14218 ;;		_Read_Sensors
 14219 ;;		_efgtoa
 14220 ;;		_powf
 14221 ;;		_scalbnf
 14222 ;; This function uses a non-reentrant model
 14223 ;;
 14224                           
 14225                           	psect	text35
 14226   003FEC                     __ptext35:
 14227                           	callstack 0
 14228   003FEC                     ___flmul:
 14229                           	callstack 29
 14230   003FEC  5012               	movf	(___flmul@b+3)^0,w,c
 14231   003FEE  0B80               	andlw	128
 14232   003FF0  6E1B               	movwf	___flmul@sign^0,c
 14233   003FF2  5012               	movf	(___flmul@b+3)^0,w,c
 14234   003FF4  2412               	addwf	(___flmul@b+3)^0,w,c
 14235   003FF6  6E21               	movwf	___flmul@bexp^0,c
 14236   003FF8  AE11               	btfss	(___flmul@b+2)^0,7,c
 14237   003FFA  EF01  F020         	goto	u7981
 14238   003FFE  EF03  F020         	goto	u7980
 14239   004002                     u7981:
 14240   004002  EF04  F020         	goto	l6348
 14241   004006                     u7980:
 14242   004006  8021               	bsf	___flmul@bexp^0,0,c
 14243   004008                     l6348:
 14244   004008  5021               	movf	___flmul@bexp^0,w,c
 14245   00400A  B4D8               	btfsc	status,2,c
 14246   00400C  EF0A  F020         	goto	u7991
 14247   004010  EF0C  F020         	goto	u7990
 14248   004014                     u7991:
 14249   004014  EF1F  F020         	goto	l6356
 14250   004018                     u7990:
 14251   004018  2821               	incf	___flmul@bexp^0,w,c
 14252   00401A  A4D8               	btfss	status,2,c
 14253   00401C  EF12  F020         	goto	u8001
 14254   004020  EF14  F020         	goto	u8000
 14255   004024                     u8001:
 14256   004024  EF1C  F020         	goto	l6354
 14257   004028                     u8000:
 14258   004028  0E00               	movlw	0
 14259   00402A  6E0F               	movwf	___flmul@b^0,c
 14260   00402C  0E00               	movlw	0
 14261   00402E  6E10               	movwf	(___flmul@b+1)^0,c
 14262   004030  0E00               	movlw	0
 14263   004032  6E11               	movwf	(___flmul@b+2)^0,c
 14264   004034  0E00               	movlw	0
 14265   004036  6E12               	movwf	(___flmul@b+3)^0,c
 14266   004038                     l6354:
 14267   004038  8E11               	bsf	(___flmul@b+2)^0,7,c
 14268   00403A  EF27  F020         	goto	l6358
 14269   00403E                     l6356:
 14270   00403E  0E00               	movlw	0
 14271   004040  6E0F               	movwf	___flmul@b^0,c
 14272   004042  0E00               	movlw	0
 14273   004044  6E10               	movwf	(___flmul@b+1)^0,c
 14274   004046  0E00               	movlw	0
 14275   004048  6E11               	movwf	(___flmul@b+2)^0,c
 14276   00404A  0E00               	movlw	0
 14277   00404C  6E12               	movwf	(___flmul@b+3)^0,c
 14278   00404E                     l6358:
 14279   00404E  5016               	movf	(___flmul@a+3)^0,w,c
 14280   004050  0B80               	andlw	128
 14281   004052  1A1B               	xorwf	___flmul@sign^0,f,c
 14282   004054  5016               	movf	(___flmul@a+3)^0,w,c
 14283   004056  2416               	addwf	(___flmul@a+3)^0,w,c
 14284   004058  6E1C               	movwf	___flmul@aexp^0,c
 14285   00405A  AE15               	btfss	(___flmul@a+2)^0,7,c
 14286   00405C  EF32  F020         	goto	u8011
 14287   004060  EF34  F020         	goto	u8010
 14288   004064                     u8011:
 14289   004064  EF35  F020         	goto	l6366
 14290   004068                     u8010:
 14291   004068  801C               	bsf	___flmul@aexp^0,0,c
 14292   00406A                     l6366:
 14293   00406A  501C               	movf	___flmul@aexp^0,w,c
 14294   00406C  B4D8               	btfsc	status,2,c
 14295   00406E  EF3B  F020         	goto	u8021
 14296   004072  EF3D  F020         	goto	u8020
 14297   004076                     u8021:
 14298   004076  EF50  F020         	goto	l6374
 14299   00407A                     u8020:
 14300   00407A  281C               	incf	___flmul@aexp^0,w,c
 14301   00407C  A4D8               	btfss	status,2,c
 14302   00407E  EF43  F020         	goto	u8031
 14303   004082  EF45  F020         	goto	u8030
 14304   004086                     u8031:
 14305   004086  EF4D  F020         	goto	l6372
 14306   00408A                     u8030:
 14307   00408A  0E00               	movlw	0
 14308   00408C  6E13               	movwf	___flmul@a^0,c
 14309   00408E  0E00               	movlw	0
 14310   004090  6E14               	movwf	(___flmul@a+1)^0,c
 14311   004092  0E00               	movlw	0
 14312   004094  6E15               	movwf	(___flmul@a+2)^0,c
 14313   004096  0E00               	movlw	0
 14314   004098  6E16               	movwf	(___flmul@a+3)^0,c
 14315   00409A                     l6372:
 14316   00409A  8E15               	bsf	(___flmul@a+2)^0,7,c
 14317   00409C  EF58  F020         	goto	l889
 14318   0040A0                     l6374:
 14319   0040A0  0E00               	movlw	0
 14320   0040A2  6E13               	movwf	___flmul@a^0,c
 14321   0040A4  0E00               	movlw	0
 14322   0040A6  6E14               	movwf	(___flmul@a+1)^0,c
 14323   0040A8  0E00               	movlw	0
 14324   0040AA  6E15               	movwf	(___flmul@a+2)^0,c
 14325   0040AC  0E00               	movlw	0
 14326   0040AE  6E16               	movwf	(___flmul@a+3)^0,c
 14327   0040B0                     l889:
 14328   0040B0  501C               	movf	___flmul@aexp^0,w,c
 14329   0040B2  B4D8               	btfsc	status,2,c
 14330   0040B4  EF5E  F020         	goto	u8041
 14331   0040B8  EF60  F020         	goto	u8040
 14332   0040BC                     u8041:
 14333   0040BC  EF68  F020         	goto	l6378
 14334   0040C0                     u8040:
 14335   0040C0  5021               	movf	___flmul@bexp^0,w,c
 14336   0040C2  A4D8               	btfss	status,2,c
 14337   0040C4  EF66  F020         	goto	u8051
 14338   0040C8  EF68  F020         	goto	u8050
 14339   0040CC                     u8051:
 14340   0040CC  EF72  F020         	goto	l6382
 14341   0040D0                     u8050:
 14342   0040D0                     l6378:
 14343   0040D0  0E00               	movlw	0
 14344   0040D2  6E0F               	movwf	?___flmul^0,c
 14345   0040D4  0E00               	movlw	0
 14346   0040D6  6E10               	movwf	(?___flmul+1)^0,c
 14347   0040D8  0E00               	movlw	0
 14348   0040DA  6E11               	movwf	(?___flmul+2)^0,c
 14349   0040DC  0E00               	movlw	0
 14350   0040DE  6E12               	movwf	(?___flmul+3)^0,c
 14351   0040E0  EF08  F022         	goto	l893
 14352   0040E4                     l6382:
 14353   0040E4  5015               	movf	(___flmul@a+2)^0,w,c
 14354   0040E6  020F               	mulwf	___flmul@b^0,c
 14355   0040E8  CFF3 F026          	movff	prodl,___flmul@temp
 14356   0040EC  CFF4 F027          	movff	prodh,___flmul@temp+1
 14357   0040F0  5026               	movf	___flmul@temp^0,w,c
 14358   0040F2  6E1D               	movwf	___flmul@grs^0,c
 14359   0040F4  6A1E               	clrf	(___flmul@grs+1)^0,c
 14360   0040F6  6A1F               	clrf	(___flmul@grs+2)^0,c
 14361   0040F8  6A20               	clrf	(___flmul@grs+3)^0,c
 14362   0040FA  5027               	movf	(___flmul@temp+1)^0,w,c
 14363   0040FC  6E22               	movwf	___flmul@prod^0,c
 14364   0040FE  6A23               	clrf	(___flmul@prod+1)^0,c
 14365   004100  6A24               	clrf	(___flmul@prod+2)^0,c
 14366   004102  6A25               	clrf	(___flmul@prod+3)^0,c
 14367   004104  5014               	movf	(___flmul@a+1)^0,w,c
 14368   004106  0210               	mulwf	(___flmul@b+1)^0,c
 14369   004108  CFF3 F026          	movff	prodl,___flmul@temp
 14370   00410C  CFF4 F027          	movff	prodh,___flmul@temp+1
 14371   004110  5026               	movf	___flmul@temp^0,w,c
 14372   004112  261D               	addwf	___flmul@grs^0,f,c
 14373   004114  0E00               	movlw	0
 14374   004116  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14375   004118  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14376   00411A  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14377   00411C  5027               	movf	(___flmul@temp+1)^0,w,c
 14378   00411E  2622               	addwf	___flmul@prod^0,f,c
 14379   004120  0E00               	movlw	0
 14380   004122  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14381   004124  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14382   004126  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14383   004128  5013               	movf	___flmul@a^0,w,c
 14384   00412A  0211               	mulwf	(___flmul@b+2)^0,c
 14385   00412C  CFF3 F026          	movff	prodl,___flmul@temp
 14386   004130  CFF4 F027          	movff	prodh,___flmul@temp+1
 14387   004134  5026               	movf	___flmul@temp^0,w,c
 14388   004136  261D               	addwf	___flmul@grs^0,f,c
 14389   004138  0E00               	movlw	0
 14390   00413A  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14391   00413C  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14392   00413E  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14393   004140  5027               	movf	(___flmul@temp+1)^0,w,c
 14394   004142  2622               	addwf	___flmul@prod^0,f,c
 14395   004144  0E00               	movlw	0
 14396   004146  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14397   004148  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14398   00414A  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14399   00414C  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14400   004150  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14401   004154  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14402   004158  6A1D               	clrf	___flmul@grs^0,c
 14403   00415A  5013               	movf	___flmul@a^0,w,c
 14404   00415C  0210               	mulwf	(___flmul@b+1)^0,c
 14405   00415E  CFF3 F026          	movff	prodl,___flmul@temp
 14406   004162  CFF4 F027          	movff	prodh,___flmul@temp+1
 14407   004166  5026               	movf	___flmul@temp^0,w,c
 14408   004168  261D               	addwf	___flmul@grs^0,f,c
 14409   00416A  5027               	movf	(___flmul@temp+1)^0,w,c
 14410   00416C  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14411   00416E  0E00               	movlw	0
 14412   004170  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14413   004172  0E00               	movlw	0
 14414   004174  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14415   004176  5014               	movf	(___flmul@a+1)^0,w,c
 14416   004178  020F               	mulwf	___flmul@b^0,c
 14417   00417A  CFF3 F026          	movff	prodl,___flmul@temp
 14418   00417E  CFF4 F027          	movff	prodh,___flmul@temp+1
 14419   004182  5026               	movf	___flmul@temp^0,w,c
 14420   004184  261D               	addwf	___flmul@grs^0,f,c
 14421   004186  5027               	movf	(___flmul@temp+1)^0,w,c
 14422   004188  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14423   00418A  0E00               	movlw	0
 14424   00418C  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14425   00418E  0E00               	movlw	0
 14426   004190  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14427   004192  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14428   004196  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14429   00419A  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14430   00419E  6A1D               	clrf	___flmul@grs^0,c
 14431   0041A0  5013               	movf	___flmul@a^0,w,c
 14432   0041A2  020F               	mulwf	___flmul@b^0,c
 14433   0041A4  CFF3 F026          	movff	prodl,___flmul@temp
 14434   0041A8  CFF4 F027          	movff	prodh,___flmul@temp+1
 14435   0041AC  5026               	movf	___flmul@temp^0,w,c
 14436   0041AE  261D               	addwf	___flmul@grs^0,f,c
 14437   0041B0  5027               	movf	(___flmul@temp+1)^0,w,c
 14438   0041B2  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14439   0041B4  0E00               	movlw	0
 14440   0041B6  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14441   0041B8  0E00               	movlw	0
 14442   0041BA  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14443   0041BC  5015               	movf	(___flmul@a+2)^0,w,c
 14444   0041BE  0210               	mulwf	(___flmul@b+1)^0,c
 14445   0041C0  CFF3 F026          	movff	prodl,___flmul@temp
 14446   0041C4  CFF4 F027          	movff	prodh,___flmul@temp+1
 14447   0041C8  5026               	movf	___flmul@temp^0,w,c
 14448   0041CA  2622               	addwf	___flmul@prod^0,f,c
 14449   0041CC  5027               	movf	(___flmul@temp+1)^0,w,c
 14450   0041CE  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14451   0041D0  0E00               	movlw	0
 14452   0041D2  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14453   0041D4  0E00               	movlw	0
 14454   0041D6  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14455   0041D8  5014               	movf	(___flmul@a+1)^0,w,c
 14456   0041DA  0211               	mulwf	(___flmul@b+2)^0,c
 14457   0041DC  CFF3 F026          	movff	prodl,___flmul@temp
 14458   0041E0  CFF4 F027          	movff	prodh,___flmul@temp+1
 14459   0041E4  5026               	movf	___flmul@temp^0,w,c
 14460   0041E6  2622               	addwf	___flmul@prod^0,f,c
 14461   0041E8  5027               	movf	(___flmul@temp+1)^0,w,c
 14462   0041EA  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14463   0041EC  0E00               	movlw	0
 14464   0041EE  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14465   0041F0  0E00               	movlw	0
 14466   0041F2  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14467   0041F4  5015               	movf	(___flmul@a+2)^0,w,c
 14468   0041F6  0211               	mulwf	(___flmul@b+2)^0,c
 14469   0041F8  CFF3 F026          	movff	prodl,___flmul@temp
 14470   0041FC  CFF4 F027          	movff	prodh,___flmul@temp+1
 14471   004200  5026               	movf	___flmul@temp^0,w,c
 14472   004202  6E17               	movwf	??___flmul^0,c
 14473   004204  5027               	movf	(___flmul@temp+1)^0,w,c
 14474   004206  6E18               	movwf	(??___flmul+1)^0,c
 14475   004208  6A19               	clrf	(??___flmul+2)^0,c
 14476   00420A  6A1A               	clrf	(??___flmul+3)^0,c
 14477   00420C  C019  F01A         	movff	??___flmul+2,??___flmul+3
 14478   004210  C018  F019         	movff	??___flmul+1,??___flmul+2
 14479   004214  C017  F018         	movff	??___flmul,??___flmul+1
 14480   004218  6A17               	clrf	??___flmul^0,c
 14481   00421A  5017               	movf	??___flmul^0,w,c
 14482   00421C  2622               	addwf	___flmul@prod^0,f,c
 14483   00421E  5018               	movf	(??___flmul+1)^0,w,c
 14484   004220  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14485   004222  5019               	movf	(??___flmul+2)^0,w,c
 14486   004224  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14487   004226  501A               	movf	(??___flmul+3)^0,w,c
 14488   004228  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14489   00422A  C01D  F017         	movff	___flmul@grs,??___flmul
 14490   00422E  C01E  F018         	movff	___flmul@grs+1,??___flmul+1
 14491   004232  C01F  F019         	movff	___flmul@grs+2,??___flmul+2
 14492   004236  C020  F01A         	movff	___flmul@grs+3,??___flmul+3
 14493   00423A  0E19               	movlw	25
 14494   00423C  EF25  F021         	goto	u8060
 14495   004240                     u8065:
 14496   004240  90D8               	bcf	status,0,c
 14497   004242  321A               	rrcf	(??___flmul+3)^0,f,c
 14498   004244  3219               	rrcf	(??___flmul+2)^0,f,c
 14499   004246  3218               	rrcf	(??___flmul+1)^0,f,c
 14500   004248  3217               	rrcf	??___flmul^0,f,c
 14501   00424A                     u8060:
 14502   00424A  2EE8               	decfsz	wreg,f,c
 14503   00424C  EF20  F021         	goto	u8065
 14504   004250  5017               	movf	??___flmul^0,w,c
 14505   004252  2622               	addwf	___flmul@prod^0,f,c
 14506   004254  5018               	movf	(??___flmul+1)^0,w,c
 14507   004256  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14508   004258  5019               	movf	(??___flmul+2)^0,w,c
 14509   00425A  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14510   00425C  501A               	movf	(??___flmul+3)^0,w,c
 14511   00425E  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14512   004260  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14513   004264  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14514   004268  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14515   00426C  6A1D               	clrf	___flmul@grs^0,c
 14516   00426E  501C               	movf	___flmul@aexp^0,w,c
 14517   004270  C021  F017         	movff	___flmul@bexp,??___flmul
 14518   004274  6A18               	clrf	(??___flmul+1)^0,c
 14519   004276  2617               	addwf	??___flmul^0,f,c
 14520   004278  0E00               	movlw	0
 14521   00427A  2218               	addwfc	(??___flmul+1)^0,f,c
 14522   00427C  0E82               	movlw	130
 14523   00427E  2417               	addwf	??___flmul^0,w,c
 14524   004280  6E26               	movwf	___flmul@temp^0,c
 14525   004282  0EFF               	movlw	255
 14526   004284  2018               	addwfc	(??___flmul+1)^0,w,c
 14527   004286  6E27               	movwf	(___flmul@temp+1)^0,c
 14528   004288  EF5B  F021         	goto	l6430
 14529   00428C                     l6424:
 14530   00428C  90D8               	bcf	status,0,c
 14531   00428E  3622               	rlcf	___flmul@prod^0,f,c
 14532   004290  3623               	rlcf	(___flmul@prod+1)^0,f,c
 14533   004292  3624               	rlcf	(___flmul@prod+2)^0,f,c
 14534   004294  3625               	rlcf	(___flmul@prod+3)^0,f,c
 14535   004296  AE20               	btfss	(___flmul@grs+3)^0,7,c
 14536   004298  EF50  F021         	goto	u8071
 14537   00429C  EF52  F021         	goto	u8070
 14538   0042A0                     u8071:
 14539   0042A0  EF53  F021         	goto	l896
 14540   0042A4                     u8070:
 14541   0042A4  8022               	bsf	___flmul@prod^0,0,c
 14542   0042A6                     l896:
 14543   0042A6  90D8               	bcf	status,0,c
 14544   0042A8  361D               	rlcf	___flmul@grs^0,f,c
 14545   0042AA  361E               	rlcf	(___flmul@grs+1)^0,f,c
 14546   0042AC  361F               	rlcf	(___flmul@grs+2)^0,f,c
 14547   0042AE  3620               	rlcf	(___flmul@grs+3)^0,f,c
 14548   0042B0  0626               	decf	___flmul@temp^0,f,c
 14549   0042B2  A0D8               	btfss	status,0,c
 14550   0042B4  0627               	decf	(___flmul@temp+1)^0,f,c
 14551   0042B6                     l6430:
 14552   0042B6  AE24               	btfss	(___flmul@prod+2)^0,7,c
 14553   0042B8  EF60  F021         	goto	u8081
 14554   0042BC  EF62  F021         	goto	u8080
 14555   0042C0                     u8081:
 14556   0042C0  EF46  F021         	goto	l6424
 14557   0042C4                     u8080:
 14558   0042C4  6A1C               	clrf	___flmul@aexp^0,c
 14559   0042C6  AE20               	btfss	(___flmul@grs+3)^0,7,c
 14560   0042C8  EF68  F021         	goto	u8091
 14561   0042CC  EF6A  F021         	goto	u8090
 14562   0042D0                     u8091:
 14563   0042D0  EF8E  F021         	goto	l898
 14564   0042D4                     u8090:
 14565   0042D4  0EFF               	movlw	255
 14566   0042D6  141D               	andwf	___flmul@grs^0,w,c
 14567   0042D8  6E17               	movwf	??___flmul^0,c
 14568   0042DA  0EFF               	movlw	255
 14569   0042DC  141E               	andwf	(___flmul@grs+1)^0,w,c
 14570   0042DE  6E18               	movwf	(??___flmul+1)^0,c
 14571   0042E0  0EFF               	movlw	255
 14572   0042E2  141F               	andwf	(___flmul@grs+2)^0,w,c
 14573   0042E4  6E19               	movwf	(??___flmul+2)^0,c
 14574   0042E6  0E7F               	movlw	127
 14575   0042E8  1420               	andwf	(___flmul@grs+3)^0,w,c
 14576   0042EA  6E1A               	movwf	(??___flmul+3)^0,c
 14577   0042EC  5017               	movf	??___flmul^0,w,c
 14578   0042EE  1018               	iorwf	(??___flmul+1)^0,w,c
 14579   0042F0  1019               	iorwf	(??___flmul+2)^0,w,c
 14580   0042F2  101A               	iorwf	(??___flmul+3)^0,w,c
 14581   0042F4  B4D8               	btfsc	status,2,c
 14582   0042F6  EF7F  F021         	goto	u8101
 14583   0042FA  EF81  F021         	goto	u8100
 14584   0042FE                     u8101:
 14585   0042FE  EF85  F021         	goto	l899
 14586   004302                     u8100:
 14587   004302                     l6434:
 14588   004302  0E01               	movlw	1
 14589   004304  6E1C               	movwf	___flmul@aexp^0,c
 14590   004306  EF8E  F021         	goto	l898
 14591   00430A                     l899:
 14592   00430A  A022               	btfss	___flmul@prod^0,0,c
 14593   00430C  EF8A  F021         	goto	u8111
 14594   004310  EF8C  F021         	goto	u8110
 14595   004314                     u8111:
 14596   004314  EF8E  F021         	goto	l898
 14597   004318                     u8110:
 14598   004318  EF81  F021         	goto	l6434
 14599   00431C                     l898:
 14600   00431C  501C               	movf	___flmul@aexp^0,w,c
 14601   00431E  B4D8               	btfsc	status,2,c
 14602   004320  EF94  F021         	goto	u8121
 14603   004324  EF96  F021         	goto	u8120
 14604   004328                     u8121:
 14605   004328  EFBA  F021         	goto	l6446
 14606   00432C                     u8120:
 14607   00432C  0E01               	movlw	1
 14608   00432E  2622               	addwf	___flmul@prod^0,f,c
 14609   004330  0E00               	movlw	0
 14610   004332  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14611   004334  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14612   004336  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14613   004338  A025               	btfss	(___flmul@prod+3)^0,0,c
 14614   00433A  EFA1  F021         	goto	u8131
 14615   00433E  EFA3  F021         	goto	u8130
 14616   004342                     u8131:
 14617   004342  EFBA  F021         	goto	l6446
 14618   004346                     u8130:
 14619   004346  C022  F017         	movff	___flmul@prod,??___flmul
 14620   00434A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 14621   00434E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 14622   004352  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 14623   004356  341A               	rlcf	(??___flmul+3)^0,w,c
 14624   004358  321A               	rrcf	(??___flmul+3)^0,f,c
 14625   00435A  3219               	rrcf	(??___flmul+2)^0,f,c
 14626   00435C  3218               	rrcf	(??___flmul+1)^0,f,c
 14627   00435E  3217               	rrcf	??___flmul^0,f,c
 14628   004360  C017  F022         	movff	??___flmul,___flmul@prod
 14629   004364  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 14630   004368  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 14631   00436C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 14632   004370  4A26               	infsnz	___flmul@temp^0,f,c
 14633   004372  2A27               	incf	(___flmul@temp+1)^0,f,c
 14634   004374                     l6446:
 14635   004374  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 14636   004376  EFC5  F021         	goto	u8141
 14637   00437A  5027               	movf	(___flmul@temp+1)^0,w,c
 14638   00437C  E108               	bnz	u8140
 14639   00437E  2826               	incf	___flmul@temp^0,w,c
 14640   004380  A0D8               	btfss	status,0,c
 14641   004382  EFC5  F021         	goto	u8141
 14642   004386  EFC7  F021         	goto	u8140
 14643   00438A                     u8141:
 14644   00438A  EFD1  F021         	goto	l6450
 14645   00438E                     u8140:
 14646   00438E  0E00               	movlw	0
 14647   004390  6E22               	movwf	___flmul@prod^0,c
 14648   004392  0E00               	movlw	0
 14649   004394  6E23               	movwf	(___flmul@prod+1)^0,c
 14650   004396  0E80               	movlw	128
 14651   004398  6E24               	movwf	(___flmul@prod+2)^0,c
 14652   00439A  0E7F               	movlw	127
 14653   00439C  6E25               	movwf	(___flmul@prod+3)^0,c
 14654   00439E  EFFE  F021         	goto	l6464
 14655   0043A2                     l6450:
 14656   0043A2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 14657   0043A4  EFDE  F021         	goto	u8150
 14658   0043A8  5027               	movf	(___flmul@temp+1)^0,w,c
 14659   0043AA  E106               	bnz	u8151
 14660   0043AC  0426               	decf	___flmul@temp^0,w,c
 14661   0043AE  B0D8               	btfsc	status,0,c
 14662   0043B0  EFDC  F021         	goto	u8151
 14663   0043B4  EFDE  F021         	goto	u8150
 14664   0043B8                     u8151:
 14665   0043B8  EFE9  F021         	goto	l906
 14666   0043BC                     u8150:
 14667   0043BC  0E00               	movlw	0
 14668   0043BE  6E22               	movwf	___flmul@prod^0,c
 14669   0043C0  0E00               	movlw	0
 14670   0043C2  6E23               	movwf	(___flmul@prod+1)^0,c
 14671   0043C4  0E00               	movlw	0
 14672   0043C6  6E24               	movwf	(___flmul@prod+2)^0,c
 14673   0043C8  0E00               	movlw	0
 14674   0043CA  6E25               	movwf	(___flmul@prod+3)^0,c
 14675   0043CC  6A1B               	clrf	___flmul@sign^0,c
 14676   0043CE  EFFE  F021         	goto	l6464
 14677   0043D2                     l906:
 14678   0043D2  C026  F021         	movff	___flmul@temp,___flmul@bexp
 14679   0043D6  0EFF               	movlw	255
 14680   0043D8  1622               	andwf	___flmul@prod^0,f,c
 14681   0043DA  0EFF               	movlw	255
 14682   0043DC  1623               	andwf	(___flmul@prod+1)^0,f,c
 14683   0043DE  0E7F               	movlw	127
 14684   0043E0  1624               	andwf	(___flmul@prod+2)^0,f,c
 14685   0043E2  0E00               	movlw	0
 14686   0043E4  1625               	andwf	(___flmul@prod+3)^0,f,c
 14687   0043E6  A021               	btfss	___flmul@bexp^0,0,c
 14688   0043E8  EFF8  F021         	goto	u8161
 14689   0043EC  EFFA  F021         	goto	u8160
 14690   0043F0                     u8161:
 14691   0043F0  EFFB  F021         	goto	l6462
 14692   0043F4                     u8160:
 14693   0043F4  8E24               	bsf	(___flmul@prod+2)^0,7,c
 14694   0043F6                     l6462:
 14695   0043F6  90D8               	bcf	status,0,c
 14696   0043F8  3021               	rrcf	___flmul@bexp^0,w,c
 14697   0043FA  6E25               	movwf	(___flmul@prod+3)^0,c
 14698   0043FC                     l6464:
 14699   0043FC  501B               	movf	___flmul@sign^0,w,c
 14700   0043FE  1225               	iorwf	(___flmul@prod+3)^0,f,c
 14701   004400  C022  F00F         	movff	___flmul@prod,?___flmul
 14702   004404  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 14703   004408  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 14704   00440C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 14705   004410                     l893:
 14706   004410  0012               	return		;funcret
 14707   004412                     __end_of___flmul:
 14708                           	callstack 0
 14709                           
 14710 ;; *************** function ___flge *****************
 14711 ;; Defined at:
 14712 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 14713 ;; Parameters:    Size  Location     Type
 14714 ;;  ff1             4    0[BANK0 ] unsigned char 
 14715 ;;  ff2             4    4[BANK0 ] unsigned char 
 14716 ;; Auto vars:     Size  Location     Type
 14717 ;;		None
 14718 ;; Return value:  Size  Location     Type
 14719 ;;		None               void
 14720 ;; Registers used:
 14721 ;;		wreg, status,2, status,0
 14722 ;; Tracked objects:
 14723 ;;		On entry : 0/0
 14724 ;;		On exit  : 0/0
 14725 ;;		Unchanged: 0/0
 14726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14727 ;;      Params:         0       8       0       0       0       0       0       0       0
 14728 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14729 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14730 ;;      Totals:         4       8       0       0       0       0       0       0       0
 14731 ;;Total ram usage:       12 bytes
 14732 ;; Hardware stack levels used: 1
 14733 ;; Hardware stack levels required when called: 1
 14734 ;; This function calls:
 14735 ;;		Nothing
 14736 ;; This function is called by:
 14737 ;;		_Handle_Fire_Events
 14738 ;;		_Read_Sensors
 14739 ;;		_Update_Actuators
 14740 ;;		_efgtoa
 14741 ;;		_powf
 14742 ;; This function uses a non-reentrant model
 14743 ;;
 14744                           
 14745                           	psect	text36
 14746   005EE4                     __ptext36:
 14747                           	callstack 0
 14748   005EE4                     ___flge:
 14749                           	callstack 28
 14750   005EE4  0E00               	movlw	0
 14751   005EE6  0100               	movlb	0	; () banked
 14752   005EE8  1560               	andwf	___flge@ff1& (0+255),w,b
 14753   005EEA  6E59               	movwf	??___flge^0,c
 14754   005EEC  0E00               	movlw	0
 14755   005EEE  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
 14756   005EF0  6E5A               	movwf	(??___flge+1)^0,c
 14757   005EF2  0E80               	movlw	128
 14758   005EF4  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
 14759   005EF6  6E5B               	movwf	(??___flge+2)^0,c
 14760   005EF8  0E7F               	movlw	127
 14761   005EFA  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
 14762   005EFC  6E5C               	movwf	(??___flge+3)^0,c
 14763   005EFE  5059               	movf	??___flge^0,w,c
 14764   005F00  105A               	iorwf	(??___flge+1)^0,w,c
 14765   005F02  105B               	iorwf	(??___flge+2)^0,w,c
 14766   005F04  105C               	iorwf	(??___flge+3)^0,w,c
 14767   005F06  A4D8               	btfss	status,2,c
 14768   005F08  EF88  F02F         	goto	u8201
 14769   005F0C  EF8A  F02F         	goto	u8200
 14770   005F10                     u8201:
 14771   005F10  EF92  F02F         	goto	l6496
 14772   005F14                     u8200:
 14773   005F14                     
 14774                           ; BSR set to: 0
 14775   005F14  0E00               	movlw	0
 14776   005F16  6F60               	movwf	___flge@ff1& (0+255),b
 14777   005F18  0E00               	movlw	0
 14778   005F1A  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 14779   005F1C  0E00               	movlw	0
 14780   005F1E  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 14781   005F20  0E00               	movlw	0
 14782   005F22  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 14783   005F24                     l6496:
 14784                           
 14785                           ; BSR set to: 0
 14786   005F24  0E00               	movlw	0
 14787   005F26  1564               	andwf	___flge@ff2& (0+255),w,b
 14788   005F28  6E59               	movwf	??___flge^0,c
 14789   005F2A  0E00               	movlw	0
 14790   005F2C  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
 14791   005F2E  6E5A               	movwf	(??___flge+1)^0,c
 14792   005F30  0E80               	movlw	128
 14793   005F32  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
 14794   005F34  6E5B               	movwf	(??___flge+2)^0,c
 14795   005F36  0E7F               	movlw	127
 14796   005F38  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
 14797   005F3A  6E5C               	movwf	(??___flge+3)^0,c
 14798   005F3C  5059               	movf	??___flge^0,w,c
 14799   005F3E  105A               	iorwf	(??___flge+1)^0,w,c
 14800   005F40  105B               	iorwf	(??___flge+2)^0,w,c
 14801   005F42  105C               	iorwf	(??___flge+3)^0,w,c
 14802   005F44  A4D8               	btfss	status,2,c
 14803   005F46  EFA7  F02F         	goto	u8211
 14804   005F4A  EFA9  F02F         	goto	u8210
 14805   005F4E                     u8211:
 14806   005F4E  EFB1  F02F         	goto	l6500
 14807   005F52                     u8210:
 14808   005F52                     
 14809                           ; BSR set to: 0
 14810   005F52  0E00               	movlw	0
 14811   005F54  6F64               	movwf	___flge@ff2& (0+255),b
 14812   005F56  0E00               	movlw	0
 14813   005F58  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 14814   005F5A  0E00               	movlw	0
 14815   005F5C  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 14816   005F5E  0E00               	movlw	0
 14817   005F60  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 14818   005F62                     l6500:
 14819                           
 14820                           ; BSR set to: 0
 14821   005F62  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
 14822   005F64  EFB6  F02F         	goto	u8221
 14823   005F68  EFB8  F02F         	goto	u8220
 14824   005F6C                     u8221:
 14825   005F6C  EFC1  F02F         	goto	l6504
 14826   005F70                     u8220:
 14827   005F70                     
 14828                           ; BSR set to: 0
 14829   005F70  6D60               	negf	___flge@ff1& (0+255),b
 14830   005F72  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
 14831   005F74  B0D8               	btfsc	status,0,c
 14832   005F76  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
 14833   005F78  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
 14834   005F7A  B0D8               	btfsc	status,0,c
 14835   005F7C  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
 14836   005F7E  0E80               	movlw	128
 14837   005F80  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
 14838   005F82                     l6504:
 14839                           
 14840                           ; BSR set to: 0
 14841   005F82  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
 14842   005F84  EFC6  F02F         	goto	u8231
 14843   005F88  EFC8  F02F         	goto	u8230
 14844   005F8C                     u8231:
 14845   005F8C  EFD1  F02F         	goto	l540
 14846   005F90                     u8230:
 14847   005F90                     
 14848                           ; BSR set to: 0
 14849   005F90  6D64               	negf	___flge@ff2& (0+255),b
 14850   005F92  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
 14851   005F94  B0D8               	btfsc	status,0,c
 14852   005F96  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
 14853   005F98  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
 14854   005F9A  B0D8               	btfsc	status,0,c
 14855   005F9C  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
 14856   005F9E  0E80               	movlw	128
 14857   005FA0  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
 14858   005FA2                     l540:
 14859                           
 14860                           ; BSR set to: 0
 14861   005FA2  0E00               	movlw	0
 14862   005FA4  1B60               	xorwf	___flge@ff1& (0+255),f,b
 14863   005FA6  0E00               	movlw	0
 14864   005FA8  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
 14865   005FAA  0E00               	movlw	0
 14866   005FAC  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
 14867   005FAE  0E80               	movlw	128
 14868   005FB0  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
 14869   005FB2  0E00               	movlw	0
 14870   005FB4  1B64               	xorwf	___flge@ff2& (0+255),f,b
 14871   005FB6  0E00               	movlw	0
 14872   005FB8  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
 14873   005FBA  0E00               	movlw	0
 14874   005FBC  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
 14875   005FBE  0E80               	movlw	128
 14876   005FC0  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
 14877   005FC2  5164               	movf	___flge@ff2& (0+255),w,b
 14878   005FC4  5D60               	subwf	___flge@ff1& (0+255),w,b
 14879   005FC6  5165               	movf	(___flge@ff2+1)& (0+255),w,b
 14880   005FC8  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
 14881   005FCA  5166               	movf	(___flge@ff2+2)& (0+255),w,b
 14882   005FCC  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
 14883   005FCE  5167               	movf	(___flge@ff2+3)& (0+255),w,b
 14884   005FD0  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
 14885   005FD2  B0D8               	btfsc	status,0,c
 14886   005FD4  EFEE  F02F         	goto	u8241
 14887   005FD8  EFF0  F02F         	goto	u8240
 14888   005FDC                     u8241:
 14889   005FDC  EFF3  F02F         	goto	l6510
 14890   005FE0                     u8240:
 14891   005FE0                     
 14892                           ; BSR set to: 0
 14893   005FE0  90D8               	bcf	status,0,c
 14894   005FE2  EFF4  F02F         	goto	l545
 14895   005FE6                     l6510:
 14896                           
 14897                           ; BSR set to: 0
 14898   005FE6  80D8               	bsf	status,0,c
 14899   005FE8                     l545:
 14900                           
 14901                           ; BSR set to: 0
 14902   005FE8  0012               	return		;funcret
 14903   005FEA                     __end_of___flge:
 14904                           	callstack 0
 14905                           
 14906 ;; *************** function ___fleq *****************
 14907 ;; Defined at:
 14908 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 14909 ;; Parameters:    Size  Location     Type
 14910 ;;  ff1             4    0[COMRAM] unsigned char 
 14911 ;;  ff2             4    4[COMRAM] unsigned char 
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;		None
 14914 ;; Return value:  Size  Location     Type
 14915 ;;		None               void
 14916 ;; Registers used:
 14917 ;;		wreg, status,2, status,0
 14918 ;; Tracked objects:
 14919 ;;		On entry : 0/0
 14920 ;;		On exit  : 0/0
 14921 ;;		Unchanged: 0/0
 14922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14923 ;;      Params:         8       0       0       0       0       0       0       0       0
 14924 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14925 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14926 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14927 ;;Total ram usage:       12 bytes
 14928 ;; Hardware stack levels used: 1
 14929 ;; Hardware stack levels required when called: 1
 14930 ;; This function calls:
 14931 ;;		Nothing
 14932 ;; This function is called by:
 14933 ;;		_efgtoa
 14934 ;; This function uses a non-reentrant model
 14935 ;;
 14936                           
 14937                           	psect	text37
 14938   0067BA                     __ptext37:
 14939                           	callstack 0
 14940   0067BA                     ___fleq:
 14941                           	callstack 24
 14942   0067BA  0E00               	movlw	0
 14943   0067BC  1401               	andwf	___fleq@ff1^0,w,c
 14944   0067BE  6E09               	movwf	??___fleq^0,c
 14945   0067C0  0E00               	movlw	0
 14946   0067C2  1402               	andwf	(___fleq@ff1+1)^0,w,c
 14947   0067C4  6E0A               	movwf	(??___fleq+1)^0,c
 14948   0067C6  0E80               	movlw	128
 14949   0067C8  1403               	andwf	(___fleq@ff1+2)^0,w,c
 14950   0067CA  6E0B               	movwf	(??___fleq+2)^0,c
 14951   0067CC  0E7F               	movlw	127
 14952   0067CE  1404               	andwf	(___fleq@ff1+3)^0,w,c
 14953   0067D0  6E0C               	movwf	(??___fleq+3)^0,c
 14954   0067D2  5009               	movf	??___fleq^0,w,c
 14955   0067D4  100A               	iorwf	(??___fleq+1)^0,w,c
 14956   0067D6  100B               	iorwf	(??___fleq+2)^0,w,c
 14957   0067D8  100C               	iorwf	(??___fleq+3)^0,w,c
 14958   0067DA  A4D8               	btfss	status,2,c
 14959   0067DC  EFF2  F033         	goto	u8171
 14960   0067E0  EFF4  F033         	goto	u8170
 14961   0067E4                     u8171:
 14962   0067E4  EFFC  F033         	goto	l6480
 14963   0067E8                     u8170:
 14964   0067E8  0E00               	movlw	0
 14965   0067EA  6E01               	movwf	___fleq@ff1^0,c
 14966   0067EC  0E00               	movlw	0
 14967   0067EE  6E02               	movwf	(___fleq@ff1+1)^0,c
 14968   0067F0  0E00               	movlw	0
 14969   0067F2  6E03               	movwf	(___fleq@ff1+2)^0,c
 14970   0067F4  0E00               	movlw	0
 14971   0067F6  6E04               	movwf	(___fleq@ff1+3)^0,c
 14972   0067F8                     l6480:
 14973   0067F8  0E00               	movlw	0
 14974   0067FA  1405               	andwf	___fleq@ff2^0,w,c
 14975   0067FC  6E09               	movwf	??___fleq^0,c
 14976   0067FE  0E00               	movlw	0
 14977   006800  1406               	andwf	(___fleq@ff2+1)^0,w,c
 14978   006802  6E0A               	movwf	(??___fleq+1)^0,c
 14979   006804  0E80               	movlw	128
 14980   006806  1407               	andwf	(___fleq@ff2+2)^0,w,c
 14981   006808  6E0B               	movwf	(??___fleq+2)^0,c
 14982   00680A  0E7F               	movlw	127
 14983   00680C  1408               	andwf	(___fleq@ff2+3)^0,w,c
 14984   00680E  6E0C               	movwf	(??___fleq+3)^0,c
 14985   006810  5009               	movf	??___fleq^0,w,c
 14986   006812  100A               	iorwf	(??___fleq+1)^0,w,c
 14987   006814  100B               	iorwf	(??___fleq+2)^0,w,c
 14988   006816  100C               	iorwf	(??___fleq+3)^0,w,c
 14989   006818  A4D8               	btfss	status,2,c
 14990   00681A  EF11  F034         	goto	u8181
 14991   00681E  EF13  F034         	goto	u8180
 14992   006822                     u8181:
 14993   006822  EF1B  F034         	goto	l6484
 14994   006826                     u8180:
 14995   006826  0E00               	movlw	0
 14996   006828  6E05               	movwf	___fleq@ff2^0,c
 14997   00682A  0E00               	movlw	0
 14998   00682C  6E06               	movwf	(___fleq@ff2+1)^0,c
 14999   00682E  0E00               	movlw	0
 15000   006830  6E07               	movwf	(___fleq@ff2+2)^0,c
 15001   006832  0E00               	movlw	0
 15002   006834  6E08               	movwf	(___fleq@ff2+3)^0,c
 15003   006836                     l6484:
 15004   006836  5005               	movf	___fleq@ff2^0,w,c
 15005   006838  1801               	xorwf	___fleq@ff1^0,w,c
 15006   00683A  E10F               	bnz	u8190
 15007   00683C  5006               	movf	(___fleq@ff2+1)^0,w,c
 15008   00683E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 15009   006840  E10C               	bnz	u8190
 15010   006842  5007               	movf	(___fleq@ff2+2)^0,w,c
 15011   006844  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 15012   006846  E109               	bnz	u8190
 15013   006848  5008               	movf	(___fleq@ff2+3)^0,w,c
 15014   00684A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 15015   00684C  B4D8               	btfsc	status,2,c
 15016   00684E  EF2B  F034         	goto	u8191
 15017   006852  EF2D  F034         	goto	u8190
 15018   006856                     u8191:
 15019   006856  EF30  F034         	goto	l6488
 15020   00685A                     u8190:
 15021   00685A  90D8               	bcf	status,0,c
 15022   00685C  EF31  F034         	goto	l534
 15023   006860                     l6488:
 15024   006860  80D8               	bsf	status,0,c
 15025   006862                     l534:
 15026   006862  0012               	return		;funcret
 15027   006864                     __end_of___fleq:
 15028                           	callstack 0
 15029                           
 15030 ;; *************** function ___fldiv *****************
 15031 ;; Defined at:
 15032 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 15033 ;; Parameters:    Size  Location     Type
 15034 ;;  b               4   39[COMRAM] unsigned char 
 15035 ;;  a               4   43[COMRAM] unsigned char 
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;  grs             4   58[COMRAM] unsigned long 
 15038 ;;  rem             4   51[COMRAM] unsigned long 
 15039 ;;  new_exp         2   56[COMRAM] short 
 15040 ;;  aexp            1   63[COMRAM] unsigned char 
 15041 ;;  bexp            1   62[COMRAM] unsigned char 
 15042 ;;  sign            1   55[COMRAM] unsigned char 
 15043 ;; Return value:  Size  Location     Type
 15044 ;;                  4   39[COMRAM] unsigned char 
 15045 ;; Registers used:
 15046 ;;		wreg, status,2, status,0
 15047 ;; Tracked objects:
 15048 ;;		On entry : 0/0
 15049 ;;		On exit  : 0/0
 15050 ;;		Unchanged: 0/0
 15051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15052 ;;      Params:         8       0       0       0       0       0       0       0       0
 15053 ;;      Locals:        13       0       0       0       0       0       0       0       0
 15054 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15055 ;;      Totals:        25       0       0       0       0       0       0       0       0
 15056 ;;Total ram usage:       25 bytes
 15057 ;; Hardware stack levels used: 1
 15058 ;; Hardware stack levels required when called: 1
 15059 ;; This function calls:
 15060 ;;		Nothing
 15061 ;; This function is called by:
 15062 ;;		_main
 15063 ;;		_Read_Sensors
 15064 ;;		_Apply_Filter
 15065 ;;		_efgtoa
 15066 ;;		_powf
 15067 ;; This function uses a non-reentrant model
 15068 ;;
 15069                           
 15070                           	psect	text38
 15071   0047F0                     __ptext38:
 15072                           	callstack 0
 15073   0047F0                     ___fldiv:
 15074                           	callstack 29
 15075   0047F0  502B               	movf	(___fldiv@b+3)^0,w,c
 15076   0047F2  0B80               	andlw	128
 15077   0047F4  6E38               	movwf	___fldiv@sign^0,c
 15078   0047F6  502B               	movf	(___fldiv@b+3)^0,w,c
 15079   0047F8  242B               	addwf	(___fldiv@b+3)^0,w,c
 15080   0047FA  6E3F               	movwf	___fldiv@bexp^0,c
 15081   0047FC  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 15082   0047FE  EF03  F024         	goto	u7751
 15083   004802  EF05  F024         	goto	u7750
 15084   004806                     u7751:
 15085   004806  EF06  F024         	goto	l6212
 15086   00480A                     u7750:
 15087   00480A  803F               	bsf	___fldiv@bexp^0,0,c
 15088   00480C                     l6212:
 15089   00480C  503F               	movf	___fldiv@bexp^0,w,c
 15090   00480E  B4D8               	btfsc	status,2,c
 15091   004810  EF0C  F024         	goto	u7761
 15092   004814  EF0E  F024         	goto	u7760
 15093   004818                     u7761:
 15094   004818  EF22  F024         	goto	l6222
 15095   00481C                     u7760:
 15096   00481C  283F               	incf	___fldiv@bexp^0,w,c
 15097   00481E  A4D8               	btfss	status,2,c
 15098   004820  EF14  F024         	goto	u7771
 15099   004824  EF16  F024         	goto	u7770
 15100   004828                     u7771:
 15101   004828  EF1E  F024         	goto	l6218
 15102   00482C                     u7770:
 15103   00482C  0E00               	movlw	0
 15104   00482E  6E28               	movwf	___fldiv@b^0,c
 15105   004830  0E00               	movlw	0
 15106   004832  6E29               	movwf	(___fldiv@b+1)^0,c
 15107   004834  0E00               	movlw	0
 15108   004836  6E2A               	movwf	(___fldiv@b+2)^0,c
 15109   004838  0E00               	movlw	0
 15110   00483A  6E2B               	movwf	(___fldiv@b+3)^0,c
 15111   00483C                     l6218:
 15112   00483C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 15113   00483E  6A2B               	clrf	(___fldiv@b+3)^0,c
 15114   004840  EF2A  F024         	goto	l6224
 15115   004844                     l6222:
 15116   004844  0E00               	movlw	0
 15117   004846  6E28               	movwf	___fldiv@b^0,c
 15118   004848  0E00               	movlw	0
 15119   00484A  6E29               	movwf	(___fldiv@b+1)^0,c
 15120   00484C  0E00               	movlw	0
 15121   00484E  6E2A               	movwf	(___fldiv@b+2)^0,c
 15122   004850  0E00               	movlw	0
 15123   004852  6E2B               	movwf	(___fldiv@b+3)^0,c
 15124   004854                     l6224:
 15125   004854  502F               	movf	(___fldiv@a+3)^0,w,c
 15126   004856  0B80               	andlw	128
 15127   004858  1A38               	xorwf	___fldiv@sign^0,f,c
 15128   00485A  502F               	movf	(___fldiv@a+3)^0,w,c
 15129   00485C  242F               	addwf	(___fldiv@a+3)^0,w,c
 15130   00485E  6E40               	movwf	___fldiv@aexp^0,c
 15131   004860  AE2E               	btfss	(___fldiv@a+2)^0,7,c
 15132   004862  EF35  F024         	goto	u7781
 15133   004866  EF37  F024         	goto	u7780
 15134   00486A                     u7781:
 15135   00486A  EF38  F024         	goto	l6232
 15136   00486E                     u7780:
 15137   00486E  8040               	bsf	___fldiv@aexp^0,0,c
 15138   004870                     l6232:
 15139   004870  5040               	movf	___fldiv@aexp^0,w,c
 15140   004872  B4D8               	btfsc	status,2,c
 15141   004874  EF3E  F024         	goto	u7791
 15142   004878  EF40  F024         	goto	u7790
 15143   00487C                     u7791:
 15144   00487C  EF54  F024         	goto	l6242
 15145   004880                     u7790:
 15146   004880  2840               	incf	___fldiv@aexp^0,w,c
 15147   004882  A4D8               	btfss	status,2,c
 15148   004884  EF46  F024         	goto	u7801
 15149   004888  EF48  F024         	goto	u7800
 15150   00488C                     u7801:
 15151   00488C  EF50  F024         	goto	l6238
 15152   004890                     u7800:
 15153   004890  0E00               	movlw	0
 15154   004892  6E2C               	movwf	___fldiv@a^0,c
 15155   004894  0E00               	movlw	0
 15156   004896  6E2D               	movwf	(___fldiv@a+1)^0,c
 15157   004898  0E00               	movlw	0
 15158   00489A  6E2E               	movwf	(___fldiv@a+2)^0,c
 15159   00489C  0E00               	movlw	0
 15160   00489E  6E2F               	movwf	(___fldiv@a+3)^0,c
 15161   0048A0                     l6238:
 15162   0048A0  8E2E               	bsf	(___fldiv@a+2)^0,7,c
 15163   0048A2  6A2F               	clrf	(___fldiv@a+3)^0,c
 15164   0048A4  EF5C  F024         	goto	l6244
 15165   0048A8                     l6242:
 15166   0048A8  0E00               	movlw	0
 15167   0048AA  6E2C               	movwf	___fldiv@a^0,c
 15168   0048AC  0E00               	movlw	0
 15169   0048AE  6E2D               	movwf	(___fldiv@a+1)^0,c
 15170   0048B0  0E00               	movlw	0
 15171   0048B2  6E2E               	movwf	(___fldiv@a+2)^0,c
 15172   0048B4  0E00               	movlw	0
 15173   0048B6  6E2F               	movwf	(___fldiv@a+3)^0,c
 15174   0048B8                     l6244:
 15175   0048B8  502C               	movf	___fldiv@a^0,w,c
 15176   0048BA  102D               	iorwf	(___fldiv@a+1)^0,w,c
 15177   0048BC  102E               	iorwf	(___fldiv@a+2)^0,w,c
 15178   0048BE  102F               	iorwf	(___fldiv@a+3)^0,w,c
 15179   0048C0  A4D8               	btfss	status,2,c
 15180   0048C2  EF65  F024         	goto	u7811
 15181   0048C6  EF67  F024         	goto	u7810
 15182   0048CA                     u7811:
 15183   0048CA  EF7F  F024         	goto	l6256
 15184   0048CE                     u7810:
 15185   0048CE  0E00               	movlw	0
 15186   0048D0  6E28               	movwf	___fldiv@b^0,c
 15187   0048D2  0E00               	movlw	0
 15188   0048D4  6E29               	movwf	(___fldiv@b+1)^0,c
 15189   0048D6  0E00               	movlw	0
 15190   0048D8  6E2A               	movwf	(___fldiv@b+2)^0,c
 15191   0048DA  0E00               	movlw	0
 15192   0048DC  6E2B               	movwf	(___fldiv@b+3)^0,c
 15193   0048DE  0E80               	movlw	128
 15194   0048E0  122A               	iorwf	(___fldiv@b+2)^0,f,c
 15195   0048E2  0E7F               	movlw	127
 15196   0048E4  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15197   0048E6                     l6250:
 15198   0048E6  5038               	movf	___fldiv@sign^0,w,c
 15199   0048E8  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15200   0048EA  C028  F028         	movff	___fldiv@b,?___fldiv
 15201   0048EE  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
 15202   0048F2  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
 15203   0048F6  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
 15204   0048FA  EFBF  F025         	goto	l857
 15205   0048FE                     l6256:
 15206   0048FE  503F               	movf	___fldiv@bexp^0,w,c
 15207   004900  A4D8               	btfss	status,2,c
 15208   004902  EF85  F024         	goto	u7821
 15209   004906  EF87  F024         	goto	u7820
 15210   00490A                     u7821:
 15211   00490A  EF91  F024         	goto	l6264
 15212   00490E                     u7820:
 15213   00490E  0E00               	movlw	0
 15214   004910  6E28               	movwf	?___fldiv^0,c
 15215   004912  0E00               	movlw	0
 15216   004914  6E29               	movwf	(?___fldiv+1)^0,c
 15217   004916  0E00               	movlw	0
 15218   004918  6E2A               	movwf	(?___fldiv+2)^0,c
 15219   00491A  0E00               	movlw	0
 15220   00491C  6E2B               	movwf	(?___fldiv+3)^0,c
 15221   00491E  EFBF  F025         	goto	l857
 15222   004922                     l6264:
 15223   004922  5040               	movf	___fldiv@aexp^0,w,c
 15224   004924  C03F  F030         	movff	___fldiv@bexp,??___fldiv
 15225   004928  6A31               	clrf	(??___fldiv+1)^0,c
 15226   00492A  5E30               	subwf	??___fldiv^0,f,c
 15227   00492C  0E00               	movlw	0
 15228   00492E  5A31               	subwfb	(??___fldiv+1)^0,f,c
 15229   004930  0E7F               	movlw	127
 15230   004932  2430               	addwf	??___fldiv^0,w,c
 15231   004934  6E39               	movwf	___fldiv@new_exp^0,c
 15232   004936  0E00               	movlw	0
 15233   004938  2031               	addwfc	(??___fldiv+1)^0,w,c
 15234   00493A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15235   00493C  C028  F034         	movff	___fldiv@b,___fldiv@rem
 15236   004940  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
 15237   004944  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
 15238   004948  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
 15239   00494C  0E00               	movlw	0
 15240   00494E  6E28               	movwf	___fldiv@b^0,c
 15241   004950  0E00               	movlw	0
 15242   004952  6E29               	movwf	(___fldiv@b+1)^0,c
 15243   004954  0E00               	movlw	0
 15244   004956  6E2A               	movwf	(___fldiv@b+2)^0,c
 15245   004958  0E00               	movlw	0
 15246   00495A  6E2B               	movwf	(___fldiv@b+3)^0,c
 15247   00495C  0E00               	movlw	0
 15248   00495E  6E3B               	movwf	___fldiv@grs^0,c
 15249   004960  0E00               	movlw	0
 15250   004962  6E3C               	movwf	(___fldiv@grs+1)^0,c
 15251   004964  0E00               	movlw	0
 15252   004966  6E3D               	movwf	(___fldiv@grs+2)^0,c
 15253   004968  0E00               	movlw	0
 15254   00496A  6E3E               	movwf	(___fldiv@grs+3)^0,c
 15255   00496C  6A40               	clrf	___fldiv@aexp^0,c
 15256   00496E  EFF1  F024         	goto	l859
 15257   004972                     l6274:
 15258   004972  5040               	movf	___fldiv@aexp^0,w,c
 15259   004974  B4D8               	btfsc	status,2,c
 15260   004976  EFBF  F024         	goto	u7831
 15261   00497A  EFC1  F024         	goto	u7830
 15262   00497E                     u7831:
 15263   00497E  EFD8  F024         	goto	l6282
 15264   004982                     u7830:
 15265   004982  90D8               	bcf	status,0,c
 15266   004984  3634               	rlcf	___fldiv@rem^0,f,c
 15267   004986  3635               	rlcf	(___fldiv@rem+1)^0,f,c
 15268   004988  3636               	rlcf	(___fldiv@rem+2)^0,f,c
 15269   00498A  3637               	rlcf	(___fldiv@rem+3)^0,f,c
 15270   00498C  90D8               	bcf	status,0,c
 15271   00498E  3628               	rlcf	___fldiv@b^0,f,c
 15272   004990  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15273   004992  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15274   004994  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15275   004996  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15276   004998  EFD0  F024         	goto	u7841
 15277   00499C  EFD2  F024         	goto	u7840
 15278   0049A0                     u7841:
 15279   0049A0  EFD3  F024         	goto	l862
 15280   0049A4                     u7840:
 15281   0049A4  8028               	bsf	___fldiv@b^0,0,c
 15282   0049A6                     l862:
 15283   0049A6  90D8               	bcf	status,0,c
 15284   0049A8  363B               	rlcf	___fldiv@grs^0,f,c
 15285   0049AA  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15286   0049AC  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15287   0049AE  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15288   0049B0                     l6282:
 15289   0049B0  502C               	movf	___fldiv@a^0,w,c
 15290   0049B2  5C34               	subwf	___fldiv@rem^0,w,c
 15291   0049B4  502D               	movf	(___fldiv@a+1)^0,w,c
 15292   0049B6  5835               	subwfb	(___fldiv@rem+1)^0,w,c
 15293   0049B8  502E               	movf	(___fldiv@a+2)^0,w,c
 15294   0049BA  5836               	subwfb	(___fldiv@rem+2)^0,w,c
 15295   0049BC  502F               	movf	(___fldiv@a+3)^0,w,c
 15296   0049BE  5837               	subwfb	(___fldiv@rem+3)^0,w,c
 15297   0049C0  A0D8               	btfss	status,0,c
 15298   0049C2  EFE5  F024         	goto	u7851
 15299   0049C6  EFE7  F024         	goto	u7850
 15300   0049CA                     u7851:
 15301   0049CA  EFF0  F024         	goto	l6288
 15302   0049CE                     u7850:
 15303   0049CE  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
 15304   0049D0  502C               	movf	___fldiv@a^0,w,c
 15305   0049D2  5E34               	subwf	___fldiv@rem^0,f,c
 15306   0049D4  502D               	movf	(___fldiv@a+1)^0,w,c
 15307   0049D6  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
 15308   0049D8  502E               	movf	(___fldiv@a+2)^0,w,c
 15309   0049DA  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
 15310   0049DC  502F               	movf	(___fldiv@a+3)^0,w,c
 15311   0049DE  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
 15312   0049E0                     l6288:
 15313   0049E0  2A40               	incf	___fldiv@aexp^0,f,c
 15314   0049E2                     l859:
 15315   0049E2  0E19               	movlw	25
 15316   0049E4  6440               	cpfsgt	___fldiv@aexp^0,c
 15317   0049E6  EFF7  F024         	goto	u7861
 15318   0049EA  EFF9  F024         	goto	u7860
 15319   0049EE                     u7861:
 15320   0049EE  EFB9  F024         	goto	l6274
 15321   0049F2                     u7860:
 15322   0049F2  5034               	movf	___fldiv@rem^0,w,c
 15323   0049F4  1035               	iorwf	(___fldiv@rem+1)^0,w,c
 15324   0049F6  1036               	iorwf	(___fldiv@rem+2)^0,w,c
 15325   0049F8  1037               	iorwf	(___fldiv@rem+3)^0,w,c
 15326   0049FA  B4D8               	btfsc	status,2,c
 15327   0049FC  EF02  F025         	goto	u7871
 15328   004A00  EF04  F025         	goto	u7870
 15329   004A04                     u7871:
 15330   004A04  EF1C  F025         	goto	l6300
 15331   004A08                     u7870:
 15332   004A08  803B               	bsf	___fldiv@grs^0,0,c
 15333   004A0A  EF1C  F025         	goto	l6300
 15334   004A0E                     l6294:
 15335   004A0E  90D8               	bcf	status,0,c
 15336   004A10  3628               	rlcf	___fldiv@b^0,f,c
 15337   004A12  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15338   004A14  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15339   004A16  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15340   004A18  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15341   004A1A  EF11  F025         	goto	u7881
 15342   004A1E  EF13  F025         	goto	u7880
 15343   004A22                     u7881:
 15344   004A22  EF14  F025         	goto	l868
 15345   004A26                     u7880:
 15346   004A26  8028               	bsf	___fldiv@b^0,0,c
 15347   004A28                     l868:
 15348   004A28  90D8               	bcf	status,0,c
 15349   004A2A  363B               	rlcf	___fldiv@grs^0,f,c
 15350   004A2C  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15351   004A2E  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15352   004A30  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15353   004A32  0639               	decf	___fldiv@new_exp^0,f,c
 15354   004A34  A0D8               	btfss	status,0,c
 15355   004A36  063A               	decf	(___fldiv@new_exp+1)^0,f,c
 15356   004A38                     l6300:
 15357   004A38  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 15358   004A3A  EF21  F025         	goto	u7891
 15359   004A3E  EF23  F025         	goto	u7890
 15360   004A42                     u7891:
 15361   004A42  EF07  F025         	goto	l6294
 15362   004A46                     u7890:
 15363   004A46  6A40               	clrf	___fldiv@aexp^0,c
 15364   004A48  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15365   004A4A  EF29  F025         	goto	u7901
 15366   004A4E  EF2B  F025         	goto	u7900
 15367   004A52                     u7901:
 15368   004A52  EF4F  F025         	goto	l870
 15369   004A56                     u7900:
 15370   004A56  0EFF               	movlw	255
 15371   004A58  143B               	andwf	___fldiv@grs^0,w,c
 15372   004A5A  6E30               	movwf	??___fldiv^0,c
 15373   004A5C  0EFF               	movlw	255
 15374   004A5E  143C               	andwf	(___fldiv@grs+1)^0,w,c
 15375   004A60  6E31               	movwf	(??___fldiv+1)^0,c
 15376   004A62  0EFF               	movlw	255
 15377   004A64  143D               	andwf	(___fldiv@grs+2)^0,w,c
 15378   004A66  6E32               	movwf	(??___fldiv+2)^0,c
 15379   004A68  0E7F               	movlw	127
 15380   004A6A  143E               	andwf	(___fldiv@grs+3)^0,w,c
 15381   004A6C  6E33               	movwf	(??___fldiv+3)^0,c
 15382   004A6E  5030               	movf	??___fldiv^0,w,c
 15383   004A70  1031               	iorwf	(??___fldiv+1)^0,w,c
 15384   004A72  1032               	iorwf	(??___fldiv+2)^0,w,c
 15385   004A74  1033               	iorwf	(??___fldiv+3)^0,w,c
 15386   004A76  B4D8               	btfsc	status,2,c
 15387   004A78  EF40  F025         	goto	u7911
 15388   004A7C  EF42  F025         	goto	u7910
 15389   004A80                     u7911:
 15390   004A80  EF46  F025         	goto	l871
 15391   004A84                     u7910:
 15392   004A84                     l6304:
 15393   004A84  0E01               	movlw	1
 15394   004A86  6E40               	movwf	___fldiv@aexp^0,c
 15395   004A88  EF4F  F025         	goto	l870
 15396   004A8C                     l871:
 15397   004A8C  A028               	btfss	___fldiv@b^0,0,c
 15398   004A8E  EF4B  F025         	goto	u7921
 15399   004A92  EF4D  F025         	goto	u7920
 15400   004A96                     u7921:
 15401   004A96  EF4F  F025         	goto	l870
 15402   004A9A                     u7920:
 15403   004A9A  EF42  F025         	goto	l6304
 15404   004A9E                     l870:
 15405   004A9E  5040               	movf	___fldiv@aexp^0,w,c
 15406   004AA0  B4D8               	btfsc	status,2,c
 15407   004AA2  EF55  F025         	goto	u7931
 15408   004AA6  EF57  F025         	goto	u7930
 15409   004AAA                     u7931:
 15410   004AAA  EF7B  F025         	goto	l6316
 15411   004AAE                     u7930:
 15412   004AAE  0E01               	movlw	1
 15413   004AB0  2628               	addwf	___fldiv@b^0,f,c
 15414   004AB2  0E00               	movlw	0
 15415   004AB4  2229               	addwfc	(___fldiv@b+1)^0,f,c
 15416   004AB6  222A               	addwfc	(___fldiv@b+2)^0,f,c
 15417   004AB8  222B               	addwfc	(___fldiv@b+3)^0,f,c
 15418   004ABA  A02B               	btfss	(___fldiv@b+3)^0,0,c
 15419   004ABC  EF62  F025         	goto	u7941
 15420   004AC0  EF64  F025         	goto	u7940
 15421   004AC4                     u7941:
 15422   004AC4  EF7B  F025         	goto	l6316
 15423   004AC8                     u7940:
 15424   004AC8  C028  F030         	movff	___fldiv@b,??___fldiv
 15425   004ACC  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
 15426   004AD0  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
 15427   004AD4  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
 15428   004AD8  3433               	rlcf	(??___fldiv+3)^0,w,c
 15429   004ADA  3233               	rrcf	(??___fldiv+3)^0,f,c
 15430   004ADC  3232               	rrcf	(??___fldiv+2)^0,f,c
 15431   004ADE  3231               	rrcf	(??___fldiv+1)^0,f,c
 15432   004AE0  3230               	rrcf	??___fldiv^0,f,c
 15433   004AE2  C030  F028         	movff	??___fldiv,___fldiv@b
 15434   004AE6  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
 15435   004AEA  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
 15436   004AEE  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
 15437   004AF2  4A39               	infsnz	___fldiv@new_exp^0,f,c
 15438   004AF4  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
 15439   004AF6                     l6316:
 15440   004AF6  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15441   004AF8  EF86  F025         	goto	u7951
 15442   004AFC  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15443   004AFE  E108               	bnz	u7950
 15444   004B00  2839               	incf	___fldiv@new_exp^0,w,c
 15445   004B02  A0D8               	btfss	status,0,c
 15446   004B04  EF86  F025         	goto	u7951
 15447   004B08  EF88  F025         	goto	u7950
 15448   004B0C                     u7951:
 15449   004B0C  EF93  F025         	goto	l6320
 15450   004B10                     u7950:
 15451   004B10  0E00               	movlw	0
 15452   004B12  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15453   004B14  6839               	setf	___fldiv@new_exp^0,c
 15454   004B16  0E00               	movlw	0
 15455   004B18  6E28               	movwf	___fldiv@b^0,c
 15456   004B1A  0E00               	movlw	0
 15457   004B1C  6E29               	movwf	(___fldiv@b+1)^0,c
 15458   004B1E  0E00               	movlw	0
 15459   004B20  6E2A               	movwf	(___fldiv@b+2)^0,c
 15460   004B22  0E00               	movlw	0
 15461   004B24  6E2B               	movwf	(___fldiv@b+3)^0,c
 15462   004B26                     l6320:
 15463   004B26  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15464   004B28  EFA0  F025         	goto	u7960
 15465   004B2C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15466   004B2E  E106               	bnz	u7961
 15467   004B30  0439               	decf	___fldiv@new_exp^0,w,c
 15468   004B32  B0D8               	btfsc	status,0,c
 15469   004B34  EF9E  F025         	goto	u7961
 15470   004B38  EFA0  F025         	goto	u7960
 15471   004B3C                     u7961:
 15472   004B3C  EFAD  F025         	goto	l6326
 15473   004B40                     u7960:
 15474   004B40  0E00               	movlw	0
 15475   004B42  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15476   004B44  0E00               	movlw	0
 15477   004B46  6E39               	movwf	___fldiv@new_exp^0,c
 15478   004B48  0E00               	movlw	0
 15479   004B4A  6E28               	movwf	___fldiv@b^0,c
 15480   004B4C  0E00               	movlw	0
 15481   004B4E  6E29               	movwf	(___fldiv@b+1)^0,c
 15482   004B50  0E00               	movlw	0
 15483   004B52  6E2A               	movwf	(___fldiv@b+2)^0,c
 15484   004B54  0E00               	movlw	0
 15485   004B56  6E2B               	movwf	(___fldiv@b+3)^0,c
 15486   004B58  6A38               	clrf	___fldiv@sign^0,c
 15487   004B5A                     l6326:
 15488   004B5A  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
 15489   004B5E  A03F               	btfss	___fldiv@bexp^0,0,c
 15490   004B60  EFB4  F025         	goto	u7971
 15491   004B64  EFB6  F025         	goto	u7970
 15492   004B68                     u7971:
 15493   004B68  EFB9  F025         	goto	l6332
 15494   004B6C                     u7970:
 15495   004B6C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 15496   004B6E  EFBA  F025         	goto	l6334
 15497   004B72                     l6332:
 15498   004B72  9E2A               	bcf	(___fldiv@b+2)^0,7,c
 15499   004B74                     l6334:
 15500   004B74  90D8               	bcf	status,0,c
 15501   004B76  303F               	rrcf	___fldiv@bexp^0,w,c
 15502   004B78  6E2B               	movwf	(___fldiv@b+3)^0,c
 15503   004B7A  EF73  F024         	goto	l6250
 15504   004B7E                     l857:
 15505   004B7E  0012               	return		;funcret
 15506   004B80                     __end_of___fldiv:
 15507                           	callstack 0
 15508                           
 15509 ;; *************** function _dtoa *****************
 15510 ;; Defined at:
 15511 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 15512 ;; Parameters:    Size  Location     Type
 15513 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 15514 ;;		 -> sprintf@f(11), 
 15515 ;;  d               4   23[COMRAM] long 
 15516 ;; Auto vars:     Size  Location     Type
 15517 ;;  i               2   34[COMRAM] int 
 15518 ;;  p               2   31[COMRAM] int 
 15519 ;;  w               2   29[COMRAM] int 
 15520 ;;  s               1   33[COMRAM] unsigned char 
 15521 ;; Return value:  Size  Location     Type
 15522 ;;                  1    wreg      void 
 15523 ;; Registers used:
 15524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15525 ;; Tracked objects:
 15526 ;;		On entry : 0/0
 15527 ;;		On exit  : 0/0
 15528 ;;		Unchanged: 0/0
 15529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15530 ;;      Params:         5       0       0       0       0       0       0       0       0
 15531 ;;      Locals:         9       0       0       0       0       0       0       0       0
 15532 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15533 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15534 ;;Total ram usage:       14 bytes
 15535 ;; Hardware stack levels used: 1
 15536 ;; Hardware stack levels required when called: 5
 15537 ;; This function calls:
 15538 ;;		___aldiv
 15539 ;;		___almod
 15540 ;;		_abs
 15541 ;;		_pad
 15542 ;; This function is called by:
 15543 ;;		_vfpfcnvrt
 15544 ;; This function uses a non-reentrant model
 15545 ;;
 15546                           
 15547                           	psect	text39
 15548   005788                     __ptext39:
 15549                           	callstack 0
 15550   005788                     _dtoa:
 15551                           	callstack 21
 15552   005788                     
 15553                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 15554   005788  BE1B               	btfsc	(dtoa@d+3)^0,7,c
 15555   00578A  EFC9  F02B         	goto	u8581
 15556   00578E  EFCC  F02B         	goto	u8580
 15557   005792                     u8581:
 15558   005792  0E01               	movlw	1
 15559   005794  EFCD  F02B         	goto	u8590
 15560   005798                     u8580:
 15561   005798  0E00               	movlw	0
 15562   00579A                     u8590:
 15563   00579A  6E22               	movwf	dtoa@s^0,c
 15564                           
 15565                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 15566   00579C  0102               	movlb	2	; () banked
 15567   00579E  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 15568   0057A0  EFD6  F02B         	goto	u8600
 15569   0057A4  EFD4  F02B         	goto	u8601
 15570   0057A8                     u8601:
 15571   0057A8  EFDC  F02B         	goto	l990
 15572   0057AC                     u8600:
 15573   0057AC                     
 15574                           ; BSR set to: 2
 15575   0057AC  0E00               	movlw	0
 15576   0057AE  6E21               	movwf	(dtoa@p+1)^0,c
 15577   0057B0  0E01               	movlw	1
 15578   0057B2  6E20               	movwf	dtoa@p^0,c
 15579   0057B4  EFE0  F02B         	goto	l992
 15580   0057B8                     l990:
 15581                           
 15582                           ; BSR set to: 2
 15583   0057B8  C2FE  F020         	movff	_prec,dtoa@p
 15584   0057BC  C2FF  F021         	movff	_prec+1,dtoa@p+1
 15585   0057C0                     l992:
 15586                           
 15587                           ; BSR set to: 2
 15588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 15589   0057C0  C362  F01E         	movff	_width,dtoa@w
 15590   0057C4  C363  F01F         	movff	_width+1,dtoa@w+1
 15591   0057C8                     
 15592                           ; BSR set to: 2
 15593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 15594   0057C8  5022               	movf	dtoa@s^0,w,c
 15595   0057CA  B4D8               	btfsc	status,2,c
 15596   0057CC  EFEA  F02B         	goto	u8611
 15597   0057D0  EFEC  F02B         	goto	u8610
 15598   0057D4                     u8611:
 15599   0057D4  EF03  F02C         	goto	l993
 15600   0057D8                     u8610:
 15601   0057D8                     
 15602                           ; BSR set to: 2
 15603                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 15604   0057D8  061E               	decf	dtoa@w^0,f,c
 15605   0057DA  A0D8               	btfss	status,0,c
 15606   0057DC  061F               	decf	(dtoa@w+1)^0,f,c
 15607   0057DE                     
 15608                           ; BSR set to: 2
 15609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 15610   0057DE  5022               	movf	dtoa@s^0,w,c
 15611   0057E0  A4D8               	btfss	status,2,c
 15612   0057E2  EFF5  F02B         	goto	u8621
 15613   0057E6  EFF7  F02B         	goto	u8620
 15614   0057EA                     u8621:
 15615   0057EA  EFFD  F02B         	goto	l6680
 15616   0057EE                     u8620:
 15617   0057EE                     
 15618                           ; BSR set to: 2
 15619   0057EE  0E00               	movlw	0
 15620   0057F0  6E1D               	movwf	(_dtoa$1345+1)^0,c
 15621   0057F2  0E2B               	movlw	43
 15622   0057F4  6E1C               	movwf	_dtoa$1345^0,c
 15623   0057F6  EF01  F02C         	goto	l6682
 15624   0057FA                     l6680:
 15625                           
 15626                           ; BSR set to: 2
 15627   0057FA  0E00               	movlw	0
 15628   0057FC  6E1D               	movwf	(_dtoa$1345+1)^0,c
 15629   0057FE  0E2D               	movlw	45
 15630   005800  6E1C               	movwf	_dtoa$1345^0,c
 15631   005802                     l6682:
 15632                           
 15633                           ; BSR set to: 2
 15634   005802  C01C  F022         	movff	_dtoa$1345,dtoa@s
 15635   005806                     l993:
 15636                           
 15637                           ; BSR set to: 2
 15638                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 15639   005806  0E00               	movlw	0
 15640   005808  6E24               	movwf	(dtoa@i+1)^0,c
 15641   00580A  0E4F               	movlw	79
 15642   00580C  6E23               	movwf	dtoa@i^0,c
 15643   00580E                     
 15644                           ; BSR set to: 2
 15645                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 15646   00580E  0103               	movlb	3	; () banked
 15647   005810  6BC1               	clrf	(_dbuf+79)& (0+255),b
 15648                           
 15649                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 15650   005812  EF4F  F02C         	goto	l6696
 15651   005816                     l6686:
 15652                           
 15653                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 15654   005816  0623               	decf	dtoa@i^0,f,c
 15655   005818  A0D8               	btfss	status,0,c
 15656   00581A  0624               	decf	(dtoa@i+1)^0,f,c
 15657   00581C                     
 15658                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 15659   00581C  0E72               	movlw	low _dbuf
 15660   00581E  2423               	addwf	dtoa@i^0,w,c
 15661   005820  6ED9               	movwf	fsr2l,c
 15662   005822  0E03               	movlw	high _dbuf
 15663   005824  2024               	addwfc	(dtoa@i+1)^0,w,c
 15664   005826  6EDA               	movwf	fsr2h,c
 15665   005828  C018  F001         	movff	dtoa@d,___almod@dividend
 15666   00582C  C019  F002         	movff	dtoa@d+1,___almod@dividend+1
 15667   005830  C01A  F003         	movff	dtoa@d+2,___almod@dividend+2
 15668   005834  C01B  F004         	movff	dtoa@d+3,___almod@dividend+3
 15669   005838  0E0A               	movlw	10
 15670   00583A  6E05               	movwf	___almod@divisor^0,c
 15671   00583C  0E00               	movlw	0
 15672   00583E  6E06               	movwf	(___almod@divisor+1)^0,c
 15673   005840  0E00               	movlw	0
 15674   005842  6E07               	movwf	(___almod@divisor+2)^0,c
 15675   005844  0E00               	movlw	0
 15676   005846  6E08               	movwf	(___almod@divisor+3)^0,c
 15677   005848  EC76  F031         	call	___almod	;wreg free
 15678   00584C  C001  F00B         	movff	?___almod,abs@a
 15679   005850  C002  F00C         	movff	?___almod+1,abs@a+1
 15680   005854  ECD5  F036         	call	_abs	;wreg free
 15681   005858  500B               	movf	?_abs^0,w,c
 15682   00585A  0F30               	addlw	48
 15683   00585C  6EDF               	movwf	indf2,c
 15684   00585E                     
 15685                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
 15686   00585E  0620               	decf	dtoa@p^0,f,c
 15687   005860  A0D8               	btfss	status,0,c
 15688   005862  0621               	decf	(dtoa@p+1)^0,f,c
 15689   005864                     
 15690                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 15691   005864  061E               	decf	dtoa@w^0,f,c
 15692   005866  A0D8               	btfss	status,0,c
 15693   005868  061F               	decf	(dtoa@w+1)^0,f,c
 15694   00586A                     
 15695                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 15696   00586A  C018  F001         	movff	dtoa@d,___aldiv@dividend
 15697   00586E  C019  F002         	movff	dtoa@d+1,___aldiv@dividend+1
 15698   005872  C01A  F003         	movff	dtoa@d+2,___aldiv@dividend+2
 15699   005876  C01B  F004         	movff	dtoa@d+3,___aldiv@dividend+3
 15700   00587A  0E0A               	movlw	10
 15701   00587C  6E05               	movwf	___aldiv@divisor^0,c
 15702   00587E  0E00               	movlw	0
 15703   005880  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15704   005882  0E00               	movlw	0
 15705   005884  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15706   005886  0E00               	movlw	0
 15707   005888  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15708   00588A  EC6A  F02E         	call	___aldiv	;wreg free
 15709   00588E  C001  F018         	movff	?___aldiv,dtoa@d
 15710   005892  C002  F019         	movff	?___aldiv+1,dtoa@d+1
 15711   005896  C003  F01A         	movff	?___aldiv+2,dtoa@d+2
 15712   00589A  C004  F01B         	movff	?___aldiv+3,dtoa@d+3
 15713   00589E                     l6696:
 15714                           
 15715                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 15716   00589E  BE24               	btfsc	(dtoa@i+1)^0,7,c
 15717   0058A0  EF5A  F02C         	goto	u8631
 15718   0058A4  5024               	movf	(dtoa@i+1)^0,w,c
 15719   0058A6  E108               	bnz	u8630
 15720   0058A8  0423               	decf	dtoa@i^0,w,c
 15721   0058AA  A0D8               	btfss	status,0,c
 15722   0058AC  EF5A  F02C         	goto	u8631
 15723   0058B0  EF5C  F02C         	goto	u8630
 15724   0058B4                     u8631:
 15725   0058B4  EF74  F02C         	goto	l6702
 15726   0058B8                     u8630:
 15727   0058B8  5018               	movf	dtoa@d^0,w,c
 15728   0058BA  1019               	iorwf	(dtoa@d+1)^0,w,c
 15729   0058BC  101A               	iorwf	(dtoa@d+2)^0,w,c
 15730   0058BE  101B               	iorwf	(dtoa@d+3)^0,w,c
 15731   0058C0  A4D8               	btfss	status,2,c
 15732   0058C2  EF65  F02C         	goto	u8641
 15733   0058C6  EF67  F02C         	goto	u8640
 15734   0058CA                     u8641:
 15735   0058CA  EF0B  F02C         	goto	l6686
 15736   0058CE                     u8640:
 15737   0058CE  BE21               	btfsc	(dtoa@p+1)^0,7,c
 15738   0058D0  EF74  F02C         	goto	u8650
 15739   0058D4  5021               	movf	(dtoa@p+1)^0,w,c
 15740   0058D6  E106               	bnz	u8651
 15741   0058D8  0420               	decf	dtoa@p^0,w,c
 15742   0058DA  B0D8               	btfsc	status,0,c
 15743   0058DC  EF72  F02C         	goto	u8651
 15744   0058E0  EF74  F02C         	goto	u8650
 15745   0058E4                     u8651:
 15746   0058E4  EF0B  F02C         	goto	l6686
 15747   0058E8                     u8650:
 15748   0058E8                     l6702:
 15749                           
 15750                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 15751   0058E8  5022               	movf	dtoa@s^0,w,c
 15752   0058EA  B4D8               	btfsc	status,2,c
 15753   0058EC  EF7A  F02C         	goto	u8661
 15754   0058F0  EF7C  F02C         	goto	u8660
 15755   0058F4                     u8661:
 15756   0058F4  EF87  F02C         	goto	l6708
 15757   0058F8                     u8660:
 15758   0058F8                     
 15759                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 15760   0058F8  0623               	decf	dtoa@i^0,f,c
 15761   0058FA  A0D8               	btfss	status,0,c
 15762   0058FC  0624               	decf	(dtoa@i+1)^0,f,c
 15763   0058FE                     
 15764                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 15765   0058FE  0E72               	movlw	low _dbuf
 15766   005900  2423               	addwf	dtoa@i^0,w,c
 15767   005902  6ED9               	movwf	fsr2l,c
 15768   005904  0E03               	movlw	high _dbuf
 15769   005906  2024               	addwfc	(dtoa@i+1)^0,w,c
 15770   005908  6EDA               	movwf	fsr2h,c
 15771   00590A  C022  FFDF         	movff	dtoa@s,indf2
 15772   00590E                     l6708:
 15773                           
 15774                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 15775   00590E  C017  F00F         	movff	dtoa@fp,pad@fp
 15776   005912  0E72               	movlw	low _dbuf
 15777   005914  2423               	addwf	dtoa@i^0,w,c
 15778   005916  6E10               	movwf	pad@buf^0,c
 15779   005918  0E03               	movlw	high _dbuf
 15780   00591A  2024               	addwfc	(dtoa@i+1)^0,w,c
 15781   00591C  6E11               	movwf	(pad@buf+1)^0,c
 15782   00591E  C01E  F012         	movff	dtoa@w,pad@p
 15783   005922  C01F  F013         	movff	dtoa@w+1,pad@p+1
 15784   005926  EC4D  F035         	call	_pad	;wreg free
 15785   00592A  0012               	return		;funcret
 15786   00592C                     __end_of_dtoa:
 15787                           	callstack 0
 15788                           
 15789 ;; *************** function _pad *****************
 15790 ;; Defined at:
 15791 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 15792 ;; Parameters:    Size  Location     Type
 15793 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
 15794 ;;		 -> sprintf@f(11), 
 15795 ;;  buf             2   15[COMRAM] PTR unsigned char 
 15796 ;;		 -> dbuf(80), 
 15797 ;;  p               2   17[COMRAM] int 
 15798 ;; Auto vars:     Size  Location     Type
 15799 ;;  i               2   20[COMRAM] int 
 15800 ;; Return value:  Size  Location     Type
 15801 ;;                  1    wreg      void 
 15802 ;; Registers used:
 15803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15804 ;; Tracked objects:
 15805 ;;		On entry : 0/0
 15806 ;;		On exit  : 0/0
 15807 ;;		Unchanged: 0/0
 15808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15809 ;;      Params:         5       0       0       0       0       0       0       0       0
 15810 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15811 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15812 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15813 ;;Total ram usage:        8 bytes
 15814 ;; Hardware stack levels used: 1
 15815 ;; Hardware stack levels required when called: 4
 15816 ;; This function calls:
 15817 ;;		_fputc
 15818 ;;		_fputs
 15819 ;; This function is called by:
 15820 ;;		_dtoa
 15821 ;;		_efgtoa
 15822 ;;		_utoa
 15823 ;; This function uses a non-reentrant model
 15824 ;;
 15825                           
 15826                           	psect	text40
 15827   006A9A                     __ptext40:
 15828                           	callstack 0
 15829   006A9A                     _pad:
 15830                           	callstack 21
 15831   006A9A                     
 15832                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 15833   006A9A  BE13               	btfsc	(pad@p+1)^0,7,c
 15834   006A9C  EF54  F035         	goto	u8360
 15835   006AA0  EF52  F035         	goto	u8361
 15836   006AA4                     u8361:
 15837   006AA4  EF58  F035         	goto	l982
 15838   006AA8                     u8360:
 15839   006AA8                     
 15840                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 15841   006AA8  0E00               	movlw	0
 15842   006AAA  6E13               	movwf	(pad@p+1)^0,c
 15843   006AAC  0E00               	movlw	0
 15844   006AAE  6E12               	movwf	pad@p^0,c
 15845   006AB0                     l982:
 15846                           
 15847                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 15848   006AB0  0E00               	movlw	0
 15849   006AB2  6E16               	movwf	(pad@i+1)^0,c
 15850   006AB4  0E00               	movlw	0
 15851   006AB6  6E15               	movwf	pad@i^0,c
 15852                           
 15853                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 15854   006AB8  EF68  F035         	goto	l6590
 15855   006ABC                     l6586:
 15856                           
 15857                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 15858   006ABC  0E00               	movlw	0
 15859   006ABE  6E02               	movwf	(fputc@c+1)^0,c
 15860   006AC0  0E20               	movlw	32
 15861   006AC2  6E01               	movwf	fputc@c^0,c
 15862   006AC4  C00F  F003         	movff	pad@fp,fputc@fp
 15863   006AC8  ECD3  F032         	call	_fputc	;wreg free
 15864   006ACC                     
 15865                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 15866   006ACC  4A15               	infsnz	pad@i^0,f,c
 15867   006ACE  2A16               	incf	(pad@i+1)^0,f,c
 15868   006AD0                     l6590:
 15869                           
 15870                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 15871   006AD0  5012               	movf	pad@p^0,w,c
 15872   006AD2  5C15               	subwf	pad@i^0,w,c
 15873   006AD4  5016               	movf	(pad@i+1)^0,w,c
 15874   006AD6  0A80               	xorlw	128
 15875   006AD8  6E14               	movwf	??_pad^0,c
 15876   006ADA  5013               	movf	(pad@p+1)^0,w,c
 15877   006ADC  0A80               	xorlw	128
 15878   006ADE  5814               	subwfb	??_pad^0,w,c
 15879   006AE0  A0D8               	btfss	status,0,c
 15880   006AE2  EF75  F035         	goto	u8371
 15881   006AE6  EF77  F035         	goto	u8370
 15882   006AEA                     u8371:
 15883   006AEA  EF5E  F035         	goto	l6586
 15884   006AEE                     u8370:
 15885   006AEE                     
 15886                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 15887   006AEE  C010  F009         	movff	pad@buf,fputs@s
 15888   006AF2  C011  F00A         	movff	pad@buf+1,fputs@s+1
 15889   006AF6  C00F  F00B         	movff	pad@fp,fputs@fp
 15890   006AFA  EC61  F036         	call	_fputs	;wreg free
 15891   006AFE  0012               	return		;funcret
 15892   006B00                     __end_of_pad:
 15893                           	callstack 0
 15894                           
 15895 ;; *************** function _fputs *****************
 15896 ;; Defined at:
 15897 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 15898 ;; Parameters:    Size  Location     Type
 15899 ;;  s               2    8[COMRAM] PTR const unsigned char 
 15900 ;;		 -> dbuf(80), 
 15901 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
 15902 ;;		 -> sprintf@f(11), 
 15903 ;; Auto vars:     Size  Location     Type
 15904 ;;  i               2   12[COMRAM] int 
 15905 ;;  c               1   11[COMRAM] unsigned char 
 15906 ;; Return value:  Size  Location     Type
 15907 ;;                  2    8[COMRAM] int 
 15908 ;; Registers used:
 15909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15910 ;; Tracked objects:
 15911 ;;		On entry : 0/0
 15912 ;;		On exit  : 0/0
 15913 ;;		Unchanged: 0/0
 15914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15915 ;;      Params:         3       0       0       0       0       0       0       0       0
 15916 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15917 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15918 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15919 ;;Total ram usage:        6 bytes
 15920 ;; Hardware stack levels used: 1
 15921 ;; Hardware stack levels required when called: 3
 15922 ;; This function calls:
 15923 ;;		_fputc
 15924 ;; This function is called by:
 15925 ;;		_pad
 15926 ;; This function uses a non-reentrant model
 15927 ;;
 15928                           
 15929                           	psect	text41
 15930   006CC2                     __ptext41:
 15931                           	callstack 0
 15932   006CC2                     _fputs:
 15933                           	callstack 21
 15934   006CC2  0E00               	movlw	0
 15935   006CC4  6E0E               	movwf	(fputs@i+1)^0,c
 15936   006CC6  0E00               	movlw	0
 15937   006CC8  6E0D               	movwf	fputs@i^0,c
 15938   006CCA  EF70  F036         	goto	l6098
 15939   006CCE                     l6094:
 15940   006CCE  C00C  F001         	movff	fputs@c,fputc@c
 15941   006CD2  6A02               	clrf	(fputc@c+1)^0,c
 15942   006CD4  C00B  F003         	movff	fputs@fp,fputc@fp
 15943   006CD8  ECD3  F032         	call	_fputc	;wreg free
 15944   006CDC  4A0D               	infsnz	fputs@i^0,f,c
 15945   006CDE  2A0E               	incf	(fputs@i+1)^0,f,c
 15946   006CE0                     l6098:
 15947   006CE0  500D               	movf	fputs@i^0,w,c
 15948   006CE2  2409               	addwf	fputs@s^0,w,c
 15949   006CE4  6ED9               	movwf	fsr2l,c
 15950   006CE6  500E               	movf	(fputs@i+1)^0,w,c
 15951   006CE8  200A               	addwfc	(fputs@s+1)^0,w,c
 15952   006CEA  6EDA               	movwf	fsr2h,c
 15953   006CEC  50DF               	movf	indf2,w,c
 15954   006CEE  6E0C               	movwf	fputs@c^0,c
 15955   006CF0  500C               	movf	fputs@c^0,w,c
 15956   006CF2  A4D8               	btfss	status,2,c
 15957   006CF4  EF7E  F036         	goto	u7581
 15958   006CF8  EF80  F036         	goto	u7580
 15959   006CFC                     u7581:
 15960   006CFC  EF67  F036         	goto	l6094
 15961   006D00                     u7580:
 15962   006D00  0012               	return		;funcret
 15963   006D02                     __end_of_fputs:
 15964                           	callstack 0
 15965                           
 15966 ;; *************** function _fputc *****************
 15967 ;; Defined at:
 15968 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;  c               2    0[COMRAM] int 
 15971 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
 15972 ;;		 -> sprintf@f(11), 
 15973 ;; Auto vars:     Size  Location     Type
 15974 ;;		None
 15975 ;; Return value:  Size  Location     Type
 15976 ;;                  2    0[COMRAM] int 
 15977 ;; Registers used:
 15978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15979 ;; Tracked objects:
 15980 ;;		On entry : 0/0
 15981 ;;		On exit  : 0/0
 15982 ;;		Unchanged: 0/0
 15983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15984 ;;      Params:         3       0       0       0       0       0       0       0       0
 15985 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15986 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15987 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15988 ;;Total ram usage:        8 bytes
 15989 ;; Hardware stack levels used: 1
 15990 ;; Hardware stack levels required when called: 2
 15991 ;; This function calls:
 15992 ;;		_putch
 15993 ;; This function is called by:
 15994 ;;		_pad
 15995 ;;		_stoa
 15996 ;;		_vfpfcnvrt
 15997 ;;		_fputs
 15998 ;; This function uses a non-reentrant model
 15999 ;;
 16000                           
 16001                           	psect	text42
 16002   0065A6                     __ptext42:
 16003                           	callstack 0
 16004   0065A6                     _fputc:
 16005                           	callstack 21
 16006   0065A6  5003               	movf	fputc@fp^0,w,c
 16007   0065A8  B4D8               	btfsc	status,2,c
 16008   0065AA  EFD9  F032         	goto	u7151
 16009   0065AE  EFDB  F032         	goto	u7150
 16010   0065B2                     u7151:
 16011   0065B2  EFE3  F032         	goto	l5888
 16012   0065B6                     u7150:
 16013   0065B6  5003               	movf	fputc@fp^0,w,c
 16014   0065B8  A4D8               	btfss	status,2,c
 16015   0065BA  EFE1  F032         	goto	u7161
 16016   0065BE  EFE3  F032         	goto	u7160
 16017   0065C2                     u7161:
 16018   0065C2  EFE8  F032         	goto	l5890
 16019   0065C6                     u7160:
 16020   0065C6                     l5888:
 16021   0065C6  5001               	movf	fputc@c^0,w,c
 16022   0065C8  EC24  F037         	call	_putch
 16023   0065CC  EF2F  F033         	goto	l1199
 16024   0065D0                     l5890:
 16025   0065D0  5003               	movf	fputc@fp^0,w,c
 16026   0065D2  6ED9               	movwf	fsr2l,c
 16027   0065D4  6ADA               	clrf	fsr2h,c
 16028   0065D6  0E09               	movlw	9
 16029   0065D8  26D9               	addwf	fsr2l,f,c
 16030   0065DA  50DE               	movf	postinc2,w,c
 16031   0065DC  10DE               	iorwf	postinc2,w,c
 16032   0065DE  B4D8               	btfsc	status,2,c
 16033   0065E0  EFF4  F032         	goto	u7171
 16034   0065E4  EFF6  F032         	goto	u7170
 16035   0065E8                     u7171:
 16036   0065E8  EF0F  F033         	goto	l5894
 16037   0065EC                     u7170:
 16038   0065EC  5003               	movf	fputc@fp^0,w,c
 16039   0065EE  6ED9               	movwf	fsr2l,c
 16040   0065F0  6ADA               	clrf	fsr2h,c
 16041   0065F2  0E09               	movlw	9
 16042   0065F4  26D9               	addwf	fsr2l,f,c
 16043   0065F6  5003               	movf	fputc@fp^0,w,c
 16044   0065F8  6EE1               	movwf	fsr1l,c
 16045   0065FA  6AE2               	clrf	fsr1h,c
 16046   0065FC  0E02               	movlw	2
 16047   0065FE  26E1               	addwf	fsr1l,f,c
 16048   006600  50DE               	movf	postinc2,w,c
 16049   006602  5CE6               	subwf	postinc1,w,c
 16050   006604  50E6               	movf	postinc1,w,c
 16051   006606  0A80               	xorlw	128
 16052   006608  6E08               	movwf	(??_fputc+4)^0,c
 16053   00660A  50DE               	movf	postinc2,w,c
 16054   00660C  0A80               	xorlw	128
 16055   00660E  5808               	subwfb	(??_fputc+4)^0,w,c
 16056   006610  B0D8               	btfsc	status,0,c
 16057   006612  EF0D  F033         	goto	u7181
 16058   006616  EF0F  F033         	goto	u7180
 16059   00661A                     u7181:
 16060   00661A  EF2F  F033         	goto	l1199
 16061   00661E                     u7180:
 16062   00661E                     l5894:
 16063   00661E  5003               	movf	fputc@fp^0,w,c
 16064   006620  6ED9               	movwf	fsr2l,c
 16065   006622  6ADA               	clrf	fsr2h,c
 16066   006624  0E02               	movlw	2
 16067   006626  26D9               	addwf	fsr2l,f,c
 16068   006628  CFDE F004          	movff	postinc2,??_fputc
 16069   00662C  CFDD F005          	movff	postdec2,??_fputc+1
 16070   006630  5003               	movf	fputc@fp^0,w,c
 16071   006632  6ED9               	movwf	fsr2l,c
 16072   006634  6ADA               	clrf	fsr2h,c
 16073   006636  CFDE F006          	movff	postinc2,??_fputc+2
 16074   00663A  CFDD F007          	movff	postdec2,??_fputc+3
 16075   00663E  5004               	movf	??_fputc^0,w,c
 16076   006640  2406               	addwf	(??_fputc+2)^0,w,c
 16077   006642  6ED9               	movwf	fsr2l,c
 16078   006644  5005               	movf	(??_fputc+1)^0,w,c
 16079   006646  2007               	addwfc	(??_fputc+3)^0,w,c
 16080   006648  6EDA               	movwf	fsr2h,c
 16081   00664A  C001  FFDF         	movff	fputc@c,indf2
 16082   00664E  5003               	movf	fputc@fp^0,w,c
 16083   006650  6ED9               	movwf	fsr2l,c
 16084   006652  6ADA               	clrf	fsr2h,c
 16085   006654  0E02               	movlw	2
 16086   006656  26D9               	addwf	fsr2l,f,c
 16087   006658  2ADE               	incf	postinc2,f,c
 16088   00665A  0E00               	movlw	0
 16089   00665C  22DD               	addwfc	postdec2,f,c
 16090   00665E                     l1199:
 16091   00665E  0012               	return		;funcret
 16092   006660                     __end_of_fputc:
 16093                           	callstack 0
 16094                           
 16095 ;; *************** function _putch *****************
 16096 ;; Defined at:
 16097 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 16098 ;; Parameters:    Size  Location     Type
 16099 ;;  c               1    wreg     unsigned char 
 16100 ;; Auto vars:     Size  Location     Type
 16101 ;;  c               1    0[COMRAM] unsigned char 
 16102 ;; Return value:  Size  Location     Type
 16103 ;;                  1    wreg      void 
 16104 ;; Registers used:
 16105 ;;		wreg
 16106 ;; Tracked objects:
 16107 ;;		On entry : 0/0
 16108 ;;		On exit  : 0/0
 16109 ;;		Unchanged: 0/0
 16110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16111 ;;      Params:         0       0       0       0       0       0       0       0       0
 16112 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16113 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16114 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16115 ;;Total ram usage:        0 bytes
 16116 ;; Hardware stack levels used: 1
 16117 ;; Hardware stack levels required when called: 1
 16118 ;; This function calls:
 16119 ;;		Nothing
 16120 ;; This function is called by:
 16121 ;;		_fputc
 16122 ;; This function uses a non-reentrant model
 16123 ;;
 16124                           
 16125                           	psect	text43
 16126   006E48                     __ptext43:
 16127                           	callstack 0
 16128   006E48                     _putch:
 16129                           	callstack 21
 16130   006E48  0012               	return		;funcret
 16131   006E4A                     __end_of_putch:
 16132                           	callstack 0
 16133                           
 16134 ;; *************** function _abs *****************
 16135 ;; Defined at:
 16136 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 16137 ;; Parameters:    Size  Location     Type
 16138 ;;  a               2   10[COMRAM] int 
 16139 ;; Auto vars:     Size  Location     Type
 16140 ;;		None
 16141 ;; Return value:  Size  Location     Type
 16142 ;;                  2   10[COMRAM] int 
 16143 ;; Registers used:
 16144 ;;		wreg, status,2, status,0
 16145 ;; Tracked objects:
 16146 ;;		On entry : 0/0
 16147 ;;		On exit  : 0/0
 16148 ;;		Unchanged: 0/0
 16149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16150 ;;      Params:         2       0       0       0       0       0       0       0       0
 16151 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16152 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16153 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16154 ;;Total ram usage:        4 bytes
 16155 ;; Hardware stack levels used: 1
 16156 ;; Hardware stack levels required when called: 1
 16157 ;; This function calls:
 16158 ;;		Nothing
 16159 ;; This function is called by:
 16160 ;;		_dtoa
 16161 ;; This function uses a non-reentrant model
 16162 ;;
 16163                           
 16164                           	psect	text44
 16165   006DAA                     __ptext44:
 16166                           	callstack 0
 16167   006DAA                     _abs:
 16168                           	callstack 24
 16169   006DAA  BE0C               	btfsc	(abs@a+1)^0,7,c
 16170   006DAC  EFDA  F036         	goto	u8381
 16171   006DB0  EFDC  F036         	goto	u8380
 16172   006DB4                     u8381:
 16173   006DB4  EFE2  F036         	goto	l1158
 16174   006DB8                     u8380:
 16175   006DB8  C00B  F00B         	movff	abs@a,?_abs
 16176   006DBC  C00C  F00C         	movff	abs@a+1,?_abs+1
 16177   006DC0  EFEE  F036         	goto	l1161
 16178   006DC4                     l1158:
 16179   006DC4  C00B  F00D         	movff	abs@a,??_abs
 16180   006DC8  C00C  F00E         	movff	abs@a+1,??_abs+1
 16181   006DCC  1E0D               	comf	??_abs^0,f,c
 16182   006DCE  1E0E               	comf	(??_abs+1)^0,f,c
 16183   006DD0  4A0D               	infsnz	??_abs^0,f,c
 16184   006DD2  2A0E               	incf	(??_abs+1)^0,f,c
 16185   006DD4  C00D  F00B         	movff	??_abs,?_abs
 16186   006DD8  C00E  F00C         	movff	??_abs+1,?_abs+1
 16187   006DDC                     l1161:
 16188   006DDC  0012               	return		;funcret
 16189   006DDE                     __end_of_abs:
 16190                           	callstack 0
 16191                           
 16192 ;; *************** function ___almod *****************
 16193 ;; Defined at:
 16194 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
 16195 ;; Parameters:    Size  Location     Type
 16196 ;;  dividend        4    0[COMRAM] long 
 16197 ;;  divisor         4    4[COMRAM] long 
 16198 ;; Auto vars:     Size  Location     Type
 16199 ;;  sign            1    9[COMRAM] unsigned char 
 16200 ;;  counter         1    8[COMRAM] unsigned char 
 16201 ;; Return value:  Size  Location     Type
 16202 ;;                  4    0[COMRAM] long 
 16203 ;; Registers used:
 16204 ;;		wreg, status,2, status,0
 16205 ;; Tracked objects:
 16206 ;;		On entry : 0/0
 16207 ;;		On exit  : 0/0
 16208 ;;		Unchanged: 0/0
 16209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16210 ;;      Params:         8       0       0       0       0       0       0       0       0
 16211 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16212 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16213 ;;      Totals:        10       0       0       0       0       0       0       0       0
 16214 ;;Total ram usage:       10 bytes
 16215 ;; Hardware stack levels used: 1
 16216 ;; Hardware stack levels required when called: 1
 16217 ;; This function calls:
 16218 ;;		Nothing
 16219 ;; This function is called by:
 16220 ;;		_dtoa
 16221 ;; This function uses a non-reentrant model
 16222 ;;
 16223                           
 16224                           	psect	text45
 16225   0062EC                     __ptext45:
 16226                           	callstack 0
 16227   0062EC                     ___almod:
 16228                           	callstack 24
 16229   0062EC  6A0A               	clrf	___almod@sign^0,c
 16230   0062EE  BE04               	btfsc	(___almod@dividend+3)^0,7,c
 16231   0062F0  EF7E  F031         	goto	u7690
 16232   0062F4  EF7C  F031         	goto	u7691
 16233   0062F8                     u7691:
 16234   0062F8  EF88  F031         	goto	l6178
 16235   0062FC                     u7690:
 16236   0062FC  1E04               	comf	(___almod@dividend+3)^0,f,c
 16237   0062FE  1E03               	comf	(___almod@dividend+2)^0,f,c
 16238   006300  1E02               	comf	(___almod@dividend+1)^0,f,c
 16239   006302  6C01               	negf	___almod@dividend^0,c
 16240   006304  0E00               	movlw	0
 16241   006306  2202               	addwfc	(___almod@dividend+1)^0,f,c
 16242   006308  2203               	addwfc	(___almod@dividend+2)^0,f,c
 16243   00630A  2204               	addwfc	(___almod@dividend+3)^0,f,c
 16244   00630C  0E01               	movlw	1
 16245   00630E  6E0A               	movwf	___almod@sign^0,c
 16246   006310                     l6178:
 16247   006310  BE08               	btfsc	(___almod@divisor+3)^0,7,c
 16248   006312  EF8F  F031         	goto	u7700
 16249   006316  EF8D  F031         	goto	u7701
 16250   00631A                     u7701:
 16251   00631A  EF97  F031         	goto	l6182
 16252   00631E                     u7700:
 16253   00631E  1E08               	comf	(___almod@divisor+3)^0,f,c
 16254   006320  1E07               	comf	(___almod@divisor+2)^0,f,c
 16255   006322  1E06               	comf	(___almod@divisor+1)^0,f,c
 16256   006324  6C05               	negf	___almod@divisor^0,c
 16257   006326  0E00               	movlw	0
 16258   006328  2206               	addwfc	(___almod@divisor+1)^0,f,c
 16259   00632A  2207               	addwfc	(___almod@divisor+2)^0,f,c
 16260   00632C  2208               	addwfc	(___almod@divisor+3)^0,f,c
 16261   00632E                     l6182:
 16262   00632E  5005               	movf	___almod@divisor^0,w,c
 16263   006330  1006               	iorwf	(___almod@divisor+1)^0,w,c
 16264   006332  1007               	iorwf	(___almod@divisor+2)^0,w,c
 16265   006334  1008               	iorwf	(___almod@divisor+3)^0,w,c
 16266   006336  B4D8               	btfsc	status,2,c
 16267   006338  EFA0  F031         	goto	u7711
 16268   00633C  EFA2  F031         	goto	u7710
 16269   006340                     u7711:
 16270   006340  EFD2  F031         	goto	l6198
 16271   006344                     u7710:
 16272   006344  0E01               	movlw	1
 16273   006346  6E09               	movwf	___almod@counter^0,c
 16274   006348  EFAC  F031         	goto	l6188
 16275   00634C                     l6186:
 16276   00634C  90D8               	bcf	status,0,c
 16277   00634E  3605               	rlcf	___almod@divisor^0,f,c
 16278   006350  3606               	rlcf	(___almod@divisor+1)^0,f,c
 16279   006352  3607               	rlcf	(___almod@divisor+2)^0,f,c
 16280   006354  3608               	rlcf	(___almod@divisor+3)^0,f,c
 16281   006356  2A09               	incf	___almod@counter^0,f,c
 16282   006358                     l6188:
 16283   006358  AE08               	btfss	(___almod@divisor+3)^0,7,c
 16284   00635A  EFB1  F031         	goto	u7721
 16285   00635E  EFB3  F031         	goto	u7720
 16286   006362                     u7721:
 16287   006362  EFA6  F031         	goto	l6186
 16288   006366                     u7720:
 16289   006366                     l6190:
 16290   006366  5005               	movf	___almod@divisor^0,w,c
 16291   006368  5C01               	subwf	___almod@dividend^0,w,c
 16292   00636A  5006               	movf	(___almod@divisor+1)^0,w,c
 16293   00636C  5802               	subwfb	(___almod@dividend+1)^0,w,c
 16294   00636E  5007               	movf	(___almod@divisor+2)^0,w,c
 16295   006370  5803               	subwfb	(___almod@dividend+2)^0,w,c
 16296   006372  5008               	movf	(___almod@divisor+3)^0,w,c
 16297   006374  5804               	subwfb	(___almod@dividend+3)^0,w,c
 16298   006376  A0D8               	btfss	status,0,c
 16299   006378  EFC0  F031         	goto	u7731
 16300   00637C  EFC2  F031         	goto	u7730
 16301   006380                     u7731:
 16302   006380  EFCA  F031         	goto	l6194
 16303   006384                     u7730:
 16304   006384  5005               	movf	___almod@divisor^0,w,c
 16305   006386  5E01               	subwf	___almod@dividend^0,f,c
 16306   006388  5006               	movf	(___almod@divisor+1)^0,w,c
 16307   00638A  5A02               	subwfb	(___almod@dividend+1)^0,f,c
 16308   00638C  5007               	movf	(___almod@divisor+2)^0,w,c
 16309   00638E  5A03               	subwfb	(___almod@dividend+2)^0,f,c
 16310   006390  5008               	movf	(___almod@divisor+3)^0,w,c
 16311   006392  5A04               	subwfb	(___almod@dividend+3)^0,f,c
 16312   006394                     l6194:
 16313   006394  90D8               	bcf	status,0,c
 16314   006396  3208               	rrcf	(___almod@divisor+3)^0,f,c
 16315   006398  3207               	rrcf	(___almod@divisor+2)^0,f,c
 16316   00639A  3206               	rrcf	(___almod@divisor+1)^0,f,c
 16317   00639C  3205               	rrcf	___almod@divisor^0,f,c
 16318   00639E  2E09               	decfsz	___almod@counter^0,f,c
 16319   0063A0  EFB3  F031         	goto	l6190
 16320   0063A4                     l6198:
 16321   0063A4  500A               	movf	___almod@sign^0,w,c
 16322   0063A6  B4D8               	btfsc	status,2,c
 16323   0063A8  EFD8  F031         	goto	u7741
 16324   0063AC  EFDA  F031         	goto	u7740
 16325   0063B0                     u7741:
 16326   0063B0  EFE2  F031         	goto	l6202
 16327   0063B4                     u7740:
 16328   0063B4  1E04               	comf	(___almod@dividend+3)^0,f,c
 16329   0063B6  1E03               	comf	(___almod@dividend+2)^0,f,c
 16330   0063B8  1E02               	comf	(___almod@dividend+1)^0,f,c
 16331   0063BA  6C01               	negf	___almod@dividend^0,c
 16332   0063BC  0E00               	movlw	0
 16333   0063BE  2202               	addwfc	(___almod@dividend+1)^0,f,c
 16334   0063C0  2203               	addwfc	(___almod@dividend+2)^0,f,c
 16335   0063C2  2204               	addwfc	(___almod@dividend+3)^0,f,c
 16336   0063C4                     l6202:
 16337   0063C4  C001  F001         	movff	___almod@dividend,?___almod
 16338   0063C8  C002  F002         	movff	___almod@dividend+1,?___almod+1
 16339   0063CC  C003  F003         	movff	___almod@dividend+2,?___almod+2
 16340   0063D0  C004  F004         	movff	___almod@dividend+3,?___almod+3
 16341   0063D4  0012               	return		;funcret
 16342   0063D6                     __end_of___almod:
 16343                           	callstack 0
 16344                           
 16345 ;; *************** function ___aldiv *****************
 16346 ;; Defined at:
 16347 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
 16348 ;; Parameters:    Size  Location     Type
 16349 ;;  dividend        4    0[COMRAM] long 
 16350 ;;  divisor         4    4[COMRAM] long 
 16351 ;; Auto vars:     Size  Location     Type
 16352 ;;  quotient        4   10[COMRAM] long 
 16353 ;;  sign            1    9[COMRAM] unsigned char 
 16354 ;;  counter         1    8[COMRAM] unsigned char 
 16355 ;; Return value:  Size  Location     Type
 16356 ;;                  4    0[COMRAM] long 
 16357 ;; Registers used:
 16358 ;;		wreg, status,2, status,0
 16359 ;; Tracked objects:
 16360 ;;		On entry : 0/0
 16361 ;;		On exit  : 0/0
 16362 ;;		Unchanged: 0/0
 16363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16364 ;;      Params:         8       0       0       0       0       0       0       0       0
 16365 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16366 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16367 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16368 ;;Total ram usage:       14 bytes
 16369 ;; Hardware stack levels used: 1
 16370 ;; Hardware stack levels required when called: 1
 16371 ;; This function calls:
 16372 ;;		Nothing
 16373 ;; This function is called by:
 16374 ;;		_dtoa
 16375 ;; This function uses a non-reentrant model
 16376 ;;
 16377                           
 16378                           	psect	text46
 16379   005CD4                     __ptext46:
 16380                           	callstack 0
 16381   005CD4                     ___aldiv:
 16382                           	callstack 24
 16383   005CD4  6A0A               	clrf	___aldiv@sign^0,c
 16384   005CD6  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 16385   005CD8  EF72  F02E         	goto	u7630
 16386   005CDC  EF70  F02E         	goto	u7631
 16387   005CE0                     u7631:
 16388   005CE0  EF7C  F02E         	goto	l6134
 16389   005CE4                     u7630:
 16390   005CE4  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 16391   005CE6  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 16392   005CE8  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 16393   005CEA  6C05               	negf	___aldiv@divisor^0,c
 16394   005CEC  0E00               	movlw	0
 16395   005CEE  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 16396   005CF0  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 16397   005CF2  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 16398   005CF4  0E01               	movlw	1
 16399   005CF6  6E0A               	movwf	___aldiv@sign^0,c
 16400   005CF8                     l6134:
 16401   005CF8  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 16402   005CFA  EF83  F02E         	goto	u7640
 16403   005CFE  EF81  F02E         	goto	u7641
 16404   005D02                     u7641:
 16405   005D02  EF8D  F02E         	goto	l6140
 16406   005D06                     u7640:
 16407   005D06  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 16408   005D08  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 16409   005D0A  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 16410   005D0C  6C01               	negf	___aldiv@dividend^0,c
 16411   005D0E  0E00               	movlw	0
 16412   005D10  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 16413   005D12  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 16414   005D14  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 16415   005D16  0E01               	movlw	1
 16416   005D18  1A0A               	xorwf	___aldiv@sign^0,f,c
 16417   005D1A                     l6140:
 16418   005D1A  0E00               	movlw	0
 16419   005D1C  6E0B               	movwf	___aldiv@quotient^0,c
 16420   005D1E  0E00               	movlw	0
 16421   005D20  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 16422   005D22  0E00               	movlw	0
 16423   005D24  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 16424   005D26  0E00               	movlw	0
 16425   005D28  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 16426   005D2A  5005               	movf	___aldiv@divisor^0,w,c
 16427   005D2C  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 16428   005D2E  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 16429   005D30  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 16430   005D32  B4D8               	btfsc	status,2,c
 16431   005D34  EF9E  F02E         	goto	u7651
 16432   005D38  EFA0  F02E         	goto	u7650
 16433   005D3C                     u7651:
 16434   005D3C  EFD6  F02E         	goto	l6162
 16435   005D40                     u7650:
 16436   005D40  0E01               	movlw	1
 16437   005D42  6E09               	movwf	___aldiv@counter^0,c
 16438   005D44  EFAA  F02E         	goto	l6148
 16439   005D48                     l6146:
 16440   005D48  90D8               	bcf	status,0,c
 16441   005D4A  3605               	rlcf	___aldiv@divisor^0,f,c
 16442   005D4C  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 16443   005D4E  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 16444   005D50  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 16445   005D52  2A09               	incf	___aldiv@counter^0,f,c
 16446   005D54                     l6148:
 16447   005D54  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 16448   005D56  EFAF  F02E         	goto	u7661
 16449   005D5A  EFB1  F02E         	goto	u7660
 16450   005D5E                     u7661:
 16451   005D5E  EFA4  F02E         	goto	l6146
 16452   005D62                     u7660:
 16453   005D62                     l6150:
 16454   005D62  90D8               	bcf	status,0,c
 16455   005D64  360B               	rlcf	___aldiv@quotient^0,f,c
 16456   005D66  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 16457   005D68  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 16458   005D6A  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 16459   005D6C  5005               	movf	___aldiv@divisor^0,w,c
 16460   005D6E  5C01               	subwf	___aldiv@dividend^0,w,c
 16461   005D70  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16462   005D72  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 16463   005D74  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16464   005D76  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 16465   005D78  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16466   005D7A  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 16467   005D7C  A0D8               	btfss	status,0,c
 16468   005D7E  EFC3  F02E         	goto	u7671
 16469   005D82  EFC5  F02E         	goto	u7670
 16470   005D86                     u7671:
 16471   005D86  EFCE  F02E         	goto	l6158
 16472   005D8A                     u7670:
 16473   005D8A  5005               	movf	___aldiv@divisor^0,w,c
 16474   005D8C  5E01               	subwf	___aldiv@dividend^0,f,c
 16475   005D8E  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16476   005D90  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 16477   005D92  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16478   005D94  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 16479   005D96  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16480   005D98  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 16481   005D9A  800B               	bsf	___aldiv@quotient^0,0,c
 16482   005D9C                     l6158:
 16483   005D9C  90D8               	bcf	status,0,c
 16484   005D9E  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 16485   005DA0  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 16486   005DA2  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 16487   005DA4  3205               	rrcf	___aldiv@divisor^0,f,c
 16488   005DA6  2E09               	decfsz	___aldiv@counter^0,f,c
 16489   005DA8  EFB1  F02E         	goto	l6150
 16490   005DAC                     l6162:
 16491   005DAC  500A               	movf	___aldiv@sign^0,w,c
 16492   005DAE  B4D8               	btfsc	status,2,c
 16493   005DB0  EFDC  F02E         	goto	u7681
 16494   005DB4  EFDE  F02E         	goto	u7680
 16495   005DB8                     u7681:
 16496   005DB8  EFE6  F02E         	goto	l6166
 16497   005DBC                     u7680:
 16498   005DBC  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 16499   005DBE  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 16500   005DC0  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 16501   005DC2  6C0B               	negf	___aldiv@quotient^0,c
 16502   005DC4  0E00               	movlw	0
 16503   005DC6  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 16504   005DC8  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 16505   005DCA  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 16506   005DCC                     l6166:
 16507   005DCC  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 16508   005DD0  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 16509   005DD4  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 16510   005DD8  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 16511   005DDC  0012               	return		;funcret
 16512   005DDE                     __end_of___aldiv:
 16513                           	callstack 0
 16514                           
 16515 ;; *************** function _Handle_Commands *****************
 16516 ;; Defined at:
 16517 ;;		line 168 in file "newmain.c"
 16518 ;; Parameters:    Size  Location     Type
 16519 ;;		None
 16520 ;; Auto vars:     Size  Location     Type
 16521 ;;  cmd             1    4[COMRAM] unsigned char 
 16522 ;; Return value:  Size  Location     Type
 16523 ;;                  1    wreg      void 
 16524 ;; Registers used:
 16525 ;;		wreg, status,2, status,0
 16526 ;; Tracked objects:
 16527 ;;		On entry : 0/0
 16528 ;;		On exit  : 0/0
 16529 ;;		Unchanged: 0/0
 16530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16531 ;;      Params:         0       0       0       0       0       0       0       0       0
 16532 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16533 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16534 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16535 ;;Total ram usage:        5 bytes
 16536 ;; Hardware stack levels used: 1
 16537 ;; Hardware stack levels required when called: 1
 16538 ;; This function calls:
 16539 ;;		Nothing
 16540 ;; This function is called by:
 16541 ;;		_main
 16542 ;; This function uses a non-reentrant model
 16543 ;;
 16544                           
 16545                           	psect	text47
 16546   00592C                     __ptext47:
 16547                           	callstack 0
 16548   00592C                     _Handle_Commands:
 16549                           	callstack 29
 16550   00592C                     
 16551                           ;newmain.c: 169:     if(PIR1bits.RCIF) {
 16552   00592C  AA9E               	btfss	158,5,c	;volatile
 16553   00592E  EF9B  F02C         	goto	u10181
 16554   005932  EF9D  F02C         	goto	u10180
 16555   005936                     u10181:
 16556   005936  EFD5  F02C         	goto	l7800
 16557   00593A                     u10180:
 16558   00593A                     
 16559                           ;newmain.c: 170:         char cmd = RCREG;
 16560   00593A  CFAE F005          	movff	4014,Handle_Commands@cmd	;volatile
 16561                           
 16562                           ;newmain.c: 171:         switch(cmd) {
 16563   00593E  EFC6  F02C         	goto	l7798
 16564   005942                     l7786:
 16565                           
 16566                           ;newmain.c: 173:                 if(!trigger_test) {
 16567   005942  505E               	movf	_trigger_test^0,w,c
 16568   005944  A4D8               	btfss	status,2,c
 16569   005946  EFA7  F02C         	goto	u10191
 16570   00594A  EFA9  F02C         	goto	u10190
 16571   00594E                     u10191:
 16572   00594E  EFD5  F02C         	goto	l7800
 16573   005952                     u10190:
 16574   005952                     
 16575                           ;newmain.c: 174:                     trigger_test = 1;
 16576   005952  0E01               	movlw	1
 16577   005954  6E5E               	movwf	_trigger_test^0,c
 16578   005956                     
 16579                           ;newmain.c: 175:                     test_start_time = system_millis;
 16580   005956  C2FA  F344         	movff	_system_millis,_test_start_time
 16581   00595A  C2FB  F345         	movff	_system_millis+1,_test_start_time+1
 16582   00595E  C2FC  F346         	movff	_system_millis+2,_test_start_time+2
 16583   005962  C2FD  F347         	movff	_system_millis+3,_test_start_time+3
 16584   005966                     
 16585                           ;newmain.c: 176:                     test_start_flow = total_flow;
 16586   005966  C348  F32C         	movff	_total_flow,_test_start_flow
 16587   00596A  C349  F32D         	movff	_total_flow+1,_test_start_flow+1
 16588   00596E  C34A  F32E         	movff	_total_flow+2,_test_start_flow+2
 16589   005972  C34B  F32F         	movff	_total_flow+3,_test_start_flow+3
 16590   005976  EFD5  F02C         	goto	l7800
 16591   00597A                     l7794:
 16592                           
 16593                           ;newmain.c: 180:                 shutdown_system = 1;
 16594   00597A  0E01               	movlw	1
 16595   00597C  0103               	movlb	3	; () banked
 16596   00597E  6F6B               	movwf	_shutdown_system& (0+255),b
 16597                           
 16598                           ;newmain.c: 181:                 break;
 16599   005980  EFD5  F02C         	goto	l7800
 16600   005984                     l170:
 16601                           
 16602                           ;newmain.c: 183:                 shutdown_system = 0;
 16603   005984  0103               	movlb	3	; () banked
 16604   005986  6B6B               	clrf	_shutdown_system& (0+255),b
 16605                           
 16606                           ;newmain.c: 184:                 break;
 16607   005988  EFD5  F02C         	goto	l7800
 16608   00598C                     l7798:
 16609   00598C  5005               	movf	Handle_Commands@cmd^0,w,c
 16610                           
 16611                           ; Switch size 1, requested type "simple"
 16612                           ; Number of cases is 3, Range of values is 82 to 84
 16613                           ; switch strategies available:
 16614                           ; Name         Instructions Cycles
 16615                           ; simple_byte           10     6 (average)
 16616                           ;	Chosen strategy is simple_byte
 16617   00598E  0A52               	xorlw	82	; case 82
 16618   005990  B4D8               	btfsc	status,2,c
 16619   005992  EFC2  F02C         	goto	l170
 16620   005996  0A01               	xorlw	1	; case 83
 16621   005998  B4D8               	btfsc	status,2,c
 16622   00599A  EFBD  F02C         	goto	l7794
 16623   00599E  0A07               	xorlw	7	; case 84
 16624   0059A0  B4D8               	btfsc	status,2,c
 16625   0059A2  EFA1  F02C         	goto	l7786
 16626   0059A6  EFD5  F02C         	goto	l7800
 16627   0059AA                     l7800:
 16628                           
 16629                           ;newmain.c: 189:     if(trigger_test) {
 16630   0059AA  505E               	movf	_trigger_test^0,w,c
 16631   0059AC  B4D8               	btfsc	status,2,c
 16632   0059AE  EFDB  F02C         	goto	u10201
 16633   0059B2  EFDD  F02C         	goto	u10200
 16634   0059B6                     u10201:
 16635   0059B6  EF45  F02D         	goto	l176
 16636   0059BA                     u10200:
 16637   0059BA                     
 16638                           ;newmain.c: 190:         PORTBbits.RB0 = 1;
 16639   0059BA  8081               	bsf	129,0,c	;volatile
 16640   0059BC                     
 16641                           ;newmain.c: 191:         pump_active = 1;
 16642   0059BC  0E01               	movlw	1
 16643   0059BE  0103               	movlb	3	; () banked
 16644   0059C0  6F70               	movwf	_pump_active& (0+255),b
 16645   0059C2                     
 16646                           ; BSR set to: 3
 16647                           ;newmain.c: 194:         static unsigned long last_blink = 0;;newmain.c: 195:         if
      +                          (system_millis - last_blink >= 500) {
 16648   0059C2  5128               	movf	Handle_Commands@last_blink& (0+255),w,b
 16649   0059C4  0102               	movlb	2	; () banked
 16650   0059C6  5DFA               	subwf	_system_millis& (0+255),w,b
 16651   0059C8  6E01               	movwf	??_Handle_Commands^0,c
 16652   0059CA  0103               	movlb	3	; () banked
 16653   0059CC  5129               	movf	(Handle_Commands@last_blink+1)& (0+255),w,b
 16654   0059CE  0102               	movlb	2	; () banked
 16655   0059D0  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
 16656   0059D2  6E02               	movwf	(??_Handle_Commands+1)^0,c
 16657   0059D4  0103               	movlb	3	; () banked
 16658   0059D6  512A               	movf	(Handle_Commands@last_blink+2)& (0+255),w,b
 16659   0059D8  0102               	movlb	2	; () banked
 16660   0059DA  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
 16661   0059DC  6E03               	movwf	(??_Handle_Commands+2)^0,c
 16662   0059DE  0103               	movlb	3	; () banked
 16663   0059E0  512B               	movf	(Handle_Commands@last_blink+3)& (0+255),w,b
 16664   0059E2  0102               	movlb	2	; () banked
 16665   0059E4  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
 16666   0059E6  6E04               	movwf	(??_Handle_Commands+3)^0,c
 16667   0059E8  5004               	movf	(??_Handle_Commands+3)^0,w,c
 16668   0059EA  1003               	iorwf	(??_Handle_Commands+2)^0,w,c
 16669   0059EC  E10B               	bnz	u10210
 16670   0059EE  0EF4               	movlw	244
 16671   0059F0  5C01               	subwf	??_Handle_Commands^0,w,c
 16672   0059F2  0E01               	movlw	1
 16673   0059F4  5802               	subwfb	(??_Handle_Commands+1)^0,w,c
 16674   0059F6  A0D8               	btfss	status,0,c
 16675   0059F8  EF00  F02D         	goto	u10211
 16676   0059FC  EF02  F02D         	goto	u10210
 16677   005A00                     u10211:
 16678   005A00  EF1B  F02D         	goto	l7812
 16679   005A04                     u10210:
 16680   005A04                     
 16681                           ; BSR set to: 2
 16682                           ;newmain.c: 196:             PORTBbits.RB5 = !PORTBbits.RB5;
 16683   005A04  AA81               	btfss	129,5,c	;volatile
 16684   005A06  EF07  F02D         	goto	u10221
 16685   005A0A  EF0B  F02D         	goto	u10220
 16686   005A0E                     u10221:
 16687   005A0E  6A01               	clrf	??_Handle_Commands^0,c
 16688   005A10  2A01               	incf	??_Handle_Commands^0,f,c
 16689   005A12  EF0C  F02D         	goto	u10238
 16690   005A16                     u10220:
 16691   005A16  6A01               	clrf	??_Handle_Commands^0,c
 16692   005A18                     u10238:
 16693   005A18  3A01               	swapf	??_Handle_Commands^0,f,c
 16694   005A1A  4601               	rlncf	??_Handle_Commands^0,f,c
 16695   005A1C  5081               	movf	129,w,c	;volatile
 16696   005A1E  1801               	xorwf	??_Handle_Commands^0,w,c
 16697   005A20  0BDF               	andlw	-33
 16698   005A22  1801               	xorwf	??_Handle_Commands^0,w,c
 16699   005A24  6E81               	movwf	129,c	;volatile
 16700   005A26                     
 16701                           ;newmain.c: 197:             last_blink = system_millis;
 16702   005A26  C2FA  F328         	movff	_system_millis,Handle_Commands@last_blink
 16703   005A2A  C2FB  F329         	movff	_system_millis+1,Handle_Commands@last_blink+1
 16704   005A2E  C2FC  F32A         	movff	_system_millis+2,Handle_Commands@last_blink+2
 16705   005A32  C2FD  F32B         	movff	_system_millis+3,Handle_Commands@last_blink+3
 16706   005A36                     l7812:
 16707                           
 16708                           ;newmain.c: 199:         alarm_active = 1;
 16709   005A36  0E01               	movlw	1
 16710   005A38  0103               	movlb	3	; () banked
 16711   005A3A  6F6F               	movwf	_alarm_active& (0+255),b
 16712   005A3C                     
 16713                           ; BSR set to: 3
 16714                           ;newmain.c: 202:         if((system_millis - test_start_time) >= TEST_DURATION) {
 16715   005A3C  5144               	movf	_test_start_time& (0+255),w,b
 16716   005A3E  0102               	movlb	2	; () banked
 16717   005A40  5DFA               	subwf	_system_millis& (0+255),w,b
 16718   005A42  6E01               	movwf	??_Handle_Commands^0,c
 16719   005A44  0103               	movlb	3	; () banked
 16720   005A46  5145               	movf	(_test_start_time+1)& (0+255),w,b
 16721   005A48  0102               	movlb	2	; () banked
 16722   005A4A  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
 16723   005A4C  6E02               	movwf	(??_Handle_Commands+1)^0,c
 16724   005A4E  0103               	movlb	3	; () banked
 16725   005A50  5146               	movf	(_test_start_time+2)& (0+255),w,b
 16726   005A52  0102               	movlb	2	; () banked
 16727   005A54  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
 16728   005A56  6E03               	movwf	(??_Handle_Commands+2)^0,c
 16729   005A58  0103               	movlb	3	; () banked
 16730   005A5A  5147               	movf	(_test_start_time+3)& (0+255),w,b
 16731   005A5C  0102               	movlb	2	; () banked
 16732   005A5E  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
 16733   005A60  6E04               	movwf	(??_Handle_Commands+3)^0,c
 16734   005A62  5004               	movf	(??_Handle_Commands+3)^0,w,c
 16735   005A64  1003               	iorwf	(??_Handle_Commands+2)^0,w,c
 16736   005A66  E10B               	bnz	u10240
 16737   005A68  0E10               	movlw	16
 16738   005A6A  5C01               	subwf	??_Handle_Commands^0,w,c
 16739   005A6C  0E27               	movlw	39
 16740   005A6E  5802               	subwfb	(??_Handle_Commands+1)^0,w,c
 16741   005A70  A0D8               	btfss	status,0,c
 16742   005A72  EF3D  F02D         	goto	u10241
 16743   005A76  EF3F  F02D         	goto	u10240
 16744   005A7A                     u10241:
 16745   005A7A  EF45  F02D         	goto	l176
 16746   005A7E                     u10240:
 16747   005A7E                     
 16748                           ; BSR set to: 2
 16749                           ;newmain.c: 203:             trigger_test = 0;
 16750   005A7E  6A5E               	clrf	_trigger_test^0,c
 16751                           
 16752                           ;newmain.c: 204:             PORTBbits.RB0 = 0;
 16753   005A80  9081               	bcf	129,0,c	;volatile
 16754                           
 16755                           ;newmain.c: 205:             PORTBbits.RB5 = 1;
 16756   005A82  8A81               	bsf	129,5,c	;volatile
 16757                           
 16758                           ;newmain.c: 206:             pump_active = 0;
 16759   005A84  0103               	movlb	3	; () banked
 16760   005A86  6B70               	clrf	_pump_active& (0+255),b
 16761                           
 16762                           ;newmain.c: 207:             alarm_active = 0;
 16763   005A88  6B6F               	clrf	_alarm_active& (0+255),b
 16764   005A8A                     l176:
 16765   005A8A  0012               	return		;funcret
 16766   005A8C                     __end_of_Handle_Commands:
 16767                           	callstack 0
 16768                           
 16769 ;; *************** function _ADC_Init *****************
 16770 ;; Defined at:
 16771 ;;		line 416 in file "newmain.c"
 16772 ;; Parameters:    Size  Location     Type
 16773 ;;		None
 16774 ;; Auto vars:     Size  Location     Type
 16775 ;;		None
 16776 ;; Return value:  Size  Location     Type
 16777 ;;                  1    wreg      void 
 16778 ;; Registers used:
 16779 ;;		wreg, status,2
 16780 ;; Tracked objects:
 16781 ;;		On entry : 0/0
 16782 ;;		On exit  : 0/0
 16783 ;;		Unchanged: 0/0
 16784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16785 ;;      Params:         0       0       0       0       0       0       0       0       0
 16786 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16787 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16788 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16789 ;;Total ram usage:        0 bytes
 16790 ;; Hardware stack levels used: 1
 16791 ;; Hardware stack levels required when called: 1
 16792 ;; This function calls:
 16793 ;;		Nothing
 16794 ;; This function is called by:
 16795 ;;		_main
 16796 ;; This function uses a non-reentrant model
 16797 ;;
 16798                           
 16799                           	psect	text48
 16800   006E26                     __ptext48:
 16801                           	callstack 0
 16802   006E26                     _ADC_Init:
 16803                           	callstack 29
 16804   006E26                     
 16805                           ;newmain.c: 417:     TRISA0 = TRISA1 = TRISA2 = 1;
 16806   006E26  8492               	bsf	3986,2,c	;volatile
 16807   006E28  8292               	bsf	3986,1,c	;volatile
 16808   006E2A  8092               	bsf	3986,0,c	;volatile
 16809                           
 16810                           ;newmain.c: 418:     ADCON0bits.ADON = 1;
 16811   006E2C  80C2               	bsf	194,0,c	;volatile
 16812   006E2E                     
 16813                           ;newmain.c: 419:     ADCON1 = 0x0C;
 16814   006E2E  0E0C               	movlw	12
 16815   006E30  6EC1               	movwf	193,c	;volatile
 16816                           
 16817                           ;newmain.c: 420:     ADCON2 = 0xBE;
 16818   006E32  0EBE               	movlw	190
 16819   006E34  6EC0               	movwf	192,c	;volatile
 16820   006E36  0012               	return		;funcret
 16821   006E38                     __end_of_ADC_Init:
 16822                           	callstack 0
 16823                           
 16824 ;; *************** function _HighISR *****************
 16825 ;; Defined at:
 16826 ;;		line 100 in file "newmain.c"
 16827 ;; Parameters:    Size  Location     Type
 16828 ;;		None
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;		None
 16831 ;; Return value:  Size  Location     Type
 16832 ;;                  1    wreg      void 
 16833 ;; Registers used:
 16834 ;;		status,2, status,0
 16835 ;; Tracked objects:
 16836 ;;		On entry : 0/0
 16837 ;;		On exit  : 0/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16840 ;;      Params:         0       0       0       0       0       0       0       0       0
 16841 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16843 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16844 ;;Total ram usage:        0 bytes
 16845 ;; Hardware stack levels used: 1
 16846 ;; This function calls:
 16847 ;;		Nothing
 16848 ;; This function is called by:
 16849 ;;		Interrupt level 2
 16850 ;; This function uses a non-reentrant model
 16851 ;;
 16852                           
 16853                           	psect	intcode
 16854   000008                     __pintcode:
 16855                           	callstack 0
 16856   000008                     _HighISR:
 16857                           	callstack 20
 16858                           
 16859                           ;incstack = 0
 16860   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16861   00000A  EDEF  F036         	call	int_func,f	;refresh shadow registers
 16862                           
 16863                           	psect	intcode_body
 16864   006DDE                     __pintcode_body:
 16865                           	callstack 20
 16866   006DDE                     int_func:
 16867                           	callstack 20
 16868   006DDE  0006               	pop		; remove dummy address from shadow register refresh
 16869   006DE0                     
 16870                           ;newmain.c: 101:     if (INTCON3bits.INT1IF) {
 16871   006DE0  A0F0               	btfss	240,0,c	;volatile
 16872   006DE2  EFF5  F036         	goto	i2u709_41
 16873   006DE6  EFF7  F036         	goto	i2u709_40
 16874   006DEA                     i2u709_41:
 16875   006DEA  EFFB  F036         	goto	i2l146
 16876   006DEE                     i2u709_40:
 16877   006DEE                     
 16878                           ;newmain.c: 102:         pulse_count++;
 16879   006DEE  0103               	movlb	3	; () banked
 16880   006DF0  4B66               	infsnz	_pulse_count& (0+255),f,b	;volatile
 16881   006DF2  2B67               	incf	(_pulse_count+1)& (0+255),f,b	;volatile
 16882   006DF4                     
 16883                           ; BSR set to: 3
 16884                           ;newmain.c: 103:         INTCON3bits.INT1IF = 0;
 16885   006DF4  90F0               	bcf	240,0,c	;volatile
 16886   006DF6                     i2l146:
 16887   006DF6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16888   006DF8  0011               	retfie		f
 16889   006DFA                     __end_of_HighISR:
 16890                           	callstack 0
 16891                           
 16892                           	psect	rparam
 16893   000001                     ___rparam_used  equ	1
 16894   000000                     ___param_bank   equ	0
 16895   000000                     __Lparam        equ	__Lrparam
 16896   000000                     __Hparam        equ	__Hrparam
 16897                           
 16898                           	psect	temp
 16899   00005F                     btemp:
 16900                           	callstack 0
 16901   00005F                     	ds	1
 16902   00005F                     int$flags       set	btemp
 16903   000060                     wtemp8          set	btemp+1
 16904   000060                     ttemp5          set	btemp+1
 16905   000063                     ttemp6          set	btemp+4
 16906   000067                     ttemp7          set	btemp+8
 16907                           
 16908                           	psect	idloc
 16909                           
 16910                           ;Config register IDLOC0 @ 0x200000
 16911                           ;	unspecified, using default values
 16912   200000                     	org	2097152
 16913   200000  FF                 	db	255
 16914                           
 16915                           ;Config register IDLOC1 @ 0x200001
 16916                           ;	unspecified, using default values
 16917   200001                     	org	2097153
 16918   200001  FF                 	db	255
 16919                           
 16920                           ;Config register IDLOC2 @ 0x200002
 16921                           ;	unspecified, using default values
 16922   200002                     	org	2097154
 16923   200002  FF                 	db	255
 16924                           
 16925                           ;Config register IDLOC3 @ 0x200003
 16926                           ;	unspecified, using default values
 16927   200003                     	org	2097155
 16928   200003  FF                 	db	255
 16929                           
 16930                           ;Config register IDLOC4 @ 0x200004
 16931                           ;	unspecified, using default values
 16932   200004                     	org	2097156
 16933   200004  FF                 	db	255
 16934                           
 16935                           ;Config register IDLOC5 @ 0x200005
 16936                           ;	unspecified, using default values
 16937   200005                     	org	2097157
 16938   200005  FF                 	db	255
 16939                           
 16940                           ;Config register IDLOC6 @ 0x200006
 16941                           ;	unspecified, using default values
 16942   200006                     	org	2097158
 16943   200006  FF                 	db	255
 16944                           
 16945                           ;Config register IDLOC7 @ 0x200007
 16946                           ;	unspecified, using default values
 16947   200007                     	org	2097159
 16948   200007  FF                 	db	255
 16949                           
 16950                           	psect	config
 16951                           
 16952                           ;Config register CONFIG1L @ 0x300000
 16953                           ;	unspecified, using default values
 16954                           ;	PLL Prescaler Selection bits
 16955                           ;	PLLDIV = 0x0, unprogrammed default
 16956                           ;	System Clock Postscaler Selection bits
 16957                           ;	CPUDIV = 0x0, unprogrammed default
 16958                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 16959                           ;	USBDIV = 0x0, unprogrammed default
 16960   300000                     	org	3145728
 16961   300000  00                 	db	0
 16962                           
 16963                           ;Config register CONFIG1H @ 0x300001
 16964                           ;	Oscillator Selection bits
 16965                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
 16966                           ;	Fail-Safe Clock Monitor Enable bit
 16967                           ;	FCMEN = 0x0, unprogrammed default
 16968                           ;	Internal/External Oscillator Switchover bit
 16969                           ;	IESO = 0x0, unprogrammed default
 16970   300001                     	org	3145729
 16971   300001  08                 	db	8
 16972                           
 16973                           ;Config register CONFIG2L @ 0x300002
 16974                           ;	Power-up Timer Enable bit
 16975                           ;	PWRT = ON, PWRT enabled
 16976                           ;	Brown-out Reset Enable bits
 16977                           ;	BOR = 0x3, unprogrammed default
 16978                           ;	Brown-out Reset Voltage bits
 16979                           ;	BORV = 0x3, unprogrammed default
 16980                           ;	USB Voltage Regulator Enable bit
 16981                           ;	VREGEN = 0x0, unprogrammed default
 16982   300002                     	org	3145730
 16983   300002  1E                 	db	30
 16984                           
 16985                           ;Config register CONFIG2H @ 0x300003
 16986                           ;	Watchdog Timer Enable bit
 16987                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16988                           ;	Watchdog Timer Postscale Select bits
 16989                           ;	WDTPS = 0xF, unprogrammed default
 16990   300003                     	org	3145731
 16991   300003  1E                 	db	30
 16992                           
 16993                           ; Padding undefined space
 16994   300004                     	org	3145732
 16995   300004  FF                 	db	255
 16996                           
 16997                           ;Config register CONFIG3H @ 0x300005
 16998                           ;	CCP2 MUX bit
 16999                           ;	CCP2MX = 0x1, unprogrammed default
 17000                           ;	PORTB A/D Enable bit
 17001                           ;	PBADEN = 0x1, unprogrammed default
 17002                           ;	Low-Power Timer 1 Oscillator Enable bit
 17003                           ;	LPT1OSC = 0x0, unprogrammed default
 17004                           ;	MCLR Pin Enable bit
 17005                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 17006   300005                     	org	3145733
 17007   300005  83                 	db	131
 17008                           
 17009                           ;Config register CONFIG4L @ 0x300006
 17010                           ;	Stack Full/Underflow Reset Enable bit
 17011                           ;	STVREN = 0x1, unprogrammed default
 17012                           ;	Single-Supply ICSP Enable bit
 17013                           ;	LVP = OFF, Single-Supply ICSP disabled
 17014                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 17015                           ;	ICPRT = 0x0, unprogrammed default
 17016                           ;	Extended Instruction Set Enable bit
 17017                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17018                           ;	Background Debugger Enable bit
 17019                           ;	DEBUG = 0x1, unprogrammed default
 17020   300006                     	org	3145734
 17021   300006  81                 	db	129
 17022                           
 17023                           ; Padding undefined space
 17024   300007                     	org	3145735
 17025   300007  FF                 	db	255
 17026                           
 17027                           ;Config register CONFIG5L @ 0x300008
 17028                           ;	unspecified, using default values
 17029                           ;	Code Protection bit
 17030                           ;	CP0 = 0x1, unprogrammed default
 17031                           ;	Code Protection bit
 17032                           ;	CP1 = 0x1, unprogrammed default
 17033                           ;	Code Protection bit
 17034                           ;	CP2 = 0x1, unprogrammed default
 17035                           ;	Code Protection bit
 17036                           ;	CP3 = 0x1, unprogrammed default
 17037   300008                     	org	3145736
 17038   300008  0F                 	db	15
 17039                           
 17040                           ;Config register CONFIG5H @ 0x300009
 17041                           ;	unspecified, using default values
 17042                           ;	Boot Block Code Protection bit
 17043                           ;	CPB = 0x1, unprogrammed default
 17044                           ;	Data EEPROM Code Protection bit
 17045                           ;	CPD = 0x1, unprogrammed default
 17046   300009                     	org	3145737
 17047   300009  C0                 	db	192
 17048                           
 17049                           ;Config register CONFIG6L @ 0x30000A
 17050                           ;	unspecified, using default values
 17051                           ;	Write Protection bit
 17052                           ;	WRT0 = 0x1, unprogrammed default
 17053                           ;	Write Protection bit
 17054                           ;	WRT1 = 0x1, unprogrammed default
 17055                           ;	Write Protection bit
 17056                           ;	WRT2 = 0x1, unprogrammed default
 17057                           ;	Write Protection bit
 17058                           ;	WRT3 = 0x1, unprogrammed default
 17059   30000A                     	org	3145738
 17060   30000A  0F                 	db	15
 17061                           
 17062                           ;Config register CONFIG6H @ 0x30000B
 17063                           ;	unspecified, using default values
 17064                           ;	Configuration Register Write Protection bit
 17065                           ;	WRTC = 0x1, unprogrammed default
 17066                           ;	Boot Block Write Protection bit
 17067                           ;	WRTB = 0x1, unprogrammed default
 17068                           ;	Data EEPROM Write Protection bit
 17069                           ;	WRTD = 0x1, unprogrammed default
 17070   30000B                     	org	3145739
 17071   30000B  E0                 	db	224
 17072                           
 17073                           ;Config register CONFIG7L @ 0x30000C
 17074                           ;	unspecified, using default values
 17075                           ;	Table Read Protection bit
 17076                           ;	EBTR0 = 0x1, unprogrammed default
 17077                           ;	Table Read Protection bit
 17078                           ;	EBTR1 = 0x1, unprogrammed default
 17079                           ;	Table Read Protection bit
 17080                           ;	EBTR2 = 0x1, unprogrammed default
 17081                           ;	Table Read Protection bit
 17082                           ;	EBTR3 = 0x1, unprogrammed default
 17083   30000C                     	org	3145740
 17084   30000C  0F                 	db	15
 17085                           
 17086                           ;Config register CONFIG7H @ 0x30000D
 17087                           ;	unspecified, using default values
 17088                           ;	Boot Block Table Read Protection bit
 17089                           ;	EBTRB = 0x1, unprogrammed default
 17090   30000D                     	org	3145741
 17091   30000D  40                 	db	64
 17092                           tosu	equ	0xFFF
 17093                           tosh	equ	0xFFE
 17094                           tosl	equ	0xFFD
 17095                           stkptr	equ	0xFFC
 17096                           pclatu	equ	0xFFB
 17097                           pclath	equ	0xFFA
 17098                           pcl	equ	0xFF9
 17099                           tblptru	equ	0xFF8
 17100                           tblptrh	equ	0xFF7
 17101                           tblptrl	equ	0xFF6
 17102                           tablat	equ	0xFF5
 17103                           prodh	equ	0xFF4
 17104                           prodl	equ	0xFF3
 17105                           indf0	equ	0xFEF
 17106                           postinc0	equ	0xFEE
 17107                           postdec0	equ	0xFED
 17108                           preinc0	equ	0xFEC
 17109                           plusw0	equ	0xFEB
 17110                           fsr0h	equ	0xFEA
 17111                           fsr0l	equ	0xFE9
 17112                           wreg	equ	0xFE8
 17113                           indf1	equ	0xFE7
 17114                           postinc1	equ	0xFE6
 17115                           postdec1	equ	0xFE5
 17116                           preinc1	equ	0xFE4
 17117                           plusw1	equ	0xFE3
 17118                           fsr1h	equ	0xFE2
 17119                           fsr1l	equ	0xFE1
 17120                           bsr	equ	0xFE0
 17121                           indf2	equ	0xFDF
 17122                           postinc2	equ	0xFDE
 17123                           postdec2	equ	0xFDD
 17124                           preinc2	equ	0xFDC
 17125                           plusw2	equ	0xFDB
 17126                           fsr2h	equ	0xFDA
 17127                           fsr2l	equ	0xFD9
 17128                           status	equ	0xFD8

Data Sizes:
    Strings     302
    Constant    116
    Data        24
    BSS         221
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     144
    BANK1           256    256     256
    BANK2           256    250     256
    BANK3           256     18     256
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Apply_Filter@samples	PTR float  size(2) Largest target is 20
		 -> temp_samples(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1240$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    S1240$source	PTR const unsigned char  size(2) Largest target is 0

    Send_History_Event@event_type	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[9]), STR_12(CODE[9]), STR_14(CODE[7]), STR_5(CODE[11]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), 

    Send_History_Event@extra_data	PTR const unsigned char  size(2) Largest target is 150
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), STR_13(CODE[1]), 
		 -> STR_15(CODE[1]), STR_9(CODE[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 150
		 -> fire_trigger_sensor(BANK3[20]), Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), 
		 -> sp__powf(UNKNOWN), ?_sprintf(BANK0[2]), STR_11(CODE[9]), STR_12(CODE[9]), 
		 -> STR_13(CODE[1]), STR_14(CODE[7]), STR_15(CODE[1]), STR_24(CODE[7]), 
		 -> STR_5(CODE[11]), STR_7(CODE[9]), STR_8(CODE[11]), STR_9(CODE[1]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 150
		 -> fire_trigger_sensor(BANK3[20]), Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), 
		 -> sp__powf(UNKNOWN), ?_sprintf(BANK0[2]), STR_11(CODE[9]), STR_12(CODE[9]), 
		 -> STR_13(CODE[1]), STR_14(CODE[7]), STR_15(CODE[1]), STR_5(CODE[11]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), STR_9(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[13]), STR_18(CODE[4]), STR_2(CODE[19]), STR_21(CODE[4]), 
		 -> STR_3(CODE[10]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _main->_Update_Actuators
    _Update_Actuators->___flge
    _Read_Sensors->___flge
    _powf->___flge
    _scalbnf->___flmul
    _Apply_Filter->___fladd
    _Handle_Fire_Events->___flge
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flsub
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Handle_Fire_Events
    _Update_Actuators->___flge
    _Send_Data->_sprintf
    _Read_Sensors->_powf
    _powf->___flge
    _Handle_Test_Events->_Send_History_Event
    _Handle_Shutdown_Events->_Send_History_Event
    _Handle_Fire_Events->_Send_History_Event
    _Send_History_Event->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Handle_Test_Events
    _Read_Sensors->_powf
    _Handle_Test_Events->_Send_History_Event
    _Handle_Shutdown_Events->_Send_History_Event
    _Handle_Fire_Events->_Send_History_Event

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Handle_Fire_Events

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0  218725
                                            142 BANK0      2     2      0
                                              0 BANK3     18    18      0
                           _ADC_Init
                           _ADC_Read
                    _Handle_Commands
                 _Handle_Fire_Events
             _Handle_Shutdown_Events
                 _Handle_Test_Events
                     _Interrupt_Init
                       _Read_Sensors
                          _Send_Data
                          _UART_Init
                   _Update_Actuators
                            ___awmod
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     439
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Update_Actuators                                     5     5      0     393
                                             92 COMRAM     1     1      0
                                              8 BANK0      4     4      0
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send_Data                                          202   202      0   25802
                                              0 BANK1    202   202      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Read_Sensors                                        52    52      0   43055
                                             25 BANK0     52    52      0
                           _ADC_Read
                       _Apply_Filter
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   25096
                                              8 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               41    37      4    1070
                                              0 COMRAM    37    33      4
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    3093
                                             39 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     529
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _Apply_Filter                                        14     8      6    5293
                                             80 COMRAM     8     2      6
                                              0 BANK0      6     6      0
                            ___fladd
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Test_Events                                  56    56      0   55118
                                            132 BANK0      2     2      0
                                            202 BANK1     54    54      0
                 _Send_History_Event
                            ___flsub
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Handle_Shutdown_Events                               0     0      0   25900
                 _Send_History_Event
 ---------------------------------------------------------------------------------
 (1) _Handle_Fire_Events                                 260   260      0   55974
                                            132 BANK0     10    10      0
                                              0 BANK2    250   250      0
                 _Send_History_Event
                             ___flge
                            ___flsub
                            ___lldiv
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Send_History_Event                                 206   202      4   25900
                                            128 BANK0      4     0      4
                                              0 BANK1    202   202      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             50    14     36   25623
                                             80 BANK0     48    12     36
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4   25245
                                             74 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   24979
                                             60 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                11     6      5    1899
                                             22 COMRAM    11     6      5
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     238
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     253
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _stoa                                                11     8      3     647
                                              8 COMRAM    11     8      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     266
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   17488
                                              8 BANK0     52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     133
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     217
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     102
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     495
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     201
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     346
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    3481
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3194
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      74
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2583
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     356
                                             88 COMRAM     4     4      0
                                              0 BANK0      8     0      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     142
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1833
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                14     9      5    2629
                                             22 COMRAM    14     9      5
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    1068
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3     487
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     341
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      96
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     439
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     451
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Handle_Commands                                      5     5      0      34
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Handle_Commands
   _Handle_Fire_Events
     _Send_History_Event
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aldiv
               ___almod
               _abs
                 ___almod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _efgtoa
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                 ___xxtofl (ARG)
               ___fldiv
               ___fleq
               ___flge
                 ___fladd (ARG)
                 ___flmul (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___fldiv (ARG)
                   ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
               _strcpy
             _fputc
             _read_prec_or_width
             _stoa
               _fputc
             _utoa
               ___lldiv
               ___llmod
               _pad
     ___flge
     ___flsub
     ___lldiv
     _sprintf
     _strcpy
   _Handle_Shutdown_Events
     _Send_History_Event
   _Handle_Test_Events
     _Send_History_Event
     ___flsub
     _sprintf
   _Interrupt_Init
   _Read_Sensors
     _ADC_Read
     _Apply_Filter
       ___fladd
       ___fldiv
     ___fladd
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___xxtofl
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
   _Send_Data
     _sprintf
   _UART_Init
   _Update_Actuators
     ___flge
   ___awmod
   ___fladd
   ___fldiv
   ___flmul
   ___flsub
   ___xxtofl

 _HighISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256     18     256    100.0%
BITBANK2           256      0       0      0.0%
BANK2              256    250     256    100.0%
BITBANK1           256      0       0      0.0%
BANK1              256    256     256    100.0%
BITBANK0           160      0       0      0.0%
BANK0              160    144     144     90.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     93      94    100.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    1004      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jul 07 22:05:02 2025

                   ??_Interrupt_Init 0001                         ___fldiv@aexp 0040  
                       ___fldiv@bexp 003F                          _pump_active 0370  
                       ___fldiv@sign 0038                    _Read_Sensors$1835 0089  
                  _Read_Sensors$1836 008D                    _Read_Sensors$1837 0091  
                                 _L1 7EB9                                   _L2 7EB5  
                                 _L3 7EB1                                   _L4 7EAD  
                                 _L5 7EA9                                   _L6 7EA5  
                                 _P1 7EA1                                   _P2 7E9D  
                                 _P3 7E99                                   _P4 7E95  
                                 _P5 7E91                                   _bp 7E6D  
                                 _cp 7E7D                          _pulse_count 0366  
                                l200 6A98                                  l203 693E  
                                l212 699A                                  l302 68F6  
                                l230 3626                                  l208 696A  
                                l216 30EC                                  l240 5BB2  
                                l170 5984                                  l235 65A4  
                                l260 6E36                                  l309 6906  
                                l253 648C                                  l245 5BBA  
                                l263 6D1E                                  l239 5B0E  
                                l176 5A8A                                  l248 6460  
                                l272 6E24                                  l193 60EC  
                                l257 64BC                                  l354 5DDC  
                                l186 518C                                  l266 6D38  
                                l540 5FA2                                  l269 6E46  
                                l534 6862                                  l702 6A22  
                                l367 63D4                                  l519 670C  
                                l545 5FE8                                  l803 3D1E  
                                l820 3E38                                  l812 3FEA  
                                l804 3D0C                                  l572 5EE2  
                                l549 6DA8                                  l805 3CD2  
                                l830 3EF4                                  l817 3EC6  
                                l906 43D2                                  l930 562A  
                                l836 3FAE                                  l829 3F06  
                                l845 6C7C                                  l933 5786  
                                l870 4A9E                                  l862 49A6  
                                l871 4A8C                                  l695 6A12  
                                l944 571E                                  l857 4B7E  
                                l953 6CC0                                  l937 56C2  
                                l859 49E2                                  l868 4A28  
                                l869 4A46                                  l893 4410  
                                l982 6AB0                                  l990 57B8  
                                l992 57C0                                  l896 42A6  
                                l993 5806                                  l897 42C4  
                                l889 40B0                                  l986 6AFE  
                                l898 431C                                  l899 430A  
                                _lg2 7E8D                                  _abs 6DAA  
                                _pad 6A9A                                  _ovt 7E81  
                       ___awmod@sign 0006                                  wreg 0FE8  
         __end_of_Handle_Test_Events 60EE                         ___flmul@aexp 001C  
                       ___flmul@bexp 0021                         ___flmul@sign 001B  
                       ___flmul@temp 0026                         ___flmul@prod 0022  
                       ___fltol@exp1 000A                                 l1004 592A  
                               l1020 269A                                 l1015 2EB6  
                               l1018 2856                                 l1107 3B34  
                               ?_abs 000B                                 l1108 38BC  
                               l1300 055C                                 l1207 6D00  
                               l1127 39F2                                 l1143 6C36  
                               l1048 2C9E                                 l1064 6192  
                               l1080 5CD2                                 l1072 5BD8  
                               l1161 6DDC                                 l1153 62EA  
                               l1170 5516                                 l1074 5BE0  
                               l1340 6E48                                 l1084 67B0  
                               l1068 61EC                                 l1181 6B54  
                               l1333 248A                                 l1158 6DC4  
                               l1350 53C0                                 l1167 55D2  
                               l1088 67B8                                 l1272 02F4  
                               l1370 4718                                 l1282 038A  
                               l1187 6BA4                                 l1099 36E2  
                               l1363 45F6                                 l1267 24C6  
                               l1372 4786                                 l1292 044C  
                               l1199 665E                                 l1367 4654  
                               l1359 47EE                                 l1296 04FE  
                               l1378 6D70                                 l6010 3D88  
                               l6002 3D50                                 l6012 3D8C  
                               l6004 3D60                                 l6020 3DAC  
                               l6100 6D3A                                 l6022 3DD2  
                               l6030 3E28                                 l6014 3D9A  
                               l6006 3D6E                                 l6102 6D42  
                               l6110 6892                                 l6200 63B4  
                               l6040 3E7C                                 l6032 3E4E  
                               l6024 3E06                                 l6016 3D9C  
                               l6008 3D7C                                 l6120 68E4  
                               l6112 689E                                 l6104 6864  
                               l7000 3658                                 l6130 5CE4  
                               l6202 63C4                                 l6210 480A  
                               l6050 3EA6                                 l6042 3E8A  
                               l6034 3E5E                                 l6026 3E08  
                               l6018 3DA6                                 l6122 68E6  
                               l6114 68AC                                 l6106 6874  
                               l7010 36B0                                 l7002 3666  
                               l6140 5D1A                                 l6132 5CF4  
                               l6300 4A38                                 l6220 483E  
                               l6212 480C                                 l6052 3EB6  
                               l6044 3E8C                                 l6028 3E18  
                               l6124 68F0                                 l6116 68B6  
                               l6108 688A                                 l7020 36E8  
                               l7012 36C0                                 l7004 366C  
                               l6150 5D62                                 l6142 5D2A  
                               l6134 5CF8                                 l6126 5CD4  
                               l6310 4ABA                                 l6302 4A56  
                               l6230 486E                                 l6214 481C  
                               l6222 4844                                 l6206 47F0  
                               l6062 3F16                                 l6070 3F6C  
                               l6046 3E9A                                 l6038 3E72  
                               l6054 3EB8                                 l6118 68D4  
                               l7102 3A8A                                 l7022 370E  
                               l7014 36D2                                 l7006 3690  
                               ?_pad 000F                                 l6160 5DA6  
                               l6152 5D6C                                 l6144 5D40  
                               l6136 5D06                                 l6128 5CD6  
                               l6320 4B26                                 l6312 4AC8  
                               l6304 4A84                                 l6240 48A2  
                               l6232 4870                                 l6224 4854  
                               l6216 482C                                 l6208 47FC  
                               l6400 4166                                 l6080 3FC2  
                               l6072 3F7C                                 l6064 3F22  
                               l6056 3ED6                                 l6048 3EA2  
                               l7112 3AE8                                 l7104 3AA0  
                               l7040 37E4                                 l7024 372A  
                               l7032 3798                                 l7016 36DA  
                               l7008 369C                                 l7200 4492  
                               l8000 649A                                 l6154 5D8A  
                               l6146 5D48                                 l6162 5DAC  
                               l6138 5D16                                 l6170 62EC  
                               l6330 4B6C                                 l6322 4B40  
                               l6314 4AF2                                 l6250 48E6  
                               l6234 4880                                 l6242 48A8  
                               l6226 485A                                 l6218 483C  
                               l6410 41BC                                 l6402 4176  
                               l6082 3FC4                                 l6074 3F8C  
                               l6066 3F30                                 l6058 3EEC  
                               l7106 3ABE                                 l7114 3B00  
                               l7050 386A                                 l7042 3804  
                               l7034 37AE                                 l7026 374A  
                               l7130 6C2C                                 l7210 4502  
                               l7202 44A2                                 l8002 64A0  
                               l8010 6678                                 l6164 5DBC  
                               l6156 5D9A                                 l6148 5D54  
                               l6180 631E                                 l6172 62EE  
                               l6092 6CC2                                 l6332 4B72  
                               l6324 4B58                                 l6308 4AAE  
                               l6316 4AF6                                 l6260 490E  
                               l6252 48EA                                 l6244 48B8  
                               l6236 4890                                 l6228 4860  
                               l6500 5F62                                 l6420 4260  
                               l6412 41D8                                 l6404 4182  
                               l6084 3FCA                                 l6076 3FAC  
                               l6068 3F6A                                 l7060 38BE  
                               l7052 3888                                 l7044 382E  
                               l7036 37C8                                 l7028 3772  
                               l7124 6BF0                                 l7140 6C9C  
                               l7300 6D04                                 l8020 66AC  
                               l8012 667C                                 l8004 6660  
                               l8100 4E60                                 l6166 5DCC  
                               l6158 5D9C                                 l6190 6366  
                               l6182 632E                                 l6174 62FC  
                               l6094 6CCE                                 l6334 4B74  
                               l6326 4B5A                                 l6318 4B10  
                               l6270 495C                                 l6246 48CE  
                               l6238 48A0                                 l6510 5FE6  
                               l6502 5F70                                 l6430 42B6  
                               l6422 426E                                 l6414 41E4  
                               l6406 4192                                 l6350 4018  
                               l6342 3FEC                                 l6086 3FD8  
                               l6078 3FBC                                 l7070 3948  
                               l7062 38E0                                 l7118 3B12  
                               l7126 6BFC                                 l7142 6CB0  
                               l7134 6C7E                                 l7310 6908  
                               l7302 6D16                                 l7150 55F4  
                               l7230 45C0                                 l7214 4516  
                               l7222 4542                                 l7206 44B6  
                               l8030 66E6                                 l8022 66B4  
                               l8014 668A                                 l8006 6662  
                               l8110 4E8E                                 l8102 4E64  
                               l6192 6384                                 l6184 6344  
                               l6176 630C                                 l6096 6CDC  
                               l6328 4B5E                                 l6280 49A4  
                               l6272 496C                                 l6264 4922  
                               l6248 48DE                                 l6256 48FE  
                               l6504 5F82                                 l6440 4338  
                               l6432 42D4                                 l6424 428C  
                               l6416 4200                                 l6408 41AC  
                               l6360 4054                                 l6352 4028  
                               l6344 3FF8                                 l6088 3FDA  
                               l6600 620E                                 l7072 397A  
                               l7064 38EC                                 l7048 3854  
                               l7128 6C10                                 l7136 6C8C  
                               l7312 694C                                 l7304 6D1C  
                               l7320 64BE                                 l7160 566C  
                               l7152 563A                                 l7240 468E  
                               l7232 45CE                                 l7224 4596  
                               l7216 4524                                 l7208 44D4  
                               l7400 03EA                                 l8024 66C2  
                               l8032 66EC                                 l8016 6692  
                               l8008 6670                                 l8120 4EB6  
                               l8112 4E92                                 l8104 4E76  
                               l8040 4B80                                 l6194 6394  
                               l6186 634C                                 l6178 6310  
                               l6098 6CE0                                 l6290 49F2  
                               l6282 49B0                                 l6274 4972  
                               l6266 493C                                 l6258 490E  
                               l6506 5F90                                 l6450 43A2  
                               l6442 4346                                 l6434 4302  
                               l6426 4296                                 l6418 422A  
                               l6370 408A                                 l6362 405A  
                               l6354 4038                                 l6346 4006  
                               l6514 6D72                                 l6530 5E32  
                               l6522 5DDE                                 l6602 624C  
                               l6610 628C                                 l7082 39C2  
                               l7066 38F4                                 l7058 38A4  
                               l7138 6C94                                 l7314 695A  
                               l7306 6D2C                                 l7330 6502  
                               l7322 64E8                                 l7170 56F4  
                               l7162 5678                                 l7154 5650  
                               l7146 55D6                                 l7250 4748  
                               l7242 46A2                                 l7234 4636  
                               l7226 45AA                                 l7402 0406  
                               l8034 66FC                                 l8026 66D8  
                               l8018 66A4                                 l8122 4EC0  
                               l8114 4E96                                 l8106 4E7A  
                               l8050 4BA8                                 l8042 4B88  
                               l6196 639E                                 l6188 6358  
                               l6700 58CE                                 l6292 4A08  
                               l6284 49CE                                 l6276 4982  
                               l6268 494C                                 l6508 5FE0  
                               l6460 43F4                                 l6452 43BC  
                               l6444 4370                                 l6428 42A4  
                               l6372 409A                                 l6364 4068  
                               l6356 403E                                 l6348 4008  
                               l6516 6D88                                 l5900 3B42  
                               l6532 5E34                                 l6524 5DF4  
                               l6612 629E                                 l6604 6274  
                               l6620 6B00                                 l7092 39F8  
                               l7084 39D0                                 l7068 3916  
                               l7076 398C                                 l7316 6978  
                               l7332 654E                                 l7324 64FA  
                               l7180 5732                                 l7172 5700  
                               l7164 56AA                                 l7148 55E6  
                               l7260 519E                                 l7252 475E  
                               l7244 46E0                                 l7236 4644  
                               l7228 45B4                                 l7500 0894  
                               l7420 050E                                 l7412 04B0  
                               l7404 0414                                 l7340 0012  
                               l8036 6704                                 l8028 66E0  
                               l8124 4EC4                                 l8116 4E9A  
                               l8108 4E8A                                 l8052 4BAC  
                               l8044 4B8A                                 l6198 63A4  
                               l6702 58E8                                 l6294 4A0E  
                               l6286 49D0                                 l6278 4996  
                               l6462 43F6                                 l6454 43CC  
                               l6438 432C                                 l6446 4374  
                               l6390 411C                                 l6382 40E4  
                               l6374 40A0                                 l6366 406A  
                               l6358 404E                                 l6518 6D98  
                               l5910 3B82                                 l5902 3B50  
                               l6470 6C38                                 l6534 5E44  
                               l6606 6280                                 l6630 53E2  
                               l6622 6B0E                                 l7094 3A16  
                               l7086 39E2                                 l7078 399C  
                               l7318 697E                                 l7334 6554  
                               l7182 5756                                 l7174 570E  
                               l7166 56AC                                 l7158 5664  
                               l7270 5246                                 l7262 51BA  
                               l7246 4728                                 l7238 466E  
                               l7510 0A14                                 l7502 08EC  
                               l7430 05AE                                 l7422 052A  
                               l7414 04C8                                 l7406 0460  
                               l7350 00AC                                 l7342 0032  
                               l8126 4EE2                                 l8118 4EB2  
                               l8070 4C7A                                 l8062 4BBE  
                               l8054 4BB0                                 l8046 4B8C  
                               l6704 58F8                                 l6296 4A18  
                               l6288 49E0                                 l6480 67F8  
                               l6456 43D6                                 l6464 43FC  
                               l6448 438E                                 l6392 4134  
                               l6384 40F0                                 l6376 40C0  
                               l6368 407A                                 l5920 3BB2  
                               l5912 3B84                                 l5904 3B52  
                               l6472 6C48                                 l6560 5EC2  
                               l6544 5E6E                                 l6536 5E48  
                               l6528 5E08                                 l6616 62E2  
                               l6640 54CA                                 l6632 5438  
                               l6624 6B22                                 l6800 286E  
                               l6720 2512                                 l6712 24C8  
                               l7096 3A36                                 l7088 39EA  
                               l7336 6570                                 l7184 5766  
                               l7176 572C                                 l7168 56B8  
                               l7280 52C6                                 l7272 524E  
                               l7264 51EE                                 l7248 4732  
                               l7192 4412                                 l7600 136C  
                               l7520 0AC6                                 l7512 0A2E  
                               l7504 0920                                 l7432 05BE  
                               l7440 067E                                 l7424 0540  
                               l7416 04D6                                 l7408 0478  
                               l7344 007A                                 l8080 4CD4  
                               l8072 4C96                                 l8064 4BCC  
                               l8056 4BB4                                 l8048 4B8E  
                               l6706 58FE                                 l6298 4A26  
                               l6482 6826                                 l6466 4400  
                               l6458 43E6                                 l6394 4140  
                               l6386 40FA                                 l6378 40D0  
                               l5930 3BDA                                 l5922 3BB4  
                               l5906 3B62                                 l5914 3B8A  
                               l6562 5ED2                                 l6554 5E96  
                               l6546 5E78                                 l6538 5E56  
                               l6650 55B2                                 l6642 5506  
                               l6634 544C                                 l6810 28A4  
                               l6802 287A                                 l6730 2550  
                               l6722 251C                                 l6714 24DC  
                               l6570 69BA                                 l7098 3A60  
                               l7186 5774                                 l7178 572E  
                               l7290 5342                                 l7282 52CE  
                               l7274 526A                                 l7266 51F6  
                               l7258 518E                                 l7194 4422  
                               l7610 1456                                 l7602 1386  
                               l7530 0B9C                                 l7522 0AFA  
                               l7514 0A62                                 l7506 0954  
                               l7434 0622                                 l7426 056C  
                               l7370 018C                                 l7362 013E  
                               l7354 00C2                                 l8090 4DF2  
                               l8082 4CE2                                 l8074 4CCA  
                               l8066 4C5A                                 l6708 590E  
                               l6484 6836                                 l6476 67BA  
                               l6492 5EE4                                 l6396 414C  
                               l6388 4110                                 l5940 3C12  
                               l5932 3BEA                                 l5924 3BBA  
                               l5916 3B9A                                 l5908 3B72  
                               l6556 5EA2                                 l6548 5E82  
                               l6652 55C2                                 l6636 545A  
                               l6644 553A                                 l6628 53C2  
                               l6660 6B76                                 l6900 2D2E  
                               l6820 28EC                                 l6812 28B2  
                               l6804 2884                                 l6740 2598  
                               l6732 2558                                 l6724 2524  
                               l6716 24EA                                 l6580 6A0C  
                               l6572 69C6                                 l7188 5776  
                               l7284 52EA                                 l7268 5212  
                               l7292 534A                                 l7276 5276  
                               l7196 4456                                 l7700 1E06  
                               l7620 1564                                 l7612 14D2  
                               l7604 13BA                                 l7540 0C10  
                               l7532 0BAC                                 l7524 0B0C  
                               l7508 0A04                                 l7516 0A9A  
                               l7460 06F0                                 l7436 0642  
                               l7428 057A                                 l7444 0692  
                               l7372 01A8                                 l7364 014E  
                               l7356 00E4                                 l7348 0090  
                               l8092 4DF8                                 l8084 4D4C  
                               l8068 4C74                                 l6590 6AD0  
                               l6582 6A9A                                 l6670 57AC  
                               l6486 685A                                 l6478 67E8  
                               l6494 5F14                                 l6398 415A  
                               l5950 3C3E                                 l5942 3C24  
                               l5934 3BFA                                 l5926 3BC8  
                               l5918 3BA0                                 l6558 5EB2  
                               l6646 5576                                 l6662 6B7A  
                               l6910 2DE4                                 l6902 2D86  
                               l6830 2A00                                 l6822 28FC  
                               l6814 28CA                                 l6806 288C  
                               l6742 259E                                 l6726 2534  
                               l6734 255C                                 l6718 24EE  
                               l6574 69D4                                 l6566 699C  
                               l7294 537C                                 l7286 531E  
                               l7278 5292                                 l7198 4484  
                               l7710 1EA8                                 l7702 1E16  
                               l7630 175E                                 l7622 1598  
                               l7614 1506                                 l7606 13EE  
                               l7550 0D30                                 l7542 0C24  
                               l7534 0BC4                                 l7526 0B1C  
                               l7518 0AAA                                 l7462 0712  
                               l7446 06A2                                 l7438 065A  
                               l7374 02A6                                 l7366 015C  
                               l7358 0106                                 l8094 4E14  
                               l8086 4DA4                                 l7800 59AA  
                               l6592 6AEE                                 l6584 6AA8  
                               l6680 57FA                                 l6672 57C8  
                               l6488 6860                                 l6496 5F24  
                               l5960 3C52                                 l5952 3C42  
                               l5944 3C32                                 l5936 3BFC  
                               l5928 3BCA                                 l6648 558A  
                               l6664 6B86                                 l6656 6B56  
                               l6920 2E54                                 l6912 2E00  
                               l6904 2DBA                                 l6840 2AA0  
                               l6824 2910                                 l6832 2A06  
                               l6816 28DC                                 l6808 2892  
                               l6760 2626                                 l6744 25A6  
                               l6736 2582                                 l6752 25E4  
                               l6728 2544                                 l6576 69F2  
                               l6568 69B2                                 l7296 53B0  
                               l7288 5326                                 l7720 1FF4  
                               l7712 1EDC                                 l7704 1E4A  
                               l7640 184E                                 l7632 1792  
                               l7624 15CC                                 l7616 1516  
                               l7608 1422                                 l7560 0DF8  
                               l7552 0D64                                 l7544 0C40  
                               l7528 0B84                                 l7480 079C  
                               l7464 0736                                 l7456 06CA  
                               l7448 06B0                                 l7392 039E  
                               l7384 0344                                 l7376 0312  
                               l7368 0178                                 l8096 4E48  
                               l8088 4DD8                                 l7810 5A26  
                               l7802 59BA                                 l6594 6DAA  
                               l5890 65D0                                 l6586 6ABC  
                               l6690 585E                                 l6682 5802  
                               l6674 57D8                                 l6498 5F52  
                               l5970 3C66                                 l5962 3C56  
                               l5954 3C46                                 l5946 3C36  
                               l5938 3C02                                 l6658 6B6A  
                               l6666 6B8A                                 l6922 2E6C  
                               l6914 2E08                                 l6906 2DC2  
                               l6850 2B7E                                 l6842 2AD2  
                               l6834 2A24                                 l6826 2974  
                               l6818 28E4                                 l6762 262E  
                               l6754 260A                                 l6770 264A  
                               l6746 25BE                                 l6738 2594  
                               l6578 6A02                                 l7730 2140  
                               l7722 2028                                 l7714 1F10  
                               l7706 1E7E                                 l7650 1990  
                               l7642 1882                                 l7634 17A2  
                               l7626 16A6                                 l7618 1530  
                               l7570 0FAC                                 l7562 0E6A  
                               l7554 0D74                                 l7546 0C50  
                               l7538 0BEC                                 l7490 07BE  
                               l7466 0744                                 l7474 0762  
                               l7458 06E0                                 l7394 03AC  
                               l7386 0366                                 l7378 032E  
                               l8098 4E52                                 l7812 5A36  
                               l7804 59BC                                 l6596 6DB8  
                               l5892 65EC                                 l5884 65A6  
                               l6588 6ACC                                 l6692 5864  
                               l6684 580E                                 l6676 57DE  
                               l6668 5788                                 l5980 3CBA  
                               l5972 3C6A                                 l5964 3C5A  
                               l5956 3C4A                                 l5948 3C3A  
                               l6924 2E7C                                 l6916 2E16  
                               l6908 2DC6                                 l6860 2BDE  
                               l6852 2B82                                 l6844 2AE2  
                               l6836 2A58                                 l6828 29CC  
                               l6780 26E4                                 l6772 2664  
                               l6756 261C                                 l6748 25C8  
                               l6940 6120                                 l6932 60EE  
                               l7740 231C                                 l7732 2198  
                               l7724 205C                                 l7716 1F68  
                               l7708 1E8E                                 l7652 19C4  
                               l7636 17BC                                 l7628 16CC  
                               l7580 111C                                 l7572 0FE0  
                               l7564 0EC8                                 l7556 0D84  
                               l7548 0CAE                                 l7644 18B6  
                               l7396 03D4                                 l7388 0374  
                               l7820 2EC6                                 l7900 5B0C  
                               l7814 5A3C                                 l7806 59C2  
                               l5894 661E                                 l5886 65B6  
                               l6694 586A                                 l6686 5816  
                               l6678 57EE                                 l5990 3CFE  
                               l5982 3CCA                                 l5974 3C6E  
                               l5966 3C5E                                 l5958 3C4E  
                               l6598 61EE                                 l6926 2E92  
                               l6918 2E46                                 l6870 2C74  
                               l6862 2BE6                                 l6854 2BB6  
                               l6846 2AF2                                 l6838 2A8C  
                               l6790 27DA                                 l6782 2722  
                               l6758 2620                                 l6950 61CE  
                               l6942 615C                                 l6934 6108  
                               l7750 240A                                 l7742 2350  
                               l7734 21F0                                 l7726 2090  
                               l7718 1FC0                                 l7654 19F8  
                               l7646 18E0                                 l7638 17F0  
                               l7590 128C                                 l7582 1174  
                               l7574 1014                                 l7566 0EFC  
                               l7558 0D9E                                 l7494 07D4  
                               l7478 0778                                 l7830 3008  
                               l7822 2F30                                 l7910 5B74  
                               l7902 5B12                                 l7816 5A7E  
                               l7808 5A04                                 l5888 65C6  
                               l6688 581C                                 l6696 589E  
                               l5992 3D00                                 l5984 3CE0  
                               l5968 3C62                                 l5976 3C72  
                               l6928 2E9A                                 l6880 2CD2  
                               l6872 2C94                                 l6864 2BE8  
                               l6856 2BCA                                 l6848 2B26  
                               l6792 27E2                                 l6784 2756  
                               l6776 26AA                                 l6952 61D2  
                               l6944 616C                                 l6936 6110  
                               l6960 5BF0                                 l7920 4F26  
                               l7752 245A                                 l7744 2384  
                               l7736 2248                                 l7728 20E8  
                               l7656 1A08                                 l7648 1938  
                               l7592 12C0                                 l7584 11CC  
                               l7576 106C                                 l7568 0F54  
                               l7496 0808                                 l7840 30FE  
                               l7832 3084                                 l7824 2F64  
                               l7912 5B98                                 l7904 5B24  
                               l6698 58B8                                 l5994 3D0A  
                               l5986 3CEC                                 l5978 3C9E  
                               l5898 3B36                                 l6890 2CFA  
                               l6882 2CD8                                 l6874 2CB0  
                               l6866 2BF0                                 l6858 2BCE  
                               l6786 2792                                 l6778 26B0  
                               l6946 618A                                 l6938 611C  
                               l6970 5C40                                 l6962 5BF8  
                               l6954 5BBC                                 l7930 4FEC  
                               l7922 4F76                                 l7754 249A  
                               l7746 23B8                                 l7738 22C4  
                               l7666 1A30                                 l7594 12F4  
                               l7586 1200                                 l7578 10C4  
                               l7498 0860                                 l7850 318A  
                               l7842 3134                                 l7834 3094  
                               l7826 2F90                                 l7818 2EB8  
                               l7770 6E1E                                 l7762 6E12  
                               l7914 5BA8                                 l7906 5B26  
                               l5996 3D2C                                 l5988 3CF0  
                               l6884 2CE0                                 l6876 2CBE  
                               l6892 2D00                                 l6868 2BFC  
                               l6788 27A6                                 l6796 2822  
                               l6948 619E                                 l6964 5BFE  
                               l6972 5C74                                 l6956 5BCC  
                               l7940 507A                                 l7932 5020  
                               l7924 4F86                                 l7916 4F04  
                               l7780 6E38                                 l7756 24B2  
                               l7748 23C8                                 l7684 1B24  
                               l7692 1BAE                                 l7668 1A48  
                               l7676 1AC8                                 l7596 1328  
                               l7588 1234                                 l7860 331A  
                               l7852 3198                                 l7844 313E  
                               l7836 30A4                                 l7828 2F9E  
                               l7772 6E20                                 l7764 6E16  
                               l7908 5B2A                                 l7790 5956  
                               l7782 592C                                 l5998 3D3C  
                               l6894 2D12                                 l6886 2CF0  
                               l6878 2CCE                                 l6798 285E  
                               l6990 6760                                 l6982 670E  
                               l6974 5C86                                 l6966 5C34  
                               l6958 5BE8                                 l7950 516E  
                               l7942 508A                                 l7934 5034  
                               l7926 4F9E                                 l7918 4F16  
                               l7694 1C20                                 l7686 1B42  
                               l7678 1B10                                 l7598 135C  
                               l7870 33FC                                 l7862 334E  
                               l7854 3202                                 l7846 3150  
                               l7838 30DA                                 l7774 6E22  
                               l7766 6E1A                                 l7776 6E26  
                               l7792 5966                                 l7784 593A  
                               l6896 2D24                                 l6888 2CF4  
                               l6992 677E                                 l6984 6716  
                               l6976 5C9C                                 l6968 5C3A  
                               l7952 5180                                 l7944 5108  
                               l7936 5052                                 l7928 4FD4  
                               l7960 600C                                 l7696 1C30  
                               l7688 1B9A                                 l7880 34DC  
                               l7872 340C                                 l7864 3360  
                               l7856 32B2                                 l7848 3186  
                               l7768 6E1C                                 l7778 6E2E  
                               l7794 597A                                 l7786 5942  
                               l6898 2D28                                 l6986 6738  
                               l6994 678A                                 l6978 5CB6  
                               l7946 513E                                 l7954 5188  
                               l7938 5068                                 l7970 609E  
                               l7962 6022                                 l7698 1C52  
                               l7890 360E                                 l7882 34EC  
                               l7874 341C                                 l7866 3394  
                               l7858 32E6                                 l7788 5952  
                               l6988 6744                                 l6996 3628  
                               l7948 5154                                 l7980 6A24  
                               l7972 60B4                                 l7964 6032  
                               l7956 5FEA                                 l7892 3616  
                               l7884 3538                                 l7876 3450  
                               l7868 33C8                                 l7798 598C  
                               l6998 364C                                 l7990 6A7E  
                               l7982 6A36                                 l7974 60CE  
                               l7966 6044                                 l7958 5FFA  
                               l7886 354C                                 l7878 3460  
                               l7894 5A8C                                 l7992 6A94  
                               l7984 6A46                                 l7976 60E0  
                               l7968 6078                                 l7888 35B6  
                               l7896 5AA2                      Send_Data@buffer 0100  
                               l7986 6A5C                                 l7978 60E8  
                               l7994 63D6                                 l7898 5AD8  
                               l7988 6A6E                                 l7996 646E  
                               l7998 647C                                 STR_1 7FA1  
                               STR_2 7F7F                                 STR_3 7FC4  
                               STR_4 7F92                                 STR_5 7FAE  
                               STR_6 7F62                                 STR_7 7FCE  
                               STR_8 7FB9                                 STR_9 7F61  
                               u8000 4028                                 u7200 3B62  
                               u8001 4024                                 u7201 3B5E  
                               u8010 4068                                 u7210 3B72  
                               u8011 4064                                 u7211 3B6E  
                               u8100 4302                                 u8020 407A  
                               u7300 3CB8                                 u7220 3BB2  
                               u8101 42FE                                 u8021 4076  
                               u7221 3BAE                                 u7150 65B6  
                               u8110 4318                                 u8030 408A  
                               u7310 3CE0                                 u7230 3BC8  
                               u7151 65B2                                 u8111 4314  
                               u8031 4086                                 u7311 3CDC  
                               u7231 3BC4                                 u7160 65C6  
                               u8200 5F14                                 u8120 432C  
                               u8040 40C0                                 u7400 3E18  
                               u7320 3CFE                                 u7240 3BDA  
                               u9000 614C                                 u7161 65C2  
                               u8201 5F10                                 u8121 4328  
                               u8041 40BC                                 u7401 3E14  
                               u7321 3CFA                                 u7241 3BD6  
                               u7170 65EC                                 u8210 5F52  
                               u8130 4346                                 u8050 40D0  
                               u7410 3E4E                                 u7330 3D1E  
                               u7250 3BEA                                 u9010 615C  
                               u7171 65E8                                 u8211 5F4E  
                               u8131 4342                                 u8051 40CC  
                               u7411 3E4A                                 u7331 3D1A  
                               u7251 3BE6                                 u9011 6158  
                               u7180 661E                                 u8220 5F70  
                               u8140 438E                                 u8060 424A  
                               u7500 3F16                                 u7420 3E5E  
                               u7340 3D2C                                 u7260 3C24  
                               u8300 5E92                                 u9100 6738  
                               u9020 616C                                 u7181 661A  
                               u8221 5F6C                                 u8141 438A  
                               u7501 3F12                                 u7421 3E5A  
                               u7341 3D28                                 u7261 3C20  
                               u8301 5E8E                                 u9101 6734  
                               u9021 6168                                 u8230 5F90  
                               u8150 43BC                                 u8070 42A4  
                               u7510 3F30                                 u7430 3E8A  
                               u7350 3D3C                                 u7270 3C32  
                               u7190 3B50                                 u8310 5EB2  
                               u9110 67B0                                 u9030 618A  
                               u8231 5F8C                                 u8151 43B8  
                               u8071 42A0                                 u7511 3F2C  
                               u7431 3E86                                 u7351 3D38  
                               u7271 3C2E                                 u7191 3B4C  
                               u8311 5EAE                                 u9111 67AC  
                               u9031 6186                                 u9007 6142  
                               u8240 5FE0                                 u8160 43F4  
                               u8080 42C4                                 u7520 3F6A  
                               u7440 3E9A                                 u7360 3D6E  
                               u7280 3C9E                                 u8320 5EC2  
                               u8400 624C                                 u9040 61BE  
                               u7600 688A                                 u9200 397A  
                               u9120 364C                                 u8241 5FDC  
                               u8161 43F0                                 u8081 42C0  
                               u8065 4240                                 u7521 3F66  
                               u7441 3E96                                 u7361 3D6A  
                               u7281 3C9A                                 u8321 5EBE  
                               u8401 6248                                 u7601 6886  
                               u9201 3976                                 u9121 3648  
                               u8170 67E8                                 u8090 42D4  
                               u8250 6D88                                 u7530 3F7C  
                               u7450 3EB6                                 u7370 3D7C  
                               u7290 3CB6                                 u8410 6274  
                               u9050 61EC                                 u7610 68AC  
                               u8330 69B2                                 u9210 399C  
                               u9130 3690                                 u8171 67E4  
                               u8091 42D0                                 u8251 6D84  
                               u7531 3F78                                 u7451 3EB2  
                               u7371 3D78                                 u7291 3CB0  
                               u8411 6270                                 u9051 61E8  
                               u7611 68A8                                 u8331 69AE  
                               u9211 3998                                 u9131 368C  
                               u7700 631E                                 u8180 6826  
                               u7540 3F8C                                 u7460 3EC6  
                               u7380 3D9A                                 u8260 5DF4  
                               u8420 629E                                 u7620 68D4  
                               u8340 69D4                                 u9060 5BCC  
                               u9220 3A32                                 u9140 372A  
                               u9300 571E                                 u7701 631A  
                               u8181 6822                                 u7541 3F88  
                               u7461 3EC2                                 u7381 3D96  
                               u8261 5DF0                                 u8421 629A  
                               u7621 68D0                                 u8341 69D0  
                               u9061 5BC8                                 u9221 3A2E  
                               u9141 3726                                 u9301 571A  
                               u7630 5CE4                                 u7710 6344  
                               u8190 685A                                 u7550 3FAC  
                               u7470 3ED6                                 u7390 3DD2  
                               u8270 5E28                                 u8510 54C6  
                               u8350 69F2                                 u9070 5C86  
                               u9150 3746                                 u9230 6C2C  
                               u9310 572C                                 u7631 5CE0  
                               u7711 6340                                 u8191 6856  
                               u7551 3FA8                                 u7471 3ED2  
                               u7391 3DCE                                 u8511 54C2  
                               u9047 61B4                                 u8351 69EE  
                               u9071 5C82                                 u9151 3742  
                               u9231 6C28                                 u9311 5728  
                               u7640 5D06                                 u7720 6366  
                               u8360 6AA8                                 u8600 57AC  
                               u7800 4890                                 u7560 3FBC  
                               u7480 3EEC                                 u8280 5E56  
                               u8440 62D8                                 u8520 54EA  
                               u9080 5C9C                                 u9160 3800  
                               u9320 5766                                 u9240 55E6  
                               u7641 5D02                                 u7721 6362  
                               u8361 6AA4                                 u8601 57A8  
                               u7801 488C                                 u7561 3FB8  
                               u7481 3EE8                                 u8281 5E52  
                               u8441 62D2                                 u8505 546E  
                               u9081 5C98                                 u9161 37FC  
                               u9321 5762                                 u9241 55E2  
                               u7650 5D40                                 u7730 6384  
                               u8370 6AEE                                 u8610 57D8  
                               u7810 48CE                                 u7570 3FD8  
                               u7490 3F02                                 u8290 5E6A  
                               u8450 62DA                                 u8530 5506  
                               u8506 5478                                 u9090 5CB6  
                               u9170 38E0                                 u9330 5774  
                               u9250 55F4                                 u9410 4596  
                               u7651 5D3C                                 u7731 6380  
                               u8371 6AEA                                 u8611 57D4  
                               u7811 48CA                                 u7571 3FD4  
                               u7491 3EFE                                 u8291 5E66  
                               u8275 5E1E                                 u8435 62B0  
                               u8531 5502                                 u8507 5488  
                               u9091 5CB2                                 u9171 38DC  
                               u9331 5770                                 u9251 55F0  
                               u9411 4592                                 u7660 5D62  
                               u7740 63B4                                 u8380 6DB8  
                               u7580 6D00                                 u8620 57EE  
                               u7900 4A56                                 u7820 490E  
                               u8540 555A                                 u8460 6B0E  
                               u8700 2582                                 u9180 3916  
                               u9260 5650                                 u9500 526A  
                               u9420 45CE                                 u9340 4456  
                               u7661 5D5E                                 u7741 63B0  
                               u8381 6DB4                                 u7581 6CFC  
                               u8621 57EA                                 u7901 4A52  
                               u7821 490A                                 u8525 54E0  
                               u8461 6B0A                                 u8701 257E  
                               u9181 3912                                 u9261 564C  
                               u9501 5266                                 u9421 45CA  
                               u9405 4556                                 u9341 4452  
                               u7670 5D8A                                 u8630 58B8  
                               u7910 4A84                                 u7830 4982  
                               u7750 480A                                 u8390 622E  
                               u8550 5576                                 u8470 540A  
                               u7590 6D70                                 u8710 2594  
                               u9190 3948                                 u9270 56A6  
                               u9510 5292                                 u9430 4644  
                               u9406 4560                                 u9350 4484  
                               u7671 5D86                                 u8631 58B4  
                               u7911 4A80                                 u7831 497E  
                               u7751 4806                                 u8551 5572  
                               u7591 6D6C                                 u8711 2590  
                               u9191 3944                                 u9271 56A2  
                               u9511 528E                                 u9431 4640  
                               u9407 4570                                 u9351 4480  
                               u7680 5DBC                                 u8640 58CE  
                               u7920 4A9A                                 u7840 49A4  
                               u7760 481C                                 u8560 55B2  
                               u8480 5438                                 u8800 286E  
                               u8720 260A                                 u9280 56F0  
                               u9520 52EA                                 u9440 46E0  
                               u9360 4492                                 u9600 007A  
                               u7681 5DB8                                 u8641 58CA  
                               u7921 4A96                                 u7841 49A0  
                               u7761 4818                                 u8561 55AE  
                               u8545 5550                                 u8481 5434  
                               u8801 286A                                 u8721 2606  
                               u9281 56EC                                 u9521 52E6  
                               u9441 46DC                                 u9361 448E  
                               u9601 0076                                 u7690 62FC  
                               u8650 58E8                                 u7930 4AAE  
                               u7850 49CE                                 u7770 482C  
                               u8490 545A                                 u8570 6BA4  
                               u8810 28A4                                 u8730 261C  
                               u9290 570E                                 u9530 5342  
                               u9450 4748                                 u9370 44D4  
                               u9610 00AC                                 u7691 62F8  
                               u8651 58E4                                 u7931 4AAA  
                               u7851 49CA                                 u7771 4828  
                               u8395 6224                                 u8491 5456  
                               u8475 5400                                 u8571 6BA0  
                               u8811 28A0                                 u8731 2618  
                               u9291 570A                                 u9531 533E  
                               u9451 4744                                 u9371 44D0  
                               u9611 00A8                                 u8660 58F8  
                               u8580 5798                                 u7940 4AC8  
                               u7860 49F2                                 u7780 486E  
                               u8900 2C74                                 u8820 28B2  
                               u8740 2696                                 u9460 475E  
                               u9380 4502                                 u9700 02A6  
                               u9620 00E4                                 u8661 58F4  
                               u8581 5792                                 u7941 4AC4  
                               u7861 49EE                                 u7781 486A  
                               u8901 2C70                                 u8821 28AE  
                               u8741 2692                                 u9461 475A  
                               u9381 44FE                                 u9701 02A2  
                               u9621 00E0                                 u8590 579A  
                               u7950 4B10                                 u7870 4A08  
                               u7790 4880                                 u8910 2CB0  
                               u8830 28DC                                 u8750 2722  
                               u8670 24EA                                 u9550 6D2C  
                               u9390 4524                                 u9710 0312  
                               u9630 0106                                 u7951 4B0C  
                               u7871 4A04                                 u7791 487C  
                               u8911 2CAC                                 u8831 28D8  
                               u8751 271E                                 u8671 24E6  
                               u9551 6D28                                 u9391 4520  
                               u9711 030E                                 u9631 0102  
                               u7960 4B40                                 u7880 4A26  
                               u8920 2CBE                                 u8840 2A24  
                               u8760 2756                                 u8680 2534  
                               u9560 694C                                 u9480 51BA  
                               u9800 04D6                                 u9720 032E  
                               u9640 015C                                 u7961 4B3C  
                               u7881 4A22                                 u8921 2CBA  
                               u8841 2A20                                 u8761 2752  
                               u8681 2530                                 u9561 6948  
                               u9545 535C                                 u9481 51B6  
                               u9801 04D2                                 u9721 032A  
                               u9641 0158                                 u7970 4B6C  
                               u7890 4A46                                 u8930 2D12  
                               u8850 2A8C                                 u8770 2792  
                               u8690 2544                                 u9570 6978  
                               u9490 5212                                 u9810 052A  
                               u9730 0366                                 u9650 0178  
                               u7971 4B68                                 u7891 4A42  
                               u8931 2D0E                                 u8851 2A88  
                               u8771 278E                                 u8691 2540  
                               u9571 6974                                 u9491 520E  
                               u9475 47CA                                 u9811 0526  
                               u9731 0362                                 u9651 0174  
                               u7980 4006                                 u8940 2DE4  
                               u8860 2AD2                                 u8780 281E  
                               u9580 699A                                 u9900 06E0  
                               u9820 0540                                 u9740 0374  
                               u9660 01A8                                 u7981 4002  
                               u8941 2DE0                                 u8861 2ACE  
                               u8781 281A                                 u9581 6996  
                               u9901 06DC                                 u9821 053C  
                               u9741 0370                                 u9661 01A4  
                               u7990 4018                                 u8950 2E00  
                               u8870 2AE2                                 u8790 2856  
                               u9590 6570                                 u9910 0712  
                               u9830 055C                                 u9750 03AC  
                               u7991 4014                                 u8951 2DFC  
                               u8871 2ADE                                 u8791 2852  
                               u9591 656C                                 u9911 070E  
                               u9831 0558                                 u9751 03A8  
                               u8960 2E66                                 u8880 2B7E  
                               u9920 0736                                 u9840 057A  
                               u9760 0406                                 u8961 2E60  
                               u8881 2B7A                                 u9921 0732  
                               u9841 0576                                 u9761 0402  
                               u8970 2E68                                 u8890 2BCA  
                               u9930 0744                                 u9850 05BE  
                               u9770 0414                                 u9690 026C  
                               u8891 2BC6                                 u9931 0740  
                               u9851 05BA                                 u9771 0410  
                               u9675 01BE                                 u8980 2E7C  
                               u9940 079C                                 u9860 0622  
                               u9780 0478                                 u9676 01C8  
                               u8981 2E78                                 u9941 0798  
                               u9861 061E                                 u9781 0474  
                               u9685 0218                                 u9677 01D8  
                               u8990 6108                                 u9950 07BA  
                               u9870 065A                                 u9790 04C8  
                               u9686 0222                                 u8991 6104  
                               u9951 07B6                                 u9871 0656  
                               u9791 04C4                                 u9695 0262  
                               u9687 0232                                 u9960 0AC6  
                               u9880 06B0                                 u9961 0AC2  
                               u9881 06AC                                 u9890 06C6  
                               u9891 06C2                                 u9980 0BE8  
                               u9981 0BE4                                 u9990 0C10  
                               u9991 0C0C                                 u9975 0B32  
                               u9976 0B3C                                 u9977 0B4C  
                     Read_Sensors@Rs 00A5                                 abs@a 000B  
                               _dbuf 0372                                 _cp_h 7ECD  
                               _cp_l 7EC9                                 _dp_h 7E65  
                               _dp_l 7E5D                                 _labs 6B00  
                               _main 4B80                                 _dtoa 5788  
                       _trigger_test 005E                                 _prec 02FE  
                               _powf 0012                                 pad@i 0015  
                               pad@p 0012                                 fsr1h 0FE2  
                               fsr2h 0FDA                                 indf1 0FE7  
                               indf2 0FDF                                 fsr1l 0FE1  
                               fsr2l 0FD9                                 _stoa 60EE  
                               btemp 005F                                 _utoa 5BBC  
                   __end_of_ADC_Init 6E38                     __end_of_ADC_Read 6D3A  
                      ___fpclassifyf 61EE                                 prodh 0FF4  
                               prodl 0FF3                                 start 000E  
                    ___fldiv@new_exp 0039                          main@voltage 03F8  
               Read_Sensors@raw_temp 007D                      __end_of_HighISR 6DFA  
               Read_Sensors@temp_adc 0095                         ___param_bank 0000  
          Handle_Commands@last_blink 0328                                ??_abs 000D  
              Read_Sensors@flame_adc 0097                                ??_pad 0014  
                  ?_Update_Actuators 0001                   ??_Update_Actuators 0068  
                 _Handle_Fire_Events 4F04                        ___fltol@sign1 0009  
                    __end_of___aldiv 5DDE                                ?_labs 0001  
                    __end_of___almod 63D6                      __end_of___fladd 3FEC  
                              ?_main 0001                                ?_dtoa 0017  
                    __end_of___fldiv 4B80                      __end_of___flneg 6DAA  
                              STR_10 7F71                                STR_11 7FD7  
                              STR_12 7FE0                                STR_13 7F61  
                              STR_21 7FFB                                STR_14 7FF0  
                              STR_15 7F61                                STR_24 7FE9  
                              STR_16 7F44                                STR_17 7ED1  
                              STR_18 7FF7                      __end_of___awmod 670E  
                    __end_of___flmul 4412                                ?_powf 0068  
                    __end_of___flsub 6C7E                      __end_of___fltol 5EE4  
                              ?_stoa 0009                                u10010 1A2C  
                    __end_of___lldiv 6908                                u10011 1A28  
                              u10020 1A48                                u10021 1A44  
                              u10005 0E0A                                u10030 1AC4  
                              u10031 1AC0                                ?_utoa 0017  
                              u10200 59BA                                u10040 1B10  
                              u10201 59B6                                u10105 1CD6  
                              u10041 1B0C                                u10210 5A04  
                              u10130 1E06                                u10106 1CE0  
                              u10050 1B42                                u10211 5A00  
                              u10131 1E02                                u10115 1D2E  
                              u10107 1CF0                                u10051 1B3E  
                              u10220 5A16                                u10116 1D38  
                              u10060 1B9A                                u10300 3186  
                              u10221 5A0E                                u10125 1DCC  
                              u10117 1D48                                u10061 1B96  
                              u10301 3182                                u10126 1DD6  
                              u10310 3394                                u10127 1DE6  
                              u10311 3390                                u10240 5A7E  
                              u10160 245A                                u10080 1C52  
                              u10320 340C                                u10400 5B86  
                              u10241 5A7A                                u10161 2456  
                              u10145 23DA                                u10081 1C4E  
                              u10321 3408                                u10401 5B7E  
                              u10170 24B2                                u10330 3450  
                              u10250 3094                                u10171 24AE  
                              u10155 2420                                u10075 1BDE  
                              u10331 344C                                u10251 3090  
                              u10180 593A                                u10420 4F16  
                              u10500 600C                                u10156 242A  
                              u10076 1BE8                                u10340 3538  
                              u10260 30DA                                u10181 5936  
                              u10421 4F12                                u10501 6008  
                              u10157 243A                                u10077 1BF8  
                              u10341 3534                                u10261 30D6  
                              u10238 5A18                                u10190 5952  
                              u10430 4F26                                u10510 6032  
                              u10270 30FE                                u10350 5AA2  
                              u10191 594E                                u10431 4F22  
                              u10511 602E                                u10095 1C6C  
                              u10271 30FA                                u10351 5A9E  
                              u10440 4F86                                u10520 6044  
                              u10096 1C76                                u10280 3134  
                              u10360 5AD8                                u10600 6670  
                              u10441 4F82                                u10521 6040  
                              u10097 1C86                                u10281 3130  
                              u10361 5AD4                                u10601 666C  
                              u10450 4FD4                                u10530 6A36  
                              u10290 3150                                u10418 5B8A  
                              u10370 5B0C                                u10610 668A  
                              u10451 4FD0                                u10531 6A32  
                              u10291 314C                                u10371 5B08  
                              u10611 6686                                u10460 5020  
                              u10540 6A46                                u10380 5B24  
                              u10620 66A4                                u10700 4EB2  
                              u10461 501C                                u10541 6A42  
                              u10381 5B20                                u10621 66A0  
                              u10701 4EAE                                u10470 507A  
                              u10550 6A6E                                u10390 5B74  
                              u10630 66C2                                u10471 5076  
                              u10551 6A6A                                u10391 5B70  
                              u10631 66BE                                u10480 508A  
                              u10560 6A7E                                u10640 66D8  
                    __end_of___llmod 6A24                                u10481 5086  
                              u10561 6A7A                                u10641 66D4  
                              u10490 5FFA                                u10570 646E  
                              u10650 66FC                                u10491 5FF6  
                              u10571 646A                                u10651 66F8  
                              u10580 649A                                u10660 4C96  
                              u10581 6496                                u10661 4C92  
                              u10717 4B9A                                u10590 64BC  
                              u10670 4E14                                u10591 64B8  
                              u10671 4E10                                u10727 4C66  
                              u10680 4E76                                u10681 4E72  
                              u10737 4DE4                                u10690 4E8A  
                              u10747 4EEE                                u10691 4E86  
                              u10757 6D18                                u10767 60C0  
                              u10777 5160                                i2l146 6DF6  
                              _RCREG 0FAE                         vfpfcnvrt@fmt 009D  
                              _SPBRG 0FAF                                _PORTB 0F81  
                              _TRISB 0F93                                _TXREG 0FAD  
                      ?_Read_Sensors 0001                  ?_Handle_Fire_Events 0001  
                              _lg2_h 7E89                                _lg2_l 7E85  
                              _flags 0368                  read_prec_or_width@c 0005  
                              _errno 0360                  read_prec_or_width@n 0006  
                              _ivln2 7E79                                _fputc 65A6  
                              _fputs 6CC2                      __end_of_ivln2_h 7EC9  
                    __end_of_ivln2_l 7E79                                _two24 7EBD  
                    __end_of_scalbnf 53C2                                labs@a 0001  
                              pad@fp 000F                                _width 0362  
                              _putch 6E48                                main@i 03FC  
                              dtoa@d 0018                                dtoa@i 0023  
                              dtoa@p 0020                                _sqrtf 4412  
                              dtoa@s 0022                                dtoa@w 001E  
                              tablat 0FF5                                powf@i 0128  
                              powf@j 01A8                                powf@k 01A4  
                              powf@n 0188                                powf@r 0150  
                              powf@s 0160                                powf@t 01B0  
                              powf@u 017C                                powf@v 0180  
                              powf@w 0144                                powf@x 0068  
                              powf@y 006C                                powf@z 01B4  
                              stoa@l 0012                                stoa@p 000E  
                              stoa@s 000A                                ttemp5 0060  
                              ttemp6 0063                                ttemp7 0067  
                              utoa@d 0018                                utoa@i 0020  
                              utoa@p 001E                                utoa@w 001C  
                              status 0FD8                                wtemp8 0060  
                    __end_of_sprintf 6CC2                       ?___fpclassifyf 0001  
                      main@adc_value 03F2                           Send_Data@i 01C8  
                    _shutdown_system 036B                 ??_Handle_Fire_Events 00E4  
                    __initialization 6BA6                         __end_of_cp_h 7ED1  
                       __end_of_cp_l 7ECD                         __end_of_dp_h 7E6D  
                       __end_of_dp_l 7E65                         __end_of_labs 6B56  
                       __end_of_main 4F04                         __end_of_dtoa 592C  
                       __end_of_powf 24C8                         __end_of_stoa 61EE  
                       __end_of_utoa 5CD4              ?_Handle_Shutdown_Events 0001  
                  ??_Handle_Commands 0001                 _Update_Actuators$752 005D  
               __end_of_Apply_Filter 65A6                               ??_labs 0005  
                             ??_main 00EE                               ??_dtoa 001C  
                             ??_powf 0070                               ??_stoa 000C  
                             ??_utoa 001C                        __activetblptr 0002  
                     ??_Read_Sensors 0079           __end_of_read_prec_or_width 67BA  
                             _ADCON1 0FC1                               _ADCON2 0FC0  
                             ?_fputc 0001                     ___llmod@dividend 0001  
                             ?_fputs 0009                               _ADRESH 0FC4  
                             _ADRESL 0FC3                               ?_putch 0001  
                             ?_sqrtf 0001                               i2l5790 6DE0  
                             i2l5792 6DEE                               i2l5794 6DF4  
                             _MQ2_Ro 03D6                               _OSCCON 0FD3  
                      vfpfcnvrt@done 00A2                            ??_HighISR 0001  
                             _TRISA0 7C90                               _TRISA1 7C91  
                             _TRISA2 7C92                               _TRISC6 7CA6  
                             _TRISC7 7CA7         Handle_Fire_Events@water_used 00EA  
                   __end_of___xxtofl 5788                         vfprintf@cfmt 00AE  
     __end_of_Handle_Shutdown_Events 6A9A                    __end_of_UART_Init 6E26  
       Send_History_Event@event_type 00E0                               ___flge 5EE4  
                             ___fleq 67BA         Handle_Fire_Events@start_data 0296  
                          ??___aldiv 0009                            ??___almod 0009  
                          ??___fladd 0049               Read_Sensors@last_pulse 0364  
                          ??___fldiv 0030                            ??___flneg 0005  
                          ??___awmod 0005                            ??___flmul 0017  
                          ??___flsub 0059                            ??___fltol 0005  
                          ??___lldiv 0009                            ??___llmod 0009  
                             _efgtoa 24C8                               _co_ppm 0350  
                    ADC_Read@channel 0005                               _floorf 53C2  
                             _memcpy 6B56                 read_prec_or_width@ap 0002  
                             clear_0 6BCC           Handle_Fire_Events@end_data 0200  
                    ___awmod@divisor 0003                               isa$std 0001  
                    ___awmod@counter 0005                               pad@buf 0010  
                             dtoa@fp 0017                               _strcpy 6D3A  
                    Apply_Filter@sum 0060                               fputc@c 0001  
                             fputs@c 000C                               fputs@i 000D  
                             fputs@s 0009                            ??_scalbnf 002E  
                    ___fpclassifyf@e 0009             Send_History_Event@buffer 0100  
                          ?_ADC_Init 0001                      ___fpclassifyf@u 000B  
                          ?_ADC_Read 0001                      ___fpclassifyf@x 0001  
                       __mediumconst 7E5C           Handle_Fire_Events@duration 00E6  
              Apply_Filter@new_value 0051                               powf@s2 0190  
                             powf@t1 018C                               powf@t2 011C  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             powf@y1 012C                               tblptru 0FF8  
       Send_History_Event@extra_data 00E2                               powf@ax 0178  
                             powf@is 0198                               powf@hx 0168  
                             powf@hy 0184                               powf@ix 01AC  
                             powf@iy 0194                               powf@sn 0164  
                             stoa@cp 0010                               stoa@fp 0009  
                             putch@c 0001                     __end_of_vfprintf 6C38  
                             utoa@fp 0017                               sqrtf@i 000E  
                             sqrtf@m 001A                               sqrtf@q 0012  
                             sqrtf@r 001E                               sqrtf@s 000A  
                             sqrtf@t 0016                               sqrtf@x 0001  
                          ??_sprintf 005D                           ___flge@ff1 0060  
                    ??___fpclassifyf 0005                           ___flge@ff2 0064  
                       ___xxtofl@arg 000B                         ___xxtofl@exp 000A  
                       ___xxtofl@val 0001                           ___fleq@ff1 0001  
                         ___fleq@ff2 0005                           __accesstop 0060  
            __end_of__initialization 6BE2                __end_of_TEST_DURATION 7EC5  
                         ___flneg@f1 0001  Handle_Shutdown_Events@prev_shutdown 0369  
                      ___rparam_used 0001                           ___fltol@f1 0001  
            Read_Sensors@mq2_voltage 009D                       __pcstackCOMRAM 0001  
                       __pidataBANK3 6DFA                        __end_of_lg2_h 7E8D  
                      __end_of_lg2_l 7E89                        __end_of_ivln2 7E7D  
                      __end_of_fputc 6660                        __end_of_fputs 6D02  
                      __end_of_two24 7EC1                        __end_of_putch 6E4A  
                      __end_of_sqrtf 47F0                           __end_of_L1 7EBD  
                         __end_of_L2 7EB9                           __end_of_L3 7EB5  
                         __end_of_L4 7EB1                           __end_of_L5 7EAD  
                         __end_of_L6 7EA9                           __end_of_P1 7EA5  
                         __end_of_P2 7EA1                           __end_of_P3 7E9D  
                         __end_of_P4 7E99                           __end_of_P5 7E95  
                         __end_of_bp 7E75                           __end_of_cp 7E81  
                       _alarm_active 036F                           ??_ADC_Init 0001  
                         ??_ADC_Read 0003                  _fire_trigger_sensor 03C2  
                  __end_of_Send_Data 64BE                              ??_fputc 0004  
                            ??_fputs 000C                              ??_putch 0001  
                            ??_sqrtf 0005                           __pbssBANK2 02FA  
                         __pbssBANK3 0300                   _Handle_Test_Events 5FEA  
               __end_of_Read_Sensors 3628                              ?___flge 0060  
                            ?___fleq 0001                  ?_Handle_Test_Events 0001  
                            ?_efgtoa 0068                              ?_floorf 0041  
                            ?_memcpy 0001                           _co_samples 0300  
                Send_History_Event@i 01C8                              ?_strcpy 0001  
                          ?___xxtofl 0001                           _fire_alarm 036E  
               ??_Handle_Test_Events 00E4                         _Apply_Filter 64BE  
                            _HighISR 0008                      _Handle_Commands 592C  
                    _flame_intensity 0358                              __Hparam 0000  
                            __Lparam 0000                              ___aldiv 5CD4  
                            ___almod 62EC                              ___fladd 3B36  
                            ___fldiv 47F0                              ___flneg 6D72  
                            ___awmod 6660                              ___flmul 3FEC  
                            ___flsub 6C38                              ___fltol 5DDE  
                            ___lldiv 6864                              ___llmod 699C  
                          ?_vfprintf 00AA                              __pcinit 6BA6  
                            __ramtop 0800                              __ptext0 4B80  
                            __ptext1 6660                              __ptext2 5A8C  
                            __ptext3 6E12                              __ptext4 63D6  
                            __ptext5 2EB8                              __ptext6 0012  
                            __ptext7 4412                              __ptext8 518E  
                            __ptext9 55D4                read_prec_or_width@fmt 0001  
                            _ivln2_h 7EC5                              _ivln2_l 7E75  
                         ??___xxtofl 0005                              _scalbnf 518E  
                   ___awmod@dividend 0001           Read_Sensors@last_flow_time 0320  
                   ___aldiv@dividend 0001                              efgtoa@c 006D  
                            efgtoa@d 007B                              efgtoa@e 007F  
                            efgtoa@f 0069                      _prev_fire_alarm 036D  
                            efgtoa@g 0092                              efgtoa@h 0089  
                            efgtoa@i 0087                              efgtoa@l 008D  
                            efgtoa@m 007D                              efgtoa@n 0096  
                            efgtoa@p 0072                              efgtoa@t 0074  
                            efgtoa@u 0098                              efgtoa@w 0081  
                            _sprintf 6C7E                       __pintcode_body 6DDE  
               end_of_initialization 6BE2                              floorf@e 004F  
                            floorf@m 004B                              floorf@u 0051  
                            floorf@x 0041                              memcpy@d 0008  
                            memcpy@n 0005                              memcpy@s 000A  
                            fputc@fp 0003                        __Lmediumconst 7E5C  
                            int_func 6DDE                              fputs@fp 000B  
                 _read_prec_or_width 670E                      ___lldiv@divisor 0005  
                    ___lldiv@counter 000D                              powf@p_h 01A0  
                            powf@p_l 016C                              powf@s_h 0174  
                            powf@t_h 0170                              powf@s_l 0130  
                            powf@t_l 0134                              powf@z_h 0120  
                            powf@z_l 0124                    __end_of_vfpfcnvrt 3B36  
                         efgtoa@mode 0079                           efgtoa@sign 0091  
                          _RCSTAbits 0FAB                     ___aldiv@quotient 000B  
                            postdec1 0FE5                              postdec2 0FDD  
                ?_read_prec_or_width 0001                              postinc0 0FEE  
                            postinc1 0FE6                              postinc2 0FDE  
                   vfpfcnvrt@convarg 00A3           __end_of_Send_History_Event 699C  
                         ??_vfprintf 005D                              sqrtf@ix 0022  
                            strcpy@d 0005                            _UART_Init 6E12  
                          _PORTBbits 0F81                          ___fladd@grs 0050  
                      ___xxtofl@sign 0009                            _TRISBbits 0F93  
               ??_read_prec_or_width 0003                          ___fldiv@grs 003B  
                        ___fldiv@rem 0034              __end_of_Handle_Commands 5A8C  
                Read_Sensors@mq2_adc 0099                          ___flmul@grs 001D  
                         _total_flow 0348                            _TXSTAbits 0FAC  
                Read_Sensors@last_co 0324              Read_Sensors@temp_factor 0085  
                     __end_of___flge 5FEA                       __end_of___fleq 6864  
                        vfpfcnvrt@ap 009E                          vfpfcnvrt@cp 00A8  
                        vfpfcnvrt@fp 009C                           ?_UART_Init 0001  
                      _system_millis 02FA                       __end_of_efgtoa 2EB8  
                     __end_of_floorf 55D4                       __end_of_memcpy 6BA6  
                         floorf@F521 0314                  Apply_Filter@samples 0055  
                     __end_of_strcpy 6D72                  start_initialization 6BA6  
                       _Read_Sensors 2EB8                          __end_of_lg2 7E91  
                        __end_of_abs 6DDE                          __end_of_pad 6B00  
                        __end_of_ovt 7E85                     _Update_Actuators 5A8C  
            Read_Sensors@rs_ro_ratio 00A1                            _Send_Data 63D6  
              __end_of___fpclassifyf 62EC                      ___llmod@divisor 0005  
                    ___llmod@counter 0009                          vfprintf@fmt 00AB  
                           ??___flge 0059                             ??___fleq 0009  
                           ??_efgtoa 006E                          __pdataBANK3 03D6  
                           ??_floorf 0045                             ??_memcpy 0007  
                           ??_strcpy 0005                            ___fladd@a 0045  
                          ___fladd@b 0041                       _Interrupt_Init 6E38  
                          ___fldiv@a 002C                            ___fldiv@b 0028  
                          ___flmul@a 0013                            ___flmul@b 000F  
                        __pbssCOMRAM 005E                            ___flsub@a 0055  
                          ___flsub@b 0051                        __pcstackBANK0 0060  
                      __pcstackBANK1 0100                        __pcstackBANK2 0200  
                      __pcstackBANK3 03EE                     ?_Handle_Commands 0001  
                           ?_HighISR 0001                           ?_Send_Data 0001  
           ??_Handle_Shutdown_Events 005D                          _efgtoa$1376 0076  
                          _main$1834 03EE                            _dtoa$1345 001C  
                 _flame_base_voltage 0354                            __pintcode 0008  
                      __pmediumconst 7E5C                             ?___aldiv 0001  
                           ?___almod 0001                             ?___fladd 0041  
                           ?___fldiv 0028                             ?___flneg 0001  
                           ?___awmod 0001                             ?___flmul 000F  
                           ?___flsub 0051                             ?___fltol 0001  
                           ?___lldiv 0001                       _flame_detected 0371  
                           ?___llmod 0001                          ??_UART_Init 0001  
             __end_of_Interrupt_Init 6E48                     ___almod@dividend 0001  
                        __smallconst 7E5C                             ?_scalbnf 0028  
                           _ADC_Init 6E26                             _ADC_Read 6D02  
                          _flow_rate 034C                             ?_sprintf 00B0  
                    main@cycle_count 03F6                      ___aldiv@divisor 0005  
                          _powf$1840 014C                            _powf$1841 019C  
                          _powf$1842 0138                            _powf$1850 0110  
                          _powf$1851 0114                            _powf$1843 0100  
                          _powf$1852 0118                            _powf$1844 0104  
                          _powf$1845 015C                            _powf$1838 0148  
                          _powf$1846 013C                            _powf$1839 0158  
                          _powf$1847 0140                            _powf$1848 0108  
                          _powf$1849 010C                      ___aldiv@counter 0009  
                      _TEST_DURATION 7EC1                             _PIR1bits 0F9E  
                           i2u709_40 6DEE                             i2u709_41 6DEA  
                           _RCONbits 0FD0                           powf@yisint 0154  
                          _vfpfcnvrt 3628                      ?_Interrupt_Init 0001  
                         _ADCON0bits 0FC2                            main@i_676 03FE  
                 Read_Sensors@raw_co 00A9                   _Send_History_Event 6908  
                 Read_Sensors@pulses 009B                           vfpfcnvrt@c 00A7  
                        _INTCON2bits 0FF1                          _INTCON3bits 0FF0  
                          copy_data0 6BBA                      _test_start_flow 032C  
                ?_Send_History_Event 00E0                      _test_start_time 0344  
                        ??_Send_Data 005D           __end_of_Handle_Fire_Events 518E  
                           __Hrparam 0000                            memcpy@tmp 0007  
                         vfprintf@ap 00AD                             __Lrparam 0000  
                         vfprintf@fp 00AA                        Apply_Filter@i 0064  
                       _sample_index 036C             __end_of_Update_Actuators 5BBC  
                         ?_vfpfcnvrt 009C                 ??_Send_History_Event 005D  
                 ___fpclassifyf@F465 0318                           sprintf@fmt 00B2  
                           ___xxtofl 55D4            Read_Sensors@flame_voltage 0081  
                           __ptext10 64BE                             __ptext11 6D02  
                           __ptext20 5BBC                             __ptext12 6E38  
                           __ptext21 699C                             __ptext13 5FEA  
                           __ptext30 61EE                             __ptext22 6864  
                           __ptext14 6A24                             __ptext31 5DDE  
                           __ptext23 60EE                             __ptext15 4F04  
                           __ptext40 6A9A                             __ptext32 6C38  
                           __ptext24 670E                             __ptext16 6908  
                           __ptext41 6CC2                             __ptext33 3B36  
                           __ptext25 24C8                             __ptext17 6C7E  
                           __ptext42 65A6                             __ptext34 6D72  
                           __ptext26 6D3A                             __ptext18 6BF0  
                           __ptext43 6E48                             __ptext35 3FEC  
                           __ptext27 6B56                             __ptext19 3628  
                           __ptext44 6DAA                             __ptext36 5EE4  
                           __ptext28 6B00                             __ptext45 62EC  
                           __ptext37 67BA                             __ptext29 53C2  
                           __ptext46 5CD4                             __ptext38 47F0  
                           __ptext47 592C                             __ptext39 5788  
                           __ptext48 6E26                   Handle_Commands@cmd 0005  
                    ___almod@divisor 0005                      ___almod@counter 0009  
                         strcpy@dest 0001                             efgtoa@fp 0068  
                           efgtoa@ne 0070                             efgtoa@pp 0078  
                           efgtoa@ou 0083         Handle_Test_Events@water_used 01FC  
                           isa$xinst 0000                             int$flags 005F  
                           _vfprintf 6BF0               _Handle_Shutdown_Events 6A24  
                         _INTCONbits 0FF2                         _temp_samples 03DA  
                           memcpy@d1 0001                             memcpy@s1 0003  
                           scalbnf@n 002C                             scalbnf@u 0032  
                           scalbnf@x 0028                             scalbnf@y 0036  
                   _fire_start_flame 0338                             intlevel2 0000  
                          sprintf@ap 00D4                        ?_Apply_Filter 0051  
                   ___lldiv@dividend 0001                            strcpy@src 0003  
        Handle_Test_Events@prev_test 036A          Handle_Test_Events@test_data 01CA  
                        efgtoa@nmode 007A                          ??_vfpfcnvrt 00A0  
         Update_Actuators@last_blink 031C                      _fire_start_flow 0330  
                        _temperature 035C                             sprintf@f 00D5  
                           sprintf@s 00B0                      _fire_start_temp 033C  
                    _fire_start_time 0340                    main@adc_value_677 03F4  
                   ___lldiv@quotient 0009                         ___aldiv@sign 000A  
                      ___fladd@signs 004D                       ??_Apply_Filter 0057  
                       ___almod@sign 000A                         ___fladd@aexp 004E  
                       ___fladd@bexp 004F                        _fire_start_co 0334  
