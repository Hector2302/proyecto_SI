

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jul 07 23:20:35 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK3,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    59                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=3
    60                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=3
    61                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=3
    62                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Version 2.20
    75                           ; Generated 12/02/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4550 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000FE0                     bsr             equ	4064
   109   000FE9                     fsr0            equ	4073
   110   000FEA                     fsr0h           equ	4074
   111   000FE9                     fsr0l           equ	4073
   112   000FE1                     fsr1            equ	4065
   113   000FE2                     fsr1h           equ	4066
   114   000FE1                     fsr1l           equ	4065
   115   000FD9                     fsr2            equ	4057
   116   000FDA                     fsr2h           equ	4058
   117   000FD9                     fsr2l           equ	4057
   118   000FEF                     indf0           equ	4079
   119   000FE7                     indf1           equ	4071
   120   000FDF                     indf2           equ	4063
   121   000FF2                     intcon          equ	4082
   122   000000                     nvmcon          equ	0
   123   000FF9                     pcl             equ	4089
   124   000FFA                     pclath          equ	4090
   125   000FFB                     pclatu          equ	4091
   126   000FEB                     plusw0          equ	4075
   127   000FE3                     plusw1          equ	4067
   128   000FDB                     plusw2          equ	4059
   129   000FED                     postdec0        equ	4077
   130   000FE5                     postdec1        equ	4069
   131   000FDD                     postdec2        equ	4061
   132   000FEE                     postinc0        equ	4078
   133   000FE6                     postinc1        equ	4070
   134   000FDE                     postinc2        equ	4062
   135   000FEC                     preinc0         equ	4076
   136   000FE4                     preinc1         equ	4068
   137   000FDC                     preinc2         equ	4060
   138   000FF3                     prod            equ	4083
   139   000FF4                     prodh           equ	4084
   140   000FF3                     prodl           equ	4083
   141   000FD8                     status          equ	4056
   142   000FF5                     tablat          equ	4085
   143   000FF6                     tblptr          equ	4086
   144   000FF7                     tblptrh         equ	4087
   145   000FF6                     tblptrl         equ	4086
   146   000FF8                     tblptru         equ	4088
   147   000FFD                     tosl            equ	4093
   148   000FE8                     wreg            equ	4072
   149   000F62                     SPPDATA         equ	3938	;# 
   150   000F63                     SPPCFG          equ	3939	;# 
   151   000F64                     SPPEPS          equ	3940	;# 
   152   000F65                     SPPCON          equ	3941	;# 
   153   000F66                     UFRM            equ	3942	;# 
   154   000F66                     UFRML           equ	3942	;# 
   155   000F67                     UFRMH           equ	3943	;# 
   156   000F68                     UIR             equ	3944	;# 
   157   000F69                     UIE             equ	3945	;# 
   158   000F6A                     UEIR            equ	3946	;# 
   159   000F6B                     UEIE            equ	3947	;# 
   160   000F6C                     USTAT           equ	3948	;# 
   161   000F6D                     UCON            equ	3949	;# 
   162   000F6E                     UADDR           equ	3950	;# 
   163   000F6F                     UCFG            equ	3951	;# 
   164   000F70                     UEP0            equ	3952	;# 
   165   000F71                     UEP1            equ	3953	;# 
   166   000F72                     UEP2            equ	3954	;# 
   167   000F73                     UEP3            equ	3955	;# 
   168   000F74                     UEP4            equ	3956	;# 
   169   000F75                     UEP5            equ	3957	;# 
   170   000F76                     UEP6            equ	3958	;# 
   171   000F77                     UEP7            equ	3959	;# 
   172   000F78                     UEP8            equ	3960	;# 
   173   000F79                     UEP9            equ	3961	;# 
   174   000F7A                     UEP10           equ	3962	;# 
   175   000F7B                     UEP11           equ	3963	;# 
   176   000F7C                     UEP12           equ	3964	;# 
   177   000F7D                     UEP13           equ	3965	;# 
   178   000F7E                     UEP14           equ	3966	;# 
   179   000F7F                     UEP15           equ	3967	;# 
   180   000F80                     PORTA           equ	3968	;# 
   181   000F81                     PORTB           equ	3969	;# 
   182   000F82                     PORTC           equ	3970	;# 
   183   000F83                     PORTD           equ	3971	;# 
   184   000F84                     PORTE           equ	3972	;# 
   185   000F89                     LATA            equ	3977	;# 
   186   000F8A                     LATB            equ	3978	;# 
   187   000F8B                     LATC            equ	3979	;# 
   188   000F8C                     LATD            equ	3980	;# 
   189   000F8D                     LATE            equ	3981	;# 
   190   000F92                     TRISA           equ	3986	;# 
   191   000F92                     DDRA            equ	3986	;# 
   192   000F93                     TRISB           equ	3987	;# 
   193   000F93                     DDRB            equ	3987	;# 
   194   000F94                     TRISC           equ	3988	;# 
   195   000F94                     DDRC            equ	3988	;# 
   196   000F95                     TRISD           equ	3989	;# 
   197   000F95                     DDRD            equ	3989	;# 
   198   000F96                     TRISE           equ	3990	;# 
   199   000F96                     DDRE            equ	3990	;# 
   200   000F9B                     OSCTUNE         equ	3995	;# 
   201   000F9D                     PIE1            equ	3997	;# 
   202   000F9E                     PIR1            equ	3998	;# 
   203   000F9F                     IPR1            equ	3999	;# 
   204   000FA0                     PIE2            equ	4000	;# 
   205   000FA1                     PIR2            equ	4001	;# 
   206   000FA2                     IPR2            equ	4002	;# 
   207   000FA6                     EECON1          equ	4006	;# 
   208   000FA7                     EECON2          equ	4007	;# 
   209   000FA8                     EEDATA          equ	4008	;# 
   210   000FA9                     EEADR           equ	4009	;# 
   211   000FAB                     RCSTA           equ	4011	;# 
   212   000FAB                     RCSTA1          equ	4011	;# 
   213   000FAC                     TXSTA           equ	4012	;# 
   214   000FAC                     TXSTA1          equ	4012	;# 
   215   000FAD                     TXREG           equ	4013	;# 
   216   000FAD                     TXREG1          equ	4013	;# 
   217   000FAE                     RCREG           equ	4014	;# 
   218   000FAE                     RCREG1          equ	4014	;# 
   219   000FAF                     SPBRG           equ	4015	;# 
   220   000FAF                     SPBRG1          equ	4015	;# 
   221   000FB0                     SPBRGH          equ	4016	;# 
   222   000FB1                     T3CON           equ	4017	;# 
   223   000FB2                     TMR3            equ	4018	;# 
   224   000FB2                     TMR3L           equ	4018	;# 
   225   000FB3                     TMR3H           equ	4019	;# 
   226   000FB4                     CMCON           equ	4020	;# 
   227   000FB5                     CVRCON          equ	4021	;# 
   228   000FB6                     ECCP1AS         equ	4022	;# 
   229   000FB6                     CCP1AS          equ	4022	;# 
   230   000FB7                     ECCP1DEL        equ	4023	;# 
   231   000FB7                     CCP1DEL         equ	4023	;# 
   232   000FB8                     BAUDCON         equ	4024	;# 
   233   000FB8                     BAUDCTL         equ	4024	;# 
   234   000FBA                     CCP2CON         equ	4026	;# 
   235   000FBB                     CCPR2           equ	4027	;# 
   236   000FBB                     CCPR2L          equ	4027	;# 
   237   000FBC                     CCPR2H          equ	4028	;# 
   238   000FBD                     CCP1CON         equ	4029	;# 
   239   000FBD                     ECCP1CON        equ	4029	;# 
   240   000FBE                     CCPR1           equ	4030	;# 
   241   000FBE                     CCPR1L          equ	4030	;# 
   242   000FBF                     CCPR1H          equ	4031	;# 
   243   000FC0                     ADCON2          equ	4032	;# 
   244   000FC1                     ADCON1          equ	4033	;# 
   245   000FC2                     ADCON0          equ	4034	;# 
   246   000FC3                     ADRES           equ	4035	;# 
   247   000FC3                     ADRESL          equ	4035	;# 
   248   000FC4                     ADRESH          equ	4036	;# 
   249   000FC5                     SSPCON2         equ	4037	;# 
   250   000FC6                     SSPCON1         equ	4038	;# 
   251   000FC7                     SSPSTAT         equ	4039	;# 
   252   000FC8                     SSPADD          equ	4040	;# 
   253   000FC9                     SSPBUF          equ	4041	;# 
   254   000FCA                     T2CON           equ	4042	;# 
   255   000FCB                     PR2             equ	4043	;# 
   256   000FCB                     MEMCON          equ	4043	;# 
   257   000FCC                     TMR2            equ	4044	;# 
   258   000FCD                     T1CON           equ	4045	;# 
   259   000FCE                     TMR1            equ	4046	;# 
   260   000FCE                     TMR1L           equ	4046	;# 
   261   000FCF                     TMR1H           equ	4047	;# 
   262   000FD0                     RCON            equ	4048	;# 
   263   000FD1                     WDTCON          equ	4049	;# 
   264   000FD2                     HLVDCON         equ	4050	;# 
   265   000FD2                     LVDCON          equ	4050	;# 
   266   000FD3                     OSCCON          equ	4051	;# 
   267   000FD5                     T0CON           equ	4053	;# 
   268   000FD6                     TMR0            equ	4054	;# 
   269   000FD6                     TMR0L           equ	4054	;# 
   270   000FD7                     TMR0H           equ	4055	;# 
   271   000FD8                     STATUS          equ	4056	;# 
   272   000FD9                     FSR2            equ	4057	;# 
   273   000FD9                     FSR2L           equ	4057	;# 
   274   000FDA                     FSR2H           equ	4058	;# 
   275   000FDB                     PLUSW2          equ	4059	;# 
   276   000FDC                     PREINC2         equ	4060	;# 
   277   000FDD                     POSTDEC2        equ	4061	;# 
   278   000FDE                     POSTINC2        equ	4062	;# 
   279   000FDF                     INDF2           equ	4063	;# 
   280   000FE0                     BSR             equ	4064	;# 
   281   000FE1                     FSR1            equ	4065	;# 
   282   000FE1                     FSR1L           equ	4065	;# 
   283   000FE2                     FSR1H           equ	4066	;# 
   284   000FE3                     PLUSW1          equ	4067	;# 
   285   000FE4                     PREINC1         equ	4068	;# 
   286   000FE5                     POSTDEC1        equ	4069	;# 
   287   000FE6                     POSTINC1        equ	4070	;# 
   288   000FE7                     INDF1           equ	4071	;# 
   289   000FE8                     WREG            equ	4072	;# 
   290   000FE9                     FSR0            equ	4073	;# 
   291   000FE9                     FSR0L           equ	4073	;# 
   292   000FEA                     FSR0H           equ	4074	;# 
   293   000FEB                     PLUSW0          equ	4075	;# 
   294   000FEC                     PREINC0         equ	4076	;# 
   295   000FED                     POSTDEC0        equ	4077	;# 
   296   000FEE                     POSTINC0        equ	4078	;# 
   297   000FEF                     INDF0           equ	4079	;# 
   298   000FF0                     INTCON3         equ	4080	;# 
   299   000FF1                     INTCON2         equ	4081	;# 
   300   000FF2                     INTCON          equ	4082	;# 
   301   000FF3                     PROD            equ	4083	;# 
   302   000FF3                     PRODL           equ	4083	;# 
   303   000FF4                     PRODH           equ	4084	;# 
   304   000FF5                     TABLAT          equ	4085	;# 
   305   000FF6                     TBLPTR          equ	4086	;# 
   306   000FF6                     TBLPTRL         equ	4086	;# 
   307   000FF7                     TBLPTRH         equ	4087	;# 
   308   000FF8                     TBLPTRU         equ	4088	;# 
   309   000FF9                     PCLAT           equ	4089	;# 
   310   000FF9                     PC              equ	4089	;# 
   311   000FF9                     PCL             equ	4089	;# 
   312   000FFA                     PCLATH          equ	4090	;# 
   313   000FFB                     PCLATU          equ	4091	;# 
   314   000FFC                     STKPTR          equ	4092	;# 
   315   000FFD                     TOS             equ	4093	;# 
   316   000FFD                     TOSL            equ	4093	;# 
   317   000FFE                     TOSH            equ	4094	;# 
   318   000FFF                     TOSU            equ	4095	;# 
   319                           
   320                           	psect	idataBANK3
   321   006E2A                     __pidataBANK3:
   322                           	callstack 0
   323                           
   324                           ;initializer for _MQ2_Ro
   325   006E2A  0000               	dw	0
   326   006E2C  4120               	dw	16672
   327                           
   328                           ;initializer for _temp_samples
   329   006E2E  0000               	dw	0
   330   006E30  41C8               	dw	16840
   331   006E32  0000               	dw	0
   332   006E34  41C8               	dw	16840
   333   006E36  0000               	dw	0
   334   006E38  41C8               	dw	16840
   335   006E3A  0000               	dw	0
   336   006E3C  41C8               	dw	16840
   337   006E3E  0000               	dw	0
   338   006E40  41C8               	dw	16840
   339                           
   340                           	psect	mediumconst
   341   007E5C                     __pmediumconst:
   342                           	callstack 0
   343   007E5C  00                 	db	0
   344   007E5D                     _dp_l:
   345                           	callstack 0
   346   007E5D  0000               	dw	0
   347   007E5F  0000               	dw	0
   348   007E61  CFDC               	dw	53212
   349   007E63  35D1               	dw	13777
   350   007E65                     __end_of_dp_l:
   351                           	callstack 0
   352   007E65                     _dp_h:
   353                           	callstack 0
   354   007E65  0000               	dw	0
   355   007E67  0000               	dw	0
   356   007E69  C000               	dw	49152
   357   007E6B  3F15               	dw	16149
   358   007E6D                     __end_of_dp_h:
   359                           	callstack 0
   360   007E6D                     _bp:
   361                           	callstack 0
   362   007E6D  0000               	dw	0
   363   007E6F  3F80               	dw	16256
   364   007E71  0000               	dw	0
   365   007E73  3FC0               	dw	16320
   366   007E75                     __end_of_bp:
   367                           	callstack 0
   368   007E75  A570               	dw	42352
   369   007E77  36EC               	dw	14060
   370   007E79                     __end_of_ivln2_l:
   371                           	callstack 0
   372   007E79  AA3B               	dw	43579
   373   007E7B  3FB8               	dw	16312
   374   007E7D                     __end_of_ivln2:
   375                           	callstack 0
   376   007E7D  384F               	dw	14415
   377   007E7F  3F76               	dw	16246
   378   007E81                     __end_of_cp:
   379                           	callstack 0
   380   007E81  AA3C               	dw	43580
   381   007E83  3338               	dw	13112
   382   007E85                     __end_of_ovt:
   383                           	callstack 0
   384   007E85  BE8C               	dw	48780
   385   007E87  35BF               	dw	13759
   386   007E89                     __end_of_lg2_l:
   387                           	callstack 0
   388   007E89  7200               	dw	29184
   389   007E8B  3F31               	dw	16177
   390   007E8D                     __end_of_lg2_h:
   391                           	callstack 0
   392   007E8D  7218               	dw	29208
   393   007E8F  3F31               	dw	16177
   394   007E91                     __end_of_lg2:
   395                           	callstack 0
   396   007E91  BB4C               	dw	47948
   397   007E93  3331               	dw	13105
   398   007E95                     __end_of_P5:
   399                           	callstack 0
   400   007E95  EA0E               	dw	59918
   401   007E97  B5DD               	dw	46557
   402   007E99                     __end_of_P4:
   403                           	callstack 0
   404   007E99  B355               	dw	45909
   405   007E9B  388A               	dw	14474
   406   007E9D                     __end_of_P3:
   407                           	callstack 0
   408   007E9D  0B61               	dw	2913
   409   007E9F  BB36               	dw	47926
   410   007EA1                     __end_of_P2:
   411                           	callstack 0
   412   007EA1  AAAB               	dw	43691
   413   007EA3  3E2A               	dw	15914
   414   007EA5                     __end_of_P1:
   415                           	callstack 0
   416   007EA5  F142               	dw	61762
   417   007EA7  3E53               	dw	15955
   418   007EA9                     __end_of_L6:
   419                           	callstack 0
   420   007EA9  3255               	dw	12885
   421   007EAB  3E6C               	dw	15980
   422   007EAD                     __end_of_L5:
   423                           	callstack 0
   424   007EAD  A305               	dw	41733
   425   007EAF  3E8B               	dw	16011
   426   007EB1                     __end_of_L4:
   427                           	callstack 0
   428   007EB1  AAAB               	dw	43691
   429   007EB3  3EAA               	dw	16042
   430   007EB5                     __end_of_L3:
   431                           	callstack 0
   432   007EB5  6DB7               	dw	28087
   433   007EB7  3EDB               	dw	16091
   434   007EB9                     __end_of_L2:
   435                           	callstack 0
   436   007EB9  999A               	dw	39322
   437   007EBB  3F19               	dw	16153
   438   007EBD                     __end_of_L1:
   439                           	callstack 0
   440   007EBD  0000               	dw	0
   441   007EBF  4B80               	dw	19328
   442   007EC1                     __end_of_two24:
   443                           	callstack 0
   444   007EC1  0D05               	dw	3333
   445   007EC3  0000               	dw	0
   446   007EC5                     __end_of_TEST_DURATION:
   447                           	callstack 0
   448   007EC5  AA00               	dw	43520
   449   007EC7  3FB8               	dw	16312
   450   007EC9                     __end_of_ivln2_h:
   451                           	callstack 0
   452   007EC9  23C6               	dw	9158
   453   007ECB  B8F6               	dw	47350
   454   007ECD                     __end_of_cp_l:
   455                           	callstack 0
   456   007ECD  4000               	dw	16384
   457   007ECF  3F76               	dw	16246
   458   007ED1                     __end_of_cp_h:
   459                           	callstack 0
   460   007CA7                     _TRISC7         set	31911
   461   007CA6                     _TRISC6         set	31910
   462   007C92                     _TRISA2         set	31890
   463   007C91                     _TRISA1         set	31889
   464   007C90                     _TRISA0         set	31888
   465   000FAB                     _RCSTAbits      set	4011
   466   000FAF                     _SPBRG          set	4015
   467   000FF2                     _INTCONbits     set	4082
   468   000FD0                     _RCONbits       set	4048
   469   000FF1                     _INTCON2bits    set	4081
   470   000F93                     _TRISBbits      set	3987
   471   000FC3                     _ADRESL         set	4035
   472   000FC4                     _ADRESH         set	4036
   473   000FC0                     _ADCON2         set	4032
   474   000FC1                     _ADCON1         set	4033
   475   000FC2                     _ADCON0bits     set	4034
   476   000FAD                     _TXREG          set	4013
   477   000FAC                     _TXSTAbits      set	4012
   478   000FAE                     _RCREG          set	4014
   479   000F9E                     _PIR1bits       set	3998
   480   000F81                     _PORTBbits      set	3969
   481   000F81                     _PORTB          set	3969
   482   000F93                     _TRISB          set	3987
   483   000FD3                     _OSCCON         set	4051
   484   000FF0                     _INTCON3bits    set	4080
   485   007ED1                     STR_17:
   486   007ED1  7B                 	db	123
   487   007ED2  22                 	db	34
   488   007ED3  74                 	db	116	;'t'
   489   007ED4  22                 	db	34
   490   007ED5  3A                 	db	58	;':'
   491   007ED6  25                 	db	37
   492   007ED7  2E                 	db	46
   493   007ED8  31                 	db	49	;'1'
   494   007ED9  66                 	db	102	;'f'
   495   007EDA  2C                 	db	44
   496   007EDB  22                 	db	34
   497   007EDC  66                 	db	102	;'f'
   498   007EDD  64                 	db	100	;'d'
   499   007EDE  22                 	db	34
   500   007EDF  3A                 	db	58	;':'
   501   007EE0  25                 	db	37
   502   007EE1  64                 	db	100	;'d'
   503   007EE2  2C                 	db	44
   504   007EE3  22                 	db	34
   505   007EE4  66                 	db	102	;'f'
   506   007EE5  69                 	db	105	;'i'
   507   007EE6  22                 	db	34
   508   007EE7  3A                 	db	58	;':'
   509   007EE8  25                 	db	37
   510   007EE9  2E                 	db	46
   511   007EEA  31                 	db	49	;'1'
   512   007EEB  66                 	db	102	;'f'
   513   007EEC  2C                 	db	44
   514   007EED  22                 	db	34
   515   007EEE  63                 	db	99	;'c'
   516   007EEF  6F                 	db	111	;'o'
   517   007EF0  22                 	db	34
   518   007EF1  3A                 	db	58	;':'
   519   007EF2  25                 	db	37
   520   007EF3  2E                 	db	46
   521   007EF4  31                 	db	49	;'1'
   522   007EF5  66                 	db	102	;'f'
   523   007EF6  2C                 	db	44
   524   007EF7  22                 	db	34
   525   007EF8  66                 	db	102	;'f'
   526   007EF9  72                 	db	114	;'r'
   527   007EFA  22                 	db	34
   528   007EFB  3A                 	db	58	;':'
   529   007EFC  25                 	db	37
   530   007EFD  2E                 	db	46
   531   007EFE  32                 	db	50	;'2'
   532   007EFF  66                 	db	102	;'f'
   533   007F00  2C                 	db	44
   534   007F01  22                 	db	34
   535   007F02  74                 	db	116	;'t'
   536   007F03  66                 	db	102	;'f'
   537   007F04  22                 	db	34
   538   007F05  3A                 	db	58	;':'
   539   007F06  25                 	db	37
   540   007F07  2E                 	db	46
   541   007F08  32                 	db	50	;'2'
   542   007F09  66                 	db	102	;'f'
   543   007F0A  2C                 	db	44
   544   007F0B  22                 	db	34
   545   007F0C  70                 	db	112	;'p'
   546   007F0D  22                 	db	34
   547   007F0E  3A                 	db	58	;':'
   548   007F0F  25                 	db	37
   549   007F10  64                 	db	100	;'d'
   550   007F11  2C                 	db	44
   551   007F12  22                 	db	34
   552   007F13  61                 	db	97	;'a'
   553   007F14  22                 	db	34
   554   007F15  3A                 	db	58	;':'
   555   007F16  25                 	db	37
   556   007F17  64                 	db	100	;'d'
   557   007F18  2C                 	db	44
   558   007F19  22                 	db	34
   559   007F1A  66                 	db	102	;'f'
   560   007F1B  61                 	db	97	;'a'
   561   007F1C  22                 	db	34
   562   007F1D  3A                 	db	58	;':'
   563   007F1E  25                 	db	37
   564   007F1F  64                 	db	100	;'d'
   565   007F20  2C                 	db	44
   566   007F21  22                 	db	34
   567   007F22  63                 	db	99	;'c'
   568   007F23  6D                 	db	109	;'m'
   569   007F24  64                 	db	100	;'d'
   570   007F25  22                 	db	34
   571   007F26  3A                 	db	58	;':'
   572   007F27  7B                 	db	123
   573   007F28  22                 	db	34
   574   007F29  74                 	db	116	;'t'
   575   007F2A  65                 	db	101	;'e'
   576   007F2B  73                 	db	115	;'s'
   577   007F2C  74                 	db	116	;'t'
   578   007F2D  22                 	db	34
   579   007F2E  3A                 	db	58	;':'
   580   007F2F  25                 	db	37
   581   007F30  64                 	db	100	;'d'
   582   007F31  2C                 	db	44
   583   007F32  22                 	db	34
   584   007F33  73                 	db	115	;'s'
   585   007F34  68                 	db	104	;'h'
   586   007F35  75                 	db	117	;'u'
   587   007F36  74                 	db	116	;'t'
   588   007F37  64                 	db	100	;'d'
   589   007F38  6F                 	db	111	;'o'
   590   007F39  77                 	db	119	;'w'
   591   007F3A  6E                 	db	110	;'n'
   592   007F3B  22                 	db	34
   593   007F3C  3A                 	db	58	;':'
   594   007F3D  25                 	db	37
   595   007F3E  64                 	db	100	;'d'
   596   007F3F  7D                 	db	125
   597   007F40  7D                 	db	125
   598   007F41  0D                 	db	13
   599   007F42  0A                 	db	10
   600   007F43  00                 	db	0
   601   007F44                     STR_16:
   602   007F44  7B                 	db	123
   603   007F45  22                 	db	34
   604   007F46  65                 	db	101	;'e'
   605   007F47  76                 	db	118	;'v'
   606   007F48  65                 	db	101	;'e'
   607   007F49  6E                 	db	110	;'n'
   608   007F4A  74                 	db	116	;'t'
   609   007F4B  22                 	db	34
   610   007F4C  3A                 	db	58	;':'
   611   007F4D  22                 	db	34
   612   007F4E  25                 	db	37
   613   007F4F  73                 	db	115	;'s'
   614   007F50  22                 	db	34
   615   007F51  2C                 	db	44
   616   007F52  22                 	db	34
   617   007F53  74                 	db	116	;'t'
   618   007F54  69                 	db	105	;'i'
   619   007F55  6D                 	db	109	;'m'
   620   007F56  65                 	db	101	;'e'
   621   007F57  22                 	db	34
   622   007F58  3A                 	db	58	;':'
   623   007F59  25                 	db	37
   624   007F5A  6C                 	db	108	;'l'
   625   007F5B  75                 	db	117	;'u'
   626   007F5C  25                 	db	37
   627   007F5D  73                 	db	115	;'s'
   628   007F5E  7D                 	db	125
   629   007F5F  0D                 	db	13
   630   007F60  0A                 	db	10
   631   007F61  00                 	db	0
   632   007F62                     STR_6:
   633   007F62  2C                 	db	44
   634   007F63  22                 	db	34
   635   007F64  64                 	db	100	;'d'
   636   007F65  75                 	db	117	;'u'
   637   007F66  72                 	db	114	;'r'
   638   007F67  61                 	db	97	;'a'
   639   007F68  74                 	db	116	;'t'
   640   007F69  69                 	db	105	;'i'
   641   007F6A  6F                 	db	111	;'o'
   642   007F6B  6E                 	db	110	;'n'
   643   007F6C  22                 	db	34
   644   007F6D  3A                 	db	58	;':'
   645   007F6E  25                 	db	37
   646   007F6F  6C                 	db	108	;'l'
   647   007F70  75                 	db	117	;'u'
   648   007F71  2C                 	db	44
   649   007F72  22                 	db	34
   650   007F73  77                 	db	119	;'w'
   651   007F74  61                 	db	97	;'a'
   652   007F75  74                 	db	116	;'t'
   653   007F76  65                 	db	101	;'e'
   654   007F77  72                 	db	114	;'r'
   655   007F78  22                 	db	34
   656   007F79  3A                 	db	58	;':'
   657   007F7A  25                 	db	37
   658   007F7B  2E                 	db	46
   659   007F7C  32                 	db	50	;'2'
   660   007F7D  66                 	db	102	;'f'
   661   007F7E  00                 	db	0
   662   007F7F                     STR_2:
   663   007F7F  74                 	db	116	;'t'
   664   007F80  65                 	db	101	;'e'
   665   007F81  6D                 	db	109	;'m'
   666   007F82  70                 	db	112	;'p'
   667   007F83  65                 	db	101	;'e'
   668   007F84  72                 	db	114	;'r'
   669   007F85  61                 	db	97	;'a'
   670   007F86  74                 	db	116	;'t'
   671   007F87  75                 	db	117	;'u'
   672   007F88  72                 	db	114	;'r'
   673   007F89  65                 	db	101	;'e'
   674   007F8A  5F                 	db	95	;'_'
   675   007F8B  73                 	db	115	;'s'
   676   007F8C  65                 	db	101	;'e'
   677   007F8D  6E                 	db	110	;'n'
   678   007F8E  73                 	db	115	;'s'
   679   007F8F  6F                 	db	111	;'o'
   680   007F90  72                 	db	114	;'r'
   681   007F91  00                 	db	0
   682   007F92                     STR_4:
   683   007F92  2C                 	db	44
   684   007F93  22                 	db	34
   685   007F94  73                 	db	115	;'s'
   686   007F95  65                 	db	101	;'e'
   687   007F96  6E                 	db	110	;'n'
   688   007F97  73                 	db	115	;'s'
   689   007F98  6F                 	db	111	;'o'
   690   007F99  72                 	db	114	;'r'
   691   007F9A  22                 	db	34
   692   007F9B  3A                 	db	58	;':'
   693   007F9C  22                 	db	34
   694   007F9D  25                 	db	37
   695   007F9E  73                 	db	115	;'s'
   696   007F9F  22                 	db	34
   697   007FA0  00                 	db	0
   698   007FA1                     STR_1:
   699   007FA1  66                 	db	102	;'f'
   700   007FA2  6C                 	db	108	;'l'
   701   007FA3  61                 	db	97	;'a'
   702   007FA4  6D                 	db	109	;'m'
   703   007FA5  65                 	db	101	;'e'
   704   007FA6  5F                 	db	95	;'_'
   705   007FA7  73                 	db	115	;'s'
   706   007FA8  65                 	db	101	;'e'
   707   007FA9  6E                 	db	110	;'n'
   708   007FAA  73                 	db	115	;'s'
   709   007FAB  6F                 	db	111	;'o'
   710   007FAC  72                 	db	114	;'r'
   711   007FAD  00                 	db	0
   712   007FAE                     STR_5:
   713   007FAE  66                 	db	102	;'f'
   714   007FAF  69                 	db	105	;'i'
   715   007FB0  72                 	db	114	;'r'
   716   007FB1  65                 	db	101	;'e'
   717   007FB2  5F                 	db	95	;'_'
   718   007FB3  73                 	db	115	;'s'
   719   007FB4  74                 	db	116	;'t'
   720   007FB5  61                 	db	97	;'a'
   721   007FB6  72                 	db	114	;'r'
   722   007FB7  74                 	db	116	;'t'
   723   007FB8  00                 	db	0
   724   007FB9                     STR_8:
   725   007FB9  74                 	db	116	;'t'
   726   007FBA  65                 	db	101	;'e'
   727   007FBB  73                 	db	115	;'s'
   728   007FBC  74                 	db	116	;'t'
   729   007FBD  5F                 	db	95	;'_'
   730   007FBE  73                 	db	115	;'s'
   731   007FBF  74                 	db	116	;'t'
   732   007FC0  61                 	db	97	;'a'
   733   007FC1  72                 	db	114	;'r'
   734   007FC2  74                 	db	116	;'t'
   735   007FC3  00                 	db	0
   736   007FC4                     STR_3:
   737   007FC4  63                 	db	99	;'c'
   738   007FC5  6F                 	db	111	;'o'
   739   007FC6  5F                 	db	95	;'_'
   740   007FC7  73                 	db	115	;'s'
   741   007FC8  65                 	db	101	;'e'
   742   007FC9  6E                 	db	110	;'n'
   743   007FCA  73                 	db	115	;'s'
   744   007FCB  6F                 	db	111	;'o'
   745   007FCC  72                 	db	114	;'r'
   746   007FCD  00                 	db	0
   747   007FCE                     STR_7:
   748   007FCE  66                 	db	102	;'f'
   749   007FCF  69                 	db	105	;'i'
   750   007FD0  72                 	db	114	;'r'
   751   007FD1  65                 	db	101	;'e'
   752   007FD2  5F                 	db	95	;'_'
   753   007FD3  65                 	db	101	;'e'
   754   007FD4  6E                 	db	110	;'n'
   755   007FD5  64                 	db	100	;'d'
   756   007FD6  00                 	db	0
   757   007FD7                     STR_11:
   758   007FD7  74                 	db	116	;'t'
   759   007FD8  65                 	db	101	;'e'
   760   007FD9  73                 	db	115	;'s'
   761   007FDA  74                 	db	116	;'t'
   762   007FDB  5F                 	db	95	;'_'
   763   007FDC  65                 	db	101	;'e'
   764   007FDD  6E                 	db	110	;'n'
   765   007FDE  64                 	db	100	;'d'
   766   007FDF  00                 	db	0
   767   007FE0                     STR_12:
   768   007FE0  73                 	db	115	;'s'
   769   007FE1  68                 	db	104	;'h'
   770   007FE2  75                 	db	117	;'u'
   771   007FE3  74                 	db	116	;'t'
   772   007FE4  64                 	db	100	;'d'
   773   007FE5  6F                 	db	111	;'o'
   774   007FE6  77                 	db	119	;'w'
   775   007FE7  6E                 	db	110	;'n'
   776   007FE8  00                 	db	0
   777   007FE9                     STR_24:
   778   007FE9  28                 	db	40
   779   007FEA  6E                 	db	110	;'n'
   780   007FEB  75                 	db	117	;'u'
   781   007FEC  6C                 	db	108	;'l'
   782   007FED  6C                 	db	108	;'l'
   783   007FEE  29                 	db	41
   784   007FEF  00                 	db	0
   785   007FF0                     STR_14:
   786   007FF0  72                 	db	114	;'r'
   787   007FF1  65                 	db	101	;'e'
   788   007FF2  73                 	db	115	;'s'
   789   007FF3  75                 	db	117	;'u'
   790   007FF4  6D                 	db	109	;'m'
   791   007FF5  65                 	db	101	;'e'
   792   007FF6  00                 	db	0
   793   007FF7                     STR_18:
   794   007FF7  69                 	db	105	;'i'
   795   007FF8  6E                 	db	110	;'n'
   796   007FF9  66                 	db	102	;'f'
   797   007FFA  00                 	db	0
   798   007FFB                     STR_21:
   799   007FFB  6E                 	db	110	;'n'
   800   007FFC  61                 	db	97	;'a'
   801   007FFD  6E                 	db	110	;'n'
   802   007FFE  00                 	db	0
   803   007FFB                     STR_22          equ	STR_21
   804   007FFB                     STR_23          equ	STR_21
   805   007FF7                     STR_19          equ	STR_18
   806   007FF7                     STR_20          equ	STR_18
   807   007F71                     STR_10          equ	STR_6+15
   808   007F61                     STR_9           equ	STR_16+29
   809   007F61                     STR_13          equ	STR_16+29
   810   007F61                     STR_15          equ	STR_16+29
   811   007FFF  00                 	db	0	; dummy byte at the end
   812   007E5C                     __smallconst    set	__pmediumconst
   813   007E5C                     __mediumconst   set	__pmediumconst
   814   000002                     __activetblptr  equ	2
   815                           
   816                           ; #config settings
   817                           
   818                           	psect	cinit
   819   006BD6                     __pcinit:
   820                           	callstack 0
   821   006BD6                     start_initialization:
   822                           	callstack 0
   823   006BD6                     __initialization:
   824                           	callstack 0
   825                           
   826                           ; Initialize objects allocated to BANK3 (24 bytes)
   827                           ; load TBLPTR registers with __pidataBANK3
   828   006BD6  0E2A               	movlw	low __pidataBANK3
   829   006BD8  6EF6               	movwf	tblptrl,c
   830   006BDA  0E6E               	movlw	high __pidataBANK3
   831   006BDC  6EF7               	movwf	tblptrh,c
   832   006BDE  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   833   006BE0  6EF8               	movwf	tblptru,c
   834   006BE2  EE03  F0D6         	lfsr	0,__pdataBANK3
   835   006BE6  EE10 F018          	lfsr	1,24
   836   006BEA                     copy_data0:
   837   006BEA  0009               	tblrd		*+
   838   006BEC  CFF5 FFEE          	movff	tablat,postinc0
   839   006BF0  50E5               	movf	postdec1,w,c
   840   006BF2  50E1               	movf	fsr1l,w,c
   841   006BF4  E1FA               	bnz	copy_data0
   842                           
   843                           ; Clear objects allocated to BANK3 (214 bytes)
   844   006BF6  EE03  F000         	lfsr	0,__pbssBANK3
   845   006BFA  0ED6               	movlw	214
   846   006BFC                     clear_0:
   847   006BFC  6AEE               	clrf	postinc0,c
   848   006BFE  06E8               	decf	wreg,f,c
   849   006C00  E1FD               	bnz	clear_0
   850                           
   851                           ; Clear objects allocated to BANK2 (6 bytes)
   852   006C02  0102               	movlb	2
   853   006C04  6BFF               	clrf	(__pbssBANK2+5)& (0+255),b
   854   006C06  6BFE               	clrf	(__pbssBANK2+4)& (0+255),b
   855   006C08  6BFD               	clrf	(__pbssBANK2+3)& (0+255),b
   856   006C0A  6BFC               	clrf	(__pbssBANK2+2)& (0+255),b
   857   006C0C  6BFB               	clrf	(__pbssBANK2+1)& (0+255),b
   858   006C0E  6BFA               	clrf	__pbssBANK2& (0+255),b
   859                           
   860                           ; Clear objects allocated to COMRAM (1 bytes)
   861   006C10  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   862   006C12                     end_of_initialization:
   863                           	callstack 0
   864   006C12                     __end_of__initialization:
   865                           	callstack 0
   866   006C12  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   867   006C14  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   868   006C16  0E00               	movlw	low (__Lmediumconst shr (0+16))
   869   006C18  6EF8               	movwf	tblptru,c
   870   006C1A  0100               	movlb	0
   871   006C1C  EFD8  F025         	goto	_main	;jump to C main() function
   872                           
   873                           	psect	bssCOMRAM
   874   00005E                     __pbssCOMRAM:
   875                           	callstack 0
   876   00005E                     _trigger_test:
   877                           	callstack 0
   878   00005E                     	ds	1
   879                           
   880                           	psect	bssBANK2
   881   0002FA                     __pbssBANK2:
   882                           	callstack 0
   883   0002FA                     _system_millis:
   884                           	callstack 0
   885   0002FA                     	ds	4
   886   0002FE                     _prec:
   887                           	callstack 0
   888   0002FE                     	ds	2
   889                           
   890                           	psect	bssBANK3
   891   000300                     __pbssBANK3:
   892                           	callstack 0
   893   000300                     _co_samples:
   894                           	callstack 0
   895   000300                     	ds	20
   896   000314                     floorf@F521:
   897                           	callstack 0
   898   000314                     	ds	4
   899   000318                     ___fpclassifyf@F465:
   900                           	callstack 0
   901   000318                     	ds	4
   902   00031C                     Update_Actuators@last_blink:
   903                           	callstack 0
   904   00031C                     	ds	4
   905   000320                     Read_Sensors@last_flow_time:
   906                           	callstack 0
   907   000320                     	ds	4
   908   000324                     Read_Sensors@last_co:
   909                           	callstack 0
   910   000324                     	ds	4
   911   000328                     Handle_Commands@last_blink:
   912                           	callstack 0
   913   000328                     	ds	4
   914   00032C                     _test_start_flow:
   915                           	callstack 0
   916   00032C                     	ds	4
   917   000330                     _fire_start_flow:
   918                           	callstack 0
   919   000330                     	ds	4
   920   000334                     _fire_start_co:
   921                           	callstack 0
   922   000334                     	ds	4
   923   000338                     _fire_start_flame:
   924                           	callstack 0
   925   000338                     	ds	4
   926   00033C                     _fire_start_temp:
   927                           	callstack 0
   928   00033C                     	ds	4
   929   000340                     _fire_start_time:
   930                           	callstack 0
   931   000340                     	ds	4
   932   000344                     _test_start_time:
   933                           	callstack 0
   934   000344                     	ds	4
   935   000348                     _total_flow:
   936                           	callstack 0
   937   000348                     	ds	4
   938   00034C                     _flow_rate:
   939                           	callstack 0
   940   00034C                     	ds	4
   941   000350                     _co_ppm:
   942                           	callstack 0
   943   000350                     	ds	4
   944   000354                     _flame_base_voltage:
   945                           	callstack 0
   946   000354                     	ds	4
   947   000358                     _flame_intensity:
   948                           	callstack 0
   949   000358                     	ds	4
   950   00035C                     _temperature:
   951                           	callstack 0
   952   00035C                     	ds	4
   953   000360                     _errno:
   954                           	callstack 0
   955   000360                     	ds	2
   956   000362                     _width:
   957                           	callstack 0
   958   000362                     	ds	2
   959   000364                     Read_Sensors@last_pulse:
   960                           	callstack 0
   961   000364                     	ds	2
   962   000366                     _pulse_count:
   963                           	callstack 0
   964   000366                     	ds	2
   965   000368                     _flags:
   966                           	callstack 0
   967   000368                     	ds	1
   968   000369                     Handle_Shutdown_Events@prev_shutdown:
   969                           	callstack 0
   970   000369                     	ds	1
   971   00036A                     Handle_Test_Events@prev_test:
   972                           	callstack 0
   973   00036A                     	ds	1
   974   00036B                     _shutdown_system:
   975                           	callstack 0
   976   00036B                     	ds	1
   977   00036C                     _sample_index:
   978                           	callstack 0
   979   00036C                     	ds	1
   980   00036D                     _prev_fire_alarm:
   981                           	callstack 0
   982   00036D                     	ds	1
   983   00036E                     _fire_alarm:
   984                           	callstack 0
   985   00036E                     	ds	1
   986   00036F                     _alarm_active:
   987                           	callstack 0
   988   00036F                     	ds	1
   989   000370                     _pump_active:
   990                           	callstack 0
   991   000370                     	ds	1
   992   000371                     _flame_detected:
   993                           	callstack 0
   994   000371                     	ds	1
   995   000372                     _dbuf:
   996                           	callstack 0
   997   000372                     	ds	80
   998   0003C2                     _fire_trigger_sensor:
   999                           	callstack 0
  1000   0003C2                     	ds	20
  1001                           
  1002                           	psect	dataBANK3
  1003   0003D6                     __pdataBANK3:
  1004                           	callstack 0
  1005   0003D6                     _MQ2_Ro:
  1006                           	callstack 0
  1007   0003D6                     	ds	4
  1008   0003DA                     _temp_samples:
  1009                           	callstack 0
  1010   0003DA                     	ds	20
  1011                           
  1012                           	psect	cstackBANK3
  1013   0003EE                     __pcstackBANK3:
  1014                           	callstack 0
  1015   0003EE                     _main$1835:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x0
  1019   0003EE                     	ds	4
  1020   0003F2                     main@adc_value:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x4
  1024   0003F2                     	ds	2
  1025   0003F4                     main@adc_value_677:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x6
  1029   0003F4                     	ds	2
  1030   0003F6                     main@cycle_count:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x8
  1034   0003F6                     	ds	2
  1035   0003F8                     main@voltage:
  1036                           	callstack 0
  1037                           
  1038                           ; 4 bytes @ 0xA
  1039   0003F8                     	ds	4
  1040   0003FC                     main@i:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xE
  1044   0003FC                     	ds	2
  1045   0003FE                     main@i_676:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x10
  1049   0003FE                     	ds	2
  1050                           
  1051                           	psect	cstackBANK2
  1052   000200                     __pcstackBANK2:
  1053                           	callstack 0
  1054   000200                     Handle_Fire_Events@end_data:
  1055                           	callstack 0
  1056                           
  1057                           ; 150 bytes @ 0x0
  1058   000200                     	ds	150
  1059   000296                     Handle_Fire_Events@start_data:
  1060                           	callstack 0
  1061                           
  1062                           ; 100 bytes @ 0x96
  1063   000296                     	ds	100
  1064                           
  1065                           	psect	cstackBANK1
  1066   000100                     __pcstackBANK1:
  1067                           	callstack 0
  1068   000100                     _powf$1844:
  1069                           	callstack 0
  1070   000100                     Send_History_Event@buffer:
  1071                           	callstack 0
  1072   000100                     Send_Data@buffer:
  1073                           	callstack 0
  1074                           
  1075                           ; 200 bytes @ 0x0
  1076   000100                     	ds	4
  1077   000104                     _powf$1845:
  1078                           	callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x4
  1081   000104                     	ds	4
  1082   000108                     _powf$1849:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x8
  1086   000108                     	ds	4
  1087   00010C                     _powf$1850:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0xC
  1091   00010C                     	ds	4
  1092   000110                     _powf$1851:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x10
  1096   000110                     	ds	4
  1097   000114                     _powf$1852:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x14
  1101   000114                     	ds	4
  1102   000118                     _powf$1853:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x18
  1106   000118                     	ds	4
  1107   00011C                     powf@t2:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x1C
  1111   00011C                     	ds	4
  1112   000120                     powf@z_h:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x20
  1116   000120                     	ds	4
  1117   000124                     powf@z_l:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x24
  1121   000124                     	ds	4
  1122   000128                     powf@i:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x28
  1126   000128                     	ds	4
  1127   00012C                     powf@y1:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x2C
  1131   00012C                     	ds	4
  1132   000130                     powf@s_l:
  1133                           	callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x30
  1136   000130                     	ds	4
  1137   000134                     powf@t_l:
  1138                           	callstack 0
  1139                           
  1140                           ; 4 bytes @ 0x34
  1141   000134                     	ds	4
  1142   000138                     _powf$1843:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x38
  1146   000138                     	ds	4
  1147   00013C                     _powf$1847:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x3C
  1151   00013C                     	ds	4
  1152   000140                     _powf$1848:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x40
  1156   000140                     	ds	4
  1157   000144                     powf@w:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x44
  1161   000144                     	ds	4
  1162   000148                     _powf$1839:
  1163                           	callstack 0
  1164                           
  1165                           ; 4 bytes @ 0x48
  1166   000148                     	ds	4
  1167   00014C                     _powf$1841:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x4C
  1171   00014C                     	ds	4
  1172   000150                     powf@r:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x50
  1176   000150                     	ds	4
  1177   000154                     powf@yisint:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x54
  1181   000154                     	ds	4
  1182   000158                     _powf$1840:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x58
  1186   000158                     	ds	4
  1187   00015C                     _powf$1846:
  1188                           	callstack 0
  1189                           
  1190                           ; 4 bytes @ 0x5C
  1191   00015C                     	ds	4
  1192   000160                     powf@s:
  1193                           	callstack 0
  1194                           
  1195                           ; 4 bytes @ 0x60
  1196   000160                     	ds	4
  1197   000164                     powf@sn:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x64
  1201   000164                     	ds	4
  1202   000168                     powf@hx:
  1203                           	callstack 0
  1204                           
  1205                           ; 4 bytes @ 0x68
  1206   000168                     	ds	4
  1207   00016C                     powf@p_l:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x6C
  1211   00016C                     	ds	4
  1212   000170                     powf@t_h:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x70
  1216   000170                     	ds	4
  1217   000174                     powf@s_h:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x74
  1221   000174                     	ds	4
  1222   000178                     powf@ax:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x78
  1226   000178                     	ds	4
  1227   00017C                     powf@u:
  1228                           	callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x7C
  1231   00017C                     	ds	4
  1232   000180                     powf@v:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x80
  1236   000180                     	ds	4
  1237   000184                     powf@hy:
  1238                           	callstack 0
  1239                           
  1240                           ; 4 bytes @ 0x84
  1241   000184                     	ds	4
  1242   000188                     powf@n:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x88
  1246   000188                     	ds	4
  1247   00018C                     powf@t1:
  1248                           	callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x8C
  1251   00018C                     	ds	4
  1252   000190                     powf@s2:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x90
  1256   000190                     	ds	4
  1257   000194                     powf@iy:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x94
  1261   000194                     	ds	4
  1262   000198                     powf@is:
  1263                           	callstack 0
  1264                           
  1265                           ; 4 bytes @ 0x98
  1266   000198                     	ds	4
  1267   00019C                     _powf$1842:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x9C
  1271   00019C                     	ds	4
  1272   0001A0                     powf@p_h:
  1273                           	callstack 0
  1274                           
  1275                           ; 4 bytes @ 0xA0
  1276   0001A0                     	ds	4
  1277   0001A4                     powf@k:
  1278                           	callstack 0
  1279                           
  1280                           ; 4 bytes @ 0xA4
  1281   0001A4                     	ds	4
  1282   0001A8                     powf@j:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0xA8
  1286   0001A8                     	ds	4
  1287   0001AC                     powf@ix:
  1288                           	callstack 0
  1289                           
  1290                           ; 4 bytes @ 0xAC
  1291   0001AC                     	ds	4
  1292   0001B0                     powf@t:
  1293                           	callstack 0
  1294                           
  1295                           ; 4 bytes @ 0xB0
  1296   0001B0                     	ds	4
  1297   0001B4                     powf@z:
  1298                           	callstack 0
  1299                           
  1300                           ; 4 bytes @ 0xB4
  1301   0001B4                     	ds	20
  1302   0001C8                     Send_History_Event@i:
  1303                           	callstack 0
  1304   0001C8                     Send_Data@i:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0xC8
  1308   0001C8                     	ds	2
  1309   0001CA                     Handle_Test_Events@test_data:
  1310                           	callstack 0
  1311                           
  1312                           ; 50 bytes @ 0xCA
  1313   0001CA                     	ds	50
  1314   0001FC                     Handle_Test_Events@water_used:
  1315                           	callstack 0
  1316                           
  1317                           ; 4 bytes @ 0xFC
  1318   0001FC                     	ds	4
  1319                           
  1320                           	psect	cstackBANK0
  1321   000060                     __pcstackBANK0:
  1322                           	callstack 0
  1323   000060                     Apply_Filter@sum:
  1324                           	callstack 0
  1325   000060                     ___flge@ff1:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x0
  1329   000060                     	ds	4
  1330   000064                     Apply_Filter@i:
  1331                           	callstack 0
  1332   000064                     ___flge@ff2:
  1333                           	callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x4
  1336   000064                     	ds	4
  1337   000068                     ?_powf:
  1338                           	callstack 0
  1339   000068                     efgtoa@fp:
  1340                           	callstack 0
  1341   000068                     powf@x:
  1342                           	callstack 0
  1343   000068                     ??_Update_Actuators:
  1344                           
  1345                           ; 1 bytes @ 0x8
  1346   000068                     	ds	1
  1347   000069                     efgtoa@f:
  1348                           	callstack 0
  1349                           
  1350                           ; 4 bytes @ 0x9
  1351   000069                     	ds	3
  1352   00006C                     powf@y:
  1353                           	callstack 0
  1354                           
  1355                           ; 4 bytes @ 0xC
  1356   00006C                     	ds	1
  1357   00006D                     efgtoa@c:
  1358                           	callstack 0
  1359                           
  1360                           ; 1 bytes @ 0xD
  1361   00006D                     	ds	1
  1362   00006E                     ??_efgtoa:
  1363                           
  1364                           ; 1 bytes @ 0xE
  1365   00006E                     	ds	2
  1366   000070                     efgtoa@ne:
  1367                           	callstack 0
  1368   000070                     ??_powf:
  1369                           
  1370                           ; 1 bytes @ 0x10
  1371   000070                     	ds	2
  1372   000072                     efgtoa@p:
  1373                           	callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x12
  1376   000072                     	ds	2
  1377   000074                     efgtoa@t:
  1378                           	callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x14
  1381   000074                     	ds	2
  1382   000076                     _efgtoa$1377:
  1383                           	callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x16
  1386   000076                     	ds	2
  1387   000078                     efgtoa@pp:
  1388                           	callstack 0
  1389                           
  1390                           ; 1 bytes @ 0x18
  1391   000078                     	ds	1
  1392   000079                     efgtoa@mode:
  1393                           	callstack 0
  1394   000079                     ??_Read_Sensors:
  1395                           
  1396                           ; 1 bytes @ 0x19
  1397   000079                     	ds	1
  1398   00007A                     efgtoa@nmode:
  1399                           	callstack 0
  1400                           
  1401                           ; 1 bytes @ 0x1A
  1402   00007A                     	ds	1
  1403   00007B                     efgtoa@d:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x1B
  1407   00007B                     	ds	2
  1408   00007D                     efgtoa@m:
  1409                           	callstack 0
  1410   00007D                     Read_Sensors@raw_temp:
  1411                           	callstack 0
  1412                           
  1413                           ; 4 bytes @ 0x1D
  1414   00007D                     	ds	2
  1415   00007F                     efgtoa@e:
  1416                           	callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x1F
  1419   00007F                     	ds	2
  1420   000081                     efgtoa@w:
  1421                           	callstack 0
  1422   000081                     Read_Sensors@flame_voltage:
  1423                           	callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x21
  1426   000081                     	ds	2
  1427   000083                     efgtoa@ou:
  1428                           	callstack 0
  1429                           
  1430                           ; 4 bytes @ 0x23
  1431   000083                     	ds	2
  1432   000085                     Read_Sensors@temp_factor:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x25
  1436   000085                     	ds	2
  1437   000087                     efgtoa@i:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x27
  1441   000087                     	ds	2
  1442   000089                     efgtoa@h:
  1443                           	callstack 0
  1444   000089                     _Read_Sensors$1836:
  1445                           	callstack 0
  1446                           
  1447                           ; 4 bytes @ 0x29
  1448   000089                     	ds	4
  1449   00008D                     efgtoa@l:
  1450                           	callstack 0
  1451   00008D                     _Read_Sensors$1837:
  1452                           	callstack 0
  1453                           
  1454                           ; 4 bytes @ 0x2D
  1455   00008D                     	ds	4
  1456   000091                     efgtoa@sign:
  1457                           	callstack 0
  1458   000091                     _Read_Sensors$1838:
  1459                           	callstack 0
  1460                           
  1461                           ; 4 bytes @ 0x31
  1462   000091                     	ds	1
  1463   000092                     efgtoa@g:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x32
  1467   000092                     	ds	3
  1468   000095                     Read_Sensors@temp_adc:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x35
  1472   000095                     	ds	1
  1473   000096                     efgtoa@n:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x36
  1477   000096                     	ds	1
  1478   000097                     Read_Sensors@flame_adc:
  1479                           	callstack 0
  1480                           
  1481                           ; 2 bytes @ 0x37
  1482   000097                     	ds	1
  1483   000098                     efgtoa@u:
  1484                           	callstack 0
  1485                           
  1486                           ; 4 bytes @ 0x38
  1487   000098                     	ds	1
  1488   000099                     Read_Sensors@mq2_adc:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x39
  1492   000099                     	ds	2
  1493   00009B                     Read_Sensors@mq2_voltage:
  1494                           	callstack 0
  1495                           
  1496                           ; 4 bytes @ 0x3B
  1497   00009B                     	ds	1
  1498   00009C                     vfpfcnvrt@fp:
  1499                           	callstack 0
  1500                           
  1501                           ; 1 bytes @ 0x3C
  1502   00009C                     	ds	1
  1503   00009D                     vfpfcnvrt@fmt:
  1504                           	callstack 0
  1505                           
  1506                           ; 1 bytes @ 0x3D
  1507   00009D                     	ds	1
  1508   00009E                     vfpfcnvrt@ap:
  1509                           	callstack 0
  1510                           
  1511                           ; 2 bytes @ 0x3E
  1512   00009E                     	ds	1
  1513   00009F                     Read_Sensors@rs_ro_ratio:
  1514                           	callstack 0
  1515                           
  1516                           ; 4 bytes @ 0x3F
  1517   00009F                     	ds	1
  1518   0000A0                     ??_vfpfcnvrt:
  1519                           
  1520                           ; 1 bytes @ 0x40
  1521   0000A0                     	ds	2
  1522   0000A2                     vfpfcnvrt@done:
  1523                           	callstack 0
  1524                           
  1525                           ; 1 bytes @ 0x42
  1526   0000A2                     	ds	1
  1527   0000A3                     Read_Sensors@current_pulses:
  1528                           	callstack 0
  1529   0000A3                     vfpfcnvrt@convarg:
  1530                           	callstack 0
  1531                           
  1532                           ; 4 bytes @ 0x43
  1533   0000A3                     	ds	2
  1534   0000A5                     Read_Sensors@pulses_diff:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x45
  1538   0000A5                     	ds	2
  1539   0000A7                     vfpfcnvrt@c:
  1540                           	callstack 0
  1541   0000A7                     Read_Sensors@Rs:
  1542                           	callstack 0
  1543                           
  1544                           ; 4 bytes @ 0x47
  1545   0000A7                     	ds	1
  1546   0000A8                     vfpfcnvrt@cp:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0x48
  1550   0000A8                     	ds	2
  1551   0000AA                     ?_vfprintf:
  1552                           	callstack 0
  1553   0000AA                     vfprintf@fp:
  1554                           	callstack 0
  1555                           
  1556                           ; 1 bytes @ 0x4A
  1557   0000AA                     	ds	1
  1558   0000AB                     vfprintf@fmt:
  1559                           	callstack 0
  1560   0000AB                     Read_Sensors@raw_co:
  1561                           	callstack 0
  1562                           
  1563                           ; 4 bytes @ 0x4B
  1564   0000AB                     	ds	2
  1565   0000AD                     vfprintf@ap:
  1566                           	callstack 0
  1567                           
  1568                           ; 1 bytes @ 0x4D
  1569   0000AD                     	ds	1
  1570   0000AE                     vfprintf@cfmt:
  1571                           	callstack 0
  1572                           
  1573                           ; 2 bytes @ 0x4E
  1574   0000AE                     	ds	2
  1575   0000B0                     ?_sprintf:
  1576                           	callstack 0
  1577   0000B0                     sprintf@s:
  1578                           	callstack 0
  1579                           
  1580                           ; 2 bytes @ 0x50
  1581   0000B0                     	ds	2
  1582   0000B2                     sprintf@fmt:
  1583                           	callstack 0
  1584                           
  1585                           ; 2 bytes @ 0x52
  1586   0000B2                     	ds	34
  1587   0000D4                     sprintf@ap:
  1588                           	callstack 0
  1589                           
  1590                           ; 1 bytes @ 0x74
  1591   0000D4                     	ds	1
  1592   0000D5                     sprintf@f:
  1593                           	callstack 0
  1594                           
  1595                           ; 11 bytes @ 0x75
  1596   0000D5                     	ds	11
  1597   0000E0                     Send_History_Event@event_type:
  1598                           	callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x80
  1601   0000E0                     	ds	2
  1602   0000E2                     Send_History_Event@extra_data:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x82
  1606   0000E2                     	ds	2
  1607   0000E4                     ??_Handle_Fire_Events:
  1608   0000E4                     ??_Handle_Test_Events:
  1609                           
  1610                           ; 1 bytes @ 0x84
  1611   0000E4                     	ds	2
  1612   0000E6                     Handle_Fire_Events@duration:
  1613                           	callstack 0
  1614                           
  1615                           ; 4 bytes @ 0x86
  1616   0000E6                     	ds	4
  1617   0000EA                     Handle_Fire_Events@water_used:
  1618                           	callstack 0
  1619                           
  1620                           ; 4 bytes @ 0x8A
  1621   0000EA                     	ds	4
  1622   0000EE                     ??_main:
  1623                           
  1624                           ; 1 bytes @ 0x8E
  1625   0000EE                     	ds	2
  1626                           
  1627                           	psect	cstackCOMRAM
  1628   000001                     __pcstackCOMRAM:
  1629                           	callstack 0
  1630   000001                     ?_ADC_Read:
  1631                           	callstack 0
  1632   000001                     ?___fpclassifyf:
  1633                           	callstack 0
  1634   000001                     ?___awmod:
  1635                           	callstack 0
  1636   000001                     ?_read_prec_or_width:
  1637                           	callstack 0
  1638   000001                     ?_labs:
  1639                           	callstack 0
  1640   000001                     ?_sqrtf:
  1641                           	callstack 0
  1642   000001                     ?___lldiv:
  1643                           	callstack 0
  1644   000001                     ?___aldiv:
  1645                           	callstack 0
  1646   000001                     ?___almod:
  1647                           	callstack 0
  1648   000001                     ?___flneg:
  1649                           	callstack 0
  1650   000001                     ?___fltol:
  1651                           	callstack 0
  1652   000001                     ?___llmod:
  1653                           	callstack 0
  1654   000001                     ?___xxtofl:
  1655                           	callstack 0
  1656   000001                     read_prec_or_width@fmt:
  1657                           	callstack 0
  1658   000001                     ___awmod@dividend:
  1659                           	callstack 0
  1660   000001                     memcpy@d1:
  1661                           	callstack 0
  1662   000001                     fputc@c:
  1663                           	callstack 0
  1664   000001                     strcpy@dest:
  1665                           	callstack 0
  1666   000001                     ___lldiv@dividend:
  1667                           	callstack 0
  1668   000001                     ___aldiv@dividend:
  1669                           	callstack 0
  1670   000001                     ___almod@dividend:
  1671                           	callstack 0
  1672   000001                     ___fleq@ff1:
  1673                           	callstack 0
  1674   000001                     ___flneg@f1:
  1675                           	callstack 0
  1676   000001                     ___fltol@f1:
  1677                           	callstack 0
  1678   000001                     ___llmod@dividend:
  1679                           	callstack 0
  1680   000001                     ___xxtofl@val:
  1681                           	callstack 0
  1682   000001                     ___fpclassifyf@x:
  1683                           	callstack 0
  1684   000001                     labs@a:
  1685                           	callstack 0
  1686   000001                     sqrtf@x:
  1687                           	callstack 0
  1688   000001                     ??_Handle_Commands:
  1689   000001                     
  1690                           ; 1 bytes @ 0x0
  1691   000001                     	ds	1
  1692   000002                     read_prec_or_width@ap:
  1693                           	callstack 0
  1694                           
  1695                           ; 1 bytes @ 0x1
  1696   000002                     	ds	1
  1697   000003                     fputc@fp:
  1698                           	callstack 0
  1699   000003                     ___awmod@divisor:
  1700                           	callstack 0
  1701   000003                     memcpy@s1:
  1702                           	callstack 0
  1703   000003                     strcpy@src:
  1704                           	callstack 0
  1705   000003                     ??_ADC_Read:
  1706   000003                     ??_read_prec_or_width:
  1707                           
  1708                           ; 1 bytes @ 0x2
  1709   000003                     	ds	1
  1710   000004                     ??_fputc:
  1711                           
  1712                           ; 1 bytes @ 0x3
  1713   000004                     	ds	1
  1714   000005                     Handle_Commands@cmd:
  1715                           	callstack 0
  1716   000005                     ADC_Read@channel:
  1717                           	callstack 0
  1718   000005                     ___awmod@counter:
  1719                           	callstack 0
  1720   000005                     read_prec_or_width@c:
  1721                           	callstack 0
  1722   000005                     memcpy@n:
  1723                           	callstack 0
  1724   000005                     strcpy@d:
  1725                           	callstack 0
  1726   000005                     ___lldiv@divisor:
  1727                           	callstack 0
  1728   000005                     ___aldiv@divisor:
  1729                           	callstack 0
  1730   000005                     ___almod@divisor:
  1731                           	callstack 0
  1732   000005                     ___fleq@ff2:
  1733                           	callstack 0
  1734   000005                     ___llmod@divisor:
  1735                           	callstack 0
  1736   000005                     ??___fpclassifyf:
  1737   000005                     ??_labs:
  1738   000005                     ??_sqrtf:
  1739   000005                     ??___fltol:
  1740   000005                     ??___xxtofl:
  1741                           
  1742                           ; 1 bytes @ 0x4
  1743   000005                     	ds	1
  1744   000006                     ___awmod@sign:
  1745                           	callstack 0
  1746   000006                     read_prec_or_width@n:
  1747                           	callstack 0
  1748                           
  1749                           ; 2 bytes @ 0x5
  1750   000006                     	ds	1
  1751   000007                     memcpy@tmp:
  1752                           	callstack 0
  1753   000007                     
  1754                           ; 1 bytes @ 0x6
  1755   000007                     	ds	1
  1756   000008                     memcpy@d:
  1757                           	callstack 0
  1758                           
  1759                           ; 2 bytes @ 0x7
  1760   000008                     	ds	1
  1761   000009                     ___aldiv@counter:
  1762                           	callstack 0
  1763   000009                     ___almod@counter:
  1764                           	callstack 0
  1765   000009                     ___fltol@sign1:
  1766                           	callstack 0
  1767   000009                     ___llmod@counter:
  1768                           	callstack 0
  1769   000009                     ___xxtofl@sign:
  1770                           	callstack 0
  1771   000009                     stoa@fp:
  1772                           	callstack 0
  1773   000009                     ___fpclassifyf@e:
  1774                           	callstack 0
  1775   000009                     fputs@s:
  1776                           	callstack 0
  1777   000009                     ___lldiv@quotient:
  1778                           	callstack 0
  1779   000009                     ??___fleq:
  1780   000009                     
  1781                           ; 1 bytes @ 0x8
  1782   000009                     	ds	1
  1783   00000A                     ___aldiv@sign:
  1784                           	callstack 0
  1785   00000A                     ___almod@sign:
  1786                           	callstack 0
  1787   00000A                     ___fltol@exp1:
  1788                           	callstack 0
  1789   00000A                     ___xxtofl@exp:
  1790                           	callstack 0
  1791   00000A                     stoa@s:
  1792                           	callstack 0
  1793   00000A                     memcpy@s:
  1794                           	callstack 0
  1795   00000A                     sqrtf@s:
  1796                           	callstack 0
  1797                           
  1798                           ; 4 bytes @ 0x9
  1799   00000A                     	ds	1
  1800   00000B                     ?_abs:
  1801                           	callstack 0
  1802   00000B                     fputs@fp:
  1803                           	callstack 0
  1804   00000B                     abs@a:
  1805                           	callstack 0
  1806   00000B                     ___aldiv@quotient:
  1807                           	callstack 0
  1808   00000B                     ___xxtofl@arg:
  1809                           	callstack 0
  1810   00000B                     ___fpclassifyf@u:
  1811                           	callstack 0
  1812                           
  1813                           ; 4 bytes @ 0xA
  1814   00000B                     	ds	1
  1815   00000C                     fputs@c:
  1816                           	callstack 0
  1817   00000C                     ??_stoa:
  1818                           
  1819                           ; 1 bytes @ 0xB
  1820   00000C                     	ds	1
  1821   00000D                     ___lldiv@counter:
  1822                           	callstack 0
  1823   00000D                     fputs@i:
  1824                           	callstack 0
  1825   00000D                     ??_abs:
  1826                           
  1827                           ; 1 bytes @ 0xC
  1828   00000D                     	ds	1
  1829   00000E                     stoa@p:
  1830                           	callstack 0
  1831   00000E                     sqrtf@i:
  1832                           	callstack 0
  1833                           
  1834                           ; 4 bytes @ 0xD
  1835   00000E                     	ds	1
  1836   00000F                     ?___flmul:
  1837                           	callstack 0
  1838   00000F                     pad@fp:
  1839                           	callstack 0
  1840   00000F                     ___flmul@b:
  1841                           	callstack 0
  1842                           
  1843                           ; 4 bytes @ 0xE
  1844   00000F                     	ds	1
  1845   000010                     pad@buf:
  1846                           	callstack 0
  1847   000010                     stoa@cp:
  1848                           	callstack 0
  1849                           
  1850                           ; 2 bytes @ 0xF
  1851   000010                     	ds	2
  1852   000012                     pad@p:
  1853                           	callstack 0
  1854   000012                     stoa@l:
  1855                           	callstack 0
  1856   000012                     sqrtf@q:
  1857                           	callstack 0
  1858                           
  1859                           ; 4 bytes @ 0x11
  1860   000012                     	ds	1
  1861   000013                     ___flmul@a:
  1862                           	callstack 0
  1863                           
  1864                           ; 4 bytes @ 0x12
  1865   000013                     	ds	1
  1866   000014                     ??_pad:
  1867                           
  1868                           ; 1 bytes @ 0x13
  1869   000014                     	ds	1
  1870   000015                     pad@i:
  1871                           	callstack 0
  1872                           
  1873                           ; 2 bytes @ 0x14
  1874   000015                     	ds	1
  1875   000016                     sqrtf@t:
  1876                           	callstack 0
  1877                           
  1878                           ; 4 bytes @ 0x15
  1879   000016                     	ds	1
  1880   000017                     dtoa@fp:
  1881                           	callstack 0
  1882   000017                     utoa@fp:
  1883                           	callstack 0
  1884   000017                     ??___flmul:
  1885                           
  1886                           ; 1 bytes @ 0x16
  1887   000017                     	ds	1
  1888   000018                     dtoa@d:
  1889                           	callstack 0
  1890   000018                     utoa@d:
  1891                           	callstack 0
  1892                           
  1893                           ; 4 bytes @ 0x17
  1894   000018                     	ds	2
  1895   00001A                     sqrtf@m:
  1896                           	callstack 0
  1897                           
  1898                           ; 4 bytes @ 0x19
  1899   00001A                     	ds	1
  1900   00001B                     ___flmul@sign:
  1901                           	callstack 0
  1902                           
  1903                           ; 1 bytes @ 0x1A
  1904   00001B                     	ds	1
  1905   00001C                     ___flmul@aexp:
  1906                           	callstack 0
  1907   00001C                     _dtoa$1346:
  1908                           	callstack 0
  1909   00001C                     utoa@w:
  1910                           	callstack 0
  1911   00001C                     
  1912                           ; 1 bytes @ 0x1B
  1913   00001C                     	ds	1
  1914   00001D                     ___flmul@grs:
  1915                           	callstack 0
  1916                           
  1917                           ; 4 bytes @ 0x1C
  1918   00001D                     	ds	1
  1919   00001E                     dtoa@w:
  1920                           	callstack 0
  1921   00001E                     utoa@p:
  1922                           	callstack 0
  1923   00001E                     sqrtf@r:
  1924                           	callstack 0
  1925                           
  1926                           ; 4 bytes @ 0x1D
  1927   00001E                     	ds	2
  1928   000020                     dtoa@p:
  1929                           	callstack 0
  1930   000020                     utoa@i:
  1931                           	callstack 0
  1932                           
  1933                           ; 2 bytes @ 0x1F
  1934   000020                     	ds	1
  1935   000021                     ___flmul@bexp:
  1936                           	callstack 0
  1937                           
  1938                           ; 1 bytes @ 0x20
  1939   000021                     	ds	1
  1940   000022                     dtoa@s:
  1941                           	callstack 0
  1942   000022                     ___flmul@prod:
  1943                           	callstack 0
  1944   000022                     sqrtf@ix:
  1945                           	callstack 0
  1946                           
  1947                           ; 4 bytes @ 0x21
  1948   000022                     	ds	1
  1949   000023                     dtoa@i:
  1950                           	callstack 0
  1951                           
  1952                           ; 2 bytes @ 0x22
  1953   000023                     	ds	3
  1954   000026                     ___flmul@temp:
  1955                           	callstack 0
  1956                           
  1957                           ; 2 bytes @ 0x25
  1958   000026                     	ds	2
  1959   000028                     ?___fldiv:
  1960                           	callstack 0
  1961   000028                     ?_scalbnf:
  1962                           	callstack 0
  1963   000028                     ___fldiv@b:
  1964                           	callstack 0
  1965   000028                     scalbnf@x:
  1966                           	callstack 0
  1967                           
  1968                           ; 4 bytes @ 0x27
  1969   000028                     	ds	4
  1970   00002C                     scalbnf@n:
  1971                           	callstack 0
  1972   00002C                     ___fldiv@a:
  1973                           	callstack 0
  1974                           
  1975                           ; 4 bytes @ 0x2B
  1976   00002C                     	ds	2
  1977   00002E                     ??_scalbnf:
  1978                           
  1979                           ; 1 bytes @ 0x2D
  1980   00002E                     	ds	2
  1981   000030                     ??___fldiv:
  1982                           
  1983                           ; 1 bytes @ 0x2F
  1984   000030                     	ds	2
  1985   000032                     scalbnf@u:
  1986                           	callstack 0
  1987                           
  1988                           ; 4 bytes @ 0x31
  1989   000032                     	ds	2
  1990   000034                     ___fldiv@rem:
  1991                           	callstack 0
  1992                           
  1993                           ; 4 bytes @ 0x33
  1994   000034                     	ds	2
  1995   000036                     scalbnf@y:
  1996                           	callstack 0
  1997                           
  1998                           ; 4 bytes @ 0x35
  1999   000036                     	ds	2
  2000   000038                     ___fldiv@sign:
  2001                           	callstack 0
  2002                           
  2003                           ; 1 bytes @ 0x37
  2004   000038                     	ds	1
  2005   000039                     ___fldiv@new_exp:
  2006                           	callstack 0
  2007                           
  2008                           ; 2 bytes @ 0x38
  2009   000039                     	ds	2
  2010   00003B                     ___fldiv@grs:
  2011                           	callstack 0
  2012                           
  2013                           ; 4 bytes @ 0x3A
  2014   00003B                     	ds	4
  2015   00003F                     ___fldiv@bexp:
  2016                           	callstack 0
  2017                           
  2018                           ; 1 bytes @ 0x3E
  2019   00003F                     	ds	1
  2020   000040                     ___fldiv@aexp:
  2021                           	callstack 0
  2022                           
  2023                           ; 1 bytes @ 0x3F
  2024   000040                     	ds	1
  2025   000041                     ?___fladd:
  2026                           	callstack 0
  2027   000041                     ?_floorf:
  2028                           	callstack 0
  2029   000041                     ___fladd@b:
  2030                           	callstack 0
  2031   000041                     floorf@x:
  2032                           	callstack 0
  2033                           
  2034                           ; 4 bytes @ 0x40
  2035   000041                     	ds	4
  2036   000045                     ___fladd@a:
  2037                           	callstack 0
  2038   000045                     ??_floorf:
  2039                           
  2040                           ; 1 bytes @ 0x44
  2041   000045                     	ds	4
  2042   000049                     ??___fladd:
  2043                           
  2044                           ; 1 bytes @ 0x48
  2045   000049                     	ds	2
  2046   00004B                     floorf@m:
  2047                           	callstack 0
  2048                           
  2049                           ; 4 bytes @ 0x4A
  2050   00004B                     	ds	2
  2051   00004D                     ___fladd@signs:
  2052                           	callstack 0
  2053                           
  2054                           ; 1 bytes @ 0x4C
  2055   00004D                     	ds	1
  2056   00004E                     ___fladd@aexp:
  2057                           	callstack 0
  2058                           
  2059                           ; 1 bytes @ 0x4D
  2060   00004E                     	ds	1
  2061   00004F                     ___fladd@bexp:
  2062                           	callstack 0
  2063   00004F                     floorf@e:
  2064                           	callstack 0
  2065                           
  2066                           ; 2 bytes @ 0x4E
  2067   00004F                     	ds	1
  2068   000050                     ___fladd@grs:
  2069                           	callstack 0
  2070                           
  2071                           ; 1 bytes @ 0x4F
  2072   000050                     	ds	1
  2073   000051                     ?_Apply_Filter:
  2074                           	callstack 0
  2075   000051                     ?___flsub:
  2076                           	callstack 0
  2077   000051                     Apply_Filter@new_value:
  2078                           	callstack 0
  2079   000051                     ___flsub@b:
  2080                           	callstack 0
  2081   000051                     floorf@u:
  2082                           	callstack 0
  2083                           
  2084                           ; 4 bytes @ 0x50
  2085   000051                     	ds	4
  2086   000055                     Apply_Filter@samples:
  2087                           	callstack 0
  2088   000055                     ___flsub@a:
  2089                           	callstack 0
  2090                           
  2091                           ; 4 bytes @ 0x54
  2092   000055                     	ds	2
  2093   000057                     ??_Apply_Filter:
  2094                           
  2095                           ; 1 bytes @ 0x56
  2096   000057                     	ds	2
  2097   000059                     ??___flge:
  2098                           
  2099                           ; 1 bytes @ 0x58
  2100   000059                     	ds	4
  2101   00005D                     _Update_Actuators$753:
  2102                           	callstack 0
  2103   00005D                     
  2104                           ; 1 bytes @ 0x5C
  2105   00005D                     	ds	1
  2106                           
  2107 ;;
  2108 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2109 ;;
  2110 ;; *************** function _main *****************
  2111 ;; Defined at:
  2112 ;;		line 107 in file "newmain.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  voltage         4   10[BANK3 ] float 
  2117 ;;  adc_value       2    6[BANK3 ] unsigned int 
  2118 ;;  adc_value       2    4[BANK3 ] unsigned int 
  2119 ;;  i               2   16[BANK3 ] int 
  2120 ;;  i               2   14[BANK3 ] int 
  2121 ;;  cycle_count     2    8[BANK3 ] unsigned int 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2131 ;;      Params:         0       0       0       0       0       0       0       0       0
  2132 ;;      Locals:         0       0       0       0      18       0       0       0       0
  2133 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2134 ;;      Totals:         0       2       0       0      18       0       0       0       0
  2135 ;;Total ram usage:       20 bytes
  2136 ;; Hardware stack levels required when called: 11
  2137 ;; This function calls:
  2138 ;;		_ADC_Init
  2139 ;;		_ADC_Read
  2140 ;;		_Handle_Commands
  2141 ;;		_Handle_Fire_Events
  2142 ;;		_Handle_Shutdown_Events
  2143 ;;		_Handle_Test_Events
  2144 ;;		_Interrupt_Init
  2145 ;;		_Read_Sensors
  2146 ;;		_Send_Data
  2147 ;;		_UART_Init
  2148 ;;		_Update_Actuators
  2149 ;;		___awmod
  2150 ;;		___fladd
  2151 ;;		___fldiv
  2152 ;;		___flmul
  2153 ;;		___flsub
  2154 ;;		___xxtofl
  2155 ;; This function is called by:
  2156 ;;		Startup code after reset
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text0
  2161   004BB0                     __ptext0:
  2162                           	callstack 0
  2163   004BB0                     _main:
  2164                           	callstack 20
  2165   004BB0                     
  2166                           ;newmain.c: 109:     OSCCON = 0x70;
  2167   004BB0  0E70               	movlw	112
  2168   004BB2  6ED3               	movwf	211,c	;volatile
  2169                           
  2170                           ;newmain.c: 110:     TRISB = 0x02;
  2171   004BB4  0E02               	movlw	2
  2172   004BB6  6E93               	movwf	147,c	;volatile
  2173   004BB8                     
  2174                           ;newmain.c: 111:     PORTB = 0x00;
  2175   004BB8  6A81               	clrf	129,c	;volatile
  2176   004BBA                     
  2177                           ;newmain.c: 112:     PORTBbits.RB5 = 1;
  2178   004BBA  8A81               	bsf	129,5,c	;volatile
  2179   004BBC                     
  2180                           ;newmain.c: 113:     PORTBbits.RB0 = 0;
  2181   004BBC  9081               	bcf	129,0,c	;volatile
  2182   004BBE                     
  2183                           ;newmain.c: 115:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  2184   004BBE  0E15               	movlw	21
  2185   004BC0  0100               	movlb	0	; () banked
  2186   004BC2  6FEF               	movwf	(??_main+1)& (0+255),b
  2187   004BC4  0E4B               	movlw	75
  2188   004BC6  6FEE               	movwf	??_main& (0+255),b
  2189   004BC8  0EBE               	movlw	190
  2190   004BCA                     u10747:
  2191   004BCA  2EE8               	decfsz	wreg,f,c
  2192   004BCC  D7FE               	bra	u10747
  2193   004BCE  2FEE               	decfsz	??_main& (0+255),f,b
  2194   004BD0  D7FC               	bra	u10747
  2195   004BD2  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2196   004BD4  D7FA               	bra	u10747
  2197   004BD6  0000               	nop	
  2198   004BD8                     
  2199                           ;newmain.c: 116:     UART_Init();
  2200   004BD8  EC21  F037         	call	_UART_Init	;wreg free
  2201   004BDC                     
  2202                           ;newmain.c: 117:     ADC_Init();
  2203   004BDC  EC2B  F037         	call	_ADC_Init	;wreg free
  2204   004BE0                     
  2205                           ;newmain.c: 118:     Interrupt_Init();
  2206   004BE0  EC34  F037         	call	_Interrupt_Init	;wreg free
  2207   004BE4                     
  2208                           ;newmain.c: 121:     for(int i = 0; i < 50; i++) {
  2209   004BE4  0E00               	movlw	0
  2210   004BE6  0103               	movlb	3	; () banked
  2211   004BE8  6FFD               	movwf	(main@i+1)& (0+255),b
  2212   004BEA  0E00               	movlw	0
  2213   004BEC  6FFC               	movwf	main@i& (0+255),b
  2214   004BEE                     l8076:
  2215                           
  2216                           ; BSR set to: 3
  2217                           ;newmain.c: 122:         unsigned int adc_value = ADC_Read(1);
  2218   004BEE  0E01               	movlw	1
  2219   004BF0  EC99  F036         	call	_ADC_Read
  2220   004BF4  C001  F3F2         	movff	?_ADC_Read,main@adc_value
  2221   004BF8  C002  F3F3         	movff	?_ADC_Read+1,main@adc_value+1
  2222   004BFC                     
  2223                           ;newmain.c: 123:         flame_base_voltage += (adc_value * 5.0) / 1024.0;
  2224   004BFC  C354  F041         	movff	_flame_base_voltage,___fladd@b
  2225   004C00  C355  F042         	movff	_flame_base_voltage+1,___fladd@b+1
  2226   004C04  C356  F043         	movff	_flame_base_voltage+2,___fladd@b+2
  2227   004C08  C357  F044         	movff	_flame_base_voltage+3,___fladd@b+3
  2228   004C0C  0E00               	movlw	0
  2229   004C0E  6E2C               	movwf	___fldiv@a^0,c
  2230   004C10  0E00               	movlw	0
  2231   004C12  6E2D               	movwf	(___fldiv@a+1)^0,c
  2232   004C14  0E80               	movlw	128
  2233   004C16  6E2E               	movwf	(___fldiv@a+2)^0,c
  2234   004C18  0E44               	movlw	68
  2235   004C1A  6E2F               	movwf	(___fldiv@a+3)^0,c
  2236   004C1C  0E00               	movlw	0
  2237   004C1E  6E13               	movwf	___flmul@a^0,c
  2238   004C20  0E00               	movlw	0
  2239   004C22  6E14               	movwf	(___flmul@a+1)^0,c
  2240   004C24  0EA0               	movlw	160
  2241   004C26  6E15               	movwf	(___flmul@a+2)^0,c
  2242   004C28  0E40               	movlw	64
  2243   004C2A  6E16               	movwf	(___flmul@a+3)^0,c
  2244   004C2C  C3F2  F001         	movff	main@adc_value,___xxtofl@val
  2245   004C30  C3F3  F002         	movff	main@adc_value+1,___xxtofl@val+1
  2246   004C34  6A03               	clrf	(___xxtofl@val+2)^0,c
  2247   004C36  6A04               	clrf	(___xxtofl@val+3)^0,c
  2248   004C38  0E00               	movlw	0
  2249   004C3A  EC02  F02B         	call	___xxtofl
  2250   004C3E  C001  F00F         	movff	?___xxtofl,___flmul@b
  2251   004C42  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2252   004C46  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2253   004C4A  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2254   004C4E  EC0E  F020         	call	___flmul	;wreg free
  2255   004C52  C00F  F028         	movff	?___flmul,___fldiv@b
  2256   004C56  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2257   004C5A  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2258   004C5E  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2259   004C62  EC10  F024         	call	___fldiv	;wreg free
  2260   004C66  C028  F045         	movff	?___fldiv,___fladd@a
  2261   004C6A  C029  F046         	movff	?___fldiv+1,___fladd@a+1
  2262   004C6E  C02A  F047         	movff	?___fldiv+2,___fladd@a+2
  2263   004C72  C02B  F048         	movff	?___fldiv+3,___fladd@a+3
  2264   004C76  ECB3  F01D         	call	___fladd	;wreg free
  2265   004C7A  C041  F354         	movff	?___fladd,_flame_base_voltage
  2266   004C7E  C042  F355         	movff	?___fladd+1,_flame_base_voltage+1
  2267   004C82  C043  F356         	movff	?___fladd+2,_flame_base_voltage+2
  2268   004C86  C044  F357         	movff	?___fladd+3,_flame_base_voltage+3
  2269   004C8A                     
  2270                           ;newmain.c: 124:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2271   004C8A  0E02               	movlw	2
  2272   004C8C  0100               	movlb	0	; () banked
  2273   004C8E  6FEF               	movwf	(??_main+1)& (0+255),b
  2274   004C90  0E04               	movlw	4
  2275   004C92  6FEE               	movwf	??_main& (0+255),b
  2276   004C94  0EBA               	movlw	186
  2277   004C96                     u10757:
  2278   004C96  2EE8               	decfsz	wreg,f,c
  2279   004C98  D7FE               	bra	u10757
  2280   004C9A  2FEE               	decfsz	??_main& (0+255),f,b
  2281   004C9C  D7FC               	bra	u10757
  2282   004C9E  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2283   004CA0  D7FA               	bra	u10757
  2284   004CA2  0000               	nop	
  2285   004CA4                     
  2286                           ;newmain.c: 125:     }
  2287   004CA4  0103               	movlb	3	; () banked
  2288   004CA6  4BFC               	infsnz	main@i& (0+255),f,b
  2289   004CA8  2BFD               	incf	(main@i+1)& (0+255),f,b
  2290   004CAA                     
  2291                           ; BSR set to: 3
  2292   004CAA  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  2293   004CAC  EF61  F026         	goto	u10691
  2294   004CB0  51FD               	movf	(main@i+1)& (0+255),w,b
  2295   004CB2  E109               	bnz	u10690
  2296   004CB4  0E32               	movlw	50
  2297   004CB6  5DFC               	subwf	main@i& (0+255),w,b
  2298   004CB8  A0D8               	btfss	status,0,c
  2299   004CBA  EF61  F026         	goto	u10691
  2300   004CBE  EF63  F026         	goto	u10690
  2301   004CC2                     u10691:
  2302   004CC2  EFF7  F025         	goto	l8076
  2303   004CC6                     u10690:
  2304   004CC6                     
  2305                           ; BSR set to: 3
  2306                           ;newmain.c: 126:     flame_base_voltage /= 50.0;
  2307   004CC6  C354  F028         	movff	_flame_base_voltage,___fldiv@b
  2308   004CCA  C355  F029         	movff	_flame_base_voltage+1,___fldiv@b+1
  2309   004CCE  C356  F02A         	movff	_flame_base_voltage+2,___fldiv@b+2
  2310   004CD2  C357  F02B         	movff	_flame_base_voltage+3,___fldiv@b+3
  2311   004CD6  0E00               	movlw	0
  2312   004CD8  6E2C               	movwf	___fldiv@a^0,c
  2313   004CDA  0E00               	movlw	0
  2314   004CDC  6E2D               	movwf	(___fldiv@a+1)^0,c
  2315   004CDE  0E48               	movlw	72
  2316   004CE0  6E2E               	movwf	(___fldiv@a+2)^0,c
  2317   004CE2  0E42               	movlw	66
  2318   004CE4  6E2F               	movwf	(___fldiv@a+3)^0,c
  2319   004CE6  EC10  F024         	call	___fldiv	;wreg free
  2320   004CEA  C028  F354         	movff	?___fldiv,_flame_base_voltage
  2321   004CEE  C029  F355         	movff	?___fldiv+1,_flame_base_voltage+1
  2322   004CF2  C02A  F356         	movff	?___fldiv+2,_flame_base_voltage+2
  2323   004CF6  C02B  F357         	movff	?___fldiv+3,_flame_base_voltage+3
  2324   004CFA                     
  2325                           ;newmain.c: 129:     for(int i = 0; i < 50; i++) {
  2326   004CFA  0E00               	movlw	0
  2327   004CFC  0103               	movlb	3	; () banked
  2328   004CFE  6FFF               	movwf	(main@i_676+1)& (0+255),b
  2329   004D00  0E00               	movlw	0
  2330   004D02  6FFE               	movwf	main@i_676& (0+255),b
  2331   004D04                     l8094:
  2332                           
  2333                           ; BSR set to: 3
  2334                           ;newmain.c: 130:         unsigned int adc_value = ADC_Read(2);
  2335   004D04  0E02               	movlw	2
  2336   004D06  EC99  F036         	call	_ADC_Read
  2337   004D0A  C001  F3F4         	movff	?_ADC_Read,main@adc_value_677
  2338   004D0E  C002  F3F5         	movff	?_ADC_Read+1,main@adc_value_677+1
  2339   004D12                     
  2340                           ;newmain.c: 131:         float voltage = (adc_value * 5.0) / 1024.0;
  2341   004D12  0E00               	movlw	0
  2342   004D14  6E13               	movwf	___flmul@a^0,c
  2343   004D16  0E00               	movlw	0
  2344   004D18  6E14               	movwf	(___flmul@a+1)^0,c
  2345   004D1A  0EA0               	movlw	160
  2346   004D1C  6E15               	movwf	(___flmul@a+2)^0,c
  2347   004D1E  0E40               	movlw	64
  2348   004D20  6E16               	movwf	(___flmul@a+3)^0,c
  2349   004D22  C3F4  F001         	movff	main@adc_value_677,___xxtofl@val
  2350   004D26  C3F5  F002         	movff	main@adc_value_677+1,___xxtofl@val+1
  2351   004D2A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2352   004D2C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2353   004D2E  0E00               	movlw	0
  2354   004D30  EC02  F02B         	call	___xxtofl
  2355   004D34  C001  F00F         	movff	?___xxtofl,___flmul@b
  2356   004D38  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2357   004D3C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2358   004D40  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2359   004D44  EC0E  F020         	call	___flmul	;wreg free
  2360   004D48  C00F  F028         	movff	?___flmul,___fldiv@b
  2361   004D4C  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2362   004D50  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2363   004D54  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2364   004D58  0E00               	movlw	0
  2365   004D5A  6E2C               	movwf	___fldiv@a^0,c
  2366   004D5C  0E00               	movlw	0
  2367   004D5E  6E2D               	movwf	(___fldiv@a+1)^0,c
  2368   004D60  0E80               	movlw	128
  2369   004D62  6E2E               	movwf	(___fldiv@a+2)^0,c
  2370   004D64  0E44               	movlw	68
  2371   004D66  6E2F               	movwf	(___fldiv@a+3)^0,c
  2372   004D68  EC10  F024         	call	___fldiv	;wreg free
  2373   004D6C  C028  F3F8         	movff	?___fldiv,main@voltage
  2374   004D70  C029  F3F9         	movff	?___fldiv+1,main@voltage+1
  2375   004D74  C02A  F3FA         	movff	?___fldiv+2,main@voltage+2
  2376   004D78  C02B  F3FB         	movff	?___fldiv+3,main@voltage+3
  2377   004D7C                     
  2378                           ;newmain.c: 132:         MQ2_Ro += (5.0 - voltage) / voltage;
  2379   004D7C  C3F8  F02C         	movff	main@voltage,___fldiv@a
  2380   004D80  C3F9  F02D         	movff	main@voltage+1,___fldiv@a+1
  2381   004D84  C3FA  F02E         	movff	main@voltage+2,___fldiv@a+2
  2382   004D88  C3FB  F02F         	movff	main@voltage+3,___fldiv@a+3
  2383   004D8C  C3F8  F055         	movff	main@voltage,___flsub@a
  2384   004D90  C3F9  F056         	movff	main@voltage+1,___flsub@a+1
  2385   004D94  C3FA  F057         	movff	main@voltage+2,___flsub@a+2
  2386   004D98  C3FB  F058         	movff	main@voltage+3,___flsub@a+3
  2387   004D9C  0E00               	movlw	0
  2388   004D9E  6E51               	movwf	___flsub@b^0,c
  2389   004DA0  0E00               	movlw	0
  2390   004DA2  6E52               	movwf	(___flsub@b+1)^0,c
  2391   004DA4  0EA0               	movlw	160
  2392   004DA6  6E53               	movwf	(___flsub@b+2)^0,c
  2393   004DA8  0E40               	movlw	64
  2394   004DAA  6E54               	movwf	(___flsub@b+3)^0,c
  2395   004DAC  EC34  F036         	call	___flsub	;wreg free
  2396   004DB0  C051  F028         	movff	?___flsub,___fldiv@b
  2397   004DB4  C052  F029         	movff	?___flsub+1,___fldiv@b+1
  2398   004DB8  C053  F02A         	movff	?___flsub+2,___fldiv@b+2
  2399   004DBC  C054  F02B         	movff	?___flsub+3,___fldiv@b+3
  2400   004DC0  EC10  F024         	call	___fldiv	;wreg free
  2401   004DC4  C028  F3EE         	movff	?___fldiv,_main$1835
  2402   004DC8  C029  F3EF         	movff	?___fldiv+1,_main$1835+1
  2403   004DCC  C02A  F3F0         	movff	?___fldiv+2,_main$1835+2
  2404   004DD0  C02B  F3F1         	movff	?___fldiv+3,_main$1835+3
  2405   004DD4                     
  2406                           ;newmain.c: 132:         MQ2_Ro += (5.0 - voltage) / voltage;
  2407   004DD4  C3D6  F041         	movff	_MQ2_Ro,___fladd@b
  2408   004DD8  C3D7  F042         	movff	_MQ2_Ro+1,___fladd@b+1
  2409   004DDC  C3D8  F043         	movff	_MQ2_Ro+2,___fladd@b+2
  2410   004DE0  C3D9  F044         	movff	_MQ2_Ro+3,___fladd@b+3
  2411   004DE4  C3EE  F045         	movff	_main$1835,___fladd@a
  2412   004DE8  C3EF  F046         	movff	_main$1835+1,___fladd@a+1
  2413   004DEC  C3F0  F047         	movff	_main$1835+2,___fladd@a+2
  2414   004DF0  C3F1  F048         	movff	_main$1835+3,___fladd@a+3
  2415   004DF4  ECB3  F01D         	call	___fladd	;wreg free
  2416   004DF8  C041  F3D6         	movff	?___fladd,_MQ2_Ro
  2417   004DFC  C042  F3D7         	movff	?___fladd+1,_MQ2_Ro+1
  2418   004E00  C043  F3D8         	movff	?___fladd+2,_MQ2_Ro+2
  2419   004E04  C044  F3D9         	movff	?___fladd+3,_MQ2_Ro+3
  2420   004E08                     
  2421                           ;newmain.c: 133:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2422   004E08  0E02               	movlw	2
  2423   004E0A  0100               	movlb	0	; () banked
  2424   004E0C  6FEF               	movwf	(??_main+1)& (0+255),b
  2425   004E0E  0E04               	movlw	4
  2426   004E10  6FEE               	movwf	??_main& (0+255),b
  2427   004E12  0EBA               	movlw	186
  2428   004E14                     u10767:
  2429   004E14  2EE8               	decfsz	wreg,f,c
  2430   004E16  D7FE               	bra	u10767
  2431   004E18  2FEE               	decfsz	??_main& (0+255),f,b
  2432   004E1A  D7FC               	bra	u10767
  2433   004E1C  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2434   004E1E  D7FA               	bra	u10767
  2435   004E20  0000               	nop	
  2436   004E22                     
  2437                           ;newmain.c: 134:     }
  2438   004E22  0103               	movlb	3	; () banked
  2439   004E24  4BFE               	infsnz	main@i_676& (0+255),f,b
  2440   004E26  2BFF               	incf	(main@i_676+1)& (0+255),f,b
  2441   004E28                     
  2442                           ; BSR set to: 3
  2443   004E28  BFFF               	btfsc	(main@i_676+1)& (0+255),7,b
  2444   004E2A  EF20  F027         	goto	u10701
  2445   004E2E  51FF               	movf	(main@i_676+1)& (0+255),w,b
  2446   004E30  E109               	bnz	u10700
  2447   004E32  0E32               	movlw	50
  2448   004E34  5DFE               	subwf	main@i_676& (0+255),w,b
  2449   004E36  A0D8               	btfss	status,0,c
  2450   004E38  EF20  F027         	goto	u10701
  2451   004E3C  EF22  F027         	goto	u10700
  2452   004E40                     u10701:
  2453   004E40  EF82  F026         	goto	l8094
  2454   004E44                     u10700:
  2455   004E44                     
  2456                           ; BSR set to: 3
  2457                           ;newmain.c: 135:     MQ2_Ro /= 50.0;
  2458   004E44  C3D6  F028         	movff	_MQ2_Ro,___fldiv@b
  2459   004E48  C3D7  F029         	movff	_MQ2_Ro+1,___fldiv@b+1
  2460   004E4C  C3D8  F02A         	movff	_MQ2_Ro+2,___fldiv@b+2
  2461   004E50  C3D9  F02B         	movff	_MQ2_Ro+3,___fldiv@b+3
  2462   004E54  0E00               	movlw	0
  2463   004E56  6E2C               	movwf	___fldiv@a^0,c
  2464   004E58  0E00               	movlw	0
  2465   004E5A  6E2D               	movwf	(___fldiv@a+1)^0,c
  2466   004E5C  0E48               	movlw	72
  2467   004E5E  6E2E               	movwf	(___fldiv@a+2)^0,c
  2468   004E60  0E42               	movlw	66
  2469   004E62  6E2F               	movwf	(___fldiv@a+3)^0,c
  2470   004E64  EC10  F024         	call	___fldiv	;wreg free
  2471   004E68  C028  F3D6         	movff	?___fldiv,_MQ2_Ro
  2472   004E6C  C029  F3D7         	movff	?___fldiv+1,_MQ2_Ro+1
  2473   004E70  C02A  F3D8         	movff	?___fldiv+2,_MQ2_Ro+2
  2474   004E74  C02B  F3D9         	movff	?___fldiv+3,_MQ2_Ro+3
  2475   004E78                     
  2476                           ;newmain.c: 137:     unsigned int cycle_count = 0;
  2477   004E78  0E00               	movlw	0
  2478   004E7A  0103               	movlb	3	; () banked
  2479   004E7C  6FF7               	movwf	(main@cycle_count+1)& (0+255),b
  2480   004E7E  0E00               	movlw	0
  2481   004E80  6FF6               	movwf	main@cycle_count& (0+255),b
  2482   004E82                     l8112:
  2483                           
  2484                           ;newmain.c: 141:         system_millis += 125;
  2485   004E82  0E7D               	movlw	125
  2486   004E84  0102               	movlb	2	; () banked
  2487   004E86  27FA               	addwf	_system_millis& (0+255),f,b
  2488   004E88  0E00               	movlw	0
  2489   004E8A  23FB               	addwfc	(_system_millis+1)& (0+255),f,b
  2490   004E8C  23FC               	addwfc	(_system_millis+2)& (0+255),f,b
  2491   004E8E  23FD               	addwfc	(_system_millis+3)& (0+255),f,b
  2492   004E90                     
  2493                           ; BSR set to: 2
  2494                           ;newmain.c: 143:         Handle_Commands();
  2495   004E90  ECAE  F02C         	call	_Handle_Commands	;wreg free
  2496   004E94                     
  2497                           ;newmain.c: 145:         if(!shutdown_system) {
  2498   004E94  0103               	movlb	3	; () banked
  2499   004E96  516B               	movf	_shutdown_system& (0+255),w,b
  2500   004E98  A4D8               	btfss	status,2,c
  2501   004E9A  EF51  F027         	goto	u10711
  2502   004E9E  EF53  F027         	goto	u10710
  2503   004EA2                     u10711:
  2504   004EA2  EF5F  F027         	goto	l8124
  2505   004EA6                     u10710:
  2506   004EA6                     
  2507                           ; BSR set to: 3
  2508                           ;newmain.c: 146:             Read_Sensors();
  2509   004EA6  EC5C  F017         	call	_Read_Sensors	;wreg free
  2510   004EAA                     
  2511                           ;newmain.c: 147:             if(!trigger_test) {
  2512   004EAA  505E               	movf	_trigger_test^0,w,c
  2513   004EAC  A4D8               	btfss	status,2,c
  2514   004EAE  EF5B  F027         	goto	u10721
  2515   004EB2  EF5D  F027         	goto	u10720
  2516   004EB6                     u10721:
  2517   004EB6  EF5F  F027         	goto	l8124
  2518   004EBA                     u10720:
  2519   004EBA                     
  2520                           ;newmain.c: 148:                 Update_Actuators();
  2521   004EBA  EC5E  F02D         	call	_Update_Actuators	;wreg free
  2522   004EBE                     l8124:
  2523                           
  2524                           ;newmain.c: 152:         Handle_Fire_Events();
  2525   004EBE  EC9A  F027         	call	_Handle_Fire_Events	;wreg free
  2526   004EC2                     
  2527                           ;newmain.c: 153:         Handle_Test_Events();
  2528   004EC2  EC0D  F030         	call	_Handle_Test_Events	;wreg free
  2529   004EC6                     
  2530                           ;newmain.c: 154:         Handle_Shutdown_Events();
  2531   004EC6  EC2A  F035         	call	_Handle_Shutdown_Events	;wreg free
  2532   004ECA                     
  2533                           ;newmain.c: 157:         if(cycle_count >= 2) {
  2534   004ECA  0103               	movlb	3	; () banked
  2535   004ECC  51F7               	movf	(main@cycle_count+1)& (0+255),w,b
  2536   004ECE  E109               	bnz	u10730
  2537   004ED0  0E02               	movlw	2
  2538   004ED2  5DF6               	subwf	main@cycle_count& (0+255),w,b
  2539   004ED4  A0D8               	btfss	status,0,c
  2540   004ED6  EF6F  F027         	goto	u10731
  2541   004EDA  EF71  F027         	goto	u10730
  2542   004EDE                     u10731:
  2543   004EDE  EF78  F027         	goto	l8136
  2544   004EE2                     u10730:
  2545   004EE2                     
  2546                           ; BSR set to: 3
  2547                           ;newmain.c: 158:             Send_Data();
  2548   004EE2  EC03  F032         	call	_Send_Data	;wreg free
  2549   004EE6                     
  2550                           ;newmain.c: 159:             cycle_count = 0;
  2551   004EE6  0E00               	movlw	0
  2552   004EE8  0103               	movlb	3	; () banked
  2553   004EEA  6FF7               	movwf	(main@cycle_count+1)& (0+255),b
  2554   004EEC  0E00               	movlw	0
  2555   004EEE  6FF6               	movwf	main@cycle_count& (0+255),b
  2556   004EF0                     l8136:
  2557                           
  2558                           ; BSR set to: 3
  2559                           ;newmain.c: 162:         cycle_count++;
  2560   004EF0  4BF6               	infsnz	main@cycle_count& (0+255),f,b
  2561   004EF2  2BF7               	incf	(main@cycle_count+1)& (0+255),f,b
  2562   004EF4                     
  2563                           ; BSR set to: 3
  2564                           ;newmain.c: 163:         sample_index = (sample_index + 1) % 5;
  2565   004EF4  0E01               	movlw	1
  2566   004EF6  256C               	addwf	_sample_index& (0+255),w,b
  2567   004EF8  6E01               	movwf	___awmod@dividend^0,c
  2568   004EFA  6A02               	clrf	(___awmod@dividend+1)^0,c
  2569   004EFC  0E00               	movlw	0
  2570   004EFE  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2571   004F00  0E00               	movlw	0
  2572   004F02  6E04               	movwf	(___awmod@divisor+1)^0,c
  2573   004F04  0E05               	movlw	5
  2574   004F06  6E03               	movwf	___awmod@divisor^0,c
  2575   004F08  EC48  F033         	call	___awmod	;wreg free
  2576   004F0C  5001               	movf	?___awmod^0,w,c
  2577   004F0E  0103               	movlb	3	; () banked
  2578   004F10  6F6C               	movwf	_sample_index& (0+255),b
  2579   004F12                     
  2580                           ; BSR set to: 3
  2581                           ;newmain.c: 164:         _delay((unsigned long)((125)*(8000000/4000.0)));
  2582   004F12  0E02               	movlw	2
  2583   004F14  0100               	movlb	0	; () banked
  2584   004F16  6FEF               	movwf	(??_main+1)& (0+255),b
  2585   004F18  0E45               	movlw	69
  2586   004F1A  6FEE               	movwf	??_main& (0+255),b
  2587   004F1C  0EA9               	movlw	169
  2588   004F1E                     u10777:
  2589   004F1E  2EE8               	decfsz	wreg,f,c
  2590   004F20  D7FE               	bra	u10777
  2591   004F22  2FEE               	decfsz	??_main& (0+255),f,b
  2592   004F24  D7FC               	bra	u10777
  2593   004F26  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2594   004F28  D7FA               	bra	u10777
  2595   004F2A  D000               	nop2	
  2596   004F2C  EF41  F027         	goto	l8112
  2597   004F30  EF07  F000         	goto	start
  2598   004F34                     __end_of_main:
  2599                           	callstack 0
  2600                           
  2601 ;; *************** function ___awmod *****************
  2602 ;; Defined at:
  2603 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  dividend        2    0[COMRAM] int 
  2606 ;;  divisor         2    2[COMRAM] int 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  sign            1    5[COMRAM] unsigned char 
  2609 ;;  counter         1    4[COMRAM] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  2    0[COMRAM] int 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2619 ;;      Params:         4       0       0       0       0       0       0       0       0
  2620 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2622 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2623 ;;Total ram usage:        6 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 1
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text1
  2634   006690                     __ptext1:
  2635                           	callstack 0
  2636   006690                     ___awmod:
  2637                           	callstack 29
  2638   006690  6A06               	clrf	___awmod@sign^0,c
  2639   006692  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2640   006694  EF50  F033         	goto	u10630
  2641   006698  EF4E  F033         	goto	u10631
  2642   00669C                     u10631:
  2643   00669C  EF56  F033         	goto	l8026
  2644   0066A0                     u10630:
  2645   0066A0  6C01               	negf	___awmod@dividend^0,c
  2646   0066A2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2647   0066A4  B0D8               	btfsc	status,0,c
  2648   0066A6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2649   0066A8  0E01               	movlw	1
  2650   0066AA  6E06               	movwf	___awmod@sign^0,c
  2651   0066AC                     l8026:
  2652   0066AC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2653   0066AE  EF5D  F033         	goto	u10640
  2654   0066B2  EF5B  F033         	goto	u10641
  2655   0066B6                     u10641:
  2656   0066B6  EF61  F033         	goto	l8030
  2657   0066BA                     u10640:
  2658   0066BA  6C03               	negf	___awmod@divisor^0,c
  2659   0066BC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2660   0066BE  B0D8               	btfsc	status,0,c
  2661   0066C0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2662   0066C2                     l8030:
  2663   0066C2  5003               	movf	___awmod@divisor^0,w,c
  2664   0066C4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2665   0066C6  B4D8               	btfsc	status,2,c
  2666   0066C8  EF68  F033         	goto	u10651
  2667   0066CC  EF6A  F033         	goto	u10650
  2668   0066D0                     u10651:
  2669   0066D0  EF8E  F033         	goto	l8046
  2670   0066D4                     u10650:
  2671   0066D4  0E01               	movlw	1
  2672   0066D6  6E05               	movwf	___awmod@counter^0,c
  2673   0066D8  EF72  F033         	goto	l8036
  2674   0066DC                     l8034:
  2675   0066DC  90D8               	bcf	status,0,c
  2676   0066DE  3603               	rlcf	___awmod@divisor^0,f,c
  2677   0066E0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2678   0066E2  2A05               	incf	___awmod@counter^0,f,c
  2679   0066E4                     l8036:
  2680   0066E4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2681   0066E6  EF77  F033         	goto	u10661
  2682   0066EA  EF79  F033         	goto	u10660
  2683   0066EE                     u10661:
  2684   0066EE  EF6E  F033         	goto	l8034
  2685   0066F2                     u10660:
  2686   0066F2                     l8038:
  2687   0066F2  5003               	movf	___awmod@divisor^0,w,c
  2688   0066F4  5C01               	subwf	___awmod@dividend^0,w,c
  2689   0066F6  5004               	movf	(___awmod@divisor+1)^0,w,c
  2690   0066F8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2691   0066FA  A0D8               	btfss	status,0,c
  2692   0066FC  EF82  F033         	goto	u10671
  2693   006700  EF84  F033         	goto	u10670
  2694   006704                     u10671:
  2695   006704  EF88  F033         	goto	l8042
  2696   006708                     u10670:
  2697   006708  5003               	movf	___awmod@divisor^0,w,c
  2698   00670A  5E01               	subwf	___awmod@dividend^0,f,c
  2699   00670C  5004               	movf	(___awmod@divisor+1)^0,w,c
  2700   00670E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2701   006710                     l8042:
  2702   006710  90D8               	bcf	status,0,c
  2703   006712  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2704   006714  3203               	rrcf	___awmod@divisor^0,f,c
  2705   006716  2E05               	decfsz	___awmod@counter^0,f,c
  2706   006718  EF79  F033         	goto	l8038
  2707   00671C                     l8046:
  2708   00671C  5006               	movf	___awmod@sign^0,w,c
  2709   00671E  B4D8               	btfsc	status,2,c
  2710   006720  EF94  F033         	goto	u10681
  2711   006724  EF96  F033         	goto	u10680
  2712   006728                     u10681:
  2713   006728  EF9A  F033         	goto	l8050
  2714   00672C                     u10680:
  2715   00672C  6C01               	negf	___awmod@dividend^0,c
  2716   00672E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2717   006730  B0D8               	btfsc	status,0,c
  2718   006732  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2719   006734                     l8050:
  2720   006734  C001  F001         	movff	___awmod@dividend,?___awmod
  2721   006738  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2722   00673C  0012               	return		;funcret
  2723   00673E                     __end_of___awmod:
  2724                           	callstack 0
  2725                           
  2726 ;; *************** function _Update_Actuators *****************
  2727 ;; Defined at:
  2728 ;;		line 383 in file "newmain.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2742 ;;      Params:         0       0       0       0       0       0       0       0       0
  2743 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2744 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2745 ;;      Totals:         1       4       0       0       0       0       0       0       0
  2746 ;;Total ram usage:        5 bytes
  2747 ;; Hardware stack levels used: 1
  2748 ;; Hardware stack levels required when called: 2
  2749 ;; This function calls:
  2750 ;;		___flge
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text2
  2757   005ABC                     __ptext2:
  2758                           	callstack 0
  2759   005ABC                     _Update_Actuators:
  2760                           	callstack 28
  2761   005ABC                     
  2762                           ;newmain.c: 385:     fire_alarm = flame_detected ||
  2763   005ABC  0E01               	movlw	1
  2764   005ABE  6E5D               	movwf	_Update_Actuators$753^0,c
  2765   005AC0  0103               	movlb	3	; () banked
  2766   005AC2  5171               	movf	_flame_detected& (0+255),w,b
  2767   005AC4  A4D8               	btfss	status,2,c
  2768   005AC6  EF67  F02D         	goto	u10381
  2769   005ACA  EF69  F02D         	goto	u10380
  2770   005ACE                     u10381:
  2771   005ACE  EF9F  F02D         	goto	l241
  2772   005AD2                     u10380:
  2773   005AD2                     
  2774                           ; BSR set to: 3
  2775   005AD2  C35C  F060         	movff	_temperature,___flge@ff1
  2776   005AD6  C35D  F061         	movff	_temperature+1,___flge@ff1+1
  2777   005ADA  C35E  F062         	movff	_temperature+2,___flge@ff1+2
  2778   005ADE  C35F  F063         	movff	_temperature+3,___flge@ff1+3
  2779   005AE2  0E00               	movlw	0
  2780   005AE4  0100               	movlb	0	; () banked
  2781   005AE6  6F64               	movwf	___flge@ff2& (0+255),b
  2782   005AE8  0E00               	movlw	0
  2783   005AEA  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2784   005AEC  0E20               	movlw	32
  2785   005AEE  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2786   005AF0  0E42               	movlw	66
  2787   005AF2  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2788   005AF4  EC8A  F02F         	call	___flge	;wreg free
  2789   005AF8  0100               	movlb	0	; () banked
  2790   005AFA  B0D8               	btfsc	status,0,c
  2791   005AFC  EF82  F02D         	goto	u10391
  2792   005B00  EF84  F02D         	goto	u10390
  2793   005B04                     u10391:
  2794   005B04  EF9F  F02D         	goto	l241
  2795   005B08                     u10390:
  2796   005B08                     
  2797                           ; BSR set to: 0
  2798   005B08  C350  F060         	movff	_co_ppm,___flge@ff1
  2799   005B0C  C351  F061         	movff	_co_ppm+1,___flge@ff1+1
  2800   005B10  C352  F062         	movff	_co_ppm+2,___flge@ff1+2
  2801   005B14  C353  F063         	movff	_co_ppm+3,___flge@ff1+3
  2802   005B18  0E00               	movlw	0
  2803   005B1A  6F64               	movwf	___flge@ff2& (0+255),b
  2804   005B1C  0E00               	movlw	0
  2805   005B1E  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2806   005B20  0E48               	movlw	72
  2807   005B22  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2808   005B24  0E42               	movlw	66
  2809   005B26  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2810   005B28  EC8A  F02F         	call	___flge	;wreg free
  2811   005B2C  0100               	movlb	0	; () banked
  2812   005B2E  B0D8               	btfsc	status,0,c
  2813   005B30  EF9C  F02D         	goto	u10401
  2814   005B34  EF9E  F02D         	goto	u10400
  2815   005B38                     u10401:
  2816   005B38  EF9F  F02D         	goto	l241
  2817   005B3C                     u10400:
  2818   005B3C                     
  2819                           ; BSR set to: 0
  2820   005B3C  6A5D               	clrf	_Update_Actuators$753^0,c
  2821   005B3E                     l241:
  2822   005B3E  C05D  F36E         	movff	_Update_Actuators$753,_fire_alarm
  2823   005B42                     
  2824                           ;newmain.c: 390:     if(fire_alarm) {
  2825   005B42  0103               	movlb	3	; () banked
  2826   005B44  516E               	movf	_fire_alarm& (0+255),w,b
  2827   005B46  B4D8               	btfsc	status,2,c
  2828   005B48  EFA8  F02D         	goto	u10411
  2829   005B4C  EFAA  F02D         	goto	u10410
  2830   005B50                     u10411:
  2831   005B50  EFF1  F02D         	goto	l242
  2832   005B54                     u10410:
  2833   005B54                     
  2834                           ; BSR set to: 3
  2835                           ;newmain.c: 391:         PORTBbits.RB0 = 1;
  2836   005B54  8081               	bsf	129,0,c	;volatile
  2837   005B56                     
  2838                           ; BSR set to: 3
  2839                           ;newmain.c: 392:         pump_active = 1;
  2840   005B56  0E01               	movlw	1
  2841   005B58  6F70               	movwf	_pump_active& (0+255),b
  2842   005B5A                     
  2843                           ; BSR set to: 3
  2844                           ;newmain.c: 395:         static unsigned long last_blink = 0;;newmain.c: 396:         if
      +                          (system_millis - last_blink >= 500) {
  2845   005B5A  511C               	movf	Update_Actuators@last_blink& (0+255),w,b
  2846   005B5C  0102               	movlb	2	; () banked
  2847   005B5E  5DFA               	subwf	_system_millis& (0+255),w,b
  2848   005B60  0100               	movlb	0	; () banked
  2849   005B62  6F68               	movwf	??_Update_Actuators& (0+255),b
  2850   005B64  0103               	movlb	3	; () banked
  2851   005B66  511D               	movf	(Update_Actuators@last_blink+1)& (0+255),w,b
  2852   005B68  0102               	movlb	2	; () banked
  2853   005B6A  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  2854   005B6C  0100               	movlb	0	; () banked
  2855   005B6E  6F69               	movwf	(??_Update_Actuators+1)& (0+255),b
  2856   005B70  0103               	movlb	3	; () banked
  2857   005B72  511E               	movf	(Update_Actuators@last_blink+2)& (0+255),w,b
  2858   005B74  0102               	movlb	2	; () banked
  2859   005B76  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  2860   005B78  0100               	movlb	0	; () banked
  2861   005B7A  6F6A               	movwf	(??_Update_Actuators+2)& (0+255),b
  2862   005B7C  0103               	movlb	3	; () banked
  2863   005B7E  511F               	movf	(Update_Actuators@last_blink+3)& (0+255),w,b
  2864   005B80  0102               	movlb	2	; () banked
  2865   005B82  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  2866   005B84  0100               	movlb	0	; () banked
  2867   005B86  6F6B               	movwf	(??_Update_Actuators+3)& (0+255),b
  2868   005B88  516B               	movf	(??_Update_Actuators+3)& (0+255),w,b
  2869   005B8A  116A               	iorwf	(??_Update_Actuators+2)& (0+255),w,b
  2870   005B8C  E10B               	bnz	u10420
  2871   005B8E  0EF4               	movlw	244
  2872   005B90  5D68               	subwf	??_Update_Actuators& (0+255),w,b
  2873   005B92  0E01               	movlw	1
  2874   005B94  5969               	subwfb	(??_Update_Actuators+1)& (0+255),w,b
  2875   005B96  A0D8               	btfss	status,0,c
  2876   005B98  EFD0  F02D         	goto	u10421
  2877   005B9C  EFD2  F02D         	goto	u10420
  2878   005BA0                     u10421:
  2879   005BA0  EFEC  F02D         	goto	l7928
  2880   005BA4                     u10420:
  2881   005BA4                     
  2882                           ; BSR set to: 0
  2883                           ;newmain.c: 397:             PORTBbits.RB5 = !PORTBbits.RB5;
  2884   005BA4  AA81               	btfss	129,5,c	;volatile
  2885   005BA6  EFD7  F02D         	goto	u10431
  2886   005BAA  EFDB  F02D         	goto	u10430
  2887   005BAE                     u10431:
  2888   005BAE  6B68               	clrf	??_Update_Actuators& (0+255),b
  2889   005BB0  2B68               	incf	??_Update_Actuators& (0+255),f,b
  2890   005BB2  EFDD  F02D         	goto	u10448
  2891   005BB6                     u10430:
  2892   005BB6  0100               	movlb	0	; () banked
  2893   005BB8  6B68               	clrf	??_Update_Actuators& (0+255),b
  2894   005BBA                     u10448:
  2895   005BBA  3B68               	swapf	??_Update_Actuators& (0+255),f,b
  2896   005BBC  4768               	rlncf	??_Update_Actuators& (0+255),f,b
  2897   005BBE  5081               	movf	129,w,c	;volatile
  2898   005BC0  1968               	xorwf	??_Update_Actuators& (0+255),w,b
  2899   005BC2  0BDF               	andlw	-33
  2900   005BC4  1968               	xorwf	??_Update_Actuators& (0+255),w,b
  2901   005BC6  6E81               	movwf	129,c	;volatile
  2902   005BC8                     
  2903                           ; BSR set to: 0
  2904                           ;newmain.c: 398:             last_blink = system_millis;
  2905   005BC8  C2FA  F31C         	movff	_system_millis,Update_Actuators@last_blink
  2906   005BCC  C2FB  F31D         	movff	_system_millis+1,Update_Actuators@last_blink+1
  2907   005BD0  C2FC  F31E         	movff	_system_millis+2,Update_Actuators@last_blink+2
  2908   005BD4  C2FD  F31F         	movff	_system_millis+3,Update_Actuators@last_blink+3
  2909   005BD8                     l7928:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;newmain.c: 400:         alarm_active = 1;
  2913   005BD8  0E01               	movlw	1
  2914   005BDA  0103               	movlb	3	; () banked
  2915   005BDC  6F6F               	movwf	_alarm_active& (0+255),b
  2916                           
  2917                           ;newmain.c: 401:     } else {
  2918   005BDE  EFF5  F02D         	goto	l247
  2919   005BE2                     l242:
  2920                           
  2921                           ; BSR set to: 3
  2922                           ;newmain.c: 402:         PORTBbits.RB0 = 0;
  2923   005BE2  9081               	bcf	129,0,c	;volatile
  2924                           
  2925                           ;newmain.c: 403:         pump_active = 0;
  2926   005BE4  6B70               	clrf	_pump_active& (0+255),b
  2927                           
  2928                           ;newmain.c: 404:         PORTBbits.RB5 = 1;
  2929   005BE6  8A81               	bsf	129,5,c	;volatile
  2930                           
  2931                           ;newmain.c: 405:         alarm_active = 0;
  2932   005BE8  6B6F               	clrf	_alarm_active& (0+255),b
  2933   005BEA                     l247:
  2934                           
  2935                           ; BSR set to: 3
  2936   005BEA  0012               	return		;funcret
  2937   005BEC                     __end_of_Update_Actuators:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _UART_Init *****************
  2941 ;; Defined at:
  2942 ;;		line 448 in file "newmain.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2956 ;;      Params:         0       0       0       0       0       0       0       0       0
  2957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2960 ;;Total ram usage:        0 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 1
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_main
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text3
  2971   006E42                     __ptext3:
  2972                           	callstack 0
  2973   006E42                     _UART_Init:
  2974                           	callstack 29
  2975   006E42                     
  2976                           ;newmain.c: 449:     TRISC6 = 0;
  2977   006E42  9C94               	bcf	3988,6,c	;volatile
  2978                           
  2979                           ;newmain.c: 450:     TRISC7 = 1;
  2980   006E44  8E94               	bsf	3988,7,c	;volatile
  2981   006E46                     
  2982                           ;newmain.c: 451:     SPBRG = 51;
  2983   006E46  0E33               	movlw	51
  2984   006E48  6EAF               	movwf	175,c	;volatile
  2985   006E4A                     
  2986                           ;newmain.c: 452:     TXSTAbits.BRGH = 1;
  2987   006E4A  84AC               	bsf	172,2,c	;volatile
  2988   006E4C                     
  2989                           ;newmain.c: 453:     TXSTAbits.SYNC = 0;
  2990   006E4C  98AC               	bcf	172,4,c	;volatile
  2991   006E4E                     
  2992                           ;newmain.c: 454:     TXSTAbits.TXEN = 1;
  2993   006E4E  8AAC               	bsf	172,5,c	;volatile
  2994   006E50                     
  2995                           ;newmain.c: 455:     RCSTAbits.SPEN = 1;
  2996   006E50  8EAB               	bsf	171,7,c	;volatile
  2997   006E52                     
  2998                           ;newmain.c: 456:     RCSTAbits.CREN = 1;
  2999   006E52  88AB               	bsf	171,4,c	;volatile
  3000   006E54  0012               	return		;funcret
  3001   006E56                     __end_of_UART_Init:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _Send_Data *****************
  3005 ;; Defined at:
  3006 ;;		line 409 in file "newmain.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  i               2  200[BANK1 ] int 
  3011 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3021 ;;      Params:         0       0       0       0       0       0       0       0       0
  3022 ;;      Locals:         0       0     202       0       0       0       0       0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3024 ;;      Totals:         0       0     202       0       0       0       0       0       0
  3025 ;;Total ram usage:      202 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 9
  3028 ;; This function calls:
  3029 ;;		_sprintf
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text4
  3036   006406                     __ptext4:
  3037                           	callstack 0
  3038   006406                     _Send_Data:
  3039                           	callstack 21
  3040   006406                     
  3041                           ;newmain.c: 410:     char buffer[200];;newmain.c: 411:     sprintf(buffer,
  3042   006406  0E00               	movlw	low Send_Data@buffer
  3043   006408  0100               	movlb	0	; () banked
  3044   00640A  6FB0               	movwf	sprintf@s& (0+255),b
  3045   00640C  0E01               	movlw	high Send_Data@buffer
  3046   00640E  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3047   006410  0ED1               	movlw	low STR_17
  3048   006412  6FB2               	movwf	sprintf@fmt& (0+255),b
  3049   006414  0E7E               	movlw	high STR_17
  3050   006416  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3051   006418  C35C  F0B4         	movff	_temperature,?_sprintf+4
  3052   00641C  C35D  F0B5         	movff	_temperature+1,?_sprintf+5
  3053   006420  C35E  F0B6         	movff	_temperature+2,?_sprintf+6
  3054   006424  C35F  F0B7         	movff	_temperature+3,?_sprintf+7
  3055   006428  C371  F0B8         	movff	_flame_detected,?_sprintf+8
  3056   00642C  6BB9               	clrf	(?_sprintf+9)& (0+255),b
  3057   00642E  C358  F0BA         	movff	_flame_intensity,?_sprintf+10
  3058   006432  C359  F0BB         	movff	_flame_intensity+1,?_sprintf+11
  3059   006436  C35A  F0BC         	movff	_flame_intensity+2,?_sprintf+12
  3060   00643A  C35B  F0BD         	movff	_flame_intensity+3,?_sprintf+13
  3061   00643E  C350  F0BE         	movff	_co_ppm,?_sprintf+14
  3062   006442  C351  F0BF         	movff	_co_ppm+1,?_sprintf+15
  3063   006446  C352  F0C0         	movff	_co_ppm+2,?_sprintf+16
  3064   00644A  C353  F0C1         	movff	_co_ppm+3,?_sprintf+17
  3065   00644E  C34C  F0C2         	movff	_flow_rate,?_sprintf+18
  3066   006452  C34D  F0C3         	movff	_flow_rate+1,?_sprintf+19
  3067   006456  C34E  F0C4         	movff	_flow_rate+2,?_sprintf+20
  3068   00645A  C34F  F0C5         	movff	_flow_rate+3,?_sprintf+21
  3069   00645E  C348  F0C6         	movff	_total_flow,?_sprintf+22
  3070   006462  C349  F0C7         	movff	_total_flow+1,?_sprintf+23
  3071   006466  C34A  F0C8         	movff	_total_flow+2,?_sprintf+24
  3072   00646A  C34B  F0C9         	movff	_total_flow+3,?_sprintf+25
  3073   00646E  C370  F0CA         	movff	_pump_active,?_sprintf+26
  3074   006472  6BCB               	clrf	(?_sprintf+27)& (0+255),b
  3075   006474  C36F  F0CC         	movff	_alarm_active,?_sprintf+28
  3076   006478  6BCD               	clrf	(?_sprintf+29)& (0+255),b
  3077   00647A  C36E  F0CE         	movff	_fire_alarm,?_sprintf+30
  3078   00647E  6BCF               	clrf	(?_sprintf+31)& (0+255),b
  3079   006480  C05E  F0D0         	movff	_trigger_test,?_sprintf+32
  3080   006484  6BD1               	clrf	(?_sprintf+33)& (0+255),b
  3081   006486  C36B  F0D2         	movff	_shutdown_system,?_sprintf+34
  3082   00648A  6BD3               	clrf	(?_sprintf+35)& (0+255),b
  3083   00648C  EC57  F036         	call	_sprintf	;wreg free
  3084   006490                     l250:
  3085   006490  A2AC               	btfss	172,1,c	;volatile
  3086   006492  EF4D  F032         	goto	u10601
  3087   006496  EF4F  F032         	goto	u10600
  3088   00649A                     u10601:
  3089   00649A  EF48  F032         	goto	l250
  3090   00649E                     u10600:
  3091   00649E                     
  3092                           ;newmain.c: 417:     for(int i = 0; buffer[i]; i++) {
  3093   00649E  0E00               	movlw	0
  3094   0064A0  0101               	movlb	1	; () banked
  3095   0064A2  6FC9               	movwf	(Send_Data@i+1)& (0+255),b
  3096   0064A4  0E00               	movlw	0
  3097   0064A6  6FC8               	movwf	Send_Data@i& (0+255),b
  3098   0064A8  EF68  F032         	goto	l8016
  3099   0064AC                     l8012:
  3100                           
  3101                           ; BSR set to: 1
  3102                           ;newmain.c: 418:         TXREG = buffer[i];
  3103   0064AC  0E00               	movlw	low Send_Data@buffer
  3104   0064AE  25C8               	addwf	Send_Data@i& (0+255),w,b
  3105   0064B0  6ED9               	movwf	fsr2l,c
  3106   0064B2  0E01               	movlw	high Send_Data@buffer
  3107   0064B4  21C9               	addwfc	(Send_Data@i+1)& (0+255),w,b
  3108   0064B6  6EDA               	movwf	fsr2h,c
  3109   0064B8  50DF               	movf	indf2,w,c
  3110   0064BA  6EAD               	movwf	173,c	;volatile
  3111   0064BC                     l255:
  3112   0064BC  A2AC               	btfss	172,1,c	;volatile
  3113   0064BE  EF63  F032         	goto	u10611
  3114   0064C2  EF65  F032         	goto	u10610
  3115   0064C6                     u10611:
  3116   0064C6  EF5E  F032         	goto	l255
  3117   0064CA                     u10610:
  3118   0064CA                     
  3119                           ;newmain.c: 420:     }
  3120   0064CA  0101               	movlb	1	; () banked
  3121   0064CC  4BC8               	infsnz	Send_Data@i& (0+255),f,b
  3122   0064CE  2BC9               	incf	(Send_Data@i+1)& (0+255),f,b
  3123   0064D0                     l8016:
  3124                           
  3125                           ; BSR set to: 1
  3126   0064D0  0E00               	movlw	low Send_Data@buffer
  3127   0064D2  25C8               	addwf	Send_Data@i& (0+255),w,b
  3128   0064D4  6ED9               	movwf	fsr2l,c
  3129   0064D6  0E01               	movlw	high Send_Data@buffer
  3130   0064D8  21C9               	addwfc	(Send_Data@i+1)& (0+255),w,b
  3131   0064DA  6EDA               	movwf	fsr2h,c
  3132   0064DC  50DF               	movf	indf2,w,c
  3133   0064DE  A4D8               	btfss	status,2,c
  3134   0064E0  EF74  F032         	goto	u10621
  3135   0064E4  EF76  F032         	goto	u10620
  3136   0064E8                     u10621:
  3137   0064E8  EF56  F032         	goto	l8012
  3138   0064EC                     u10620:
  3139   0064EC                     
  3140                           ; BSR set to: 1
  3141   0064EC  0012               	return		;funcret
  3142   0064EE                     __end_of_Send_Data:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function _Read_Sensors *****************
  3146 ;; Defined at:
  3147 ;;		line 307 in file "newmain.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  pulses_diff     2   69[BANK0 ] unsigned int 
  3152 ;;  current_puls    2   67[BANK0 ] unsigned int 
  3153 ;;  raw_co          4   75[BANK0 ] float 
  3154 ;;  Rs              4   71[BANK0 ] float 
  3155 ;;  rs_ro_ratio     4   63[BANK0 ] float 
  3156 ;;  mq2_voltage     4   59[BANK0 ] float 
  3157 ;;  temp_factor     4   37[BANK0 ] float 
  3158 ;;  flame_voltag    4   33[BANK0 ] float 
  3159 ;;  raw_temp        4   29[BANK0 ] float 
  3160 ;;  mq2_adc         2   57[BANK0 ] unsigned int 
  3161 ;;  flame_adc       2   55[BANK0 ] unsigned int 
  3162 ;;  temp_adc        2   53[BANK0 ] unsigned int 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0
  3173 ;;      Locals:         0      50       0       0       0       0       0       0       0
  3174 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3175 ;;      Totals:         0      54       0       0       0       0       0       0       0
  3176 ;;Total ram usage:       54 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; Hardware stack levels required when called: 4
  3179 ;; This function calls:
  3180 ;;		_ADC_Read
  3181 ;;		_Apply_Filter
  3182 ;;		___fladd
  3183 ;;		___fldiv
  3184 ;;		___flge
  3185 ;;		___flmul
  3186 ;;		___flsub
  3187 ;;		___xxtofl
  3188 ;;		_powf
  3189 ;; This function is called by:
  3190 ;;		_main
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text5
  3195   002EB8                     __ptext5:
  3196                           	callstack 0
  3197   002EB8                     _Read_Sensors:
  3198                           	callstack 26
  3199   002EB8                     
  3200                           ;newmain.c: 309:     unsigned int temp_adc = ADC_Read(0);
  3201   002EB8  0E00               	movlw	0
  3202   002EBA  EC99  F036         	call	_ADC_Read
  3203   002EBE  C001  F095         	movff	?_ADC_Read,Read_Sensors@temp_adc
  3204   002EC2  C002  F096         	movff	?_ADC_Read+1,Read_Sensors@temp_adc+1
  3205   002EC6                     
  3206                           ;newmain.c: 310:     float raw_temp = (temp_adc * 5.0 / 1024.0) / 0.01;
  3207   002EC6  0E00               	movlw	0
  3208   002EC8  6E2C               	movwf	___fldiv@a^0,c
  3209   002ECA  0E00               	movlw	0
  3210   002ECC  6E2D               	movwf	(___fldiv@a+1)^0,c
  3211   002ECE  0E80               	movlw	128
  3212   002ED0  6E2E               	movwf	(___fldiv@a+2)^0,c
  3213   002ED2  0E44               	movlw	68
  3214   002ED4  6E2F               	movwf	(___fldiv@a+3)^0,c
  3215   002ED6  0E00               	movlw	0
  3216   002ED8  6E13               	movwf	___flmul@a^0,c
  3217   002EDA  0E00               	movlw	0
  3218   002EDC  6E14               	movwf	(___flmul@a+1)^0,c
  3219   002EDE  0EA0               	movlw	160
  3220   002EE0  6E15               	movwf	(___flmul@a+2)^0,c
  3221   002EE2  0E40               	movlw	64
  3222   002EE4  6E16               	movwf	(___flmul@a+3)^0,c
  3223   002EE6  C095  F001         	movff	Read_Sensors@temp_adc,___xxtofl@val
  3224   002EEA  C096  F002         	movff	Read_Sensors@temp_adc+1,___xxtofl@val+1
  3225   002EEE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3226   002EF0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3227   002EF2  0E00               	movlw	0
  3228   002EF4  EC02  F02B         	call	___xxtofl
  3229   002EF8  C001  F00F         	movff	?___xxtofl,___flmul@b
  3230   002EFC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3231   002F00  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3232   002F04  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3233   002F08  EC0E  F020         	call	___flmul	;wreg free
  3234   002F0C  C00F  F028         	movff	?___flmul,___fldiv@b
  3235   002F10  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3236   002F14  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3237   002F18  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3238   002F1C  EC10  F024         	call	___fldiv	;wreg free
  3239   002F20  C028  F089         	movff	?___fldiv,_Read_Sensors$1836
  3240   002F24  C029  F08A         	movff	?___fldiv+1,_Read_Sensors$1836+1
  3241   002F28  C02A  F08B         	movff	?___fldiv+2,_Read_Sensors$1836+2
  3242   002F2C  C02B  F08C         	movff	?___fldiv+3,_Read_Sensors$1836+3
  3243   002F30                     
  3244                           ;newmain.c: 310:     float raw_temp = (temp_adc * 5.0 / 1024.0) / 0.01;
  3245   002F30  C089  F028         	movff	_Read_Sensors$1836,___fldiv@b
  3246   002F34  C08A  F029         	movff	_Read_Sensors$1836+1,___fldiv@b+1
  3247   002F38  C08B  F02A         	movff	_Read_Sensors$1836+2,___fldiv@b+2
  3248   002F3C  C08C  F02B         	movff	_Read_Sensors$1836+3,___fldiv@b+3
  3249   002F40  0E0A               	movlw	10
  3250   002F42  6E2C               	movwf	___fldiv@a^0,c
  3251   002F44  0ED7               	movlw	215
  3252   002F46  6E2D               	movwf	(___fldiv@a+1)^0,c
  3253   002F48  0E23               	movlw	35
  3254   002F4A  6E2E               	movwf	(___fldiv@a+2)^0,c
  3255   002F4C  0E3C               	movlw	60
  3256   002F4E  6E2F               	movwf	(___fldiv@a+3)^0,c
  3257   002F50  EC10  F024         	call	___fldiv	;wreg free
  3258   002F54  C028  F07D         	movff	?___fldiv,Read_Sensors@raw_temp
  3259   002F58  C029  F07E         	movff	?___fldiv+1,Read_Sensors@raw_temp+1
  3260   002F5C  C02A  F07F         	movff	?___fldiv+2,Read_Sensors@raw_temp+2
  3261   002F60  C02B  F080         	movff	?___fldiv+3,Read_Sensors@raw_temp+3
  3262   002F64                     
  3263                           ;newmain.c: 311:     temperature = Apply_Filter(raw_temp, temp_samples);
  3264   002F64  C07D  F051         	movff	Read_Sensors@raw_temp,Apply_Filter@new_value
  3265   002F68  C07E  F052         	movff	Read_Sensors@raw_temp+1,Apply_Filter@new_value+1
  3266   002F6C  C07F  F053         	movff	Read_Sensors@raw_temp+2,Apply_Filter@new_value+2
  3267   002F70  C080  F054         	movff	Read_Sensors@raw_temp+3,Apply_Filter@new_value+3
  3268   002F74  0EDA               	movlw	low _temp_samples
  3269   002F76  6E55               	movwf	Apply_Filter@samples^0,c
  3270   002F78  0E03               	movlw	high _temp_samples
  3271   002F7A  6E56               	movwf	(Apply_Filter@samples+1)^0,c
  3272   002F7C  EC77  F032         	call	_Apply_Filter	;wreg free
  3273   002F80  C051  F35C         	movff	?_Apply_Filter,_temperature
  3274   002F84  C052  F35D         	movff	?_Apply_Filter+1,_temperature+1
  3275   002F88  C053  F35E         	movff	?_Apply_Filter+2,_temperature+2
  3276   002F8C  C054  F35F         	movff	?_Apply_Filter+3,_temperature+3
  3277   002F90                     
  3278                           ;newmain.c: 314:     unsigned int flame_adc = ADC_Read(1);
  3279   002F90  0E01               	movlw	1
  3280   002F92  EC99  F036         	call	_ADC_Read
  3281   002F96  C001  F097         	movff	?_ADC_Read,Read_Sensors@flame_adc
  3282   002F9A  C002  F098         	movff	?_ADC_Read+1,Read_Sensors@flame_adc+1
  3283   002F9E                     
  3284                           ;newmain.c: 315:     float flame_voltage = (flame_adc * 5.0) / 1024.0;
  3285   002F9E  0E00               	movlw	0
  3286   002FA0  6E13               	movwf	___flmul@a^0,c
  3287   002FA2  0E00               	movlw	0
  3288   002FA4  6E14               	movwf	(___flmul@a+1)^0,c
  3289   002FA6  0EA0               	movlw	160
  3290   002FA8  6E15               	movwf	(___flmul@a+2)^0,c
  3291   002FAA  0E40               	movlw	64
  3292   002FAC  6E16               	movwf	(___flmul@a+3)^0,c
  3293   002FAE  C097  F001         	movff	Read_Sensors@flame_adc,___xxtofl@val
  3294   002FB2  C098  F002         	movff	Read_Sensors@flame_adc+1,___xxtofl@val+1
  3295   002FB6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3296   002FB8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3297   002FBA  0E00               	movlw	0
  3298   002FBC  EC02  F02B         	call	___xxtofl
  3299   002FC0  C001  F00F         	movff	?___xxtofl,___flmul@b
  3300   002FC4  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3301   002FC8  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3302   002FCC  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3303   002FD0  EC0E  F020         	call	___flmul	;wreg free
  3304   002FD4  C00F  F028         	movff	?___flmul,___fldiv@b
  3305   002FD8  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3306   002FDC  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3307   002FE0  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3308   002FE4  0E00               	movlw	0
  3309   002FE6  6E2C               	movwf	___fldiv@a^0,c
  3310   002FE8  0E00               	movlw	0
  3311   002FEA  6E2D               	movwf	(___fldiv@a+1)^0,c
  3312   002FEC  0E80               	movlw	128
  3313   002FEE  6E2E               	movwf	(___fldiv@a+2)^0,c
  3314   002FF0  0E44               	movlw	68
  3315   002FF2  6E2F               	movwf	(___fldiv@a+3)^0,c
  3316   002FF4  EC10  F024         	call	___fldiv	;wreg free
  3317   002FF8  C028  F081         	movff	?___fldiv,Read_Sensors@flame_voltage
  3318   002FFC  C029  F082         	movff	?___fldiv+1,Read_Sensors@flame_voltage+1
  3319   003000  C02A  F083         	movff	?___fldiv+2,Read_Sensors@flame_voltage+2
  3320   003004  C02B  F084         	movff	?___fldiv+3,Read_Sensors@flame_voltage+3
  3321   003008                     
  3322                           ;newmain.c: 316:     flame_intensity = (flame_base_voltage - flame_voltage) * 100.0 / fl
      +                          ame_base_voltage;
  3323   003008  0E00               	movlw	0
  3324   00300A  6E13               	movwf	___flmul@a^0,c
  3325   00300C  0E00               	movlw	0
  3326   00300E  6E14               	movwf	(___flmul@a+1)^0,c
  3327   003010  0EC8               	movlw	200
  3328   003012  6E15               	movwf	(___flmul@a+2)^0,c
  3329   003014  0E42               	movlw	66
  3330   003016  6E16               	movwf	(___flmul@a+3)^0,c
  3331   003018  C081  F055         	movff	Read_Sensors@flame_voltage,___flsub@a
  3332   00301C  C082  F056         	movff	Read_Sensors@flame_voltage+1,___flsub@a+1
  3333   003020  C083  F057         	movff	Read_Sensors@flame_voltage+2,___flsub@a+2
  3334   003024  C084  F058         	movff	Read_Sensors@flame_voltage+3,___flsub@a+3
  3335   003028  C354  F051         	movff	_flame_base_voltage,___flsub@b
  3336   00302C  C355  F052         	movff	_flame_base_voltage+1,___flsub@b+1
  3337   003030  C356  F053         	movff	_flame_base_voltage+2,___flsub@b+2
  3338   003034  C357  F054         	movff	_flame_base_voltage+3,___flsub@b+3
  3339   003038  EC34  F036         	call	___flsub	;wreg free
  3340   00303C  C051  F00F         	movff	?___flsub,___flmul@b
  3341   003040  C052  F010         	movff	?___flsub+1,___flmul@b+1
  3342   003044  C053  F011         	movff	?___flsub+2,___flmul@b+2
  3343   003048  C054  F012         	movff	?___flsub+3,___flmul@b+3
  3344   00304C  EC0E  F020         	call	___flmul	;wreg free
  3345   003050  C00F  F028         	movff	?___flmul,___fldiv@b
  3346   003054  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3347   003058  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3348   00305C  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3349   003060  C354  F02C         	movff	_flame_base_voltage,___fldiv@a
  3350   003064  C355  F02D         	movff	_flame_base_voltage+1,___fldiv@a+1
  3351   003068  C356  F02E         	movff	_flame_base_voltage+2,___fldiv@a+2
  3352   00306C  C357  F02F         	movff	_flame_base_voltage+3,___fldiv@a+3
  3353   003070  EC10  F024         	call	___fldiv	;wreg free
  3354   003074  C028  F358         	movff	?___fldiv,_flame_intensity
  3355   003078  C029  F359         	movff	?___fldiv+1,_flame_intensity+1
  3356   00307C  C02A  F35A         	movff	?___fldiv+2,_flame_intensity+2
  3357   003080  C02B  F35B         	movff	?___fldiv+3,_flame_intensity+3
  3358   003084                     
  3359                           ;newmain.c: 318:     if(flame_intensity < 0) flame_intensity = 0;
  3360   003084  0103               	movlb	3	; () banked
  3361   003086  BF5B               	btfsc	(_flame_intensity+3)& (0+255),7,b
  3362   003088  EF4A  F018         	goto	u10270
  3363   00308C  EF48  F018         	goto	u10271
  3364   003090                     u10271:
  3365   003090  EF52  F018         	goto	l7846
  3366   003094                     u10270:
  3367   003094                     
  3368                           ; BSR set to: 3
  3369   003094  0E00               	movlw	0
  3370   003096  6F58               	movwf	_flame_intensity& (0+255),b
  3371   003098  0E00               	movlw	0
  3372   00309A  6F59               	movwf	(_flame_intensity+1)& (0+255),b
  3373   00309C  0E00               	movlw	0
  3374   00309E  6F5A               	movwf	(_flame_intensity+2)& (0+255),b
  3375   0030A0  0E00               	movlw	0
  3376   0030A2  6F5B               	movwf	(_flame_intensity+3)& (0+255),b
  3377   0030A4                     l7846:
  3378                           
  3379                           ; BSR set to: 3
  3380                           ;newmain.c: 319:     if(flame_intensity > 100) flame_intensity = 100;
  3381   0030A4  0E00               	movlw	0
  3382   0030A6  0100               	movlb	0	; () banked
  3383   0030A8  6F60               	movwf	___flge@ff1& (0+255),b
  3384   0030AA  0E00               	movlw	0
  3385   0030AC  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3386   0030AE  0EC8               	movlw	200
  3387   0030B0  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3388   0030B2  0E42               	movlw	66
  3389   0030B4  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3390   0030B6  C358  F064         	movff	_flame_intensity,___flge@ff2
  3391   0030BA  C359  F065         	movff	_flame_intensity+1,___flge@ff2+1
  3392   0030BE  C35A  F066         	movff	_flame_intensity+2,___flge@ff2+2
  3393   0030C2  C35B  F067         	movff	_flame_intensity+3,___flge@ff2+3
  3394   0030C6  EC8A  F02F         	call	___flge	;wreg free
  3395   0030CA  0100               	movlb	0	; () banked
  3396   0030CC  B0D8               	btfsc	status,0,c
  3397   0030CE  EF6B  F018         	goto	u10281
  3398   0030D2  EF6D  F018         	goto	u10280
  3399   0030D6                     u10281:
  3400   0030D6  EF76  F018         	goto	l216
  3401   0030DA                     u10280:
  3402   0030DA                     
  3403                           ; BSR set to: 0
  3404   0030DA  0E00               	movlw	0
  3405   0030DC  0103               	movlb	3	; () banked
  3406   0030DE  6F58               	movwf	_flame_intensity& (0+255),b
  3407   0030E0  0E00               	movlw	0
  3408   0030E2  6F59               	movwf	(_flame_intensity+1)& (0+255),b
  3409   0030E4  0EC8               	movlw	200
  3410   0030E6  6F5A               	movwf	(_flame_intensity+2)& (0+255),b
  3411   0030E8  0E42               	movlw	66
  3412   0030EA  6F5B               	movwf	(_flame_intensity+3)& (0+255),b
  3413   0030EC                     l216:
  3414                           
  3415                           ;newmain.c: 322:     if(!flame_detected && flame_intensity >= 15.0) {
  3416   0030EC  0103               	movlb	3	; () banked
  3417   0030EE  5171               	movf	_flame_detected& (0+255),w,b
  3418   0030F0  A4D8               	btfss	status,2,c
  3419   0030F2  EF7D  F018         	goto	u10291
  3420   0030F6  EF7F  F018         	goto	u10290
  3421   0030FA                     u10291:
  3422   0030FA  EF9F  F018         	goto	l7854
  3423   0030FE                     u10290:
  3424   0030FE                     
  3425                           ; BSR set to: 3
  3426   0030FE  C358  F060         	movff	_flame_intensity,___flge@ff1
  3427   003102  C359  F061         	movff	_flame_intensity+1,___flge@ff1+1
  3428   003106  C35A  F062         	movff	_flame_intensity+2,___flge@ff1+2
  3429   00310A  C35B  F063         	movff	_flame_intensity+3,___flge@ff1+3
  3430   00310E  0E00               	movlw	0
  3431   003110  0100               	movlb	0	; () banked
  3432   003112  6F64               	movwf	___flge@ff2& (0+255),b
  3433   003114  0E00               	movlw	0
  3434   003116  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3435   003118  0E70               	movlw	112
  3436   00311A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3437   00311C  0E41               	movlw	65
  3438   00311E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3439   003120  EC8A  F02F         	call	___flge	;wreg free
  3440   003124  0100               	movlb	0	; () banked
  3441   003126  A0D8               	btfss	status,0,c
  3442   003128  EF98  F018         	goto	u10301
  3443   00312C  EF9A  F018         	goto	u10300
  3444   003130                     u10301:
  3445   003130  EF9F  F018         	goto	l7854
  3446   003134                     u10300:
  3447   003134                     
  3448                           ; BSR set to: 0
  3449                           ;newmain.c: 323:         flame_detected = 1;
  3450   003134  0E01               	movlw	1
  3451   003136  0103               	movlb	3	; () banked
  3452   003138  6F71               	movwf	_flame_detected& (0+255),b
  3453                           
  3454                           ;newmain.c: 324:     } else if(flame_detected && flame_intensity <= (15.0 - 3.0)) {
  3455   00313A  EFC5  F018         	goto	l7860
  3456   00313E                     l7854:
  3457   00313E  0103               	movlb	3	; () banked
  3458   003140  5171               	movf	_flame_detected& (0+255),w,b
  3459   003142  B4D8               	btfsc	status,2,c
  3460   003144  EFA6  F018         	goto	u10311
  3461   003148  EFA8  F018         	goto	u10310
  3462   00314C                     u10311:
  3463   00314C  EFC5  F018         	goto	l7860
  3464   003150                     u10310:
  3465   003150                     
  3466                           ; BSR set to: 3
  3467   003150  0E00               	movlw	0
  3468   003152  0100               	movlb	0	; () banked
  3469   003154  6F60               	movwf	___flge@ff1& (0+255),b
  3470   003156  0E00               	movlw	0
  3471   003158  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3472   00315A  0E40               	movlw	64
  3473   00315C  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3474   00315E  0E41               	movlw	65
  3475   003160  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3476   003162  C358  F064         	movff	_flame_intensity,___flge@ff2
  3477   003166  C359  F065         	movff	_flame_intensity+1,___flge@ff2+1
  3478   00316A  C35A  F066         	movff	_flame_intensity+2,___flge@ff2+2
  3479   00316E  C35B  F067         	movff	_flame_intensity+3,___flge@ff2+3
  3480   003172  EC8A  F02F         	call	___flge	;wreg free
  3481   003176  0100               	movlb	0	; () banked
  3482   003178  A0D8               	btfss	status,0,c
  3483   00317A  EFC1  F018         	goto	u10321
  3484   00317E  EFC3  F018         	goto	u10320
  3485   003182                     u10321:
  3486   003182  EFC5  F018         	goto	l7860
  3487   003186                     u10320:
  3488   003186                     
  3489                           ; BSR set to: 0
  3490                           ;newmain.c: 325:         flame_detected = 0;
  3491   003186  0103               	movlb	3	; () banked
  3492   003188  6B71               	clrf	_flame_detected& (0+255),b
  3493   00318A                     l7860:
  3494                           
  3495                           ;newmain.c: 329:     unsigned int mq2_adc = ADC_Read(2);
  3496   00318A  0E02               	movlw	2
  3497   00318C  EC99  F036         	call	_ADC_Read
  3498   003190  C001  F099         	movff	?_ADC_Read,Read_Sensors@mq2_adc
  3499   003194  C002  F09A         	movff	?_ADC_Read+1,Read_Sensors@mq2_adc+1
  3500   003198                     
  3501                           ;newmain.c: 330:     float mq2_voltage = (mq2_adc * 5.0) / 1024.0;
  3502   003198  0E00               	movlw	0
  3503   00319A  6E13               	movwf	___flmul@a^0,c
  3504   00319C  0E00               	movlw	0
  3505   00319E  6E14               	movwf	(___flmul@a+1)^0,c
  3506   0031A0  0EA0               	movlw	160
  3507   0031A2  6E15               	movwf	(___flmul@a+2)^0,c
  3508   0031A4  0E40               	movlw	64
  3509   0031A6  6E16               	movwf	(___flmul@a+3)^0,c
  3510   0031A8  C099  F001         	movff	Read_Sensors@mq2_adc,___xxtofl@val
  3511   0031AC  C09A  F002         	movff	Read_Sensors@mq2_adc+1,___xxtofl@val+1
  3512   0031B0  6A03               	clrf	(___xxtofl@val+2)^0,c
  3513   0031B2  6A04               	clrf	(___xxtofl@val+3)^0,c
  3514   0031B4  0E00               	movlw	0
  3515   0031B6  EC02  F02B         	call	___xxtofl
  3516   0031BA  C001  F00F         	movff	?___xxtofl,___flmul@b
  3517   0031BE  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3518   0031C2  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3519   0031C6  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3520   0031CA  EC0E  F020         	call	___flmul	;wreg free
  3521   0031CE  C00F  F028         	movff	?___flmul,___fldiv@b
  3522   0031D2  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3523   0031D6  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3524   0031DA  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3525   0031DE  0E00               	movlw	0
  3526   0031E0  6E2C               	movwf	___fldiv@a^0,c
  3527   0031E2  0E00               	movlw	0
  3528   0031E4  6E2D               	movwf	(___fldiv@a+1)^0,c
  3529   0031E6  0E80               	movlw	128
  3530   0031E8  6E2E               	movwf	(___fldiv@a+2)^0,c
  3531   0031EA  0E44               	movlw	68
  3532   0031EC  6E2F               	movwf	(___fldiv@a+3)^0,c
  3533   0031EE  EC10  F024         	call	___fldiv	;wreg free
  3534   0031F2  C028  F09B         	movff	?___fldiv,Read_Sensors@mq2_voltage
  3535   0031F6  C029  F09C         	movff	?___fldiv+1,Read_Sensors@mq2_voltage+1
  3536   0031FA  C02A  F09D         	movff	?___fldiv+2,Read_Sensors@mq2_voltage+2
  3537   0031FE  C02B  F09E         	movff	?___fldiv+3,Read_Sensors@mq2_voltage+3
  3538   003202                     
  3539                           ;newmain.c: 331:     float Rs = (5.0 - mq2_voltage) / mq2_voltage;
  3540   003202  C09B  F055         	movff	Read_Sensors@mq2_voltage,___flsub@a
  3541   003206  C09C  F056         	movff	Read_Sensors@mq2_voltage+1,___flsub@a+1
  3542   00320A  C09D  F057         	movff	Read_Sensors@mq2_voltage+2,___flsub@a+2
  3543   00320E  C09E  F058         	movff	Read_Sensors@mq2_voltage+3,___flsub@a+3
  3544   003212  0E00               	movlw	0
  3545   003214  6E51               	movwf	___flsub@b^0,c
  3546   003216  0E00               	movlw	0
  3547   003218  6E52               	movwf	(___flsub@b+1)^0,c
  3548   00321A  0EA0               	movlw	160
  3549   00321C  6E53               	movwf	(___flsub@b+2)^0,c
  3550   00321E  0E40               	movlw	64
  3551   003220  6E54               	movwf	(___flsub@b+3)^0,c
  3552   003222  EC34  F036         	call	___flsub	;wreg free
  3553   003226  C051  F028         	movff	?___flsub,___fldiv@b
  3554   00322A  C052  F029         	movff	?___flsub+1,___fldiv@b+1
  3555   00322E  C053  F02A         	movff	?___flsub+2,___fldiv@b+2
  3556   003232  C054  F02B         	movff	?___flsub+3,___fldiv@b+3
  3557   003236  C09B  F02C         	movff	Read_Sensors@mq2_voltage,___fldiv@a
  3558   00323A  C09C  F02D         	movff	Read_Sensors@mq2_voltage+1,___fldiv@a+1
  3559   00323E  C09D  F02E         	movff	Read_Sensors@mq2_voltage+2,___fldiv@a+2
  3560   003242  C09E  F02F         	movff	Read_Sensors@mq2_voltage+3,___fldiv@a+3
  3561   003246  EC10  F024         	call	___fldiv	;wreg free
  3562   00324A  C028  F0A7         	movff	?___fldiv,Read_Sensors@Rs
  3563   00324E  C029  F0A8         	movff	?___fldiv+1,Read_Sensors@Rs+1
  3564   003252  C02A  F0A9         	movff	?___fldiv+2,Read_Sensors@Rs+2
  3565   003256  C02B  F0AA         	movff	?___fldiv+3,Read_Sensors@Rs+3
  3566                           
  3567                           ;newmain.c: 334:     float temp_factor = 1.0 + 0.02 * (temperature - 25.0);
  3568   00325A  0E0A               	movlw	10
  3569   00325C  6E13               	movwf	___flmul@a^0,c
  3570   00325E  0ED7               	movlw	215
  3571   003260  6E14               	movwf	(___flmul@a+1)^0,c
  3572   003262  0EA3               	movlw	163
  3573   003264  6E15               	movwf	(___flmul@a+2)^0,c
  3574   003266  0E3C               	movlw	60
  3575   003268  6E16               	movwf	(___flmul@a+3)^0,c
  3576   00326A  0E00               	movlw	0
  3577   00326C  6E45               	movwf	___fladd@a^0,c
  3578   00326E  0E00               	movlw	0
  3579   003270  6E46               	movwf	(___fladd@a+1)^0,c
  3580   003272  0EC8               	movlw	200
  3581   003274  6E47               	movwf	(___fladd@a+2)^0,c
  3582   003276  0EC1               	movlw	193
  3583   003278  6E48               	movwf	(___fladd@a+3)^0,c
  3584   00327A  C35C  F041         	movff	_temperature,___fladd@b
  3585   00327E  C35D  F042         	movff	_temperature+1,___fladd@b+1
  3586   003282  C35E  F043         	movff	_temperature+2,___fladd@b+2
  3587   003286  C35F  F044         	movff	_temperature+3,___fladd@b+3
  3588   00328A  ECB3  F01D         	call	___fladd	;wreg free
  3589   00328E  C041  F00F         	movff	?___fladd,___flmul@b
  3590   003292  C042  F010         	movff	?___fladd+1,___flmul@b+1
  3591   003296  C043  F011         	movff	?___fladd+2,___flmul@b+2
  3592   00329A  C044  F012         	movff	?___fladd+3,___flmul@b+3
  3593   00329E  EC0E  F020         	call	___flmul	;wreg free
  3594   0032A2  C00F  F08D         	movff	?___flmul,_Read_Sensors$1837
  3595   0032A6  C010  F08E         	movff	?___flmul+1,_Read_Sensors$1837+1
  3596   0032AA  C011  F08F         	movff	?___flmul+2,_Read_Sensors$1837+2
  3597   0032AE  C012  F090         	movff	?___flmul+3,_Read_Sensors$1837+3
  3598   0032B2                     
  3599                           ;newmain.c: 334:     float temp_factor = 1.0 + 0.02 * (temperature - 25.0);
  3600   0032B2  C08D  F041         	movff	_Read_Sensors$1837,___fladd@b
  3601   0032B6  C08E  F042         	movff	_Read_Sensors$1837+1,___fladd@b+1
  3602   0032BA  C08F  F043         	movff	_Read_Sensors$1837+2,___fladd@b+2
  3603   0032BE  C090  F044         	movff	_Read_Sensors$1837+3,___fladd@b+3
  3604   0032C2  0E00               	movlw	0
  3605   0032C4  6E45               	movwf	___fladd@a^0,c
  3606   0032C6  0E00               	movlw	0
  3607   0032C8  6E46               	movwf	(___fladd@a+1)^0,c
  3608   0032CA  0E80               	movlw	128
  3609   0032CC  6E47               	movwf	(___fladd@a+2)^0,c
  3610   0032CE  0E3F               	movlw	63
  3611   0032D0  6E48               	movwf	(___fladd@a+3)^0,c
  3612   0032D2  ECB3  F01D         	call	___fladd	;wreg free
  3613   0032D6  C041  F085         	movff	?___fladd,Read_Sensors@temp_factor
  3614   0032DA  C042  F086         	movff	?___fladd+1,Read_Sensors@temp_factor+1
  3615   0032DE  C043  F087         	movff	?___fladd+2,Read_Sensors@temp_factor+2
  3616   0032E2  C044  F088         	movff	?___fladd+3,Read_Sensors@temp_factor+3
  3617   0032E6                     
  3618                           ;newmain.c: 335:     Rs /= temp_factor;
  3619   0032E6  C0A7  F028         	movff	Read_Sensors@Rs,___fldiv@b
  3620   0032EA  C0A8  F029         	movff	Read_Sensors@Rs+1,___fldiv@b+1
  3621   0032EE  C0A9  F02A         	movff	Read_Sensors@Rs+2,___fldiv@b+2
  3622   0032F2  C0AA  F02B         	movff	Read_Sensors@Rs+3,___fldiv@b+3
  3623   0032F6  C085  F02C         	movff	Read_Sensors@temp_factor,___fldiv@a
  3624   0032FA  C086  F02D         	movff	Read_Sensors@temp_factor+1,___fldiv@a+1
  3625   0032FE  C087  F02E         	movff	Read_Sensors@temp_factor+2,___fldiv@a+2
  3626   003302  C088  F02F         	movff	Read_Sensors@temp_factor+3,___fldiv@a+3
  3627   003306  EC10  F024         	call	___fldiv	;wreg free
  3628   00330A  C028  F0A7         	movff	?___fldiv,Read_Sensors@Rs
  3629   00330E  C029  F0A8         	movff	?___fldiv+1,Read_Sensors@Rs+1
  3630   003312  C02A  F0A9         	movff	?___fldiv+2,Read_Sensors@Rs+2
  3631   003316  C02B  F0AA         	movff	?___fldiv+3,Read_Sensors@Rs+3
  3632   00331A                     
  3633                           ;newmain.c: 337:     float rs_ro_ratio = Rs / MQ2_Ro;
  3634   00331A  C0A7  F028         	movff	Read_Sensors@Rs,___fldiv@b
  3635   00331E  C0A8  F029         	movff	Read_Sensors@Rs+1,___fldiv@b+1
  3636   003322  C0A9  F02A         	movff	Read_Sensors@Rs+2,___fldiv@b+2
  3637   003326  C0AA  F02B         	movff	Read_Sensors@Rs+3,___fldiv@b+3
  3638   00332A  C3D6  F02C         	movff	_MQ2_Ro,___fldiv@a
  3639   00332E  C3D7  F02D         	movff	_MQ2_Ro+1,___fldiv@a+1
  3640   003332  C3D8  F02E         	movff	_MQ2_Ro+2,___fldiv@a+2
  3641   003336  C3D9  F02F         	movff	_MQ2_Ro+3,___fldiv@a+3
  3642   00333A  EC10  F024         	call	___fldiv	;wreg free
  3643   00333E  C028  F09F         	movff	?___fldiv,Read_Sensors@rs_ro_ratio
  3644   003342  C029  F0A0         	movff	?___fldiv+1,Read_Sensors@rs_ro_ratio+1
  3645   003346  C02A  F0A1         	movff	?___fldiv+2,Read_Sensors@rs_ro_ratio+2
  3646   00334A  C02B  F0A2         	movff	?___fldiv+3,Read_Sensors@rs_ro_ratio+3
  3647   00334E                     
  3648                           ;newmain.c: 338:     float raw_co = 0.0;
  3649   00334E  0E00               	movlw	0
  3650   003350  0100               	movlb	0	; () banked
  3651   003352  6FAB               	movwf	Read_Sensors@raw_co& (0+255),b
  3652   003354  0E00               	movlw	0
  3653   003356  6FAC               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3654   003358  0E00               	movlw	0
  3655   00335A  6FAD               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3656   00335C  0E00               	movlw	0
  3657   00335E  6FAE               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3658   003360                     
  3659                           ; BSR set to: 0
  3660                           ;newmain.c: 340:     if(rs_ro_ratio > 0.1) {
  3661   003360  0ECD               	movlw	205
  3662   003362  6F60               	movwf	___flge@ff1& (0+255),b
  3663   003364  0ECC               	movlw	204
  3664   003366  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3665   003368  0ECC               	movlw	204
  3666   00336A  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3667   00336C  0E3D               	movlw	61
  3668   00336E  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3669   003370  C09F  F064         	movff	Read_Sensors@rs_ro_ratio,___flge@ff2
  3670   003374  C0A0  F065         	movff	Read_Sensors@rs_ro_ratio+1,___flge@ff2+1
  3671   003378  C0A1  F066         	movff	Read_Sensors@rs_ro_ratio+2,___flge@ff2+2
  3672   00337C  C0A2  F067         	movff	Read_Sensors@rs_ro_ratio+3,___flge@ff2+3
  3673   003380  EC8A  F02F         	call	___flge	;wreg free
  3674   003384  0100               	movlb	0	; () banked
  3675   003386  B0D8               	btfsc	status,0,c
  3676   003388  EFC8  F019         	goto	u10331
  3677   00338C  EFCA  F019         	goto	u10330
  3678   003390                     u10331:
  3679   003390  EFFE  F019         	goto	l7880
  3680   003394                     u10330:
  3681   003394                     
  3682                           ; BSR set to: 0
  3683                           ;newmain.c: 341:         raw_co = 15.0 * powf(rs_ro_ratio,-1.5);
  3684   003394  0E00               	movlw	0
  3685   003396  6F6C               	movwf	powf@y& (0+255),b
  3686   003398  0E00               	movlw	0
  3687   00339A  6F6D               	movwf	(powf@y+1)& (0+255),b
  3688   00339C  0EC0               	movlw	192
  3689   00339E  6F6E               	movwf	(powf@y+2)& (0+255),b
  3690   0033A0  0EBF               	movlw	191
  3691   0033A2  6F6F               	movwf	(powf@y+3)& (0+255),b
  3692   0033A4  C09F  F068         	movff	Read_Sensors@rs_ro_ratio,powf@x
  3693   0033A8  C0A0  F069         	movff	Read_Sensors@rs_ro_ratio+1,powf@x+1
  3694   0033AC  C0A1  F06A         	movff	Read_Sensors@rs_ro_ratio+2,powf@x+2
  3695   0033B0  C0A2  F06B         	movff	Read_Sensors@rs_ro_ratio+3,powf@x+3
  3696   0033B4  EC09  F000         	call	_powf	;wreg free
  3697   0033B8  C068  F091         	movff	?_powf,_Read_Sensors$1838
  3698   0033BC  C069  F092         	movff	?_powf+1,_Read_Sensors$1838+1
  3699   0033C0  C06A  F093         	movff	?_powf+2,_Read_Sensors$1838+2
  3700   0033C4  C06B  F094         	movff	?_powf+3,_Read_Sensors$1838+3
  3701   0033C8                     
  3702                           ;newmain.c: 341:         raw_co = 15.0 * powf(rs_ro_ratio,-1.5);
  3703   0033C8  C091  F00F         	movff	_Read_Sensors$1838,___flmul@b
  3704   0033CC  C092  F010         	movff	_Read_Sensors$1838+1,___flmul@b+1
  3705   0033D0  C093  F011         	movff	_Read_Sensors$1838+2,___flmul@b+2
  3706   0033D4  C094  F012         	movff	_Read_Sensors$1838+3,___flmul@b+3
  3707   0033D8  0E00               	movlw	0
  3708   0033DA  6E13               	movwf	___flmul@a^0,c
  3709   0033DC  0E00               	movlw	0
  3710   0033DE  6E14               	movwf	(___flmul@a+1)^0,c
  3711   0033E0  0E70               	movlw	112
  3712   0033E2  6E15               	movwf	(___flmul@a+2)^0,c
  3713   0033E4  0E41               	movlw	65
  3714   0033E6  6E16               	movwf	(___flmul@a+3)^0,c
  3715   0033E8  EC0E  F020         	call	___flmul	;wreg free
  3716   0033EC  C00F  F0AB         	movff	?___flmul,Read_Sensors@raw_co
  3717   0033F0  C010  F0AC         	movff	?___flmul+1,Read_Sensors@raw_co+1
  3718   0033F4  C011  F0AD         	movff	?___flmul+2,Read_Sensors@raw_co+2
  3719   0033F8  C012  F0AE         	movff	?___flmul+3,Read_Sensors@raw_co+3
  3720   0033FC                     l7880:
  3721                           
  3722                           ;newmain.c: 344:     if(raw_co < 0) raw_co = 0;
  3723   0033FC  0100               	movlb	0	; () banked
  3724   0033FE  BFAE               	btfsc	(Read_Sensors@raw_co+3)& (0+255),7,b
  3725   003400  EF06  F01A         	goto	u10340
  3726   003404  EF04  F01A         	goto	u10341
  3727   003408                     u10341:
  3728   003408  EF0E  F01A         	goto	l7884
  3729   00340C                     u10340:
  3730   00340C                     
  3731                           ; BSR set to: 0
  3732   00340C  0E00               	movlw	0
  3733   00340E  6FAB               	movwf	Read_Sensors@raw_co& (0+255),b
  3734   003410  0E00               	movlw	0
  3735   003412  6FAC               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3736   003414  0E00               	movlw	0
  3737   003416  6FAD               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3738   003418  0E00               	movlw	0
  3739   00341A  6FAE               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3740   00341C                     l7884:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;newmain.c: 345:     if(raw_co > 1000) raw_co = 1000;
  3744   00341C  0E00               	movlw	0
  3745   00341E  6F60               	movwf	___flge@ff1& (0+255),b
  3746   003420  0E00               	movlw	0
  3747   003422  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3748   003424  0E7A               	movlw	122
  3749   003426  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3750   003428  0E44               	movlw	68
  3751   00342A  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3752   00342C  C0AB  F064         	movff	Read_Sensors@raw_co,___flge@ff2
  3753   003430  C0AC  F065         	movff	Read_Sensors@raw_co+1,___flge@ff2+1
  3754   003434  C0AD  F066         	movff	Read_Sensors@raw_co+2,___flge@ff2+2
  3755   003438  C0AE  F067         	movff	Read_Sensors@raw_co+3,___flge@ff2+3
  3756   00343C  EC8A  F02F         	call	___flge	;wreg free
  3757   003440  0100               	movlb	0	; () banked
  3758   003442  B0D8               	btfsc	status,0,c
  3759   003444  EF26  F01A         	goto	u10351
  3760   003448  EF28  F01A         	goto	u10350
  3761   00344C                     u10351:
  3762   00344C  EF30  F01A         	goto	l7888
  3763   003450                     u10350:
  3764   003450                     
  3765                           ; BSR set to: 0
  3766   003450  0E00               	movlw	0
  3767   003452  6FAB               	movwf	Read_Sensors@raw_co& (0+255),b
  3768   003454  0E00               	movlw	0
  3769   003456  6FAC               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3770   003458  0E7A               	movlw	122
  3771   00345A  6FAD               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3772   00345C  0E44               	movlw	68
  3773   00345E  6FAE               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3774   003460                     l7888:
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;newmain.c: 348:     static float last_co = 0.0;;newmain.c: 349:     co_ppm = (raw_co * 
      +                          0.3) + (last_co * 0.7);
  3778   003460  0E9A               	movlw	154
  3779   003462  6E13               	movwf	___flmul@a^0,c
  3780   003464  0E99               	movlw	153
  3781   003466  6E14               	movwf	(___flmul@a+1)^0,c
  3782   003468  0E99               	movlw	153
  3783   00346A  6E15               	movwf	(___flmul@a+2)^0,c
  3784   00346C  0E3E               	movlw	62
  3785   00346E  6E16               	movwf	(___flmul@a+3)^0,c
  3786   003470  C0AB  F00F         	movff	Read_Sensors@raw_co,___flmul@b
  3787   003474  C0AC  F010         	movff	Read_Sensors@raw_co+1,___flmul@b+1
  3788   003478  C0AD  F011         	movff	Read_Sensors@raw_co+2,___flmul@b+2
  3789   00347C  C0AE  F012         	movff	Read_Sensors@raw_co+3,___flmul@b+3
  3790   003480  EC0E  F020         	call	___flmul	;wreg free
  3791   003484  C00F  F041         	movff	?___flmul,___fladd@b
  3792   003488  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3793   00348C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3794   003490  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3795   003494  0E33               	movlw	51
  3796   003496  6E13               	movwf	___flmul@a^0,c
  3797   003498  0E33               	movlw	51
  3798   00349A  6E14               	movwf	(___flmul@a+1)^0,c
  3799   00349C  0E33               	movlw	51
  3800   00349E  6E15               	movwf	(___flmul@a+2)^0,c
  3801   0034A0  0E3F               	movlw	63
  3802   0034A2  6E16               	movwf	(___flmul@a+3)^0,c
  3803   0034A4  C324  F00F         	movff	Read_Sensors@last_co,___flmul@b
  3804   0034A8  C325  F010         	movff	Read_Sensors@last_co+1,___flmul@b+1
  3805   0034AC  C326  F011         	movff	Read_Sensors@last_co+2,___flmul@b+2
  3806   0034B0  C327  F012         	movff	Read_Sensors@last_co+3,___flmul@b+3
  3807   0034B4  EC0E  F020         	call	___flmul	;wreg free
  3808   0034B8  C00F  F045         	movff	?___flmul,___fladd@a
  3809   0034BC  C010  F046         	movff	?___flmul+1,___fladd@a+1
  3810   0034C0  C011  F047         	movff	?___flmul+2,___fladd@a+2
  3811   0034C4  C012  F048         	movff	?___flmul+3,___fladd@a+3
  3812   0034C8  ECB3  F01D         	call	___fladd	;wreg free
  3813   0034CC  C041  F350         	movff	?___fladd,_co_ppm
  3814   0034D0  C042  F351         	movff	?___fladd+1,_co_ppm+1
  3815   0034D4  C043  F352         	movff	?___fladd+2,_co_ppm+2
  3816   0034D8  C044  F353         	movff	?___fladd+3,_co_ppm+3
  3817   0034DC                     
  3818                           ;newmain.c: 350:     last_co = co_ppm;
  3819   0034DC  C350  F324         	movff	_co_ppm,Read_Sensors@last_co
  3820   0034E0  C351  F325         	movff	_co_ppm+1,Read_Sensors@last_co+1
  3821   0034E4  C352  F326         	movff	_co_ppm+2,Read_Sensors@last_co+2
  3822   0034E8  C353  F327         	movff	_co_ppm+3,Read_Sensors@last_co+3
  3823   0034EC                     
  3824                           ;newmain.c: 353:     static unsigned int last_pulse = 0;;newmain.c: 354:     static unsi
      +                          gned long last_flow_time = 0;;newmain.c: 356:     if(system_millis - last_flow_time >= 1
      +                          000) {
  3825   0034EC  0103               	movlb	3	; () banked
  3826   0034EE  5120               	movf	Read_Sensors@last_flow_time& (0+255),w,b
  3827   0034F0  0102               	movlb	2	; () banked
  3828   0034F2  5DFA               	subwf	_system_millis& (0+255),w,b
  3829   0034F4  0100               	movlb	0	; () banked
  3830   0034F6  6F79               	movwf	??_Read_Sensors& (0+255),b
  3831   0034F8  0103               	movlb	3	; () banked
  3832   0034FA  5121               	movf	(Read_Sensors@last_flow_time+1)& (0+255),w,b
  3833   0034FC  0102               	movlb	2	; () banked
  3834   0034FE  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  3835   003500  0100               	movlb	0	; () banked
  3836   003502  6F7A               	movwf	(??_Read_Sensors+1)& (0+255),b
  3837   003504  0103               	movlb	3	; () banked
  3838   003506  5122               	movf	(Read_Sensors@last_flow_time+2)& (0+255),w,b
  3839   003508  0102               	movlb	2	; () banked
  3840   00350A  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  3841   00350C  0100               	movlb	0	; () banked
  3842   00350E  6F7B               	movwf	(??_Read_Sensors+2)& (0+255),b
  3843   003510  0103               	movlb	3	; () banked
  3844   003512  5123               	movf	(Read_Sensors@last_flow_time+3)& (0+255),w,b
  3845   003514  0102               	movlb	2	; () banked
  3846   003516  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  3847   003518  0100               	movlb	0	; () banked
  3848   00351A  6F7C               	movwf	(??_Read_Sensors+3)& (0+255),b
  3849   00351C  517C               	movf	(??_Read_Sensors+3)& (0+255),w,b
  3850   00351E  117B               	iorwf	(??_Read_Sensors+2)& (0+255),w,b
  3851   003520  E10B               	bnz	u10360
  3852   003522  0EE8               	movlw	232
  3853   003524  5D79               	subwf	??_Read_Sensors& (0+255),w,b
  3854   003526  0E03               	movlw	3
  3855   003528  597A               	subwfb	(??_Read_Sensors+1)& (0+255),w,b
  3856   00352A  A0D8               	btfss	status,0,c
  3857   00352C  EF9A  F01A         	goto	u10361
  3858   003530  EF9C  F01A         	goto	u10360
  3859   003534                     u10361:
  3860   003534  EF2B  F01B         	goto	l232
  3861   003538                     u10360:
  3862   003538                     
  3863                           ; BSR set to: 0
  3864                           ;newmain.c: 357:         unsigned int current_pulses = pulse_count;
  3865   003538  C366  F0A3         	movff	_pulse_count,Read_Sensors@current_pulses	;volatile
  3866   00353C  C367  F0A4         	movff	_pulse_count+1,Read_Sensors@current_pulses+1	;volatile
  3867   003540                     
  3868                           ; BSR set to: 0
  3869                           ;newmain.c: 358:         unsigned int pulses_diff = current_pulses - last_pulse;
  3870   003540  0103               	movlb	3	; () banked
  3871   003542  5164               	movf	Read_Sensors@last_pulse& (0+255),w,b
  3872   003544  0100               	movlb	0	; () banked
  3873   003546  5DA3               	subwf	Read_Sensors@current_pulses& (0+255),w,b
  3874   003548  6FA5               	movwf	Read_Sensors@pulses_diff& (0+255),b
  3875   00354A  0103               	movlb	3	; () banked
  3876   00354C  5165               	movf	(Read_Sensors@last_pulse+1)& (0+255),w,b
  3877   00354E  0100               	movlb	0	; () banked
  3878   003550  59A4               	subwfb	(Read_Sensors@current_pulses+1)& (0+255),w,b
  3879   003552  6FA6               	movwf	(Read_Sensors@pulses_diff+1)& (0+255),b
  3880                           
  3881                           ;newmain.c: 361:         if(pulses_diff == 0) {
  3882   003554  51A5               	movf	Read_Sensors@pulses_diff& (0+255),w,b
  3883   003556  11A6               	iorwf	(Read_Sensors@pulses_diff+1)& (0+255),w,b
  3884   003558  A4D8               	btfss	status,2,c
  3885   00355A  EFB1  F01A         	goto	u10371
  3886   00355E  EFB3  F01A         	goto	u10370
  3887   003562                     u10371:
  3888   003562  EFBE  F01A         	goto	l7900
  3889   003566                     u10370:
  3890   003566                     
  3891                           ; BSR set to: 0
  3892                           ;newmain.c: 362:             flow_rate = 0.0;
  3893   003566  0E00               	movlw	0
  3894   003568  0103               	movlb	3	; () banked
  3895   00356A  6F4C               	movwf	_flow_rate& (0+255),b
  3896   00356C  0E00               	movlw	0
  3897   00356E  6F4D               	movwf	(_flow_rate+1)& (0+255),b
  3898   003570  0E00               	movlw	0
  3899   003572  6F4E               	movwf	(_flow_rate+2)& (0+255),b
  3900   003574  0E00               	movlw	0
  3901   003576  6F4F               	movwf	(_flow_rate+3)& (0+255),b
  3902                           
  3903                           ;newmain.c: 363:         } else {
  3904   003578  EF1F  F01B         	goto	l7904
  3905   00357C                     l7900:
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;newmain.c: 364:             flow_rate = (pulses_diff / (float)450) * 60.0;
  3909   00357C  0E00               	movlw	0
  3910   00357E  6E2C               	movwf	___fldiv@a^0,c
  3911   003580  0E00               	movlw	0
  3912   003582  6E2D               	movwf	(___fldiv@a+1)^0,c
  3913   003584  0EE1               	movlw	225
  3914   003586  6E2E               	movwf	(___fldiv@a+2)^0,c
  3915   003588  0E43               	movlw	67
  3916   00358A  6E2F               	movwf	(___fldiv@a+3)^0,c
  3917   00358C  C0A5  F001         	movff	Read_Sensors@pulses_diff,___xxtofl@val
  3918   003590  C0A6  F002         	movff	Read_Sensors@pulses_diff+1,___xxtofl@val+1
  3919   003594  6A03               	clrf	(___xxtofl@val+2)^0,c
  3920   003596  6A04               	clrf	(___xxtofl@val+3)^0,c
  3921   003598  0E00               	movlw	0
  3922   00359A  EC02  F02B         	call	___xxtofl
  3923   00359E  C001  F028         	movff	?___xxtofl,___fldiv@b
  3924   0035A2  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3925   0035A6  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3926   0035AA  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3927   0035AE  EC10  F024         	call	___fldiv	;wreg free
  3928   0035B2  C028  F00F         	movff	?___fldiv,___flmul@b
  3929   0035B6  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3930   0035BA  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3931   0035BE  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3932   0035C2  0E00               	movlw	0
  3933   0035C4  6E13               	movwf	___flmul@a^0,c
  3934   0035C6  0E00               	movlw	0
  3935   0035C8  6E14               	movwf	(___flmul@a+1)^0,c
  3936   0035CA  0E70               	movlw	112
  3937   0035CC  6E15               	movwf	(___flmul@a+2)^0,c
  3938   0035CE  0E42               	movlw	66
  3939   0035D0  6E16               	movwf	(___flmul@a+3)^0,c
  3940   0035D2  EC0E  F020         	call	___flmul	;wreg free
  3941   0035D6  C00F  F34C         	movff	?___flmul,_flow_rate
  3942   0035DA  C010  F34D         	movff	?___flmul+1,_flow_rate+1
  3943   0035DE  C011  F34E         	movff	?___flmul+2,_flow_rate+2
  3944   0035E2  C012  F34F         	movff	?___flmul+3,_flow_rate+3
  3945   0035E6                     
  3946                           ;newmain.c: 365:             total_flow += flow_rate / 60.0;
  3947   0035E6  C348  F041         	movff	_total_flow,___fladd@b
  3948   0035EA  C349  F042         	movff	_total_flow+1,___fladd@b+1
  3949   0035EE  C34A  F043         	movff	_total_flow+2,___fladd@b+2
  3950   0035F2  C34B  F044         	movff	_total_flow+3,___fladd@b+3
  3951   0035F6  0E00               	movlw	0
  3952   0035F8  6E2C               	movwf	___fldiv@a^0,c
  3953   0035FA  0E00               	movlw	0
  3954   0035FC  6E2D               	movwf	(___fldiv@a+1)^0,c
  3955   0035FE  0E70               	movlw	112
  3956   003600  6E2E               	movwf	(___fldiv@a+2)^0,c
  3957   003602  0E42               	movlw	66
  3958   003604  6E2F               	movwf	(___fldiv@a+3)^0,c
  3959   003606  C34C  F028         	movff	_flow_rate,___fldiv@b
  3960   00360A  C34D  F029         	movff	_flow_rate+1,___fldiv@b+1
  3961   00360E  C34E  F02A         	movff	_flow_rate+2,___fldiv@b+2
  3962   003612  C34F  F02B         	movff	_flow_rate+3,___fldiv@b+3
  3963   003616  EC10  F024         	call	___fldiv	;wreg free
  3964   00361A  C028  F045         	movff	?___fldiv,___fladd@a
  3965   00361E  C029  F046         	movff	?___fldiv+1,___fladd@a+1
  3966   003622  C02A  F047         	movff	?___fldiv+2,___fladd@a+2
  3967   003626  C02B  F048         	movff	?___fldiv+3,___fladd@a+3
  3968   00362A  ECB3  F01D         	call	___fladd	;wreg free
  3969   00362E  C041  F348         	movff	?___fladd,_total_flow
  3970   003632  C042  F349         	movff	?___fladd+1,_total_flow+1
  3971   003636  C043  F34A         	movff	?___fladd+2,_total_flow+2
  3972   00363A  C044  F34B         	movff	?___fladd+3,_total_flow+3
  3973   00363E                     l7904:
  3974                           
  3975                           ;newmain.c: 368:         last_pulse = current_pulses;
  3976   00363E  C0A3  F364         	movff	Read_Sensors@current_pulses,Read_Sensors@last_pulse
  3977   003642  C0A4  F365         	movff	Read_Sensors@current_pulses+1,Read_Sensors@last_pulse+1
  3978   003646                     
  3979                           ;newmain.c: 369:         last_flow_time = system_millis;
  3980   003646  C2FA  F320         	movff	_system_millis,Read_Sensors@last_flow_time
  3981   00364A  C2FB  F321         	movff	_system_millis+1,Read_Sensors@last_flow_time+1
  3982   00364E  C2FC  F322         	movff	_system_millis+2,Read_Sensors@last_flow_time+2
  3983   003652  C2FD  F323         	movff	_system_millis+3,Read_Sensors@last_flow_time+3
  3984   003656                     l232:
  3985   003656  0012               	return		;funcret
  3986   003658                     __end_of_Read_Sensors:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function _powf *****************
  3990 ;; Defined at:
  3991 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\powf.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  x               4    8[BANK0 ] float 
  3994 ;;  y               4   12[BANK0 ] float 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  s2              4  144[BANK1 ] float 
  3997 ;;  s_h             4  116[BANK1 ] struct fui
  3998 ;;  t_h             4  112[BANK1 ] struct fui
  3999 ;;  t_l             4   52[BANK1 ] float 
  4000 ;;  s_l             4   48[BANK1 ] float 
  4001 ;;  z               4  180[BANK1 ] struct fui
  4002 ;;  t               4  176[BANK1 ] struct fui
  4003 ;;  ix              4  172[BANK1 ] struct fui
  4004 ;;  j               4  168[BANK1 ] long 
  4005 ;;  k               4  164[BANK1 ] long 
  4006 ;;  p_h             4  160[BANK1 ] struct fui
  4007 ;;  is              4  152[BANK1 ] struct fui
  4008 ;;  iy              4  148[BANK1 ] long 
  4009 ;;  t1              4  140[BANK1 ] struct fui
  4010 ;;  n               4  136[BANK1 ] long 
  4011 ;;  hy              4  132[BANK1 ] struct fui
  4012 ;;  v               4  128[BANK1 ] float 
  4013 ;;  u               4  124[BANK1 ] float 
  4014 ;;  ax              4  120[BANK1 ] struct fui
  4015 ;;  p_l             4  108[BANK1 ] float 
  4016 ;;  hx              4  104[BANK1 ] struct fui
  4017 ;;  sn              4  100[BANK1 ] unsigned long 
  4018 ;;  s               4   96[BANK1 ] float 
  4019 ;;  yisint          4   84[BANK1 ] long 
  4020 ;;  r               4   80[BANK1 ] float 
  4021 ;;  w               4   68[BANK1 ] float 
  4022 ;;  y1              4   44[BANK1 ] struct fui
  4023 ;;  i               4   40[BANK1 ] long 
  4024 ;;  z_l             4   36[BANK1 ] float 
  4025 ;;  z_h             4   32[BANK1 ] float 
  4026 ;;  t2              4   28[BANK1 ] float 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  4    8[BANK0 ] float 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4036 ;;      Params:         0       8       0       0       0       0       0       0       0
  4037 ;;      Locals:         0       0     184       0       0       0       0       0       0
  4038 ;;      Temps:          0       9       0       0       0       0       0       0       0
  4039 ;;      Totals:         0      17     184       0       0       0       0       0       0
  4040 ;;Total ram usage:      201 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 3
  4043 ;; This function calls:
  4044 ;;		___fladd
  4045 ;;		___fldiv
  4046 ;;		___flge
  4047 ;;		___flmul
  4048 ;;		___flneg
  4049 ;;		___flsub
  4050 ;;		___xxtofl
  4051 ;;		_scalbnf
  4052 ;;		_sqrtf
  4053 ;; This function is called by:
  4054 ;;		_Read_Sensors
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text6
  4059   000012                     __ptext6:
  4060                           	callstack 0
  4061   000012                     _powf:
  4062                           	callstack 26
  4063   000012  C068  F168         	movff	powf@x,powf@hx
  4064   000016  C069  F169         	movff	powf@x+1,powf@hx+1
  4065   00001A  C06A  F16A         	movff	powf@x+2,powf@hx+2
  4066   00001E  C06B  F16B         	movff	powf@x+3,powf@hx+3
  4067   000022  C06C  F184         	movff	powf@y,powf@hy
  4068   000026  C06D  F185         	movff	powf@y+1,powf@hy+1
  4069   00002A  C06E  F186         	movff	powf@y+2,powf@hy+2
  4070   00002E  C06F  F187         	movff	powf@y+3,powf@hy+3
  4071   000032  0EFF               	movlw	255
  4072   000034  0101               	movlb	1	; () banked
  4073   000036  1568               	andwf	powf@hx& (0+255),w,b
  4074   000038  6FAC               	movwf	powf@ix& (0+255),b
  4075   00003A  0EFF               	movlw	255
  4076   00003C  1569               	andwf	(powf@hx+1)& (0+255),w,b
  4077   00003E  6FAD               	movwf	(powf@ix+1)& (0+255),b
  4078   000040  0EFF               	movlw	255
  4079   000042  156A               	andwf	(powf@hx+2)& (0+255),w,b
  4080   000044  6FAE               	movwf	(powf@ix+2)& (0+255),b
  4081   000046  0E7F               	movlw	127
  4082   000048  156B               	andwf	(powf@hx+3)& (0+255),w,b
  4083   00004A  6FAF               	movwf	(powf@ix+3)& (0+255),b
  4084   00004C  0EFF               	movlw	255
  4085   00004E  1584               	andwf	powf@hy& (0+255),w,b
  4086   000050  6F94               	movwf	powf@iy& (0+255),b
  4087   000052  0EFF               	movlw	255
  4088   000054  1585               	andwf	(powf@hy+1)& (0+255),w,b
  4089   000056  6F95               	movwf	(powf@iy+1)& (0+255),b
  4090   000058  0EFF               	movlw	255
  4091   00005A  1586               	andwf	(powf@hy+2)& (0+255),w,b
  4092   00005C  6F96               	movwf	(powf@iy+2)& (0+255),b
  4093   00005E  0E7F               	movlw	127
  4094   000060  1587               	andwf	(powf@hy+3)& (0+255),w,b
  4095   000062  6F97               	movwf	(powf@iy+3)& (0+255),b
  4096   000064  5194               	movf	powf@iy& (0+255),w,b
  4097   000066  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4098   000068  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  4099   00006A  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  4100   00006C  A4D8               	btfss	status,2,c
  4101   00006E  EF3B  F000         	goto	u9621
  4102   000072  EF3D  F000         	goto	u9620
  4103   000076                     u9621:
  4104   000076  EF48  F000         	goto	l7358
  4105   00007A                     u9620:
  4106   00007A                     
  4107                           ; BSR set to: 1
  4108   00007A  0E00               	movlw	0
  4109   00007C  0100               	movlb	0	; () banked
  4110   00007E  6F68               	movwf	?_powf& (0+255),b
  4111   000080  0E00               	movlw	0
  4112   000082  6F69               	movwf	(?_powf+1)& (0+255),b
  4113   000084  0E80               	movlw	128
  4114   000086  6F6A               	movwf	(?_powf+2)& (0+255),b
  4115   000088  0E3F               	movlw	63
  4116   00008A  6F6B               	movwf	(?_powf+3)& (0+255),b
  4117   00008C  EF63  F012         	goto	l1269
  4118   000090                     l7358:
  4119                           
  4120                           ; BSR set to: 1
  4121   000090  0E80               	movlw	128
  4122   000092  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  4123   000094  E109               	bnz	u9631
  4124   000096  0E3F               	movlw	63
  4125   000098  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  4126   00009A  1168               	iorwf	powf@hx& (0+255),w,b
  4127   00009C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  4128   00009E  A4D8               	btfss	status,2,c
  4129   0000A0  EF54  F000         	goto	u9631
  4130   0000A4  EF56  F000         	goto	u9630
  4131   0000A8                     u9631:
  4132   0000A8  EF61  F000         	goto	l7364
  4133   0000AC                     u9630:
  4134   0000AC                     
  4135                           ; BSR set to: 1
  4136   0000AC  0E00               	movlw	0
  4137   0000AE  0100               	movlb	0	; () banked
  4138   0000B0  6F68               	movwf	?_powf& (0+255),b
  4139   0000B2  0E00               	movlw	0
  4140   0000B4  6F69               	movwf	(?_powf+1)& (0+255),b
  4141   0000B6  0E80               	movlw	128
  4142   0000B8  6F6A               	movwf	(?_powf+2)& (0+255),b
  4143   0000BA  0E3F               	movlw	63
  4144   0000BC  6F6B               	movwf	(?_powf+3)& (0+255),b
  4145   0000BE  EF63  F012         	goto	l1269
  4146   0000C2                     l7364:
  4147                           
  4148                           ; BSR set to: 1
  4149   0000C2  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4150   0000C4  EF72  F000         	goto	u9640
  4151   0000C8  05AC               	decf	powf@ix& (0+255),w,b
  4152   0000CA  0E00               	movlw	0
  4153   0000CC  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4154   0000CE  0E80               	movlw	128
  4155   0000D0  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4156   0000D2  0E7F               	movlw	127
  4157   0000D4  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4158   0000D6  B0D8               	btfsc	status,0,c
  4159   0000D8  EF70  F000         	goto	u9641
  4160   0000DC  EF72  F000         	goto	u9640
  4161   0000E0                     u9641:
  4162   0000E0  EF83  F000         	goto	l7368
  4163   0000E4                     u9640:
  4164   0000E4                     
  4165                           ; BSR set to: 1
  4166   0000E4  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4167   0000E6  EF81  F000         	goto	u9651
  4168   0000EA  0594               	decf	powf@iy& (0+255),w,b
  4169   0000EC  0E00               	movlw	0
  4170   0000EE  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  4171   0000F0  0E80               	movlw	128
  4172   0000F2  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  4173   0000F4  0E7F               	movlw	127
  4174   0000F6  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4175   0000F8  A0D8               	btfss	status,0,c
  4176   0000FA  EF81  F000         	goto	u9651
  4177   0000FE  EF83  F000         	goto	u9650
  4178   000102                     u9651:
  4179   000102  EF9F  F000         	goto	l7372
  4180   000106                     u9650:
  4181   000106                     l7368:
  4182                           
  4183                           ; BSR set to: 1
  4184   000106  C068  F041         	movff	powf@x,___fladd@b
  4185   00010A  C069  F042         	movff	powf@x+1,___fladd@b+1
  4186   00010E  C06A  F043         	movff	powf@x+2,___fladd@b+2
  4187   000112  C06B  F044         	movff	powf@x+3,___fladd@b+3
  4188   000116  C06C  F045         	movff	powf@y,___fladd@a
  4189   00011A  C06D  F046         	movff	powf@y+1,___fladd@a+1
  4190   00011E  C06E  F047         	movff	powf@y+2,___fladd@a+2
  4191   000122  C06F  F048         	movff	powf@y+3,___fladd@a+3
  4192   000126  ECB3  F01D         	call	___fladd	;wreg free
  4193   00012A  C041  F068         	movff	?___fladd,?_powf
  4194   00012E  C042  F069         	movff	?___fladd+1,?_powf+1
  4195   000132  C043  F06A         	movff	?___fladd+2,?_powf+2
  4196   000136  C044  F06B         	movff	?___fladd+3,?_powf+3
  4197   00013A  EF63  F012         	goto	l1269
  4198   00013E                     l7372:
  4199                           
  4200                           ; BSR set to: 1
  4201   00013E  0E00               	movlw	0
  4202   000140  6F54               	movwf	powf@yisint& (0+255),b
  4203   000142  0E00               	movlw	0
  4204   000144  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4205   000146  0E00               	movlw	0
  4206   000148  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4207   00014A  0E00               	movlw	0
  4208   00014C  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4209   00014E                     
  4210                           ; BSR set to: 1
  4211   00014E  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4212   000150  EFAE  F000         	goto	u9660
  4213   000154  EFAC  F000         	goto	u9661
  4214   000158                     u9661:
  4215   000158  EF7A  F001         	goto	l1274
  4216   00015C                     u9660:
  4217   00015C                     
  4218                           ; BSR set to: 1
  4219   00015C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4220   00015E  EFBA  F000         	goto	u9671
  4221   000162  0E80               	movlw	128
  4222   000164  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4223   000166  0E4B               	movlw	75
  4224   000168  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4225   00016A  A0D8               	btfss	status,0,c
  4226   00016C  EFBA  F000         	goto	u9671
  4227   000170  EFBC  F000         	goto	u9670
  4228   000174                     u9671:
  4229   000174  EFC6  F000         	goto	l7380
  4230   000178                     u9670:
  4231   000178                     
  4232                           ; BSR set to: 1
  4233   000178  0E02               	movlw	2
  4234   00017A  6F54               	movwf	powf@yisint& (0+255),b
  4235   00017C  0E00               	movlw	0
  4236   00017E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4237   000180  0E00               	movlw	0
  4238   000182  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4239   000184  0E00               	movlw	0
  4240   000186  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4241   000188  EF7A  F001         	goto	l1274
  4242   00018C                     l7380:
  4243                           
  4244                           ; BSR set to: 1
  4245   00018C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4246   00018E  EFD2  F000         	goto	u9681
  4247   000192  0E80               	movlw	128
  4248   000194  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4249   000196  0E3F               	movlw	63
  4250   000198  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4251   00019A  A0D8               	btfss	status,0,c
  4252   00019C  EFD2  F000         	goto	u9681
  4253   0001A0  EFD4  F000         	goto	u9680
  4254   0001A4                     u9681:
  4255   0001A4  EF7A  F001         	goto	l1274
  4256   0001A8                     u9680:
  4257   0001A8                     
  4258                           ; BSR set to: 1
  4259   0001A8  0E17               	movlw	23
  4260   0001AA  0100               	movlb	0	; () banked
  4261   0001AC  6F70               	movwf	??_powf& (0+255),b
  4262   0001AE  C194  F071         	movff	powf@iy,??_powf+1
  4263   0001B2  C195  F072         	movff	powf@iy+1,??_powf+2
  4264   0001B6  C196  F073         	movff	powf@iy+2,??_powf+3
  4265   0001BA  C197  F074         	movff	powf@iy+3,??_powf+4
  4266   0001BE                     u9695:
  4267   0001BE  6770               	tstfsz	??_powf& (0+255),b
  4268   0001C0  EFE4  F000         	goto	u9696
  4269   0001C4  EFEC  F000         	goto	u9697
  4270   0001C8                     u9696:
  4271   0001C8  3574               	rlcf	(??_powf+4)& (0+255),w,b
  4272   0001CA  3374               	rrcf	(??_powf+4)& (0+255),f,b
  4273   0001CC  3373               	rrcf	(??_powf+3)& (0+255),f,b
  4274   0001CE  3372               	rrcf	(??_powf+2)& (0+255),f,b
  4275   0001D0  3371               	rrcf	(??_powf+1)& (0+255),f,b
  4276   0001D2  2F70               	decfsz	??_powf& (0+255),f,b
  4277   0001D4  EFDF  F000         	goto	u9695
  4278   0001D8                     u9697:
  4279   0001D8  0E81               	movlw	129
  4280   0001DA  0100               	movlb	0	; () banked
  4281   0001DC  2571               	addwf	(??_powf+1)& (0+255),w,b
  4282   0001DE  0101               	movlb	1	; () banked
  4283   0001E0  6FA4               	movwf	powf@k& (0+255),b
  4284   0001E2  0EFF               	movlw	255
  4285   0001E4  0100               	movlb	0	; () banked
  4286   0001E6  2172               	addwfc	(??_powf+2)& (0+255),w,b
  4287   0001E8  0101               	movlb	1	; () banked
  4288   0001EA  6FA5               	movwf	(powf@k+1)& (0+255),b
  4289   0001EC  0EFF               	movlw	255
  4290   0001EE  0100               	movlb	0	; () banked
  4291   0001F0  2173               	addwfc	(??_powf+3)& (0+255),w,b
  4292   0001F2  0101               	movlb	1	; () banked
  4293   0001F4  6FA6               	movwf	(powf@k+2)& (0+255),b
  4294   0001F6  0EFF               	movlw	255
  4295   0001F8  0100               	movlb	0	; () banked
  4296   0001FA  2174               	addwfc	(??_powf+4)& (0+255),w,b
  4297   0001FC  0101               	movlb	1	; () banked
  4298   0001FE  6FA7               	movwf	(powf@k+3)& (0+255),b
  4299   000200  51A4               	movf	powf@k& (0+255),w,b
  4300   000202  0817               	sublw	23
  4301   000204  0100               	movlb	0	; () banked
  4302   000206  6F70               	movwf	??_powf& (0+255),b
  4303   000208  C194  F071         	movff	powf@iy,??_powf+1
  4304   00020C  C195  F072         	movff	powf@iy+1,??_powf+2
  4305   000210  C196  F073         	movff	powf@iy+2,??_powf+3
  4306   000214  C197  F074         	movff	powf@iy+3,??_powf+4
  4307   000218                     u9705:
  4308   000218  6770               	tstfsz	??_powf& (0+255),b
  4309   00021A  EF11  F001         	goto	u9706
  4310   00021E  EF19  F001         	goto	u9707
  4311   000222                     u9706:
  4312   000222  3574               	rlcf	(??_powf+4)& (0+255),w,b
  4313   000224  3374               	rrcf	(??_powf+4)& (0+255),f,b
  4314   000226  3373               	rrcf	(??_powf+3)& (0+255),f,b
  4315   000228  3372               	rrcf	(??_powf+2)& (0+255),f,b
  4316   00022A  3371               	rrcf	(??_powf+1)& (0+255),f,b
  4317   00022C  2F70               	decfsz	??_powf& (0+255),f,b
  4318   00022E  EF0C  F001         	goto	u9705
  4319   000232                     u9707:
  4320   000232  C071  F1A8         	movff	??_powf+1,powf@j
  4321   000236  C072  F1A9         	movff	??_powf+2,powf@j+1
  4322   00023A  C073  F1AA         	movff	??_powf+3,powf@j+2
  4323   00023E  C074  F1AB         	movff	??_powf+4,powf@j+3
  4324   000242  0101               	movlb	1	; () banked
  4325   000244  51A4               	movf	powf@k& (0+255),w,b
  4326   000246  0817               	sublw	23
  4327   000248  0100               	movlb	0	; () banked
  4328   00024A  6F70               	movwf	??_powf& (0+255),b
  4329   00024C  C1A8  F071         	movff	powf@j,??_powf+1
  4330   000250  C1A9  F072         	movff	powf@j+1,??_powf+2
  4331   000254  C1AA  F073         	movff	powf@j+2,??_powf+3
  4332   000258  C1AB  F074         	movff	powf@j+3,??_powf+4
  4333   00025C  2B70               	incf	??_powf& (0+255),f,b
  4334   00025E  EF36  F001         	goto	u9710
  4335   000262                     u9715:
  4336   000262  90D8               	bcf	status,0,c
  4337   000264  3771               	rlcf	(??_powf+1)& (0+255),f,b
  4338   000266  3772               	rlcf	(??_powf+2)& (0+255),f,b
  4339   000268  3773               	rlcf	(??_powf+3)& (0+255),f,b
  4340   00026A  3774               	rlcf	(??_powf+4)& (0+255),f,b
  4341   00026C                     u9710:
  4342   00026C  2F70               	decfsz	??_powf& (0+255),f,b
  4343   00026E  EF31  F001         	goto	u9715
  4344   000272  0101               	movlb	1	; () banked
  4345   000274  5194               	movf	powf@iy& (0+255),w,b
  4346   000276  0100               	movlb	0	; () banked
  4347   000278  1971               	xorwf	(??_powf+1)& (0+255),w,b
  4348   00027A  E113               	bnz	u9721
  4349   00027C  0101               	movlb	1	; () banked
  4350   00027E  5195               	movf	(powf@iy+1)& (0+255),w,b
  4351   000280  0100               	movlb	0	; () banked
  4352   000282  1972               	xorwf	(??_powf+2)& (0+255),w,b
  4353   000284  E10E               	bnz	u9721
  4354   000286  0101               	movlb	1	; () banked
  4355   000288  5196               	movf	(powf@iy+2)& (0+255),w,b
  4356   00028A  0100               	movlb	0	; () banked
  4357   00028C  1973               	xorwf	(??_powf+3)& (0+255),w,b
  4358   00028E  E109               	bnz	u9721
  4359   000290  0101               	movlb	1	; () banked
  4360   000292  5197               	movf	(powf@iy+3)& (0+255),w,b
  4361   000294  0100               	movlb	0	; () banked
  4362   000296  1974               	xorwf	(??_powf+4)& (0+255),w,b
  4363   000298  A4D8               	btfss	status,2,c
  4364   00029A  EF51  F001         	goto	u9721
  4365   00029E  EF53  F001         	goto	u9720
  4366   0002A2                     u9721:
  4367   0002A2  EF7A  F001         	goto	l1274
  4368   0002A6                     u9720:
  4369   0002A6                     
  4370                           ; BSR set to: 0
  4371   0002A6  0E01               	movlw	1
  4372   0002A8  0101               	movlb	1	; () banked
  4373   0002AA  15A8               	andwf	powf@j& (0+255),w,b
  4374   0002AC  0100               	movlb	0	; () banked
  4375   0002AE  6F70               	movwf	??_powf& (0+255),b
  4376   0002B0  0E00               	movlw	0
  4377   0002B2  0101               	movlb	1	; () banked
  4378   0002B4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  4379   0002B6  0100               	movlb	0	; () banked
  4380   0002B8  6F71               	movwf	(??_powf+1)& (0+255),b
  4381   0002BA  0E00               	movlw	0
  4382   0002BC  0101               	movlb	1	; () banked
  4383   0002BE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  4384   0002C0  0100               	movlb	0	; () banked
  4385   0002C2  6F72               	movwf	(??_powf+2)& (0+255),b
  4386   0002C4  0E00               	movlw	0
  4387   0002C6  0101               	movlb	1	; () banked
  4388   0002C8  15AB               	andwf	(powf@j+3)& (0+255),w,b
  4389   0002CA  0100               	movlb	0	; () banked
  4390   0002CC  6F73               	movwf	(??_powf+3)& (0+255),b
  4391   0002CE  5170               	movf	??_powf& (0+255),w,b
  4392   0002D0  0802               	sublw	2
  4393   0002D2  0101               	movlb	1	; () banked
  4394   0002D4  6F54               	movwf	powf@yisint& (0+255),b
  4395   0002D6  0E00               	movlw	0
  4396   0002D8  0100               	movlb	0	; () banked
  4397   0002DA  5571               	subfwb	(??_powf+1)& (0+255),w,b
  4398   0002DC  0101               	movlb	1	; () banked
  4399   0002DE  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4400   0002E0  0E00               	movlw	0
  4401   0002E2  0100               	movlb	0	; () banked
  4402   0002E4  5572               	subfwb	(??_powf+2)& (0+255),w,b
  4403   0002E6  0101               	movlb	1	; () banked
  4404   0002E8  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4405   0002EA  0E00               	movlw	0
  4406   0002EC  0100               	movlb	0	; () banked
  4407   0002EE  5573               	subfwb	(??_powf+3)& (0+255),w,b
  4408   0002F0  0101               	movlb	1	; () banked
  4409   0002F2  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4410   0002F4                     l1274:
  4411   0002F4  0E80               	movlw	128
  4412   0002F6  0101               	movlb	1	; () banked
  4413   0002F8  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4414   0002FA  E109               	bnz	u9731
  4415   0002FC  0E7F               	movlw	127
  4416   0002FE  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4417   000300  1194               	iorwf	powf@iy& (0+255),w,b
  4418   000302  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4419   000304  A4D8               	btfss	status,2,c
  4420   000306  EF87  F001         	goto	u9731
  4421   00030A  EF89  F001         	goto	u9730
  4422   00030E                     u9731:
  4423   00030E  EFF5  F001         	goto	l7410
  4424   000312                     u9730:
  4425   000312                     
  4426                           ; BSR set to: 1
  4427   000312  0E80               	movlw	128
  4428   000314  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4429   000316  E109               	bnz	u9741
  4430   000318  0E3F               	movlw	63
  4431   00031A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4432   00031C  11AC               	iorwf	powf@ix& (0+255),w,b
  4433   00031E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4434   000320  A4D8               	btfss	status,2,c
  4435   000322  EF95  F001         	goto	u9741
  4436   000326  EF97  F001         	goto	u9740
  4437   00032A                     u9741:
  4438   00032A  EFA2  F001         	goto	l7394
  4439   00032E                     u9740:
  4440   00032E                     
  4441                           ; BSR set to: 1
  4442   00032E  0E00               	movlw	0
  4443   000330  0100               	movlb	0	; () banked
  4444   000332  6F68               	movwf	?_powf& (0+255),b
  4445   000334  0E00               	movlw	0
  4446   000336  6F69               	movwf	(?_powf+1)& (0+255),b
  4447   000338  0E80               	movlw	128
  4448   00033A  6F6A               	movwf	(?_powf+2)& (0+255),b
  4449   00033C  0E3F               	movlw	63
  4450   00033E  6F6B               	movwf	(?_powf+3)& (0+255),b
  4451   000340  EF63  F012         	goto	l1269
  4452   000344                     l7394:
  4453                           
  4454                           ; BSR set to: 1
  4455   000344  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4456   000346  EFB1  F001         	goto	u9751
  4457   00034A  05AC               	decf	powf@ix& (0+255),w,b
  4458   00034C  0E00               	movlw	0
  4459   00034E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4460   000350  0E80               	movlw	128
  4461   000352  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4462   000354  0E3F               	movlw	63
  4463   000356  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4464   000358  A0D8               	btfss	status,0,c
  4465   00035A  EFB1  F001         	goto	u9751
  4466   00035E  EFB3  F001         	goto	u9750
  4467   000362                     u9751:
  4468   000362  EFCF  F001         	goto	l7402
  4469   000366                     u9750:
  4470   000366                     
  4471                           ; BSR set to: 1
  4472   000366  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4473   000368  EFBA  F001         	goto	u9760
  4474   00036C  EFB8  F001         	goto	u9761
  4475   000370                     u9761:
  4476   000370  EFC5  F001         	goto	l1284
  4477   000374                     u9760:
  4478   000374                     
  4479                           ; BSR set to: 1
  4480   000374  0E00               	movlw	0
  4481   000376  0100               	movlb	0	; () banked
  4482   000378  6F68               	movwf	?_powf& (0+255),b
  4483   00037A  0E00               	movlw	0
  4484   00037C  6F69               	movwf	(?_powf+1)& (0+255),b
  4485   00037E  0E00               	movlw	0
  4486   000380  6F6A               	movwf	(?_powf+2)& (0+255),b
  4487   000382  0E00               	movlw	0
  4488   000384  6F6B               	movwf	(?_powf+3)& (0+255),b
  4489   000386  EF63  F012         	goto	l1269
  4490   00038A                     l1284:
  4491                           
  4492                           ; BSR set to: 1
  4493   00038A  C06C  F068         	movff	powf@y,?_powf
  4494   00038E  C06D  F069         	movff	powf@y+1,?_powf+1
  4495   000392  C06E  F06A         	movff	powf@y+2,?_powf+2
  4496   000396  C06F  F06B         	movff	powf@y+3,?_powf+3
  4497   00039A  EF63  F012         	goto	l1269
  4498   00039E                     l7402:
  4499                           
  4500                           ; BSR set to: 1
  4501   00039E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4502   0003A0  EFD6  F001         	goto	u9770
  4503   0003A4  EFD4  F001         	goto	u9771
  4504   0003A8                     u9771:
  4505   0003A8  EFEA  F001         	goto	l7406
  4506   0003AC                     u9770:
  4507   0003AC                     
  4508                           ; BSR set to: 1
  4509   0003AC  C06C  F001         	movff	powf@y,___flneg@f1
  4510   0003B0  C06D  F002         	movff	powf@y+1,___flneg@f1+1
  4511   0003B4  C06E  F003         	movff	powf@y+2,___flneg@f1+2
  4512   0003B8  C06F  F004         	movff	powf@y+3,___flneg@f1+3
  4513   0003BC  ECD1  F036         	call	___flneg	;wreg free
  4514   0003C0  C001  F068         	movff	?___flneg,?_powf
  4515   0003C4  C002  F069         	movff	?___flneg+1,?_powf+1
  4516   0003C8  C003  F06A         	movff	?___flneg+2,?_powf+2
  4517   0003CC  C004  F06B         	movff	?___flneg+3,?_powf+3
  4518   0003D0  EF63  F012         	goto	l1269
  4519   0003D4                     l7406:
  4520                           
  4521                           ; BSR set to: 1
  4522   0003D4  0E00               	movlw	0
  4523   0003D6  0100               	movlb	0	; () banked
  4524   0003D8  6F68               	movwf	?_powf& (0+255),b
  4525   0003DA  0E00               	movlw	0
  4526   0003DC  6F69               	movwf	(?_powf+1)& (0+255),b
  4527   0003DE  0E00               	movlw	0
  4528   0003E0  6F6A               	movwf	(?_powf+2)& (0+255),b
  4529   0003E2  0E00               	movlw	0
  4530   0003E4  6F6B               	movwf	(?_powf+3)& (0+255),b
  4531   0003E6  EF63  F012         	goto	l1269
  4532   0003EA                     l7410:
  4533                           
  4534                           ; BSR set to: 1
  4535   0003EA  0E80               	movlw	128
  4536   0003EC  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4537   0003EE  E109               	bnz	u9781
  4538   0003F0  0E3F               	movlw	63
  4539   0003F2  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4540   0003F4  1194               	iorwf	powf@iy& (0+255),w,b
  4541   0003F6  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4542   0003F8  A4D8               	btfss	status,2,c
  4543   0003FA  EF01  F002         	goto	u9781
  4544   0003FE  EF03  F002         	goto	u9780
  4545   000402                     u9781:
  4546   000402  EF30  F002         	goto	l7416
  4547   000406                     u9780:
  4548   000406                     
  4549                           ; BSR set to: 1
  4550   000406  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4551   000408  EF0A  F002         	goto	u9790
  4552   00040C  EF08  F002         	goto	u9791
  4553   000410                     u9791:
  4554   000410  EF26  F002         	goto	l1294
  4555   000414                     u9790:
  4556   000414                     
  4557                           ; BSR set to: 1
  4558   000414  0E00               	movlw	0
  4559   000416  6E28               	movwf	___fldiv@b^0,c
  4560   000418  0E00               	movlw	0
  4561   00041A  6E29               	movwf	(___fldiv@b+1)^0,c
  4562   00041C  0E80               	movlw	128
  4563   00041E  6E2A               	movwf	(___fldiv@b+2)^0,c
  4564   000420  0E3F               	movlw	63
  4565   000422  6E2B               	movwf	(___fldiv@b+3)^0,c
  4566   000424  C068  F02C         	movff	powf@x,___fldiv@a
  4567   000428  C069  F02D         	movff	powf@x+1,___fldiv@a+1
  4568   00042C  C06A  F02E         	movff	powf@x+2,___fldiv@a+2
  4569   000430  C06B  F02F         	movff	powf@x+3,___fldiv@a+3
  4570   000434  EC10  F024         	call	___fldiv	;wreg free
  4571   000438  C028  F068         	movff	?___fldiv,?_powf
  4572   00043C  C029  F069         	movff	?___fldiv+1,?_powf+1
  4573   000440  C02A  F06A         	movff	?___fldiv+2,?_powf+2
  4574   000444  C02B  F06B         	movff	?___fldiv+3,?_powf+3
  4575   000448  EF63  F012         	goto	l1269
  4576   00044C                     l1294:
  4577                           
  4578                           ; BSR set to: 1
  4579   00044C  C068  F068         	movff	powf@x,?_powf
  4580   000450  C069  F069         	movff	powf@x+1,?_powf+1
  4581   000454  C06A  F06A         	movff	powf@x+2,?_powf+2
  4582   000458  C06B  F06B         	movff	powf@x+3,?_powf+3
  4583   00045C  EF63  F012         	goto	l1269
  4584   000460                     l7416:
  4585                           
  4586                           ; BSR set to: 1
  4587   000460  0E40               	movlw	64
  4588   000462  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4589   000464  1184               	iorwf	powf@hy& (0+255),w,b
  4590   000466  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4591   000468  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4592   00046A  A4D8               	btfss	status,2,c
  4593   00046C  EF3A  F002         	goto	u9801
  4594   000470  EF3C  F002         	goto	u9800
  4595   000474                     u9801:
  4596   000474  EF58  F002         	goto	l7422
  4597   000478                     u9800:
  4598   000478                     
  4599                           ; BSR set to: 1
  4600   000478  C068  F00F         	movff	powf@x,___flmul@b
  4601   00047C  C069  F010         	movff	powf@x+1,___flmul@b+1
  4602   000480  C06A  F011         	movff	powf@x+2,___flmul@b+2
  4603   000484  C06B  F012         	movff	powf@x+3,___flmul@b+3
  4604   000488  C068  F013         	movff	powf@x,___flmul@a
  4605   00048C  C069  F014         	movff	powf@x+1,___flmul@a+1
  4606   000490  C06A  F015         	movff	powf@x+2,___flmul@a+2
  4607   000494  C06B  F016         	movff	powf@x+3,___flmul@a+3
  4608   000498  EC0E  F020         	call	___flmul	;wreg free
  4609   00049C  C00F  F068         	movff	?___flmul,?_powf
  4610   0004A0  C010  F069         	movff	?___flmul+1,?_powf+1
  4611   0004A4  C011  F06A         	movff	?___flmul+2,?_powf+2
  4612   0004A8  C012  F06B         	movff	?___flmul+3,?_powf+3
  4613   0004AC  EF63  F012         	goto	l1269
  4614   0004B0                     l7422:
  4615                           
  4616                           ; BSR set to: 1
  4617   0004B0  0E3F               	movlw	63
  4618   0004B2  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4619   0004B4  1184               	iorwf	powf@hy& (0+255),w,b
  4620   0004B6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4621   0004B8  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4622   0004BA  A4D8               	btfss	status,2,c
  4623   0004BC  EF62  F002         	goto	u9811
  4624   0004C0  EF64  F002         	goto	u9810
  4625   0004C4                     u9811:
  4626   0004C4  EF7F  F002         	goto	l1298
  4627   0004C8                     u9810:
  4628   0004C8                     
  4629                           ; BSR set to: 1
  4630   0004C8  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4631   0004CA  EF69  F002         	goto	u9821
  4632   0004CE  EF6B  F002         	goto	u9820
  4633   0004D2                     u9821:
  4634   0004D2  EF7F  F002         	goto	l1298
  4635   0004D6                     u9820:
  4636   0004D6                     
  4637                           ; BSR set to: 1
  4638   0004D6  C068  F001         	movff	powf@x,sqrtf@x
  4639   0004DA  C069  F002         	movff	powf@x+1,sqrtf@x+1
  4640   0004DE  C06A  F003         	movff	powf@x+2,sqrtf@x+2
  4641   0004E2  C06B  F004         	movff	powf@x+3,sqrtf@x+3
  4642   0004E6  EC21  F022         	call	_sqrtf	;wreg free
  4643   0004EA  C001  F068         	movff	?_sqrtf,?_powf
  4644   0004EE  C002  F069         	movff	?_sqrtf+1,?_powf+1
  4645   0004F2  C003  F06A         	movff	?_sqrtf+2,?_powf+2
  4646   0004F6  C004  F06B         	movff	?_sqrtf+3,?_powf+3
  4647   0004FA  EF63  F012         	goto	l1269
  4648   0004FE                     l1298:
  4649                           
  4650                           ; BSR set to: 1
  4651   0004FE  C1AC  F178         	movff	powf@ix,powf@ax
  4652   000502  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  4653   000506  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  4654   00050A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  4655   00050E                     
  4656                           ; BSR set to: 1
  4657   00050E  0E80               	movlw	128
  4658   000510  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4659   000512  E10B               	bnz	u9830
  4660   000514  0E7F               	movlw	127
  4661   000516  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4662   000518  11AC               	iorwf	powf@ix& (0+255),w,b
  4663   00051A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4664   00051C  B4D8               	btfsc	status,2,c
  4665   00051E  EF93  F002         	goto	u9831
  4666   000522  EF95  F002         	goto	u9830
  4667   000526                     u9831:
  4668   000526  EFAE  F002         	goto	l1302
  4669   00052A                     u9830:
  4670   00052A                     
  4671                           ; BSR set to: 1
  4672   00052A  51AC               	movf	powf@ix& (0+255),w,b
  4673   00052C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4674   00052E  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  4675   000530  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  4676   000532  B4D8               	btfsc	status,2,c
  4677   000534  EF9E  F002         	goto	u9841
  4678   000538  EFA0  F002         	goto	u9840
  4679   00053C                     u9841:
  4680   00053C  EFAE  F002         	goto	l1302
  4681   000540                     u9840:
  4682   000540                     
  4683                           ; BSR set to: 1
  4684   000540  0E80               	movlw	128
  4685   000542  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4686   000544  E109               	bnz	u9851
  4687   000546  0E3F               	movlw	63
  4688   000548  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4689   00054A  11AC               	iorwf	powf@ix& (0+255),w,b
  4690   00054C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4691   00054E  A4D8               	btfss	status,2,c
  4692   000550  EFAC  F002         	goto	u9851
  4693   000554  EFAE  F002         	goto	u9850
  4694   000558                     u9851:
  4695   000558  EF49  F003         	goto	l7454
  4696   00055C                     u9850:
  4697   00055C                     l1302:
  4698                           
  4699                           ; BSR set to: 1
  4700   00055C  C178  F1B4         	movff	powf@ax,powf@z
  4701   000560  C179  F1B5         	movff	powf@ax+1,powf@z+1
  4702   000564  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  4703   000568  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  4704   00056C                     
  4705                           ; BSR set to: 1
  4706   00056C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4707   00056E  EFBD  F002         	goto	u9860
  4708   000572  EFBB  F002         	goto	u9861
  4709   000576                     u9861:
  4710   000576  EFD7  F002         	goto	l7440
  4711   00057A                     u9860:
  4712   00057A                     
  4713                           ; BSR set to: 1
  4714   00057A  0E00               	movlw	0
  4715   00057C  6E28               	movwf	___fldiv@b^0,c
  4716   00057E  0E00               	movlw	0
  4717   000580  6E29               	movwf	(___fldiv@b+1)^0,c
  4718   000582  0E80               	movlw	128
  4719   000584  6E2A               	movwf	(___fldiv@b+2)^0,c
  4720   000586  0E3F               	movlw	63
  4721   000588  6E2B               	movwf	(___fldiv@b+3)^0,c
  4722   00058A  C1B4  F02C         	movff	powf@z,___fldiv@a
  4723   00058E  C1B5  F02D         	movff	powf@z+1,___fldiv@a+1
  4724   000592  C1B6  F02E         	movff	powf@z+2,___fldiv@a+2
  4725   000596  C1B7  F02F         	movff	powf@z+3,___fldiv@a+3
  4726   00059A  EC10  F024         	call	___fldiv	;wreg free
  4727   00059E  C028  F1B4         	movff	?___fldiv,powf@z
  4728   0005A2  C029  F1B5         	movff	?___fldiv+1,powf@z+1
  4729   0005A6  C02A  F1B6         	movff	?___fldiv+2,powf@z+2
  4730   0005AA  C02B  F1B7         	movff	?___fldiv+3,powf@z+3
  4731   0005AE                     l7440:
  4732   0005AE  0101               	movlb	1	; () banked
  4733   0005B0  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4734   0005B2  EFDF  F002         	goto	u9870
  4735   0005B6  EFDD  F002         	goto	u9871
  4736   0005BA                     u9871:
  4737   0005BA  EF3F  F003         	goto	l7450
  4738   0005BE                     u9870:
  4739   0005BE                     
  4740                           ; BSR set to: 1
  4741   0005BE  0E00               	movlw	0
  4742   0005C0  25AC               	addwf	powf@ix& (0+255),w,b
  4743   0005C2  0100               	movlb	0	; () banked
  4744   0005C4  6F70               	movwf	??_powf& (0+255),b
  4745   0005C6  0E00               	movlw	0
  4746   0005C8  0101               	movlb	1	; () banked
  4747   0005CA  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  4748   0005CC  0100               	movlb	0	; () banked
  4749   0005CE  6F71               	movwf	(??_powf+1)& (0+255),b
  4750   0005D0  0E80               	movlw	128
  4751   0005D2  0101               	movlb	1	; () banked
  4752   0005D4  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  4753   0005D6  0100               	movlb	0	; () banked
  4754   0005D8  6F72               	movwf	(??_powf+2)& (0+255),b
  4755   0005DA  0EC0               	movlw	192
  4756   0005DC  0101               	movlb	1	; () banked
  4757   0005DE  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  4758   0005E0  0100               	movlb	0	; () banked
  4759   0005E2  6F73               	movwf	(??_powf+3)& (0+255),b
  4760   0005E4  0101               	movlb	1	; () banked
  4761   0005E6  5154               	movf	powf@yisint& (0+255),w,b
  4762   0005E8  0100               	movlb	0	; () banked
  4763   0005EA  1170               	iorwf	??_powf& (0+255),w,b
  4764   0005EC  6F74               	movwf	(??_powf+4)& (0+255),b
  4765   0005EE  0101               	movlb	1	; () banked
  4766   0005F0  5155               	movf	(powf@yisint+1)& (0+255),w,b
  4767   0005F2  0100               	movlb	0	; () banked
  4768   0005F4  1171               	iorwf	(??_powf+1)& (0+255),w,b
  4769   0005F6  6F75               	movwf	(??_powf+5)& (0+255),b
  4770   0005F8  0101               	movlb	1	; () banked
  4771   0005FA  5156               	movf	(powf@yisint+2)& (0+255),w,b
  4772   0005FC  0100               	movlb	0	; () banked
  4773   0005FE  1172               	iorwf	(??_powf+2)& (0+255),w,b
  4774   000600  6F76               	movwf	(??_powf+6)& (0+255),b
  4775   000602  0101               	movlb	1	; () banked
  4776   000604  5157               	movf	(powf@yisint+3)& (0+255),w,b
  4777   000606  0100               	movlb	0	; () banked
  4778   000608  1173               	iorwf	(??_powf+3)& (0+255),w,b
  4779   00060A  6F77               	movwf	(??_powf+7)& (0+255),b
  4780   00060C  5174               	movf	(??_powf+4)& (0+255),w,b
  4781   00060E  1175               	iorwf	(??_powf+5)& (0+255),w,b
  4782   000610  1176               	iorwf	(??_powf+6)& (0+255),w,b
  4783   000612  1177               	iorwf	(??_powf+7)& (0+255),w,b
  4784   000614  A4D8               	btfss	status,2,c
  4785   000616  EF0F  F003         	goto	u9881
  4786   00061A  EF11  F003         	goto	u9880
  4787   00061E                     u9881:
  4788   00061E  EF21  F003         	goto	l7446
  4789   000622                     u9880:
  4790   000622                     l7444:
  4791   000622  0E00               	movlw	0
  4792   000624  0103               	movlb	3	; () banked
  4793   000626  6F61               	movwf	(_errno+1)& (0+255),b
  4794   000628  0E21               	movlw	33
  4795   00062A  6F60               	movwf	_errno& (0+255),b
  4796   00062C  0EFF               	movlw	255
  4797   00062E  0101               	movlb	1	; () banked
  4798   000630  6FB4               	movwf	powf@z& (0+255),b
  4799   000632  0EFF               	movlw	255
  4800   000634  6FB5               	movwf	(powf@z+1)& (0+255),b
  4801   000636  0EFF               	movlw	255
  4802   000638  6FB6               	movwf	(powf@z+2)& (0+255),b
  4803   00063A  0E7F               	movlw	127
  4804   00063C  6FB7               	movwf	(powf@z+3)& (0+255),b
  4805   00063E  EF3F  F003         	goto	l7450
  4806   000642                     l7446:
  4807                           
  4808                           ; BSR set to: 0
  4809   000642  0101               	movlb	1	; () banked
  4810   000644  0554               	decf	powf@yisint& (0+255),w,b
  4811   000646  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4812   000648  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4813   00064A  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4814   00064C  A4D8               	btfss	status,2,c
  4815   00064E  EF2B  F003         	goto	u9891
  4816   000652  EF2D  F003         	goto	u9890
  4817   000656                     u9891:
  4818   000656  EF3F  F003         	goto	l7450
  4819   00065A                     u9890:
  4820   00065A                     
  4821                           ; BSR set to: 1
  4822   00065A  C1B4  F001         	movff	powf@z,___flneg@f1
  4823   00065E  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  4824   000662  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  4825   000666  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  4826   00066A  ECD1  F036         	call	___flneg	;wreg free
  4827   00066E  C001  F1B4         	movff	?___flneg,powf@z
  4828   000672  C002  F1B5         	movff	?___flneg+1,powf@z+1
  4829   000676  C003  F1B6         	movff	?___flneg+2,powf@z+2
  4830   00067A  C004  F1B7         	movff	?___flneg+3,powf@z+3
  4831   00067E                     l7450:
  4832   00067E  C1B4  F068         	movff	powf@z,?_powf
  4833   000682  C1B5  F069         	movff	powf@z+1,?_powf+1
  4834   000686  C1B6  F06A         	movff	powf@z+2,?_powf+2
  4835   00068A  C1B7  F06B         	movff	powf@z+3,?_powf+3
  4836   00068E  EF63  F012         	goto	l1269
  4837   000692                     l7454:
  4838                           
  4839                           ; BSR set to: 1
  4840   000692  0E00               	movlw	0
  4841   000694  6F64               	movwf	powf@sn& (0+255),b
  4842   000696  0E00               	movlw	0
  4843   000698  6F65               	movwf	(powf@sn+1)& (0+255),b
  4844   00069A  0E00               	movlw	0
  4845   00069C  6F66               	movwf	(powf@sn+2)& (0+255),b
  4846   00069E  0E00               	movlw	0
  4847   0006A0  6F67               	movwf	(powf@sn+3)& (0+255),b
  4848   0006A2                     
  4849                           ; BSR set to: 1
  4850   0006A2  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4851   0006A4  EF58  F003         	goto	u9900
  4852   0006A8  EF56  F003         	goto	u9901
  4853   0006AC                     u9901:
  4854   0006AC  EF78  F003         	goto	l7470
  4855   0006B0                     u9900:
  4856   0006B0                     
  4857                           ; BSR set to: 1
  4858   0006B0  5154               	movf	powf@yisint& (0+255),w,b
  4859   0006B2  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4860   0006B4  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4861   0006B6  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4862   0006B8  A4D8               	btfss	status,2,c
  4863   0006BA  EF61  F003         	goto	u9911
  4864   0006BE  EF63  F003         	goto	u9910
  4865   0006C2                     u9911:
  4866   0006C2  EF65  F003         	goto	l7466
  4867   0006C6                     u9910:
  4868   0006C6  EF11  F003         	goto	l7444
  4869   0006CA                     l7466:
  4870                           
  4871                           ; BSR set to: 1
  4872   0006CA  0554               	decf	powf@yisint& (0+255),w,b
  4873   0006CC  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4874   0006CE  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4875   0006D0  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4876   0006D2  A4D8               	btfss	status,2,c
  4877   0006D4  EF6E  F003         	goto	u9921
  4878   0006D8  EF70  F003         	goto	u9920
  4879   0006DC                     u9921:
  4880   0006DC  EF78  F003         	goto	l7470
  4881   0006E0                     u9920:
  4882   0006E0                     
  4883                           ; BSR set to: 1
  4884   0006E0  0E00               	movlw	0
  4885   0006E2  6F64               	movwf	powf@sn& (0+255),b
  4886   0006E4  0E00               	movlw	0
  4887   0006E6  6F65               	movwf	(powf@sn+1)& (0+255),b
  4888   0006E8  0E00               	movlw	0
  4889   0006EA  6F66               	movwf	(powf@sn+2)& (0+255),b
  4890   0006EC  0E80               	movlw	128
  4891   0006EE  6F67               	movwf	(powf@sn+3)& (0+255),b
  4892   0006F0                     l7470:
  4893                           
  4894                           ; BSR set to: 1
  4895   0006F0  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4896   0006F2  EF87  F003         	goto	u9931
  4897   0006F6  0594               	decf	powf@iy& (0+255),w,b
  4898   0006F8  0E00               	movlw	0
  4899   0006FA  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  4900   0006FC  0E00               	movlw	0
  4901   0006FE  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  4902   000700  0E4D               	movlw	77
  4903   000702  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4904   000704  A0D8               	btfss	status,0,c
  4905   000706  EF87  F003         	goto	u9931
  4906   00070A  EF89  F003         	goto	u9930
  4907   00070E                     u9931:
  4908   00070E  EF4D  F005         	goto	l7526
  4909   000712                     u9930:
  4910   000712                     
  4911                           ; BSR set to: 1
  4912   000712  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4913   000714  EF9B  F003         	goto	u9940
  4914   000718  0EF8               	movlw	248
  4915   00071A  5DAC               	subwf	powf@ix& (0+255),w,b
  4916   00071C  0EFF               	movlw	255
  4917   00071E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4918   000720  0E7F               	movlw	127
  4919   000722  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4920   000724  0E3F               	movlw	63
  4921   000726  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4922   000728  B0D8               	btfsc	status,0,c
  4923   00072A  EF99  F003         	goto	u9941
  4924   00072E  EF9B  F003         	goto	u9940
  4925   000732                     u9941:
  4926   000732  EFBC  F003         	goto	l7488
  4927   000736                     u9940:
  4928   000736                     
  4929                           ; BSR set to: 1
  4930   000736  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4931   000738  EFA2  F003         	goto	u9950
  4932   00073C  EFA0  F003         	goto	u9951
  4933   000740                     u9951:
  4934   000740  EFB1  F003         	goto	l7484
  4935   000744                     u9950:
  4936   000744                     l7476:
  4937   000744  0E00               	movlw	0
  4938   000746  0101               	movlb	1	; () banked
  4939   000748  1164               	iorwf	powf@sn& (0+255),w,b
  4940   00074A  6FB4               	movwf	powf@z& (0+255),b
  4941   00074C  0E00               	movlw	0
  4942   00074E  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  4943   000750  6FB5               	movwf	(powf@z+1)& (0+255),b
  4944   000752  0E80               	movlw	128
  4945   000754  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  4946   000756  6FB6               	movwf	(powf@z+2)& (0+255),b
  4947   000758  0E7F               	movlw	127
  4948   00075A  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  4949   00075C  6FB7               	movwf	(powf@z+3)& (0+255),b
  4950   00075E  EF3F  F003         	goto	l7450
  4951   000762                     l7484:
  4952                           
  4953                           ; BSR set to: 1
  4954   000762  0E00               	movlw	0
  4955   000764  0100               	movlb	0	; () banked
  4956   000766  6F68               	movwf	?_powf& (0+255),b
  4957   000768  0E00               	movlw	0
  4958   00076A  6F69               	movwf	(?_powf+1)& (0+255),b
  4959   00076C  0E00               	movlw	0
  4960   00076E  6F6A               	movwf	(?_powf+2)& (0+255),b
  4961   000770  0E00               	movlw	0
  4962   000772  6F6B               	movwf	(?_powf+3)& (0+255),b
  4963   000774  EF63  F012         	goto	l1269
  4964   000778                     l7488:
  4965                           
  4966                           ; BSR set to: 1
  4967   000778  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4968   00077A  EFCC  F003         	goto	u9961
  4969   00077E  0E08               	movlw	8
  4970   000780  5DAC               	subwf	powf@ix& (0+255),w,b
  4971   000782  0E00               	movlw	0
  4972   000784  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4973   000786  0E80               	movlw	128
  4974   000788  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4975   00078A  0E3F               	movlw	63
  4976   00078C  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4977   00078E  A0D8               	btfss	status,0,c
  4978   000790  EFCC  F003         	goto	u9961
  4979   000794  EFCE  F003         	goto	u9960
  4980   000798                     u9961:
  4981   000798  EFEA  F003         	goto	l7504
  4982   00079C                     u9960:
  4983   00079C                     
  4984                           ; BSR set to: 1
  4985   00079C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4986   00079E  EFDB  F003         	goto	u9971
  4987   0007A2  5187               	movf	(powf@hy+3)& (0+255),w,b
  4988   0007A4  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4989   0007A6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4990   0007A8  E108               	bnz	u9970
  4991   0007AA  0584               	decf	powf@hy& (0+255),w,b
  4992   0007AC  A0D8               	btfss	status,0,c
  4993   0007AE  EFDB  F003         	goto	u9971
  4994   0007B2  EFDD  F003         	goto	u9970
  4995   0007B6                     u9971:
  4996   0007B6  EFDF  F003         	goto	l7500
  4997   0007BA                     u9970:
  4998   0007BA  EFA2  F003         	goto	l7476
  4999   0007BE                     l7500:
  5000                           
  5001                           ; BSR set to: 1
  5002   0007BE  0E00               	movlw	0
  5003   0007C0  0100               	movlb	0	; () banked
  5004   0007C2  6F68               	movwf	?_powf& (0+255),b
  5005   0007C4  0E00               	movlw	0
  5006   0007C6  6F69               	movwf	(?_powf+1)& (0+255),b
  5007   0007C8  0E00               	movlw	0
  5008   0007CA  6F6A               	movwf	(?_powf+2)& (0+255),b
  5009   0007CC  0E00               	movlw	0
  5010   0007CE  6F6B               	movwf	(?_powf+3)& (0+255),b
  5011   0007D0  EF63  F012         	goto	l1269
  5012   0007D4                     l7504:
  5013                           
  5014                           ; BSR set to: 1
  5015   0007D4  C178  F041         	movff	powf@ax,___fladd@b
  5016   0007D8  C179  F042         	movff	powf@ax+1,___fladd@b+1
  5017   0007DC  C17A  F043         	movff	powf@ax+2,___fladd@b+2
  5018   0007E0  C17B  F044         	movff	powf@ax+3,___fladd@b+3
  5019   0007E4  0E00               	movlw	0
  5020   0007E6  6E45               	movwf	___fladd@a^0,c
  5021   0007E8  0E00               	movlw	0
  5022   0007EA  6E46               	movwf	(___fladd@a+1)^0,c
  5023   0007EC  0E80               	movlw	128
  5024   0007EE  6E47               	movwf	(___fladd@a+2)^0,c
  5025   0007F0  0EBF               	movlw	191
  5026   0007F2  6E48               	movwf	(___fladd@a+3)^0,c
  5027   0007F4  ECB3  F01D         	call	___fladd	;wreg free
  5028   0007F8  C041  F1B0         	movff	?___fladd,powf@t
  5029   0007FC  C042  F1B1         	movff	?___fladd+1,powf@t+1
  5030   000800  C043  F1B2         	movff	?___fladd+2,powf@t+2
  5031   000804  C044  F1B3         	movff	?___fladd+3,powf@t+3
  5032   000808  0E00               	movlw	0
  5033   00080A  6E13               	movwf	___flmul@a^0,c
  5034   00080C  0E00               	movlw	0
  5035   00080E  6E14               	movwf	(___flmul@a+1)^0,c
  5036   000810  0E80               	movlw	128
  5037   000812  6E15               	movwf	(___flmul@a+2)^0,c
  5038   000814  0E3E               	movlw	62
  5039   000816  6E16               	movwf	(___flmul@a+3)^0,c
  5040   000818  C1B0  F00F         	movff	powf@t,___flmul@b
  5041   00081C  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5042   000820  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5043   000824  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5044   000828  EC0E  F020         	call	___flmul	;wreg free
  5045   00082C  C00F  F055         	movff	?___flmul,___flsub@a
  5046   000830  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5047   000834  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5048   000838  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5049   00083C  0EAB               	movlw	171
  5050   00083E  6E51               	movwf	___flsub@b^0,c
  5051   000840  0EAA               	movlw	170
  5052   000842  6E52               	movwf	(___flsub@b+1)^0,c
  5053   000844  0EAA               	movlw	170
  5054   000846  6E53               	movwf	(___flsub@b+2)^0,c
  5055   000848  0E3E               	movlw	62
  5056   00084A  6E54               	movwf	(___flsub@b+3)^0,c
  5057   00084C  EC34  F036         	call	___flsub	;wreg free
  5058   000850  C051  F148         	movff	?___flsub,_powf$1839
  5059   000854  C052  F149         	movff	?___flsub+1,_powf$1839+1
  5060   000858  C053  F14A         	movff	?___flsub+2,_powf$1839+2
  5061   00085C  C054  F14B         	movff	?___flsub+3,_powf$1839+3
  5062   000860  C1B0  F013         	movff	powf@t,___flmul@a
  5063   000864  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  5064   000868  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  5065   00086C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  5066   000870  C1B0  F00F         	movff	powf@t,___flmul@b
  5067   000874  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5068   000878  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5069   00087C  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5070   000880  EC0E  F020         	call	___flmul	;wreg free
  5071   000884  C00F  F158         	movff	?___flmul,_powf$1840
  5072   000888  C010  F159         	movff	?___flmul+1,_powf$1840+1
  5073   00088C  C011  F15A         	movff	?___flmul+2,_powf$1840+2
  5074   000890  C012  F15B         	movff	?___flmul+3,_powf$1840+3
  5075   000894  C1B0  F013         	movff	powf@t,___flmul@a
  5076   000898  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  5077   00089C  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  5078   0008A0  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  5079   0008A4  C148  F00F         	movff	_powf$1839,___flmul@b
  5080   0008A8  C149  F010         	movff	_powf$1839+1,___flmul@b+1
  5081   0008AC  C14A  F011         	movff	_powf$1839+2,___flmul@b+2
  5082   0008B0  C14B  F012         	movff	_powf$1839+3,___flmul@b+3
  5083   0008B4  EC0E  F020         	call	___flmul	;wreg free
  5084   0008B8  C00F  F055         	movff	?___flmul,___flsub@a
  5085   0008BC  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5086   0008C0  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5087   0008C4  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5088   0008C8  0E00               	movlw	0
  5089   0008CA  6E51               	movwf	___flsub@b^0,c
  5090   0008CC  0E00               	movlw	0
  5091   0008CE  6E52               	movwf	(___flsub@b+1)^0,c
  5092   0008D0  0E00               	movlw	0
  5093   0008D2  6E53               	movwf	(___flsub@b+2)^0,c
  5094   0008D4  0E3F               	movlw	63
  5095   0008D6  6E54               	movwf	(___flsub@b+3)^0,c
  5096   0008D8  EC34  F036         	call	___flsub	;wreg free
  5097   0008DC  C051  F14C         	movff	?___flsub,_powf$1841
  5098   0008E0  C052  F14D         	movff	?___flsub+1,_powf$1841+1
  5099   0008E4  C053  F14E         	movff	?___flsub+2,_powf$1841+2
  5100   0008E8  C054  F14F         	movff	?___flsub+3,_powf$1841+3
  5101   0008EC  C158  F00F         	movff	_powf$1840,___flmul@b
  5102   0008F0  C159  F010         	movff	_powf$1840+1,___flmul@b+1
  5103   0008F4  C15A  F011         	movff	_powf$1840+2,___flmul@b+2
  5104   0008F8  C15B  F012         	movff	_powf$1840+3,___flmul@b+3
  5105   0008FC  C14C  F013         	movff	_powf$1841,___flmul@a
  5106   000900  C14D  F014         	movff	_powf$1841+1,___flmul@a+1
  5107   000904  C14E  F015         	movff	_powf$1841+2,___flmul@a+2
  5108   000908  C14F  F016         	movff	_powf$1841+3,___flmul@a+3
  5109   00090C  EC0E  F020         	call	___flmul	;wreg free
  5110   000910  C00F  F144         	movff	?___flmul,powf@w
  5111   000914  C010  F145         	movff	?___flmul+1,powf@w+1
  5112   000918  C011  F146         	movff	?___flmul+2,powf@w+2
  5113   00091C  C012  F147         	movff	?___flmul+3,powf@w+3
  5114   000920  C1B0  F00F         	movff	powf@t,___flmul@b
  5115   000924  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5116   000928  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5117   00092C  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5118   000930  0E00               	movlw	0
  5119   000932  6E13               	movwf	___flmul@a^0,c
  5120   000934  0EAA               	movlw	170
  5121   000936  6E14               	movwf	(___flmul@a+1)^0,c
  5122   000938  0EB8               	movlw	184
  5123   00093A  6E15               	movwf	(___flmul@a+2)^0,c
  5124   00093C  0E3F               	movlw	63
  5125   00093E  6E16               	movwf	(___flmul@a+3)^0,c
  5126   000940  EC0E  F020         	call	___flmul	;wreg free
  5127   000944  C00F  F17C         	movff	?___flmul,powf@u
  5128   000948  C010  F17D         	movff	?___flmul+1,powf@u+1
  5129   00094C  C011  F17E         	movff	?___flmul+2,powf@u+2
  5130   000950  C012  F17F         	movff	?___flmul+3,powf@u+3
  5131   000954  0E70               	movlw	112
  5132   000956  6E13               	movwf	___flmul@a^0,c
  5133   000958  0EA5               	movlw	165
  5134   00095A  6E14               	movwf	(___flmul@a+1)^0,c
  5135   00095C  0EEC               	movlw	236
  5136   00095E  6E15               	movwf	(___flmul@a+2)^0,c
  5137   000960  0E36               	movlw	54
  5138   000962  6E16               	movwf	(___flmul@a+3)^0,c
  5139   000964  C1B0  F00F         	movff	powf@t,___flmul@b
  5140   000968  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5141   00096C  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5142   000970  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5143   000974  EC0E  F020         	call	___flmul	;wreg free
  5144   000978  C00F  F051         	movff	?___flmul,___flsub@b
  5145   00097C  C010  F052         	movff	?___flmul+1,___flsub@b+1
  5146   000980  C011  F053         	movff	?___flmul+2,___flsub@b+2
  5147   000984  C012  F054         	movff	?___flmul+3,___flsub@b+3
  5148   000988  0E3B               	movlw	59
  5149   00098A  6E13               	movwf	___flmul@a^0,c
  5150   00098C  0EAA               	movlw	170
  5151   00098E  6E14               	movwf	(___flmul@a+1)^0,c
  5152   000990  0EB8               	movlw	184
  5153   000992  6E15               	movwf	(___flmul@a+2)^0,c
  5154   000994  0E3F               	movlw	63
  5155   000996  6E16               	movwf	(___flmul@a+3)^0,c
  5156   000998  C144  F00F         	movff	powf@w,___flmul@b
  5157   00099C  C145  F010         	movff	powf@w+1,___flmul@b+1
  5158   0009A0  C146  F011         	movff	powf@w+2,___flmul@b+2
  5159   0009A4  C147  F012         	movff	powf@w+3,___flmul@b+3
  5160   0009A8  EC0E  F020         	call	___flmul	;wreg free
  5161   0009AC  C00F  F055         	movff	?___flmul,___flsub@a
  5162   0009B0  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5163   0009B4  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5164   0009B8  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5165   0009BC  EC34  F036         	call	___flsub	;wreg free
  5166   0009C0  C051  F180         	movff	?___flsub,powf@v
  5167   0009C4  C052  F181         	movff	?___flsub+1,powf@v+1
  5168   0009C8  C053  F182         	movff	?___flsub+2,powf@v+2
  5169   0009CC  C054  F183         	movff	?___flsub+3,powf@v+3
  5170   0009D0  C17C  F041         	movff	powf@u,___fladd@b
  5171   0009D4  C17D  F042         	movff	powf@u+1,___fladd@b+1
  5172   0009D8  C17E  F043         	movff	powf@u+2,___fladd@b+2
  5173   0009DC  C17F  F044         	movff	powf@u+3,___fladd@b+3
  5174   0009E0  C180  F045         	movff	powf@v,___fladd@a
  5175   0009E4  C181  F046         	movff	powf@v+1,___fladd@a+1
  5176   0009E8  C182  F047         	movff	powf@v+2,___fladd@a+2
  5177   0009EC  C183  F048         	movff	powf@v+3,___fladd@a+3
  5178   0009F0  ECB3  F01D         	call	___fladd	;wreg free
  5179   0009F4  C041  F18C         	movff	?___fladd,powf@t1
  5180   0009F8  C042  F18D         	movff	?___fladd+1,powf@t1+1
  5181   0009FC  C043  F18E         	movff	?___fladd+2,powf@t1+2
  5182   000A00  C044  F18F         	movff	?___fladd+3,powf@t1+3
  5183   000A04  C18C  F198         	movff	powf@t1,powf@is
  5184   000A08  C18D  F199         	movff	powf@t1+1,powf@is+1
  5185   000A0C  C18E  F19A         	movff	powf@t1+2,powf@is+2
  5186   000A10  C18F  F19B         	movff	powf@t1+3,powf@is+3
  5187   000A14  0E00               	movlw	0
  5188   000A16  0101               	movlb	1	; () banked
  5189   000A18  1598               	andwf	powf@is& (0+255),w,b
  5190   000A1A  6F8C               	movwf	powf@t1& (0+255),b
  5191   000A1C  0EF0               	movlw	240
  5192   000A1E  1599               	andwf	(powf@is+1)& (0+255),w,b
  5193   000A20  6F8D               	movwf	(powf@t1+1)& (0+255),b
  5194   000A22  0EFF               	movlw	255
  5195   000A24  159A               	andwf	(powf@is+2)& (0+255),w,b
  5196   000A26  6F8E               	movwf	(powf@t1+2)& (0+255),b
  5197   000A28  0EFF               	movlw	255
  5198   000A2A  159B               	andwf	(powf@is+3)& (0+255),w,b
  5199   000A2C  6F8F               	movwf	(powf@t1+3)& (0+255),b
  5200   000A2E                     
  5201                           ; BSR set to: 1
  5202   000A2E  C17C  F055         	movff	powf@u,___flsub@a
  5203   000A32  C17D  F056         	movff	powf@u+1,___flsub@a+1
  5204   000A36  C17E  F057         	movff	powf@u+2,___flsub@a+2
  5205   000A3A  C17F  F058         	movff	powf@u+3,___flsub@a+3
  5206   000A3E  C18C  F051         	movff	powf@t1,___flsub@b
  5207   000A42  C18D  F052         	movff	powf@t1+1,___flsub@b+1
  5208   000A46  C18E  F053         	movff	powf@t1+2,___flsub@b+2
  5209   000A4A  C18F  F054         	movff	powf@t1+3,___flsub@b+3
  5210   000A4E  EC34  F036         	call	___flsub	;wreg free
  5211   000A52  C051  F19C         	movff	?___flsub,_powf$1842
  5212   000A56  C052  F19D         	movff	?___flsub+1,_powf$1842+1
  5213   000A5A  C053  F19E         	movff	?___flsub+2,_powf$1842+2
  5214   000A5E  C054  F19F         	movff	?___flsub+3,_powf$1842+3
  5215   000A62  C180  F051         	movff	powf@v,___flsub@b
  5216   000A66  C181  F052         	movff	powf@v+1,___flsub@b+1
  5217   000A6A  C182  F053         	movff	powf@v+2,___flsub@b+2
  5218   000A6E  C183  F054         	movff	powf@v+3,___flsub@b+3
  5219   000A72  C19C  F055         	movff	_powf$1842,___flsub@a
  5220   000A76  C19D  F056         	movff	_powf$1842+1,___flsub@a+1
  5221   000A7A  C19E  F057         	movff	_powf$1842+2,___flsub@a+2
  5222   000A7E  C19F  F058         	movff	_powf$1842+3,___flsub@a+3
  5223   000A82  EC34  F036         	call	___flsub	;wreg free
  5224   000A86  C051  F11C         	movff	?___flsub,powf@t2
  5225   000A8A  C052  F11D         	movff	?___flsub+1,powf@t2+1
  5226   000A8E  C053  F11E         	movff	?___flsub+2,powf@t2+2
  5227   000A92  C054  F11F         	movff	?___flsub+3,powf@t2+3
  5228   000A96  EF5B  F00C         	goto	l7654
  5229   000A9A                     l7526:
  5230                           
  5231                           ; BSR set to: 1
  5232   000A9A  0E00               	movlw	0
  5233   000A9C  6F88               	movwf	powf@n& (0+255),b
  5234   000A9E  0E00               	movlw	0
  5235   000AA0  6F89               	movwf	(powf@n+1)& (0+255),b
  5236   000AA2  0E00               	movlw	0
  5237   000AA4  6F8A               	movwf	(powf@n+2)& (0+255),b
  5238   000AA6  0E00               	movlw	0
  5239   000AA8  6F8B               	movwf	(powf@n+3)& (0+255),b
  5240   000AAA                     
  5241                           ; BSR set to: 1
  5242   000AAA  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  5243   000AAC  EF63  F005         	goto	u9980
  5244   000AB0  51AF               	movf	(powf@ix+3)& (0+255),w,b
  5245   000AB2  E107               	bnz	u9981
  5246   000AB4  0E80               	movlw	128
  5247   000AB6  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  5248   000AB8  B0D8               	btfsc	status,0,c
  5249   000ABA  EF61  F005         	goto	u9981
  5250   000ABE  EF63  F005         	goto	u9980
  5251   000AC2                     u9981:
  5252   000AC2  EF8E  F005         	goto	l7536
  5253   000AC6                     u9980:
  5254   000AC6                     
  5255                           ; BSR set to: 1
  5256   000AC6  C178  F00F         	movff	powf@ax,___flmul@b
  5257   000ACA  C179  F010         	movff	powf@ax+1,___flmul@b+1
  5258   000ACE  C17A  F011         	movff	powf@ax+2,___flmul@b+2
  5259   000AD2  C17B  F012         	movff	powf@ax+3,___flmul@b+3
  5260   000AD6  0E00               	movlw	0
  5261   000AD8  6E13               	movwf	___flmul@a^0,c
  5262   000ADA  0E00               	movlw	0
  5263   000ADC  6E14               	movwf	(___flmul@a+1)^0,c
  5264   000ADE  0E80               	movlw	128
  5265   000AE0  6E15               	movwf	(___flmul@a+2)^0,c
  5266   000AE2  0E4B               	movlw	75
  5267   000AE4  6E16               	movwf	(___flmul@a+3)^0,c
  5268   000AE6  EC0E  F020         	call	___flmul	;wreg free
  5269   000AEA  C00F  F178         	movff	?___flmul,powf@ax
  5270   000AEE  C010  F179         	movff	?___flmul+1,powf@ax+1
  5271   000AF2  C011  F17A         	movff	?___flmul+2,powf@ax+2
  5272   000AF6  C012  F17B         	movff	?___flmul+3,powf@ax+3
  5273   000AFA  0EE8               	movlw	232
  5274   000AFC  0101               	movlb	1	; () banked
  5275   000AFE  2788               	addwf	powf@n& (0+255),f,b
  5276   000B00  0EFF               	movlw	255
  5277   000B02  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5278   000B04  0EFF               	movlw	255
  5279   000B06  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5280   000B08  0EFF               	movlw	255
  5281   000B0A  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5282   000B0C                     
  5283                           ; BSR set to: 1
  5284   000B0C  C178  F1AC         	movff	powf@ax,powf@ix
  5285   000B10  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  5286   000B14  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  5287   000B18  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  5288   000B1C                     l7536:
  5289                           
  5290                           ; BSR set to: 1
  5291   000B1C  0E17               	movlw	23
  5292   000B1E  0100               	movlb	0	; () banked
  5293   000B20  6F70               	movwf	??_powf& (0+255),b
  5294   000B22  C1AC  F071         	movff	powf@ix,??_powf+1
  5295   000B26  C1AD  F072         	movff	powf@ix+1,??_powf+2
  5296   000B2A  C1AE  F073         	movff	powf@ix+2,??_powf+3
  5297   000B2E  C1AF  F074         	movff	powf@ix+3,??_powf+4
  5298   000B32                     u9995:
  5299   000B32  6770               	tstfsz	??_powf& (0+255),b
  5300   000B34  EF9E  F005         	goto	u9996
  5301   000B38  EFA6  F005         	goto	u9997
  5302   000B3C                     u9996:
  5303   000B3C  3574               	rlcf	(??_powf+4)& (0+255),w,b
  5304   000B3E  3374               	rrcf	(??_powf+4)& (0+255),f,b
  5305   000B40  3373               	rrcf	(??_powf+3)& (0+255),f,b
  5306   000B42  3372               	rrcf	(??_powf+2)& (0+255),f,b
  5307   000B44  3371               	rrcf	(??_powf+1)& (0+255),f,b
  5308   000B46  2F70               	decfsz	??_powf& (0+255),f,b
  5309   000B48  EF99  F005         	goto	u9995
  5310   000B4C                     u9997:
  5311   000B4C  0E81               	movlw	129
  5312   000B4E  0100               	movlb	0	; () banked
  5313   000B50  2571               	addwf	(??_powf+1)& (0+255),w,b
  5314   000B52  6F75               	movwf	(??_powf+5)& (0+255),b
  5315   000B54  0EFF               	movlw	255
  5316   000B56  2172               	addwfc	(??_powf+2)& (0+255),w,b
  5317   000B58  6F76               	movwf	(??_powf+6)& (0+255),b
  5318   000B5A  0EFF               	movlw	255
  5319   000B5C  2173               	addwfc	(??_powf+3)& (0+255),w,b
  5320   000B5E  6F77               	movwf	(??_powf+7)& (0+255),b
  5321   000B60  0EFF               	movlw	255
  5322   000B62  2174               	addwfc	(??_powf+4)& (0+255),w,b
  5323   000B64  6F78               	movwf	(??_powf+8)& (0+255),b
  5324   000B66  5175               	movf	(??_powf+5)& (0+255),w,b
  5325   000B68  0101               	movlb	1	; () banked
  5326   000B6A  2788               	addwf	powf@n& (0+255),f,b
  5327   000B6C  0100               	movlb	0	; () banked
  5328   000B6E  5176               	movf	(??_powf+6)& (0+255),w,b
  5329   000B70  0101               	movlb	1	; () banked
  5330   000B72  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5331   000B74  0100               	movlb	0	; () banked
  5332   000B76  5177               	movf	(??_powf+7)& (0+255),w,b
  5333   000B78  0101               	movlb	1	; () banked
  5334   000B7A  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5335   000B7C  0100               	movlb	0	; () banked
  5336   000B7E  5178               	movf	(??_powf+8)& (0+255),w,b
  5337   000B80  0101               	movlb	1	; () banked
  5338   000B82  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5339   000B84                     
  5340                           ; BSR set to: 1
  5341   000B84  0EFF               	movlw	255
  5342   000B86  15AC               	andwf	powf@ix& (0+255),w,b
  5343   000B88  6FA8               	movwf	powf@j& (0+255),b
  5344   000B8A  0EFF               	movlw	255
  5345   000B8C  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  5346   000B8E  6FA9               	movwf	(powf@j+1)& (0+255),b
  5347   000B90  0E7F               	movlw	127
  5348   000B92  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  5349   000B94  6FAA               	movwf	(powf@j+2)& (0+255),b
  5350   000B96  0E00               	movlw	0
  5351   000B98  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  5352   000B9A  6FAB               	movwf	(powf@j+3)& (0+255),b
  5353   000B9C                     
  5354                           ; BSR set to: 1
  5355   000B9C  0E00               	movlw	0
  5356   000B9E  6FA4               	movwf	powf@k& (0+255),b
  5357   000BA0  0E00               	movlw	0
  5358   000BA2  6FA5               	movwf	(powf@k+1)& (0+255),b
  5359   000BA4  0E00               	movlw	0
  5360   000BA6  6FA6               	movwf	(powf@k+2)& (0+255),b
  5361   000BA8  0E00               	movlw	0
  5362   000BAA  6FA7               	movwf	(powf@k+3)& (0+255),b
  5363   000BAC                     
  5364                           ; BSR set to: 1
  5365   000BAC  0E00               	movlw	0
  5366   000BAE  11A8               	iorwf	powf@j& (0+255),w,b
  5367   000BB0  6FAC               	movwf	powf@ix& (0+255),b
  5368   000BB2  0E00               	movlw	0
  5369   000BB4  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  5370   000BB6  6FAD               	movwf	(powf@ix+1)& (0+255),b
  5371   000BB8  0E80               	movlw	128
  5372   000BBA  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  5373   000BBC  6FAE               	movwf	(powf@ix+2)& (0+255),b
  5374   000BBE  0E3F               	movlw	63
  5375   000BC0  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  5376   000BC2  6FAF               	movwf	(powf@ix+3)& (0+255),b
  5377   000BC4                     
  5378                           ; BSR set to: 1
  5379   000BC4  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5380   000BC6  EFF4  F005         	goto	u10000
  5381   000BCA  51AB               	movf	(powf@j+3)& (0+255),w,b
  5382   000BCC  E10B               	bnz	u10001
  5383   000BCE  0E72               	movlw	114
  5384   000BD0  5DA8               	subwf	powf@j& (0+255),w,b
  5385   000BD2  0EC4               	movlw	196
  5386   000BD4  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5387   000BD6  0E1C               	movlw	28
  5388   000BD8  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5389   000BDA  B0D8               	btfsc	status,0,c
  5390   000BDC  EFF2  F005         	goto	u10001
  5391   000BE0  EFF4  F005         	goto	u10000
  5392   000BE4                     u10001:
  5393   000BE4  EFF6  F005         	goto	l7548
  5394   000BE8                     u10000:
  5395   000BE8  EF20  F006         	goto	l7554
  5396   000BEC                     l7548:
  5397                           
  5398                           ; BSR set to: 1
  5399   000BEC  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5400   000BEE  EF08  F006         	goto	u10010
  5401   000BF2  51AB               	movf	(powf@j+3)& (0+255),w,b
  5402   000BF4  E10B               	bnz	u10011
  5403   000BF6  0ED7               	movlw	215
  5404   000BF8  5DA8               	subwf	powf@j& (0+255),w,b
  5405   000BFA  0EB3               	movlw	179
  5406   000BFC  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5407   000BFE  0E5D               	movlw	93
  5408   000C00  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5409   000C02  B0D8               	btfsc	status,0,c
  5410   000C04  EF06  F006         	goto	u10011
  5411   000C08  EF08  F006         	goto	u10010
  5412   000C0C                     u10011:
  5413   000C0C  EF12  F006         	goto	l7552
  5414   000C10                     u10010:
  5415   000C10                     
  5416                           ; BSR set to: 1
  5417   000C10  0E01               	movlw	1
  5418   000C12  6FA4               	movwf	powf@k& (0+255),b
  5419   000C14  0E00               	movlw	0
  5420   000C16  6FA5               	movwf	(powf@k+1)& (0+255),b
  5421   000C18  0E00               	movlw	0
  5422   000C1A  6FA6               	movwf	(powf@k+2)& (0+255),b
  5423   000C1C  0E00               	movlw	0
  5424   000C1E  6FA7               	movwf	(powf@k+3)& (0+255),b
  5425   000C20  EF20  F006         	goto	l7554
  5426   000C24                     l7552:
  5427                           
  5428                           ; BSR set to: 1
  5429   000C24  0E01               	movlw	1
  5430   000C26  2788               	addwf	powf@n& (0+255),f,b
  5431   000C28  0E00               	movlw	0
  5432   000C2A  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5433   000C2C  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5434   000C2E  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5435   000C30  0E00               	movlw	0
  5436   000C32  27AC               	addwf	powf@ix& (0+255),f,b
  5437   000C34  0E00               	movlw	0
  5438   000C36  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  5439   000C38  0E80               	movlw	128
  5440   000C3A  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  5441   000C3C  0EFF               	movlw	255
  5442   000C3E  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  5443   000C40                     l7554:
  5444                           
  5445                           ; BSR set to: 1
  5446   000C40  C1AC  F178         	movff	powf@ix,powf@ax
  5447   000C44  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  5448   000C48  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  5449   000C4C  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  5450   000C50                     
  5451                           ; BSR set to: 1
  5452   000C50  C178  F051         	movff	powf@ax,___flsub@b
  5453   000C54  C179  F052         	movff	powf@ax+1,___flsub@b+1
  5454   000C58  C17A  F053         	movff	powf@ax+2,___flsub@b+2
  5455   000C5C  C17B  F054         	movff	powf@ax+3,___flsub@b+3
  5456   000C60  C1A4  F070         	movff	powf@k,??_powf
  5457   000C64  C1A5  F071         	movff	powf@k+1,??_powf+1
  5458   000C68  0100               	movlb	0	; () banked
  5459   000C6A  90D8               	bcf	status,0,c
  5460   000C6C  3770               	rlcf	??_powf& (0+255),f,b
  5461   000C6E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5462   000C70  90D8               	bcf	status,0,c
  5463   000C72  3770               	rlcf	??_powf& (0+255),f,b
  5464   000C74  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5465   000C76  0E6D               	movlw	low _bp
  5466   000C78  2570               	addwf	??_powf& (0+255),w,b
  5467   000C7A  6EF6               	movwf	tblptrl,c
  5468   000C7C  0E7E               	movlw	high _bp
  5469   000C7E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5470   000C80  6EF7               	movwf	tblptrh,c
  5471   000C82                     	if	0	;There are less than 3 active tblptr bytes
  5472   000C82                     	endif
  5473   000C82  0009               	tblrd		*+
  5474   000C84  CFF5 F055          	movff	tablat,___flsub@a
  5475   000C88  0009               	tblrd		*+
  5476   000C8A  CFF5 F056          	movff	tablat,___flsub@a+1
  5477   000C8E  0009               	tblrd		*+
  5478   000C90  CFF5 F057          	movff	tablat,___flsub@a+2
  5479   000C94  000A               	tblrd		*-
  5480   000C96  CFF5 F058          	movff	tablat,___flsub@a+3
  5481   000C9A  EC34  F036         	call	___flsub	;wreg free
  5482   000C9E  C051  F17C         	movff	?___flsub,powf@u
  5483   000CA2  C052  F17D         	movff	?___flsub+1,powf@u+1
  5484   000CA6  C053  F17E         	movff	?___flsub+2,powf@u+2
  5485   000CAA  C054  F17F         	movff	?___flsub+3,powf@u+3
  5486   000CAE  0E00               	movlw	0
  5487   000CB0  6E28               	movwf	___fldiv@b^0,c
  5488   000CB2  0E00               	movlw	0
  5489   000CB4  6E29               	movwf	(___fldiv@b+1)^0,c
  5490   000CB6  0E80               	movlw	128
  5491   000CB8  6E2A               	movwf	(___fldiv@b+2)^0,c
  5492   000CBA  0E3F               	movlw	63
  5493   000CBC  6E2B               	movwf	(___fldiv@b+3)^0,c
  5494   000CBE  C178  F045         	movff	powf@ax,___fladd@a
  5495   000CC2  C179  F046         	movff	powf@ax+1,___fladd@a+1
  5496   000CC6  C17A  F047         	movff	powf@ax+2,___fladd@a+2
  5497   000CCA  C17B  F048         	movff	powf@ax+3,___fladd@a+3
  5498   000CCE  C1A4  F070         	movff	powf@k,??_powf
  5499   000CD2  C1A5  F071         	movff	powf@k+1,??_powf+1
  5500   000CD6  0100               	movlb	0	; () banked
  5501   000CD8  90D8               	bcf	status,0,c
  5502   000CDA  3770               	rlcf	??_powf& (0+255),f,b
  5503   000CDC  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5504   000CDE  90D8               	bcf	status,0,c
  5505   000CE0  3770               	rlcf	??_powf& (0+255),f,b
  5506   000CE2  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5507   000CE4  0E6D               	movlw	low _bp
  5508   000CE6  2570               	addwf	??_powf& (0+255),w,b
  5509   000CE8  6EF6               	movwf	tblptrl,c
  5510   000CEA  0E7E               	movlw	high _bp
  5511   000CEC  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5512   000CEE  6EF7               	movwf	tblptrh,c
  5513   000CF0                     	if	0	;There are less than 3 active tblptr bytes
  5514   000CF0                     	endif
  5515   000CF0  0009               	tblrd		*+
  5516   000CF2  CFF5 F041          	movff	tablat,___fladd@b
  5517   000CF6  0009               	tblrd		*+
  5518   000CF8  CFF5 F042          	movff	tablat,___fladd@b+1
  5519   000CFC  0009               	tblrd		*+
  5520   000CFE  CFF5 F043          	movff	tablat,___fladd@b+2
  5521   000D02  000A               	tblrd		*-
  5522   000D04  CFF5 F044          	movff	tablat,___fladd@b+3
  5523   000D08  ECB3  F01D         	call	___fladd	;wreg free
  5524   000D0C  C041  F02C         	movff	?___fladd,___fldiv@a
  5525   000D10  C042  F02D         	movff	?___fladd+1,___fldiv@a+1
  5526   000D14  C043  F02E         	movff	?___fladd+2,___fldiv@a+2
  5527   000D18  C044  F02F         	movff	?___fladd+3,___fldiv@a+3
  5528   000D1C  EC10  F024         	call	___fldiv	;wreg free
  5529   000D20  C028  F180         	movff	?___fldiv,powf@v
  5530   000D24  C029  F181         	movff	?___fldiv+1,powf@v+1
  5531   000D28  C02A  F182         	movff	?___fldiv+2,powf@v+2
  5532   000D2C  C02B  F183         	movff	?___fldiv+3,powf@v+3
  5533   000D30  C17C  F00F         	movff	powf@u,___flmul@b
  5534   000D34  C17D  F010         	movff	powf@u+1,___flmul@b+1
  5535   000D38  C17E  F011         	movff	powf@u+2,___flmul@b+2
  5536   000D3C  C17F  F012         	movff	powf@u+3,___flmul@b+3
  5537   000D40  C180  F013         	movff	powf@v,___flmul@a
  5538   000D44  C181  F014         	movff	powf@v+1,___flmul@a+1
  5539   000D48  C182  F015         	movff	powf@v+2,___flmul@a+2
  5540   000D4C  C183  F016         	movff	powf@v+3,___flmul@a+3
  5541   000D50  EC0E  F020         	call	___flmul	;wreg free
  5542   000D54  C00F  F160         	movff	?___flmul,powf@s
  5543   000D58  C010  F161         	movff	?___flmul+1,powf@s+1
  5544   000D5C  C011  F162         	movff	?___flmul+2,powf@s+2
  5545   000D60  C012  F163         	movff	?___flmul+3,powf@s+3
  5546   000D64  C160  F174         	movff	powf@s,powf@s_h
  5547   000D68  C161  F175         	movff	powf@s+1,powf@s_h+1
  5548   000D6C  C162  F176         	movff	powf@s+2,powf@s_h+2
  5549   000D70  C163  F177         	movff	powf@s+3,powf@s_h+3
  5550   000D74  C174  F198         	movff	powf@s_h,powf@is
  5551   000D78  C175  F199         	movff	powf@s_h+1,powf@is+1
  5552   000D7C  C176  F19A         	movff	powf@s_h+2,powf@is+2
  5553   000D80  C177  F19B         	movff	powf@s_h+3,powf@is+3
  5554   000D84  0E00               	movlw	0
  5555   000D86  0101               	movlb	1	; () banked
  5556   000D88  1598               	andwf	powf@is& (0+255),w,b
  5557   000D8A  6F74               	movwf	powf@s_h& (0+255),b
  5558   000D8C  0EF0               	movlw	240
  5559   000D8E  1599               	andwf	(powf@is+1)& (0+255),w,b
  5560   000D90  6F75               	movwf	(powf@s_h+1)& (0+255),b
  5561   000D92  0EFF               	movlw	255
  5562   000D94  159A               	andwf	(powf@is+2)& (0+255),w,b
  5563   000D96  6F76               	movwf	(powf@s_h+2)& (0+255),b
  5564   000D98  0EFF               	movlw	255
  5565   000D9A  159B               	andwf	(powf@is+3)& (0+255),w,b
  5566   000D9C  6F77               	movwf	(powf@s_h+3)& (0+255),b
  5567   000D9E                     
  5568                           ; BSR set to: 1
  5569   000D9E  C1AC  F070         	movff	powf@ix,??_powf
  5570   000DA2  C1AD  F071         	movff	powf@ix+1,??_powf+1
  5571   000DA6  C1AE  F072         	movff	powf@ix+2,??_powf+2
  5572   000DAA  C1AF  F073         	movff	powf@ix+3,??_powf+3
  5573   000DAE  0100               	movlb	0	; () banked
  5574   000DB0  3573               	rlcf	(??_powf+3)& (0+255),w,b
  5575   000DB2  3373               	rrcf	(??_powf+3)& (0+255),f,b
  5576   000DB4  3372               	rrcf	(??_powf+2)& (0+255),f,b
  5577   000DB6  3371               	rrcf	(??_powf+1)& (0+255),f,b
  5578   000DB8  3370               	rrcf	??_powf& (0+255),f,b
  5579   000DBA  0E00               	movlw	0
  5580   000DBC  1570               	andwf	??_powf& (0+255),w,b
  5581   000DBE  6F74               	movwf	(??_powf+4)& (0+255),b
  5582   000DC0  0EF0               	movlw	240
  5583   000DC2  1571               	andwf	(??_powf+1)& (0+255),w,b
  5584   000DC4  6F75               	movwf	(??_powf+5)& (0+255),b
  5585   000DC6  0EFF               	movlw	255
  5586   000DC8  1572               	andwf	(??_powf+2)& (0+255),w,b
  5587   000DCA  6F76               	movwf	(??_powf+6)& (0+255),b
  5588   000DCC  0EFF               	movlw	255
  5589   000DCE  1573               	andwf	(??_powf+3)& (0+255),w,b
  5590   000DD0  6F77               	movwf	(??_powf+7)& (0+255),b
  5591   000DD2  0E00               	movlw	0
  5592   000DD4  1174               	iorwf	(??_powf+4)& (0+255),w,b
  5593   000DD6  0101               	movlb	1	; () banked
  5594   000DD8  6F98               	movwf	powf@is& (0+255),b
  5595   000DDA  0E00               	movlw	0
  5596   000DDC  0100               	movlb	0	; () banked
  5597   000DDE  1175               	iorwf	(??_powf+5)& (0+255),w,b
  5598   000DE0  0101               	movlb	1	; () banked
  5599   000DE2  6F99               	movwf	(powf@is+1)& (0+255),b
  5600   000DE4  0E00               	movlw	0
  5601   000DE6  0100               	movlb	0	; () banked
  5602   000DE8  1176               	iorwf	(??_powf+6)& (0+255),w,b
  5603   000DEA  0101               	movlb	1	; () banked
  5604   000DEC  6F9A               	movwf	(powf@is+2)& (0+255),b
  5605   000DEE  0E20               	movlw	32
  5606   000DF0  0100               	movlb	0	; () banked
  5607   000DF2  1177               	iorwf	(??_powf+7)& (0+255),w,b
  5608   000DF4  0101               	movlb	1	; () banked
  5609   000DF6  6F9B               	movwf	(powf@is+3)& (0+255),b
  5610   000DF8                     
  5611                           ; BSR set to: 1
  5612   000DF8  C1A4  F070         	movff	powf@k,??_powf
  5613   000DFC  C1A5  F071         	movff	powf@k+1,??_powf+1
  5614   000E00  C1A6  F072         	movff	powf@k+2,??_powf+2
  5615   000E04  C1A7  F073         	movff	powf@k+3,??_powf+3
  5616   000E08  0E15               	movlw	21
  5617   000E0A                     u10025:
  5618   000E0A  90D8               	bcf	status,0,c
  5619   000E0C  0100               	movlb	0	; () banked
  5620   000E0E  3770               	rlcf	??_powf& (0+255),f,b
  5621   000E10  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5622   000E12  3772               	rlcf	(??_powf+2)& (0+255),f,b
  5623   000E14  3773               	rlcf	(??_powf+3)& (0+255),f,b
  5624   000E16  2EE8               	decfsz	wreg,f,c
  5625   000E18  EF05  F007         	goto	u10025
  5626   000E1C  0101               	movlb	1	; () banked
  5627   000E1E  5198               	movf	powf@is& (0+255),w,b
  5628   000E20  0100               	movlb	0	; () banked
  5629   000E22  2570               	addwf	??_powf& (0+255),w,b
  5630   000E24  6F74               	movwf	(??_powf+4)& (0+255),b
  5631   000E26  0101               	movlb	1	; () banked
  5632   000E28  5199               	movf	(powf@is+1)& (0+255),w,b
  5633   000E2A  0100               	movlb	0	; () banked
  5634   000E2C  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5635   000E2E  6F75               	movwf	(??_powf+5)& (0+255),b
  5636   000E30  0101               	movlb	1	; () banked
  5637   000E32  519A               	movf	(powf@is+2)& (0+255),w,b
  5638   000E34  0100               	movlb	0	; () banked
  5639   000E36  2172               	addwfc	(??_powf+2)& (0+255),w,b
  5640   000E38  6F76               	movwf	(??_powf+6)& (0+255),b
  5641   000E3A  0101               	movlb	1	; () banked
  5642   000E3C  519B               	movf	(powf@is+3)& (0+255),w,b
  5643   000E3E  0100               	movlb	0	; () banked
  5644   000E40  2173               	addwfc	(??_powf+3)& (0+255),w,b
  5645   000E42  6F77               	movwf	(??_powf+7)& (0+255),b
  5646   000E44  0E00               	movlw	0
  5647   000E46  2574               	addwf	(??_powf+4)& (0+255),w,b
  5648   000E48  0101               	movlb	1	; () banked
  5649   000E4A  6F70               	movwf	powf@t_h& (0+255),b
  5650   000E4C  0E00               	movlw	0
  5651   000E4E  0100               	movlb	0	; () banked
  5652   000E50  2175               	addwfc	(??_powf+5)& (0+255),w,b
  5653   000E52  0101               	movlb	1	; () banked
  5654   000E54  6F71               	movwf	(powf@t_h+1)& (0+255),b
  5655   000E56  0E40               	movlw	64
  5656   000E58  0100               	movlb	0	; () banked
  5657   000E5A  2176               	addwfc	(??_powf+6)& (0+255),w,b
  5658   000E5C  0101               	movlb	1	; () banked
  5659   000E5E  6F72               	movwf	(powf@t_h+2)& (0+255),b
  5660   000E60  0E00               	movlw	0
  5661   000E62  0100               	movlb	0	; () banked
  5662   000E64  2177               	addwfc	(??_powf+7)& (0+255),w,b
  5663   000E66  0101               	movlb	1	; () banked
  5664   000E68  6F73               	movwf	(powf@t_h+3)& (0+255),b
  5665   000E6A                     
  5666                           ; BSR set to: 1
  5667   000E6A  C1A4  F070         	movff	powf@k,??_powf
  5668   000E6E  C1A5  F071         	movff	powf@k+1,??_powf+1
  5669   000E72  0100               	movlb	0	; () banked
  5670   000E74  90D8               	bcf	status,0,c
  5671   000E76  3770               	rlcf	??_powf& (0+255),f,b
  5672   000E78  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5673   000E7A  90D8               	bcf	status,0,c
  5674   000E7C  3770               	rlcf	??_powf& (0+255),f,b
  5675   000E7E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5676   000E80  0E6D               	movlw	low _bp
  5677   000E82  2570               	addwf	??_powf& (0+255),w,b
  5678   000E84  6EF6               	movwf	tblptrl,c
  5679   000E86  0E7E               	movlw	high _bp
  5680   000E88  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5681   000E8A  6EF7               	movwf	tblptrh,c
  5682   000E8C                     	if	0	;There are less than 3 active tblptr bytes
  5683   000E8C                     	endif
  5684   000E8C  0009               	tblrd		*+
  5685   000E8E  CFF5 F055          	movff	tablat,___flsub@a
  5686   000E92  0009               	tblrd		*+
  5687   000E94  CFF5 F056          	movff	tablat,___flsub@a+1
  5688   000E98  0009               	tblrd		*+
  5689   000E9A  CFF5 F057          	movff	tablat,___flsub@a+2
  5690   000E9E  000A               	tblrd		*-
  5691   000EA0  CFF5 F058          	movff	tablat,___flsub@a+3
  5692   000EA4  C170  F051         	movff	powf@t_h,___flsub@b
  5693   000EA8  C171  F052         	movff	powf@t_h+1,___flsub@b+1
  5694   000EAC  C172  F053         	movff	powf@t_h+2,___flsub@b+2
  5695   000EB0  C173  F054         	movff	powf@t_h+3,___flsub@b+3
  5696   000EB4  EC34  F036         	call	___flsub	;wreg free
  5697   000EB8  C051  F19C         	movff	?___flsub,_powf$1842
  5698   000EBC  C052  F19D         	movff	?___flsub+1,_powf$1842+1
  5699   000EC0  C053  F19E         	movff	?___flsub+2,_powf$1842+2
  5700   000EC4  C054  F19F         	movff	?___flsub+3,_powf$1842+3
  5701   000EC8  C178  F051         	movff	powf@ax,___flsub@b
  5702   000ECC  C179  F052         	movff	powf@ax+1,___flsub@b+1
  5703   000ED0  C17A  F053         	movff	powf@ax+2,___flsub@b+2
  5704   000ED4  C17B  F054         	movff	powf@ax+3,___flsub@b+3
  5705   000ED8  C19C  F055         	movff	_powf$1842,___flsub@a
  5706   000EDC  C19D  F056         	movff	_powf$1842+1,___flsub@a+1
  5707   000EE0  C19E  F057         	movff	_powf$1842+2,___flsub@a+2
  5708   000EE4  C19F  F058         	movff	_powf$1842+3,___flsub@a+3
  5709   000EE8  EC34  F036         	call	___flsub	;wreg free
  5710   000EEC  C051  F134         	movff	?___flsub,powf@t_l
  5711   000EF0  C052  F135         	movff	?___flsub+1,powf@t_l+1
  5712   000EF4  C053  F136         	movff	?___flsub+2,powf@t_l+2
  5713   000EF8  C054  F137         	movff	?___flsub+3,powf@t_l+3
  5714   000EFC  C170  F013         	movff	powf@t_h,___flmul@a
  5715   000F00  C171  F014         	movff	powf@t_h+1,___flmul@a+1
  5716   000F04  C172  F015         	movff	powf@t_h+2,___flmul@a+2
  5717   000F08  C173  F016         	movff	powf@t_h+3,___flmul@a+3
  5718   000F0C  C174  F00F         	movff	powf@s_h,___flmul@b
  5719   000F10  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5720   000F14  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5721   000F18  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5722   000F1C  EC0E  F020         	call	___flmul	;wreg free
  5723   000F20  C00F  F055         	movff	?___flmul,___flsub@a
  5724   000F24  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5725   000F28  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5726   000F2C  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5727   000F30  C17C  F051         	movff	powf@u,___flsub@b
  5728   000F34  C17D  F052         	movff	powf@u+1,___flsub@b+1
  5729   000F38  C17E  F053         	movff	powf@u+2,___flsub@b+2
  5730   000F3C  C17F  F054         	movff	powf@u+3,___flsub@b+3
  5731   000F40  EC34  F036         	call	___flsub	;wreg free
  5732   000F44  C051  F19C         	movff	?___flsub,_powf$1842
  5733   000F48  C052  F19D         	movff	?___flsub+1,_powf$1842+1
  5734   000F4C  C053  F19E         	movff	?___flsub+2,_powf$1842+2
  5735   000F50  C054  F19F         	movff	?___flsub+3,_powf$1842+3
  5736   000F54  C134  F013         	movff	powf@t_l,___flmul@a
  5737   000F58  C135  F014         	movff	powf@t_l+1,___flmul@a+1
  5738   000F5C  C136  F015         	movff	powf@t_l+2,___flmul@a+2
  5739   000F60  C137  F016         	movff	powf@t_l+3,___flmul@a+3
  5740   000F64  C174  F00F         	movff	powf@s_h,___flmul@b
  5741   000F68  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5742   000F6C  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5743   000F70  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5744   000F74  EC0E  F020         	call	___flmul	;wreg free
  5745   000F78  C00F  F055         	movff	?___flmul,___flsub@a
  5746   000F7C  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5747   000F80  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5748   000F84  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5749   000F88  C19C  F051         	movff	_powf$1842,___flsub@b
  5750   000F8C  C19D  F052         	movff	_powf$1842+1,___flsub@b+1
  5751   000F90  C19E  F053         	movff	_powf$1842+2,___flsub@b+2
  5752   000F94  C19F  F054         	movff	_powf$1842+3,___flsub@b+3
  5753   000F98  EC34  F036         	call	___flsub	;wreg free
  5754   000F9C  C051  F158         	movff	?___flsub,_powf$1840
  5755   000FA0  C052  F159         	movff	?___flsub+1,_powf$1840+1
  5756   000FA4  C053  F15A         	movff	?___flsub+2,_powf$1840+2
  5757   000FA8  C054  F15B         	movff	?___flsub+3,_powf$1840+3
  5758   000FAC  C158  F00F         	movff	_powf$1840,___flmul@b
  5759   000FB0  C159  F010         	movff	_powf$1840+1,___flmul@b+1
  5760   000FB4  C15A  F011         	movff	_powf$1840+2,___flmul@b+2
  5761   000FB8  C15B  F012         	movff	_powf$1840+3,___flmul@b+3
  5762   000FBC  C180  F013         	movff	powf@v,___flmul@a
  5763   000FC0  C181  F014         	movff	powf@v+1,___flmul@a+1
  5764   000FC4  C182  F015         	movff	powf@v+2,___flmul@a+2
  5765   000FC8  C183  F016         	movff	powf@v+3,___flmul@a+3
  5766   000FCC  EC0E  F020         	call	___flmul	;wreg free
  5767   000FD0  C00F  F130         	movff	?___flmul,powf@s_l
  5768   000FD4  C010  F131         	movff	?___flmul+1,powf@s_l+1
  5769   000FD8  C011  F132         	movff	?___flmul+2,powf@s_l+2
  5770   000FDC  C012  F133         	movff	?___flmul+3,powf@s_l+3
  5771   000FE0  C160  F00F         	movff	powf@s,___flmul@b
  5772   000FE4  C161  F010         	movff	powf@s+1,___flmul@b+1
  5773   000FE8  C162  F011         	movff	powf@s+2,___flmul@b+2
  5774   000FEC  C163  F012         	movff	powf@s+3,___flmul@b+3
  5775   000FF0  C160  F013         	movff	powf@s,___flmul@a
  5776   000FF4  C161  F014         	movff	powf@s+1,___flmul@a+1
  5777   000FF8  C162  F015         	movff	powf@s+2,___flmul@a+2
  5778   000FFC  C163  F016         	movff	powf@s+3,___flmul@a+3
  5779   001000  EC0E  F020         	call	___flmul	;wreg free
  5780   001004  C00F  F190         	movff	?___flmul,powf@s2
  5781   001008  C010  F191         	movff	?___flmul+1,powf@s2+1
  5782   00100C  C011  F192         	movff	?___flmul+2,powf@s2+2
  5783   001010  C012  F193         	movff	?___flmul+3,powf@s2+3
  5784   001014  0E55               	movlw	85
  5785   001016  6E45               	movwf	___fladd@a^0,c
  5786   001018  0E32               	movlw	50
  5787   00101A  6E46               	movwf	(___fladd@a+1)^0,c
  5788   00101C  0E6C               	movlw	108
  5789   00101E  6E47               	movwf	(___fladd@a+2)^0,c
  5790   001020  0E3E               	movlw	62
  5791   001022  6E48               	movwf	(___fladd@a+3)^0,c
  5792   001024  0E42               	movlw	66
  5793   001026  6E13               	movwf	___flmul@a^0,c
  5794   001028  0EF1               	movlw	241
  5795   00102A  6E14               	movwf	(___flmul@a+1)^0,c
  5796   00102C  0E53               	movlw	83
  5797   00102E  6E15               	movwf	(___flmul@a+2)^0,c
  5798   001030  0E3E               	movlw	62
  5799   001032  6E16               	movwf	(___flmul@a+3)^0,c
  5800   001034  C190  F00F         	movff	powf@s2,___flmul@b
  5801   001038  C191  F010         	movff	powf@s2+1,___flmul@b+1
  5802   00103C  C192  F011         	movff	powf@s2+2,___flmul@b+2
  5803   001040  C193  F012         	movff	powf@s2+3,___flmul@b+3
  5804   001044  EC0E  F020         	call	___flmul	;wreg free
  5805   001048  C00F  F041         	movff	?___flmul,___fladd@b
  5806   00104C  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5807   001050  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5808   001054  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5809   001058  ECB3  F01D         	call	___fladd	;wreg free
  5810   00105C  C041  F148         	movff	?___fladd,_powf$1839
  5811   001060  C042  F149         	movff	?___fladd+1,_powf$1839+1
  5812   001064  C043  F14A         	movff	?___fladd+2,_powf$1839+2
  5813   001068  C044  F14B         	movff	?___fladd+3,_powf$1839+3
  5814   00106C  0E05               	movlw	5
  5815   00106E  6E45               	movwf	___fladd@a^0,c
  5816   001070  0EA3               	movlw	163
  5817   001072  6E46               	movwf	(___fladd@a+1)^0,c
  5818   001074  0E8B               	movlw	139
  5819   001076  6E47               	movwf	(___fladd@a+2)^0,c
  5820   001078  0E3E               	movlw	62
  5821   00107A  6E48               	movwf	(___fladd@a+3)^0,c
  5822   00107C  C190  F013         	movff	powf@s2,___flmul@a
  5823   001080  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5824   001084  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5825   001088  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5826   00108C  C148  F00F         	movff	_powf$1839,___flmul@b
  5827   001090  C149  F010         	movff	_powf$1839+1,___flmul@b+1
  5828   001094  C14A  F011         	movff	_powf$1839+2,___flmul@b+2
  5829   001098  C14B  F012         	movff	_powf$1839+3,___flmul@b+3
  5830   00109C  EC0E  F020         	call	___flmul	;wreg free
  5831   0010A0  C00F  F041         	movff	?___flmul,___fladd@b
  5832   0010A4  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5833   0010A8  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5834   0010AC  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5835   0010B0  ECB3  F01D         	call	___fladd	;wreg free
  5836   0010B4  C041  F158         	movff	?___fladd,_powf$1840
  5837   0010B8  C042  F159         	movff	?___fladd+1,_powf$1840+1
  5838   0010BC  C043  F15A         	movff	?___fladd+2,_powf$1840+2
  5839   0010C0  C044  F15B         	movff	?___fladd+3,_powf$1840+3
  5840   0010C4  0EAB               	movlw	171
  5841   0010C6  6E45               	movwf	___fladd@a^0,c
  5842   0010C8  0EAA               	movlw	170
  5843   0010CA  6E46               	movwf	(___fladd@a+1)^0,c
  5844   0010CC  0EAA               	movlw	170
  5845   0010CE  6E47               	movwf	(___fladd@a+2)^0,c
  5846   0010D0  0E3E               	movlw	62
  5847   0010D2  6E48               	movwf	(___fladd@a+3)^0,c
  5848   0010D4  C190  F013         	movff	powf@s2,___flmul@a
  5849   0010D8  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5850   0010DC  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5851   0010E0  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5852   0010E4  C158  F00F         	movff	_powf$1840,___flmul@b
  5853   0010E8  C159  F010         	movff	_powf$1840+1,___flmul@b+1
  5854   0010EC  C15A  F011         	movff	_powf$1840+2,___flmul@b+2
  5855   0010F0  C15B  F012         	movff	_powf$1840+3,___flmul@b+3
  5856   0010F4  EC0E  F020         	call	___flmul	;wreg free
  5857   0010F8  C00F  F041         	movff	?___flmul,___fladd@b
  5858   0010FC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5859   001100  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5860   001104  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5861   001108  ECB3  F01D         	call	___fladd	;wreg free
  5862   00110C  C041  F14C         	movff	?___fladd,_powf$1841
  5863   001110  C042  F14D         	movff	?___fladd+1,_powf$1841+1
  5864   001114  C043  F14E         	movff	?___fladd+2,_powf$1841+2
  5865   001118  C044  F14F         	movff	?___fladd+3,_powf$1841+3
  5866   00111C  0EB7               	movlw	183
  5867   00111E  6E45               	movwf	___fladd@a^0,c
  5868   001120  0E6D               	movlw	109
  5869   001122  6E46               	movwf	(___fladd@a+1)^0,c
  5870   001124  0EDB               	movlw	219
  5871   001126  6E47               	movwf	(___fladd@a+2)^0,c
  5872   001128  0E3E               	movlw	62
  5873   00112A  6E48               	movwf	(___fladd@a+3)^0,c
  5874   00112C  C190  F013         	movff	powf@s2,___flmul@a
  5875   001130  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5876   001134  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5877   001138  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5878   00113C  C14C  F00F         	movff	_powf$1841,___flmul@b
  5879   001140  C14D  F010         	movff	_powf$1841+1,___flmul@b+1
  5880   001144  C14E  F011         	movff	_powf$1841+2,___flmul@b+2
  5881   001148  C14F  F012         	movff	_powf$1841+3,___flmul@b+3
  5882   00114C  EC0E  F020         	call	___flmul	;wreg free
  5883   001150  C00F  F041         	movff	?___flmul,___fladd@b
  5884   001154  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5885   001158  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5886   00115C  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5887   001160  ECB3  F01D         	call	___fladd	;wreg free
  5888   001164  C041  F138         	movff	?___fladd,_powf$1843
  5889   001168  C042  F139         	movff	?___fladd+1,_powf$1843+1
  5890   00116C  C043  F13A         	movff	?___fladd+2,_powf$1843+2
  5891   001170  C044  F13B         	movff	?___fladd+3,_powf$1843+3
  5892   001174  0E9A               	movlw	154
  5893   001176  6E45               	movwf	___fladd@a^0,c
  5894   001178  0E99               	movlw	153
  5895   00117A  6E46               	movwf	(___fladd@a+1)^0,c
  5896   00117C  0E19               	movlw	25
  5897   00117E  6E47               	movwf	(___fladd@a+2)^0,c
  5898   001180  0E3F               	movlw	63
  5899   001182  6E48               	movwf	(___fladd@a+3)^0,c
  5900   001184  C190  F013         	movff	powf@s2,___flmul@a
  5901   001188  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5902   00118C  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5903   001190  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5904   001194  C138  F00F         	movff	_powf$1843,___flmul@b
  5905   001198  C139  F010         	movff	_powf$1843+1,___flmul@b+1
  5906   00119C  C13A  F011         	movff	_powf$1843+2,___flmul@b+2
  5907   0011A0  C13B  F012         	movff	_powf$1843+3,___flmul@b+3
  5908   0011A4  EC0E  F020         	call	___flmul	;wreg free
  5909   0011A8  C00F  F041         	movff	?___flmul,___fladd@b
  5910   0011AC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5911   0011B0  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5912   0011B4  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5913   0011B8  ECB3  F01D         	call	___fladd	;wreg free
  5914   0011BC  C041  F100         	movff	?___fladd,_powf$1844
  5915   0011C0  C042  F101         	movff	?___fladd+1,_powf$1844+1
  5916   0011C4  C043  F102         	movff	?___fladd+2,_powf$1844+2
  5917   0011C8  C044  F103         	movff	?___fladd+3,_powf$1844+3
  5918   0011CC  C190  F013         	movff	powf@s2,___flmul@a
  5919   0011D0  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5920   0011D4  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5921   0011D8  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5922   0011DC  C190  F00F         	movff	powf@s2,___flmul@b
  5923   0011E0  C191  F010         	movff	powf@s2+1,___flmul@b+1
  5924   0011E4  C192  F011         	movff	powf@s2+2,___flmul@b+2
  5925   0011E8  C193  F012         	movff	powf@s2+3,___flmul@b+3
  5926   0011EC  EC0E  F020         	call	___flmul	;wreg free
  5927   0011F0  C00F  F104         	movff	?___flmul,_powf$1845
  5928   0011F4  C010  F105         	movff	?___flmul+1,_powf$1845+1
  5929   0011F8  C011  F106         	movff	?___flmul+2,_powf$1845+2
  5930   0011FC  C012  F107         	movff	?___flmul+3,_powf$1845+3
  5931   001200  C100  F00F         	movff	_powf$1844,___flmul@b
  5932   001204  C101  F010         	movff	_powf$1844+1,___flmul@b+1
  5933   001208  C102  F011         	movff	_powf$1844+2,___flmul@b+2
  5934   00120C  C103  F012         	movff	_powf$1844+3,___flmul@b+3
  5935   001210  C104  F013         	movff	_powf$1845,___flmul@a
  5936   001214  C105  F014         	movff	_powf$1845+1,___flmul@a+1
  5937   001218  C106  F015         	movff	_powf$1845+2,___flmul@a+2
  5938   00121C  C107  F016         	movff	_powf$1845+3,___flmul@a+3
  5939   001220  EC0E  F020         	call	___flmul	;wreg free
  5940   001224  C00F  F150         	movff	?___flmul,powf@r
  5941   001228  C010  F151         	movff	?___flmul+1,powf@r+1
  5942   00122C  C011  F152         	movff	?___flmul+2,powf@r+2
  5943   001230  C012  F153         	movff	?___flmul+3,powf@r+3
  5944   001234  C130  F013         	movff	powf@s_l,___flmul@a
  5945   001238  C131  F014         	movff	powf@s_l+1,___flmul@a+1
  5946   00123C  C132  F015         	movff	powf@s_l+2,___flmul@a+2
  5947   001240  C133  F016         	movff	powf@s_l+3,___flmul@a+3
  5948   001244  C160  F045         	movff	powf@s,___fladd@a
  5949   001248  C161  F046         	movff	powf@s+1,___fladd@a+1
  5950   00124C  C162  F047         	movff	powf@s+2,___fladd@a+2
  5951   001250  C163  F048         	movff	powf@s+3,___fladd@a+3
  5952   001254  C174  F041         	movff	powf@s_h,___fladd@b
  5953   001258  C175  F042         	movff	powf@s_h+1,___fladd@b+1
  5954   00125C  C176  F043         	movff	powf@s_h+2,___fladd@b+2
  5955   001260  C177  F044         	movff	powf@s_h+3,___fladd@b+3
  5956   001264  ECB3  F01D         	call	___fladd	;wreg free
  5957   001268  C041  F00F         	movff	?___fladd,___flmul@b
  5958   00126C  C042  F010         	movff	?___fladd+1,___flmul@b+1
  5959   001270  C043  F011         	movff	?___fladd+2,___flmul@b+2
  5960   001274  C044  F012         	movff	?___fladd+3,___flmul@b+3
  5961   001278  EC0E  F020         	call	___flmul	;wreg free
  5962   00127C  C00F  F15C         	movff	?___flmul,_powf$1846
  5963   001280  C010  F15D         	movff	?___flmul+1,_powf$1846+1
  5964   001284  C011  F15E         	movff	?___flmul+2,_powf$1846+2
  5965   001288  C012  F15F         	movff	?___flmul+3,_powf$1846+3
  5966   00128C  C150  F041         	movff	powf@r,___fladd@b
  5967   001290  C151  F042         	movff	powf@r+1,___fladd@b+1
  5968   001294  C152  F043         	movff	powf@r+2,___fladd@b+2
  5969   001298  C153  F044         	movff	powf@r+3,___fladd@b+3
  5970   00129C  C15C  F045         	movff	_powf$1846,___fladd@a
  5971   0012A0  C15D  F046         	movff	_powf$1846+1,___fladd@a+1
  5972   0012A4  C15E  F047         	movff	_powf$1846+2,___fladd@a+2
  5973   0012A8  C15F  F048         	movff	_powf$1846+3,___fladd@a+3
  5974   0012AC  ECB3  F01D         	call	___fladd	;wreg free
  5975   0012B0  C041  F150         	movff	?___fladd,powf@r
  5976   0012B4  C042  F151         	movff	?___fladd+1,powf@r+1
  5977   0012B8  C043  F152         	movff	?___fladd+2,powf@r+2
  5978   0012BC  C044  F153         	movff	?___fladd+3,powf@r+3
  5979   0012C0  C174  F00F         	movff	powf@s_h,___flmul@b
  5980   0012C4  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5981   0012C8  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5982   0012CC  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5983   0012D0  C174  F013         	movff	powf@s_h,___flmul@a
  5984   0012D4  C175  F014         	movff	powf@s_h+1,___flmul@a+1
  5985   0012D8  C176  F015         	movff	powf@s_h+2,___flmul@a+2
  5986   0012DC  C177  F016         	movff	powf@s_h+3,___flmul@a+3
  5987   0012E0  EC0E  F020         	call	___flmul	;wreg free
  5988   0012E4  C00F  F190         	movff	?___flmul,powf@s2
  5989   0012E8  C010  F191         	movff	?___flmul+1,powf@s2+1
  5990   0012EC  C011  F192         	movff	?___flmul+2,powf@s2+2
  5991   0012F0  C012  F193         	movff	?___flmul+3,powf@s2+3
  5992   0012F4  0E00               	movlw	0
  5993   0012F6  6E45               	movwf	___fladd@a^0,c
  5994   0012F8  0E00               	movlw	0
  5995   0012FA  6E46               	movwf	(___fladd@a+1)^0,c
  5996   0012FC  0E40               	movlw	64
  5997   0012FE  6E47               	movwf	(___fladd@a+2)^0,c
  5998   001300  0E40               	movlw	64
  5999   001302  6E48               	movwf	(___fladd@a+3)^0,c
  6000   001304  C190  F041         	movff	powf@s2,___fladd@b
  6001   001308  C191  F042         	movff	powf@s2+1,___fladd@b+1
  6002   00130C  C192  F043         	movff	powf@s2+2,___fladd@b+2
  6003   001310  C193  F044         	movff	powf@s2+3,___fladd@b+3
  6004   001314  ECB3  F01D         	call	___fladd	;wreg free
  6005   001318  C041  F15C         	movff	?___fladd,_powf$1846
  6006   00131C  C042  F15D         	movff	?___fladd+1,_powf$1846+1
  6007   001320  C043  F15E         	movff	?___fladd+2,_powf$1846+2
  6008   001324  C044  F15F         	movff	?___fladd+3,_powf$1846+3
  6009   001328  C15C  F041         	movff	_powf$1846,___fladd@b
  6010   00132C  C15D  F042         	movff	_powf$1846+1,___fladd@b+1
  6011   001330  C15E  F043         	movff	_powf$1846+2,___fladd@b+2
  6012   001334  C15F  F044         	movff	_powf$1846+3,___fladd@b+3
  6013   001338  C150  F045         	movff	powf@r,___fladd@a
  6014   00133C  C151  F046         	movff	powf@r+1,___fladd@a+1
  6015   001340  C152  F047         	movff	powf@r+2,___fladd@a+2
  6016   001344  C153  F048         	movff	powf@r+3,___fladd@a+3
  6017   001348  ECB3  F01D         	call	___fladd	;wreg free
  6018   00134C  C041  F170         	movff	?___fladd,powf@t_h
  6019   001350  C042  F171         	movff	?___fladd+1,powf@t_h+1
  6020   001354  C043  F172         	movff	?___fladd+2,powf@t_h+2
  6021   001358  C044  F173         	movff	?___fladd+3,powf@t_h+3
  6022   00135C  C170  F198         	movff	powf@t_h,powf@is
  6023   001360  C171  F199         	movff	powf@t_h+1,powf@is+1
  6024   001364  C172  F19A         	movff	powf@t_h+2,powf@is+2
  6025   001368  C173  F19B         	movff	powf@t_h+3,powf@is+3
  6026   00136C  0E00               	movlw	0
  6027   00136E  0101               	movlb	1	; () banked
  6028   001370  1598               	andwf	powf@is& (0+255),w,b
  6029   001372  6F70               	movwf	powf@t_h& (0+255),b
  6030   001374  0EF0               	movlw	240
  6031   001376  1599               	andwf	(powf@is+1)& (0+255),w,b
  6032   001378  6F71               	movwf	(powf@t_h+1)& (0+255),b
  6033   00137A  0EFF               	movlw	255
  6034   00137C  159A               	andwf	(powf@is+2)& (0+255),w,b
  6035   00137E  6F72               	movwf	(powf@t_h+2)& (0+255),b
  6036   001380  0EFF               	movlw	255
  6037   001382  159B               	andwf	(powf@is+3)& (0+255),w,b
  6038   001384  6F73               	movwf	(powf@t_h+3)& (0+255),b
  6039   001386                     
  6040                           ; BSR set to: 1
  6041   001386  0E00               	movlw	0
  6042   001388  6E45               	movwf	___fladd@a^0,c
  6043   00138A  0E00               	movlw	0
  6044   00138C  6E46               	movwf	(___fladd@a+1)^0,c
  6045   00138E  0E40               	movlw	64
  6046   001390  6E47               	movwf	(___fladd@a+2)^0,c
  6047   001392  0EC0               	movlw	192
  6048   001394  6E48               	movwf	(___fladd@a+3)^0,c
  6049   001396  C170  F041         	movff	powf@t_h,___fladd@b
  6050   00139A  C171  F042         	movff	powf@t_h+1,___fladd@b+1
  6051   00139E  C172  F043         	movff	powf@t_h+2,___fladd@b+2
  6052   0013A2  C173  F044         	movff	powf@t_h+3,___fladd@b+3
  6053   0013A6  ECB3  F01D         	call	___fladd	;wreg free
  6054   0013AA  C041  F13C         	movff	?___fladd,_powf$1847
  6055   0013AE  C042  F13D         	movff	?___fladd+1,_powf$1847+1
  6056   0013B2  C043  F13E         	movff	?___fladd+2,_powf$1847+2
  6057   0013B6  C044  F13F         	movff	?___fladd+3,_powf$1847+3
  6058   0013BA  C190  F055         	movff	powf@s2,___flsub@a
  6059   0013BE  C191  F056         	movff	powf@s2+1,___flsub@a+1
  6060   0013C2  C192  F057         	movff	powf@s2+2,___flsub@a+2
  6061   0013C6  C193  F058         	movff	powf@s2+3,___flsub@a+3
  6062   0013CA  C13C  F051         	movff	_powf$1847,___flsub@b
  6063   0013CE  C13D  F052         	movff	_powf$1847+1,___flsub@b+1
  6064   0013D2  C13E  F053         	movff	_powf$1847+2,___flsub@b+2
  6065   0013D6  C13F  F054         	movff	_powf$1847+3,___flsub@b+3
  6066   0013DA  EC34  F036         	call	___flsub	;wreg free
  6067   0013DE  C051  F140         	movff	?___flsub,_powf$1848
  6068   0013E2  C052  F141         	movff	?___flsub+1,_powf$1848+1
  6069   0013E6  C053  F142         	movff	?___flsub+2,_powf$1848+2
  6070   0013EA  C054  F143         	movff	?___flsub+3,_powf$1848+3
  6071   0013EE  C150  F051         	movff	powf@r,___flsub@b
  6072   0013F2  C151  F052         	movff	powf@r+1,___flsub@b+1
  6073   0013F6  C152  F053         	movff	powf@r+2,___flsub@b+2
  6074   0013FA  C153  F054         	movff	powf@r+3,___flsub@b+3
  6075   0013FE  C140  F055         	movff	_powf$1848,___flsub@a
  6076   001402  C141  F056         	movff	_powf$1848+1,___flsub@a+1
  6077   001406  C142  F057         	movff	_powf$1848+2,___flsub@a+2
  6078   00140A  C143  F058         	movff	_powf$1848+3,___flsub@a+3
  6079   00140E  EC34  F036         	call	___flsub	;wreg free
  6080   001412  C051  F134         	movff	?___flsub,powf@t_l
  6081   001416  C052  F135         	movff	?___flsub+1,powf@t_l+1
  6082   00141A  C053  F136         	movff	?___flsub+2,powf@t_l+2
  6083   00141E  C054  F137         	movff	?___flsub+3,powf@t_l+3
  6084   001422  C174  F00F         	movff	powf@s_h,___flmul@b
  6085   001426  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  6086   00142A  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  6087   00142E  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  6088   001432  C170  F013         	movff	powf@t_h,___flmul@a
  6089   001436  C171  F014         	movff	powf@t_h+1,___flmul@a+1
  6090   00143A  C172  F015         	movff	powf@t_h+2,___flmul@a+2
  6091   00143E  C173  F016         	movff	powf@t_h+3,___flmul@a+3
  6092   001442  EC0E  F020         	call	___flmul	;wreg free
  6093   001446  C00F  F17C         	movff	?___flmul,powf@u
  6094   00144A  C010  F17D         	movff	?___flmul+1,powf@u+1
  6095   00144E  C011  F17E         	movff	?___flmul+2,powf@u+2
  6096   001452  C012  F17F         	movff	?___flmul+3,powf@u+3
  6097   001456  C130  F013         	movff	powf@s_l,___flmul@a
  6098   00145A  C131  F014         	movff	powf@s_l+1,___flmul@a+1
  6099   00145E  C132  F015         	movff	powf@s_l+2,___flmul@a+2
  6100   001462  C133  F016         	movff	powf@s_l+3,___flmul@a+3
  6101   001466  C170  F00F         	movff	powf@t_h,___flmul@b
  6102   00146A  C171  F010         	movff	powf@t_h+1,___flmul@b+1
  6103   00146E  C172  F011         	movff	powf@t_h+2,___flmul@b+2
  6104   001472  C173  F012         	movff	powf@t_h+3,___flmul@b+3
  6105   001476  EC0E  F020         	call	___flmul	;wreg free
  6106   00147A  C00F  F041         	movff	?___flmul,___fladd@b
  6107   00147E  C010  F042         	movff	?___flmul+1,___fladd@b+1
  6108   001482  C011  F043         	movff	?___flmul+2,___fladd@b+2
  6109   001486  C012  F044         	movff	?___flmul+3,___fladd@b+3
  6110   00148A  C160  F013         	movff	powf@s,___flmul@a
  6111   00148E  C161  F014         	movff	powf@s+1,___flmul@a+1
  6112   001492  C162  F015         	movff	powf@s+2,___flmul@a+2
  6113   001496  C163  F016         	movff	powf@s+3,___flmul@a+3
  6114   00149A  C134  F00F         	movff	powf@t_l,___flmul@b
  6115   00149E  C135  F010         	movff	powf@t_l+1,___flmul@b+1
  6116   0014A2  C136  F011         	movff	powf@t_l+2,___flmul@b+2
  6117   0014A6  C137  F012         	movff	powf@t_l+3,___flmul@b+3
  6118   0014AA  EC0E  F020         	call	___flmul	;wreg free
  6119   0014AE  C00F  F045         	movff	?___flmul,___fladd@a
  6120   0014B2  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6121   0014B6  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6122   0014BA  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6123   0014BE  ECB3  F01D         	call	___fladd	;wreg free
  6124   0014C2  C041  F180         	movff	?___fladd,powf@v
  6125   0014C6  C042  F181         	movff	?___fladd+1,powf@v+1
  6126   0014CA  C043  F182         	movff	?___fladd+2,powf@v+2
  6127   0014CE  C044  F183         	movff	?___fladd+3,powf@v+3
  6128   0014D2  C17C  F041         	movff	powf@u,___fladd@b
  6129   0014D6  C17D  F042         	movff	powf@u+1,___fladd@b+1
  6130   0014DA  C17E  F043         	movff	powf@u+2,___fladd@b+2
  6131   0014DE  C17F  F044         	movff	powf@u+3,___fladd@b+3
  6132   0014E2  C180  F045         	movff	powf@v,___fladd@a
  6133   0014E6  C181  F046         	movff	powf@v+1,___fladd@a+1
  6134   0014EA  C182  F047         	movff	powf@v+2,___fladd@a+2
  6135   0014EE  C183  F048         	movff	powf@v+3,___fladd@a+3
  6136   0014F2  ECB3  F01D         	call	___fladd	;wreg free
  6137   0014F6  C041  F1A0         	movff	?___fladd,powf@p_h
  6138   0014FA  C042  F1A1         	movff	?___fladd+1,powf@p_h+1
  6139   0014FE  C043  F1A2         	movff	?___fladd+2,powf@p_h+2
  6140   001502  C044  F1A3         	movff	?___fladd+3,powf@p_h+3
  6141   001506  C1A0  F198         	movff	powf@p_h,powf@is
  6142   00150A  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  6143   00150E  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  6144   001512  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  6145   001516  0E00               	movlw	0
  6146   001518  0101               	movlb	1	; () banked
  6147   00151A  1598               	andwf	powf@is& (0+255),w,b
  6148   00151C  6FA0               	movwf	powf@p_h& (0+255),b
  6149   00151E  0EF0               	movlw	240
  6150   001520  1599               	andwf	(powf@is+1)& (0+255),w,b
  6151   001522  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  6152   001524  0EFF               	movlw	255
  6153   001526  159A               	andwf	(powf@is+2)& (0+255),w,b
  6154   001528  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  6155   00152A  0EFF               	movlw	255
  6156   00152C  159B               	andwf	(powf@is+3)& (0+255),w,b
  6157   00152E  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  6158   001530                     
  6159                           ; BSR set to: 1
  6160   001530  C17C  F055         	movff	powf@u,___flsub@a
  6161   001534  C17D  F056         	movff	powf@u+1,___flsub@a+1
  6162   001538  C17E  F057         	movff	powf@u+2,___flsub@a+2
  6163   00153C  C17F  F058         	movff	powf@u+3,___flsub@a+3
  6164   001540  C1A0  F051         	movff	powf@p_h,___flsub@b
  6165   001544  C1A1  F052         	movff	powf@p_h+1,___flsub@b+1
  6166   001548  C1A2  F053         	movff	powf@p_h+2,___flsub@b+2
  6167   00154C  C1A3  F054         	movff	powf@p_h+3,___flsub@b+3
  6168   001550  EC34  F036         	call	___flsub	;wreg free
  6169   001554  C051  F19C         	movff	?___flsub,_powf$1842
  6170   001558  C052  F19D         	movff	?___flsub+1,_powf$1842+1
  6171   00155C  C053  F19E         	movff	?___flsub+2,_powf$1842+2
  6172   001560  C054  F19F         	movff	?___flsub+3,_powf$1842+3
  6173   001564  C180  F051         	movff	powf@v,___flsub@b
  6174   001568  C181  F052         	movff	powf@v+1,___flsub@b+1
  6175   00156C  C182  F053         	movff	powf@v+2,___flsub@b+2
  6176   001570  C183  F054         	movff	powf@v+3,___flsub@b+3
  6177   001574  C19C  F055         	movff	_powf$1842,___flsub@a
  6178   001578  C19D  F056         	movff	_powf$1842+1,___flsub@a+1
  6179   00157C  C19E  F057         	movff	_powf$1842+2,___flsub@a+2
  6180   001580  C19F  F058         	movff	_powf$1842+3,___flsub@a+3
  6181   001584  EC34  F036         	call	___flsub	;wreg free
  6182   001588  C051  F16C         	movff	?___flsub,powf@p_l
  6183   00158C  C052  F16D         	movff	?___flsub+1,powf@p_l+1
  6184   001590  C053  F16E         	movff	?___flsub+2,powf@p_l+2
  6185   001594  C054  F16F         	movff	?___flsub+3,powf@p_l+3
  6186   001598  C1A0  F00F         	movff	powf@p_h,___flmul@b
  6187   00159C  C1A1  F010         	movff	powf@p_h+1,___flmul@b+1
  6188   0015A0  C1A2  F011         	movff	powf@p_h+2,___flmul@b+2
  6189   0015A4  C1A3  F012         	movff	powf@p_h+3,___flmul@b+3
  6190   0015A8  0E00               	movlw	0
  6191   0015AA  6E13               	movwf	___flmul@a^0,c
  6192   0015AC  0E40               	movlw	64
  6193   0015AE  6E14               	movwf	(___flmul@a+1)^0,c
  6194   0015B0  0E76               	movlw	118
  6195   0015B2  6E15               	movwf	(___flmul@a+2)^0,c
  6196   0015B4  0E3F               	movlw	63
  6197   0015B6  6E16               	movwf	(___flmul@a+3)^0,c
  6198   0015B8  EC0E  F020         	call	___flmul	;wreg free
  6199   0015BC  C00F  F120         	movff	?___flmul,powf@z_h
  6200   0015C0  C010  F121         	movff	?___flmul+1,powf@z_h+1
  6201   0015C4  C011  F122         	movff	?___flmul+2,powf@z_h+2
  6202   0015C8  C012  F123         	movff	?___flmul+3,powf@z_h+3
  6203   0015CC  0E4F               	movlw	79
  6204   0015CE  6E13               	movwf	___flmul@a^0,c
  6205   0015D0  0E38               	movlw	56
  6206   0015D2  6E14               	movwf	(___flmul@a+1)^0,c
  6207   0015D4  0E76               	movlw	118
  6208   0015D6  6E15               	movwf	(___flmul@a+2)^0,c
  6209   0015D8  0E3F               	movlw	63
  6210   0015DA  6E16               	movwf	(___flmul@a+3)^0,c
  6211   0015DC  C16C  F00F         	movff	powf@p_l,___flmul@b
  6212   0015E0  C16D  F010         	movff	powf@p_l+1,___flmul@b+1
  6213   0015E4  C16E  F011         	movff	powf@p_l+2,___flmul@b+2
  6214   0015E8  C16F  F012         	movff	powf@p_l+3,___flmul@b+3
  6215   0015EC  EC0E  F020         	call	___flmul	;wreg free
  6216   0015F0  C00F  F045         	movff	?___flmul,___fladd@a
  6217   0015F4  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6218   0015F8  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6219   0015FC  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6220   001600  0EC6               	movlw	198
  6221   001602  6E13               	movwf	___flmul@a^0,c
  6222   001604  0E23               	movlw	35
  6223   001606  6E14               	movwf	(___flmul@a+1)^0,c
  6224   001608  0EF6               	movlw	246
  6225   00160A  6E15               	movwf	(___flmul@a+2)^0,c
  6226   00160C  0EB8               	movlw	184
  6227   00160E  6E16               	movwf	(___flmul@a+3)^0,c
  6228   001610  C1A0  F00F         	movff	powf@p_h,___flmul@b
  6229   001614  C1A1  F010         	movff	powf@p_h+1,___flmul@b+1
  6230   001618  C1A2  F011         	movff	powf@p_h+2,___flmul@b+2
  6231   00161C  C1A3  F012         	movff	powf@p_h+3,___flmul@b+3
  6232   001620  EC0E  F020         	call	___flmul	;wreg free
  6233   001624  C00F  F041         	movff	?___flmul,___fladd@b
  6234   001628  C010  F042         	movff	?___flmul+1,___fladd@b+1
  6235   00162C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  6236   001630  C012  F044         	movff	?___flmul+3,___fladd@b+3
  6237   001634  ECB3  F01D         	call	___fladd	;wreg free
  6238   001638  C041  F15C         	movff	?___fladd,_powf$1846
  6239   00163C  C042  F15D         	movff	?___fladd+1,_powf$1846+1
  6240   001640  C043  F15E         	movff	?___fladd+2,_powf$1846+2
  6241   001644  C044  F15F         	movff	?___fladd+3,_powf$1846+3
  6242   001648  C15C  F041         	movff	_powf$1846,___fladd@b
  6243   00164C  C15D  F042         	movff	_powf$1846+1,___fladd@b+1
  6244   001650  C15E  F043         	movff	_powf$1846+2,___fladd@b+2
  6245   001654  C15F  F044         	movff	_powf$1846+3,___fladd@b+3
  6246   001658  C1A4  F070         	movff	powf@k,??_powf
  6247   00165C  C1A5  F071         	movff	powf@k+1,??_powf+1
  6248   001660  0100               	movlb	0	; () banked
  6249   001662  90D8               	bcf	status,0,c
  6250   001664  3770               	rlcf	??_powf& (0+255),f,b
  6251   001666  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6252   001668  90D8               	bcf	status,0,c
  6253   00166A  3770               	rlcf	??_powf& (0+255),f,b
  6254   00166C  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6255   00166E  0E5D               	movlw	low _dp_l
  6256   001670  2570               	addwf	??_powf& (0+255),w,b
  6257   001672  6EF6               	movwf	tblptrl,c
  6258   001674  0E7E               	movlw	high _dp_l
  6259   001676  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6260   001678  6EF7               	movwf	tblptrh,c
  6261   00167A                     	if	0	;There are less than 3 active tblptr bytes
  6262   00167A                     	endif
  6263   00167A  0009               	tblrd		*+
  6264   00167C  CFF5 F045          	movff	tablat,___fladd@a
  6265   001680  0009               	tblrd		*+
  6266   001682  CFF5 F046          	movff	tablat,___fladd@a+1
  6267   001686  0009               	tblrd		*+
  6268   001688  CFF5 F047          	movff	tablat,___fladd@a+2
  6269   00168C  000A               	tblrd		*-
  6270   00168E  CFF5 F048          	movff	tablat,___fladd@a+3
  6271   001692  ECB3  F01D         	call	___fladd	;wreg free
  6272   001696  C041  F124         	movff	?___fladd,powf@z_l
  6273   00169A  C042  F125         	movff	?___fladd+1,powf@z_l+1
  6274   00169E  C043  F126         	movff	?___fladd+2,powf@z_l+2
  6275   0016A2  C044  F127         	movff	?___fladd+3,powf@z_l+3
  6276   0016A6  C188  F001         	movff	powf@n,___xxtofl@val
  6277   0016AA  C189  F002         	movff	powf@n+1,___xxtofl@val+1
  6278   0016AE  C18A  F003         	movff	powf@n+2,___xxtofl@val+2
  6279   0016B2  C18B  F004         	movff	powf@n+3,___xxtofl@val+3
  6280   0016B6  0E01               	movlw	1
  6281   0016B8  EC02  F02B         	call	___xxtofl
  6282   0016BC  C001  F1B0         	movff	?___xxtofl,powf@t
  6283   0016C0  C002  F1B1         	movff	?___xxtofl+1,powf@t+1
  6284   0016C4  C003  F1B2         	movff	?___xxtofl+2,powf@t+2
  6285   0016C8  C004  F1B3         	movff	?___xxtofl+3,powf@t+3
  6286   0016CC  C124  F045         	movff	powf@z_l,___fladd@a
  6287   0016D0  C125  F046         	movff	powf@z_l+1,___fladd@a+1
  6288   0016D4  C126  F047         	movff	powf@z_l+2,___fladd@a+2
  6289   0016D8  C127  F048         	movff	powf@z_l+3,___fladd@a+3
  6290   0016DC  C120  F041         	movff	powf@z_h,___fladd@b
  6291   0016E0  C121  F042         	movff	powf@z_h+1,___fladd@b+1
  6292   0016E4  C122  F043         	movff	powf@z_h+2,___fladd@b+2
  6293   0016E8  C123  F044         	movff	powf@z_h+3,___fladd@b+3
  6294   0016EC  ECB3  F01D         	call	___fladd	;wreg free
  6295   0016F0  C041  F15C         	movff	?___fladd,_powf$1846
  6296   0016F4  C042  F15D         	movff	?___fladd+1,_powf$1846+1
  6297   0016F8  C043  F15E         	movff	?___fladd+2,_powf$1846+2
  6298   0016FC  C044  F15F         	movff	?___fladd+3,_powf$1846+3
  6299   001700  C1A4  F070         	movff	powf@k,??_powf
  6300   001704  C1A5  F071         	movff	powf@k+1,??_powf+1
  6301   001708  0100               	movlb	0	; () banked
  6302   00170A  90D8               	bcf	status,0,c
  6303   00170C  3770               	rlcf	??_powf& (0+255),f,b
  6304   00170E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6305   001710  90D8               	bcf	status,0,c
  6306   001712  3770               	rlcf	??_powf& (0+255),f,b
  6307   001714  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6308   001716  0E65               	movlw	low _dp_h
  6309   001718  2570               	addwf	??_powf& (0+255),w,b
  6310   00171A  6EF6               	movwf	tblptrl,c
  6311   00171C  0E7E               	movlw	high _dp_h
  6312   00171E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6313   001720  6EF7               	movwf	tblptrh,c
  6314   001722                     	if	0	;There are less than 3 active tblptr bytes
  6315   001722                     	endif
  6316   001722  0009               	tblrd		*+
  6317   001724  CFF5 F045          	movff	tablat,___fladd@a
  6318   001728  0009               	tblrd		*+
  6319   00172A  CFF5 F046          	movff	tablat,___fladd@a+1
  6320   00172E  0009               	tblrd		*+
  6321   001730  CFF5 F047          	movff	tablat,___fladd@a+2
  6322   001734  000A               	tblrd		*-
  6323   001736  CFF5 F048          	movff	tablat,___fladd@a+3
  6324   00173A  C15C  F041         	movff	_powf$1846,___fladd@b
  6325   00173E  C15D  F042         	movff	_powf$1846+1,___fladd@b+1
  6326   001742  C15E  F043         	movff	_powf$1846+2,___fladd@b+2
  6327   001746  C15F  F044         	movff	_powf$1846+3,___fladd@b+3
  6328   00174A  ECB3  F01D         	call	___fladd	;wreg free
  6329   00174E  C041  F108         	movff	?___fladd,_powf$1849
  6330   001752  C042  F109         	movff	?___fladd+1,_powf$1849+1
  6331   001756  C043  F10A         	movff	?___fladd+2,_powf$1849+2
  6332   00175A  C044  F10B         	movff	?___fladd+3,_powf$1849+3
  6333   00175E  C108  F041         	movff	_powf$1849,___fladd@b
  6334   001762  C109  F042         	movff	_powf$1849+1,___fladd@b+1
  6335   001766  C10A  F043         	movff	_powf$1849+2,___fladd@b+2
  6336   00176A  C10B  F044         	movff	_powf$1849+3,___fladd@b+3
  6337   00176E  C1B0  F045         	movff	powf@t,___fladd@a
  6338   001772  C1B1  F046         	movff	powf@t+1,___fladd@a+1
  6339   001776  C1B2  F047         	movff	powf@t+2,___fladd@a+2
  6340   00177A  C1B3  F048         	movff	powf@t+3,___fladd@a+3
  6341   00177E  ECB3  F01D         	call	___fladd	;wreg free
  6342   001782  C041  F18C         	movff	?___fladd,powf@t1
  6343   001786  C042  F18D         	movff	?___fladd+1,powf@t1+1
  6344   00178A  C043  F18E         	movff	?___fladd+2,powf@t1+2
  6345   00178E  C044  F18F         	movff	?___fladd+3,powf@t1+3
  6346   001792  C18C  F198         	movff	powf@t1,powf@is
  6347   001796  C18D  F199         	movff	powf@t1+1,powf@is+1
  6348   00179A  C18E  F19A         	movff	powf@t1+2,powf@is+2
  6349   00179E  C18F  F19B         	movff	powf@t1+3,powf@is+3
  6350   0017A2  0E00               	movlw	0
  6351   0017A4  0101               	movlb	1	; () banked
  6352   0017A6  1598               	andwf	powf@is& (0+255),w,b
  6353   0017A8  6F8C               	movwf	powf@t1& (0+255),b
  6354   0017AA  0EF0               	movlw	240
  6355   0017AC  1599               	andwf	(powf@is+1)& (0+255),w,b
  6356   0017AE  6F8D               	movwf	(powf@t1+1)& (0+255),b
  6357   0017B0  0EFF               	movlw	255
  6358   0017B2  159A               	andwf	(powf@is+2)& (0+255),w,b
  6359   0017B4  6F8E               	movwf	(powf@t1+2)& (0+255),b
  6360   0017B6  0EFF               	movlw	255
  6361   0017B8  159B               	andwf	(powf@is+3)& (0+255),w,b
  6362   0017BA  6F8F               	movwf	(powf@t1+3)& (0+255),b
  6363   0017BC                     
  6364                           ; BSR set to: 1
  6365   0017BC  C1B0  F055         	movff	powf@t,___flsub@a
  6366   0017C0  C1B1  F056         	movff	powf@t+1,___flsub@a+1
  6367   0017C4  C1B2  F057         	movff	powf@t+2,___flsub@a+2
  6368   0017C8  C1B3  F058         	movff	powf@t+3,___flsub@a+3
  6369   0017CC  C18C  F051         	movff	powf@t1,___flsub@b
  6370   0017D0  C18D  F052         	movff	powf@t1+1,___flsub@b+1
  6371   0017D4  C18E  F053         	movff	powf@t1+2,___flsub@b+2
  6372   0017D8  C18F  F054         	movff	powf@t1+3,___flsub@b+3
  6373   0017DC  EC34  F036         	call	___flsub	;wreg free
  6374   0017E0  C051  F19C         	movff	?___flsub,_powf$1842
  6375   0017E4  C052  F19D         	movff	?___flsub+1,_powf$1842+1
  6376   0017E8  C053  F19E         	movff	?___flsub+2,_powf$1842+2
  6377   0017EC  C054  F19F         	movff	?___flsub+3,_powf$1842+3
  6378   0017F0  C1A4  F070         	movff	powf@k,??_powf
  6379   0017F4  C1A5  F071         	movff	powf@k+1,??_powf+1
  6380   0017F8  0100               	movlb	0	; () banked
  6381   0017FA  90D8               	bcf	status,0,c
  6382   0017FC  3770               	rlcf	??_powf& (0+255),f,b
  6383   0017FE  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6384   001800  90D8               	bcf	status,0,c
  6385   001802  3770               	rlcf	??_powf& (0+255),f,b
  6386   001804  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6387   001806  0E65               	movlw	low _dp_h
  6388   001808  2570               	addwf	??_powf& (0+255),w,b
  6389   00180A  6EF6               	movwf	tblptrl,c
  6390   00180C  0E7E               	movlw	high _dp_h
  6391   00180E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6392   001810  6EF7               	movwf	tblptrh,c
  6393   001812                     	if	0	;There are less than 3 active tblptr bytes
  6394   001812                     	endif
  6395   001812  0009               	tblrd		*+
  6396   001814  CFF5 F055          	movff	tablat,___flsub@a
  6397   001818  0009               	tblrd		*+
  6398   00181A  CFF5 F056          	movff	tablat,___flsub@a+1
  6399   00181E  0009               	tblrd		*+
  6400   001820  CFF5 F057          	movff	tablat,___flsub@a+2
  6401   001824  000A               	tblrd		*-
  6402   001826  CFF5 F058          	movff	tablat,___flsub@a+3
  6403   00182A  C19C  F051         	movff	_powf$1842,___flsub@b
  6404   00182E  C19D  F052         	movff	_powf$1842+1,___flsub@b+1
  6405   001832  C19E  F053         	movff	_powf$1842+2,___flsub@b+2
  6406   001836  C19F  F054         	movff	_powf$1842+3,___flsub@b+3
  6407   00183A  EC34  F036         	call	___flsub	;wreg free
  6408   00183E  C051  F140         	movff	?___flsub,_powf$1848
  6409   001842  C052  F141         	movff	?___flsub+1,_powf$1848+1
  6410   001846  C053  F142         	movff	?___flsub+2,_powf$1848+2
  6411   00184A  C054  F143         	movff	?___flsub+3,_powf$1848+3
  6412   00184E  C120  F055         	movff	powf@z_h,___flsub@a
  6413   001852  C121  F056         	movff	powf@z_h+1,___flsub@a+1
  6414   001856  C122  F057         	movff	powf@z_h+2,___flsub@a+2
  6415   00185A  C123  F058         	movff	powf@z_h+3,___flsub@a+3
  6416   00185E  C140  F051         	movff	_powf$1848,___flsub@b
  6417   001862  C141  F052         	movff	_powf$1848+1,___flsub@b+1
  6418   001866  C142  F053         	movff	_powf$1848+2,___flsub@b+2
  6419   00186A  C143  F054         	movff	_powf$1848+3,___flsub@b+3
  6420   00186E  EC34  F036         	call	___flsub	;wreg free
  6421   001872  C051  F10C         	movff	?___flsub,_powf$1850
  6422   001876  C052  F10D         	movff	?___flsub+1,_powf$1850+1
  6423   00187A  C053  F10E         	movff	?___flsub+2,_powf$1850+2
  6424   00187E  C054  F10F         	movff	?___flsub+3,_powf$1850+3
  6425   001882  C124  F051         	movff	powf@z_l,___flsub@b
  6426   001886  C125  F052         	movff	powf@z_l+1,___flsub@b+1
  6427   00188A  C126  F053         	movff	powf@z_l+2,___flsub@b+2
  6428   00188E  C127  F054         	movff	powf@z_l+3,___flsub@b+3
  6429   001892  C10C  F055         	movff	_powf$1850,___flsub@a
  6430   001896  C10D  F056         	movff	_powf$1850+1,___flsub@a+1
  6431   00189A  C10E  F057         	movff	_powf$1850+2,___flsub@a+2
  6432   00189E  C10F  F058         	movff	_powf$1850+3,___flsub@a+3
  6433   0018A2  EC34  F036         	call	___flsub	;wreg free
  6434   0018A6  C051  F11C         	movff	?___flsub,powf@t2
  6435   0018AA  C052  F11D         	movff	?___flsub+1,powf@t2+1
  6436   0018AE  C053  F11E         	movff	?___flsub+2,powf@t2+2
  6437   0018B2  C054  F11F         	movff	?___flsub+3,powf@t2+3
  6438   0018B6                     l7654:
  6439   0018B6  C06C  F198         	movff	powf@y,powf@is
  6440   0018BA  C06D  F199         	movff	powf@y+1,powf@is+1
  6441   0018BE  C06E  F19A         	movff	powf@y+2,powf@is+2
  6442   0018C2  C06F  F19B         	movff	powf@y+3,powf@is+3
  6443   0018C6  0E00               	movlw	0
  6444   0018C8  0101               	movlb	1	; () banked
  6445   0018CA  1598               	andwf	powf@is& (0+255),w,b
  6446   0018CC  6F2C               	movwf	powf@y1& (0+255),b
  6447   0018CE  0EF0               	movlw	240
  6448   0018D0  1599               	andwf	(powf@is+1)& (0+255),w,b
  6449   0018D2  6F2D               	movwf	(powf@y1+1)& (0+255),b
  6450   0018D4  0EFF               	movlw	255
  6451   0018D6  159A               	andwf	(powf@is+2)& (0+255),w,b
  6452   0018D8  6F2E               	movwf	(powf@y1+2)& (0+255),b
  6453   0018DA  0EFF               	movlw	255
  6454   0018DC  159B               	andwf	(powf@is+3)& (0+255),w,b
  6455   0018DE  6F2F               	movwf	(powf@y1+3)& (0+255),b
  6456   0018E0                     
  6457                           ; BSR set to: 1
  6458   0018E0  C18C  F013         	movff	powf@t1,___flmul@a
  6459   0018E4  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  6460   0018E8  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  6461   0018EC  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  6462   0018F0  C12C  F055         	movff	powf@y1,___flsub@a
  6463   0018F4  C12D  F056         	movff	powf@y1+1,___flsub@a+1
  6464   0018F8  C12E  F057         	movff	powf@y1+2,___flsub@a+2
  6465   0018FC  C12F  F058         	movff	powf@y1+3,___flsub@a+3
  6466   001900  C06C  F051         	movff	powf@y,___flsub@b
  6467   001904  C06D  F052         	movff	powf@y+1,___flsub@b+1
  6468   001908  C06E  F053         	movff	powf@y+2,___flsub@b+2
  6469   00190C  C06F  F054         	movff	powf@y+3,___flsub@b+3
  6470   001910  EC34  F036         	call	___flsub	;wreg free
  6471   001914  C051  F00F         	movff	?___flsub,___flmul@b
  6472   001918  C052  F010         	movff	?___flsub+1,___flmul@b+1
  6473   00191C  C053  F011         	movff	?___flsub+2,___flmul@b+2
  6474   001920  C054  F012         	movff	?___flsub+3,___flmul@b+3
  6475   001924  EC0E  F020         	call	___flmul	;wreg free
  6476   001928  C00F  F110         	movff	?___flmul,_powf$1851
  6477   00192C  C010  F111         	movff	?___flmul+1,_powf$1851+1
  6478   001930  C011  F112         	movff	?___flmul+2,_powf$1851+2
  6479   001934  C012  F113         	movff	?___flmul+3,_powf$1851+3
  6480   001938  C110  F041         	movff	_powf$1851,___fladd@b
  6481   00193C  C111  F042         	movff	_powf$1851+1,___fladd@b+1
  6482   001940  C112  F043         	movff	_powf$1851+2,___fladd@b+2
  6483   001944  C113  F044         	movff	_powf$1851+3,___fladd@b+3
  6484   001948  C11C  F013         	movff	powf@t2,___flmul@a
  6485   00194C  C11D  F014         	movff	powf@t2+1,___flmul@a+1
  6486   001950  C11E  F015         	movff	powf@t2+2,___flmul@a+2
  6487   001954  C11F  F016         	movff	powf@t2+3,___flmul@a+3
  6488   001958  C06C  F00F         	movff	powf@y,___flmul@b
  6489   00195C  C06D  F010         	movff	powf@y+1,___flmul@b+1
  6490   001960  C06E  F011         	movff	powf@y+2,___flmul@b+2
  6491   001964  C06F  F012         	movff	powf@y+3,___flmul@b+3
  6492   001968  EC0E  F020         	call	___flmul	;wreg free
  6493   00196C  C00F  F045         	movff	?___flmul,___fladd@a
  6494   001970  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6495   001974  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6496   001978  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6497   00197C  ECB3  F01D         	call	___fladd	;wreg free
  6498   001980  C041  F16C         	movff	?___fladd,powf@p_l
  6499   001984  C042  F16D         	movff	?___fladd+1,powf@p_l+1
  6500   001988  C043  F16E         	movff	?___fladd+2,powf@p_l+2
  6501   00198C  C044  F16F         	movff	?___fladd+3,powf@p_l+3
  6502   001990  C12C  F00F         	movff	powf@y1,___flmul@b
  6503   001994  C12D  F010         	movff	powf@y1+1,___flmul@b+1
  6504   001998  C12E  F011         	movff	powf@y1+2,___flmul@b+2
  6505   00199C  C12F  F012         	movff	powf@y1+3,___flmul@b+3
  6506   0019A0  C18C  F013         	movff	powf@t1,___flmul@a
  6507   0019A4  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  6508   0019A8  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  6509   0019AC  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  6510   0019B0  EC0E  F020         	call	___flmul	;wreg free
  6511   0019B4  C00F  F1A0         	movff	?___flmul,powf@p_h
  6512   0019B8  C010  F1A1         	movff	?___flmul+1,powf@p_h+1
  6513   0019BC  C011  F1A2         	movff	?___flmul+2,powf@p_h+2
  6514   0019C0  C012  F1A3         	movff	?___flmul+3,powf@p_h+3
  6515   0019C4  C1A0  F041         	movff	powf@p_h,___fladd@b
  6516   0019C8  C1A1  F042         	movff	powf@p_h+1,___fladd@b+1
  6517   0019CC  C1A2  F043         	movff	powf@p_h+2,___fladd@b+2
  6518   0019D0  C1A3  F044         	movff	powf@p_h+3,___fladd@b+3
  6519   0019D4  C16C  F045         	movff	powf@p_l,___fladd@a
  6520   0019D8  C16D  F046         	movff	powf@p_l+1,___fladd@a+1
  6521   0019DC  C16E  F047         	movff	powf@p_l+2,___fladd@a+2
  6522   0019E0  C16F  F048         	movff	powf@p_l+3,___fladd@a+3
  6523   0019E4  ECB3  F01D         	call	___fladd	;wreg free
  6524   0019E8  C041  F1B4         	movff	?___fladd,powf@z
  6525   0019EC  C042  F1B5         	movff	?___fladd+1,powf@z+1
  6526   0019F0  C043  F1B6         	movff	?___fladd+2,powf@z+2
  6527   0019F4  C044  F1B7         	movff	?___fladd+3,powf@z+3
  6528   0019F8  C1B4  F1A8         	movff	powf@z,powf@j
  6529   0019FC  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  6530   001A00  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  6531   001A04  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  6532   001A08  0101               	movlb	1	; () banked
  6533   001A0A  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  6534   001A0C  EF14  F00D         	goto	u10031
  6535   001A10  05A8               	decf	powf@j& (0+255),w,b
  6536   001A12  0E00               	movlw	0
  6537   001A14  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  6538   001A16  0E00               	movlw	0
  6539   001A18  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  6540   001A1A  0E43               	movlw	67
  6541   001A1C  59AB               	subwfb	(powf@j+3)& (0+255),w,b
  6542   001A1E  A0D8               	btfss	status,0,c
  6543   001A20  EF14  F00D         	goto	u10031
  6544   001A24  EF16  F00D         	goto	u10030
  6545   001A28                     u10031:
  6546   001A28  EF18  F00D         	goto	l7676
  6547   001A2C                     u10030:
  6548   001A2C  EFA2  F003         	goto	l7476
  6549   001A30                     l7676:
  6550                           
  6551                           ; BSR set to: 1
  6552   001A30  0E43               	movlw	67
  6553   001A32  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6554   001A34  11A8               	iorwf	powf@j& (0+255),w,b
  6555   001A36  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6556   001A38  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  6557   001A3A  A4D8               	btfss	status,2,c
  6558   001A3C  EF22  F00D         	goto	u10041
  6559   001A40  EF24  F00D         	goto	u10040
  6560   001A44                     u10041:
  6561   001A44  EF64  F00D         	goto	l7686
  6562   001A48                     u10040:
  6563   001A48                     
  6564                           ; BSR set to: 1
  6565   001A48  C1A0  F055         	movff	powf@p_h,___flsub@a
  6566   001A4C  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  6567   001A50  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  6568   001A54  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  6569   001A58  C1B4  F051         	movff	powf@z,___flsub@b
  6570   001A5C  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  6571   001A60  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  6572   001A64  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  6573   001A68  EC34  F036         	call	___flsub	;wreg free
  6574   001A6C  C051  F060         	movff	?___flsub,___flge@ff1
  6575   001A70  C052  F061         	movff	?___flsub+1,___flge@ff1+1
  6576   001A74  C053  F062         	movff	?___flsub+2,___flge@ff1+2
  6577   001A78  C054  F063         	movff	?___flsub+3,___flge@ff1+3
  6578   001A7C  0E3C               	movlw	60
  6579   001A7E  6E45               	movwf	___fladd@a^0,c
  6580   001A80  0EAA               	movlw	170
  6581   001A82  6E46               	movwf	(___fladd@a+1)^0,c
  6582   001A84  0E38               	movlw	56
  6583   001A86  6E47               	movwf	(___fladd@a+2)^0,c
  6584   001A88  0E33               	movlw	51
  6585   001A8A  6E48               	movwf	(___fladd@a+3)^0,c
  6586   001A8C  C16C  F041         	movff	powf@p_l,___fladd@b
  6587   001A90  C16D  F042         	movff	powf@p_l+1,___fladd@b+1
  6588   001A94  C16E  F043         	movff	powf@p_l+2,___fladd@b+2
  6589   001A98  C16F  F044         	movff	powf@p_l+3,___fladd@b+3
  6590   001A9C  ECB3  F01D         	call	___fladd	;wreg free
  6591   001AA0  C041  F064         	movff	?___fladd,___flge@ff2
  6592   001AA4  C042  F065         	movff	?___fladd+1,___flge@ff2+1
  6593   001AA8  C043  F066         	movff	?___fladd+2,___flge@ff2+2
  6594   001AAC  C044  F067         	movff	?___fladd+3,___flge@ff2+3
  6595   001AB0  EC8A  F02F         	call	___flge	;wreg free
  6596   001AB4  0100               	movlb	0	; () banked
  6597   001AB6  B0D8               	btfsc	status,0,c
  6598   001AB8  EF60  F00D         	goto	u10051
  6599   001ABC  EF62  F00D         	goto	u10050
  6600   001AC0                     u10051:
  6601   001AC0  EFD7  F00D         	goto	l7702
  6602   001AC4                     u10050:
  6603   001AC4  EFA2  F003         	goto	l7476
  6604   001AC8                     l7686:
  6605                           
  6606                           ; BSR set to: 1
  6607   001AC8  0EFF               	movlw	255
  6608   001ACA  15A8               	andwf	powf@j& (0+255),w,b
  6609   001ACC  0100               	movlb	0	; () banked
  6610   001ACE  6F70               	movwf	??_powf& (0+255),b
  6611   001AD0  0EFF               	movlw	255
  6612   001AD2  0101               	movlb	1	; () banked
  6613   001AD4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6614   001AD6  0100               	movlb	0	; () banked
  6615   001AD8  6F71               	movwf	(??_powf+1)& (0+255),b
  6616   001ADA  0EFF               	movlw	255
  6617   001ADC  0101               	movlb	1	; () banked
  6618   001ADE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6619   001AE0  0100               	movlb	0	; () banked
  6620   001AE2  6F72               	movwf	(??_powf+2)& (0+255),b
  6621   001AE4  0E7F               	movlw	127
  6622   001AE6  0101               	movlb	1	; () banked
  6623   001AE8  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6624   001AEA  0100               	movlb	0	; () banked
  6625   001AEC  6F73               	movwf	(??_powf+3)& (0+255),b
  6626   001AEE  BF73               	btfsc	(??_powf+3)& (0+255),7,b
  6627   001AF0  EF86  F00D         	goto	u10061
  6628   001AF4  0570               	decf	??_powf& (0+255),w,b
  6629   001AF6  0E00               	movlw	0
  6630   001AF8  5971               	subwfb	(??_powf+1)& (0+255),w,b
  6631   001AFA  0E16               	movlw	22
  6632   001AFC  5972               	subwfb	(??_powf+2)& (0+255),w,b
  6633   001AFE  0E43               	movlw	67
  6634   001B00  5973               	subwfb	(??_powf+3)& (0+255),w,b
  6635   001B02  A0D8               	btfss	status,0,c
  6636   001B04  EF86  F00D         	goto	u10061
  6637   001B08  EF88  F00D         	goto	u10060
  6638   001B0C                     u10061:
  6639   001B0C  EF92  F00D         	goto	l7694
  6640   001B10                     u10060:
  6641   001B10                     
  6642                           ; BSR set to: 0
  6643   001B10  0E00               	movlw	0
  6644   001B12  6F68               	movwf	?_powf& (0+255),b
  6645   001B14  0E00               	movlw	0
  6646   001B16  6F69               	movwf	(?_powf+1)& (0+255),b
  6647   001B18  0E00               	movlw	0
  6648   001B1A  6F6A               	movwf	(?_powf+2)& (0+255),b
  6649   001B1C  0E00               	movlw	0
  6650   001B1E  6F6B               	movwf	(?_powf+3)& (0+255),b
  6651   001B20  EF63  F012         	goto	l1269
  6652   001B24                     l7694:
  6653                           
  6654                           ; BSR set to: 0
  6655   001B24  0E16               	movlw	22
  6656   001B26  0101               	movlb	1	; () banked
  6657   001B28  19AA               	xorwf	(powf@j+2)& (0+255),w,b
  6658   001B2A  E109               	bnz	u10071
  6659   001B2C  0EC3               	movlw	195
  6660   001B2E  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6661   001B30  11A8               	iorwf	powf@j& (0+255),w,b
  6662   001B32  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6663   001B34  A4D8               	btfss	status,2,c
  6664   001B36  EF9F  F00D         	goto	u10071
  6665   001B3A  EFA1  F00D         	goto	u10070
  6666   001B3E                     u10071:
  6667   001B3E  EFD7  F00D         	goto	l7702
  6668   001B42                     u10070:
  6669   001B42                     
  6670                           ; BSR set to: 1
  6671   001B42  C1A0  F055         	movff	powf@p_h,___flsub@a
  6672   001B46  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  6673   001B4A  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  6674   001B4E  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  6675   001B52  C1B4  F051         	movff	powf@z,___flsub@b
  6676   001B56  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  6677   001B5A  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  6678   001B5E  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  6679   001B62  EC34  F036         	call	___flsub	;wreg free
  6680   001B66  C051  F060         	movff	?___flsub,___flge@ff1
  6681   001B6A  C052  F061         	movff	?___flsub+1,___flge@ff1+1
  6682   001B6E  C053  F062         	movff	?___flsub+2,___flge@ff1+2
  6683   001B72  C054  F063         	movff	?___flsub+3,___flge@ff1+3
  6684   001B76  C16C  F064         	movff	powf@p_l,___flge@ff2
  6685   001B7A  C16D  F065         	movff	powf@p_l+1,___flge@ff2+1
  6686   001B7E  C16E  F066         	movff	powf@p_l+2,___flge@ff2+2
  6687   001B82  C16F  F067         	movff	powf@p_l+3,___flge@ff2+3
  6688   001B86  EC8A  F02F         	call	___flge	;wreg free
  6689   001B8A  0100               	movlb	0	; () banked
  6690   001B8C  A0D8               	btfss	status,0,c
  6691   001B8E  EFCB  F00D         	goto	u10081
  6692   001B92  EFCD  F00D         	goto	u10080
  6693   001B96                     u10081:
  6694   001B96  EFD7  F00D         	goto	l7702
  6695   001B9A                     u10080:
  6696   001B9A                     
  6697                           ; BSR set to: 0
  6698   001B9A  0E00               	movlw	0
  6699   001B9C  6F68               	movwf	?_powf& (0+255),b
  6700   001B9E  0E00               	movlw	0
  6701   001BA0  6F69               	movwf	(?_powf+1)& (0+255),b
  6702   001BA2  0E00               	movlw	0
  6703   001BA4  6F6A               	movwf	(?_powf+2)& (0+255),b
  6704   001BA6  0E00               	movlw	0
  6705   001BA8  6F6B               	movwf	(?_powf+3)& (0+255),b
  6706   001BAA  EF63  F012         	goto	l1269
  6707   001BAE                     l7702:
  6708   001BAE  0EFF               	movlw	255
  6709   001BB0  0101               	movlb	1	; () banked
  6710   001BB2  15A8               	andwf	powf@j& (0+255),w,b
  6711   001BB4  6F28               	movwf	powf@i& (0+255),b
  6712   001BB6  0EFF               	movlw	255
  6713   001BB8  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6714   001BBA  6F29               	movwf	(powf@i+1)& (0+255),b
  6715   001BBC  0EFF               	movlw	255
  6716   001BBE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6717   001BC0  6F2A               	movwf	(powf@i+2)& (0+255),b
  6718   001BC2  0E7F               	movlw	127
  6719   001BC4  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6720   001BC6  6F2B               	movwf	(powf@i+3)& (0+255),b
  6721   001BC8  0E17               	movlw	23
  6722   001BCA  0100               	movlb	0	; () banked
  6723   001BCC  6F70               	movwf	??_powf& (0+255),b
  6724   001BCE  C128  F071         	movff	powf@i,??_powf+1
  6725   001BD2  C129  F072         	movff	powf@i+1,??_powf+2
  6726   001BD6  C12A  F073         	movff	powf@i+2,??_powf+3
  6727   001BDA  C12B  F074         	movff	powf@i+3,??_powf+4
  6728   001BDE                     u10095:
  6729   001BDE  6770               	tstfsz	??_powf& (0+255),b
  6730   001BE0  EFF4  F00D         	goto	u10096
  6731   001BE4  EFFC  F00D         	goto	u10097
  6732   001BE8                     u10096:
  6733   001BE8  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6734   001BEA  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6735   001BEC  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6736   001BEE  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6737   001BF0  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6738   001BF2  2F70               	decfsz	??_powf& (0+255),f,b
  6739   001BF4  EFEF  F00D         	goto	u10095
  6740   001BF8                     u10097:
  6741   001BF8  0E81               	movlw	129
  6742   001BFA  0100               	movlb	0	; () banked
  6743   001BFC  2571               	addwf	(??_powf+1)& (0+255),w,b
  6744   001BFE  0101               	movlb	1	; () banked
  6745   001C00  6FA4               	movwf	powf@k& (0+255),b
  6746   001C02  0EFF               	movlw	255
  6747   001C04  0100               	movlb	0	; () banked
  6748   001C06  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6749   001C08  0101               	movlb	1	; () banked
  6750   001C0A  6FA5               	movwf	(powf@k+1)& (0+255),b
  6751   001C0C  0EFF               	movlw	255
  6752   001C0E  0100               	movlb	0	; () banked
  6753   001C10  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6754   001C12  0101               	movlb	1	; () banked
  6755   001C14  6FA6               	movwf	(powf@k+2)& (0+255),b
  6756   001C16  0EFF               	movlw	255
  6757   001C18  0100               	movlb	0	; () banked
  6758   001C1A  2174               	addwfc	(??_powf+4)& (0+255),w,b
  6759   001C1C  0101               	movlb	1	; () banked
  6760   001C1E  6FA7               	movwf	(powf@k+3)& (0+255),b
  6761   001C20                     
  6762                           ; BSR set to: 1
  6763   001C20  0E00               	movlw	0
  6764   001C22  6F88               	movwf	powf@n& (0+255),b
  6765   001C24  0E00               	movlw	0
  6766   001C26  6F89               	movwf	(powf@n+1)& (0+255),b
  6767   001C28  0E00               	movlw	0
  6768   001C2A  6F8A               	movwf	(powf@n+2)& (0+255),b
  6769   001C2C  0E00               	movlw	0
  6770   001C2E  6F8B               	movwf	(powf@n+3)& (0+255),b
  6771   001C30                     
  6772                           ; BSR set to: 1
  6773   001C30  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
  6774   001C32  EF27  F00E         	goto	u10101
  6775   001C36  0528               	decf	powf@i& (0+255),w,b
  6776   001C38  0E00               	movlw	0
  6777   001C3A  5929               	subwfb	(powf@i+1)& (0+255),w,b
  6778   001C3C  0E00               	movlw	0
  6779   001C3E  592A               	subwfb	(powf@i+2)& (0+255),w,b
  6780   001C40  0E3F               	movlw	63
  6781   001C42  592B               	subwfb	(powf@i+3)& (0+255),w,b
  6782   001C44  A0D8               	btfss	status,0,c
  6783   001C46  EF27  F00E         	goto	u10101
  6784   001C4A  EF29  F00E         	goto	u10100
  6785   001C4E                     u10101:
  6786   001C4E  EF25  F00F         	goto	l7714
  6787   001C52                     u10100:
  6788   001C52                     
  6789                           ; BSR set to: 1
  6790   001C52  C1A4  F070         	movff	powf@k,??_powf
  6791   001C56  0E01               	movlw	1
  6792   001C58  0100               	movlb	0	; () banked
  6793   001C5A  2770               	addwf	??_powf& (0+255),f,b
  6794   001C5C  0E00               	movlw	0
  6795   001C5E  6F71               	movwf	(??_powf+1)& (0+255),b
  6796   001C60  0E00               	movlw	0
  6797   001C62  6F72               	movwf	(??_powf+2)& (0+255),b
  6798   001C64  0E80               	movlw	128
  6799   001C66  6F73               	movwf	(??_powf+3)& (0+255),b
  6800   001C68  0E00               	movlw	0
  6801   001C6A  6F74               	movwf	(??_powf+4)& (0+255),b
  6802   001C6C                     u10115:
  6803   001C6C  6770               	tstfsz	??_powf& (0+255),b
  6804   001C6E  EF3B  F00E         	goto	u10116
  6805   001C72  EF43  F00E         	goto	u10117
  6806   001C76                     u10116:
  6807   001C76  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6808   001C78  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6809   001C7A  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6810   001C7C  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6811   001C7E  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6812   001C80  2F70               	decfsz	??_powf& (0+255),f,b
  6813   001C82  EF36  F00E         	goto	u10115
  6814   001C86                     u10117:
  6815   001C86  0101               	movlb	1	; () banked
  6816   001C88  51A8               	movf	powf@j& (0+255),w,b
  6817   001C8A  0100               	movlb	0	; () banked
  6818   001C8C  2571               	addwf	(??_powf+1)& (0+255),w,b
  6819   001C8E  0101               	movlb	1	; () banked
  6820   001C90  6F88               	movwf	powf@n& (0+255),b
  6821   001C92  51A9               	movf	(powf@j+1)& (0+255),w,b
  6822   001C94  0100               	movlb	0	; () banked
  6823   001C96  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6824   001C98  0101               	movlb	1	; () banked
  6825   001C9A  6F89               	movwf	(powf@n+1)& (0+255),b
  6826   001C9C  51AA               	movf	(powf@j+2)& (0+255),w,b
  6827   001C9E  0100               	movlb	0	; () banked
  6828   001CA0  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6829   001CA2  0101               	movlb	1	; () banked
  6830   001CA4  6F8A               	movwf	(powf@n+2)& (0+255),b
  6831   001CA6  51AB               	movf	(powf@j+3)& (0+255),w,b
  6832   001CA8  0100               	movlb	0	; () banked
  6833   001CAA  2174               	addwfc	(??_powf+4)& (0+255),w,b
  6834   001CAC  0101               	movlb	1	; () banked
  6835   001CAE  6F8B               	movwf	(powf@n+3)& (0+255),b
  6836   001CB0  0E81               	movlw	129
  6837   001CB2  0100               	movlb	0	; () banked
  6838   001CB4  6F70               	movwf	??_powf& (0+255),b
  6839   001CB6  0EFF               	movlw	255
  6840   001CB8  6F71               	movwf	(??_powf+1)& (0+255),b
  6841   001CBA  0EFF               	movlw	255
  6842   001CBC  6F72               	movwf	(??_powf+2)& (0+255),b
  6843   001CBE  0EFF               	movlw	255
  6844   001CC0  6F73               	movwf	(??_powf+3)& (0+255),b
  6845   001CC2  0E17               	movlw	23
  6846   001CC4  6F74               	movwf	(??_powf+4)& (0+255),b
  6847   001CC6  C188  F075         	movff	powf@n,??_powf+5
  6848   001CCA  C189  F076         	movff	powf@n+1,??_powf+6
  6849   001CCE  C18A  F077         	movff	powf@n+2,??_powf+7
  6850   001CD2  C18B  F078         	movff	powf@n+3,??_powf+8
  6851   001CD6                     u10125:
  6852   001CD6  6774               	tstfsz	(??_powf+4)& (0+255),b
  6853   001CD8  EF70  F00E         	goto	u10126
  6854   001CDC  EF78  F00E         	goto	u10127
  6855   001CE0                     u10126:
  6856   001CE0  3578               	rlcf	(??_powf+8)& (0+255),w,b
  6857   001CE2  3378               	rrcf	(??_powf+8)& (0+255),f,b
  6858   001CE4  3377               	rrcf	(??_powf+7)& (0+255),f,b
  6859   001CE6  3376               	rrcf	(??_powf+6)& (0+255),f,b
  6860   001CE8  3375               	rrcf	(??_powf+5)& (0+255),f,b
  6861   001CEA  2F74               	decfsz	(??_powf+4)& (0+255),f,b
  6862   001CEC  EF6B  F00E         	goto	u10125
  6863   001CF0                     u10127:
  6864   001CF0  0100               	movlb	0	; () banked
  6865   001CF2  5175               	movf	(??_powf+5)& (0+255),w,b
  6866   001CF4  2570               	addwf	??_powf& (0+255),w,b
  6867   001CF6  0101               	movlb	1	; () banked
  6868   001CF8  6FA4               	movwf	powf@k& (0+255),b
  6869   001CFA  0E00               	movlw	0
  6870   001CFC  0100               	movlb	0	; () banked
  6871   001CFE  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6872   001D00  0101               	movlb	1	; () banked
  6873   001D02  6FA5               	movwf	(powf@k+1)& (0+255),b
  6874   001D04  0E00               	movlw	0
  6875   001D06  0100               	movlb	0	; () banked
  6876   001D08  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6877   001D0A  0101               	movlb	1	; () banked
  6878   001D0C  6FA6               	movwf	(powf@k+2)& (0+255),b
  6879   001D0E  0E00               	movlw	0
  6880   001D10  0100               	movlb	0	; () banked
  6881   001D12  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6882   001D14  0101               	movlb	1	; () banked
  6883   001D16  6FA7               	movwf	(powf@k+3)& (0+255),b
  6884   001D18  C1A4  F070         	movff	powf@k,??_powf
  6885   001D1C  0EFF               	movlw	255
  6886   001D1E  0100               	movlb	0	; () banked
  6887   001D20  6F71               	movwf	(??_powf+1)& (0+255),b
  6888   001D22  0EFF               	movlw	255
  6889   001D24  6F72               	movwf	(??_powf+2)& (0+255),b
  6890   001D26  0E7F               	movlw	127
  6891   001D28  6F73               	movwf	(??_powf+3)& (0+255),b
  6892   001D2A  0E00               	movlw	0
  6893   001D2C  6F74               	movwf	(??_powf+4)& (0+255),b
  6894   001D2E                     u10135:
  6895   001D2E  6770               	tstfsz	??_powf& (0+255),b
  6896   001D30  EF9C  F00E         	goto	u10136
  6897   001D34  EFA4  F00E         	goto	u10137
  6898   001D38                     u10136:
  6899   001D38  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6900   001D3A  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6901   001D3C  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6902   001D3E  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6903   001D40  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6904   001D42  2F70               	decfsz	??_powf& (0+255),f,b
  6905   001D44  EF97  F00E         	goto	u10135
  6906   001D48                     u10137:
  6907   001D48  0100               	movlb	0	; () banked
  6908   001D4A  1D71               	comf	(??_powf+1)& (0+255),w,b
  6909   001D4C  6F75               	movwf	(??_powf+5)& (0+255),b
  6910   001D4E  1D72               	comf	(??_powf+2)& (0+255),w,b
  6911   001D50  6F76               	movwf	(??_powf+6)& (0+255),b
  6912   001D52  1D73               	comf	(??_powf+3)& (0+255),w,b
  6913   001D54  6F77               	movwf	(??_powf+7)& (0+255),b
  6914   001D56  1D74               	comf	(??_powf+4)& (0+255),w,b
  6915   001D58  6F78               	movwf	(??_powf+8)& (0+255),b
  6916   001D5A  0101               	movlb	1	; () banked
  6917   001D5C  5188               	movf	powf@n& (0+255),w,b
  6918   001D5E  0100               	movlb	0	; () banked
  6919   001D60  1575               	andwf	(??_powf+5)& (0+255),w,b
  6920   001D62  0101               	movlb	1	; () banked
  6921   001D64  6FB0               	movwf	powf@t& (0+255),b
  6922   001D66  5189               	movf	(powf@n+1)& (0+255),w,b
  6923   001D68  0100               	movlb	0	; () banked
  6924   001D6A  1576               	andwf	(??_powf+6)& (0+255),w,b
  6925   001D6C  0101               	movlb	1	; () banked
  6926   001D6E  6FB1               	movwf	(powf@t+1)& (0+255),b
  6927   001D70  518A               	movf	(powf@n+2)& (0+255),w,b
  6928   001D72  0100               	movlb	0	; () banked
  6929   001D74  1577               	andwf	(??_powf+7)& (0+255),w,b
  6930   001D76  0101               	movlb	1	; () banked
  6931   001D78  6FB2               	movwf	(powf@t+2)& (0+255),b
  6932   001D7A  518B               	movf	(powf@n+3)& (0+255),w,b
  6933   001D7C  0100               	movlb	0	; () banked
  6934   001D7E  1578               	andwf	(??_powf+8)& (0+255),w,b
  6935   001D80  0101               	movlb	1	; () banked
  6936   001D82  6FB3               	movwf	(powf@t+3)& (0+255),b
  6937   001D84  51A4               	movf	powf@k& (0+255),w,b
  6938   001D86  0817               	sublw	23
  6939   001D88  0100               	movlb	0	; () banked
  6940   001D8A  6F70               	movwf	??_powf& (0+255),b
  6941   001D8C  0EFF               	movlw	255
  6942   001D8E  0101               	movlb	1	; () banked
  6943   001D90  1588               	andwf	powf@n& (0+255),w,b
  6944   001D92  0100               	movlb	0	; () banked
  6945   001D94  6F71               	movwf	(??_powf+1)& (0+255),b
  6946   001D96  0EFF               	movlw	255
  6947   001D98  0101               	movlb	1	; () banked
  6948   001D9A  1589               	andwf	(powf@n+1)& (0+255),w,b
  6949   001D9C  0100               	movlb	0	; () banked
  6950   001D9E  6F72               	movwf	(??_powf+2)& (0+255),b
  6951   001DA0  0E7F               	movlw	127
  6952   001DA2  0101               	movlb	1	; () banked
  6953   001DA4  158A               	andwf	(powf@n+2)& (0+255),w,b
  6954   001DA6  0100               	movlb	0	; () banked
  6955   001DA8  6F73               	movwf	(??_powf+3)& (0+255),b
  6956   001DAA  0E00               	movlw	0
  6957   001DAC  0101               	movlb	1	; () banked
  6958   001DAE  158B               	andwf	(powf@n+3)& (0+255),w,b
  6959   001DB0  0100               	movlb	0	; () banked
  6960   001DB2  6F74               	movwf	(??_powf+4)& (0+255),b
  6961   001DB4  0E00               	movlw	0
  6962   001DB6  1171               	iorwf	(??_powf+1)& (0+255),w,b
  6963   001DB8  6F75               	movwf	(??_powf+5)& (0+255),b
  6964   001DBA  0E00               	movlw	0
  6965   001DBC  1172               	iorwf	(??_powf+2)& (0+255),w,b
  6966   001DBE  6F76               	movwf	(??_powf+6)& (0+255),b
  6967   001DC0  0E80               	movlw	128
  6968   001DC2  1173               	iorwf	(??_powf+3)& (0+255),w,b
  6969   001DC4  6F77               	movwf	(??_powf+7)& (0+255),b
  6970   001DC6  0E00               	movlw	0
  6971   001DC8  1174               	iorwf	(??_powf+4)& (0+255),w,b
  6972   001DCA  6F78               	movwf	(??_powf+8)& (0+255),b
  6973   001DCC                     u10145:
  6974   001DCC  6770               	tstfsz	??_powf& (0+255),b
  6975   001DCE  EFEB  F00E         	goto	u10146
  6976   001DD2  EFF3  F00E         	goto	u10147
  6977   001DD6                     u10146:
  6978   001DD6  3578               	rlcf	(??_powf+8)& (0+255),w,b
  6979   001DD8  3378               	rrcf	(??_powf+8)& (0+255),f,b
  6980   001DDA  3377               	rrcf	(??_powf+7)& (0+255),f,b
  6981   001DDC  3376               	rrcf	(??_powf+6)& (0+255),f,b
  6982   001DDE  3375               	rrcf	(??_powf+5)& (0+255),f,b
  6983   001DE0  2F70               	decfsz	??_powf& (0+255),f,b
  6984   001DE2  EFE6  F00E         	goto	u10145
  6985   001DE6                     u10147:
  6986   001DE6  C075  F188         	movff	??_powf+5,powf@n
  6987   001DEA  C076  F189         	movff	??_powf+6,powf@n+1
  6988   001DEE  C077  F18A         	movff	??_powf+7,powf@n+2
  6989   001DF2  C078  F18B         	movff	??_powf+8,powf@n+3
  6990   001DF6  0101               	movlb	1	; () banked
  6991   001DF8  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  6992   001DFA  EF03  F00F         	goto	u10150
  6993   001DFE  EF01  F00F         	goto	u10151
  6994   001E02                     u10151:
  6995   001E02  EF0B  F00F         	goto	l7712
  6996   001E06                     u10150:
  6997   001E06                     
  6998                           ; BSR set to: 1
  6999   001E06  1F8B               	comf	(powf@n+3)& (0+255),f,b
  7000   001E08  1F8A               	comf	(powf@n+2)& (0+255),f,b
  7001   001E0A  1F89               	comf	(powf@n+1)& (0+255),f,b
  7002   001E0C  6D88               	negf	powf@n& (0+255),b
  7003   001E0E  0E00               	movlw	0
  7004   001E10  2389               	addwfc	(powf@n+1)& (0+255),f,b
  7005   001E12  238A               	addwfc	(powf@n+2)& (0+255),f,b
  7006   001E14  238B               	addwfc	(powf@n+3)& (0+255),f,b
  7007   001E16                     l7712:
  7008                           
  7009                           ; BSR set to: 1
  7010   001E16  C1A0  F051         	movff	powf@p_h,___flsub@b
  7011   001E1A  C1A1  F052         	movff	powf@p_h+1,___flsub@b+1
  7012   001E1E  C1A2  F053         	movff	powf@p_h+2,___flsub@b+2
  7013   001E22  C1A3  F054         	movff	powf@p_h+3,___flsub@b+3
  7014   001E26  C1B0  F055         	movff	powf@t,___flsub@a
  7015   001E2A  C1B1  F056         	movff	powf@t+1,___flsub@a+1
  7016   001E2E  C1B2  F057         	movff	powf@t+2,___flsub@a+2
  7017   001E32  C1B3  F058         	movff	powf@t+3,___flsub@a+3
  7018   001E36  EC34  F036         	call	___flsub	;wreg free
  7019   001E3A  C051  F1A0         	movff	?___flsub,powf@p_h
  7020   001E3E  C052  F1A1         	movff	?___flsub+1,powf@p_h+1
  7021   001E42  C053  F1A2         	movff	?___flsub+2,powf@p_h+2
  7022   001E46  C054  F1A3         	movff	?___flsub+3,powf@p_h+3
  7023   001E4A                     l7714:
  7024   001E4A  C1A0  F041         	movff	powf@p_h,___fladd@b
  7025   001E4E  C1A1  F042         	movff	powf@p_h+1,___fladd@b+1
  7026   001E52  C1A2  F043         	movff	powf@p_h+2,___fladd@b+2
  7027   001E56  C1A3  F044         	movff	powf@p_h+3,___fladd@b+3
  7028   001E5A  C16C  F045         	movff	powf@p_l,___fladd@a
  7029   001E5E  C16D  F046         	movff	powf@p_l+1,___fladd@a+1
  7030   001E62  C16E  F047         	movff	powf@p_l+2,___fladd@a+2
  7031   001E66  C16F  F048         	movff	powf@p_l+3,___fladd@a+3
  7032   001E6A  ECB3  F01D         	call	___fladd	;wreg free
  7033   001E6E  C041  F1B0         	movff	?___fladd,powf@t
  7034   001E72  C042  F1B1         	movff	?___fladd+1,powf@t+1
  7035   001E76  C043  F1B2         	movff	?___fladd+2,powf@t+2
  7036   001E7A  C044  F1B3         	movff	?___fladd+3,powf@t+3
  7037   001E7E  C1B0  F198         	movff	powf@t,powf@is
  7038   001E82  C1B1  F199         	movff	powf@t+1,powf@is+1
  7039   001E86  C1B2  F19A         	movff	powf@t+2,powf@is+2
  7040   001E8A  C1B3  F19B         	movff	powf@t+3,powf@is+3
  7041   001E8E  0E00               	movlw	0
  7042   001E90  0101               	movlb	1	; () banked
  7043   001E92  1598               	andwf	powf@is& (0+255),w,b
  7044   001E94  6FB0               	movwf	powf@t& (0+255),b
  7045   001E96  0E80               	movlw	128
  7046   001E98  1599               	andwf	(powf@is+1)& (0+255),w,b
  7047   001E9A  6FB1               	movwf	(powf@t+1)& (0+255),b
  7048   001E9C  0EFF               	movlw	255
  7049   001E9E  159A               	andwf	(powf@is+2)& (0+255),w,b
  7050   001EA0  6FB2               	movwf	(powf@t+2)& (0+255),b
  7051   001EA2  0EFF               	movlw	255
  7052   001EA4  159B               	andwf	(powf@is+3)& (0+255),w,b
  7053   001EA6  6FB3               	movwf	(powf@t+3)& (0+255),b
  7054   001EA8                     
  7055                           ; BSR set to: 1
  7056   001EA8  C1B0  F00F         	movff	powf@t,___flmul@b
  7057   001EAC  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7058   001EB0  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7059   001EB4  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7060   001EB8  0E00               	movlw	0
  7061   001EBA  6E13               	movwf	___flmul@a^0,c
  7062   001EBC  0E72               	movlw	114
  7063   001EBE  6E14               	movwf	(___flmul@a+1)^0,c
  7064   001EC0  0E31               	movlw	49
  7065   001EC2  6E15               	movwf	(___flmul@a+2)^0,c
  7066   001EC4  0E3F               	movlw	63
  7067   001EC6  6E16               	movwf	(___flmul@a+3)^0,c
  7068   001EC8  EC0E  F020         	call	___flmul	;wreg free
  7069   001ECC  C00F  F17C         	movff	?___flmul,powf@u
  7070   001ED0  C010  F17D         	movff	?___flmul+1,powf@u+1
  7071   001ED4  C011  F17E         	movff	?___flmul+2,powf@u+2
  7072   001ED8  C012  F17F         	movff	?___flmul+3,powf@u+3
  7073   001EDC  C1A0  F055         	movff	powf@p_h,___flsub@a
  7074   001EE0  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  7075   001EE4  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  7076   001EE8  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  7077   001EEC  C1B0  F051         	movff	powf@t,___flsub@b
  7078   001EF0  C1B1  F052         	movff	powf@t+1,___flsub@b+1
  7079   001EF4  C1B2  F053         	movff	powf@t+2,___flsub@b+2
  7080   001EF8  C1B3  F054         	movff	powf@t+3,___flsub@b+3
  7081   001EFC  EC34  F036         	call	___flsub	;wreg free
  7082   001F00  C051  F19C         	movff	?___flsub,_powf$1842
  7083   001F04  C052  F19D         	movff	?___flsub+1,_powf$1842+1
  7084   001F08  C053  F19E         	movff	?___flsub+2,_powf$1842+2
  7085   001F0C  C054  F19F         	movff	?___flsub+3,_powf$1842+3
  7086   001F10  0E18               	movlw	24
  7087   001F12  6E13               	movwf	___flmul@a^0,c
  7088   001F14  0E72               	movlw	114
  7089   001F16  6E14               	movwf	(___flmul@a+1)^0,c
  7090   001F18  0E31               	movlw	49
  7091   001F1A  6E15               	movwf	(___flmul@a+2)^0,c
  7092   001F1C  0E3F               	movlw	63
  7093   001F1E  6E16               	movwf	(___flmul@a+3)^0,c
  7094   001F20  C19C  F055         	movff	_powf$1842,___flsub@a
  7095   001F24  C19D  F056         	movff	_powf$1842+1,___flsub@a+1
  7096   001F28  C19E  F057         	movff	_powf$1842+2,___flsub@a+2
  7097   001F2C  C19F  F058         	movff	_powf$1842+3,___flsub@a+3
  7098   001F30  C16C  F051         	movff	powf@p_l,___flsub@b
  7099   001F34  C16D  F052         	movff	powf@p_l+1,___flsub@b+1
  7100   001F38  C16E  F053         	movff	powf@p_l+2,___flsub@b+2
  7101   001F3C  C16F  F054         	movff	powf@p_l+3,___flsub@b+3
  7102   001F40  EC34  F036         	call	___flsub	;wreg free
  7103   001F44  C051  F00F         	movff	?___flsub,___flmul@b
  7104   001F48  C052  F010         	movff	?___flsub+1,___flmul@b+1
  7105   001F4C  C053  F011         	movff	?___flsub+2,___flmul@b+2
  7106   001F50  C054  F012         	movff	?___flsub+3,___flmul@b+3
  7107   001F54  EC0E  F020         	call	___flmul	;wreg free
  7108   001F58  C00F  F114         	movff	?___flmul,_powf$1852
  7109   001F5C  C010  F115         	movff	?___flmul+1,_powf$1852+1
  7110   001F60  C011  F116         	movff	?___flmul+2,_powf$1852+2
  7111   001F64  C012  F117         	movff	?___flmul+3,_powf$1852+3
  7112   001F68  C114  F041         	movff	_powf$1852,___fladd@b
  7113   001F6C  C115  F042         	movff	_powf$1852+1,___fladd@b+1
  7114   001F70  C116  F043         	movff	_powf$1852+2,___fladd@b+2
  7115   001F74  C117  F044         	movff	_powf$1852+3,___fladd@b+3
  7116   001F78  0E8C               	movlw	140
  7117   001F7A  6E13               	movwf	___flmul@a^0,c
  7118   001F7C  0EBE               	movlw	190
  7119   001F7E  6E14               	movwf	(___flmul@a+1)^0,c
  7120   001F80  0EBF               	movlw	191
  7121   001F82  6E15               	movwf	(___flmul@a+2)^0,c
  7122   001F84  0E35               	movlw	53
  7123   001F86  6E16               	movwf	(___flmul@a+3)^0,c
  7124   001F88  C1B0  F00F         	movff	powf@t,___flmul@b
  7125   001F8C  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7126   001F90  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7127   001F94  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7128   001F98  EC0E  F020         	call	___flmul	;wreg free
  7129   001F9C  C00F  F045         	movff	?___flmul,___fladd@a
  7130   001FA0  C010  F046         	movff	?___flmul+1,___fladd@a+1
  7131   001FA4  C011  F047         	movff	?___flmul+2,___fladd@a+2
  7132   001FA8  C012  F048         	movff	?___flmul+3,___fladd@a+3
  7133   001FAC  ECB3  F01D         	call	___fladd	;wreg free
  7134   001FB0  C041  F180         	movff	?___fladd,powf@v
  7135   001FB4  C042  F181         	movff	?___fladd+1,powf@v+1
  7136   001FB8  C043  F182         	movff	?___fladd+2,powf@v+2
  7137   001FBC  C044  F183         	movff	?___fladd+3,powf@v+3
  7138   001FC0  C17C  F041         	movff	powf@u,___fladd@b
  7139   001FC4  C17D  F042         	movff	powf@u+1,___fladd@b+1
  7140   001FC8  C17E  F043         	movff	powf@u+2,___fladd@b+2
  7141   001FCC  C17F  F044         	movff	powf@u+3,___fladd@b+3
  7142   001FD0  C180  F045         	movff	powf@v,___fladd@a
  7143   001FD4  C181  F046         	movff	powf@v+1,___fladd@a+1
  7144   001FD8  C182  F047         	movff	powf@v+2,___fladd@a+2
  7145   001FDC  C183  F048         	movff	powf@v+3,___fladd@a+3
  7146   001FE0  ECB3  F01D         	call	___fladd	;wreg free
  7147   001FE4  C041  F1B4         	movff	?___fladd,powf@z
  7148   001FE8  C042  F1B5         	movff	?___fladd+1,powf@z+1
  7149   001FEC  C043  F1B6         	movff	?___fladd+2,powf@z+2
  7150   001FF0  C044  F1B7         	movff	?___fladd+3,powf@z+3
  7151   001FF4  C17C  F055         	movff	powf@u,___flsub@a
  7152   001FF8  C17D  F056         	movff	powf@u+1,___flsub@a+1
  7153   001FFC  C17E  F057         	movff	powf@u+2,___flsub@a+2
  7154   002000  C17F  F058         	movff	powf@u+3,___flsub@a+3
  7155   002004  C1B4  F051         	movff	powf@z,___flsub@b
  7156   002008  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  7157   00200C  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  7158   002010  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  7159   002014  EC34  F036         	call	___flsub	;wreg free
  7160   002018  C051  F19C         	movff	?___flsub,_powf$1842
  7161   00201C  C052  F19D         	movff	?___flsub+1,_powf$1842+1
  7162   002020  C053  F19E         	movff	?___flsub+2,_powf$1842+2
  7163   002024  C054  F19F         	movff	?___flsub+3,_powf$1842+3
  7164   002028  C180  F051         	movff	powf@v,___flsub@b
  7165   00202C  C181  F052         	movff	powf@v+1,___flsub@b+1
  7166   002030  C182  F053         	movff	powf@v+2,___flsub@b+2
  7167   002034  C183  F054         	movff	powf@v+3,___flsub@b+3
  7168   002038  C19C  F055         	movff	_powf$1842,___flsub@a
  7169   00203C  C19D  F056         	movff	_powf$1842+1,___flsub@a+1
  7170   002040  C19E  F057         	movff	_powf$1842+2,___flsub@a+2
  7171   002044  C19F  F058         	movff	_powf$1842+3,___flsub@a+3
  7172   002048  EC34  F036         	call	___flsub	;wreg free
  7173   00204C  C051  F144         	movff	?___flsub,powf@w
  7174   002050  C052  F145         	movff	?___flsub+1,powf@w+1
  7175   002054  C053  F146         	movff	?___flsub+2,powf@w+2
  7176   002058  C054  F147         	movff	?___flsub+3,powf@w+3
  7177   00205C  C1B4  F00F         	movff	powf@z,___flmul@b
  7178   002060  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7179   002064  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7180   002068  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7181   00206C  C1B4  F013         	movff	powf@z,___flmul@a
  7182   002070  C1B5  F014         	movff	powf@z+1,___flmul@a+1
  7183   002074  C1B6  F015         	movff	powf@z+2,___flmul@a+2
  7184   002078  C1B7  F016         	movff	powf@z+3,___flmul@a+3
  7185   00207C  EC0E  F020         	call	___flmul	;wreg free
  7186   002080  C00F  F1B0         	movff	?___flmul,powf@t
  7187   002084  C010  F1B1         	movff	?___flmul+1,powf@t+1
  7188   002088  C011  F1B2         	movff	?___flmul+2,powf@t+2
  7189   00208C  C012  F1B3         	movff	?___flmul+3,powf@t+3
  7190   002090  0E0E               	movlw	14
  7191   002092  6E45               	movwf	___fladd@a^0,c
  7192   002094  0EEA               	movlw	234
  7193   002096  6E46               	movwf	(___fladd@a+1)^0,c
  7194   002098  0EDD               	movlw	221
  7195   00209A  6E47               	movwf	(___fladd@a+2)^0,c
  7196   00209C  0EB5               	movlw	181
  7197   00209E  6E48               	movwf	(___fladd@a+3)^0,c
  7198   0020A0  0E4C               	movlw	76
  7199   0020A2  6E13               	movwf	___flmul@a^0,c
  7200   0020A4  0EBB               	movlw	187
  7201   0020A6  6E14               	movwf	(___flmul@a+1)^0,c
  7202   0020A8  0E31               	movlw	49
  7203   0020AA  6E15               	movwf	(___flmul@a+2)^0,c
  7204   0020AC  0E33               	movlw	51
  7205   0020AE  6E16               	movwf	(___flmul@a+3)^0,c
  7206   0020B0  C1B0  F00F         	movff	powf@t,___flmul@b
  7207   0020B4  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7208   0020B8  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7209   0020BC  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7210   0020C0  EC0E  F020         	call	___flmul	;wreg free
  7211   0020C4  C00F  F041         	movff	?___flmul,___fladd@b
  7212   0020C8  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7213   0020CC  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7214   0020D0  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7215   0020D4  ECB3  F01D         	call	___fladd	;wreg free
  7216   0020D8  C041  F148         	movff	?___fladd,_powf$1839
  7217   0020DC  C042  F149         	movff	?___fladd+1,_powf$1839+1
  7218   0020E0  C043  F14A         	movff	?___fladd+2,_powf$1839+2
  7219   0020E4  C044  F14B         	movff	?___fladd+3,_powf$1839+3
  7220   0020E8  0E55               	movlw	85
  7221   0020EA  6E45               	movwf	___fladd@a^0,c
  7222   0020EC  0EB3               	movlw	179
  7223   0020EE  6E46               	movwf	(___fladd@a+1)^0,c
  7224   0020F0  0E8A               	movlw	138
  7225   0020F2  6E47               	movwf	(___fladd@a+2)^0,c
  7226   0020F4  0E38               	movlw	56
  7227   0020F6  6E48               	movwf	(___fladd@a+3)^0,c
  7228   0020F8  C1B0  F013         	movff	powf@t,___flmul@a
  7229   0020FC  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7230   002100  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7231   002104  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7232   002108  C148  F00F         	movff	_powf$1839,___flmul@b
  7233   00210C  C149  F010         	movff	_powf$1839+1,___flmul@b+1
  7234   002110  C14A  F011         	movff	_powf$1839+2,___flmul@b+2
  7235   002114  C14B  F012         	movff	_powf$1839+3,___flmul@b+3
  7236   002118  EC0E  F020         	call	___flmul	;wreg free
  7237   00211C  C00F  F041         	movff	?___flmul,___fladd@b
  7238   002120  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7239   002124  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7240   002128  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7241   00212C  ECB3  F01D         	call	___fladd	;wreg free
  7242   002130  C041  F158         	movff	?___fladd,_powf$1840
  7243   002134  C042  F159         	movff	?___fladd+1,_powf$1840+1
  7244   002138  C043  F15A         	movff	?___fladd+2,_powf$1840+2
  7245   00213C  C044  F15B         	movff	?___fladd+3,_powf$1840+3
  7246   002140  0E61               	movlw	97
  7247   002142  6E45               	movwf	___fladd@a^0,c
  7248   002144  0E0B               	movlw	11
  7249   002146  6E46               	movwf	(___fladd@a+1)^0,c
  7250   002148  0E36               	movlw	54
  7251   00214A  6E47               	movwf	(___fladd@a+2)^0,c
  7252   00214C  0EBB               	movlw	187
  7253   00214E  6E48               	movwf	(___fladd@a+3)^0,c
  7254   002150  C1B0  F013         	movff	powf@t,___flmul@a
  7255   002154  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7256   002158  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7257   00215C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7258   002160  C158  F00F         	movff	_powf$1840,___flmul@b
  7259   002164  C159  F010         	movff	_powf$1840+1,___flmul@b+1
  7260   002168  C15A  F011         	movff	_powf$1840+2,___flmul@b+2
  7261   00216C  C15B  F012         	movff	_powf$1840+3,___flmul@b+3
  7262   002170  EC0E  F020         	call	___flmul	;wreg free
  7263   002174  C00F  F041         	movff	?___flmul,___fladd@b
  7264   002178  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7265   00217C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7266   002180  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7267   002184  ECB3  F01D         	call	___fladd	;wreg free
  7268   002188  C041  F14C         	movff	?___fladd,_powf$1841
  7269   00218C  C042  F14D         	movff	?___fladd+1,_powf$1841+1
  7270   002190  C043  F14E         	movff	?___fladd+2,_powf$1841+2
  7271   002194  C044  F14F         	movff	?___fladd+3,_powf$1841+3
  7272   002198  0EAB               	movlw	171
  7273   00219A  6E45               	movwf	___fladd@a^0,c
  7274   00219C  0EAA               	movlw	170
  7275   00219E  6E46               	movwf	(___fladd@a+1)^0,c
  7276   0021A0  0E2A               	movlw	42
  7277   0021A2  6E47               	movwf	(___fladd@a+2)^0,c
  7278   0021A4  0E3E               	movlw	62
  7279   0021A6  6E48               	movwf	(___fladd@a+3)^0,c
  7280   0021A8  C1B0  F013         	movff	powf@t,___flmul@a
  7281   0021AC  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7282   0021B0  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7283   0021B4  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7284   0021B8  C14C  F00F         	movff	_powf$1841,___flmul@b
  7285   0021BC  C14D  F010         	movff	_powf$1841+1,___flmul@b+1
  7286   0021C0  C14E  F011         	movff	_powf$1841+2,___flmul@b+2
  7287   0021C4  C14F  F012         	movff	_powf$1841+3,___flmul@b+3
  7288   0021C8  EC0E  F020         	call	___flmul	;wreg free
  7289   0021CC  C00F  F041         	movff	?___flmul,___fladd@b
  7290   0021D0  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7291   0021D4  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7292   0021D8  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7293   0021DC  ECB3  F01D         	call	___fladd	;wreg free
  7294   0021E0  C041  F138         	movff	?___fladd,_powf$1843
  7295   0021E4  C042  F139         	movff	?___fladd+1,_powf$1843+1
  7296   0021E8  C043  F13A         	movff	?___fladd+2,_powf$1843+2
  7297   0021EC  C044  F13B         	movff	?___fladd+3,_powf$1843+3
  7298   0021F0  C1B4  F051         	movff	powf@z,___flsub@b
  7299   0021F4  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  7300   0021F8  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  7301   0021FC  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  7302   002200  C1B0  F013         	movff	powf@t,___flmul@a
  7303   002204  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7304   002208  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7305   00220C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7306   002210  C138  F00F         	movff	_powf$1843,___flmul@b
  7307   002214  C139  F010         	movff	_powf$1843+1,___flmul@b+1
  7308   002218  C13A  F011         	movff	_powf$1843+2,___flmul@b+2
  7309   00221C  C13B  F012         	movff	_powf$1843+3,___flmul@b+3
  7310   002220  EC0E  F020         	call	___flmul	;wreg free
  7311   002224  C00F  F055         	movff	?___flmul,___flsub@a
  7312   002228  C010  F056         	movff	?___flmul+1,___flsub@a+1
  7313   00222C  C011  F057         	movff	?___flmul+2,___flsub@a+2
  7314   002230  C012  F058         	movff	?___flmul+3,___flsub@a+3
  7315   002234  EC34  F036         	call	___flsub	;wreg free
  7316   002238  C051  F18C         	movff	?___flsub,powf@t1
  7317   00223C  C052  F18D         	movff	?___flsub+1,powf@t1+1
  7318   002240  C053  F18E         	movff	?___flsub+2,powf@t1+2
  7319   002244  C054  F18F         	movff	?___flsub+3,powf@t1+3
  7320   002248  0E00               	movlw	0
  7321   00224A  6E45               	movwf	___fladd@a^0,c
  7322   00224C  0E00               	movlw	0
  7323   00224E  6E46               	movwf	(___fladd@a+1)^0,c
  7324   002250  0E00               	movlw	0
  7325   002252  6E47               	movwf	(___fladd@a+2)^0,c
  7326   002254  0EC0               	movlw	192
  7327   002256  6E48               	movwf	(___fladd@a+3)^0,c
  7328   002258  C18C  F041         	movff	powf@t1,___fladd@b
  7329   00225C  C18D  F042         	movff	powf@t1+1,___fladd@b+1
  7330   002260  C18E  F043         	movff	powf@t1+2,___fladd@b+2
  7331   002264  C18F  F044         	movff	powf@t1+3,___fladd@b+3
  7332   002268  ECB3  F01D         	call	___fladd	;wreg free
  7333   00226C  C041  F02C         	movff	?___fladd,___fldiv@a
  7334   002270  C042  F02D         	movff	?___fladd+1,___fldiv@a+1
  7335   002274  C043  F02E         	movff	?___fladd+2,___fldiv@a+2
  7336   002278  C044  F02F         	movff	?___fladd+3,___fldiv@a+3
  7337   00227C  C18C  F013         	movff	powf@t1,___flmul@a
  7338   002280  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  7339   002284  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  7340   002288  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  7341   00228C  C1B4  F00F         	movff	powf@z,___flmul@b
  7342   002290  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7343   002294  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7344   002298  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7345   00229C  EC0E  F020         	call	___flmul	;wreg free
  7346   0022A0  C00F  F028         	movff	?___flmul,___fldiv@b
  7347   0022A4  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  7348   0022A8  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  7349   0022AC  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  7350   0022B0  EC10  F024         	call	___fldiv	;wreg free
  7351   0022B4  C028  F13C         	movff	?___fldiv,_powf$1847
  7352   0022B8  C029  F13D         	movff	?___fldiv+1,_powf$1847+1
  7353   0022BC  C02A  F13E         	movff	?___fldiv+2,_powf$1847+2
  7354   0022C0  C02B  F13F         	movff	?___fldiv+3,_powf$1847+3
  7355   0022C4  C144  F045         	movff	powf@w,___fladd@a
  7356   0022C8  C145  F046         	movff	powf@w+1,___fladd@a+1
  7357   0022CC  C146  F047         	movff	powf@w+2,___fladd@a+2
  7358   0022D0  C147  F048         	movff	powf@w+3,___fladd@a+3
  7359   0022D4  C144  F013         	movff	powf@w,___flmul@a
  7360   0022D8  C145  F014         	movff	powf@w+1,___flmul@a+1
  7361   0022DC  C146  F015         	movff	powf@w+2,___flmul@a+2
  7362   0022E0  C147  F016         	movff	powf@w+3,___flmul@a+3
  7363   0022E4  C1B4  F00F         	movff	powf@z,___flmul@b
  7364   0022E8  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7365   0022EC  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7366   0022F0  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7367   0022F4  EC0E  F020         	call	___flmul	;wreg free
  7368   0022F8  C00F  F041         	movff	?___flmul,___fladd@b
  7369   0022FC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7370   002300  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7371   002304  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7372   002308  ECB3  F01D         	call	___fladd	;wreg free
  7373   00230C  C041  F118         	movff	?___fladd,_powf$1853
  7374   002310  C042  F119         	movff	?___fladd+1,_powf$1853+1
  7375   002314  C043  F11A         	movff	?___fladd+2,_powf$1853+2
  7376   002318  C044  F11B         	movff	?___fladd+3,_powf$1853+3
  7377   00231C  C13C  F051         	movff	_powf$1847,___flsub@b
  7378   002320  C13D  F052         	movff	_powf$1847+1,___flsub@b+1
  7379   002324  C13E  F053         	movff	_powf$1847+2,___flsub@b+2
  7380   002328  C13F  F054         	movff	_powf$1847+3,___flsub@b+3
  7381   00232C  C118  F055         	movff	_powf$1853,___flsub@a
  7382   002330  C119  F056         	movff	_powf$1853+1,___flsub@a+1
  7383   002334  C11A  F057         	movff	_powf$1853+2,___flsub@a+2
  7384   002338  C11B  F058         	movff	_powf$1853+3,___flsub@a+3
  7385   00233C  EC34  F036         	call	___flsub	;wreg free
  7386   002340  C051  F150         	movff	?___flsub,powf@r
  7387   002344  C052  F151         	movff	?___flsub+1,powf@r+1
  7388   002348  C053  F152         	movff	?___flsub+2,powf@r+2
  7389   00234C  C054  F153         	movff	?___flsub+3,powf@r+3
  7390   002350  C1B4  F055         	movff	powf@z,___flsub@a
  7391   002354  C1B5  F056         	movff	powf@z+1,___flsub@a+1
  7392   002358  C1B6  F057         	movff	powf@z+2,___flsub@a+2
  7393   00235C  C1B7  F058         	movff	powf@z+3,___flsub@a+3
  7394   002360  C150  F051         	movff	powf@r,___flsub@b
  7395   002364  C151  F052         	movff	powf@r+1,___flsub@b+1
  7396   002368  C152  F053         	movff	powf@r+2,___flsub@b+2
  7397   00236C  C153  F054         	movff	powf@r+3,___flsub@b+3
  7398   002370  EC34  F036         	call	___flsub	;wreg free
  7399   002374  C051  F19C         	movff	?___flsub,_powf$1842
  7400   002378  C052  F19D         	movff	?___flsub+1,_powf$1842+1
  7401   00237C  C053  F19E         	movff	?___flsub+2,_powf$1842+2
  7402   002380  C054  F19F         	movff	?___flsub+3,_powf$1842+3
  7403   002384  0E00               	movlw	0
  7404   002386  6E51               	movwf	___flsub@b^0,c
  7405   002388  0E00               	movlw	0
  7406   00238A  6E52               	movwf	(___flsub@b+1)^0,c
  7407   00238C  0E80               	movlw	128
  7408   00238E  6E53               	movwf	(___flsub@b+2)^0,c
  7409   002390  0E3F               	movlw	63
  7410   002392  6E54               	movwf	(___flsub@b+3)^0,c
  7411   002394  C19C  F055         	movff	_powf$1842,___flsub@a
  7412   002398  C19D  F056         	movff	_powf$1842+1,___flsub@a+1
  7413   00239C  C19E  F057         	movff	_powf$1842+2,___flsub@a+2
  7414   0023A0  C19F  F058         	movff	_powf$1842+3,___flsub@a+3
  7415   0023A4  EC34  F036         	call	___flsub	;wreg free
  7416   0023A8  C051  F1B4         	movff	?___flsub,powf@z
  7417   0023AC  C052  F1B5         	movff	?___flsub+1,powf@z+1
  7418   0023B0  C053  F1B6         	movff	?___flsub+2,powf@z+2
  7419   0023B4  C054  F1B7         	movff	?___flsub+3,powf@z+3
  7420   0023B8  C1B4  F1A8         	movff	powf@z,powf@j
  7421   0023BC  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  7422   0023C0  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  7423   0023C4  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  7424   0023C8  C188  F070         	movff	powf@n,??_powf
  7425   0023CC  C189  F071         	movff	powf@n+1,??_powf+1
  7426   0023D0  C18A  F072         	movff	powf@n+2,??_powf+2
  7427   0023D4  C18B  F073         	movff	powf@n+3,??_powf+3
  7428   0023D8  0E17               	movlw	23
  7429   0023DA                     u10165:
  7430   0023DA  90D8               	bcf	status,0,c
  7431   0023DC  0100               	movlb	0	; () banked
  7432   0023DE  3770               	rlcf	??_powf& (0+255),f,b
  7433   0023E0  3771               	rlcf	(??_powf+1)& (0+255),f,b
  7434   0023E2  3772               	rlcf	(??_powf+2)& (0+255),f,b
  7435   0023E4  3773               	rlcf	(??_powf+3)& (0+255),f,b
  7436   0023E6  2EE8               	decfsz	wreg,f,c
  7437   0023E8  EFED  F011         	goto	u10165
  7438   0023EC  5170               	movf	??_powf& (0+255),w,b
  7439   0023EE  0101               	movlb	1	; () banked
  7440   0023F0  27A8               	addwf	powf@j& (0+255),f,b
  7441   0023F2  0100               	movlb	0	; () banked
  7442   0023F4  5171               	movf	(??_powf+1)& (0+255),w,b
  7443   0023F6  0101               	movlb	1	; () banked
  7444   0023F8  23A9               	addwfc	(powf@j+1)& (0+255),f,b
  7445   0023FA  0100               	movlb	0	; () banked
  7446   0023FC  5172               	movf	(??_powf+2)& (0+255),w,b
  7447   0023FE  0101               	movlb	1	; () banked
  7448   002400  23AA               	addwfc	(powf@j+2)& (0+255),f,b
  7449   002402  0100               	movlb	0	; () banked
  7450   002404  5173               	movf	(??_powf+3)& (0+255),w,b
  7451   002406  0101               	movlb	1	; () banked
  7452   002408  23AB               	addwfc	(powf@j+3)& (0+255),f,b
  7453   00240A                     
  7454                           ; BSR set to: 1
  7455   00240A  0E17               	movlw	23
  7456   00240C  0100               	movlb	0	; () banked
  7457   00240E  6F70               	movwf	??_powf& (0+255),b
  7458   002410  C1A8  F071         	movff	powf@j,??_powf+1
  7459   002414  C1A9  F072         	movff	powf@j+1,??_powf+2
  7460   002418  C1AA  F073         	movff	powf@j+2,??_powf+3
  7461   00241C  C1AB  F074         	movff	powf@j+3,??_powf+4
  7462   002420                     u10175:
  7463   002420  6770               	tstfsz	??_powf& (0+255),b
  7464   002422  EF15  F012         	goto	u10176
  7465   002426  EF1D  F012         	goto	u10177
  7466   00242A                     u10176:
  7467   00242A  3574               	rlcf	(??_powf+4)& (0+255),w,b
  7468   00242C  3374               	rrcf	(??_powf+4)& (0+255),f,b
  7469   00242E  3373               	rrcf	(??_powf+3)& (0+255),f,b
  7470   002430  3372               	rrcf	(??_powf+2)& (0+255),f,b
  7471   002432  3371               	rrcf	(??_powf+1)& (0+255),f,b
  7472   002434  2F70               	decfsz	??_powf& (0+255),f,b
  7473   002436  EF10  F012         	goto	u10175
  7474   00243A                     u10177:
  7475   00243A  0100               	movlb	0	; () banked
  7476   00243C  BF74               	btfsc	(??_powf+4)& (0+255),7,b
  7477   00243E  EF2D  F012         	goto	u10180
  7478   002442  5174               	movf	(??_powf+4)& (0+255),w,b
  7479   002444  1173               	iorwf	(??_powf+3)& (0+255),w,b
  7480   002446  1172               	iorwf	(??_powf+2)& (0+255),w,b
  7481   002448  E106               	bnz	u10181
  7482   00244A  0571               	decf	(??_powf+1)& (0+255),w,b
  7483   00244C  B0D8               	btfsc	status,0,c
  7484   00244E  EF2B  F012         	goto	u10181
  7485   002452  EF2D  F012         	goto	u10180
  7486   002456                     u10181:
  7487   002456  EF45  F012         	goto	l1335
  7488   00245A                     u10180:
  7489   00245A                     
  7490                           ; BSR set to: 0
  7491   00245A  C1B4  F028         	movff	powf@z,scalbnf@x
  7492   00245E  C1B5  F029         	movff	powf@z+1,scalbnf@x+1
  7493   002462  C1B6  F02A         	movff	powf@z+2,scalbnf@x+2
  7494   002466  C1B7  F02B         	movff	powf@z+3,scalbnf@x+3
  7495   00246A  C188  F02C         	movff	powf@n,scalbnf@n
  7496   00246E  C189  F02D         	movff	powf@n+1,scalbnf@n+1
  7497   002472  ECDF  F028         	call	_scalbnf	;wreg free
  7498   002476  C028  F1B4         	movff	?_scalbnf,powf@z
  7499   00247A  C029  F1B5         	movff	?_scalbnf+1,powf@z+1
  7500   00247E  C02A  F1B6         	movff	?_scalbnf+2,powf@z+2
  7501   002482  C02B  F1B7         	movff	?_scalbnf+3,powf@z+3
  7502   002486  EF4D  F012         	goto	l7764
  7503   00248A                     l1335:
  7504                           
  7505                           ; BSR set to: 0
  7506   00248A  C1A8  F1B4         	movff	powf@j,powf@z
  7507   00248E  C1A9  F1B5         	movff	powf@j+1,powf@z+1
  7508   002492  C1AA  F1B6         	movff	powf@j+2,powf@z+2
  7509   002496  C1AB  F1B7         	movff	powf@j+3,powf@z+3
  7510   00249A                     l7764:
  7511   00249A  0101               	movlb	1	; () banked
  7512   00249C  51B4               	movf	powf@z& (0+255),w,b
  7513   00249E  11B5               	iorwf	(powf@z+1)& (0+255),w,b
  7514   0024A0  11B6               	iorwf	(powf@z+2)& (0+255),w,b
  7515   0024A2  11B7               	iorwf	(powf@z+3)& (0+255),w,b
  7516   0024A4  B4D8               	btfsc	status,2,c
  7517   0024A6  EF57  F012         	goto	u10191
  7518   0024AA  EF59  F012         	goto	u10190
  7519   0024AE                     u10191:
  7520   0024AE  EF3F  F003         	goto	l7450
  7521   0024B2                     u10190:
  7522   0024B2                     
  7523                           ; BSR set to: 1
  7524   0024B2  5164               	movf	powf@sn& (0+255),w,b
  7525   0024B4  1BB4               	xorwf	powf@z& (0+255),f,b
  7526   0024B6  5165               	movf	(powf@sn+1)& (0+255),w,b
  7527   0024B8  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
  7528   0024BA  5166               	movf	(powf@sn+2)& (0+255),w,b
  7529   0024BC  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
  7530   0024BE  5167               	movf	(powf@sn+3)& (0+255),w,b
  7531   0024C0  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
  7532   0024C2  EF3F  F003         	goto	l7450
  7533   0024C6                     l1269:
  7534   0024C6  0012               	return		;funcret
  7535   0024C8                     __end_of_powf:
  7536                           	callstack 0
  7537                           
  7538 ;; *************** function _sqrtf *****************
  7539 ;; Defined at:
  7540 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sqrtf.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  x               4    0[COMRAM] float 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  ix              4   33[COMRAM] struct .
  7545 ;;  r               4   29[COMRAM] unsigned long 
  7546 ;;  m               4   25[COMRAM] long 
  7547 ;;  t               4   21[COMRAM] long 
  7548 ;;  q               4   17[COMRAM] long 
  7549 ;;  i               4   13[COMRAM] long 
  7550 ;;  s               4    9[COMRAM] long 
  7551 ;;  z               4    0        float 
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  4    0[COMRAM] float 
  7554 ;; Registers used:
  7555 ;;		wreg, status,2, status,0
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7561 ;;      Params:         4       0       0       0       0       0       0       0       0
  7562 ;;      Locals:        28       0       0       0       0       0       0       0       0
  7563 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7564 ;;      Totals:        37       0       0       0       0       0       0       0       0
  7565 ;;Total ram usage:       37 bytes
  7566 ;; Hardware stack levels used: 1
  7567 ;; Hardware stack levels required when called: 1
  7568 ;; This function calls:
  7569 ;;		Nothing
  7570 ;; This function is called by:
  7571 ;;		_powf
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text7
  7576   004442                     __ptext7:
  7577                           	callstack 0
  7578   004442                     _sqrtf:
  7579                           	callstack 27
  7580   004442  C001  F022         	movff	sqrtf@x,sqrtf@ix
  7581   004446  C002  F023         	movff	sqrtf@x+1,sqrtf@ix+1
  7582   00444A  C003  F024         	movff	sqrtf@x+2,sqrtf@ix+2
  7583   00444E  C004  F025         	movff	sqrtf@x+3,sqrtf@ix+3
  7584   004452  0E00               	movlw	0
  7585   004454  1422               	andwf	sqrtf@ix^0,w,c
  7586   004456  6E05               	movwf	??_sqrtf^0,c
  7587   004458  0E00               	movlw	0
  7588   00445A  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7589   00445C  6E06               	movwf	(??_sqrtf+1)^0,c
  7590   00445E  0E80               	movlw	128
  7591   004460  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7592   004462  6E07               	movwf	(??_sqrtf+2)^0,c
  7593   004464  0E7F               	movlw	127
  7594   004466  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7595   004468  6E08               	movwf	(??_sqrtf+3)^0,c
  7596   00446A  0E80               	movlw	128
  7597   00446C  1807               	xorwf	(??_sqrtf+2)^0,w,c
  7598   00446E  E109               	bnz	u9361
  7599   004470  0E7F               	movlw	127
  7600   004472  1808               	xorwf	(??_sqrtf+3)^0,w,c
  7601   004474  1005               	iorwf	??_sqrtf^0,w,c
  7602   004476  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7603   004478  A4D8               	btfss	status,2,c
  7604   00447A  EF41  F022         	goto	u9361
  7605   00447E  EF43  F022         	goto	u9360
  7606   004482                     u9361:
  7607   004482  EF73  F022         	goto	l7216
  7608   004486                     u9360:
  7609   004486  0EFF               	movlw	255
  7610   004488  1422               	andwf	sqrtf@ix^0,w,c
  7611   00448A  6E05               	movwf	??_sqrtf^0,c
  7612   00448C  0EFF               	movlw	255
  7613   00448E  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7614   004490  6E06               	movwf	(??_sqrtf+1)^0,c
  7615   004492  0E7F               	movlw	127
  7616   004494  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7617   004496  6E07               	movwf	(??_sqrtf+2)^0,c
  7618   004498  0E00               	movlw	0
  7619   00449A  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7620   00449C  6E08               	movwf	(??_sqrtf+3)^0,c
  7621   00449E  5005               	movf	??_sqrtf^0,w,c
  7622   0044A0  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7623   0044A2  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7624   0044A4  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7625   0044A6  A4D8               	btfss	status,2,c
  7626   0044A8  EF58  F022         	goto	u9371
  7627   0044AC  EF5A  F022         	goto	u9370
  7628   0044B0                     u9371:
  7629   0044B0  EF61  F022         	goto	l7210
  7630   0044B4                     u9370:
  7631   0044B4  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7632   0044B6  EF61  F022         	goto	u9380
  7633   0044BA  EF5F  F022         	goto	u9381
  7634   0044BE                     u9381:
  7635   0044BE  EF69  F022         	goto	l7212
  7636   0044C2                     u9380:
  7637   0044C2                     l7210:
  7638   0044C2  0EFF               	movlw	255
  7639   0044C4  1222               	iorwf	sqrtf@ix^0,f,c
  7640   0044C6  0EFF               	movlw	255
  7641   0044C8  1223               	iorwf	(sqrtf@ix+1)^0,f,c
  7642   0044CA  0E7F               	movlw	127
  7643   0044CC  1224               	iorwf	(sqrtf@ix+2)^0,f,c
  7644   0044CE  0E00               	movlw	0
  7645   0044D0  1225               	iorwf	(sqrtf@ix+3)^0,f,c
  7646   0044D2                     l7212:
  7647   0044D2  C022  F001         	movff	sqrtf@ix,?_sqrtf
  7648   0044D6  C023  F002         	movff	sqrtf@ix+1,?_sqrtf+1
  7649   0044DA  C024  F003         	movff	sqrtf@ix+2,?_sqrtf+2
  7650   0044DE  C025  F004         	movff	sqrtf@ix+3,?_sqrtf+3
  7651   0044E2  EF0F  F024         	goto	l1361
  7652   0044E6                     l7216:
  7653   0044E6  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7654   0044E8  EF82  F022         	goto	u9390
  7655   0044EC  5025               	movf	(sqrtf@ix+3)^0,w,c
  7656   0044EE  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7657   0044F0  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7658   0044F2  E106               	bnz	u9391
  7659   0044F4  0422               	decf	sqrtf@ix^0,w,c
  7660   0044F6  B0D8               	btfsc	status,0,c
  7661   0044F8  EF80  F022         	goto	u9391
  7662   0044FC  EF82  F022         	goto	u9390
  7663   004500                     u9391:
  7664   004500  EFB9  F022         	goto	l7232
  7665   004504                     u9390:
  7666   004504  0EFF               	movlw	255
  7667   004506  1422               	andwf	sqrtf@ix^0,w,c
  7668   004508  6E05               	movwf	??_sqrtf^0,c
  7669   00450A  0EFF               	movlw	255
  7670   00450C  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7671   00450E  6E06               	movwf	(??_sqrtf+1)^0,c
  7672   004510  0EFF               	movlw	255
  7673   004512  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7674   004514  6E07               	movwf	(??_sqrtf+2)^0,c
  7675   004516  0E7F               	movlw	127
  7676   004518  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7677   00451A  6E08               	movwf	(??_sqrtf+3)^0,c
  7678   00451C  5005               	movf	??_sqrtf^0,w,c
  7679   00451E  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7680   004520  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7681   004522  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7682   004524  A4D8               	btfss	status,2,c
  7683   004526  EF97  F022         	goto	u9401
  7684   00452A  EF99  F022         	goto	u9400
  7685   00452E                     u9401:
  7686   00452E  EFA3  F022         	goto	l7224
  7687   004532                     u9400:
  7688   004532  0E00               	movlw	0
  7689   004534  6E01               	movwf	?_sqrtf^0,c
  7690   004536  0E00               	movlw	0
  7691   004538  6E02               	movwf	(?_sqrtf+1)^0,c
  7692   00453A  0E00               	movlw	0
  7693   00453C  6E03               	movwf	(?_sqrtf+2)^0,c
  7694   00453E  0E00               	movlw	0
  7695   004540  6E04               	movwf	(?_sqrtf+3)^0,c
  7696   004542  EF0F  F024         	goto	l1361
  7697   004546                     l7224:
  7698   004546  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7699   004548  EFAA  F022         	goto	u9410
  7700   00454C  EFA8  F022         	goto	u9411
  7701   004550                     u9411:
  7702   004550  EFB9  F022         	goto	l7232
  7703   004554                     u9410:
  7704   004554  0E00               	movlw	0
  7705   004556  0103               	movlb	3	; () banked
  7706   004558  6F61               	movwf	(_errno+1)& (0+255),b
  7707   00455A  0E21               	movlw	33
  7708   00455C  6F60               	movwf	_errno& (0+255),b
  7709   00455E  0EFF               	movlw	255
  7710   004560  6E22               	movwf	sqrtf@ix^0,c
  7711   004562  0EFF               	movlw	255
  7712   004564  6E23               	movwf	(sqrtf@ix+1)^0,c
  7713   004566  0EFF               	movlw	255
  7714   004568  6E24               	movwf	(sqrtf@ix+2)^0,c
  7715   00456A  0E7F               	movlw	127
  7716   00456C  6E25               	movwf	(sqrtf@ix+3)^0,c
  7717   00456E  EF69  F022         	goto	l7212
  7718   004572                     l7232:
  7719   004572  0E17               	movlw	23
  7720   004574  6E05               	movwf	??_sqrtf^0,c
  7721   004576  C022  F006         	movff	sqrtf@ix,??_sqrtf+1
  7722   00457A  C023  F007         	movff	sqrtf@ix+1,??_sqrtf+2
  7723   00457E  C024  F008         	movff	sqrtf@ix+2,??_sqrtf+3
  7724   004582  C025  F009         	movff	sqrtf@ix+3,??_sqrtf+4
  7725   004586                     u9425:
  7726   004586  6605               	tstfsz	??_sqrtf^0,c
  7727   004588  EFC8  F022         	goto	u9426
  7728   00458C  EFD0  F022         	goto	u9427
  7729   004590                     u9426:
  7730   004590  3409               	rlcf	(??_sqrtf+4)^0,w,c
  7731   004592  3209               	rrcf	(??_sqrtf+4)^0,f,c
  7732   004594  3208               	rrcf	(??_sqrtf+3)^0,f,c
  7733   004596  3207               	rrcf	(??_sqrtf+2)^0,f,c
  7734   004598  3206               	rrcf	(??_sqrtf+1)^0,f,c
  7735   00459A  2E05               	decfsz	??_sqrtf^0,f,c
  7736   00459C  EFC3  F022         	goto	u9425
  7737   0045A0                     u9427:
  7738   0045A0  C006  F01A         	movff	??_sqrtf+1,sqrtf@m
  7739   0045A4  C007  F01B         	movff	??_sqrtf+2,sqrtf@m+1
  7740   0045A8  C008  F01C         	movff	??_sqrtf+3,sqrtf@m+2
  7741   0045AC  C009  F01D         	movff	??_sqrtf+4,sqrtf@m+3
  7742   0045B0  501A               	movf	sqrtf@m^0,w,c
  7743   0045B2  101B               	iorwf	(sqrtf@m+1)^0,w,c
  7744   0045B4  101C               	iorwf	(sqrtf@m+2)^0,w,c
  7745   0045B6  101D               	iorwf	(sqrtf@m+3)^0,w,c
  7746   0045B8  A4D8               	btfss	status,2,c
  7747   0045BA  EFE1  F022         	goto	u9431
  7748   0045BE  EFE3  F022         	goto	u9430
  7749   0045C2                     u9431:
  7750   0045C2  EF13  F023         	goto	l1365
  7751   0045C6                     u9430:
  7752   0045C6  0E00               	movlw	0
  7753   0045C8  6E0E               	movwf	sqrtf@i^0,c
  7754   0045CA  0E00               	movlw	0
  7755   0045CC  6E0F               	movwf	(sqrtf@i+1)^0,c
  7756   0045CE  0E00               	movlw	0
  7757   0045D0  6E10               	movwf	(sqrtf@i+2)^0,c
  7758   0045D2  0E00               	movlw	0
  7759   0045D4  6E11               	movwf	(sqrtf@i+3)^0,c
  7760   0045D6  EFF8  F022         	goto	l7240
  7761   0045DA                     l7236:
  7762   0045DA  90D8               	bcf	status,0,c
  7763   0045DC  3622               	rlcf	sqrtf@ix^0,f,c
  7764   0045DE  3623               	rlcf	(sqrtf@ix+1)^0,f,c
  7765   0045E0  3624               	rlcf	(sqrtf@ix+2)^0,f,c
  7766   0045E2  3625               	rlcf	(sqrtf@ix+3)^0,f,c
  7767   0045E4  0E01               	movlw	1
  7768   0045E6  260E               	addwf	sqrtf@i^0,f,c
  7769   0045E8  0E00               	movlw	0
  7770   0045EA  220F               	addwfc	(sqrtf@i+1)^0,f,c
  7771   0045EC  2210               	addwfc	(sqrtf@i+2)^0,f,c
  7772   0045EE  2211               	addwfc	(sqrtf@i+3)^0,f,c
  7773   0045F0                     l7240:
  7774   0045F0  AE24               	btfss	(sqrtf@ix+2)^0,7,c
  7775   0045F2  EFFD  F022         	goto	u9441
  7776   0045F6  EFFF  F022         	goto	u9440
  7777   0045FA                     u9441:
  7778   0045FA  EFED  F022         	goto	l7236
  7779   0045FE                     u9440:
  7780   0045FE  0EFF               	movlw	255
  7781   004600  240E               	addwf	sqrtf@i^0,w,c
  7782   004602  6E05               	movwf	??_sqrtf^0,c
  7783   004604  0EFF               	movlw	255
  7784   004606  200F               	addwfc	(sqrtf@i+1)^0,w,c
  7785   004608  6E06               	movwf	(??_sqrtf+1)^0,c
  7786   00460A  0EFF               	movlw	255
  7787   00460C  2010               	addwfc	(sqrtf@i+2)^0,w,c
  7788   00460E  6E07               	movwf	(??_sqrtf+2)^0,c
  7789   004610  0EFF               	movlw	255
  7790   004612  2011               	addwfc	(sqrtf@i+3)^0,w,c
  7791   004614  6E08               	movwf	(??_sqrtf+3)^0,c
  7792   004616  5005               	movf	??_sqrtf^0,w,c
  7793   004618  5E1A               	subwf	sqrtf@m^0,f,c
  7794   00461A  5006               	movf	(??_sqrtf+1)^0,w,c
  7795   00461C  5A1B               	subwfb	(sqrtf@m+1)^0,f,c
  7796   00461E  5007               	movf	(??_sqrtf+2)^0,w,c
  7797   004620  5A1C               	subwfb	(sqrtf@m+2)^0,f,c
  7798   004622  5008               	movf	(??_sqrtf+3)^0,w,c
  7799   004624  5A1D               	subwfb	(sqrtf@m+3)^0,f,c
  7800   004626                     l1365:
  7801   004626  0E81               	movlw	129
  7802   004628  261A               	addwf	sqrtf@m^0,f,c
  7803   00462A  0EFF               	movlw	255
  7804   00462C  221B               	addwfc	(sqrtf@m+1)^0,f,c
  7805   00462E  0EFF               	movlw	255
  7806   004630  221C               	addwfc	(sqrtf@m+2)^0,f,c
  7807   004632  0EFF               	movlw	255
  7808   004634  221D               	addwfc	(sqrtf@m+3)^0,f,c
  7809   004636  0EFF               	movlw	255
  7810   004638  1422               	andwf	sqrtf@ix^0,w,c
  7811   00463A  6E05               	movwf	??_sqrtf^0,c
  7812   00463C  0EFF               	movlw	255
  7813   00463E  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7814   004640  6E06               	movwf	(??_sqrtf+1)^0,c
  7815   004642  0E7F               	movlw	127
  7816   004644  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7817   004646  6E07               	movwf	(??_sqrtf+2)^0,c
  7818   004648  0E00               	movlw	0
  7819   00464A  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7820   00464C  6E08               	movwf	(??_sqrtf+3)^0,c
  7821   00464E  0E00               	movlw	0
  7822   004650  1005               	iorwf	??_sqrtf^0,w,c
  7823   004652  6E22               	movwf	sqrtf@ix^0,c
  7824   004654  0E00               	movlw	0
  7825   004656  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7826   004658  6E23               	movwf	(sqrtf@ix+1)^0,c
  7827   00465A  0E80               	movlw	128
  7828   00465C  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7829   00465E  6E24               	movwf	(sqrtf@ix+2)^0,c
  7830   004660  0E00               	movlw	0
  7831   004662  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7832   004664  6E25               	movwf	(sqrtf@ix+3)^0,c
  7833   004666  A01A               	btfss	sqrtf@m^0,0,c
  7834   004668  EF38  F023         	goto	u9451
  7835   00466C  EF3A  F023         	goto	u9450
  7836   004670                     u9451:
  7837   004670  EF42  F023         	goto	l1369
  7838   004674                     u9450:
  7839   004674  5022               	movf	sqrtf@ix^0,w,c
  7840   004676  2622               	addwf	sqrtf@ix^0,f,c
  7841   004678  5023               	movf	(sqrtf@ix+1)^0,w,c
  7842   00467A  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7843   00467C  5024               	movf	(sqrtf@ix+2)^0,w,c
  7844   00467E  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7845   004680  5025               	movf	(sqrtf@ix+3)^0,w,c
  7846   004682  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7847   004684                     l1369:
  7848   004684  341D               	rlcf	(sqrtf@m+3)^0,w,c
  7849   004686  321D               	rrcf	(sqrtf@m+3)^0,f,c
  7850   004688  321C               	rrcf	(sqrtf@m+2)^0,f,c
  7851   00468A  321B               	rrcf	(sqrtf@m+1)^0,f,c
  7852   00468C  321A               	rrcf	sqrtf@m^0,f,c
  7853   00468E  5022               	movf	sqrtf@ix^0,w,c
  7854   004690  2622               	addwf	sqrtf@ix^0,f,c
  7855   004692  5023               	movf	(sqrtf@ix+1)^0,w,c
  7856   004694  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7857   004696  5024               	movf	(sqrtf@ix+2)^0,w,c
  7858   004698  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7859   00469A  5025               	movf	(sqrtf@ix+3)^0,w,c
  7860   00469C  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7861   00469E  0E00               	movlw	0
  7862   0046A0  6E0A               	movwf	sqrtf@s^0,c
  7863   0046A2  0E00               	movlw	0
  7864   0046A4  6E0B               	movwf	(sqrtf@s+1)^0,c
  7865   0046A6  0E00               	movlw	0
  7866   0046A8  6E0C               	movwf	(sqrtf@s+2)^0,c
  7867   0046AA  0E00               	movlw	0
  7868   0046AC  6E0D               	movwf	(sqrtf@s+3)^0,c
  7869   0046AE  C00A  F012         	movff	sqrtf@s,sqrtf@q
  7870   0046B2  C00B  F013         	movff	sqrtf@s+1,sqrtf@q+1
  7871   0046B6  C00C  F014         	movff	sqrtf@s+2,sqrtf@q+2
  7872   0046BA  C00D  F015         	movff	sqrtf@s+3,sqrtf@q+3
  7873   0046BE  0E00               	movlw	0
  7874   0046C0  6E1E               	movwf	sqrtf@r^0,c
  7875   0046C2  0E00               	movlw	0
  7876   0046C4  6E1F               	movwf	(sqrtf@r+1)^0,c
  7877   0046C6  0E00               	movlw	0
  7878   0046C8  6E20               	movwf	(sqrtf@r+2)^0,c
  7879   0046CA  0E01               	movlw	1
  7880   0046CC  6E21               	movwf	(sqrtf@r+3)^0,c
  7881   0046CE  EFB1  F023         	goto	l7258
  7882   0046D2                     l7252:
  7883   0046D2  500A               	movf	sqrtf@s^0,w,c
  7884   0046D4  241E               	addwf	sqrtf@r^0,w,c
  7885   0046D6  6E16               	movwf	sqrtf@t^0,c
  7886   0046D8  500B               	movf	(sqrtf@s+1)^0,w,c
  7887   0046DA  201F               	addwfc	(sqrtf@r+1)^0,w,c
  7888   0046DC  6E17               	movwf	(sqrtf@t+1)^0,c
  7889   0046DE  500C               	movf	(sqrtf@s+2)^0,w,c
  7890   0046E0  2020               	addwfc	(sqrtf@r+2)^0,w,c
  7891   0046E2  6E18               	movwf	(sqrtf@t+2)^0,c
  7892   0046E4  500D               	movf	(sqrtf@s+3)^0,w,c
  7893   0046E6  2021               	addwfc	(sqrtf@r+3)^0,w,c
  7894   0046E8  6E19               	movwf	(sqrtf@t+3)^0,c
  7895   0046EA  5016               	movf	sqrtf@t^0,w,c
  7896   0046EC  5C22               	subwf	sqrtf@ix^0,w,c
  7897   0046EE  5017               	movf	(sqrtf@t+1)^0,w,c
  7898   0046F0  5823               	subwfb	(sqrtf@ix+1)^0,w,c
  7899   0046F2  5018               	movf	(sqrtf@t+2)^0,w,c
  7900   0046F4  5824               	subwfb	(sqrtf@ix+2)^0,w,c
  7901   0046F6  5025               	movf	(sqrtf@ix+3)^0,w,c
  7902   0046F8  0A80               	xorlw	128
  7903   0046FA  6E05               	movwf	??_sqrtf^0,c
  7904   0046FC  5019               	movf	(sqrtf@t+3)^0,w,c
  7905   0046FE  0A80               	xorlw	128
  7906   004700  5805               	subwfb	??_sqrtf^0,w,c
  7907   004702  A0D8               	btfss	status,0,c
  7908   004704  EF86  F023         	goto	u9461
  7909   004708  EF88  F023         	goto	u9460
  7910   00470C                     u9461:
  7911   00470C  EFA4  F023         	goto	l1372
  7912   004710                     u9460:
  7913   004710  5016               	movf	sqrtf@t^0,w,c
  7914   004712  241E               	addwf	sqrtf@r^0,w,c
  7915   004714  6E0A               	movwf	sqrtf@s^0,c
  7916   004716  5017               	movf	(sqrtf@t+1)^0,w,c
  7917   004718  201F               	addwfc	(sqrtf@r+1)^0,w,c
  7918   00471A  6E0B               	movwf	(sqrtf@s+1)^0,c
  7919   00471C  5018               	movf	(sqrtf@t+2)^0,w,c
  7920   00471E  2020               	addwfc	(sqrtf@r+2)^0,w,c
  7921   004720  6E0C               	movwf	(sqrtf@s+2)^0,c
  7922   004722  5019               	movf	(sqrtf@t+3)^0,w,c
  7923   004724  2021               	addwfc	(sqrtf@r+3)^0,w,c
  7924   004726  6E0D               	movwf	(sqrtf@s+3)^0,c
  7925   004728  5016               	movf	sqrtf@t^0,w,c
  7926   00472A  5E22               	subwf	sqrtf@ix^0,f,c
  7927   00472C  5017               	movf	(sqrtf@t+1)^0,w,c
  7928   00472E  5A23               	subwfb	(sqrtf@ix+1)^0,f,c
  7929   004730  5018               	movf	(sqrtf@t+2)^0,w,c
  7930   004732  5A24               	subwfb	(sqrtf@ix+2)^0,f,c
  7931   004734  5019               	movf	(sqrtf@t+3)^0,w,c
  7932   004736  5A25               	subwfb	(sqrtf@ix+3)^0,f,c
  7933   004738  501E               	movf	sqrtf@r^0,w,c
  7934   00473A  2612               	addwf	sqrtf@q^0,f,c
  7935   00473C  501F               	movf	(sqrtf@r+1)^0,w,c
  7936   00473E  2213               	addwfc	(sqrtf@q+1)^0,f,c
  7937   004740  5020               	movf	(sqrtf@r+2)^0,w,c
  7938   004742  2214               	addwfc	(sqrtf@q+2)^0,f,c
  7939   004744  5021               	movf	(sqrtf@r+3)^0,w,c
  7940   004746  2215               	addwfc	(sqrtf@q+3)^0,f,c
  7941   004748                     l1372:
  7942   004748  5022               	movf	sqrtf@ix^0,w,c
  7943   00474A  2622               	addwf	sqrtf@ix^0,f,c
  7944   00474C  5023               	movf	(sqrtf@ix+1)^0,w,c
  7945   00474E  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7946   004750  5024               	movf	(sqrtf@ix+2)^0,w,c
  7947   004752  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7948   004754  5025               	movf	(sqrtf@ix+3)^0,w,c
  7949   004756  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7950   004758  90D8               	bcf	status,0,c
  7951   00475A  3221               	rrcf	(sqrtf@r+3)^0,f,c
  7952   00475C  3220               	rrcf	(sqrtf@r+2)^0,f,c
  7953   00475E  321F               	rrcf	(sqrtf@r+1)^0,f,c
  7954   004760  321E               	rrcf	sqrtf@r^0,f,c
  7955   004762                     l7258:
  7956   004762  501E               	movf	sqrtf@r^0,w,c
  7957   004764  101F               	iorwf	(sqrtf@r+1)^0,w,c
  7958   004766  1020               	iorwf	(sqrtf@r+2)^0,w,c
  7959   004768  1021               	iorwf	(sqrtf@r+3)^0,w,c
  7960   00476A  A4D8               	btfss	status,2,c
  7961   00476C  EFBA  F023         	goto	u9471
  7962   004770  EFBC  F023         	goto	u9470
  7963   004774                     u9471:
  7964   004774  EF69  F023         	goto	l7252
  7965   004778                     u9470:
  7966   004778  5022               	movf	sqrtf@ix^0,w,c
  7967   00477A  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7968   00477C  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7969   00477E  1025               	iorwf	(sqrtf@ix+3)^0,w,c
  7970   004780  B4D8               	btfsc	status,2,c
  7971   004782  EFC5  F023         	goto	u9481
  7972   004786  EFC7  F023         	goto	u9480
  7973   00478A                     u9481:
  7974   00478A  EFDB  F023         	goto	l1374
  7975   00478E                     u9480:
  7976   00478E  0E01               	movlw	1
  7977   004790  1412               	andwf	sqrtf@q^0,w,c
  7978   004792  6E05               	movwf	??_sqrtf^0,c
  7979   004794  0E00               	movlw	0
  7980   004796  1413               	andwf	(sqrtf@q+1)^0,w,c
  7981   004798  6E06               	movwf	(??_sqrtf+1)^0,c
  7982   00479A  0E00               	movlw	0
  7983   00479C  1414               	andwf	(sqrtf@q+2)^0,w,c
  7984   00479E  6E07               	movwf	(??_sqrtf+2)^0,c
  7985   0047A0  0E00               	movlw	0
  7986   0047A2  1415               	andwf	(sqrtf@q+3)^0,w,c
  7987   0047A4  6E08               	movwf	(??_sqrtf+3)^0,c
  7988   0047A6  5005               	movf	??_sqrtf^0,w,c
  7989   0047A8  2612               	addwf	sqrtf@q^0,f,c
  7990   0047AA  5006               	movf	(??_sqrtf+1)^0,w,c
  7991   0047AC  2213               	addwfc	(sqrtf@q+1)^0,f,c
  7992   0047AE  5007               	movf	(??_sqrtf+2)^0,w,c
  7993   0047B0  2214               	addwfc	(sqrtf@q+2)^0,f,c
  7994   0047B2  5008               	movf	(??_sqrtf+3)^0,w,c
  7995   0047B4  2215               	addwfc	(sqrtf@q+3)^0,f,c
  7996   0047B6                     l1374:
  7997   0047B6  C012  F005         	movff	sqrtf@q,??_sqrtf
  7998   0047BA  C013  F006         	movff	sqrtf@q+1,??_sqrtf+1
  7999   0047BE  C014  F007         	movff	sqrtf@q+2,??_sqrtf+2
  8000   0047C2  C015  F008         	movff	sqrtf@q+3,??_sqrtf+3
  8001   0047C6  3408               	rlcf	(??_sqrtf+3)^0,w,c
  8002   0047C8  3208               	rrcf	(??_sqrtf+3)^0,f,c
  8003   0047CA  3207               	rrcf	(??_sqrtf+2)^0,f,c
  8004   0047CC  3206               	rrcf	(??_sqrtf+1)^0,f,c
  8005   0047CE  3205               	rrcf	??_sqrtf^0,f,c
  8006   0047D0  0E00               	movlw	0
  8007   0047D2  2405               	addwf	??_sqrtf^0,w,c
  8008   0047D4  6E22               	movwf	sqrtf@ix^0,c
  8009   0047D6  0E00               	movlw	0
  8010   0047D8  2006               	addwfc	(??_sqrtf+1)^0,w,c
  8011   0047DA  6E23               	movwf	(sqrtf@ix+1)^0,c
  8012   0047DC  0E00               	movlw	0
  8013   0047DE  2007               	addwfc	(??_sqrtf+2)^0,w,c
  8014   0047E0  6E24               	movwf	(sqrtf@ix+2)^0,c
  8015   0047E2  0E3F               	movlw	63
  8016   0047E4  2008               	addwfc	(??_sqrtf+3)^0,w,c
  8017   0047E6  6E25               	movwf	(sqrtf@ix+3)^0,c
  8018   0047E8  C01A  F005         	movff	sqrtf@m,??_sqrtf
  8019   0047EC  C01B  F006         	movff	sqrtf@m+1,??_sqrtf+1
  8020   0047F0  C01C  F007         	movff	sqrtf@m+2,??_sqrtf+2
  8021   0047F4  C01D  F008         	movff	sqrtf@m+3,??_sqrtf+3
  8022   0047F8  0E17               	movlw	23
  8023   0047FA                     u9495:
  8024   0047FA  90D8               	bcf	status,0,c
  8025   0047FC  3605               	rlcf	??_sqrtf^0,f,c
  8026   0047FE  3606               	rlcf	(??_sqrtf+1)^0,f,c
  8027   004800  3607               	rlcf	(??_sqrtf+2)^0,f,c
  8028   004802  3608               	rlcf	(??_sqrtf+3)^0,f,c
  8029   004804  2EE8               	decfsz	wreg,f,c
  8030   004806  EFFD  F023         	goto	u9495
  8031   00480A  5005               	movf	??_sqrtf^0,w,c
  8032   00480C  2622               	addwf	sqrtf@ix^0,f,c
  8033   00480E  5006               	movf	(??_sqrtf+1)^0,w,c
  8034   004810  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  8035   004812  5007               	movf	(??_sqrtf+2)^0,w,c
  8036   004814  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  8037   004816  5008               	movf	(??_sqrtf+3)^0,w,c
  8038   004818  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  8039   00481A  EF69  F022         	goto	l7212
  8040   00481E                     l1361:
  8041   00481E  0012               	return		;funcret
  8042   004820                     __end_of_sqrtf:
  8043                           	callstack 0
  8044                           
  8045 ;; *************** function _scalbnf *****************
  8046 ;; Defined at:
  8047 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\scalbnf.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;  x               4   39[COMRAM] float 
  8050 ;;  n               2   43[COMRAM] int 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;  y               4   53[COMRAM] float 
  8053 ;;  u               4   49[COMRAM] struct .
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  4   39[COMRAM] float 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8063 ;;      Params:         6       0       0       0       0       0       0       0       0
  8064 ;;      Locals:         8       0       0       0       0       0       0       0       0
  8065 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8066 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8067 ;;Total ram usage:       18 bytes
  8068 ;; Hardware stack levels used: 1
  8069 ;; Hardware stack levels required when called: 2
  8070 ;; This function calls:
  8071 ;;		___flmul
  8072 ;; This function is called by:
  8073 ;;		_powf
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text8
  8078   0051BE                     __ptext8:
  8079                           	callstack 0
  8080   0051BE                     _scalbnf:
  8081                           	callstack 26
  8082   0051BE  C028  F036         	movff	scalbnf@x,scalbnf@y
  8083   0051C2  C029  F037         	movff	scalbnf@x+1,scalbnf@y+1
  8084   0051C6  C02A  F038         	movff	scalbnf@x+2,scalbnf@y+2
  8085   0051CA  C02B  F039         	movff	scalbnf@x+3,scalbnf@y+3
  8086   0051CE  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8087   0051D0  EFF3  F028         	goto	u9501
  8088   0051D4  502D               	movf	(scalbnf@n+1)^0,w,c
  8089   0051D6  E109               	bnz	u9500
  8090   0051D8  0E80               	movlw	128
  8091   0051DA  5C2C               	subwf	scalbnf@n^0,w,c
  8092   0051DC  A0D8               	btfss	status,0,c
  8093   0051DE  EFF3  F028         	goto	u9501
  8094   0051E2  EFF5  F028         	goto	u9500
  8095   0051E6                     u9501:
  8096   0051E6  EF53  F029         	goto	l7286
  8097   0051EA                     u9500:
  8098   0051EA  C036  F00F         	movff	scalbnf@y,___flmul@b
  8099   0051EE  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8100   0051F2  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8101   0051F6  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8102   0051FA  0E00               	movlw	0
  8103   0051FC  6E13               	movwf	___flmul@a^0,c
  8104   0051FE  0E00               	movlw	0
  8105   005200  6E14               	movwf	(___flmul@a+1)^0,c
  8106   005202  0E00               	movlw	0
  8107   005204  6E15               	movwf	(___flmul@a+2)^0,c
  8108   005206  0E7F               	movlw	127
  8109   005208  6E16               	movwf	(___flmul@a+3)^0,c
  8110   00520A  EC0E  F020         	call	___flmul	;wreg free
  8111   00520E  C00F  F036         	movff	?___flmul,scalbnf@y
  8112   005212  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8113   005216  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8114   00521A  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8115   00521E  0E81               	movlw	129
  8116   005220  262C               	addwf	scalbnf@n^0,f,c
  8117   005222  0EFF               	movlw	255
  8118   005224  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8119   005226  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8120   005228  EF1F  F029         	goto	u9511
  8121   00522C  502D               	movf	(scalbnf@n+1)^0,w,c
  8122   00522E  E109               	bnz	u9510
  8123   005230  0E80               	movlw	128
  8124   005232  5C2C               	subwf	scalbnf@n^0,w,c
  8125   005234  A0D8               	btfss	status,0,c
  8126   005236  EF1F  F029         	goto	u9511
  8127   00523A  EF21  F029         	goto	u9510
  8128   00523E                     u9511:
  8129   00523E  EFBD  F029         	goto	l7302
  8130   005242                     u9510:
  8131   005242  C036  F00F         	movff	scalbnf@y,___flmul@b
  8132   005246  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8133   00524A  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8134   00524E  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8135   005252  0E00               	movlw	0
  8136   005254  6E13               	movwf	___flmul@a^0,c
  8137   005256  0E00               	movlw	0
  8138   005258  6E14               	movwf	(___flmul@a+1)^0,c
  8139   00525A  0E00               	movlw	0
  8140   00525C  6E15               	movwf	(___flmul@a+2)^0,c
  8141   00525E  0E7F               	movlw	127
  8142   005260  6E16               	movwf	(___flmul@a+3)^0,c
  8143   005262  EC0E  F020         	call	___flmul	;wreg free
  8144   005266  C00F  F036         	movff	?___flmul,scalbnf@y
  8145   00526A  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8146   00526E  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8147   005272  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8148   005276  0E81               	movlw	129
  8149   005278  262C               	addwf	scalbnf@n^0,f,c
  8150   00527A  0EFF               	movlw	255
  8151   00527C  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8152   00527E  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8153   005280  EF4B  F029         	goto	u9521
  8154   005284  502D               	movf	(scalbnf@n+1)^0,w,c
  8155   005286  E109               	bnz	u9520
  8156   005288  0E80               	movlw	128
  8157   00528A  5C2C               	subwf	scalbnf@n^0,w,c
  8158   00528C  A0D8               	btfss	status,0,c
  8159   00528E  EF4B  F029         	goto	u9521
  8160   005292  EF4D  F029         	goto	u9520
  8161   005296                     u9521:
  8162   005296  EFBD  F029         	goto	l7302
  8163   00529A                     u9520:
  8164   00529A  0E00               	movlw	0
  8165   00529C  6E2D               	movwf	(scalbnf@n+1)^0,c
  8166   00529E  0E7F               	movlw	127
  8167   0052A0  6E2C               	movwf	scalbnf@n^0,c
  8168   0052A2  EFBD  F029         	goto	l7302
  8169   0052A6                     l7286:
  8170   0052A6  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8171   0052A8  EF5F  F029         	goto	u9531
  8172   0052AC  0E82               	movlw	130
  8173   0052AE  5C2C               	subwf	scalbnf@n^0,w,c
  8174   0052B0  0EFF               	movlw	255
  8175   0052B2  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8176   0052B4  B0D8               	btfsc	status,0,c
  8177   0052B6  EF5F  F029         	goto	u9531
  8178   0052BA  EF61  F029         	goto	u9530
  8179   0052BE                     u9531:
  8180   0052BE  EFBD  F029         	goto	l7302
  8181   0052C2                     u9530:
  8182   0052C2  C036  F00F         	movff	scalbnf@y,___flmul@b
  8183   0052C6  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8184   0052CA  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8185   0052CE  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8186   0052D2  0E00               	movlw	0
  8187   0052D4  6E13               	movwf	___flmul@a^0,c
  8188   0052D6  0E00               	movlw	0
  8189   0052D8  6E14               	movwf	(___flmul@a+1)^0,c
  8190   0052DA  0E80               	movlw	128
  8191   0052DC  6E15               	movwf	(___flmul@a+2)^0,c
  8192   0052DE  0E0C               	movlw	12
  8193   0052E0  6E16               	movwf	(___flmul@a+3)^0,c
  8194   0052E2  EC0E  F020         	call	___flmul	;wreg free
  8195   0052E6  C00F  F036         	movff	?___flmul,scalbnf@y
  8196   0052EA  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8197   0052EE  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8198   0052F2  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8199   0052F6  0E66               	movlw	102
  8200   0052F8  262C               	addwf	scalbnf@n^0,f,c
  8201   0052FA  0E00               	movlw	0
  8202   0052FC  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8203   0052FE  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8204   005300  EF8B  F029         	goto	u9541
  8205   005304  0E82               	movlw	130
  8206   005306  5C2C               	subwf	scalbnf@n^0,w,c
  8207   005308  0EFF               	movlw	255
  8208   00530A  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8209   00530C  B0D8               	btfsc	status,0,c
  8210   00530E  EF8B  F029         	goto	u9541
  8211   005312  EF8D  F029         	goto	u9540
  8212   005316                     u9541:
  8213   005316  EFBD  F029         	goto	l7302
  8214   00531A                     u9540:
  8215   00531A  C036  F00F         	movff	scalbnf@y,___flmul@b
  8216   00531E  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8217   005322  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8218   005326  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8219   00532A  0E00               	movlw	0
  8220   00532C  6E13               	movwf	___flmul@a^0,c
  8221   00532E  0E00               	movlw	0
  8222   005330  6E14               	movwf	(___flmul@a+1)^0,c
  8223   005332  0E80               	movlw	128
  8224   005334  6E15               	movwf	(___flmul@a+2)^0,c
  8225   005336  0E0C               	movlw	12
  8226   005338  6E16               	movwf	(___flmul@a+3)^0,c
  8227   00533A  EC0E  F020         	call	___flmul	;wreg free
  8228   00533E  C00F  F036         	movff	?___flmul,scalbnf@y
  8229   005342  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8230   005346  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8231   00534A  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8232   00534E  0E66               	movlw	102
  8233   005350  262C               	addwf	scalbnf@n^0,f,c
  8234   005352  0E00               	movlw	0
  8235   005354  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8236   005356  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8237   005358  EFB7  F029         	goto	u9551
  8238   00535C  0E82               	movlw	130
  8239   00535E  5C2C               	subwf	scalbnf@n^0,w,c
  8240   005360  0EFF               	movlw	255
  8241   005362  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8242   005364  B0D8               	btfsc	status,0,c
  8243   005366  EFB7  F029         	goto	u9551
  8244   00536A  EFB9  F029         	goto	u9550
  8245   00536E                     u9551:
  8246   00536E  EFBD  F029         	goto	l7302
  8247   005372                     u9550:
  8248   005372  0EFF               	movlw	255
  8249   005374  6E2D               	movwf	(scalbnf@n+1)^0,c
  8250   005376  0E82               	movlw	130
  8251   005378  6E2C               	movwf	scalbnf@n^0,c
  8252   00537A                     l7302:
  8253   00537A  0E7F               	movlw	127
  8254   00537C  242C               	addwf	scalbnf@n^0,w,c
  8255   00537E  6E2E               	movwf	??_scalbnf^0,c
  8256   005380  0E00               	movlw	0
  8257   005382  202D               	addwfc	(scalbnf@n+1)^0,w,c
  8258   005384  6E2F               	movwf	(??_scalbnf+1)^0,c
  8259   005386  6A30               	clrf	(??_scalbnf+2)^0,c
  8260   005388  6A31               	clrf	(??_scalbnf+3)^0,c
  8261   00538A  0E17               	movlw	23
  8262   00538C                     u9565:
  8263   00538C  90D8               	bcf	status,0,c
  8264   00538E  362E               	rlcf	??_scalbnf^0,f,c
  8265   005390  362F               	rlcf	(??_scalbnf+1)^0,f,c
  8266   005392  3630               	rlcf	(??_scalbnf+2)^0,f,c
  8267   005394  3631               	rlcf	(??_scalbnf+3)^0,f,c
  8268   005396  2EE8               	decfsz	wreg,f,c
  8269   005398  EFC6  F029         	goto	u9565
  8270   00539C  C02E  F032         	movff	??_scalbnf,scalbnf@u
  8271   0053A0  C02F  F033         	movff	??_scalbnf+1,scalbnf@u+1
  8272   0053A4  C030  F034         	movff	??_scalbnf+2,scalbnf@u+2
  8273   0053A8  C031  F035         	movff	??_scalbnf+3,scalbnf@u+3
  8274   0053AC  C032  F00F         	movff	scalbnf@u,___flmul@b
  8275   0053B0  C033  F010         	movff	scalbnf@u+1,___flmul@b+1
  8276   0053B4  C034  F011         	movff	scalbnf@u+2,___flmul@b+2
  8277   0053B8  C035  F012         	movff	scalbnf@u+3,___flmul@b+3
  8278   0053BC  C036  F013         	movff	scalbnf@y,___flmul@a
  8279   0053C0  C037  F014         	movff	scalbnf@y+1,___flmul@a+1
  8280   0053C4  C038  F015         	movff	scalbnf@y+2,___flmul@a+2
  8281   0053C8  C039  F016         	movff	scalbnf@y+3,___flmul@a+3
  8282   0053CC  EC0E  F020         	call	___flmul	;wreg free
  8283   0053D0  C00F  F028         	movff	?___flmul,scalbnf@x
  8284   0053D4  C010  F029         	movff	?___flmul+1,scalbnf@x+1
  8285   0053D8  C011  F02A         	movff	?___flmul+2,scalbnf@x+2
  8286   0053DC  C012  F02B         	movff	?___flmul+3,scalbnf@x+3
  8287   0053E0  C028  F028         	movff	scalbnf@x,?_scalbnf
  8288   0053E4  C029  F029         	movff	scalbnf@x+1,?_scalbnf+1
  8289   0053E8  C02A  F02A         	movff	scalbnf@x+2,?_scalbnf+2
  8290   0053EC  C02B  F02B         	movff	scalbnf@x+3,?_scalbnf+3
  8291   0053F0  0012               	return		;funcret
  8292   0053F2                     __end_of_scalbnf:
  8293                           	callstack 0
  8294                           
  8295 ;; *************** function ___xxtofl *****************
  8296 ;; Defined at:
  8297 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;  sign            1    wreg     unsigned char 
  8300 ;;  val             4    0[COMRAM] long 
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;  sign            1    8[COMRAM] unsigned char 
  8303 ;;  arg             4   10[COMRAM] unsigned long 
  8304 ;;  exp             1    9[COMRAM] unsigned char 
  8305 ;; Return value:  Size  Location     Type
  8306 ;;                  4    0[COMRAM] unsigned char 
  8307 ;; Registers used:
  8308 ;;		wreg, status,2, status,0
  8309 ;; Tracked objects:
  8310 ;;		On entry : 0/0
  8311 ;;		On exit  : 0/0
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8314 ;;      Params:         4       0       0       0       0       0       0       0       0
  8315 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8316 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8317 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8318 ;;Total ram usage:       14 bytes
  8319 ;; Hardware stack levels used: 1
  8320 ;; Hardware stack levels required when called: 1
  8321 ;; This function calls:
  8322 ;;		Nothing
  8323 ;; This function is called by:
  8324 ;;		_main
  8325 ;;		_Read_Sensors
  8326 ;;		_powf
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           	psect	text9
  8331   005604                     __ptext9:
  8332                           	callstack 0
  8333   005604                     ___xxtofl:
  8334                           	callstack 29
  8335                           
  8336                           ;incstack = 0
  8337                           ;___xxtofl@sign stored from wreg
  8338   005604  6E09               	movwf	___xxtofl@sign^0,c
  8339   005606  5009               	movf	___xxtofl@sign^0,w,c
  8340   005608  B4D8               	btfsc	status,2,c
  8341   00560A  EF09  F02B         	goto	u9261
  8342   00560E  EF0B  F02B         	goto	u9260
  8343   005612                     u9261:
  8344   005612  EF2D  F02B         	goto	l932
  8345   005616                     u9260:
  8346   005616  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8347   005618  EF12  F02B         	goto	u9270
  8348   00561C  EF10  F02B         	goto	u9271
  8349   005620                     u9271:
  8350   005620  EF2D  F02B         	goto	l932
  8351   005624                     u9270:
  8352   005624  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8353   005628  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8354   00562C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8355   005630  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8356   005634  1E05               	comf	??___xxtofl^0,f,c
  8357   005636  1E06               	comf	(??___xxtofl+1)^0,f,c
  8358   005638  1E07               	comf	(??___xxtofl+2)^0,f,c
  8359   00563A  1E08               	comf	(??___xxtofl+3)^0,f,c
  8360   00563C  2A05               	incf	??___xxtofl^0,f,c
  8361   00563E  0E00               	movlw	0
  8362   005640  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8363   005642  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8364   005644  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8365   005646  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8366   00564A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8367   00564E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8368   005652  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8369   005656  EF35  F02B         	goto	l7162
  8370   00565A                     l932:
  8371   00565A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8372   00565E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8373   005662  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8374   005666  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8375   00566A                     l7162:
  8376   00566A  5001               	movf	___xxtofl@val^0,w,c
  8377   00566C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8378   00566E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8379   005670  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8380   005672  A4D8               	btfss	status,2,c
  8381   005674  EF3E  F02B         	goto	u9281
  8382   005678  EF40  F02B         	goto	u9280
  8383   00567C                     u9281:
  8384   00567C  EF4A  F02B         	goto	l7168
  8385   005680                     u9280:
  8386   005680  0E00               	movlw	0
  8387   005682  6E01               	movwf	?___xxtofl^0,c
  8388   005684  0E00               	movlw	0
  8389   005686  6E02               	movwf	(?___xxtofl+1)^0,c
  8390   005688  0E00               	movlw	0
  8391   00568A  6E03               	movwf	(?___xxtofl+2)^0,c
  8392   00568C  0E00               	movlw	0
  8393   00568E  6E04               	movwf	(?___xxtofl+3)^0,c
  8394   005690  EFDB  F02B         	goto	l935
  8395   005694                     l7168:
  8396   005694  0E96               	movlw	150
  8397   005696  6E0A               	movwf	___xxtofl@exp^0,c
  8398   005698  EF54  F02B         	goto	l7172
  8399   00569C                     l7170:
  8400   00569C  2A0A               	incf	___xxtofl@exp^0,f,c
  8401   00569E  90D8               	bcf	status,0,c
  8402   0056A0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8403   0056A2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8404   0056A4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8405   0056A6  320B               	rrcf	___xxtofl@arg^0,f,c
  8406   0056A8                     l7172:
  8407   0056A8  0E00               	movlw	0
  8408   0056AA  140B               	andwf	___xxtofl@arg^0,w,c
  8409   0056AC  6E05               	movwf	??___xxtofl^0,c
  8410   0056AE  0E00               	movlw	0
  8411   0056B0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8412   0056B2  6E06               	movwf	(??___xxtofl+1)^0,c
  8413   0056B4  0E00               	movlw	0
  8414   0056B6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8415   0056B8  6E07               	movwf	(??___xxtofl+2)^0,c
  8416   0056BA  0EFE               	movlw	254
  8417   0056BC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8418   0056BE  6E08               	movwf	(??___xxtofl+3)^0,c
  8419   0056C0  5005               	movf	??___xxtofl^0,w,c
  8420   0056C2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8421   0056C4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8422   0056C6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8423   0056C8  A4D8               	btfss	status,2,c
  8424   0056CA  EF69  F02B         	goto	u9291
  8425   0056CE  EF6B  F02B         	goto	u9290
  8426   0056D2                     u9291:
  8427   0056D2  EF4E  F02B         	goto	l7170
  8428   0056D6                     u9290:
  8429   0056D6  EF79  F02B         	goto	l939
  8430   0056DA                     l7174:
  8431   0056DA  2A0A               	incf	___xxtofl@exp^0,f,c
  8432   0056DC  0E01               	movlw	1
  8433   0056DE  260B               	addwf	___xxtofl@arg^0,f,c
  8434   0056E0  0E00               	movlw	0
  8435   0056E2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8436   0056E4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8437   0056E6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8438   0056E8  90D8               	bcf	status,0,c
  8439   0056EA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8440   0056EC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8441   0056EE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8442   0056F0  320B               	rrcf	___xxtofl@arg^0,f,c
  8443   0056F2                     l939:
  8444   0056F2  0E00               	movlw	0
  8445   0056F4  140B               	andwf	___xxtofl@arg^0,w,c
  8446   0056F6  6E05               	movwf	??___xxtofl^0,c
  8447   0056F8  0E00               	movlw	0
  8448   0056FA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8449   0056FC  6E06               	movwf	(??___xxtofl+1)^0,c
  8450   0056FE  0E00               	movlw	0
  8451   005700  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8452   005702  6E07               	movwf	(??___xxtofl+2)^0,c
  8453   005704  0EFF               	movlw	255
  8454   005706  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8455   005708  6E08               	movwf	(??___xxtofl+3)^0,c
  8456   00570A  5005               	movf	??___xxtofl^0,w,c
  8457   00570C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8458   00570E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8459   005710  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8460   005712  A4D8               	btfss	status,2,c
  8461   005714  EF8E  F02B         	goto	u9301
  8462   005718  EF90  F02B         	goto	u9300
  8463   00571C                     u9301:
  8464   00571C  EF6D  F02B         	goto	l7174
  8465   005720                     u9300:
  8466   005720  EF98  F02B         	goto	l7182
  8467   005724                     l7180:
  8468   005724  060A               	decf	___xxtofl@exp^0,f,c
  8469   005726  90D8               	bcf	status,0,c
  8470   005728  360B               	rlcf	___xxtofl@arg^0,f,c
  8471   00572A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8472   00572C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8473   00572E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8474   005730                     l7182:
  8475   005730  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8476   005732  EF9D  F02B         	goto	u9311
  8477   005736  EF9F  F02B         	goto	u9310
  8478   00573A                     u9311:
  8479   00573A  EFA7  F02B         	goto	l946
  8480   00573E                     u9310:
  8481   00573E  0E02               	movlw	2
  8482   005740  600A               	cpfslt	___xxtofl@exp^0,c
  8483   005742  EFA5  F02B         	goto	u9321
  8484   005746  EFA7  F02B         	goto	u9320
  8485   00574A                     u9321:
  8486   00574A  EF92  F02B         	goto	l7180
  8487   00574E                     u9320:
  8488   00574E                     l946:
  8489   00574E  B00A               	btfsc	___xxtofl@exp^0,0,c
  8490   005750  EFAC  F02B         	goto	u9331
  8491   005754  EFAE  F02B         	goto	u9330
  8492   005758                     u9331:
  8493   005758  EFAF  F02B         	goto	l7188
  8494   00575C                     u9330:
  8495   00575C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8496   00575E                     l7188:
  8497   00575E  90D8               	bcf	status,0,c
  8498   005760  320A               	rrcf	___xxtofl@exp^0,f,c
  8499   005762  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8500   005766  6A06               	clrf	(??___xxtofl+1)^0,c
  8501   005768  6A07               	clrf	(??___xxtofl+2)^0,c
  8502   00576A  6A08               	clrf	(??___xxtofl+3)^0,c
  8503   00576C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8504   005770  6A07               	clrf	(??___xxtofl+2)^0,c
  8505   005772  6A06               	clrf	(??___xxtofl+1)^0,c
  8506   005774  6A05               	clrf	??___xxtofl^0,c
  8507   005776  5005               	movf	??___xxtofl^0,w,c
  8508   005778  120B               	iorwf	___xxtofl@arg^0,f,c
  8509   00577A  5006               	movf	(??___xxtofl+1)^0,w,c
  8510   00577C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8511   00577E  5007               	movf	(??___xxtofl+2)^0,w,c
  8512   005780  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8513   005782  5008               	movf	(??___xxtofl+3)^0,w,c
  8514   005784  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8515   005786  5009               	movf	___xxtofl@sign^0,w,c
  8516   005788  B4D8               	btfsc	status,2,c
  8517   00578A  EFC9  F02B         	goto	u9341
  8518   00578E  EFCB  F02B         	goto	u9340
  8519   005792                     u9341:
  8520   005792  EFD3  F02B         	goto	l7198
  8521   005796                     u9340:
  8522   005796  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8523   005798  EFD2  F02B         	goto	u9350
  8524   00579C  EFD0  F02B         	goto	u9351
  8525   0057A0                     u9351:
  8526   0057A0  EFD3  F02B         	goto	l7198
  8527   0057A4                     u9350:
  8528   0057A4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8529   0057A6                     l7198:
  8530   0057A6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8531   0057AA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8532   0057AE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8533   0057B2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8534   0057B6                     l935:
  8535   0057B6  0012               	return		;funcret
  8536   0057B8                     __end_of___xxtofl:
  8537                           	callstack 0
  8538                           
  8539 ;; *************** function _Apply_Filter *****************
  8540 ;; Defined at:
  8541 ;;		line 373 in file "newmain.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  new_value       4   80[COMRAM] float 
  8544 ;;  samples         2   84[COMRAM] PTR float 
  8545 ;;		 -> temp_samples(20), 
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;  i               2    4[BANK0 ] int 
  8548 ;;  sum             4    0[BANK0 ] float 
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  4   80[COMRAM] float 
  8551 ;; Registers used:
  8552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/0
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8558 ;;      Params:         6       0       0       0       0       0       0       0       0
  8559 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8560 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8561 ;;      Totals:         8       6       0       0       0       0       0       0       0
  8562 ;;Total ram usage:       14 bytes
  8563 ;; Hardware stack levels used: 1
  8564 ;; Hardware stack levels required when called: 2
  8565 ;; This function calls:
  8566 ;;		___fladd
  8567 ;;		___fldiv
  8568 ;; This function is called by:
  8569 ;;		_Read_Sensors
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           	psect	text10
  8574   0064EE                     __ptext10:
  8575                           	callstack 0
  8576   0064EE                     _Apply_Filter:
  8577                           	callstack 27
  8578   0064EE                     
  8579                           ;newmain.c: 374:     samples[sample_index] = new_value;
  8580   0064EE  0103               	movlb	3	; () banked
  8581   0064F0  516C               	movf	_sample_index& (0+255),w,b
  8582   0064F2  0D04               	mullw	4
  8583   0064F4  CFF3 F057          	movff	prodl,??_Apply_Filter
  8584   0064F8  CFF4 F058          	movff	prodh,??_Apply_Filter+1
  8585   0064FC  5057               	movf	??_Apply_Filter^0,w,c
  8586   0064FE  2455               	addwf	Apply_Filter@samples^0,w,c
  8587   006500  6ED9               	movwf	fsr2l,c
  8588   006502  5058               	movf	(??_Apply_Filter+1)^0,w,c
  8589   006504  2056               	addwfc	(Apply_Filter@samples+1)^0,w,c
  8590   006506  6EDA               	movwf	fsr2h,c
  8591   006508  C051  FFDE         	movff	Apply_Filter@new_value,postinc2
  8592   00650C  C052  FFDE         	movff	Apply_Filter@new_value+1,postinc2
  8593   006510  C053  FFDE         	movff	Apply_Filter@new_value+2,postinc2
  8594   006514  C054  FFDE         	movff	Apply_Filter@new_value+3,postinc2
  8595   006518                     
  8596                           ; BSR set to: 3
  8597                           ;newmain.c: 376:     float sum = 0;
  8598   006518  0E00               	movlw	0
  8599   00651A  0100               	movlb	0	; () banked
  8600   00651C  6F60               	movwf	Apply_Filter@sum& (0+255),b
  8601   00651E  0E00               	movlw	0
  8602   006520  6F61               	movwf	(Apply_Filter@sum+1)& (0+255),b
  8603   006522  0E00               	movlw	0
  8604   006524  6F62               	movwf	(Apply_Filter@sum+2)& (0+255),b
  8605   006526  0E00               	movlw	0
  8606   006528  6F63               	movwf	(Apply_Filter@sum+3)& (0+255),b
  8607   00652A                     
  8608                           ; BSR set to: 0
  8609                           ;newmain.c: 377:     for(int i = 0; i < 5; i++) {
  8610   00652A  0E00               	movlw	0
  8611   00652C  6F65               	movwf	(Apply_Filter@i+1)& (0+255),b
  8612   00652E  0E00               	movlw	0
  8613   006530  6F64               	movwf	Apply_Filter@i& (0+255),b
  8614   006532                     l7340:
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;newmain.c: 378:         sum += samples[i];
  8618   006532  C060  F041         	movff	Apply_Filter@sum,___fladd@b
  8619   006536  C061  F042         	movff	Apply_Filter@sum+1,___fladd@b+1
  8620   00653A  C062  F043         	movff	Apply_Filter@sum+2,___fladd@b+2
  8621   00653E  C063  F044         	movff	Apply_Filter@sum+3,___fladd@b+3
  8622   006542  90D8               	bcf	status,0,c
  8623   006544  3564               	rlcf	Apply_Filter@i& (0+255),w,b
  8624   006546  6ED9               	movwf	fsr2l,c
  8625   006548  3565               	rlcf	(Apply_Filter@i+1)& (0+255),w,b
  8626   00654A  6EDA               	movwf	fsr2h,c
  8627   00654C  90D8               	bcf	status,0,c
  8628   00654E  36D9               	rlcf	fsr2l,f,c
  8629   006550  36DA               	rlcf	fsr2h,f,c
  8630   006552  5055               	movf	Apply_Filter@samples^0,w,c
  8631   006554  26D9               	addwf	fsr2l,f,c
  8632   006556  5056               	movf	(Apply_Filter@samples+1)^0,w,c
  8633   006558  22DA               	addwfc	fsr2h,f,c
  8634   00655A  CFDE F045          	movff	postinc2,___fladd@a
  8635   00655E  CFDE F046          	movff	postinc2,___fladd@a+1
  8636   006562  CFDE F047          	movff	postinc2,___fladd@a+2
  8637   006566  CFDE F048          	movff	postinc2,___fladd@a+3
  8638   00656A  ECB3  F01D         	call	___fladd	;wreg free
  8639   00656E  C041  F060         	movff	?___fladd,Apply_Filter@sum
  8640   006572  C042  F061         	movff	?___fladd+1,Apply_Filter@sum+1
  8641   006576  C043  F062         	movff	?___fladd+2,Apply_Filter@sum+2
  8642   00657A  C044  F063         	movff	?___fladd+3,Apply_Filter@sum+3
  8643   00657E                     
  8644                           ;newmain.c: 379:     }
  8645   00657E  0100               	movlb	0	; () banked
  8646   006580  4B64               	infsnz	Apply_Filter@i& (0+255),f,b
  8647   006582  2B65               	incf	(Apply_Filter@i+1)& (0+255),f,b
  8648   006584                     
  8649                           ; BSR set to: 0
  8650   006584  BF65               	btfsc	(Apply_Filter@i+1)& (0+255),7,b
  8651   006586  EFCE  F032         	goto	u9611
  8652   00658A  5165               	movf	(Apply_Filter@i+1)& (0+255),w,b
  8653   00658C  E109               	bnz	u9610
  8654   00658E  0E05               	movlw	5
  8655   006590  5D64               	subwf	Apply_Filter@i& (0+255),w,b
  8656   006592  A0D8               	btfss	status,0,c
  8657   006594  EFCE  F032         	goto	u9611
  8658   006598  EFD0  F032         	goto	u9610
  8659   00659C                     u9611:
  8660   00659C  EF99  F032         	goto	l7340
  8661   0065A0                     u9610:
  8662   0065A0                     
  8663                           ; BSR set to: 0
  8664                           ;newmain.c: 380:     return sum / 5;
  8665   0065A0  C060  F028         	movff	Apply_Filter@sum,___fldiv@b
  8666   0065A4  C061  F029         	movff	Apply_Filter@sum+1,___fldiv@b+1
  8667   0065A8  C062  F02A         	movff	Apply_Filter@sum+2,___fldiv@b+2
  8668   0065AC  C063  F02B         	movff	Apply_Filter@sum+3,___fldiv@b+3
  8669   0065B0  0E00               	movlw	0
  8670   0065B2  6E2C               	movwf	___fldiv@a^0,c
  8671   0065B4  0E00               	movlw	0
  8672   0065B6  6E2D               	movwf	(___fldiv@a+1)^0,c
  8673   0065B8  0EA0               	movlw	160
  8674   0065BA  6E2E               	movwf	(___fldiv@a+2)^0,c
  8675   0065BC  0E40               	movlw	64
  8676   0065BE  6E2F               	movwf	(___fldiv@a+3)^0,c
  8677   0065C0  EC10  F024         	call	___fldiv	;wreg free
  8678   0065C4  C028  F051         	movff	?___fldiv,?_Apply_Filter
  8679   0065C8  C029  F052         	movff	?___fldiv+1,?_Apply_Filter+1
  8680   0065CC  C02A  F053         	movff	?___fldiv+2,?_Apply_Filter+2
  8681   0065D0  C02B  F054         	movff	?___fldiv+3,?_Apply_Filter+3
  8682   0065D4  0012               	return		;funcret
  8683   0065D6                     __end_of_Apply_Filter:
  8684                           	callstack 0
  8685                           
  8686 ;; *************** function _ADC_Read *****************
  8687 ;; Defined at:
  8688 ;;		line 430 in file "newmain.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;  channel         1    wreg     unsigned char 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  channel         1    4[COMRAM] unsigned char 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  2    0[COMRAM] unsigned int 
  8695 ;; Registers used:
  8696 ;;		wreg, status,2, status,0
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8702 ;;      Params:         2       0       0       0       0       0       0       0       0
  8703 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8704 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8705 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8706 ;;Total ram usage:        5 bytes
  8707 ;; Hardware stack levels used: 1
  8708 ;; Hardware stack levels required when called: 1
  8709 ;; This function calls:
  8710 ;;		Nothing
  8711 ;; This function is called by:
  8712 ;;		_main
  8713 ;;		_Read_Sensors
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text11
  8718   006D32                     __ptext11:
  8719                           	callstack 0
  8720   006D32                     _ADC_Read:
  8721                           	callstack 28
  8722                           
  8723                           ;incstack = 0
  8724                           ;ADC_Read@channel stored from wreg
  8725   006D32  6E05               	movwf	ADC_Read@channel^0,c
  8726   006D34                     
  8727                           ;newmain.c: 431:     ADCON0bits.CHS = channel;
  8728   006D34  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  8729   006D38  4603               	rlncf	??_ADC_Read^0,f,c
  8730   006D3A  4603               	rlncf	??_ADC_Read^0,f,c
  8731   006D3C  50C2               	movf	194,w,c	;volatile
  8732   006D3E  1803               	xorwf	??_ADC_Read^0,w,c
  8733   006D40  0BC3               	andlw	-61
  8734   006D42  1803               	xorwf	??_ADC_Read^0,w,c
  8735   006D44  6EC2               	movwf	194,c	;volatile
  8736   006D46                     
  8737                           ;newmain.c: 432:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  8738   006D46  0E14               	movlw	20
  8739   006D48                     u10787:
  8740   006D48  2EE8               	decfsz	wreg,f,c
  8741   006D4A  D7FE               	bra	u10787
  8742   006D4C                     
  8743                           ;newmain.c: 433:     ADCON0bits.GO = 1;
  8744   006D4C  82C2               	bsf	194,1,c	;volatile
  8745   006D4E                     l265:
  8746   006D4E  B2C2               	btfsc	194,1,c	;volatile
  8747   006D50  EFAC  F036         	goto	u9571
  8748   006D54  EFAE  F036         	goto	u9570
  8749   006D58                     u9571:
  8750   006D58  EFA7  F036         	goto	l265
  8751   006D5C                     u9570:
  8752   006D5C                     
  8753                           ;newmain.c: 435:     return ((unsigned int)ADRESH << 8) | ADRESL;
  8754   006D5C  50C4               	movf	196,w,c	;volatile
  8755   006D5E  6E03               	movwf	??_ADC_Read^0,c
  8756   006D60  50C3               	movf	195,w,c	;volatile
  8757   006D62  6E01               	movwf	?_ADC_Read^0,c
  8758   006D64  C003  F002         	movff	??_ADC_Read,?_ADC_Read+1
  8759   006D68  0012               	return		;funcret
  8760   006D6A                     __end_of_ADC_Read:
  8761                           	callstack 0
  8762                           
  8763 ;; *************** function _Interrupt_Init *****************
  8764 ;; Defined at:
  8765 ;;		line 438 in file "newmain.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;		None
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;		None
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      void 
  8772 ;; Registers used:
  8773 ;;		None
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8779 ;;      Params:         0       0       0       0       0       0       0       0       0
  8780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8782 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8783 ;;Total ram usage:        0 bytes
  8784 ;; Hardware stack levels used: 1
  8785 ;; Hardware stack levels required when called: 1
  8786 ;; This function calls:
  8787 ;;		Nothing
  8788 ;; This function is called by:
  8789 ;;		_main
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           	psect	text12
  8794   006E68                     __ptext12:
  8795                           	callstack 0
  8796   006E68                     _Interrupt_Init:
  8797                           	callstack 29
  8798   006E68                     
  8799                           ;newmain.c: 439:     TRISBbits.TRISB1 = 1;
  8800   006E68  8293               	bsf	147,1,c	;volatile
  8801                           
  8802                           ;newmain.c: 440:     INTCON2bits.INTEDG1 = 0;
  8803   006E6A  9AF1               	bcf	241,5,c	;volatile
  8804                           
  8805                           ;newmain.c: 441:     INTCON3bits.INT1IE = 1;
  8806   006E6C  86F0               	bsf	240,3,c	;volatile
  8807                           
  8808                           ;newmain.c: 442:     INTCON3bits.INT1IP = 1;
  8809   006E6E  8CF0               	bsf	240,6,c	;volatile
  8810                           
  8811                           ;newmain.c: 443:     RCONbits.IPEN = 1;
  8812   006E70  8ED0               	bsf	208,7,c	;volatile
  8813                           
  8814                           ;newmain.c: 444:     INTCONbits.GIEH = 1;
  8815   006E72  8EF2               	bsf	242,7,c	;volatile
  8816                           
  8817                           ;newmain.c: 445:     INTCONbits.GIEL = 1;
  8818   006E74  8CF2               	bsf	242,6,c	;volatile
  8819   006E76  0012               	return		;funcret
  8820   006E78                     __end_of_Interrupt_Init:
  8821                           	callstack 0
  8822                           
  8823 ;; *************** function _Handle_Test_Events *****************
  8824 ;; Defined at:
  8825 ;;		line 254 in file "newmain.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;		None
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  test_data      50  202[BANK1 ] unsigned char [50]
  8830 ;;  water_used      4  252[BANK1 ] float 
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  1    wreg      void 
  8833 ;; Registers used:
  8834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8840 ;;      Params:         0       0       0       0       0       0       0       0       0
  8841 ;;      Locals:         0       0      54       0       0       0       0       0       0
  8842 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8843 ;;      Totals:         0       2      54       0       0       0       0       0       0
  8844 ;;Total ram usage:       56 bytes
  8845 ;; Hardware stack levels used: 1
  8846 ;; Hardware stack levels required when called: 10
  8847 ;; This function calls:
  8848 ;;		_Send_History_Event
  8849 ;;		___flsub
  8850 ;;		_sprintf
  8851 ;; This function is called by:
  8852 ;;		_main
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text13
  8857   00601A                     __ptext13:
  8858                           	callstack 0
  8859   00601A                     _Handle_Test_Events:
  8860                           	callstack 20
  8861   00601A                     
  8862                           ;newmain.c: 255:     static bool prev_test = 0;;newmain.c: 258:     if(trigger_test && !
      +                          prev_test) {
  8863   00601A  505E               	movf	_trigger_test^0,w,c
  8864   00601C  B4D8               	btfsc	status,2,c
  8865   00601E  EF13  F030         	goto	u10521
  8866   006022  EF15  F030         	goto	u10520
  8867   006026                     u10521:
  8868   006026  EF29  F030         	goto	l7976
  8869   00602A                     u10520:
  8870   00602A  0103               	movlb	3	; () banked
  8871   00602C  516A               	movf	Handle_Test_Events@prev_test& (0+255),w,b
  8872   00602E  A4D8               	btfss	status,2,c
  8873   006030  EF1C  F030         	goto	u10531
  8874   006034  EF1E  F030         	goto	u10530
  8875   006038                     u10531:
  8876   006038  EF29  F030         	goto	l7976
  8877   00603C                     u10530:
  8878   00603C                     
  8879                           ; BSR set to: 3
  8880                           ;newmain.c: 259:         Send_History_Event("test_start", "");
  8881   00603C  0EB9               	movlw	low STR_8
  8882   00603E  0100               	movlb	0	; () banked
  8883   006040  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  8884   006042  0E7F               	movlw	high STR_8
  8885   006044  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  8886   006046  0E61               	movlw	low (STR_16+29)
  8887   006048  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  8888   00604A  0E7F               	movlw	high (STR_16+29)
  8889   00604C  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  8890   00604E  EC9C  F034         	call	_Send_History_Event	;wreg free
  8891   006052                     l7976:
  8892                           
  8893                           ;newmain.c: 263:     if(!trigger_test && prev_test) {
  8894   006052  505E               	movf	_trigger_test^0,w,c
  8895   006054  A4D8               	btfss	status,2,c
  8896   006056  EF2F  F030         	goto	u10541
  8897   00605A  EF31  F030         	goto	u10540
  8898   00605E                     u10541:
  8899   00605E  EF8C  F030         	goto	l7992
  8900   006062                     u10540:
  8901   006062  0103               	movlb	3	; () banked
  8902   006064  516A               	movf	Handle_Test_Events@prev_test& (0+255),w,b
  8903   006066  B4D8               	btfsc	status,2,c
  8904   006068  EF38  F030         	goto	u10551
  8905   00606C  EF3A  F030         	goto	u10550
  8906   006070                     u10551:
  8907   006070  EF8C  F030         	goto	l7992
  8908   006074                     u10550:
  8909   006074                     
  8910                           ; BSR set to: 3
  8911                           ;newmain.c: 264:         float water_used = total_flow - test_start_flow;
  8912   006074  C348  F051         	movff	_total_flow,___flsub@b
  8913   006078  C349  F052         	movff	_total_flow+1,___flsub@b+1
  8914   00607C  C34A  F053         	movff	_total_flow+2,___flsub@b+2
  8915   006080  C34B  F054         	movff	_total_flow+3,___flsub@b+3
  8916   006084  C32C  F055         	movff	_test_start_flow,___flsub@a
  8917   006088  C32D  F056         	movff	_test_start_flow+1,___flsub@a+1
  8918   00608C  C32E  F057         	movff	_test_start_flow+2,___flsub@a+2
  8919   006090  C32F  F058         	movff	_test_start_flow+3,___flsub@a+3
  8920   006094  EC34  F036         	call	___flsub	;wreg free
  8921   006098  C051  F1FC         	movff	?___flsub,Handle_Test_Events@water_used
  8922   00609C  C052  F1FD         	movff	?___flsub+1,Handle_Test_Events@water_used+1
  8923   0060A0  C053  F1FE         	movff	?___flsub+2,Handle_Test_Events@water_used+2
  8924   0060A4  C054  F1FF         	movff	?___flsub+3,Handle_Test_Events@water_used+3
  8925   0060A8                     
  8926                           ;newmain.c: 266:         char test_data[50];;newmain.c: 267:         sprintf(test_data, 
      +                          ",\"water\":%.2f", water_used);
  8927   0060A8  0ECA               	movlw	low Handle_Test_Events@test_data
  8928   0060AA  0100               	movlb	0	; () banked
  8929   0060AC  6FB0               	movwf	sprintf@s& (0+255),b
  8930   0060AE  0E01               	movlw	high Handle_Test_Events@test_data
  8931   0060B0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  8932   0060B2  0E71               	movlw	low (STR_6+15)
  8933   0060B4  6FB2               	movwf	sprintf@fmt& (0+255),b
  8934   0060B6  0E7F               	movlw	high (STR_6+15)
  8935   0060B8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  8936   0060BA  C1FC  F0B4         	movff	Handle_Test_Events@water_used,?_sprintf+4
  8937   0060BE  C1FD  F0B5         	movff	Handle_Test_Events@water_used+1,?_sprintf+5
  8938   0060C2  C1FE  F0B6         	movff	Handle_Test_Events@water_used+2,?_sprintf+6
  8939   0060C6  C1FF  F0B7         	movff	Handle_Test_Events@water_used+3,?_sprintf+7
  8940   0060CA  EC57  F036         	call	_sprintf	;wreg free
  8941   0060CE                     
  8942                           ;newmain.c: 268:         Send_History_Event("test_end", test_data);
  8943   0060CE  0ED7               	movlw	low STR_11
  8944   0060D0  0100               	movlb	0	; () banked
  8945   0060D2  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  8946   0060D4  0E7F               	movlw	high STR_11
  8947   0060D6  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  8948   0060D8  0ECA               	movlw	low Handle_Test_Events@test_data
  8949   0060DA  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  8950   0060DC  0E01               	movlw	high Handle_Test_Events@test_data
  8951   0060DE  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  8952   0060E0  EC9C  F034         	call	_Send_History_Event	;wreg free
  8953   0060E4                     
  8954                           ;newmain.c: 271:         _delay((unsigned long)((3000)*(8000000/4000.0)));
  8955   0060E4  0E1F               	movlw	31
  8956   0060E6  0100               	movlb	0	; () banked
  8957   0060E8  6FE5               	movwf	(??_Handle_Test_Events+1)& (0+255),b
  8958   0060EA  0E71               	movlw	113
  8959   0060EC  6FE4               	movwf	??_Handle_Test_Events& (0+255),b
  8960   0060EE  0E1E               	movlw	30
  8961   0060F0                     u10797:
  8962   0060F0  2EE8               	decfsz	wreg,f,c
  8963   0060F2  D7FE               	bra	u10797
  8964   0060F4  2FE4               	decfsz	??_Handle_Test_Events& (0+255),f,b
  8965   0060F6  D7FC               	bra	u10797
  8966   0060F8  2FE5               	decfsz	(??_Handle_Test_Events+1)& (0+255),f,b
  8967   0060FA  D7FA               	bra	u10797
  8968   0060FC  0000               	nop	
  8969   0060FE                     
  8970                           ;newmain.c: 272:         total_flow = 0.0;
  8971   0060FE  0E00               	movlw	0
  8972   006100  0103               	movlb	3	; () banked
  8973   006102  6F48               	movwf	_total_flow& (0+255),b
  8974   006104  0E00               	movlw	0
  8975   006106  6F49               	movwf	(_total_flow+1)& (0+255),b
  8976   006108  0E00               	movlw	0
  8977   00610A  6F4A               	movwf	(_total_flow+2)& (0+255),b
  8978   00610C  0E00               	movlw	0
  8979   00610E  6F4B               	movwf	(_total_flow+3)& (0+255),b
  8980   006110                     
  8981                           ; BSR set to: 3
  8982                           ;newmain.c: 273:         pulse_count = 0;
  8983   006110  0E00               	movlw	0
  8984   006112  6F67               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  8985   006114  0E00               	movlw	0
  8986   006116  6F66               	movwf	_pulse_count& (0+255),b	;volatile
  8987   006118                     l7992:
  8988                           
  8989                           ;newmain.c: 276:     prev_test = trigger_test;
  8990   006118  C05E  F36A         	movff	_trigger_test,Handle_Test_Events@prev_test
  8991   00611C  0012               	return		;funcret
  8992   00611E                     __end_of_Handle_Test_Events:
  8993                           	callstack 0
  8994                           
  8995 ;; *************** function _Handle_Shutdown_Events *****************
  8996 ;; Defined at:
  8997 ;;		line 279 in file "newmain.c"
  8998 ;; Parameters:    Size  Location     Type
  8999 ;;		None
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;		None
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  1    wreg      void 
  9004 ;; Registers used:
  9005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9011 ;;      Params:         0       0       0       0       0       0       0       0       0
  9012 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9014 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9015 ;;Total ram usage:        0 bytes
  9016 ;; Hardware stack levels used: 1
  9017 ;; Hardware stack levels required when called: 10
  9018 ;; This function calls:
  9019 ;;		_Send_History_Event
  9020 ;; This function is called by:
  9021 ;;		_main
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text14
  9026   006A54                     __ptext14:
  9027                           	callstack 0
  9028   006A54                     _Handle_Shutdown_Events:
  9029                           	callstack 20
  9030   006A54                     
  9031                           ;newmain.c: 280:     static bool prev_shutdown = 0;;newmain.c: 283:     if(shutdown_syst
      +                          em && !prev_shutdown) {
  9032   006A54  0103               	movlb	3	; () banked
  9033   006A56  516B               	movf	_shutdown_system& (0+255),w,b
  9034   006A58  B4D8               	btfsc	status,2,c
  9035   006A5A  EF31  F035         	goto	u10561
  9036   006A5E  EF33  F035         	goto	u10560
  9037   006A62                     u10561:
  9038   006A62  EF46  F035         	goto	l8000
  9039   006A66                     u10560:
  9040   006A66                     
  9041                           ; BSR set to: 3
  9042   006A66  5169               	movf	Handle_Shutdown_Events@prev_shutdown& (0+255),w,b
  9043   006A68  A4D8               	btfss	status,2,c
  9044   006A6A  EF39  F035         	goto	u10571
  9045   006A6E  EF3B  F035         	goto	u10570
  9046   006A72                     u10571:
  9047   006A72  EF46  F035         	goto	l8000
  9048   006A76                     u10570:
  9049   006A76                     
  9050                           ; BSR set to: 3
  9051                           ;newmain.c: 284:         Send_History_Event("shutdown", "");
  9052   006A76  0EE0               	movlw	low STR_12
  9053   006A78  0100               	movlb	0	; () banked
  9054   006A7A  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9055   006A7C  0E7F               	movlw	high STR_12
  9056   006A7E  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9057   006A80  0E61               	movlw	low (STR_16+29)
  9058   006A82  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9059   006A84  0E7F               	movlw	high (STR_16+29)
  9060   006A86  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9061   006A88  EC9C  F034         	call	_Send_History_Event	;wreg free
  9062   006A8C                     l8000:
  9063                           
  9064                           ;newmain.c: 288:     if(!shutdown_system && prev_shutdown) {
  9065   006A8C  0103               	movlb	3	; () banked
  9066   006A8E  516B               	movf	_shutdown_system& (0+255),w,b
  9067   006A90  A4D8               	btfss	status,2,c
  9068   006A92  EF4D  F035         	goto	u10581
  9069   006A96  EF4F  F035         	goto	u10580
  9070   006A9A                     u10581:
  9071   006A9A  EF62  F035         	goto	l8006
  9072   006A9E                     u10580:
  9073   006A9E                     
  9074                           ; BSR set to: 3
  9075   006A9E  5169               	movf	Handle_Shutdown_Events@prev_shutdown& (0+255),w,b
  9076   006AA0  B4D8               	btfsc	status,2,c
  9077   006AA2  EF55  F035         	goto	u10591
  9078   006AA6  EF57  F035         	goto	u10590
  9079   006AAA                     u10591:
  9080   006AAA  EF62  F035         	goto	l8006
  9081   006AAE                     u10590:
  9082   006AAE                     
  9083                           ; BSR set to: 3
  9084                           ;newmain.c: 289:         Send_History_Event("resume", "");
  9085   006AAE  0EF0               	movlw	low STR_14
  9086   006AB0  0100               	movlb	0	; () banked
  9087   006AB2  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9088   006AB4  0E7F               	movlw	high STR_14
  9089   006AB6  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9090   006AB8  0E61               	movlw	low (STR_16+29)
  9091   006ABA  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9092   006ABC  0E7F               	movlw	high (STR_16+29)
  9093   006ABE  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9094   006AC0  EC9C  F034         	call	_Send_History_Event	;wreg free
  9095   006AC4                     l8006:
  9096                           
  9097                           ;newmain.c: 292:     prev_shutdown = shutdown_system;
  9098   006AC4  C36B  F369         	movff	_shutdown_system,Handle_Shutdown_Events@prev_shutdown
  9099   006AC8  0012               	return		;funcret
  9100   006ACA                     __end_of_Handle_Shutdown_Events:
  9101                           	callstack 0
  9102                           
  9103 ;; *************** function _Handle_Fire_Events *****************
  9104 ;; Defined at:
  9105 ;;		line 212 in file "newmain.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;		None
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;  end_data      150    0[BANK2 ] unsigned char [150]
  9110 ;;  water_used      4  138[BANK0 ] float 
  9111 ;;  duration        4  134[BANK0 ] unsigned long 
  9112 ;;  start_data    100  150[BANK2 ] unsigned char [100]
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      void 
  9115 ;; Registers used:
  9116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9122 ;;      Params:         0       0       0       0       0       0       0       0       0
  9123 ;;      Locals:         0       8       0     250       0       0       0       0       0
  9124 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9125 ;;      Totals:         0      10       0     250       0       0       0       0       0
  9126 ;;Total ram usage:      260 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; Hardware stack levels required when called: 10
  9129 ;; This function calls:
  9130 ;;		_Send_History_Event
  9131 ;;		___flge
  9132 ;;		___flsub
  9133 ;;		___lldiv
  9134 ;;		_sprintf
  9135 ;;		_strcpy
  9136 ;; This function is called by:
  9137 ;;		_main
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141                           	psect	text15
  9142   004F34                     __ptext15:
  9143                           	callstack 0
  9144   004F34                     _Handle_Fire_Events:
  9145                           	callstack 20
  9146   004F34                     
  9147                           ;newmain.c: 214:     if(fire_alarm && !prev_fire_alarm) {
  9148   004F34  0103               	movlb	3	; () banked
  9149   004F36  516E               	movf	_fire_alarm& (0+255),w,b
  9150   004F38  B4D8               	btfsc	status,2,c
  9151   004F3A  EFA1  F027         	goto	u10451
  9152   004F3E  EFA3  F027         	goto	u10450
  9153   004F42                     u10451:
  9154   004F42  EF4C  F028         	goto	l7952
  9155   004F46                     u10450:
  9156   004F46                     
  9157                           ; BSR set to: 3
  9158   004F46  516D               	movf	_prev_fire_alarm& (0+255),w,b
  9159   004F48  A4D8               	btfss	status,2,c
  9160   004F4A  EFA9  F027         	goto	u10461
  9161   004F4E  EFAB  F027         	goto	u10460
  9162   004F52                     u10461:
  9163   004F52  EF4C  F028         	goto	l7952
  9164   004F56                     u10460:
  9165   004F56                     
  9166                           ; BSR set to: 3
  9167                           ;newmain.c: 215:         fire_start_time = system_millis;
  9168   004F56  C2FA  F340         	movff	_system_millis,_fire_start_time
  9169   004F5A  C2FB  F341         	movff	_system_millis+1,_fire_start_time+1
  9170   004F5E  C2FC  F342         	movff	_system_millis+2,_fire_start_time+2
  9171   004F62  C2FD  F343         	movff	_system_millis+3,_fire_start_time+3
  9172                           
  9173                           ;newmain.c: 216:         fire_start_temp = temperature;
  9174   004F66  C35C  F33C         	movff	_temperature,_fire_start_temp
  9175   004F6A  C35D  F33D         	movff	_temperature+1,_fire_start_temp+1
  9176   004F6E  C35E  F33E         	movff	_temperature+2,_fire_start_temp+2
  9177   004F72  C35F  F33F         	movff	_temperature+3,_fire_start_temp+3
  9178                           
  9179                           ;newmain.c: 217:         fire_start_flame = flame_intensity;
  9180   004F76  C358  F338         	movff	_flame_intensity,_fire_start_flame
  9181   004F7A  C359  F339         	movff	_flame_intensity+1,_fire_start_flame+1
  9182   004F7E  C35A  F33A         	movff	_flame_intensity+2,_fire_start_flame+2
  9183   004F82  C35B  F33B         	movff	_flame_intensity+3,_fire_start_flame+3
  9184                           
  9185                           ;newmain.c: 218:         fire_start_co = co_ppm;
  9186   004F86  C350  F334         	movff	_co_ppm,_fire_start_co
  9187   004F8A  C351  F335         	movff	_co_ppm+1,_fire_start_co+1
  9188   004F8E  C352  F336         	movff	_co_ppm+2,_fire_start_co+2
  9189   004F92  C353  F337         	movff	_co_ppm+3,_fire_start_co+3
  9190                           
  9191                           ;newmain.c: 219:         fire_start_flow = total_flow;
  9192   004F96  C348  F330         	movff	_total_flow,_fire_start_flow
  9193   004F9A  C349  F331         	movff	_total_flow+1,_fire_start_flow+1
  9194   004F9E  C34A  F332         	movff	_total_flow+2,_fire_start_flow+2
  9195   004FA2  C34B  F333         	movff	_total_flow+3,_fire_start_flow+3
  9196   004FA6                     
  9197                           ; BSR set to: 3
  9198                           ;newmain.c: 222:         if(flame_detected) {
  9199   004FA6  5171               	movf	_flame_detected& (0+255),w,b
  9200   004FA8  B4D8               	btfsc	status,2,c
  9201   004FAA  EFD9  F027         	goto	u10471
  9202   004FAE  EFDB  F027         	goto	u10470
  9203   004FB2                     u10471:
  9204   004FB2  EFE7  F027         	goto	l7940
  9205   004FB6                     u10470:
  9206   004FB6                     
  9207                           ; BSR set to: 3
  9208                           ;newmain.c: 223:             strcpy(fire_trigger_sensor, "flame_sensor");
  9209   004FB6  0EC2               	movlw	low _fire_trigger_sensor
  9210   004FB8  6E01               	movwf	strcpy@dest^0,c
  9211   004FBA  0E03               	movlw	high _fire_trigger_sensor
  9212   004FBC  6E02               	movwf	(strcpy@dest+1)^0,c
  9213   004FBE  0EA1               	movlw	low STR_1
  9214   004FC0  6E03               	movwf	strcpy@src^0,c
  9215   004FC2  0E7F               	movlw	high STR_1
  9216   004FC4  6E04               	movwf	(strcpy@src+1)^0,c
  9217   004FC6  ECB5  F036         	call	_strcpy	;wreg free
  9218                           
  9219                           ;newmain.c: 224:         } else if(temperature >= 40.0) {
  9220   004FCA  EF32  F028         	goto	l7948
  9221   004FCE                     l7940:
  9222                           
  9223                           ; BSR set to: 3
  9224   004FCE  C35C  F060         	movff	_temperature,___flge@ff1
  9225   004FD2  C35D  F061         	movff	_temperature+1,___flge@ff1+1
  9226   004FD6  C35E  F062         	movff	_temperature+2,___flge@ff1+2
  9227   004FDA  C35F  F063         	movff	_temperature+3,___flge@ff1+3
  9228   004FDE  0E00               	movlw	0
  9229   004FE0  0100               	movlb	0	; () banked
  9230   004FE2  6F64               	movwf	___flge@ff2& (0+255),b
  9231   004FE4  0E00               	movlw	0
  9232   004FE6  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9233   004FE8  0E20               	movlw	32
  9234   004FEA  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9235   004FEC  0E42               	movlw	66
  9236   004FEE  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9237   004FF0  EC8A  F02F         	call	___flge	;wreg free
  9238   004FF4  0100               	movlb	0	; () banked
  9239   004FF6  A0D8               	btfss	status,0,c
  9240   004FF8  EF00  F028         	goto	u10481
  9241   004FFC  EF02  F028         	goto	u10480
  9242   005000                     u10481:
  9243   005000  EF0E  F028         	goto	l7944
  9244   005004                     u10480:
  9245   005004                     
  9246                           ; BSR set to: 0
  9247                           ;newmain.c: 225:             strcpy(fire_trigger_sensor, "temperature_sensor");
  9248   005004  0EC2               	movlw	low _fire_trigger_sensor
  9249   005006  6E01               	movwf	strcpy@dest^0,c
  9250   005008  0E03               	movlw	high _fire_trigger_sensor
  9251   00500A  6E02               	movwf	(strcpy@dest+1)^0,c
  9252   00500C  0E7F               	movlw	low STR_2
  9253   00500E  6E03               	movwf	strcpy@src^0,c
  9254   005010  0E7F               	movlw	high STR_2
  9255   005012  6E04               	movwf	(strcpy@src+1)^0,c
  9256   005014  ECB5  F036         	call	_strcpy	;wreg free
  9257                           
  9258                           ;newmain.c: 226:         } else if(co_ppm >= 50.0) {
  9259   005018  EF32  F028         	goto	l7948
  9260   00501C                     l7944:
  9261                           
  9262                           ; BSR set to: 0
  9263   00501C  C350  F060         	movff	_co_ppm,___flge@ff1
  9264   005020  C351  F061         	movff	_co_ppm+1,___flge@ff1+1
  9265   005024  C352  F062         	movff	_co_ppm+2,___flge@ff1+2
  9266   005028  C353  F063         	movff	_co_ppm+3,___flge@ff1+3
  9267   00502C  0E00               	movlw	0
  9268   00502E  6F64               	movwf	___flge@ff2& (0+255),b
  9269   005030  0E00               	movlw	0
  9270   005032  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9271   005034  0E48               	movlw	72
  9272   005036  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9273   005038  0E42               	movlw	66
  9274   00503A  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9275   00503C  EC8A  F02F         	call	___flge	;wreg free
  9276   005040  0100               	movlb	0	; () banked
  9277   005042  A0D8               	btfss	status,0,c
  9278   005044  EF26  F028         	goto	u10491
  9279   005048  EF28  F028         	goto	u10490
  9280   00504C                     u10491:
  9281   00504C  EF32  F028         	goto	l7948
  9282   005050                     u10490:
  9283   005050                     
  9284                           ; BSR set to: 0
  9285                           ;newmain.c: 227:             strcpy(fire_trigger_sensor, "co_sensor");
  9286   005050  0EC2               	movlw	low _fire_trigger_sensor
  9287   005052  6E01               	movwf	strcpy@dest^0,c
  9288   005054  0E03               	movlw	high _fire_trigger_sensor
  9289   005056  6E02               	movwf	(strcpy@dest+1)^0,c
  9290   005058  0EC4               	movlw	low STR_3
  9291   00505A  6E03               	movwf	strcpy@src^0,c
  9292   00505C  0E7F               	movlw	high STR_3
  9293   00505E  6E04               	movwf	(strcpy@src+1)^0,c
  9294   005060  ECB5  F036         	call	_strcpy	;wreg free
  9295   005064                     l7948:
  9296                           
  9297                           ;newmain.c: 231:         char start_data[100];;newmain.c: 232:         sprintf(start_dat
      +                          a, ",\"sensor\":\"%s\"", fire_trigger_sensor);
  9298   005064  0E96               	movlw	low Handle_Fire_Events@start_data
  9299   005066  0100               	movlb	0	; () banked
  9300   005068  6FB0               	movwf	sprintf@s& (0+255),b
  9301   00506A  0E02               	movlw	high Handle_Fire_Events@start_data
  9302   00506C  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9303   00506E  0E92               	movlw	low STR_4
  9304   005070  6FB2               	movwf	sprintf@fmt& (0+255),b
  9305   005072  0E7F               	movlw	high STR_4
  9306   005074  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9307   005076  0EC2               	movlw	low _fire_trigger_sensor
  9308   005078  6FB4               	movwf	(?_sprintf+4)& (0+255),b
  9309   00507A  0E03               	movlw	high _fire_trigger_sensor
  9310   00507C  6FB5               	movwf	(?_sprintf+5)& (0+255),b
  9311   00507E  EC57  F036         	call	_sprintf	;wreg free
  9312   005082                     
  9313                           ;newmain.c: 233:         Send_History_Event("fire_start", start_data);
  9314   005082  0EAE               	movlw	low STR_5
  9315   005084  0100               	movlb	0	; () banked
  9316   005086  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9317   005088  0E7F               	movlw	high STR_5
  9318   00508A  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9319   00508C  0E96               	movlw	low Handle_Fire_Events@start_data
  9320   00508E  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9321   005090  0E02               	movlw	high Handle_Fire_Events@start_data
  9322   005092  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9323   005094  EC9C  F034         	call	_Send_History_Event	;wreg free
  9324   005098                     l7952:
  9325                           
  9326                           ;newmain.c: 237:     if(!fire_alarm && prev_fire_alarm) {
  9327   005098  0103               	movlb	3	; () banked
  9328   00509A  516E               	movf	_fire_alarm& (0+255),w,b
  9329   00509C  A4D8               	btfss	status,2,c
  9330   00509E  EF53  F028         	goto	u10501
  9331   0050A2  EF55  F028         	goto	u10500
  9332   0050A6                     u10501:
  9333   0050A6  EFDC  F028         	goto	l7968
  9334   0050AA                     u10500:
  9335   0050AA                     
  9336                           ; BSR set to: 3
  9337   0050AA  516D               	movf	_prev_fire_alarm& (0+255),w,b
  9338   0050AC  B4D8               	btfsc	status,2,c
  9339   0050AE  EF5B  F028         	goto	u10511
  9340   0050B2  EF5D  F028         	goto	u10510
  9341   0050B6                     u10511:
  9342   0050B6  EFDC  F028         	goto	l7968
  9343   0050BA                     u10510:
  9344   0050BA                     
  9345                           ; BSR set to: 3
  9346                           ;newmain.c: 238:         unsigned long duration = (system_millis - fire_start_time) / 10
      +                          00;
  9347   0050BA  5140               	movf	_fire_start_time& (0+255),w,b
  9348   0050BC  0102               	movlb	2	; () banked
  9349   0050BE  5DFA               	subwf	_system_millis& (0+255),w,b
  9350   0050C0  6E01               	movwf	___lldiv@dividend^0,c
  9351   0050C2  0103               	movlb	3	; () banked
  9352   0050C4  5141               	movf	(_fire_start_time+1)& (0+255),w,b
  9353   0050C6  0102               	movlb	2	; () banked
  9354   0050C8  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  9355   0050CA  6E02               	movwf	(___lldiv@dividend+1)^0,c
  9356   0050CC  0103               	movlb	3	; () banked
  9357   0050CE  5142               	movf	(_fire_start_time+2)& (0+255),w,b
  9358   0050D0  0102               	movlb	2	; () banked
  9359   0050D2  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  9360   0050D4  6E03               	movwf	(___lldiv@dividend+2)^0,c
  9361   0050D6  0103               	movlb	3	; () banked
  9362   0050D8  5143               	movf	(_fire_start_time+3)& (0+255),w,b
  9363   0050DA  0102               	movlb	2	; () banked
  9364   0050DC  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  9365   0050DE  6E04               	movwf	(___lldiv@dividend+3)^0,c
  9366   0050E0  0EE8               	movlw	232
  9367   0050E2  6E05               	movwf	___lldiv@divisor^0,c
  9368   0050E4  0E03               	movlw	3
  9369   0050E6  6E06               	movwf	(___lldiv@divisor+1)^0,c
  9370   0050E8  0E00               	movlw	0
  9371   0050EA  6E07               	movwf	(___lldiv@divisor+2)^0,c
  9372   0050EC  0E00               	movlw	0
  9373   0050EE  6E08               	movwf	(___lldiv@divisor+3)^0,c
  9374   0050F0  EC4A  F034         	call	___lldiv	;wreg free
  9375   0050F4  C001  F0E6         	movff	?___lldiv,Handle_Fire_Events@duration
  9376   0050F8  C002  F0E7         	movff	?___lldiv+1,Handle_Fire_Events@duration+1
  9377   0050FC  C003  F0E8         	movff	?___lldiv+2,Handle_Fire_Events@duration+2
  9378   005100  C004  F0E9         	movff	?___lldiv+3,Handle_Fire_Events@duration+3
  9379                           
  9380                           ;newmain.c: 239:         float water_used = total_flow - fire_start_flow;
  9381   005104  C348  F051         	movff	_total_flow,___flsub@b
  9382   005108  C349  F052         	movff	_total_flow+1,___flsub@b+1
  9383   00510C  C34A  F053         	movff	_total_flow+2,___flsub@b+2
  9384   005110  C34B  F054         	movff	_total_flow+3,___flsub@b+3
  9385   005114  C330  F055         	movff	_fire_start_flow,___flsub@a
  9386   005118  C331  F056         	movff	_fire_start_flow+1,___flsub@a+1
  9387   00511C  C332  F057         	movff	_fire_start_flow+2,___flsub@a+2
  9388   005120  C333  F058         	movff	_fire_start_flow+3,___flsub@a+3
  9389   005124  EC34  F036         	call	___flsub	;wreg free
  9390   005128  C051  F0EA         	movff	?___flsub,Handle_Fire_Events@water_used
  9391   00512C  C052  F0EB         	movff	?___flsub+1,Handle_Fire_Events@water_used+1
  9392   005130  C053  F0EC         	movff	?___flsub+2,Handle_Fire_Events@water_used+2
  9393   005134  C054  F0ED         	movff	?___flsub+3,Handle_Fire_Events@water_used+3
  9394   005138                     
  9395                           ;newmain.c: 241:         char end_data[150];;newmain.c: 242:         sprintf(end_data, "
      +                          ,\"duration\":%lu,\"water\":%.2f", duration, water_used);
  9396   005138  0E00               	movlw	low Handle_Fire_Events@end_data
  9397   00513A  0100               	movlb	0	; () banked
  9398   00513C  6FB0               	movwf	sprintf@s& (0+255),b
  9399   00513E  0E02               	movlw	high Handle_Fire_Events@end_data
  9400   005140  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9401   005142  0E62               	movlw	low STR_6
  9402   005144  6FB2               	movwf	sprintf@fmt& (0+255),b
  9403   005146  0E7F               	movlw	high STR_6
  9404   005148  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9405   00514A  C0E6  F0B4         	movff	Handle_Fire_Events@duration,?_sprintf+4
  9406   00514E  C0E7  F0B5         	movff	Handle_Fire_Events@duration+1,?_sprintf+5
  9407   005152  C0E8  F0B6         	movff	Handle_Fire_Events@duration+2,?_sprintf+6
  9408   005156  C0E9  F0B7         	movff	Handle_Fire_Events@duration+3,?_sprintf+7
  9409   00515A  C0EA  F0B8         	movff	Handle_Fire_Events@water_used,?_sprintf+8
  9410   00515E  C0EB  F0B9         	movff	Handle_Fire_Events@water_used+1,?_sprintf+9
  9411   005162  C0EC  F0BA         	movff	Handle_Fire_Events@water_used+2,?_sprintf+10
  9412   005166  C0ED  F0BB         	movff	Handle_Fire_Events@water_used+3,?_sprintf+11
  9413   00516A  EC57  F036         	call	_sprintf	;wreg free
  9414   00516E                     
  9415                           ;newmain.c: 243:         Send_History_Event("fire_end", end_data);
  9416   00516E  0ECE               	movlw	low STR_7
  9417   005170  0100               	movlb	0	; () banked
  9418   005172  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9419   005174  0E7F               	movlw	high STR_7
  9420   005176  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9421   005178  0E00               	movlw	low Handle_Fire_Events@end_data
  9422   00517A  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9423   00517C  0E02               	movlw	high Handle_Fire_Events@end_data
  9424   00517E  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9425   005180  EC9C  F034         	call	_Send_History_Event	;wreg free
  9426   005184                     
  9427                           ;newmain.c: 246:         _delay((unsigned long)((5000)*(8000000/4000.0)));
  9428   005184  0E33               	movlw	51
  9429   005186  0100               	movlb	0	; () banked
  9430   005188  6FE5               	movwf	(??_Handle_Fire_Events+1)& (0+255),b
  9431   00518A  0EBB               	movlw	187
  9432   00518C  6FE4               	movwf	??_Handle_Fire_Events& (0+255),b
  9433   00518E  0EDF               	movlw	223
  9434   005190                     u10807:
  9435   005190  2EE8               	decfsz	wreg,f,c
  9436   005192  D7FE               	bra	u10807
  9437   005194  2FE4               	decfsz	??_Handle_Fire_Events& (0+255),f,b
  9438   005196  D7FC               	bra	u10807
  9439   005198  2FE5               	decfsz	(??_Handle_Fire_Events+1)& (0+255),f,b
  9440   00519A  D7FA               	bra	u10807
  9441   00519C  D000               	nop2	
  9442   00519E                     
  9443                           ;newmain.c: 247:         total_flow = 0.0;
  9444   00519E  0E00               	movlw	0
  9445   0051A0  0103               	movlb	3	; () banked
  9446   0051A2  6F48               	movwf	_total_flow& (0+255),b
  9447   0051A4  0E00               	movlw	0
  9448   0051A6  6F49               	movwf	(_total_flow+1)& (0+255),b
  9449   0051A8  0E00               	movlw	0
  9450   0051AA  6F4A               	movwf	(_total_flow+2)& (0+255),b
  9451   0051AC  0E00               	movlw	0
  9452   0051AE  6F4B               	movwf	(_total_flow+3)& (0+255),b
  9453   0051B0                     
  9454                           ; BSR set to: 3
  9455                           ;newmain.c: 248:         pulse_count = 0;
  9456   0051B0  0E00               	movlw	0
  9457   0051B2  6F67               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  9458   0051B4  0E00               	movlw	0
  9459   0051B6  6F66               	movwf	_pulse_count& (0+255),b	;volatile
  9460   0051B8                     l7968:
  9461                           
  9462                           ; BSR set to: 3
  9463                           ;newmain.c: 251:     prev_fire_alarm = fire_alarm;
  9464   0051B8  C36E  F36D         	movff	_fire_alarm,_prev_fire_alarm
  9465   0051BC                     
  9466                           ; BSR set to: 3
  9467   0051BC  0012               	return		;funcret
  9468   0051BE                     __end_of_Handle_Fire_Events:
  9469                           	callstack 0
  9470                           
  9471 ;; *************** function _Send_History_Event *****************
  9472 ;; Defined at:
  9473 ;;		line 295 in file "newmain.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;  event_type      2  128[BANK0 ] PTR const unsigned char 
  9476 ;;		 -> STR_14(7), STR_12(9), STR_11(9), STR_8(11), 
  9477 ;;		 -> STR_7(9), STR_5(11), 
  9478 ;;  extra_data      2  130[BANK0 ] PTR const unsigned char 
  9479 ;;		 -> STR_15(1), STR_13(1), Handle_Test_Events@test_data(50), STR_9(1), 
  9480 ;;		 -> Handle_Fire_Events@end_data(150), Handle_Fire_Events@start_data(100), 
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;  i               2  200[BANK1 ] int 
  9483 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      void 
  9486 ;; Registers used:
  9487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9493 ;;      Params:         0       4       0       0       0       0       0       0       0
  9494 ;;      Locals:         0       0     202       0       0       0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9496 ;;      Totals:         0       4     202       0       0       0       0       0       0
  9497 ;;Total ram usage:      206 bytes
  9498 ;; Hardware stack levels used: 1
  9499 ;; Hardware stack levels required when called: 9
  9500 ;; This function calls:
  9501 ;;		_sprintf
  9502 ;; This function is called by:
  9503 ;;		_Handle_Fire_Events
  9504 ;;		_Handle_Test_Events
  9505 ;;		_Handle_Shutdown_Events
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           	psect	text16
  9510   006938                     __ptext16:
  9511                           	callstack 0
  9512   006938                     _Send_History_Event:
  9513                           	callstack 20
  9514   006938                     
  9515                           ;newmain.c: 296:     char buffer[200];;newmain.c: 297:     sprintf(buffer, "{\"event\":\
      +                          "%s\",\"time\":%lu%s}\r\n",
  9516   006938  0E00               	movlw	low Send_History_Event@buffer
  9517   00693A  0100               	movlb	0	; () banked
  9518   00693C  6FB0               	movwf	sprintf@s& (0+255),b
  9519   00693E  0E01               	movlw	high Send_History_Event@buffer
  9520   006940  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9521   006942  0E44               	movlw	low STR_16
  9522   006944  6FB2               	movwf	sprintf@fmt& (0+255),b
  9523   006946  0E7F               	movlw	high STR_16
  9524   006948  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9525   00694A  C0E0  F0B4         	movff	Send_History_Event@event_type,?_sprintf+4
  9526   00694E  C0E1  F0B5         	movff	Send_History_Event@event_type+1,?_sprintf+5
  9527   006952  C2FA  F0B6         	movff	_system_millis,?_sprintf+6
  9528   006956  C2FB  F0B7         	movff	_system_millis+1,?_sprintf+7
  9529   00695A  C2FC  F0B8         	movff	_system_millis+2,?_sprintf+8
  9530   00695E  C2FD  F0B9         	movff	_system_millis+3,?_sprintf+9
  9531   006962  C0E2  F0BA         	movff	Send_History_Event@extra_data,?_sprintf+10
  9532   006966  C0E3  F0BB         	movff	Send_History_Event@extra_data+1,?_sprintf+11
  9533   00696A  EC57  F036         	call	_sprintf	;wreg free
  9534   00696E                     l203:
  9535   00696E  A2AC               	btfss	172,1,c	;volatile
  9536   006970  EFBC  F034         	goto	u9581
  9537   006974  EFBE  F034         	goto	u9580
  9538   006978                     u9581:
  9539   006978  EFB7  F034         	goto	l203
  9540   00697C                     u9580:
  9541   00697C                     
  9542                           ;newmain.c: 301:     for(int i = 0; buffer[i]; i++) {
  9543   00697C  0E00               	movlw	0
  9544   00697E  0101               	movlb	1	; () banked
  9545   006980  6FC9               	movwf	(Send_History_Event@i+1)& (0+255),b
  9546   006982  0E00               	movlw	0
  9547   006984  6FC8               	movwf	Send_History_Event@i& (0+255),b
  9548   006986  EFD7  F034         	goto	l7328
  9549   00698A                     l7324:
  9550                           
  9551                           ; BSR set to: 1
  9552                           ;newmain.c: 302:         TXREG = buffer[i];
  9553   00698A  0E00               	movlw	low Send_History_Event@buffer
  9554   00698C  25C8               	addwf	Send_History_Event@i& (0+255),w,b
  9555   00698E  6ED9               	movwf	fsr2l,c
  9556   006990  0E01               	movlw	high Send_History_Event@buffer
  9557   006992  21C9               	addwfc	(Send_History_Event@i+1)& (0+255),w,b
  9558   006994  6EDA               	movwf	fsr2h,c
  9559   006996  50DF               	movf	indf2,w,c
  9560   006998  6EAD               	movwf	173,c	;volatile
  9561   00699A                     l208:
  9562   00699A  A2AC               	btfss	172,1,c	;volatile
  9563   00699C  EFD2  F034         	goto	u9591
  9564   0069A0  EFD4  F034         	goto	u9590
  9565   0069A4                     u9591:
  9566   0069A4  EFCD  F034         	goto	l208
  9567   0069A8                     u9590:
  9568   0069A8                     
  9569                           ;newmain.c: 304:     }
  9570   0069A8  0101               	movlb	1	; () banked
  9571   0069AA  4BC8               	infsnz	Send_History_Event@i& (0+255),f,b
  9572   0069AC  2BC9               	incf	(Send_History_Event@i+1)& (0+255),f,b
  9573   0069AE                     l7328:
  9574                           
  9575                           ; BSR set to: 1
  9576   0069AE  0E00               	movlw	low Send_History_Event@buffer
  9577   0069B0  25C8               	addwf	Send_History_Event@i& (0+255),w,b
  9578   0069B2  6ED9               	movwf	fsr2l,c
  9579   0069B4  0E01               	movlw	high Send_History_Event@buffer
  9580   0069B6  21C9               	addwfc	(Send_History_Event@i+1)& (0+255),w,b
  9581   0069B8  6EDA               	movwf	fsr2h,c
  9582   0069BA  50DF               	movf	indf2,w,c
  9583   0069BC  A4D8               	btfss	status,2,c
  9584   0069BE  EFE3  F034         	goto	u9601
  9585   0069C2  EFE5  F034         	goto	u9600
  9586   0069C6                     u9601:
  9587   0069C6  EFC5  F034         	goto	l7324
  9588   0069CA                     u9600:
  9589   0069CA                     
  9590                           ; BSR set to: 1
  9591   0069CA  0012               	return		;funcret
  9592   0069CC                     __end_of_Send_History_Event:
  9593                           	callstack 0
  9594                           
  9595 ;; *************** function _sprintf *****************
  9596 ;; Defined at:
  9597 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  s               2   80[BANK0 ] PTR unsigned char 
  9600 ;;		 -> Send_Data@buffer(200), Send_History_Event@buffer(200), Handle_Test_Events@test_data(50), Handle_Fire_Events@end_
      +data(150), 
  9601 ;;		 -> Handle_Fire_Events@start_data(100), 
  9602 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  9603 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9604 ;;		 -> STR_4(15), 
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;  f              11  117[BANK0 ] struct _IO_FILE
  9607 ;;  ret             2    0        int 
  9608 ;;  ap              1  116[BANK0 ] PTR void [1]
  9609 ;;		 -> ?_sprintf(2), 
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  2   80[BANK0 ] int 
  9612 ;; Registers used:
  9613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9619 ;;      Params:         0      36       0       0       0       0       0       0       0
  9620 ;;      Locals:         0      12       0       0       0       0       0       0       0
  9621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9622 ;;      Totals:         0      48       0       0       0       0       0       0       0
  9623 ;;Total ram usage:       48 bytes
  9624 ;; Hardware stack levels used: 1
  9625 ;; Hardware stack levels required when called: 8
  9626 ;; This function calls:
  9627 ;;		_vfprintf
  9628 ;; This function is called by:
  9629 ;;		_Handle_Fire_Events
  9630 ;;		_Handle_Test_Events
  9631 ;;		_Send_History_Event
  9632 ;;		_Send_Data
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text17
  9637   006CAE                     __ptext17:
  9638                           	callstack 0
  9639   006CAE                     _sprintf:
  9640                           	callstack 21
  9641   006CAE  0EB4               	movlw	low (?_sprintf+4)
  9642   006CB0  0100               	movlb	0	; () banked
  9643   006CB2  6FD4               	movwf	sprintf@ap& (0+255),b
  9644   006CB4  C0B0  F0D5         	movff	sprintf@s,sprintf@f
  9645   006CB8  C0B1  F0D6         	movff	sprintf@s+1,sprintf@f+1
  9646   006CBC                     
  9647                           ; BSR set to: 0
  9648   006CBC  0E00               	movlw	0
  9649   006CBE  6FD8               	movwf	(sprintf@f+3)& (0+255),b
  9650   006CC0  0E00               	movlw	0
  9651   006CC2  6FD7               	movwf	(sprintf@f+2)& (0+255),b
  9652   006CC4                     
  9653                           ; BSR set to: 0
  9654   006CC4  0E00               	movlw	0
  9655   006CC6  6FDF               	movwf	(sprintf@f+10)& (0+255),b
  9656   006CC8  0E00               	movlw	0
  9657   006CCA  6FDE               	movwf	(sprintf@f+9)& (0+255),b
  9658   006CCC                     
  9659                           ; BSR set to: 0
  9660   006CCC  0ED5               	movlw	low sprintf@f
  9661   006CCE  6FAA               	movwf	vfprintf@fp& (0+255),b
  9662   006CD0  C0B2  F0AB         	movff	sprintf@fmt,vfprintf@fmt
  9663   006CD4  C0B3  F0AC         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9664   006CD8  0ED4               	movlw	low sprintf@ap
  9665   006CDA  6FAD               	movwf	vfprintf@ap& (0+255),b
  9666   006CDC  EC10  F036         	call	_vfprintf	;wreg free
  9667   006CE0  0100               	movlb	0	; () banked
  9668   006CE2  51D7               	movf	(sprintf@f+2)& (0+255),w,b
  9669   006CE4  25B0               	addwf	sprintf@s& (0+255),w,b
  9670   006CE6  6ED9               	movwf	fsr2l,c
  9671   006CE8  51D8               	movf	(sprintf@f+3)& (0+255),w,b
  9672   006CEA  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  9673   006CEC  6EDA               	movwf	fsr2h,c
  9674   006CEE  6ADF               	clrf	indf2,c
  9675   006CF0                     
  9676                           ; BSR set to: 0
  9677   006CF0  0012               	return		;funcret
  9678   006CF2                     __end_of_sprintf:
  9679                           	callstack 0
  9680                           
  9681 ;; *************** function _vfprintf *****************
  9682 ;; Defined at:
  9683 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;  fp              1   74[BANK0 ] PTR struct _IO_FILE
  9686 ;;		 -> sprintf@f(11), 
  9687 ;;  fmt             2   75[BANK0 ] PTR const unsigned char 
  9688 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9689 ;;		 -> STR_4(15), 
  9690 ;;  ap              1   77[BANK0 ] PTR PTR void 
  9691 ;;		 -> sprintf@ap(1), 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  9694 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9695 ;;		 -> STR_4(15), 
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  2   74[BANK0 ] int 
  9698 ;; Registers used:
  9699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9705 ;;      Params:         0       4       0       0       0       0       0       0       0
  9706 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9708 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9709 ;;Total ram usage:        6 bytes
  9710 ;; Hardware stack levels used: 1
  9711 ;; Hardware stack levels required when called: 7
  9712 ;; This function calls:
  9713 ;;		_vfpfcnvrt
  9714 ;; This function is called by:
  9715 ;;		_sprintf
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719                           	psect	text18
  9720   006C20                     __ptext18:
  9721                           	callstack 0
  9722   006C20                     _vfprintf:
  9723                           	callstack 21
  9724   006C20                     
  9725                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  9726   006C20  C0AB  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  9727   006C24  C0AC  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9728                           
  9729                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9730   006C28  EF20  F036         	goto	l7138
  9731   006C2C                     l7136:
  9732                           
  9733                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9734   006C2C  C0AA  F09C         	movff	vfprintf@fp,vfpfcnvrt@fp
  9735   006C30  0EAE               	movlw	low vfprintf@cfmt
  9736   006C32  0100               	movlb	0	; () banked
  9737   006C34  6F9D               	movwf	vfpfcnvrt@fmt& (0+255),b
  9738   006C36  C0AD  F09E         	movff	vfprintf@ap,vfpfcnvrt@ap
  9739   006C3A  6B9F               	clrf	(vfpfcnvrt@ap+1)& (0+255),b
  9740   006C3C  EC2C  F01B         	call	_vfpfcnvrt	;wreg free
  9741   006C40                     l7138:
  9742                           
  9743                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9744   006C40  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  9745   006C44  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9746   006C48                     	if	0	;tblptru may be non-zero
  9747   006C48                     	endif
  9748   006C48                     	if	0	;tblptru may be non-zero
  9749   006C48                     	endif
  9750   006C48  0008               	tblrd		*
  9751   006C4A  50F5               	movf	tablat,w,c
  9752   006C4C  0900               	iorlw	0
  9753   006C4E  A4D8               	btfss	status,2,c
  9754   006C50  EF2C  F036         	goto	u9251
  9755   006C54  EF2E  F036         	goto	u9250
  9756   006C58                     u9251:
  9757   006C58  EF16  F036         	goto	l7136
  9758   006C5C                     u9250:
  9759   006C5C                     
  9760                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  9761   006C5C  0E00               	movlw	0
  9762   006C5E  0100               	movlb	0	; () banked
  9763   006C60  6FAB               	movwf	(?_vfprintf+1)& (0+255),b
  9764   006C62  0E00               	movlw	0
  9765   006C64  6FAA               	movwf	?_vfprintf& (0+255),b
  9766   006C66                     
  9767                           ; BSR set to: 0
  9768   006C66  0012               	return		;funcret
  9769   006C68                     __end_of_vfprintf:
  9770                           	callstack 0
  9771                           
  9772 ;; *************** function _vfpfcnvrt *****************
  9773 ;; Defined at:
  9774 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  fp              1   60[BANK0 ] PTR struct _IO_FILE
  9777 ;;		 -> sprintf@f(11), 
  9778 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  9779 ;;		 -> vfprintf@cfmt(2), 
  9780 ;;  ap              2   62[BANK0 ] PTR PTR void 
  9781 ;;		 -> sprintf@ap(1), 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  convarg         4   67[BANK0 ] struct .
  9784 ;;  cp              2   72[BANK0 ] PTR unsigned char 
  9785 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9786 ;;		 -> STR_4(15), 
  9787 ;;  c               1   71[BANK0 ] unsigned char 
  9788 ;;  done            1   66[BANK0 ] _Bool 
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  1    wreg      void 
  9791 ;; Registers used:
  9792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9798 ;;      Params:         0       4       0       0       0       0       0       0       0
  9799 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9800 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9801 ;;      Totals:         0      14       0       0       0       0       0       0       0
  9802 ;;Total ram usage:       14 bytes
  9803 ;; Hardware stack levels used: 1
  9804 ;; Hardware stack levels required when called: 6
  9805 ;; This function calls:
  9806 ;;		_dtoa
  9807 ;;		_efgtoa
  9808 ;;		_fputc
  9809 ;;		_read_prec_or_width
  9810 ;;		_stoa
  9811 ;;		_utoa
  9812 ;; This function is called by:
  9813 ;;		_vfprintf
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text19
  9818   003658                     __ptext19:
  9819                           	callstack 0
  9820   003658                     _vfpfcnvrt:
  9821                           	callstack 21
  9822   003658                     
  9823                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  9824   003658  0100               	movlb	0	; () banked
  9825   00365A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9826   00365C  6ED9               	movwf	fsr2l,c
  9827   00365E  6ADA               	clrf	fsr2h,c
  9828   003660  CFDE FFF6          	movff	postinc2,tblptrl
  9829   003664  CFDD FFF7          	movff	postdec2,tblptrh
  9830   003668                     	if	0	;tblptru may be non-zero
  9831   003668                     	endif
  9832   003668                     	if	0	;tblptru may be non-zero
  9833   003668                     	endif
  9834   003668  0008               	tblrd		*
  9835   00366A  50F5               	movf	tablat,w,c
  9836   00366C  0A25               	xorlw	37
  9837   00366E  A4D8               	btfss	status,2,c
  9838   003670  EF3C  F01B         	goto	u9141
  9839   003674  EF3E  F01B         	goto	u9140
  9840   003678                     u9141:
  9841   003678  EFA1  F01D         	goto	l7128
  9842   00367C                     u9140:
  9843   00367C                     
  9844                           ; BSR set to: 0
  9845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  9846   00367C  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9847   00367E  6ED9               	movwf	fsr2l,c
  9848   003680  6ADA               	clrf	fsr2h,c
  9849   003682  2ADE               	incf	postinc2,f,c
  9850   003684  0E00               	movlw	0
  9851   003686  22DD               	addwfc	postdec2,f,c
  9852   003688                     
  9853                           ; BSR set to: 0
  9854                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  9855   003688  0E00               	movlw	0
  9856   00368A  0103               	movlb	3	; () banked
  9857   00368C  6F63               	movwf	(_width+1)& (0+255),b
  9858   00368E  0E00               	movlw	0
  9859   003690  6F62               	movwf	_width& (0+255),b
  9860   003692  C362  F368         	movff	_width,_flags
  9861   003696                     
  9862                           ; BSR set to: 3
  9863                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  9864   003696  0102               	movlb	2	; () banked
  9865   003698  69FE               	setf	_prec& (0+255),b
  9866   00369A  69FF               	setf	(_prec+1)& (0+255),b
  9867   00369C                     
  9868                           ; BSR set to: 2
  9869                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  9870   00369C  0100               	movlb	0	; () banked
  9871   00369E  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9872   0036A0  6ED9               	movwf	fsr2l,c
  9873   0036A2  6ADA               	clrf	fsr2h,c
  9874   0036A4  CFDE FFF6          	movff	postinc2,tblptrl
  9875   0036A8  CFDD FFF7          	movff	postdec2,tblptrh
  9876   0036AC                     	if	0	;tblptru may be non-zero
  9877   0036AC                     	endif
  9878   0036AC                     	if	0	;tblptru may be non-zero
  9879   0036AC                     	endif
  9880   0036AC  0008               	tblrd		*
  9881   0036AE  50F5               	movf	tablat,w,c
  9882   0036B0  0A2E               	xorlw	46
  9883   0036B2  A4D8               	btfss	status,2,c
  9884   0036B4  EF5E  F01B         	goto	u9151
  9885   0036B8  EF60  F01B         	goto	u9150
  9886   0036BC                     u9151:
  9887   0036BC  EF70  F01B         	goto	l7020
  9888   0036C0                     u9150:
  9889   0036C0                     
  9890                           ; BSR set to: 0
  9891                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  9892   0036C0  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9893   0036C2  6ED9               	movwf	fsr2l,c
  9894   0036C4  6ADA               	clrf	fsr2h,c
  9895   0036C6  2ADE               	incf	postinc2,f,c
  9896   0036C8  0E00               	movlw	0
  9897   0036CA  22DD               	addwfc	postdec2,f,c
  9898   0036CC                     
  9899                           ; BSR set to: 0
  9900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  9901   0036CC  C09D  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  9902   0036D0  C09E  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  9903   0036D4  EC9F  F033         	call	_read_prec_or_width	;wreg free
  9904   0036D8  C001  F2FE         	movff	?_read_prec_or_width,_prec
  9905   0036DC  C002  F2FF         	movff	?_read_prec_or_width+1,_prec+1
  9906   0036E0                     l7020:
  9907                           
  9908                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  9909   0036E0  0100               	movlb	0	; () banked
  9910   0036E2  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9911   0036E4  6ED9               	movwf	fsr2l,c
  9912   0036E6  6ADA               	clrf	fsr2h,c
  9913   0036E8  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
  9914   0036EC  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
  9915   0036F0                     
  9916                           ; BSR set to: 0
  9917                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  9918   0036F0  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9919   0036F4  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9920   0036F8                     	if	0	;tblptru may be non-zero
  9921   0036F8                     	endif
  9922   0036F8                     	if	0	;tblptru may be non-zero
  9923   0036F8                     	endif
  9924   0036F8  0008               	tblrd		*
  9925   0036FA  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
  9926                           
  9927                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  9928   0036FE  EF8C  F01B         	goto	l7030
  9929   003702                     l7024:
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  9933   003702  4BA8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  9934   003704  2BA9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  9935                           
  9936                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1316:     break;
  9937   003706  EF9F  F01B         	goto	l7032
  9938   00370A                     l7026:
  9939                           
  9940                           ; BSR set to: 0
  9941                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  9942   00370A  0E69               	movlw	105
  9943   00370C  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
  9944                           
  9945                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1351:     break;
  9946   00370E  EF9F  F01B         	goto	l7032
  9947   003712                     l1101:
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  9951   003712  6BA7               	clrf	vfpfcnvrt@c& (0+255),b
  9952                           
  9953                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1354:     break;
  9954   003714  EF9F  F01B         	goto	l7032
  9955   003718                     l7030:
  9956                           
  9957                           ; BSR set to: 0
  9958   003718  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
  9959                           
  9960                           ; Switch size 1, requested type "simple"
  9961                           ; Number of cases is 4, Range of values is 100 to 117
  9962                           ; switch strategies available:
  9963                           ; Name         Instructions Cycles
  9964                           ; simple_byte           13     7 (average)
  9965                           ;	Chosen strategy is simple_byte
  9966   00371A  0A64               	xorlw	100	; case 100
  9967   00371C  B4D8               	btfsc	status,2,c
  9968   00371E  EF85  F01B         	goto	l7026
  9969   003722  0A0D               	xorlw	13	; case 105
  9970   003724  B4D8               	btfsc	status,2,c
  9971   003726  EF85  F01B         	goto	l7026
  9972   00372A  0A05               	xorlw	5	; case 108
  9973   00372C  B4D8               	btfsc	status,2,c
  9974   00372E  EF81  F01B         	goto	l7024
  9975   003732  0A19               	xorlw	25	; case 117
  9976   003734  B4D8               	btfsc	status,2,c
  9977   003736  EF85  F01B         	goto	l7026
  9978   00373A  EF89  F01B         	goto	l1101
  9979   00373E                     l7032:
  9980                           
  9981                           ; BSR set to: 0
  9982                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  9983   00373E  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9984   003742  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9985   003746                     	if	0	;tblptru may be non-zero
  9986   003746                     	endif
  9987   003746                     	if	0	;tblptru may be non-zero
  9988   003746                     	endif
  9989   003746  0008               	tblrd		*
  9990   003748  50F5               	movf	tablat,w,c
  9991   00374A  0A64               	xorlw	100
  9992   00374C  B4D8               	btfsc	status,2,c
  9993   00374E  EFAB  F01B         	goto	u9161
  9994   003752  EFAD  F01B         	goto	u9160
  9995   003756                     u9161:
  9996   003756  EFE4  F01B         	goto	l7042
  9997   00375A                     u9160:
  9998   00375A                     
  9999                           ; BSR set to: 0
 10000   00375A  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10001   00375E  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10002   003762                     	if	0	;tblptru may be non-zero
 10003   003762                     	endif
 10004   003762                     	if	0	;tblptru may be non-zero
 10005   003762                     	endif
 10006   003762  0008               	tblrd		*
 10007   003764  50F5               	movf	tablat,w,c
 10008   003766  0A69               	xorlw	105
 10009   003768  A4D8               	btfss	status,2,c
 10010   00376A  EFB9  F01B         	goto	u9171
 10011   00376E  EFBB  F01B         	goto	u9170
 10012   003772                     u9171:
 10013   003772  EF0A  F01C         	goto	l7050
 10014   003776                     u9170:
 10015   003776  EFE4  F01B         	goto	l7042
 10016   00377A                     l7036:
 10017                           
 10018                           ; BSR set to: 0
 10019                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 10020   00377A  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10021   00377E  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10022   003782  50DF               	movf	indf2,w,c
 10023   003784  2ADF               	incf	indf2,f,c
 10024   003786  2ADF               	incf	indf2,f,c
 10025   003788  6ED9               	movwf	fsr2l,c
 10026   00378A  6ADA               	clrf	fsr2h,c
 10027   00378C  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10028   003790  CFDD F0A4          	movff	postdec2,vfpfcnvrt@convarg+1
 10029   003794  0E00               	movlw	0
 10030   003796  BFA4               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
 10031   003798  0EFF               	movlw	-1
 10032   00379A  6FA5               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
 10033   00379C  6FA6               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
 10034                           
 10035                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1366:      break;
 10036   00379E  EFEF  F01B         	goto	l7044
 10037   0037A2                     l7038:
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 10041   0037A2  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10042   0037A6  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10043   0037AA  0E04               	movlw	4
 10044   0037AC  26DF               	addwf	indf2,f,c
 10045   0037AE  5CDF               	subwf	indf2,w,c
 10046   0037B0  6ED9               	movwf	fsr2l,c
 10047   0037B2  6ADA               	clrf	fsr2h,c
 10048   0037B4  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10049   0037B8  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10050   0037BC  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10051   0037C0  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10052                           
 10053                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1380:      break;
 10054   0037C4  EFEF  F01B         	goto	l7044
 10055   0037C8                     l7042:
 10056                           
 10057                           ; BSR set to: 0
 10058   0037C8  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10059                           
 10060                           ; Switch size 1, requested type "simple"
 10061                           ; Number of cases is 2, Range of values is 105 to 108
 10062                           ; switch strategies available:
 10063                           ; Name         Instructions Cycles
 10064                           ; simple_byte            7     4 (average)
 10065                           ;	Chosen strategy is simple_byte
 10066   0037CA  0A69               	xorlw	105	; case 105
 10067   0037CC  B4D8               	btfsc	status,2,c
 10068   0037CE  EFBD  F01B         	goto	l7036
 10069   0037D2  0A05               	xorlw	5	; case 108
 10070   0037D4  B4D8               	btfsc	status,2,c
 10071   0037D6  EFD1  F01B         	goto	l7038
 10072   0037DA  EFEF  F01B         	goto	l7044
 10073   0037DE                     l7044:
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10077   0037DE  0E01               	movlw	1
 10078   0037E0  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10079   0037E2  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10080   0037E4  0E00               	movlw	0
 10081   0037E6  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10082   0037E8  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10083   0037EA  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10084   0037EC  6ED9               	movwf	fsr2l,c
 10085   0037EE  6ADA               	clrf	fsr2h,c
 10086   0037F0  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10087   0037F4  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10088   0037F8                     
 10089                           ; BSR set to: 0
 10090                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 10091   0037F8  C09C  F017         	movff	vfpfcnvrt@fp,dtoa@fp
 10092   0037FC  C0A3  F018         	movff	vfpfcnvrt@convarg,dtoa@d
 10093   003800  C0A4  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 10094   003804  C0A5  F01A         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 10095   003808  C0A6  F01B         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 10096   00380C  ECDC  F02B         	call	_dtoa	;wreg free
 10097   003810  EFB2  F01D         	goto	l1109
 10098   003814                     l7050:
 10099                           
 10100                           ; BSR set to: 0
 10101   003814  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10102   003818  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10103   00381C                     	if	0	;tblptru may be non-zero
 10104   00381C                     	endif
 10105   00381C                     	if	0	;tblptru may be non-zero
 10106   00381C                     	endif
 10107   00381C  0008               	tblrd		*
 10108   00381E  50F5               	movf	tablat,w,c
 10109   003820  0A75               	xorlw	117
 10110   003822  A4D8               	btfss	status,2,c
 10111   003824  EF16  F01C         	goto	u9181
 10112   003828  EF18  F01C         	goto	u9180
 10113   00382C                     u9181:
 10114   00382C  EF76  F01C         	goto	l1110
 10115   003830                     u9180:
 10116   003830  EF42  F01C         	goto	l7058
 10117   003834                     l7052:
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 10121   003834  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10122   003838  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10123   00383C  50DF               	movf	indf2,w,c
 10124   00383E  2ADF               	incf	indf2,f,c
 10125   003840  2ADF               	incf	indf2,f,c
 10126   003842  6ED9               	movwf	fsr2l,c
 10127   003844  6ADA               	clrf	fsr2h,c
 10128   003846  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10129   00384A  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10130   00384E  C0A0  F0A3         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
 10131   003852  C0A1  F0A4         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
 10132   003856  6BA5               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 10133   003858  6BA6               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 10134                           
 10135                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1457:      break;
 10136   00385A  EF4D  F01C         	goto	l7060
 10137   00385E                     l7054:
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 10141   00385E  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10142   003862  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10143   003866  0E04               	movlw	4
 10144   003868  26DF               	addwf	indf2,f,c
 10145   00386A  5CDF               	subwf	indf2,w,c
 10146   00386C  6ED9               	movwf	fsr2l,c
 10147   00386E  6ADA               	clrf	fsr2h,c
 10148   003870  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10149   003874  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10150   003878  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10151   00387C  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10152                           
 10153                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1471:      break;
 10154   003880  EF4D  F01C         	goto	l7060
 10155   003884                     l7058:
 10156                           
 10157                           ; BSR set to: 0
 10158   003884  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10159                           
 10160                           ; Switch size 1, requested type "simple"
 10161                           ; Number of cases is 2, Range of values is 105 to 108
 10162                           ; switch strategies available:
 10163                           ; Name         Instructions Cycles
 10164                           ; simple_byte            7     4 (average)
 10165                           ;	Chosen strategy is simple_byte
 10166   003886  0A69               	xorlw	105	; case 105
 10167   003888  B4D8               	btfsc	status,2,c
 10168   00388A  EF1A  F01C         	goto	l7052
 10169   00388E  0A05               	xorlw	5	; case 108
 10170   003890  B4D8               	btfsc	status,2,c
 10171   003892  EF2F  F01C         	goto	l7054
 10172   003896  EF4D  F01C         	goto	l7060
 10173   00389A                     l7060:
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 10177   00389A  0E01               	movlw	1
 10178   00389C  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10179   00389E  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10180   0038A0  0E00               	movlw	0
 10181   0038A2  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10182   0038A4  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10183   0038A6  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10184   0038A8  6ED9               	movwf	fsr2l,c
 10185   0038AA  6ADA               	clrf	fsr2h,c
 10186   0038AC  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10187   0038B0  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10188                           
 10189                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 10190   0038B4  EF6A  F01C         	goto	l7068
 10191   0038B8                     l7062:
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 10195   0038B8  C09C  F017         	movff	vfpfcnvrt@fp,utoa@fp
 10196   0038BC  C0A3  F018         	movff	vfpfcnvrt@convarg,utoa@d
 10197   0038C0  C0A4  F019         	movff	vfpfcnvrt@convarg+1,utoa@d+1
 10198   0038C4  C0A5  F01A         	movff	vfpfcnvrt@convarg+2,utoa@d+2
 10199   0038C8  C0A6  F01B         	movff	vfpfcnvrt@convarg+3,utoa@d+3
 10200   0038CC  ECF6  F02D         	call	_utoa	;wreg free
 10201   0038D0  EFB2  F01D         	goto	l1109
 10202   0038D4                     l7068:
 10203                           
 10204                           ; BSR set to: 0
 10205   0038D4  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10206   0038D8  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10207   0038DC                     	if	0	;tblptru may be non-zero
 10208   0038DC                     	endif
 10209   0038DC                     	if	0	;tblptru may be non-zero
 10210   0038DC                     	endif
 10211   0038DC  0008               	tblrd		*
 10212   0038DE  50F5               	movf	tablat,w,c
 10213                           
 10214                           ; Switch size 1, requested type "simple"
 10215                           ; Number of cases is 1, Range of values is 117 to 117
 10216                           ; switch strategies available:
 10217                           ; Name         Instructions Cycles
 10218                           ; simple_byte            4     3 (average)
 10219                           ;	Chosen strategy is simple_byte
 10220   0038E0  0A75               	xorlw	117	; case 117
 10221   0038E2  B4D8               	btfsc	status,2,c
 10222   0038E4  EF5C  F01C         	goto	l7062
 10223   0038E8  EF76  F01C         	goto	l1110
 10224   0038EC                     l1110:
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 10228   0038EC  6BA2               	clrf	vfpfcnvrt@done& (0+255),b
 10229   0038EE                     
 10230                           ; BSR set to: 0
 10231                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 10232   0038EE  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10233   0038F0  6ED9               	movwf	fsr2l,c
 10234   0038F2  6ADA               	clrf	fsr2h,c
 10235   0038F4  CFDE FFF6          	movff	postinc2,tblptrl
 10236   0038F8  CFDD FFF7          	movff	postdec2,tblptrh
 10237   0038FC                     	if	0	;tblptru may be non-zero
 10238   0038FC                     	endif
 10239   0038FC                     	if	0	;tblptru may be non-zero
 10240   0038FC                     	endif
 10241   0038FC  0008               	tblrd		*
 10242   0038FE  50F5               	movf	tablat,w,c
 10243   003900  0A73               	xorlw	115
 10244   003902  A4D8               	btfss	status,2,c
 10245   003904  EF86  F01C         	goto	u9191
 10246   003908  EF88  F01C         	goto	u9190
 10247   00390C                     u9191:
 10248   00390C  EF92  F01C         	goto	l7076
 10249   003910                     u9190:
 10250   003910                     
 10251                           ; BSR set to: 0
 10252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 10253   003910  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10254   003912  6ED9               	movwf	fsr2l,c
 10255   003914  6ADA               	clrf	fsr2h,c
 10256   003916  2ADE               	incf	postinc2,f,c
 10257   003918  0E00               	movlw	0
 10258   00391A  22DD               	addwfc	postdec2,f,c
 10259   00391C                     l7074:
 10260                           
 10261                           ; BSR set to: 0
 10262                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 10263   00391C  0E01               	movlw	1
 10264   00391E  6FA2               	movwf	vfpfcnvrt@done& (0+255),b
 10265                           
 10266                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1660:   }
 10267   003920  EFDE  F01C         	goto	l7086
 10268   003924                     l7076:
 10269                           
 10270                           ; BSR set to: 0
 10271   003924  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10272   003926  6ED9               	movwf	fsr2l,c
 10273   003928  6ADA               	clrf	fsr2h,c
 10274   00392A  CFDE FFF6          	movff	postinc2,tblptrl
 10275   00392E  CFDD FFF7          	movff	postdec2,tblptrh
 10276   003932                     	if	0	;tblptru may be non-zero
 10277   003932                     	endif
 10278   003932                     	if	0	;tblptru may be non-zero
 10279   003932                     	endif
 10280   003932  0008               	tblrd		*
 10281   003934  50F5               	movf	tablat,w,c
 10282   003936  0A6C               	xorlw	108
 10283   003938  A4D8               	btfss	status,2,c
 10284   00393A  EFA1  F01C         	goto	u9201
 10285   00393E  EFA3  F01C         	goto	u9200
 10286   003942                     u9201:
 10287   003942  EFDE  F01C         	goto	l7086
 10288   003946                     u9200:
 10289   003946                     
 10290                           ; BSR set to: 0
 10291   003946  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10292   003948  6ED9               	movwf	fsr2l,c
 10293   00394A  6ADA               	clrf	fsr2h,c
 10294   00394C  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10295   003950  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10296   003954  0E01               	movlw	1
 10297   003956  27A0               	addwf	??_vfpfcnvrt& (0+255),f,b
 10298   003958  0E00               	movlw	0
 10299   00395A  23A1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10300   00395C  C0A0  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10301   003960  C0A1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10302   003964                     	if	0	;tblptru may be non-zero
 10303   003964                     	endif
 10304   003964                     	if	0	;tblptru may be non-zero
 10305   003964                     	endif
 10306   003964  0008               	tblrd		*
 10307   003966  50F5               	movf	tablat,w,c
 10308   003968  0A6C               	xorlw	108
 10309   00396A  A4D8               	btfss	status,2,c
 10310   00396C  EFBA  F01C         	goto	u9211
 10311   003970  EFBC  F01C         	goto	u9210
 10312   003974                     u9211:
 10313   003974  EFDE  F01C         	goto	l7086
 10314   003978                     u9210:
 10315   003978                     
 10316                           ; BSR set to: 0
 10317   003978  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10318   00397A  6ED9               	movwf	fsr2l,c
 10319   00397C  6ADA               	clrf	fsr2h,c
 10320   00397E  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10321   003982  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10322   003986  0E02               	movlw	2
 10323   003988  27A0               	addwf	??_vfpfcnvrt& (0+255),f,b
 10324   00398A  0E00               	movlw	0
 10325   00398C  23A1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10326   00398E  C0A0  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10327   003992  C0A1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10328   003996                     	if	0	;tblptru may be non-zero
 10329   003996                     	endif
 10330   003996                     	if	0	;tblptru may be non-zero
 10331   003996                     	endif
 10332   003996  0008               	tblrd		*
 10333   003998  50F5               	movf	tablat,w,c
 10334   00399A  0A73               	xorlw	115
 10335   00399C  A4D8               	btfss	status,2,c
 10336   00399E  EFD3  F01C         	goto	u9221
 10337   0039A2  EFD5  F01C         	goto	u9220
 10338   0039A6                     u9221:
 10339   0039A6  EFDE  F01C         	goto	l7086
 10340   0039AA                     u9220:
 10341   0039AA                     
 10342                           ; BSR set to: 0
 10343                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 10344   0039AA  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10345   0039AC  6ED9               	movwf	fsr2l,c
 10346   0039AE  6ADA               	clrf	fsr2h,c
 10347   0039B0  0E03               	movlw	3
 10348   0039B2  26DE               	addwf	postinc2,f,c
 10349   0039B4  0E00               	movlw	0
 10350   0039B6  22DD               	addwfc	postdec2,f,c
 10351   0039B8  EF8E  F01C         	goto	l7074
 10352   0039BC                     l7086:
 10353                           
 10354                           ; BSR set to: 0
 10355                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 10356   0039BC  51A2               	movf	vfpfcnvrt@done& (0+255),w,b
 10357   0039BE  B4D8               	btfsc	status,2,c
 10358   0039C0  EFE4  F01C         	goto	u9231
 10359   0039C4  EFE6  F01C         	goto	u9230
 10360   0039C8                     u9231:
 10361   0039C8  EFF9  F01C         	goto	l7092
 10362   0039CC                     u9230:
 10363   0039CC                     
 10364                           ; BSR set to: 0
 10365                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 10366   0039CC  C09C  F009         	movff	vfpfcnvrt@fp,stoa@fp
 10367   0039D0  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10368   0039D4  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10369   0039D8  0E02               	movlw	2
 10370   0039DA  26DF               	addwf	indf2,f,c
 10371   0039DC  5CDF               	subwf	indf2,w,c
 10372   0039DE  6ED9               	movwf	fsr2l,c
 10373   0039E0  6ADA               	clrf	fsr2h,c
 10374   0039E2  CFDE F00A          	movff	postinc2,stoa@s
 10375   0039E6  CFDE F00B          	movff	postinc2,stoa@s+1
 10376   0039EA  EC8F  F030         	call	_stoa	;wreg free
 10377   0039EE  EFB2  F01D         	goto	l1109
 10378   0039F2                     l7092:
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 10382   0039F2  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10383   0039F4  6ED9               	movwf	fsr2l,c
 10384   0039F6  6ADA               	clrf	fsr2h,c
 10385   0039F8  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
 10386   0039FC  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
 10387   003A00                     
 10388                           ; BSR set to: 0
 10389                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 10390   003A00  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10391   003A04  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10392   003A08                     	if	0	;tblptru may be non-zero
 10393   003A08                     	endif
 10394   003A08                     	if	0	;tblptru may be non-zero
 10395   003A08                     	endif
 10396   003A08  0008               	tblrd		*
 10397   003A0A  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
 10398                           
 10399                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 10400   003A0E  EF14  F01D         	goto	l7102
 10401   003A12                     l7096:
 10402                           
 10403                           ; BSR set to: 0
 10404                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 10405   003A12  4BA8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 10406   003A14  2BA9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 10407                           
 10408                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
 10409   003A16  EF23  F01D         	goto	l7104
 10410   003A1A                     l7098:
 10411                           
 10412                           ; BSR set to: 0
 10413                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 10414   003A1A  0E6C               	movlw	108
 10415   003A1C  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
 10416                           
 10417                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
 10418   003A1E  EF23  F01D         	goto	l7104
 10419   003A22                     l1129:
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 10423   003A22  6BA7               	clrf	vfpfcnvrt@c& (0+255),b
 10424                           
 10425                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
 10426   003A24  EF23  F01D         	goto	l7104
 10427   003A28                     l7102:
 10428                           
 10429                           ; BSR set to: 0
 10430   003A28  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10431                           
 10432                           ; Switch size 1, requested type "simple"
 10433                           ; Number of cases is 3, Range of values is 76 to 108
 10434                           ; switch strategies available:
 10435                           ; Name         Instructions Cycles
 10436                           ; simple_byte           10     6 (average)
 10437                           ;	Chosen strategy is simple_byte
 10438   003A2A  0A4C               	xorlw	76	; case 76
 10439   003A2C  B4D8               	btfsc	status,2,c
 10440   003A2E  EF09  F01D         	goto	l7096
 10441   003A32  0A2A               	xorlw	42	; case 102
 10442   003A34  B4D8               	btfsc	status,2,c
 10443   003A36  EF0D  F01D         	goto	l7098
 10444   003A3A  0A0A               	xorlw	10	; case 108
 10445   003A3C  B4D8               	btfsc	status,2,c
 10446   003A3E  EF09  F01D         	goto	l7096
 10447   003A42  EF11  F01D         	goto	l1129
 10448   003A46                     l7104:
 10449                           
 10450                           ; BSR set to: 0
 10451   003A46  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10452   003A4A  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10453   003A4E                     	if	0	;tblptru may be non-zero
 10454   003A4E                     	endif
 10455   003A4E                     	if	0	;tblptru may be non-zero
 10456   003A4E                     	endif
 10457   003A4E  0008               	tblrd		*
 10458   003A50  50F5               	movf	tablat,w,c
 10459   003A52  0A66               	xorlw	102
 10460   003A54  A4D8               	btfss	status,2,c
 10461   003A56  EF2F  F01D         	goto	u9241
 10462   003A5A  EF31  F01D         	goto	u9240
 10463   003A5E                     u9241:
 10464   003A5E  EF98  F01D         	goto	l7124
 10465   003A62                     u9240:
 10466   003A62  EF5D  F01D         	goto	l7112
 10467   003A66                     l7106:
 10468                           
 10469                           ; BSR set to: 0
 10470                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10471   003A66  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10472   003A6A  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10473   003A6E  CFDF F0A0          	movff	indf2,??_vfpfcnvrt
 10474   003A72  0E04               	movlw	4
 10475   003A74  26DF               	addwf	indf2,f,c
 10476   003A76  51A0               	movf	??_vfpfcnvrt& (0+255),w,b
 10477   003A78  6ED9               	movwf	fsr2l,c
 10478   003A7A  6ADA               	clrf	fsr2h,c
 10479   003A7C  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10480   003A80  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10481   003A84  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10482   003A88  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10483                           
 10484                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
 10485   003A8C  EF68  F01D         	goto	l7114
 10486   003A90                     l7108:
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 10490   003A90  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10491   003A94  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10492   003A98  CFDF F0A0          	movff	indf2,??_vfpfcnvrt
 10493   003A9C  0E04               	movlw	4
 10494   003A9E  26DF               	addwf	indf2,f,c
 10495   003AA0  51A0               	movf	??_vfpfcnvrt& (0+255),w,b
 10496   003AA2  6ED9               	movwf	fsr2l,c
 10497   003AA4  6ADA               	clrf	fsr2h,c
 10498   003AA6  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10499   003AAA  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10500   003AAE  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10501   003AB2  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10502                           
 10503                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
 10504   003AB6  EF68  F01D         	goto	l7114
 10505   003ABA                     l7112:
 10506                           
 10507                           ; BSR set to: 0
 10508   003ABA  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10509                           
 10510                           ; Switch size 1, requested type "simple"
 10511                           ; Number of cases is 2, Range of values is 76 to 108
 10512                           ; switch strategies available:
 10513                           ; Name         Instructions Cycles
 10514                           ; simple_byte            7     4 (average)
 10515                           ;	Chosen strategy is simple_byte
 10516   003ABC  0A4C               	xorlw	76	; case 76
 10517   003ABE  B4D8               	btfsc	status,2,c
 10518   003AC0  EF48  F01D         	goto	l7108
 10519   003AC4  0A20               	xorlw	32	; case 108
 10520   003AC6  B4D8               	btfsc	status,2,c
 10521   003AC8  EF33  F01D         	goto	l7106
 10522   003ACC  EF68  F01D         	goto	l7114
 10523   003AD0                     l7114:
 10524                           
 10525                           ; BSR set to: 0
 10526                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 10527   003AD0  0E01               	movlw	1
 10528   003AD2  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10529   003AD4  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10530   003AD6  0E00               	movlw	0
 10531   003AD8  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10532   003ADA  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10533   003ADC  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10534   003ADE  6ED9               	movwf	fsr2l,c
 10535   003AE0  6ADA               	clrf	fsr2h,c
 10536   003AE2  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10537   003AE6  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10538                           
 10539                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 10540   003AEA  EF8C  F01D         	goto	l7122
 10541   003AEE                     l7116:
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 10545   003AEE  C09C  F068         	movff	vfpfcnvrt@fp,efgtoa@fp
 10546   003AF2  C0A3  F069         	movff	vfpfcnvrt@convarg,efgtoa@f
 10547   003AF6  C0A4  F06A         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 10548   003AFA  C0A5  F06B         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 10549   003AFE  C0A6  F06C         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 10550   003B02  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10551   003B06  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10552   003B0A                     	if	0	;tblptru may be non-zero
 10553   003B0A                     	endif
 10554   003B0A                     	if	0	;tblptru may be non-zero
 10555   003B0A                     	endif
 10556   003B0A  0008               	tblrd		*
 10557   003B0C  CFF5 F06D          	movff	tablat,efgtoa@c
 10558   003B10  EC64  F012         	call	_efgtoa	;wreg free
 10559   003B14  EFB2  F01D         	goto	l1109
 10560   003B18                     l7122:
 10561                           
 10562                           ; BSR set to: 0
 10563   003B18  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10564   003B1C  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10565   003B20                     	if	0	;tblptru may be non-zero
 10566   003B20                     	endif
 10567   003B20                     	if	0	;tblptru may be non-zero
 10568   003B20                     	endif
 10569   003B20  0008               	tblrd		*
 10570   003B22  50F5               	movf	tablat,w,c
 10571                           
 10572                           ; Switch size 1, requested type "simple"
 10573                           ; Number of cases is 1, Range of values is 102 to 102
 10574                           ; switch strategies available:
 10575                           ; Name         Instructions Cycles
 10576                           ; simple_byte            4     3 (average)
 10577                           ;	Chosen strategy is simple_byte
 10578   003B24  0A66               	xorlw	102	; case 102
 10579   003B26  B4D8               	btfsc	status,2,c
 10580   003B28  EF77  F01D         	goto	l7116
 10581   003B2C  EF98  F01D         	goto	l7124
 10582   003B30                     l7124:
 10583                           
 10584                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 10585   003B30  0100               	movlb	0	; () banked
 10586   003B32  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10587   003B34  6ED9               	movwf	fsr2l,c
 10588   003B36  6ADA               	clrf	fsr2h,c
 10589   003B38  2ADE               	incf	postinc2,f,c
 10590   003B3A  0E00               	movlw	0
 10591   003B3C  22DD               	addwfc	postdec2,f,c
 10592   003B3E  EFB2  F01D         	goto	l1109
 10593   003B42                     l7128:
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 10597   003B42  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10598   003B44  6ED9               	movwf	fsr2l,c
 10599   003B46  6ADA               	clrf	fsr2h,c
 10600   003B48  CFDE FFF6          	movff	postinc2,tblptrl
 10601   003B4C  CFDD FFF7          	movff	postdec2,tblptrh
 10602   003B50                     	if	0	;tblptru may be non-zero
 10603   003B50                     	endif
 10604   003B50                     	if	0	;tblptru may be non-zero
 10605   003B50                     	endif
 10606   003B50  0008               	tblrd		*
 10607   003B52  50F5               	movf	tablat,w,c
 10608   003B54  6E01               	movwf	fputc@c^0,c
 10609   003B56  6A02               	clrf	(fputc@c+1)^0,c
 10610   003B58  C09C  F003         	movff	vfpfcnvrt@fp,fputc@fp
 10611   003B5C  ECEB  F032         	call	_fputc	;wreg free
 10612   003B60  EF98  F01D         	goto	l7124
 10613   003B64                     l1109:
 10614   003B64  0012               	return		;funcret
 10615   003B66                     __end_of_vfpfcnvrt:
 10616                           	callstack 0
 10617                           
 10618 ;; *************** function _utoa *****************
 10619 ;; Defined at:
 10620 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10621 ;; Parameters:    Size  Location     Type
 10622 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 10623 ;;		 -> sprintf@f(11), 
 10624 ;;  d               4   23[COMRAM] unsigned long 
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;  i               2   31[COMRAM] int 
 10627 ;;  p               2   29[COMRAM] int 
 10628 ;;  w               2   27[COMRAM] int 
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  1    wreg      void 
 10631 ;; Registers used:
 10632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10633 ;; Tracked objects:
 10634 ;;		On entry : 0/0
 10635 ;;		On exit  : 0/0
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10638 ;;      Params:         5       0       0       0       0       0       0       0       0
 10639 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10640 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10641 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10642 ;;Total ram usage:       11 bytes
 10643 ;; Hardware stack levels used: 1
 10644 ;; Hardware stack levels required when called: 5
 10645 ;; This function calls:
 10646 ;;		___lldiv
 10647 ;;		___llmod
 10648 ;;		_pad
 10649 ;; This function is called by:
 10650 ;;		_vfpfcnvrt
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           	psect	text20
 10655   005BEC                     __ptext20:
 10656                           	callstack 0
 10657   005BEC                     _utoa:
 10658                           	callstack 21
 10659   005BEC                     
 10660                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
 10661   005BEC  0102               	movlb	2	; () banked
 10662   005BEE  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 10663   005BF0  EFFE  F02D         	goto	u9080
 10664   005BF4  EFFC  F02D         	goto	u9081
 10665   005BF8                     u9081:
 10666   005BF8  EF04  F02E         	goto	l1074
 10667   005BFC                     u9080:
 10668   005BFC                     
 10669                           ; BSR set to: 2
 10670   005BFC  0E00               	movlw	0
 10671   005BFE  6E1F               	movwf	(utoa@p+1)^0,c
 10672   005C00  0E01               	movlw	1
 10673   005C02  6E1E               	movwf	utoa@p^0,c
 10674   005C04  EF08  F02E         	goto	l1076
 10675   005C08                     l1074:
 10676                           
 10677                           ; BSR set to: 2
 10678   005C08  C2FE  F01E         	movff	_prec,utoa@p
 10679   005C0C  C2FF  F01F         	movff	_prec+1,utoa@p+1
 10680   005C10                     l1076:
 10681                           
 10682                           ; BSR set to: 2
 10683                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 10684   005C10  C362  F01C         	movff	_width,utoa@w
 10685   005C14  C363  F01D         	movff	_width+1,utoa@w+1
 10686   005C18                     
 10687                           ; BSR set to: 2
 10688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 10689   005C18  0E00               	movlw	0
 10690   005C1A  6E21               	movwf	(utoa@i+1)^0,c
 10691   005C1C  0E4F               	movlw	79
 10692   005C1E  6E20               	movwf	utoa@i^0,c
 10693   005C20                     
 10694                           ; BSR set to: 2
 10695                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 10696   005C20  0103               	movlb	3	; () banked
 10697   005C22  6BC1               	clrf	(_dbuf+79)& (0+255),b
 10698                           
 10699                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10700   005C24  EF52  F02E         	goto	l6982
 10701   005C28                     l6972:
 10702                           
 10703                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 10704   005C28  0620               	decf	utoa@i^0,f,c
 10705   005C2A  A0D8               	btfss	status,0,c
 10706   005C2C  0621               	decf	(utoa@i+1)^0,f,c
 10707   005C2E                     
 10708                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 10709   005C2E  0E72               	movlw	low _dbuf
 10710   005C30  2420               	addwf	utoa@i^0,w,c
 10711   005C32  6ED9               	movwf	fsr2l,c
 10712   005C34  0E03               	movlw	high _dbuf
 10713   005C36  2021               	addwfc	(utoa@i+1)^0,w,c
 10714   005C38  6EDA               	movwf	fsr2h,c
 10715   005C3A  C018  F001         	movff	utoa@d,___llmod@dividend
 10716   005C3E  C019  F002         	movff	utoa@d+1,___llmod@dividend+1
 10717   005C42  C01A  F003         	movff	utoa@d+2,___llmod@dividend+2
 10718   005C46  C01B  F004         	movff	utoa@d+3,___llmod@dividend+3
 10719   005C4A  0E0A               	movlw	10
 10720   005C4C  6E05               	movwf	___llmod@divisor^0,c
 10721   005C4E  0E00               	movlw	0
 10722   005C50  6E06               	movwf	(___llmod@divisor+1)^0,c
 10723   005C52  0E00               	movlw	0
 10724   005C54  6E07               	movwf	(___llmod@divisor+2)^0,c
 10725   005C56  0E00               	movlw	0
 10726   005C58  6E08               	movwf	(___llmod@divisor+3)^0,c
 10727   005C5A  ECE6  F034         	call	___llmod	;wreg free
 10728   005C5E  5001               	movf	?___llmod^0,w,c
 10729   005C60  0F30               	addlw	48
 10730   005C62  6EDF               	movwf	indf2,c
 10731   005C64                     
 10732                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
 10733   005C64  061E               	decf	utoa@p^0,f,c
 10734   005C66  A0D8               	btfss	status,0,c
 10735   005C68  061F               	decf	(utoa@p+1)^0,f,c
 10736   005C6A                     
 10737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 10738   005C6A  061C               	decf	utoa@w^0,f,c
 10739   005C6C  A0D8               	btfss	status,0,c
 10740   005C6E  061D               	decf	(utoa@w+1)^0,f,c
 10741   005C70                     
 10742                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 10743   005C70  C018  F001         	movff	utoa@d,___lldiv@dividend
 10744   005C74  C019  F002         	movff	utoa@d+1,___lldiv@dividend+1
 10745   005C78  C01A  F003         	movff	utoa@d+2,___lldiv@dividend+2
 10746   005C7C  C01B  F004         	movff	utoa@d+3,___lldiv@dividend+3
 10747   005C80  0E0A               	movlw	10
 10748   005C82  6E05               	movwf	___lldiv@divisor^0,c
 10749   005C84  0E00               	movlw	0
 10750   005C86  6E06               	movwf	(___lldiv@divisor+1)^0,c
 10751   005C88  0E00               	movlw	0
 10752   005C8A  6E07               	movwf	(___lldiv@divisor+2)^0,c
 10753   005C8C  0E00               	movlw	0
 10754   005C8E  6E08               	movwf	(___lldiv@divisor+3)^0,c
 10755   005C90  EC4A  F034         	call	___lldiv	;wreg free
 10756   005C94  C001  F018         	movff	?___lldiv,utoa@d
 10757   005C98  C002  F019         	movff	?___lldiv+1,utoa@d+1
 10758   005C9C  C003  F01A         	movff	?___lldiv+2,utoa@d+2
 10759   005CA0  C004  F01B         	movff	?___lldiv+3,utoa@d+3
 10760   005CA4                     l6982:
 10761                           
 10762                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10763   005CA4  5020               	movf	utoa@i^0,w,c
 10764   005CA6  1021               	iorwf	(utoa@i+1)^0,w,c
 10765   005CA8  B4D8               	btfsc	status,2,c
 10766   005CAA  EF59  F02E         	goto	u9091
 10767   005CAE  EF5B  F02E         	goto	u9090
 10768   005CB2                     u9091:
 10769   005CB2  EF73  F02E         	goto	l6988
 10770   005CB6                     u9090:
 10771   005CB6  5018               	movf	utoa@d^0,w,c
 10772   005CB8  1019               	iorwf	(utoa@d+1)^0,w,c
 10773   005CBA  101A               	iorwf	(utoa@d+2)^0,w,c
 10774   005CBC  101B               	iorwf	(utoa@d+3)^0,w,c
 10775   005CBE  A4D8               	btfss	status,2,c
 10776   005CC0  EF64  F02E         	goto	u9101
 10777   005CC4  EF66  F02E         	goto	u9100
 10778   005CC8                     u9101:
 10779   005CC8  EF14  F02E         	goto	l6972
 10780   005CCC                     u9100:
 10781   005CCC  BE1F               	btfsc	(utoa@p+1)^0,7,c
 10782   005CCE  EF73  F02E         	goto	u9110
 10783   005CD2  501F               	movf	(utoa@p+1)^0,w,c
 10784   005CD4  E106               	bnz	u9111
 10785   005CD6  041E               	decf	utoa@p^0,w,c
 10786   005CD8  B0D8               	btfsc	status,0,c
 10787   005CDA  EF71  F02E         	goto	u9111
 10788   005CDE  EF73  F02E         	goto	u9110
 10789   005CE2                     u9111:
 10790   005CE2  EF14  F02E         	goto	l6972
 10791   005CE6                     u9110:
 10792   005CE6                     l6988:
 10793                           
 10794                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 10795   005CE6  C017  F00F         	movff	utoa@fp,pad@fp
 10796   005CEA  0E72               	movlw	low _dbuf
 10797   005CEC  2420               	addwf	utoa@i^0,w,c
 10798   005CEE  6E10               	movwf	pad@buf^0,c
 10799   005CF0  0E03               	movlw	high _dbuf
 10800   005CF2  2021               	addwfc	(utoa@i+1)^0,w,c
 10801   005CF4  6E11               	movwf	(pad@buf+1)^0,c
 10802   005CF6  C01C  F012         	movff	utoa@w,pad@p
 10803   005CFA  C01D  F013         	movff	utoa@w+1,pad@p+1
 10804   005CFE  EC65  F035         	call	_pad	;wreg free
 10805   005D02  0012               	return		;funcret
 10806   005D04                     __end_of_utoa:
 10807                           	callstack 0
 10808                           
 10809 ;; *************** function ___llmod *****************
 10810 ;; Defined at:
 10811 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\llmod.c"
 10812 ;; Parameters:    Size  Location     Type
 10813 ;;  dividend        4    0[COMRAM] unsigned long 
 10814 ;;  divisor         4    4[COMRAM] unsigned long 
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;  counter         1    8[COMRAM] unsigned char 
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  4    0[COMRAM] unsigned long 
 10819 ;; Registers used:
 10820 ;;		wreg, status,2, status,0
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10826 ;;      Params:         8       0       0       0       0       0       0       0       0
 10827 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10828 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10829 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10830 ;;Total ram usage:        9 bytes
 10831 ;; Hardware stack levels used: 1
 10832 ;; Hardware stack levels required when called: 1
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_utoa
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           	psect	text21
 10841   0069CC                     __ptext21:
 10842                           	callstack 0
 10843   0069CC                     ___llmod:
 10844                           	callstack 24
 10845   0069CC  5005               	movf	___llmod@divisor^0,w,c
 10846   0069CE  1006               	iorwf	(___llmod@divisor+1)^0,w,c
 10847   0069D0  1007               	iorwf	(___llmod@divisor+2)^0,w,c
 10848   0069D2  1008               	iorwf	(___llmod@divisor+3)^0,w,c
 10849   0069D4  B4D8               	btfsc	status,2,c
 10850   0069D6  EFEF  F034         	goto	u8351
 10851   0069DA  EFF1  F034         	goto	u8350
 10852   0069DE                     u8351:
 10853   0069DE  EF21  F035         	goto	l697
 10854   0069E2                     u8350:
 10855   0069E2  0E01               	movlw	1
 10856   0069E4  6E09               	movwf	___llmod@counter^0,c
 10857   0069E6  EFFB  F034         	goto	l6582
 10858   0069EA                     l6580:
 10859   0069EA  90D8               	bcf	status,0,c
 10860   0069EC  3605               	rlcf	___llmod@divisor^0,f,c
 10861   0069EE  3606               	rlcf	(___llmod@divisor+1)^0,f,c
 10862   0069F0  3607               	rlcf	(___llmod@divisor+2)^0,f,c
 10863   0069F2  3608               	rlcf	(___llmod@divisor+3)^0,f,c
 10864   0069F4  2A09               	incf	___llmod@counter^0,f,c
 10865   0069F6                     l6582:
 10866   0069F6  AE08               	btfss	(___llmod@divisor+3)^0,7,c
 10867   0069F8  EF00  F035         	goto	u8361
 10868   0069FC  EF02  F035         	goto	u8360
 10869   006A00                     u8361:
 10870   006A00  EFF5  F034         	goto	l6580
 10871   006A04                     u8360:
 10872   006A04                     l6584:
 10873   006A04  5005               	movf	___llmod@divisor^0,w,c
 10874   006A06  5C01               	subwf	___llmod@dividend^0,w,c
 10875   006A08  5006               	movf	(___llmod@divisor+1)^0,w,c
 10876   006A0A  5802               	subwfb	(___llmod@dividend+1)^0,w,c
 10877   006A0C  5007               	movf	(___llmod@divisor+2)^0,w,c
 10878   006A0E  5803               	subwfb	(___llmod@dividend+2)^0,w,c
 10879   006A10  5008               	movf	(___llmod@divisor+3)^0,w,c
 10880   006A12  5804               	subwfb	(___llmod@dividend+3)^0,w,c
 10881   006A14  A0D8               	btfss	status,0,c
 10882   006A16  EF0F  F035         	goto	u8371
 10883   006A1A  EF11  F035         	goto	u8370
 10884   006A1E                     u8371:
 10885   006A1E  EF19  F035         	goto	l6588
 10886   006A22                     u8370:
 10887   006A22  5005               	movf	___llmod@divisor^0,w,c
 10888   006A24  5E01               	subwf	___llmod@dividend^0,f,c
 10889   006A26  5006               	movf	(___llmod@divisor+1)^0,w,c
 10890   006A28  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
 10891   006A2A  5007               	movf	(___llmod@divisor+2)^0,w,c
 10892   006A2C  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
 10893   006A2E  5008               	movf	(___llmod@divisor+3)^0,w,c
 10894   006A30  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
 10895   006A32                     l6588:
 10896   006A32  90D8               	bcf	status,0,c
 10897   006A34  3208               	rrcf	(___llmod@divisor+3)^0,f,c
 10898   006A36  3207               	rrcf	(___llmod@divisor+2)^0,f,c
 10899   006A38  3206               	rrcf	(___llmod@divisor+1)^0,f,c
 10900   006A3A  3205               	rrcf	___llmod@divisor^0,f,c
 10901   006A3C  2E09               	decfsz	___llmod@counter^0,f,c
 10902   006A3E  EF02  F035         	goto	l6584
 10903   006A42                     l697:
 10904   006A42  C001  F001         	movff	___llmod@dividend,?___llmod
 10905   006A46  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 10906   006A4A  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 10907   006A4E  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 10908   006A52  0012               	return		;funcret
 10909   006A54                     __end_of___llmod:
 10910                           	callstack 0
 10911                           
 10912 ;; *************** function ___lldiv *****************
 10913 ;; Defined at:
 10914 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;  dividend        4    0[COMRAM] unsigned long 
 10917 ;;  divisor         4    4[COMRAM] unsigned long 
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;  quotient        4    8[COMRAM] unsigned long 
 10920 ;;  counter         1   12[COMRAM] unsigned char 
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  4    0[COMRAM] unsigned long 
 10923 ;; Registers used:
 10924 ;;		wreg, status,2, status,0
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/0
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10930 ;;      Params:         8       0       0       0       0       0       0       0       0
 10931 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10932 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10933 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10934 ;;Total ram usage:       13 bytes
 10935 ;; Hardware stack levels used: 1
 10936 ;; Hardware stack levels required when called: 1
 10937 ;; This function calls:
 10938 ;;		Nothing
 10939 ;; This function is called by:
 10940 ;;		_Handle_Fire_Events
 10941 ;;		_utoa
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           	psect	text22
 10946   006894                     __ptext22:
 10947                           	callstack 0
 10948   006894                     ___lldiv:
 10949                           	callstack 24
 10950   006894  0E00               	movlw	0
 10951   006896  6E09               	movwf	___lldiv@quotient^0,c
 10952   006898  0E00               	movlw	0
 10953   00689A  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 10954   00689C  0E00               	movlw	0
 10955   00689E  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 10956   0068A0  0E00               	movlw	0
 10957   0068A2  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 10958   0068A4  5005               	movf	___lldiv@divisor^0,w,c
 10959   0068A6  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 10960   0068A8  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 10961   0068AA  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 10962   0068AC  B4D8               	btfsc	status,2,c
 10963   0068AE  EF5B  F034         	goto	u7621
 10964   0068B2  EF5D  F034         	goto	u7620
 10965   0068B6                     u7621:
 10966   0068B6  EF93  F034         	goto	l304
 10967   0068BA                     u7620:
 10968   0068BA  0E01               	movlw	1
 10969   0068BC  6E0D               	movwf	___lldiv@counter^0,c
 10970   0068BE  EF67  F034         	goto	l6122
 10971   0068C2                     l6120:
 10972   0068C2  90D8               	bcf	status,0,c
 10973   0068C4  3605               	rlcf	___lldiv@divisor^0,f,c
 10974   0068C6  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 10975   0068C8  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 10976   0068CA  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 10977   0068CC  2A0D               	incf	___lldiv@counter^0,f,c
 10978   0068CE                     l6122:
 10979   0068CE  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 10980   0068D0  EF6C  F034         	goto	u7631
 10981   0068D4  EF6E  F034         	goto	u7630
 10982   0068D8                     u7631:
 10983   0068D8  EF61  F034         	goto	l6120
 10984   0068DC                     u7630:
 10985   0068DC                     l6124:
 10986   0068DC  90D8               	bcf	status,0,c
 10987   0068DE  3609               	rlcf	___lldiv@quotient^0,f,c
 10988   0068E0  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 10989   0068E2  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 10990   0068E4  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 10991   0068E6  5005               	movf	___lldiv@divisor^0,w,c
 10992   0068E8  5C01               	subwf	___lldiv@dividend^0,w,c
 10993   0068EA  5006               	movf	(___lldiv@divisor+1)^0,w,c
 10994   0068EC  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 10995   0068EE  5007               	movf	(___lldiv@divisor+2)^0,w,c
 10996   0068F0  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 10997   0068F2  5008               	movf	(___lldiv@divisor+3)^0,w,c
 10998   0068F4  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 10999   0068F6  A0D8               	btfss	status,0,c
 11000   0068F8  EF80  F034         	goto	u7641
 11001   0068FC  EF82  F034         	goto	u7640
 11002   006900                     u7641:
 11003   006900  EF8B  F034         	goto	l6132
 11004   006904                     u7640:
 11005   006904  5005               	movf	___lldiv@divisor^0,w,c
 11006   006906  5E01               	subwf	___lldiv@dividend^0,f,c
 11007   006908  5006               	movf	(___lldiv@divisor+1)^0,w,c
 11008   00690A  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 11009   00690C  5007               	movf	(___lldiv@divisor+2)^0,w,c
 11010   00690E  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 11011   006910  5008               	movf	(___lldiv@divisor+3)^0,w,c
 11012   006912  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 11013   006914  8009               	bsf	___lldiv@quotient^0,0,c
 11014   006916                     l6132:
 11015   006916  90D8               	bcf	status,0,c
 11016   006918  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 11017   00691A  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 11018   00691C  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 11019   00691E  3205               	rrcf	___lldiv@divisor^0,f,c
 11020   006920  2E0D               	decfsz	___lldiv@counter^0,f,c
 11021   006922  EF6E  F034         	goto	l6124
 11022   006926                     l304:
 11023   006926  C009  F001         	movff	___lldiv@quotient,?___lldiv
 11024   00692A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 11025   00692E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 11026   006932  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 11027   006936  0012               	return		;funcret
 11028   006938                     __end_of___lldiv:
 11029                           	callstack 0
 11030                           
 11031 ;; *************** function _stoa *****************
 11032 ;; Defined at:
 11033 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
 11036 ;;		 -> sprintf@f(11), 
 11037 ;;  s               2    9[COMRAM] PTR unsigned char 
 11038 ;;		 -> ?_sprintf(2), sp__powf(4), STR_15(1), STR_14(7), 
 11039 ;;		 -> STR_13(1), STR_12(9), STR_11(9), Handle_Test_Events@test_data(50), 
 11040 ;;		 -> STR_9(1), STR_8(11), STR_7(9), Handle_Fire_Events@end_data(150), 
 11041 ;;		 -> STR_5(11), Handle_Fire_Events@start_data(100), fire_trigger_sensor(20), 
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;  l               2   17[COMRAM] int 
 11044 ;;  cp              2   15[COMRAM] PTR unsigned char 
 11045 ;;		 -> STR_24(7), ?_sprintf(2), sp__powf(4), STR_15(1), 
 11046 ;;		 -> STR_14(7), STR_13(1), STR_12(9), STR_11(9), 
 11047 ;;		 -> Handle_Test_Events@test_data(50), STR_9(1), STR_8(11), STR_7(9), 
 11048 ;;		 -> Handle_Fire_Events@end_data(150), STR_5(11), Handle_Fire_Events@start_data(100), fire_trigger_sensor(20), 
 11049 ;;  p               2   13[COMRAM] int 
 11050 ;; Return value:  Size  Location     Type
 11051 ;;                  1    wreg      void 
 11052 ;; Registers used:
 11053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11054 ;; Tracked objects:
 11055 ;;		On entry : 0/0
 11056 ;;		On exit  : 0/0
 11057 ;;		Unchanged: 0/0
 11058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11059 ;;      Params:         3       0       0       0       0       0       0       0       0
 11060 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11061 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11062 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11063 ;;Total ram usage:       11 bytes
 11064 ;; Hardware stack levels used: 1
 11065 ;; Hardware stack levels required when called: 3
 11066 ;; This function calls:
 11067 ;;		_fputc
 11068 ;; This function is called by:
 11069 ;;		_vfpfcnvrt
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           	psect	text23
 11074   00611E                     __ptext23:
 11075                           	callstack 0
 11076   00611E                     _stoa:
 11077                           	callstack 23
 11078   00611E                     
 11079                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 951
      +                          :     cp = s;
 11080   00611E  C00A  F010         	movff	stoa@s,stoa@cp
 11081   006122  C00B  F011         	movff	stoa@s+1,stoa@cp+1
 11082                           
 11083                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 11084   006126  5010               	movf	stoa@cp^0,w,c
 11085   006128  1011               	iorwf	(stoa@cp+1)^0,w,c
 11086   00612A  A4D8               	btfss	status,2,c
 11087   00612C  EF9A  F030         	goto	u9011
 11088   006130  EF9C  F030         	goto	u9010
 11089   006134                     u9011:
 11090   006134  EFA0  F030         	goto	l6946
 11091   006138                     u9010:
 11092   006138                     
 11093                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 11094   006138  0EE9               	movlw	low STR_24
 11095   00613A  6E10               	movwf	stoa@cp^0,c
 11096   00613C  0E7F               	movlw	high STR_24
 11097   00613E  6E11               	movwf	(stoa@cp+1)^0,c
 11098   006140                     l6946:
 11099                           
 11100                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 11101   006140  0E00               	movlw	0
 11102   006142  6E13               	movwf	(stoa@l+1)^0,c
 11103   006144  0E00               	movlw	0
 11104   006146  6E12               	movwf	stoa@l^0,c
 11105   006148  EFA8  F030         	goto	l6950
 11106   00614C                     l6948:
 11107   00614C  4A12               	infsnz	stoa@l^0,f,c
 11108   00614E  2A13               	incf	(stoa@l+1)^0,f,c
 11109   006150                     l6950:
 11110   006150  5012               	movf	stoa@l^0,w,c
 11111   006152  2410               	addwf	stoa@cp^0,w,c
 11112   006154  6E0C               	movwf	??_stoa^0,c
 11113   006156  5013               	movf	(stoa@l+1)^0,w,c
 11114   006158  2011               	addwfc	(stoa@cp+1)^0,w,c
 11115   00615A  6E0D               	movwf	(??_stoa+1)^0,c
 11116   00615C  C00C  FFF6         	movff	??_stoa,tblptrl
 11117   006160  C00D  FFF7         	movff	??_stoa+1,tblptrh
 11118   006164  6AF8               	clrf	tblptru,c
 11119   006166  0E07               	movlw	(high __ramtop+-1)
 11120   006168  64F7               	cpfsgt	tblptrh,c
 11121   00616A  D003               	bra	u9027
 11122   00616C  0008               	tblrd		*
 11123   00616E  50F5               	movf	tablat,w,c
 11124   006170  D005               	bra	u9020
 11125   006172                     u9027:
 11126   006172  CFF6 FFE1          	movff	tblptrl,fsr1l
 11127   006176  CFF7 FFE2          	movff	tblptrh,fsr1h
 11128   00617A  50E7               	movf	indf1,w,c
 11129   00617C                     u9020:
 11130   00617C  0900               	iorlw	0
 11131   00617E  A4D8               	btfss	status,2,c
 11132   006180  EFC4  F030         	goto	u9031
 11133   006184  EFC6  F030         	goto	u9030
 11134   006188                     u9031:
 11135   006188  EFA6  F030         	goto	l6948
 11136   00618C                     u9030:
 11137   00618C                     
 11138                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 11139   00618C  0102               	movlb	2	; () banked
 11140   00618E  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 11141   006190  EFCC  F030         	goto	u9041
 11142   006194  EFCE  F030         	goto	u9040
 11143   006198                     u9041:
 11144   006198  EFE1  F030         	goto	l1066
 11145   00619C                     u9040:
 11146   00619C                     
 11147                           ; BSR set to: 2
 11148   00619C  5012               	movf	stoa@l^0,w,c
 11149   00619E  5DFE               	subwf	_prec& (0+255),w,b
 11150   0061A0  51FF               	movf	(_prec+1)& (0+255),w,b
 11151   0061A2  0A80               	xorlw	128
 11152   0061A4  6E0C               	movwf	??_stoa^0,c
 11153   0061A6  5013               	movf	(stoa@l+1)^0,w,c
 11154   0061A8  0A80               	xorlw	128
 11155   0061AA  580C               	subwfb	??_stoa^0,w,c
 11156   0061AC  B0D8               	btfsc	status,0,c
 11157   0061AE  EFDB  F030         	goto	u9051
 11158   0061B2  EFDD  F030         	goto	u9050
 11159   0061B6                     u9051:
 11160   0061B6  EFE1  F030         	goto	l1066
 11161   0061BA                     u9050:
 11162   0061BA                     
 11163                           ; BSR set to: 2
 11164                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 11165   0061BA  C2FE  F012         	movff	_prec,stoa@l
 11166   0061BE  C2FF  F013         	movff	_prec+1,stoa@l+1
 11167   0061C2                     l1066:
 11168                           
 11169                           ; BSR set to: 2
 11170                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 965:     p = l;
 11171   0061C2  C012  F00E         	movff	stoa@l,stoa@p
 11172   0061C6  C013  F00F         	movff	stoa@l+1,stoa@p+1
 11173                           
 11174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11175   0061CA  EF01  F031         	goto	l6962
 11176   0061CE                     l6958:
 11177                           
 11178                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 11179   0061CE  C010  FFF6         	movff	stoa@cp,tblptrl
 11180   0061D2  C011  FFF7         	movff	stoa@cp+1,tblptrh
 11181   0061D6  6AF8               	clrf	tblptru,c
 11182   0061D8  0E07               	movlw	(high __ramtop+-1)
 11183   0061DA  64F7               	cpfsgt	tblptrh,c
 11184   0061DC  D003               	bra	u9067
 11185   0061DE  0008               	tblrd		*
 11186   0061E0  50F5               	movf	tablat,w,c
 11187   0061E2  D005               	bra	u9060
 11188   0061E4                     u9067:
 11189   0061E4  CFF6 FFE1          	movff	tblptrl,fsr1l
 11190   0061E8  CFF7 FFE2          	movff	tblptrh,fsr1h
 11191   0061EC  50E7               	movf	indf1,w,c
 11192   0061EE                     u9060:
 11193   0061EE  6E0C               	movwf	??_stoa^0,c
 11194   0061F0  500C               	movf	??_stoa^0,w,c
 11195   0061F2  6E01               	movwf	fputc@c^0,c
 11196   0061F4  6A02               	clrf	(fputc@c+1)^0,c
 11197   0061F6  C009  F003         	movff	stoa@fp,fputc@fp
 11198   0061FA  ECEB  F032         	call	_fputc	;wreg free
 11199   0061FE                     
 11200                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 11201   0061FE  4A10               	infsnz	stoa@cp^0,f,c
 11202   006200  2A11               	incf	(stoa@cp+1)^0,f,c
 11203   006202                     l6962:
 11204                           
 11205                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11206   006202  060E               	decf	stoa@p^0,f,c
 11207   006204  A0D8               	btfss	status,0,c
 11208   006206  060F               	decf	(stoa@p+1)^0,f,c
 11209   006208  280E               	incf	stoa@p^0,w,c
 11210   00620A  E106               	bnz	u9071
 11211   00620C  280F               	incf	(stoa@p+1)^0,w,c
 11212   00620E  A4D8               	btfss	status,2,c
 11213   006210  EF0C  F031         	goto	u9071
 11214   006214  EF0E  F031         	goto	u9070
 11215   006218                     u9071:
 11216   006218  EFE7  F030         	goto	l6958
 11217   00621C                     u9070:
 11218   00621C  0012               	return		;funcret
 11219   00621E                     __end_of_stoa:
 11220                           	callstack 0
 11221                           
 11222 ;; *************** function _read_prec_or_width *****************
 11223 ;; Defined at:
 11224 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
 11227 ;;		 -> vfprintf@cfmt(2), 
 11228 ;;  ap              1    1[COMRAM] PTR PTR void [1]
 11229 ;;		 -> sprintf@ap(1), 
 11230 ;; Auto vars:     Size  Location     Type
 11231 ;;  c               1    4[COMRAM] unsigned char 
 11232 ;;  n               2    5[COMRAM] int 
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  2    0[COMRAM] int 
 11235 ;; Registers used:
 11236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11242 ;;      Params:         2       0       0       0       0       0       0       0       0
 11243 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11244 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11245 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11246 ;;Total ram usage:        7 bytes
 11247 ;; Hardware stack levels used: 1
 11248 ;; Hardware stack levels required when called: 1
 11249 ;; This function calls:
 11250 ;;		Nothing
 11251 ;; This function is called by:
 11252 ;;		_vfpfcnvrt
 11253 ;; This function uses a non-reentrant model
 11254 ;;
 11255                           
 11256                           	psect	text24
 11257   00673E                     __ptext24:
 11258                           	callstack 0
 11259   00673E                     _read_prec_or_width:
 11260                           	callstack 25
 11261   00673E                     
 11262                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11263   00673E  0E00               	movlw	0
 11264   006740  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11265   006742  0E00               	movlw	0
 11266   006744  6E06               	movwf	read_prec_or_width@n^0,c
 11267   006746                     
 11268                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11269   006746  5001               	movf	read_prec_or_width@fmt^0,w,c
 11270   006748  6ED9               	movwf	fsr2l,c
 11271   00674A  6ADA               	clrf	fsr2h,c
 11272   00674C  CFDE FFF6          	movff	postinc2,tblptrl
 11273   006750  CFDD FFF7          	movff	postdec2,tblptrh
 11274   006754                     	if	0	;tblptru may be non-zero
 11275   006754                     	endif
 11276   006754                     	if	0	;tblptru may be non-zero
 11277   006754                     	endif
 11278   006754  0008               	tblrd		*
 11279   006756  50F5               	movf	tablat,w,c
 11280   006758  0A2A               	xorlw	42
 11281   00675A  A4D8               	btfss	status,2,c
 11282   00675C  EFB2  F033         	goto	u9121
 11283   006760  EFB4  F033         	goto	u9120
 11284   006764                     u9121:
 11285   006764  EFDD  F033         	goto	l7004
 11286   006768                     u9120:
 11287   006768                     
 11288                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11289   006768  5001               	movf	read_prec_or_width@fmt^0,w,c
 11290   00676A  6ED9               	movwf	fsr2l,c
 11291   00676C  6ADA               	clrf	fsr2h,c
 11292   00676E  2ADE               	incf	postinc2,f,c
 11293   006770  0E00               	movlw	0
 11294   006772  22DD               	addwfc	postdec2,f,c
 11295   006774                     
 11296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11297   006774  5002               	movf	read_prec_or_width@ap^0,w,c
 11298   006776  6ED9               	movwf	fsr2l,c
 11299   006778  6ADA               	clrf	fsr2h,c
 11300   00677A  0E02               	movlw	2
 11301   00677C  26DF               	addwf	indf2,f,c
 11302   00677E  5CDF               	subwf	indf2,w,c
 11303   006780  6ED9               	movwf	fsr2l,c
 11304   006782  6ADA               	clrf	fsr2h,c
 11305   006784  CFDE F006          	movff	postinc2,read_prec_or_width@n
 11306   006788  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
 11307                           
 11308                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11309   00678C  EFF0  F033         	goto	l1086
 11310   006790                     l7000:
 11311                           
 11312                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11313   006790  0E0A               	movlw	10
 11314   006792  0206               	mulwf	read_prec_or_width@n^0,c
 11315   006794  CFF3 F003          	movff	prodl,??_read_prec_or_width
 11316   006798  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
 11317   00679C  0207               	mulwf	(read_prec_or_width@n+1)^0,c
 11318   00679E  50F3               	movf	prodl,w,c
 11319   0067A0  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
 11320   0067A2  5005               	movf	read_prec_or_width@c^0,w,c
 11321   0067A4  2403               	addwf	??_read_prec_or_width^0,w,c
 11322   0067A6  6E06               	movwf	read_prec_or_width@n^0,c
 11323   0067A8  0E00               	movlw	0
 11324   0067AA  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
 11325   0067AC  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11326   0067AE                     
 11327                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11328   0067AE  5001               	movf	read_prec_or_width@fmt^0,w,c
 11329   0067B0  6ED9               	movwf	fsr2l,c
 11330   0067B2  6ADA               	clrf	fsr2h,c
 11331   0067B4  2ADE               	incf	postinc2,f,c
 11332   0067B6  0E00               	movlw	0
 11333   0067B8  22DD               	addwfc	postdec2,f,c
 11334   0067BA                     l7004:
 11335                           
 11336                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11337   0067BA  5001               	movf	read_prec_or_width@fmt^0,w,c
 11338   0067BC  6ED9               	movwf	fsr2l,c
 11339   0067BE  6ADA               	clrf	fsr2h,c
 11340   0067C0  CFDE FFF6          	movff	postinc2,tblptrl
 11341   0067C4  CFDD FFF7          	movff	postdec2,tblptrh
 11342   0067C8                     	if	0	;tblptru may be non-zero
 11343   0067C8                     	endif
 11344   0067C8                     	if	0	;tblptru may be non-zero
 11345   0067C8                     	endif
 11346   0067C8  0008               	tblrd		*
 11347   0067CA  50F5               	movf	tablat,w,c
 11348   0067CC  0FD0               	addlw	208
 11349   0067CE  6E05               	movwf	read_prec_or_width@c^0,c
 11350   0067D0  0E09               	movlw	9
 11351   0067D2  6405               	cpfsgt	read_prec_or_width@c^0,c
 11352   0067D4  EFEE  F033         	goto	u9131
 11353   0067D8  EFF0  F033         	goto	u9130
 11354   0067DC                     u9131:
 11355   0067DC  EFC8  F033         	goto	l7000
 11356   0067E0                     u9130:
 11357   0067E0                     l1086:
 11358                           
 11359                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11360   0067E0  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
 11361   0067E4  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 11362   0067E8  0012               	return		;funcret
 11363   0067EA                     __end_of_read_prec_or_width:
 11364                           	callstack 0
 11365                           
 11366 ;; *************** function _efgtoa *****************
 11367 ;; Defined at:
 11368 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 11371 ;;		 -> sprintf@f(11), 
 11372 ;;  f               4    9[BANK0 ] PTR struct _IO_FILE
 11373 ;;  c               1   13[BANK0 ] unsigned char 
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;  u               4   56[BANK0 ] struct flui
 11376 ;;  g               4   50[BANK0 ] struct flui
 11377 ;;  l               4   45[BANK0 ] struct flui
 11378 ;;  h               4   41[BANK0 ] struct flui
 11379 ;;  ou              4   35[BANK0 ] struct flui
 11380 ;;  n               2   54[BANK0 ] int 
 11381 ;;  i               2   39[BANK0 ] int 
 11382 ;;  w               2   33[BANK0 ] int 
 11383 ;;  e               2   31[BANK0 ] int 
 11384 ;;  m               2   29[BANK0 ] int 
 11385 ;;  d               2   27[BANK0 ] int 
 11386 ;;  t               2   20[BANK0 ] int 
 11387 ;;  p               2   18[BANK0 ] int 
 11388 ;;  ne              2   16[BANK0 ] int 
 11389 ;;  sign            1   49[BANK0 ] unsigned char 
 11390 ;;  nmode           1   26[BANK0 ] unsigned char 
 11391 ;;  mode            1   25[BANK0 ] unsigned char 
 11392 ;;  pp              1   24[BANK0 ] unsigned char 
 11393 ;;  esign           1    0        unsigned char 
 11394 ;; Return value:  Size  Location     Type
 11395 ;;                  1    wreg      void 
 11396 ;; Registers used:
 11397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11398 ;; Tracked objects:
 11399 ;;		On entry : 0/0
 11400 ;;		On exit  : 0/0
 11401 ;;		Unchanged: 0/0
 11402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11403 ;;      Params:         0       6       0       0       0       0       0       0       0
 11404 ;;      Locals:         0      44       0       0       0       0       0       0       0
 11405 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11406 ;;      Totals:         0      52       0       0       0       0       0       0       0
 11407 ;;Total ram usage:       52 bytes
 11408 ;; Hardware stack levels used: 1
 11409 ;; Hardware stack levels required when called: 5
 11410 ;; This function calls:
 11411 ;;		___fladd
 11412 ;;		___fldiv
 11413 ;;		___fleq
 11414 ;;		___flge
 11415 ;;		___flmul
 11416 ;;		___flneg
 11417 ;;		___flsub
 11418 ;;		___fltol
 11419 ;;		___fpclassifyf
 11420 ;;		_floorf
 11421 ;;		_labs
 11422 ;;		_memcpy
 11423 ;;		_pad
 11424 ;;		_strcpy
 11425 ;; This function is called by:
 11426 ;;		_vfpfcnvrt
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           	psect	text25
 11431   0024C8                     __ptext25:
 11432                           	callstack 0
 11433   0024C8                     _efgtoa:
 11434                           	callstack 21
 11435   0024C8                     
 11436                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 11437   0024C8  0100               	movlb	0	; () banked
 11438   0024CA  6B91               	clrf	efgtoa@sign& (0+255),b
 11439                           
 11440                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 11441   0024CC  C069  F092         	movff	efgtoa@f,efgtoa@g
 11442   0024D0  C06A  F093         	movff	efgtoa@f+1,efgtoa@g+1
 11443   0024D4  C06B  F094         	movff	efgtoa@f+2,efgtoa@g+2
 11444   0024D8  C06C  F095         	movff	efgtoa@f+3,efgtoa@g+3
 11445   0024DC                     
 11446                           ; BSR set to: 0
 11447                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 11448   0024DC  BF95               	btfsc	(efgtoa@g+3)& (0+255),7,b
 11449   0024DE  EF75  F012         	goto	u8690
 11450   0024E2  EF73  F012         	goto	u8691
 11451   0024E6                     u8691:
 11452   0024E6  EF89  F012         	goto	l6730
 11453   0024EA                     u8690:
 11454   0024EA                     
 11455                           ; BSR set to: 0
 11456                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 11457   0024EA  0E01               	movlw	1
 11458   0024EC  6F91               	movwf	efgtoa@sign& (0+255),b
 11459   0024EE                     
 11460                           ; BSR set to: 0
 11461                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 11462   0024EE  C092  F001         	movff	efgtoa@g,___flneg@f1
 11463   0024F2  C093  F002         	movff	efgtoa@g+1,___flneg@f1+1
 11464   0024F6  C094  F003         	movff	efgtoa@g+2,___flneg@f1+2
 11465   0024FA  C095  F004         	movff	efgtoa@g+3,___flneg@f1+3
 11466   0024FE  ECD1  F036         	call	___flneg	;wreg free
 11467   002502  C001  F092         	movff	?___flneg,efgtoa@g
 11468   002506  C002  F093         	movff	?___flneg+1,efgtoa@g+1
 11469   00250A  C003  F094         	movff	?___flneg+2,efgtoa@g+2
 11470   00250E  C004  F095         	movff	?___flneg+3,efgtoa@g+3
 11471   002512                     l6730:
 11472                           
 11473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 11474   002512  0E00               	movlw	0
 11475   002514  0100               	movlb	0	; () banked
 11476   002516  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11477   002518  0E00               	movlw	0
 11478   00251A  6F96               	movwf	efgtoa@n& (0+255),b
 11479   00251C                     
 11480                           ; BSR set to: 0
 11481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 11482   00251C  C362  F081         	movff	_width,efgtoa@w
 11483   002520  C363  F082         	movff	_width+1,efgtoa@w+1
 11484   002524                     
 11485                           ; BSR set to: 0
 11486                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
 11487   002524  5191               	movf	efgtoa@sign& (0+255),w,b
 11488   002526  B4D8               	btfsc	status,2,c
 11489   002528  EF98  F012         	goto	u8701
 11490   00252C  EF9A  F012         	goto	u8700
 11491   002530                     u8701:
 11492   002530  EFAE  F012         	goto	l6744
 11493   002534                     u8700:
 11494   002534                     
 11495                           ; BSR set to: 0
 11496                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 11497   002534  5191               	movf	efgtoa@sign& (0+255),w,b
 11498   002536  A4D8               	btfss	status,2,c
 11499   002538  EFA0  F012         	goto	u8711
 11500   00253C  EFA2  F012         	goto	u8710
 11501   002540                     u8711:
 11502   002540  EFA8  F012         	goto	l6740
 11503   002544                     u8710:
 11504   002544                     
 11505                           ; BSR set to: 0
 11506   002544  0E00               	movlw	0
 11507   002546  6F77               	movwf	(_efgtoa$1377+1)& (0+255),b
 11508   002548  0E2B               	movlw	43
 11509   00254A  6F76               	movwf	_efgtoa$1377& (0+255),b
 11510   00254C  EFAC  F012         	goto	l6742
 11511   002550                     l6740:
 11512                           
 11513                           ; BSR set to: 0
 11514   002550  0E00               	movlw	0
 11515   002552  6F77               	movwf	(_efgtoa$1377+1)& (0+255),b
 11516   002554  0E2D               	movlw	45
 11517   002556  6F76               	movwf	_efgtoa$1377& (0+255),b
 11518   002558                     l6742:
 11519                           
 11520                           ; BSR set to: 0
 11521   002558  C076  F091         	movff	_efgtoa$1377,efgtoa@sign
 11522   00255C                     l6744:
 11523                           
 11524                           ; BSR set to: 0
 11525                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 11526   00255C  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
 11527   002560  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11528   002564  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11529   002568  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11530   00256C  EC0F  F031         	call	___fpclassifyf	;wreg free
 11531   002570  0401               	decf	?___fpclassifyf^0,w,c
 11532   002572  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11533   002574  A4D8               	btfss	status,2,c
 11534   002576  EFBF  F012         	goto	u8721
 11535   00257A  EFC1  F012         	goto	u8720
 11536   00257E                     u8721:
 11537   00257E  EFF2  F012         	goto	l6762
 11538   002582                     u8720:
 11539   002582                     
 11540                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 11541   002582  0100               	movlb	0	; () banked
 11542   002584  5191               	movf	efgtoa@sign& (0+255),w,b
 11543   002586  B4D8               	btfsc	status,2,c
 11544   002588  EFC8  F012         	goto	u8731
 11545   00258C  EFCA  F012         	goto	u8730
 11546   002590                     u8731:
 11547   002590  EFD3  F012         	goto	l6754
 11548   002594                     u8730:
 11549   002594                     
 11550                           ; BSR set to: 0
 11551                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 11552   002594  C091  F372         	movff	efgtoa@sign,_dbuf
 11553   002598                     
 11554                           ; BSR set to: 0
 11555                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
 11556   002598  0781               	decf	efgtoa@w& (0+255),f,b
 11557   00259A  A0D8               	btfss	status,0,c
 11558   00259C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 11559   00259E                     
 11560                           ; BSR set to: 0
 11561                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 11562   00259E  0E00               	movlw	0
 11563   0025A0  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11564   0025A2  0E01               	movlw	1
 11565   0025A4  6F96               	movwf	efgtoa@n& (0+255),b
 11566   0025A6                     l6754:
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 11570   0025A6  0E72               	movlw	low _dbuf
 11571   0025A8  2596               	addwf	efgtoa@n& (0+255),w,b
 11572   0025AA  6E01               	movwf	strcpy@dest^0,c
 11573   0025AC  0E03               	movlw	high _dbuf
 11574   0025AE  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11575   0025B0  6E02               	movwf	(strcpy@dest+1)^0,c
 11576   0025B2  0EF7               	movlw	low STR_18
 11577   0025B4  6E03               	movwf	strcpy@src^0,c
 11578   0025B6  0E7F               	movlw	high STR_18
 11579   0025B8  6E04               	movwf	(strcpy@src+1)^0,c
 11580   0025BA  ECB5  F036         	call	_strcpy	;wreg free
 11581   0025BE                     l6756:
 11582                           
 11583                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 11584   0025BE  0100               	movlb	0	; () banked
 11585   0025C0  0EFD               	movlw	253
 11586   0025C2  2781               	addwf	efgtoa@w& (0+255),f,b
 11587   0025C4  0EFF               	movlw	255
 11588   0025C6  2382               	addwfc	(efgtoa@w+1)& (0+255),f,b
 11589   0025C8                     
 11590                           ; BSR set to: 0
 11591                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 11592   0025C8  C068  F00F         	movff	efgtoa@fp,pad@fp
 11593   0025CC  0E72               	movlw	low _dbuf
 11594   0025CE  6E10               	movwf	pad@buf^0,c
 11595   0025D0  0E03               	movlw	high _dbuf
 11596   0025D2  6E11               	movwf	(pad@buf+1)^0,c
 11597   0025D4  C081  F012         	movff	efgtoa@w,pad@p
 11598   0025D8  C082  F013         	movff	efgtoa@w+1,pad@p+1
 11599   0025DC  EC65  F035         	call	_pad	;wreg free
 11600   0025E0  EF5B  F017         	goto	l1017
 11601   0025E4                     l6762:
 11602                           
 11603                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 11604   0025E4  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
 11605   0025E8  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11606   0025EC  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11607   0025F0  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11608   0025F4  EC0F  F031         	call	___fpclassifyf	;wreg free
 11609   0025F8  5001               	movf	?___fpclassifyf^0,w,c
 11610   0025FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11611   0025FC  A4D8               	btfss	status,2,c
 11612   0025FE  EF03  F013         	goto	u8741
 11613   002602  EF05  F013         	goto	u8740
 11614   002606                     u8741:
 11615   002606  EF25  F013         	goto	l6780
 11616   00260A                     u8740:
 11617   00260A                     
 11618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 11619   00260A  0100               	movlb	0	; () banked
 11620   00260C  5191               	movf	efgtoa@sign& (0+255),w,b
 11621   00260E  B4D8               	btfsc	status,2,c
 11622   002610  EF0C  F013         	goto	u8751
 11623   002614  EF0E  F013         	goto	u8750
 11624   002618                     u8751:
 11625   002618  EF17  F013         	goto	l6772
 11626   00261C                     u8750:
 11627   00261C                     
 11628                           ; BSR set to: 0
 11629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 11630   00261C  C091  F372         	movff	efgtoa@sign,_dbuf
 11631   002620                     
 11632                           ; BSR set to: 0
 11633                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
 11634   002620  0781               	decf	efgtoa@w& (0+255),f,b
 11635   002622  A0D8               	btfss	status,0,c
 11636   002624  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 11637   002626                     
 11638                           ; BSR set to: 0
 11639                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 11640   002626  0E00               	movlw	0
 11641   002628  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11642   00262A  0E01               	movlw	1
 11643   00262C  6F96               	movwf	efgtoa@n& (0+255),b
 11644   00262E                     l6772:
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 11648   00262E  0E72               	movlw	low _dbuf
 11649   002630  2596               	addwf	efgtoa@n& (0+255),w,b
 11650   002632  6E01               	movwf	strcpy@dest^0,c
 11651   002634  0E03               	movlw	high _dbuf
 11652   002636  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11653   002638  6E02               	movwf	(strcpy@dest+1)^0,c
 11654   00263A  0EFB               	movlw	low STR_21
 11655   00263C  6E03               	movwf	strcpy@src^0,c
 11656   00263E  0E7F               	movlw	high STR_21
 11657   002640  6E04               	movwf	(strcpy@src+1)^0,c
 11658   002642  ECB5  F036         	call	_strcpy	;wreg free
 11659   002646  EFDF  F012         	goto	l6756
 11660   00264A                     l6780:
 11661                           
 11662                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 11663   00264A  0E00               	movlw	0
 11664   00264C  0100               	movlb	0	; () banked
 11665   00264E  6F98               	movwf	efgtoa@u& (0+255),b
 11666   002650  0E00               	movlw	0
 11667   002652  6F99               	movwf	(efgtoa@u+1)& (0+255),b
 11668   002654  0E80               	movlw	128
 11669   002656  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
 11670   002658  0E3F               	movlw	63
 11671   00265A  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
 11672                           
 11673                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 11674   00265C  0E00               	movlw	0
 11675   00265E  6F80               	movwf	(efgtoa@e+1)& (0+255),b
 11676   002660  0E00               	movlw	0
 11677   002662  6F7F               	movwf	efgtoa@e& (0+255),b
 11678   002664                     
 11679                           ; BSR set to: 0
 11680                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 11681   002664  C092  F001         	movff	efgtoa@g,___fleq@ff1
 11682   002668  C093  F002         	movff	efgtoa@g+1,___fleq@ff1+1
 11683   00266C  C094  F003         	movff	efgtoa@g+2,___fleq@ff1+2
 11684   002670  C095  F004         	movff	efgtoa@g+3,___fleq@ff1+3
 11685   002674  0E00               	movlw	0
 11686   002676  6E05               	movwf	___fleq@ff2^0,c
 11687   002678  0E00               	movlw	0
 11688   00267A  6E06               	movwf	(___fleq@ff2+1)^0,c
 11689   00267C  0E00               	movlw	0
 11690   00267E  6E07               	movwf	(___fleq@ff2+2)^0,c
 11691   002680  0E00               	movlw	0
 11692   002682  6E08               	movwf	(___fleq@ff2+3)^0,c
 11693   002684  ECF5  F033         	call	___fleq	;wreg free
 11694   002688  B0D8               	btfsc	status,0,c
 11695   00268A  EF49  F013         	goto	u8761
 11696   00268E  EF4B  F013         	goto	u8760
 11697   002692                     u8761:
 11698   002692  EF2B  F014         	goto	l1020
 11699   002696                     u8760:
 11700   002696  EF58  F013         	goto	l6788
 11701   00269A                     l1022:
 11702                           
 11703                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 11704   00269A  C083  F098         	movff	efgtoa@ou,efgtoa@u
 11705   00269E  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
 11706   0026A2  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
 11707   0026A6  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
 11708   0026AA                     
 11709                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
 11710   0026AA  0100               	movlb	0	; () banked
 11711   0026AC  4B7F               	infsnz	efgtoa@e& (0+255),f,b
 11712   0026AE  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
 11713   0026B0                     l6788:
 11714                           
 11715                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 11716   0026B0  C098  F00F         	movff	efgtoa@u,___flmul@b
 11717   0026B4  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 11718   0026B8  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 11719   0026BC  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 11720   0026C0  0E00               	movlw	0
 11721   0026C2  6E13               	movwf	___flmul@a^0,c
 11722   0026C4  0E00               	movlw	0
 11723   0026C6  6E14               	movwf	(___flmul@a+1)^0,c
 11724   0026C8  0E20               	movlw	32
 11725   0026CA  6E15               	movwf	(___flmul@a+2)^0,c
 11726   0026CC  0E41               	movlw	65
 11727   0026CE  6E16               	movwf	(___flmul@a+3)^0,c
 11728   0026D0  EC0E  F020         	call	___flmul	;wreg free
 11729   0026D4  C00F  F083         	movff	?___flmul,efgtoa@ou
 11730   0026D8  C010  F084         	movff	?___flmul+1,efgtoa@ou+1
 11731   0026DC  C011  F085         	movff	?___flmul+2,efgtoa@ou+2
 11732   0026E0  C012  F086         	movff	?___flmul+3,efgtoa@ou+3
 11733   0026E4  0100               	movlb	0	; () banked
 11734   0026E6  5183               	movf	efgtoa@ou& (0+255),w,b
 11735   0026E8  5D92               	subwf	efgtoa@g& (0+255),w,b
 11736   0026EA  6E01               	movwf	labs@a^0,c
 11737   0026EC  5184               	movf	(efgtoa@ou+1)& (0+255),w,b
 11738   0026EE  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11739   0026F0  6E02               	movwf	(labs@a+1)^0,c
 11740   0026F2  5185               	movf	(efgtoa@ou+2)& (0+255),w,b
 11741   0026F4  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11742   0026F6  6E03               	movwf	(labs@a+2)^0,c
 11743   0026F8  5186               	movf	(efgtoa@ou+3)& (0+255),w,b
 11744   0026FA  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11745   0026FC  6E04               	movwf	(labs@a+3)^0,c
 11746   0026FE  EC98  F035         	call	_labs	;wreg free
 11747   002702  BE04               	btfsc	(?_labs+3)^0,7,c
 11748   002704  EF8F  F013         	goto	u8771
 11749   002708  5004               	movf	(?_labs+3)^0,w,c
 11750   00270A  1003               	iorwf	(?_labs+2)^0,w,c
 11751   00270C  1002               	iorwf	(?_labs+1)^0,w,c
 11752   00270E  E109               	bnz	u8770
 11753   002710  0E02               	movlw	2
 11754   002712  5C01               	subwf	?_labs^0,w,c
 11755   002714  A0D8               	btfss	status,0,c
 11756   002716  EF8F  F013         	goto	u8771
 11757   00271A  EF91  F013         	goto	u8770
 11758   00271E                     u8771:
 11759   00271E  EF4D  F013         	goto	l1022
 11760   002722                     u8770:
 11761   002722  C083  F060         	movff	efgtoa@ou,___flge@ff1
 11762   002726  C084  F061         	movff	efgtoa@ou+1,___flge@ff1+1
 11763   00272A  C085  F062         	movff	efgtoa@ou+2,___flge@ff1+2
 11764   00272E  C086  F063         	movff	efgtoa@ou+3,___flge@ff1+3
 11765   002732  C092  F064         	movff	efgtoa@g,___flge@ff2
 11766   002736  C093  F065         	movff	efgtoa@g+1,___flge@ff2+1
 11767   00273A  C094  F066         	movff	efgtoa@g+2,___flge@ff2+2
 11768   00273E  C095  F067         	movff	efgtoa@g+3,___flge@ff2+3
 11769   002742  EC8A  F02F         	call	___flge	;wreg free
 11770   002746  0100               	movlb	0	; () banked
 11771   002748  A0D8               	btfss	status,0,c
 11772   00274A  EFA9  F013         	goto	u8781
 11773   00274E  EFAB  F013         	goto	u8780
 11774   002752                     u8781:
 11775   002752  EF4D  F013         	goto	l1022
 11776   002756                     u8780:
 11777   002756                     
 11778                           ; BSR set to: 0
 11779                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 11780   002756  5198               	movf	efgtoa@u& (0+255),w,b
 11781   002758  5D92               	subwf	efgtoa@g& (0+255),w,b
 11782   00275A  6E01               	movwf	labs@a^0,c
 11783   00275C  5199               	movf	(efgtoa@u+1)& (0+255),w,b
 11784   00275E  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11785   002760  6E02               	movwf	(labs@a+1)^0,c
 11786   002762  519A               	movf	(efgtoa@u+2)& (0+255),w,b
 11787   002764  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11788   002766  6E03               	movwf	(labs@a+2)^0,c
 11789   002768  519B               	movf	(efgtoa@u+3)& (0+255),w,b
 11790   00276A  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11791   00276C  6E04               	movwf	(labs@a+3)^0,c
 11792   00276E  EC98  F035         	call	_labs	;wreg free
 11793   002772  BE04               	btfsc	(?_labs+3)^0,7,c
 11794   002774  EFC9  F013         	goto	u8790
 11795   002778  5004               	movf	(?_labs+3)^0,w,c
 11796   00277A  1003               	iorwf	(?_labs+2)^0,w,c
 11797   00277C  1002               	iorwf	(?_labs+1)^0,w,c
 11798   00277E  E107               	bnz	u8791
 11799   002780  0E02               	movlw	2
 11800   002782  5C01               	subwf	?_labs^0,w,c
 11801   002784  B0D8               	btfsc	status,0,c
 11802   002786  EFC7  F013         	goto	u8791
 11803   00278A  EFC9  F013         	goto	u8790
 11804   00278E                     u8791:
 11805   00278E  EF11  F014         	goto	l6806
 11806   002792                     u8790:
 11807   002792                     l6796:
 11808                           
 11809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
 11810   002792  C098  F092         	movff	efgtoa@u,efgtoa@g
 11811   002796  C099  F093         	movff	efgtoa@u+1,efgtoa@g+1
 11812   00279A  C09A  F094         	movff	efgtoa@u+2,efgtoa@g+2
 11813   00279E  C09B  F095         	movff	efgtoa@u+3,efgtoa@g+3
 11814                           
 11815                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
 11816   0027A2  EF2B  F014         	goto	l1020
 11817   0027A6                     l6798:
 11818                           
 11819                           ; BSR set to: 0
 11820                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 11821   0027A6  C098  F028         	movff	efgtoa@u,___fldiv@b
 11822   0027AA  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 11823   0027AE  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 11824   0027B2  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 11825   0027B6  0E00               	movlw	0
 11826   0027B8  6E2C               	movwf	___fldiv@a^0,c
 11827   0027BA  0E00               	movlw	0
 11828   0027BC  6E2D               	movwf	(___fldiv@a+1)^0,c
 11829   0027BE  0E20               	movlw	32
 11830   0027C0  6E2E               	movwf	(___fldiv@a+2)^0,c
 11831   0027C2  0E41               	movlw	65
 11832   0027C4  6E2F               	movwf	(___fldiv@a+3)^0,c
 11833   0027C6  EC10  F024         	call	___fldiv	;wreg free
 11834   0027CA  C028  F098         	movff	?___fldiv,efgtoa@u
 11835   0027CE  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 11836   0027D2  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 11837   0027D6  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 11838   0027DA                     
 11839                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
 11840   0027DA  0100               	movlb	0	; () banked
 11841   0027DC  077F               	decf	efgtoa@e& (0+255),f,b
 11842   0027DE  A0D8               	btfss	status,0,c
 11843   0027E0  0780               	decf	(efgtoa@e+1)& (0+255),f,b
 11844   0027E2                     
 11845                           ; BSR set to: 0
 11846                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 11847   0027E2  5198               	movf	efgtoa@u& (0+255),w,b
 11848   0027E4  5D92               	subwf	efgtoa@g& (0+255),w,b
 11849   0027E6  6E01               	movwf	labs@a^0,c
 11850   0027E8  5199               	movf	(efgtoa@u+1)& (0+255),w,b
 11851   0027EA  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11852   0027EC  6E02               	movwf	(labs@a+1)^0,c
 11853   0027EE  519A               	movf	(efgtoa@u+2)& (0+255),w,b
 11854   0027F0  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11855   0027F2  6E03               	movwf	(labs@a+2)^0,c
 11856   0027F4  519B               	movf	(efgtoa@u+3)& (0+255),w,b
 11857   0027F6  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11858   0027F8  6E04               	movwf	(labs@a+3)^0,c
 11859   0027FA  EC98  F035         	call	_labs	;wreg free
 11860   0027FE  BE04               	btfsc	(?_labs+3)^0,7,c
 11861   002800  EF0F  F014         	goto	u8800
 11862   002804  5004               	movf	(?_labs+3)^0,w,c
 11863   002806  1003               	iorwf	(?_labs+2)^0,w,c
 11864   002808  1002               	iorwf	(?_labs+1)^0,w,c
 11865   00280A  E107               	bnz	u8801
 11866   00280C  0E02               	movlw	2
 11867   00280E  5C01               	subwf	?_labs^0,w,c
 11868   002810  B0D8               	btfsc	status,0,c
 11869   002812  EF0D  F014         	goto	u8801
 11870   002816  EF0F  F014         	goto	u8800
 11871   00281A                     u8801:
 11872   00281A  EF11  F014         	goto	l6806
 11873   00281E                     u8800:
 11874   00281E  EFC9  F013         	goto	l6796
 11875   002822                     l6806:
 11876                           
 11877                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 11878   002822  C092  F060         	movff	efgtoa@g,___flge@ff1
 11879   002826  C093  F061         	movff	efgtoa@g+1,___flge@ff1+1
 11880   00282A  C094  F062         	movff	efgtoa@g+2,___flge@ff1+2
 11881   00282E  C095  F063         	movff	efgtoa@g+3,___flge@ff1+3
 11882   002832  C098  F064         	movff	efgtoa@u,___flge@ff2
 11883   002836  C099  F065         	movff	efgtoa@u+1,___flge@ff2+1
 11884   00283A  C09A  F066         	movff	efgtoa@u+2,___flge@ff2+2
 11885   00283E  C09B  F067         	movff	efgtoa@u+3,___flge@ff2+3
 11886   002842  EC8A  F02F         	call	___flge	;wreg free
 11887   002846  0100               	movlb	0	; () banked
 11888   002848  A0D8               	btfss	status,0,c
 11889   00284A  EF29  F014         	goto	u8811
 11890   00284E  EF2B  F014         	goto	u8810
 11891   002852                     u8811:
 11892   002852  EFD3  F013         	goto	l6798
 11893   002856                     u8810:
 11894   002856                     l1020:
 11895                           
 11896                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 11897   002856  C06D  F079         	movff	efgtoa@c,efgtoa@mode
 11898                           
 11899                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 11900   00285A  C079  F07A         	movff	efgtoa@mode,efgtoa@nmode
 11901   00285E                     
 11902                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 11903   00285E  0102               	movlb	2	; () banked
 11904   002860  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 11905   002862  EF35  F014         	goto	u8821
 11906   002866  EF37  F014         	goto	u8820
 11907   00286A                     u8821:
 11908   00286A  EF3D  F014         	goto	l6812
 11909   00286E                     u8820:
 11910   00286E                     
 11911                           ; BSR set to: 2
 11912   00286E  C2FE  F072         	movff	_prec,efgtoa@p
 11913   002872  C2FF  F073         	movff	_prec+1,efgtoa@p+1
 11914   002876  EF42  F014         	goto	l6814
 11915   00287A                     l6812:
 11916                           
 11917                           ; BSR set to: 2
 11918   00287A  0E00               	movlw	0
 11919   00287C  0100               	movlb	0	; () banked
 11920   00287E  6F73               	movwf	(efgtoa@p+1)& (0+255),b
 11921   002880  0E06               	movlw	6
 11922   002882  6F72               	movwf	efgtoa@p& (0+255),b
 11923   002884                     l6814:
 11924                           
 11925                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 11926   002884  C072  F07D         	movff	efgtoa@p,efgtoa@m
 11927   002888  C073  F07E         	movff	efgtoa@p+1,efgtoa@m+1
 11928   00288C                     
 11929                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 11930   00288C  0100               	movlb	0	; () banked
 11931   00288E  4B7D               	infsnz	efgtoa@m& (0+255),f,b
 11932   002890  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
 11933   002892                     
 11934                           ; BSR set to: 0
 11935                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 11936   002892  0E66               	movlw	102
 11937   002894  197A               	xorwf	efgtoa@nmode& (0+255),w,b
 11938   002896  A4D8               	btfss	status,2,c
 11939   002898  EF50  F014         	goto	u8831
 11940   00289C  EF52  F014         	goto	u8830
 11941   0028A0                     u8831:
 11942   0028A0  EF72  F014         	goto	l6828
 11943   0028A4                     u8830:
 11944   0028A4                     
 11945                           ; BSR set to: 0
 11946                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 11947   0028A4  BF80               	btfsc	(efgtoa@e+1)& (0+255),7,b
 11948   0028A6  EF59  F014         	goto	u8840
 11949   0028AA  EF57  F014         	goto	u8841
 11950   0028AE                     u8841:
 11951   0028AE  EF65  F014         	goto	l6824
 11952   0028B2                     u8840:
 11953   0028B2                     
 11954                           ; BSR set to: 0
 11955                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 11956   0028B2  0E00               	movlw	0
 11957   0028B4  6F98               	movwf	efgtoa@u& (0+255),b
 11958   0028B6  0E00               	movlw	0
 11959   0028B8  6F99               	movwf	(efgtoa@u+1)& (0+255),b
 11960   0028BA  0E80               	movlw	128
 11961   0028BC  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
 11962   0028BE  0E3F               	movlw	63
 11963   0028C0  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
 11964                           
 11965                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 11966   0028C2  0E00               	movlw	0
 11967   0028C4  6F80               	movwf	(efgtoa@e+1)& (0+255),b
 11968   0028C6  0E00               	movlw	0
 11969   0028C8  6F7F               	movwf	efgtoa@e& (0+255),b
 11970   0028CA                     l6824:
 11971                           
 11972                           ; BSR set to: 0
 11973                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 11974   0028CA  0E67               	movlw	103
 11975   0028CC  1979               	xorwf	efgtoa@mode& (0+255),w,b
 11976   0028CE  B4D8               	btfsc	status,2,c
 11977   0028D0  EF6C  F014         	goto	u8851
 11978   0028D4  EF6E  F014         	goto	u8850
 11979   0028D8                     u8851:
 11980   0028D8  EF72  F014         	goto	l6828
 11981   0028DC                     u8850:
 11982   0028DC                     
 11983                           ; BSR set to: 0
 11984                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 11985   0028DC  517F               	movf	efgtoa@e& (0+255),w,b
 11986   0028DE  277D               	addwf	efgtoa@m& (0+255),f,b
 11987   0028E0  5180               	movf	(efgtoa@e+1)& (0+255),w,b
 11988   0028E2  237E               	addwfc	(efgtoa@m+1)& (0+255),f,b
 11989   0028E4                     l6828:
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 11993   0028E4  0E00               	movlw	0
 11994   0028E6  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 11995   0028E8  0E00               	movlw	0
 11996   0028EA  6F87               	movwf	efgtoa@i& (0+255),b
 11997   0028EC                     
 11998                           ; BSR set to: 0
 11999                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 12000   0028EC  C092  F089         	movff	efgtoa@g,efgtoa@h
 12001   0028F0  C093  F08A         	movff	efgtoa@g+1,efgtoa@h+1
 12002   0028F4  C094  F08B         	movff	efgtoa@g+2,efgtoa@h+2
 12003   0028F8  C095  F08C         	movff	efgtoa@g+3,efgtoa@h+3
 12004   0028FC                     
 12005                           ; BSR set to: 0
 12006                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 12007   0028FC  C098  F083         	movff	efgtoa@u,efgtoa@ou
 12008   002900  C099  F084         	movff	efgtoa@u+1,efgtoa@ou+1
 12009   002904  C09A  F085         	movff	efgtoa@u+2,efgtoa@ou+2
 12010   002908  C09B  F086         	movff	efgtoa@u+3,efgtoa@ou+3
 12011                           
 12012                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12013   00290C  EF03  F015         	goto	l6842
 12014   002910                     l6834:
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 12018   002910  C089  F028         	movff	efgtoa@h,___fldiv@b
 12019   002914  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
 12020   002918  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
 12021   00291C  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
 12022   002920  C098  F02C         	movff	efgtoa@u,___fldiv@a
 12023   002924  C099  F02D         	movff	efgtoa@u+1,___fldiv@a+1
 12024   002928  C09A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
 12025   00292C  C09B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
 12026   002930  EC10  F024         	call	___fldiv	;wreg free
 12027   002934  C028  F041         	movff	?___fldiv,floorf@x
 12028   002938  C029  F042         	movff	?___fldiv+1,floorf@x+1
 12029   00293C  C02A  F043         	movff	?___fldiv+2,floorf@x+2
 12030   002940  C02B  F044         	movff	?___fldiv+3,floorf@x+3
 12031   002944  ECF9  F029         	call	_floorf	;wreg free
 12032   002948  C041  F08D         	movff	?_floorf,efgtoa@l
 12033   00294C  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
 12034   002950  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
 12035   002954  C044  F090         	movff	?_floorf+3,efgtoa@l+3
 12036                           
 12037                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 12038   002958  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12039   00295C  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12040   002960  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12041   002964  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12042   002968  EC07  F02F         	call	___fltol	;wreg free
 12043   00296C  C001  F07B         	movff	?___fltol,efgtoa@d
 12044   002970  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
 12045   002974                     
 12046                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 12047   002974  C089  F051         	movff	efgtoa@h,___flsub@b
 12048   002978  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
 12049   00297C  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
 12050   002980  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
 12051   002984  C08D  F013         	movff	efgtoa@l,___flmul@a
 12052   002988  C08E  F014         	movff	efgtoa@l+1,___flmul@a+1
 12053   00298C  C08F  F015         	movff	efgtoa@l+2,___flmul@a+2
 12054   002990  C090  F016         	movff	efgtoa@l+3,___flmul@a+3
 12055   002994  C098  F00F         	movff	efgtoa@u,___flmul@b
 12056   002998  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12057   00299C  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12058   0029A0  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12059   0029A4  EC0E  F020         	call	___flmul	;wreg free
 12060   0029A8  C00F  F055         	movff	?___flmul,___flsub@a
 12061   0029AC  C010  F056         	movff	?___flmul+1,___flsub@a+1
 12062   0029B0  C011  F057         	movff	?___flmul+2,___flsub@a+2
 12063   0029B4  C012  F058         	movff	?___flmul+3,___flsub@a+3
 12064   0029B8  EC34  F036         	call	___flsub	;wreg free
 12065   0029BC  C051  F089         	movff	?___flsub,efgtoa@h
 12066   0029C0  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
 12067   0029C4  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
 12068   0029C8  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
 12069   0029CC                     
 12070                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 12071   0029CC  C098  F028         	movff	efgtoa@u,___fldiv@b
 12072   0029D0  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 12073   0029D4  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 12074   0029D8  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 12075   0029DC  0E00               	movlw	0
 12076   0029DE  6E2C               	movwf	___fldiv@a^0,c
 12077   0029E0  0E00               	movlw	0
 12078   0029E2  6E2D               	movwf	(___fldiv@a+1)^0,c
 12079   0029E4  0E20               	movlw	32
 12080   0029E6  6E2E               	movwf	(___fldiv@a+2)^0,c
 12081   0029E8  0E41               	movlw	65
 12082   0029EA  6E2F               	movwf	(___fldiv@a+3)^0,c
 12083   0029EC  EC10  F024         	call	___fldiv	;wreg free
 12084   0029F0  C028  F098         	movff	?___fldiv,efgtoa@u
 12085   0029F4  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 12086   0029F8  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 12087   0029FC  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 12088   002A00                     
 12089                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 12090   002A00  0100               	movlb	0	; () banked
 12091   002A02  4B87               	infsnz	efgtoa@i& (0+255),f,b
 12092   002A04  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
 12093   002A06                     l6842:
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12097   002A06  517D               	movf	efgtoa@m& (0+255),w,b
 12098   002A08  5D87               	subwf	efgtoa@i& (0+255),w,b
 12099   002A0A  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12100   002A0C  0A80               	xorlw	128
 12101   002A0E  6F6E               	movwf	??_efgtoa& (0+255),b
 12102   002A10  517E               	movf	(efgtoa@m+1)& (0+255),w,b
 12103   002A12  0A80               	xorlw	128
 12104   002A14  596E               	subwfb	??_efgtoa& (0+255),w,b
 12105   002A16  A0D8               	btfss	status,0,c
 12106   002A18  EF10  F015         	goto	u8861
 12107   002A1C  EF12  F015         	goto	u8860
 12108   002A20                     u8861:
 12109   002A20  EF88  F014         	goto	l6834
 12110   002A24                     u8860:
 12111   002A24                     
 12112                           ; BSR set to: 0
 12113                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 12114   002A24  C098  F00F         	movff	efgtoa@u,___flmul@b
 12115   002A28  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12116   002A2C  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12117   002A30  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12118   002A34  0E00               	movlw	0
 12119   002A36  6E13               	movwf	___flmul@a^0,c
 12120   002A38  0E00               	movlw	0
 12121   002A3A  6E14               	movwf	(___flmul@a+1)^0,c
 12122   002A3C  0EA0               	movlw	160
 12123   002A3E  6E15               	movwf	(___flmul@a+2)^0,c
 12124   002A40  0E40               	movlw	64
 12125   002A42  6E16               	movwf	(___flmul@a+3)^0,c
 12126   002A44  EC0E  F020         	call	___flmul	;wreg free
 12127   002A48  C00F  F08D         	movff	?___flmul,efgtoa@l
 12128   002A4C  C010  F08E         	movff	?___flmul+1,efgtoa@l+1
 12129   002A50  C011  F08F         	movff	?___flmul+2,efgtoa@l+2
 12130   002A54  C012  F090         	movff	?___flmul+3,efgtoa@l+3
 12131   002A58                     
 12132                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 12133   002A58  C089  F060         	movff	efgtoa@h,___flge@ff1
 12134   002A5C  C08A  F061         	movff	efgtoa@h+1,___flge@ff1+1
 12135   002A60  C08B  F062         	movff	efgtoa@h+2,___flge@ff1+2
 12136   002A64  C08C  F063         	movff	efgtoa@h+3,___flge@ff1+3
 12137   002A68  C08D  F064         	movff	efgtoa@l,___flge@ff2
 12138   002A6C  C08E  F065         	movff	efgtoa@l+1,___flge@ff2+1
 12139   002A70  C08F  F066         	movff	efgtoa@l+2,___flge@ff2+2
 12140   002A74  C090  F067         	movff	efgtoa@l+3,___flge@ff2+3
 12141   002A78  EC8A  F02F         	call	___flge	;wreg free
 12142   002A7C  0100               	movlb	0	; () banked
 12143   002A7E  B0D8               	btfsc	status,0,c
 12144   002A80  EF44  F015         	goto	u8871
 12145   002A84  EF46  F015         	goto	u8870
 12146   002A88                     u8871:
 12147   002A88  EF50  F015         	goto	l6850
 12148   002A8C                     u8870:
 12149   002A8C                     
 12150                           ; BSR set to: 0
 12151                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 12152   002A8C  0E00               	movlw	0
 12153   002A8E  6F8D               	movwf	efgtoa@l& (0+255),b
 12154   002A90  0E00               	movlw	0
 12155   002A92  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
 12156   002A94  0E00               	movlw	0
 12157   002A96  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
 12158   002A98  0E00               	movlw	0
 12159   002A9A  6F90               	movwf	(efgtoa@l+3)& (0+255),b
 12160                           
 12161                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 12162   002A9C  EF79  F015         	goto	l6856
 12163   002AA0                     l6850:
 12164                           
 12165                           ; BSR set to: 0
 12166                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 12167   002AA0  C089  F001         	movff	efgtoa@h,___fleq@ff1
 12168   002AA4  C08A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
 12169   002AA8  C08B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
 12170   002AAC  C08C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
 12171   002AB0  C08D  F005         	movff	efgtoa@l,___fleq@ff2
 12172   002AB4  C08E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
 12173   002AB8  C08F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
 12174   002ABC  C090  F008         	movff	efgtoa@l+3,___fleq@ff2+3
 12175   002AC0  ECF5  F033         	call	___fleq	;wreg free
 12176   002AC4  A0D8               	btfss	status,0,c
 12177   002AC6  EF67  F015         	goto	u8881
 12178   002ACA  EF69  F015         	goto	u8880
 12179   002ACE                     u8881:
 12180   002ACE  EF79  F015         	goto	l6856
 12181   002AD2                     u8880:
 12182   002AD2  0100               	movlb	0	; () banked
 12183   002AD4  B17B               	btfsc	efgtoa@d& (0+255),0,b
 12184   002AD6  EF6F  F015         	goto	u8891
 12185   002ADA  EF71  F015         	goto	u8890
 12186   002ADE                     u8891:
 12187   002ADE  EF79  F015         	goto	l6856
 12188   002AE2                     u8890:
 12189   002AE2                     
 12190                           ; BSR set to: 0
 12191                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 12192   002AE2  0E00               	movlw	0
 12193   002AE4  6F8D               	movwf	efgtoa@l& (0+255),b
 12194   002AE6  0E00               	movlw	0
 12195   002AE8  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
 12196   002AEA  0E00               	movlw	0
 12197   002AEC  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
 12198   002AEE  0E00               	movlw	0
 12199   002AF0  6F90               	movwf	(efgtoa@l+3)& (0+255),b
 12200   002AF2                     l6856:
 12201                           
 12202                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 12203   002AF2  C092  F041         	movff	efgtoa@g,___fladd@b
 12204   002AF6  C093  F042         	movff	efgtoa@g+1,___fladd@b+1
 12205   002AFA  C094  F043         	movff	efgtoa@g+2,___fladd@b+2
 12206   002AFE  C095  F044         	movff	efgtoa@g+3,___fladd@b+3
 12207   002B02  C08D  F045         	movff	efgtoa@l,___fladd@a
 12208   002B06  C08E  F046         	movff	efgtoa@l+1,___fladd@a+1
 12209   002B0A  C08F  F047         	movff	efgtoa@l+2,___fladd@a+2
 12210   002B0E  C090  F048         	movff	efgtoa@l+3,___fladd@a+3
 12211   002B12  ECB3  F01D         	call	___fladd	;wreg free
 12212   002B16  C041  F089         	movff	?___fladd,efgtoa@h
 12213   002B1A  C042  F08A         	movff	?___fladd+1,efgtoa@h+1
 12214   002B1E  C043  F08B         	movff	?___fladd+2,efgtoa@h+2
 12215   002B22  C044  F08C         	movff	?___fladd+3,efgtoa@h+3
 12216   002B26                     
 12217                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 12218   002B26  C089  F060         	movff	efgtoa@h,___flge@ff1
 12219   002B2A  C08A  F061         	movff	efgtoa@h+1,___flge@ff1+1
 12220   002B2E  C08B  F062         	movff	efgtoa@h+2,___flge@ff1+2
 12221   002B32  C08C  F063         	movff	efgtoa@h+3,___flge@ff1+3
 12222   002B36  0E00               	movlw	0
 12223   002B38  6E13               	movwf	___flmul@a^0,c
 12224   002B3A  0E00               	movlw	0
 12225   002B3C  6E14               	movwf	(___flmul@a+1)^0,c
 12226   002B3E  0E20               	movlw	32
 12227   002B40  6E15               	movwf	(___flmul@a+2)^0,c
 12228   002B42  0E41               	movlw	65
 12229   002B44  6E16               	movwf	(___flmul@a+3)^0,c
 12230   002B46  C083  F00F         	movff	efgtoa@ou,___flmul@b
 12231   002B4A  C084  F010         	movff	efgtoa@ou+1,___flmul@b+1
 12232   002B4E  C085  F011         	movff	efgtoa@ou+2,___flmul@b+2
 12233   002B52  C086  F012         	movff	efgtoa@ou+3,___flmul@b+3
 12234   002B56  EC0E  F020         	call	___flmul	;wreg free
 12235   002B5A  C00F  F064         	movff	?___flmul,___flge@ff2
 12236   002B5E  C010  F065         	movff	?___flmul+1,___flge@ff2+1
 12237   002B62  C011  F066         	movff	?___flmul+2,___flge@ff2+2
 12238   002B66  C012  F067         	movff	?___flmul+3,___flge@ff2+3
 12239   002B6A  EC8A  F02F         	call	___flge	;wreg free
 12240   002B6E  0100               	movlb	0	; () banked
 12241   002B70  A0D8               	btfss	status,0,c
 12242   002B72  EFBD  F015         	goto	u8901
 12243   002B76  EFBF  F015         	goto	u8900
 12244   002B7A                     u8901:
 12245   002B7A  EFE7  F015         	goto	l6868
 12246   002B7E                     u8900:
 12247   002B7E                     
 12248                           ; BSR set to: 0
 12249                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 12250   002B7E  4B7F               	infsnz	efgtoa@e& (0+255),f,b
 12251   002B80  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
 12252   002B82                     
 12253                           ; BSR set to: 0
 12254                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 12255   002B82  C083  F00F         	movff	efgtoa@ou,___flmul@b
 12256   002B86  C084  F010         	movff	efgtoa@ou+1,___flmul@b+1
 12257   002B8A  C085  F011         	movff	efgtoa@ou+2,___flmul@b+2
 12258   002B8E  C086  F012         	movff	efgtoa@ou+3,___flmul@b+3
 12259   002B92  0E00               	movlw	0
 12260   002B94  6E13               	movwf	___flmul@a^0,c
 12261   002B96  0E00               	movlw	0
 12262   002B98  6E14               	movwf	(___flmul@a+1)^0,c
 12263   002B9A  0E20               	movlw	32
 12264   002B9C  6E15               	movwf	(___flmul@a+2)^0,c
 12265   002B9E  0E41               	movlw	65
 12266   002BA0  6E16               	movwf	(___flmul@a+3)^0,c
 12267   002BA2  EC0E  F020         	call	___flmul	;wreg free
 12268   002BA6  C00F  F083         	movff	?___flmul,efgtoa@ou
 12269   002BAA  C010  F084         	movff	?___flmul+1,efgtoa@ou+1
 12270   002BAE  C011  F085         	movff	?___flmul+2,efgtoa@ou+2
 12271   002BB2  C012  F086         	movff	?___flmul+3,efgtoa@ou+3
 12272   002BB6                     
 12273                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 12274   002BB6  0E66               	movlw	102
 12275   002BB8  0100               	movlb	0	; () banked
 12276   002BBA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
 12277   002BBC  A4D8               	btfss	status,2,c
 12278   002BBE  EFE3  F015         	goto	u8911
 12279   002BC2  EFE5  F015         	goto	u8910
 12280   002BC6                     u8911:
 12281   002BC6  EFE7  F015         	goto	l6868
 12282   002BCA                     u8910:
 12283   002BCA                     
 12284                           ; BSR set to: 0
 12285                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 12286   002BCA  4B7D               	infsnz	efgtoa@m& (0+255),f,b
 12287   002BCC  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
 12288   002BCE                     l6868:
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 12292   002BCE  C083  F098         	movff	efgtoa@ou,efgtoa@u
 12293   002BD2  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
 12294   002BD6  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
 12295   002BDA  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
 12296   002BDE                     
 12297                           ; BSR set to: 0
 12298                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 12299   002BDE  C07F  F070         	movff	efgtoa@e,efgtoa@ne
 12300   002BE2  C080  F071         	movff	efgtoa@e+1,efgtoa@ne+1
 12301   002BE6                     
 12302                           ; BSR set to: 0
 12303                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 12304   002BE6  6B78               	clrf	efgtoa@pp& (0+255),b
 12305   002BE8                     
 12306                           ; BSR set to: 0
 12307                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 12308   002BE8  0E00               	movlw	0
 12309   002BEA  6F75               	movwf	(efgtoa@t+1)& (0+255),b
 12310   002BEC  0E00               	movlw	0
 12311   002BEE  6F74               	movwf	efgtoa@t& (0+255),b
 12312   002BF0                     
 12313                           ; BSR set to: 0
 12314                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 12315   002BF0  0E00               	movlw	0
 12316   002BF2  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 12317   002BF4  0E00               	movlw	0
 12318   002BF6  6F87               	movwf	efgtoa@i& (0+255),b
 12319                           
 12320                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12321   002BF8  EFE3  F016         	goto	l6918
 12322   002BFC                     l6878:
 12323                           
 12324                           ; BSR set to: 0
 12325                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 12326   002BFC  C089  F028         	movff	efgtoa@h,___fldiv@b
 12327   002C00  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
 12328   002C04  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
 12329   002C08  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
 12330   002C0C  C098  F02C         	movff	efgtoa@u,___fldiv@a
 12331   002C10  C099  F02D         	movff	efgtoa@u+1,___fldiv@a+1
 12332   002C14  C09A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
 12333   002C18  C09B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
 12334   002C1C  EC10  F024         	call	___fldiv	;wreg free
 12335   002C20  C028  F041         	movff	?___fldiv,floorf@x
 12336   002C24  C029  F042         	movff	?___fldiv+1,floorf@x+1
 12337   002C28  C02A  F043         	movff	?___fldiv+2,floorf@x+2
 12338   002C2C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
 12339   002C30  ECF9  F029         	call	_floorf	;wreg free
 12340   002C34  C041  F08D         	movff	?_floorf,efgtoa@l
 12341   002C38  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
 12342   002C3C  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
 12343   002C40  C044  F090         	movff	?_floorf+3,efgtoa@l+3
 12344                           
 12345                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 12346   002C44  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12347   002C48  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12348   002C4C  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12349   002C50  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12350   002C54  EC07  F02F         	call	___fltol	;wreg free
 12351   002C58  BE02               	btfsc	(?___fltol+1)^0,7,c
 12352   002C5A  EF3A  F016         	goto	u8920
 12353   002C5E  5002               	movf	(?___fltol+1)^0,w,c
 12354   002C60  E107               	bnz	u8921
 12355   002C62  0E0A               	movlw	10
 12356   002C64  5C01               	subwf	?___fltol^0,w,c
 12357   002C66  B0D8               	btfsc	status,0,c
 12358   002C68  EF38  F016         	goto	u8921
 12359   002C6C  EF3A  F016         	goto	u8920
 12360   002C70                     u8921:
 12361   002C70  EF4A  F016         	goto	l6882
 12362   002C74                     u8920:
 12363   002C74  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12364   002C78  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12365   002C7C  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12366   002C80  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12367   002C84  EC07  F02F         	call	___fltol	;wreg free
 12368   002C88  C001  F07B         	movff	?___fltol,efgtoa@d
 12369   002C8C  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
 12370   002C90  EF4F  F016         	goto	l1050
 12371   002C94                     l6882:
 12372   002C94  0E00               	movlw	0
 12373   002C96  0100               	movlb	0	; () banked
 12374   002C98  6F7C               	movwf	(efgtoa@d+1)& (0+255),b
 12375   002C9A  0E09               	movlw	9
 12376   002C9C  6F7B               	movwf	efgtoa@d& (0+255),b
 12377   002C9E                     l1050:
 12378                           
 12379                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 12380   002C9E  0100               	movlb	0	; () banked
 12381   002CA0  5178               	movf	efgtoa@pp& (0+255),w,b
 12382   002CA2  A4D8               	btfss	status,2,c
 12383   002CA4  EF56  F016         	goto	u8931
 12384   002CA8  EF58  F016         	goto	u8930
 12385   002CAC                     u8931:
 12386   002CAC  EF80  F016         	goto	l6902
 12387   002CB0                     u8930:
 12388   002CB0                     
 12389                           ; BSR set to: 0
 12390   002CB0  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 12391   002CB2  EF5F  F016         	goto	u8940
 12392   002CB6  EF5D  F016         	goto	u8941
 12393   002CBA                     u8941:
 12394   002CBA  EF80  F016         	goto	l6902
 12395   002CBE                     u8940:
 12396   002CBE                     
 12397                           ; BSR set to: 0
 12398                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 12399   002CBE  0E72               	movlw	low _dbuf
 12400   002CC0  2596               	addwf	efgtoa@n& (0+255),w,b
 12401   002CC2  6ED9               	movwf	fsr2l,c
 12402   002CC4  0E03               	movlw	high _dbuf
 12403   002CC6  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12404   002CC8  6EDA               	movwf	fsr2h,c
 12405   002CCA  0E2E               	movlw	46
 12406   002CCC  6EDF               	movwf	indf2,c
 12407   002CCE                     
 12408                           ; BSR set to: 0
 12409   002CCE  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12410   002CD0  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12411   002CD2                     
 12412                           ; BSR set to: 0
 12413                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 12414   002CD2  0781               	decf	efgtoa@w& (0+255),f,b
 12415   002CD4  A0D8               	btfss	status,0,c
 12416   002CD6  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12417   002CD8                     
 12418                           ; BSR set to: 0
 12419                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 12420   002CD8  0E01               	movlw	1
 12421   002CDA  6F78               	movwf	efgtoa@pp& (0+255),b
 12422   002CDC  EF80  F016         	goto	l6902
 12423   002CE0                     l6894:
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 12427   002CE0  0E72               	movlw	low _dbuf
 12428   002CE2  2596               	addwf	efgtoa@n& (0+255),w,b
 12429   002CE4  6ED9               	movwf	fsr2l,c
 12430   002CE6  0E03               	movlw	high _dbuf
 12431   002CE8  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12432   002CEA  6EDA               	movwf	fsr2h,c
 12433   002CEC  0E30               	movlw	48
 12434   002CEE  6EDF               	movwf	indf2,c
 12435   002CF0                     
 12436                           ; BSR set to: 0
 12437   002CF0  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12438   002CF2  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12439   002CF4                     
 12440                           ; BSR set to: 0
 12441                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 12442   002CF4  0781               	decf	efgtoa@w& (0+255),f,b
 12443   002CF6  A0D8               	btfss	status,0,c
 12444   002CF8  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12445   002CFA                     
 12446                           ; BSR set to: 0
 12447                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 12448   002CFA  0774               	decf	efgtoa@t& (0+255),f,b
 12449   002CFC  A0D8               	btfss	status,0,c
 12450   002CFE  0775               	decf	(efgtoa@t+1)& (0+255),f,b
 12451   002D00                     l6902:
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 12455   002D00  5174               	movf	efgtoa@t& (0+255),w,b
 12456   002D02  1175               	iorwf	(efgtoa@t+1)& (0+255),w,b
 12457   002D04  A4D8               	btfss	status,2,c
 12458   002D06  EF87  F016         	goto	u8951
 12459   002D0A  EF89  F016         	goto	u8950
 12460   002D0E                     u8951:
 12461   002D0E  EF70  F016         	goto	l6894
 12462   002D12                     u8950:
 12463   002D12                     
 12464                           ; BSR set to: 0
 12465                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 12466   002D12  0E72               	movlw	low _dbuf
 12467   002D14  2596               	addwf	efgtoa@n& (0+255),w,b
 12468   002D16  6ED9               	movwf	fsr2l,c
 12469   002D18  0E03               	movlw	high _dbuf
 12470   002D1A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12471   002D1C  6EDA               	movwf	fsr2h,c
 12472   002D1E  517B               	movf	efgtoa@d& (0+255),w,b
 12473   002D20  0F30               	addlw	48
 12474   002D22  6EDF               	movwf	indf2,c
 12475   002D24                     
 12476                           ; BSR set to: 0
 12477   002D24  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12478   002D26  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12479   002D28                     
 12480                           ; BSR set to: 0
 12481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 12482   002D28  0781               	decf	efgtoa@w& (0+255),f,b
 12483   002D2A  A0D8               	btfss	status,0,c
 12484   002D2C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12485   002D2E                     
 12486                           ; BSR set to: 0
 12487                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 12488   002D2E  C089  F051         	movff	efgtoa@h,___flsub@b
 12489   002D32  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
 12490   002D36  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
 12491   002D3A  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
 12492   002D3E  C08D  F013         	movff	efgtoa@l,___flmul@a
 12493   002D42  C08E  F014         	movff	efgtoa@l+1,___flmul@a+1
 12494   002D46  C08F  F015         	movff	efgtoa@l+2,___flmul@a+2
 12495   002D4A  C090  F016         	movff	efgtoa@l+3,___flmul@a+3
 12496   002D4E  C098  F00F         	movff	efgtoa@u,___flmul@b
 12497   002D52  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12498   002D56  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12499   002D5A  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12500   002D5E  EC0E  F020         	call	___flmul	;wreg free
 12501   002D62  C00F  F055         	movff	?___flmul,___flsub@a
 12502   002D66  C010  F056         	movff	?___flmul+1,___flsub@a+1
 12503   002D6A  C011  F057         	movff	?___flmul+2,___flsub@a+2
 12504   002D6E  C012  F058         	movff	?___flmul+3,___flsub@a+3
 12505   002D72  EC34  F036         	call	___flsub	;wreg free
 12506   002D76  C051  F089         	movff	?___flsub,efgtoa@h
 12507   002D7A  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
 12508   002D7E  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
 12509   002D82  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
 12510   002D86                     
 12511                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 12512   002D86  C098  F028         	movff	efgtoa@u,___fldiv@b
 12513   002D8A  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 12514   002D8E  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 12515   002D92  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 12516   002D96  0E00               	movlw	0
 12517   002D98  6E2C               	movwf	___fldiv@a^0,c
 12518   002D9A  0E00               	movlw	0
 12519   002D9C  6E2D               	movwf	(___fldiv@a+1)^0,c
 12520   002D9E  0E20               	movlw	32
 12521   002DA0  6E2E               	movwf	(___fldiv@a+2)^0,c
 12522   002DA2  0E41               	movlw	65
 12523   002DA4  6E2F               	movwf	(___fldiv@a+3)^0,c
 12524   002DA6  EC10  F024         	call	___fldiv	;wreg free
 12525   002DAA  C028  F098         	movff	?___fldiv,efgtoa@u
 12526   002DAE  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 12527   002DB2  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 12528   002DB6  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 12529   002DBA                     
 12530                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 12531   002DBA  0100               	movlb	0	; () banked
 12532   002DBC  0770               	decf	efgtoa@ne& (0+255),f,b
 12533   002DBE  A0D8               	btfss	status,0,c
 12534   002DC0  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
 12535   002DC2                     
 12536                           ; BSR set to: 0
 12537                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 12538   002DC2  4B87               	infsnz	efgtoa@i& (0+255),f,b
 12539   002DC4  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
 12540   002DC6                     l6918:
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12544   002DC6  517D               	movf	efgtoa@m& (0+255),w,b
 12545   002DC8  5D87               	subwf	efgtoa@i& (0+255),w,b
 12546   002DCA  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12547   002DCC  0A80               	xorlw	128
 12548   002DCE  6F6E               	movwf	??_efgtoa& (0+255),b
 12549   002DD0  517E               	movf	(efgtoa@m+1)& (0+255),w,b
 12550   002DD2  0A80               	xorlw	128
 12551   002DD4  596E               	subwfb	??_efgtoa& (0+255),w,b
 12552   002DD6  B0D8               	btfsc	status,0,c
 12553   002DD8  EFF0  F016         	goto	u8961
 12554   002DDC  EFF2  F016         	goto	u8960
 12555   002DE0                     u8961:
 12556   002DE0  EF00  F017         	goto	l6922
 12557   002DE4                     u8960:
 12558   002DE4                     
 12559                           ; BSR set to: 0
 12560   002DE4  BF97               	btfsc	(efgtoa@n+1)& (0+255),7,b
 12561   002DE6  EFFE  F016         	goto	u8971
 12562   002DEA  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12563   002DEC  E109               	bnz	u8970
 12564   002DEE  0E4B               	movlw	75
 12565   002DF0  5D96               	subwf	efgtoa@n& (0+255),w,b
 12566   002DF2  A0D8               	btfss	status,0,c
 12567   002DF4  EFFE  F016         	goto	u8971
 12568   002DF8  EF00  F017         	goto	u8970
 12569   002DFC                     u8971:
 12570   002DFC  EFFE  F015         	goto	l6878
 12571   002E00                     u8970:
 12572   002E00                     l6922:
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 12576   002E00  0E00               	movlw	0
 12577   002E02  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 12578   002E04  0E4F               	movlw	79
 12579   002E06  6F87               	movwf	efgtoa@i& (0+255),b
 12580   002E08                     
 12581                           ; BSR set to: 0
 12582                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 12583   002E08  0E72               	movlw	low _dbuf
 12584   002E0A  2587               	addwf	efgtoa@i& (0+255),w,b
 12585   002E0C  6ED9               	movwf	fsr2l,c
 12586   002E0E  0E03               	movlw	high _dbuf
 12587   002E10  2188               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12588   002E12  6EDA               	movwf	fsr2h,c
 12589   002E14  6ADF               	clrf	indf2,c
 12590   002E16                     
 12591                           ; BSR set to: 0
 12592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 12593   002E16  0E72               	movlw	low _dbuf
 12594   002E18  6F6E               	movwf	??_efgtoa& (0+255),b
 12595   002E1A  0E03               	movlw	high _dbuf
 12596   002E1C  6F6F               	movwf	(??_efgtoa+1)& (0+255),b
 12597   002E1E  5196               	movf	efgtoa@n& (0+255),w,b
 12598   002E20  5F6E               	subwf	??_efgtoa& (0+255),f,b
 12599   002E22  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12600   002E24  5B6F               	subwfb	(??_efgtoa+1)& (0+255),f,b
 12601   002E26  5187               	movf	efgtoa@i& (0+255),w,b
 12602   002E28  256E               	addwf	??_efgtoa& (0+255),w,b
 12603   002E2A  6E01               	movwf	memcpy@d1^0,c
 12604   002E2C  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12605   002E2E  216F               	addwfc	(??_efgtoa+1)& (0+255),w,b
 12606   002E30  6E02               	movwf	(memcpy@d1+1)^0,c
 12607   002E32  0E72               	movlw	low _dbuf
 12608   002E34  6E03               	movwf	memcpy@s1^0,c
 12609   002E36  0E03               	movlw	high _dbuf
 12610   002E38  6E04               	movwf	(memcpy@s1+1)^0,c
 12611   002E3A  C096  F005         	movff	efgtoa@n,memcpy@n
 12612   002E3E  C097  F006         	movff	efgtoa@n+1,memcpy@n+1
 12613   002E42  ECC3  F035         	call	_memcpy	;wreg free
 12614   002E46                     
 12615                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 12616   002E46  0100               	movlb	0	; () banked
 12617   002E48  5196               	movf	efgtoa@n& (0+255),w,b
 12618   002E4A  5D87               	subwf	efgtoa@i& (0+255),w,b
 12619   002E4C  6F96               	movwf	efgtoa@n& (0+255),b
 12620   002E4E  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12621   002E50  5988               	subwfb	(efgtoa@i+1)& (0+255),w,b
 12622   002E52  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 12623   002E54                     
 12624                           ; BSR set to: 0
 12625                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 12626   002E54  5191               	movf	efgtoa@sign& (0+255),w,b
 12627   002E56  A4D8               	btfss	status,2,c
 12628   002E58  EF30  F017         	goto	u8981
 12629   002E5C  EF33  F017         	goto	u8980
 12630   002E60                     u8981:
 12631   002E60  0E01               	movlw	1
 12632   002E62  EF34  F017         	goto	u8990
 12633   002E66                     u8980:
 12634   002E66  0E00               	movlw	0
 12635   002E68                     u8990:
 12636   002E68  6F87               	movwf	efgtoa@i& (0+255),b
 12637   002E6A  6B88               	clrf	(efgtoa@i+1)& (0+255),b
 12638   002E6C                     
 12639                           ; BSR set to: 0
 12640                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 12641   002E6C  5191               	movf	efgtoa@sign& (0+255),w,b
 12642   002E6E  B4D8               	btfsc	status,2,c
 12643   002E70  EF3C  F017         	goto	u9001
 12644   002E74  EF3E  F017         	goto	u9000
 12645   002E78                     u9001:
 12646   002E78  EF49  F017         	goto	l6936
 12647   002E7C                     u9000:
 12648   002E7C                     
 12649                           ; BSR set to: 0
 12650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 12651   002E7C  0796               	decf	efgtoa@n& (0+255),f,b
 12652   002E7E  A0D8               	btfss	status,0,c
 12653   002E80  0797               	decf	(efgtoa@n+1)& (0+255),f,b
 12654   002E82  0E72               	movlw	low _dbuf
 12655   002E84  2596               	addwf	efgtoa@n& (0+255),w,b
 12656   002E86  6ED9               	movwf	fsr2l,c
 12657   002E88  0E03               	movlw	high _dbuf
 12658   002E8A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12659   002E8C  6EDA               	movwf	fsr2h,c
 12660   002E8E  C091  FFDF         	movff	efgtoa@sign,indf2
 12661   002E92                     l6936:
 12662                           
 12663                           ; BSR set to: 0
 12664                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 12665   002E92  5187               	movf	efgtoa@i& (0+255),w,b
 12666   002E94  5F81               	subwf	efgtoa@w& (0+255),f,b
 12667   002E96  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12668   002E98  5B82               	subwfb	(efgtoa@w+1)& (0+255),f,b
 12669   002E9A                     
 12670                           ; BSR set to: 0
 12671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 12672   002E9A  C068  F00F         	movff	efgtoa@fp,pad@fp
 12673   002E9E  0E72               	movlw	low _dbuf
 12674   002EA0  2596               	addwf	efgtoa@n& (0+255),w,b
 12675   002EA2  6E10               	movwf	pad@buf^0,c
 12676   002EA4  0E03               	movlw	high _dbuf
 12677   002EA6  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12678   002EA8  6E11               	movwf	(pad@buf+1)^0,c
 12679   002EAA  C081  F012         	movff	efgtoa@w,pad@p
 12680   002EAE  C082  F013         	movff	efgtoa@w+1,pad@p+1
 12681   002EB2  EC65  F035         	call	_pad	;wreg free
 12682   002EB6                     l1017:
 12683   002EB6  0012               	return		;funcret
 12684   002EB8                     __end_of_efgtoa:
 12685                           	callstack 0
 12686                           
 12687 ;; *************** function _strcpy *****************
 12688 ;; Defined at:
 12689 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 12690 ;; Parameters:    Size  Location     Type
 12691 ;;  dest            2    0[COMRAM] PTR unsigned char 
 12692 ;;		 -> dbuf(80), fire_trigger_sensor(20), 
 12693 ;;  src             2    2[COMRAM] PTR const unsigned char 
 12694 ;;		 -> STR_21(4), STR_18(4), STR_3(10), STR_2(19), 
 12695 ;;		 -> STR_1(13), 
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;  d               2    4[COMRAM] PTR unsigned char 
 12698 ;;		 -> dbuf(80), fire_trigger_sensor(20), 
 12699 ;; Return value:  Size  Location     Type
 12700 ;;                  2    0[COMRAM] PTR unsigned char 
 12701 ;; Registers used:
 12702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12703 ;; Tracked objects:
 12704 ;;		On entry : 0/0
 12705 ;;		On exit  : 0/0
 12706 ;;		Unchanged: 0/0
 12707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12708 ;;      Params:         4       0       0       0       0       0       0       0       0
 12709 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12710 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12711 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12712 ;;Total ram usage:        6 bytes
 12713 ;; Hardware stack levels used: 1
 12714 ;; Hardware stack levels required when called: 1
 12715 ;; This function calls:
 12716 ;;		Nothing
 12717 ;; This function is called by:
 12718 ;;		_Handle_Fire_Events
 12719 ;;		_efgtoa
 12720 ;; This function uses a non-reentrant model
 12721 ;;
 12722                           
 12723                           	psect	text26
 12724   006D6A                     __ptext26:
 12725                           	callstack 0
 12726   006D6A                     _strcpy:
 12727                           	callstack 24
 12728   006D6A  C001  F005         	movff	strcpy@dest,strcpy@d
 12729   006D6E  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
 12730   006D72                     l6112:
 12731   006D72  C003  FFF6         	movff	strcpy@src,tblptrl
 12732   006D76  C004  FFF7         	movff	strcpy@src+1,tblptrh
 12733   006D7A  4A03               	infsnz	strcpy@src^0,f,c
 12734   006D7C  2A04               	incf	(strcpy@src+1)^0,f,c
 12735   006D7E                     	if	0	;tblptru may be non-zero
 12736   006D7E                     	endif
 12737   006D7E                     	if	0	;tblptru may be non-zero
 12738   006D7E                     	endif
 12739   006D7E  C005  FFD9         	movff	strcpy@d,fsr2l
 12740   006D82  C006  FFDA         	movff	strcpy@d+1,fsr2h
 12741   006D86  4A05               	infsnz	strcpy@d^0,f,c
 12742   006D88  2A06               	incf	(strcpy@d+1)^0,f,c
 12743   006D8A  0008               	tblrd		*
 12744   006D8C  CFF5 FFDF          	movff	tablat,indf2
 12745   006D90  50DF               	movf	indf2,w,c
 12746   006D92  A4D8               	btfss	status,2,c
 12747   006D94  EFCE  F036         	goto	u7611
 12748   006D98  EFD0  F036         	goto	u7610
 12749   006D9C                     u7611:
 12750   006D9C  EFB9  F036         	goto	l6112
 12751   006DA0                     u7610:
 12752   006DA0  0012               	return		;funcret
 12753   006DA2                     __end_of_strcpy:
 12754                           	callstack 0
 12755                           
 12756 ;; *************** function _memcpy *****************
 12757 ;; Defined at:
 12758 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 12759 ;; Parameters:    Size  Location     Type
 12760 ;;  d1              2    0[COMRAM] PTR void 
 12761 ;;		 -> dbuf(80), 
 12762 ;;  s1              2    2[COMRAM] PTR const void 
 12763 ;;		 -> dbuf(80), 
 12764 ;;  n               2    4[COMRAM] unsigned int 
 12765 ;; Auto vars:     Size  Location     Type
 12766 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12767 ;;		 -> dbuf(80), 
 12768 ;;  d               2    7[COMRAM] PTR unsigned char 
 12769 ;;		 -> dbuf(80), 
 12770 ;;  tmp             1    6[COMRAM] unsigned char 
 12771 ;; Return value:  Size  Location     Type
 12772 ;;                  2    0[COMRAM] PTR void 
 12773 ;; Registers used:
 12774 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12775 ;; Tracked objects:
 12776 ;;		On entry : 0/0
 12777 ;;		On exit  : 0/0
 12778 ;;		Unchanged: 0/0
 12779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12780 ;;      Params:         6       0       0       0       0       0       0       0       0
 12781 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12782 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12783 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12784 ;;Total ram usage:       11 bytes
 12785 ;; Hardware stack levels used: 1
 12786 ;; Hardware stack levels required when called: 1
 12787 ;; This function calls:
 12788 ;;		Nothing
 12789 ;; This function is called by:
 12790 ;;		_efgtoa
 12791 ;; This function uses a non-reentrant model
 12792 ;;
 12793                           
 12794                           	psect	text27
 12795   006B86                     __ptext27:
 12796                           	callstack 0
 12797   006B86                     _memcpy:
 12798                           	callstack 24
 12799   006B86  C003  F00A         	movff	memcpy@s1,memcpy@s
 12800   006B8A  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
 12801   006B8E  C001  F008         	movff	memcpy@d1,memcpy@d
 12802   006B92  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
 12803   006B96  EFDD  F035         	goto	l6676
 12804   006B9A                     l6668:
 12805   006B9A  C00A  FFD9         	movff	memcpy@s,fsr2l
 12806   006B9E  C00B  FFDA         	movff	memcpy@s+1,fsr2h
 12807   006BA2  50DF               	movf	indf2,w,c
 12808   006BA4  6E07               	movwf	memcpy@tmp^0,c
 12809   006BA6  4A0A               	infsnz	memcpy@s^0,f,c
 12810   006BA8  2A0B               	incf	(memcpy@s+1)^0,f,c
 12811   006BAA  C008  FFD9         	movff	memcpy@d,fsr2l
 12812   006BAE  C009  FFDA         	movff	memcpy@d+1,fsr2h
 12813   006BB2  C007  FFDF         	movff	memcpy@tmp,indf2
 12814   006BB6  4A08               	infsnz	memcpy@d^0,f,c
 12815   006BB8  2A09               	incf	(memcpy@d+1)^0,f,c
 12816   006BBA                     l6676:
 12817   006BBA  0605               	decf	memcpy@n^0,f,c
 12818   006BBC  A0D8               	btfss	status,0,c
 12819   006BBE  0606               	decf	(memcpy@n+1)^0,f,c
 12820   006BC0  2805               	incf	memcpy@n^0,w,c
 12821   006BC2  E106               	bnz	u8591
 12822   006BC4  2806               	incf	(memcpy@n+1)^0,w,c
 12823   006BC6  A4D8               	btfss	status,2,c
 12824   006BC8  EFE8  F035         	goto	u8591
 12825   006BCC  EFEA  F035         	goto	u8590
 12826   006BD0                     u8591:
 12827   006BD0  EFCD  F035         	goto	l6668
 12828   006BD4                     u8590:
 12829   006BD4  0012               	return		;funcret
 12830   006BD6                     __end_of_memcpy:
 12831                           	callstack 0
 12832                           
 12833 ;; *************** function _labs *****************
 12834 ;; Defined at:
 12835 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
 12836 ;; Parameters:    Size  Location     Type
 12837 ;;  a               4    0[COMRAM] long 
 12838 ;; Auto vars:     Size  Location     Type
 12839 ;;		None
 12840 ;; Return value:  Size  Location     Type
 12841 ;;                  4    0[COMRAM] long 
 12842 ;; Registers used:
 12843 ;;		wreg, status,2, status,0
 12844 ;; Tracked objects:
 12845 ;;		On entry : 0/0
 12846 ;;		On exit  : 0/0
 12847 ;;		Unchanged: 0/0
 12848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12849 ;;      Params:         4       0       0       0       0       0       0       0       0
 12850 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12851 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12852 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12853 ;;Total ram usage:        8 bytes
 12854 ;; Hardware stack levels used: 1
 12855 ;; Hardware stack levels required when called: 1
 12856 ;; This function calls:
 12857 ;;		Nothing
 12858 ;; This function is called by:
 12859 ;;		_efgtoa
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863                           	psect	text28
 12864   006B30                     __ptext28:
 12865                           	callstack 0
 12866   006B30                     _labs:
 12867                           	callstack 24
 12868   006B30  BE04               	btfsc	(labs@a+3)^0,7,c
 12869   006B32  EF9D  F035         	goto	u8481
 12870   006B36  EF9F  F035         	goto	u8480
 12871   006B3A                     u8481:
 12872   006B3A  EFA9  F035         	goto	l6634
 12873   006B3E                     u8480:
 12874   006B3E  C001  F001         	movff	labs@a,?_labs
 12875   006B42  C002  F002         	movff	labs@a+1,?_labs+1
 12876   006B46  C003  F003         	movff	labs@a+2,?_labs+2
 12877   006B4A  C004  F004         	movff	labs@a+3,?_labs+3
 12878   006B4E  EFC2  F035         	goto	l1183
 12879   006B52                     l6634:
 12880   006B52  C001  F005         	movff	labs@a,??_labs
 12881   006B56  C002  F006         	movff	labs@a+1,??_labs+1
 12882   006B5A  C003  F007         	movff	labs@a+2,??_labs+2
 12883   006B5E  C004  F008         	movff	labs@a+3,??_labs+3
 12884   006B62  1E05               	comf	??_labs^0,f,c
 12885   006B64  1E06               	comf	(??_labs+1)^0,f,c
 12886   006B66  1E07               	comf	(??_labs+2)^0,f,c
 12887   006B68  1E08               	comf	(??_labs+3)^0,f,c
 12888   006B6A  2A05               	incf	??_labs^0,f,c
 12889   006B6C  0E00               	movlw	0
 12890   006B6E  2206               	addwfc	(??_labs+1)^0,f,c
 12891   006B70  2207               	addwfc	(??_labs+2)^0,f,c
 12892   006B72  2208               	addwfc	(??_labs+3)^0,f,c
 12893   006B74  C005  F001         	movff	??_labs,?_labs
 12894   006B78  C006  F002         	movff	??_labs+1,?_labs+1
 12895   006B7C  C007  F003         	movff	??_labs+2,?_labs+2
 12896   006B80  C008  F004         	movff	??_labs+3,?_labs+3
 12897   006B84                     l1183:
 12898   006B84  0012               	return		;funcret
 12899   006B86                     __end_of_labs:
 12900                           	callstack 0
 12901                           
 12902 ;; *************** function _floorf *****************
 12903 ;; Defined at:
 12904 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;  x               4   64[COMRAM] float 
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;  u               4   80[COMRAM] struct .
 12909 ;;  m               4   74[COMRAM] unsigned long 
 12910 ;;  e               2   78[COMRAM] int 
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  4   64[COMRAM] float 
 12913 ;; Registers used:
 12914 ;;		wreg, status,2, status,0
 12915 ;; Tracked objects:
 12916 ;;		On entry : 0/0
 12917 ;;		On exit  : 0/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12920 ;;      Params:         4       0       0       0       0       0       0       0       0
 12921 ;;      Locals:        10       0       0       0       0       0       0       0       0
 12922 ;;      Temps:          6       0       0       0       0       0       0       0       0
 12923 ;;      Totals:        20       0       0       0       0       0       0       0       0
 12924 ;;Total ram usage:       20 bytes
 12925 ;; Hardware stack levels used: 1
 12926 ;; Hardware stack levels required when called: 1
 12927 ;; This function calls:
 12928 ;;		Nothing
 12929 ;; This function is called by:
 12930 ;;		_efgtoa
 12931 ;; This function uses a non-reentrant model
 12932 ;;
 12933                           
 12934                           	psect	text29
 12935   0053F2                     __ptext29:
 12936                           	callstack 0
 12937   0053F2                     _floorf:
 12938                           	callstack 24
 12939   0053F2  C314  F051         	movff	floorf@F521,floorf@u
 12940   0053F6  C315  F052         	movff	floorf@F521+1,floorf@u+1
 12941   0053FA  C316  F053         	movff	floorf@F521+2,floorf@u+2
 12942   0053FE  C317  F054         	movff	floorf@F521+3,floorf@u+3
 12943   005402  C041  F051         	movff	floorf@x,floorf@u
 12944   005406  C042  F052         	movff	floorf@x+1,floorf@u+1
 12945   00540A  C043  F053         	movff	floorf@x+2,floorf@u+2
 12946   00540E  C044  F054         	movff	floorf@x+3,floorf@u+3
 12947   005412  0E81               	movlw	129
 12948   005414  6E45               	movwf	??_floorf^0,c
 12949   005416  0EFF               	movlw	255
 12950   005418  6E46               	movwf	(??_floorf+1)^0,c
 12951   00541A  C051  F047         	movff	floorf@u,??_floorf+2
 12952   00541E  C052  F048         	movff	floorf@u+1,??_floorf+3
 12953   005422  C053  F049         	movff	floorf@u+2,??_floorf+4
 12954   005426  C054  F04A         	movff	floorf@u+3,??_floorf+5
 12955   00542A  0E18               	movlw	24
 12956   00542C  EF1D  F02A         	goto	u8490
 12957   005430                     u8495:
 12958   005430  90D8               	bcf	status,0,c
 12959   005432  324A               	rrcf	(??_floorf+5)^0,f,c
 12960   005434  3249               	rrcf	(??_floorf+4)^0,f,c
 12961   005436  3248               	rrcf	(??_floorf+3)^0,f,c
 12962   005438  3247               	rrcf	(??_floorf+2)^0,f,c
 12963   00543A                     u8490:
 12964   00543A  2EE8               	decfsz	wreg,f,c
 12965   00543C  EF18  F02A         	goto	u8495
 12966   005440  5047               	movf	(??_floorf+2)^0,w,c
 12967   005442  2445               	addwf	??_floorf^0,w,c
 12968   005444  6E4F               	movwf	floorf@e^0,c
 12969   005446  0E00               	movlw	0
 12970   005448  2046               	addwfc	(??_floorf+1)^0,w,c
 12971   00544A  6E50               	movwf	(floorf@e+1)^0,c
 12972   00544C  BE50               	btfsc	(floorf@e+1)^0,7,c
 12973   00544E  EF32  F02A         	goto	u8501
 12974   005452  5050               	movf	(floorf@e+1)^0,w,c
 12975   005454  E109               	bnz	u8500
 12976   005456  0E17               	movlw	23
 12977   005458  5C4F               	subwf	floorf@e^0,w,c
 12978   00545A  A0D8               	btfss	status,0,c
 12979   00545C  EF32  F02A         	goto	u8501
 12980   005460  EF34  F02A         	goto	u8500
 12981   005464                     u8501:
 12982   005464  EF3E  F02A         	goto	l6644
 12983   005468                     u8500:
 12984   005468                     l6642:
 12985   005468  C041  F041         	movff	floorf@x,?_floorf
 12986   00546C  C042  F042         	movff	floorf@x+1,?_floorf+1
 12987   005470  C043  F043         	movff	floorf@x+2,?_floorf+2
 12988   005474  C044  F044         	movff	floorf@x+3,?_floorf+3
 12989   005478  EF01  F02B         	goto	l1169
 12990   00547C                     l6644:
 12991   00547C  BE50               	btfsc	(floorf@e+1)^0,7,c
 12992   00547E  EF43  F02A         	goto	u8511
 12993   005482  EF45  F02A         	goto	u8510
 12994   005486                     u8511:
 12995   005486  EFB5  F02A         	goto	l6654
 12996   00548A                     u8510:
 12997   00548A  C04F  F045         	movff	floorf@e,??_floorf
 12998   00548E  0EFF               	movlw	255
 12999   005490  6E46               	movwf	(??_floorf+1)^0,c
 13000   005492  0EFF               	movlw	255
 13001   005494  6E47               	movwf	(??_floorf+2)^0,c
 13002   005496  0E7F               	movlw	127
 13003   005498  6E48               	movwf	(??_floorf+3)^0,c
 13004   00549A  0E00               	movlw	0
 13005   00549C  6E49               	movwf	(??_floorf+4)^0,c
 13006   00549E                     u8525:
 13007   00549E  6645               	tstfsz	??_floorf^0,c
 13008   0054A0  EF54  F02A         	goto	u8526
 13009   0054A4  EF5C  F02A         	goto	u8527
 13010   0054A8                     u8526:
 13011   0054A8  3449               	rlcf	(??_floorf+4)^0,w,c
 13012   0054AA  3249               	rrcf	(??_floorf+4)^0,f,c
 13013   0054AC  3248               	rrcf	(??_floorf+3)^0,f,c
 13014   0054AE  3247               	rrcf	(??_floorf+2)^0,f,c
 13015   0054B0  3246               	rrcf	(??_floorf+1)^0,f,c
 13016   0054B2  2E45               	decfsz	??_floorf^0,f,c
 13017   0054B4  EF4F  F02A         	goto	u8525
 13018   0054B8                     u8527:
 13019   0054B8  C046  F04B         	movff	??_floorf+1,floorf@m
 13020   0054BC  C047  F04C         	movff	??_floorf+2,floorf@m+1
 13021   0054C0  C048  F04D         	movff	??_floorf+3,floorf@m+2
 13022   0054C4  C049  F04E         	movff	??_floorf+4,floorf@m+3
 13023   0054C8  504B               	movf	floorf@m^0,w,c
 13024   0054CA  1451               	andwf	floorf@u^0,w,c
 13025   0054CC  6E45               	movwf	??_floorf^0,c
 13026   0054CE  504C               	movf	(floorf@m+1)^0,w,c
 13027   0054D0  1452               	andwf	(floorf@u+1)^0,w,c
 13028   0054D2  6E46               	movwf	(??_floorf+1)^0,c
 13029   0054D4  504D               	movf	(floorf@m+2)^0,w,c
 13030   0054D6  1453               	andwf	(floorf@u+2)^0,w,c
 13031   0054D8  6E47               	movwf	(??_floorf+2)^0,c
 13032   0054DA  504E               	movf	(floorf@m+3)^0,w,c
 13033   0054DC  1454               	andwf	(floorf@u+3)^0,w,c
 13034   0054DE  6E48               	movwf	(??_floorf+3)^0,c
 13035   0054E0  5045               	movf	??_floorf^0,w,c
 13036   0054E2  1046               	iorwf	(??_floorf+1)^0,w,c
 13037   0054E4  1047               	iorwf	(??_floorf+2)^0,w,c
 13038   0054E6  1048               	iorwf	(??_floorf+3)^0,w,c
 13039   0054E8  A4D8               	btfss	status,2,c
 13040   0054EA  EF79  F02A         	goto	u8531
 13041   0054EE  EF7B  F02A         	goto	u8530
 13042   0054F2                     u8531:
 13043   0054F2  EF7D  F02A         	goto	l6650
 13044   0054F6                     u8530:
 13045   0054F6  EF34  F02A         	goto	l6642
 13046   0054FA                     l6650:
 13047   0054FA  C051  F045         	movff	floorf@u,??_floorf
 13048   0054FE  C052  F046         	movff	floorf@u+1,??_floorf+1
 13049   005502  C053  F047         	movff	floorf@u+2,??_floorf+2
 13050   005506  C054  F048         	movff	floorf@u+3,??_floorf+3
 13051   00550A  0E20               	movlw	32
 13052   00550C  EF8D  F02A         	goto	u8540
 13053   005510                     u8545:
 13054   005510  90D8               	bcf	status,0,c
 13055   005512  3248               	rrcf	(??_floorf+3)^0,f,c
 13056   005514  3247               	rrcf	(??_floorf+2)^0,f,c
 13057   005516  3246               	rrcf	(??_floorf+1)^0,f,c
 13058   005518  3245               	rrcf	??_floorf^0,f,c
 13059   00551A                     u8540:
 13060   00551A  2EE8               	decfsz	wreg,f,c
 13061   00551C  EF88  F02A         	goto	u8545
 13062   005520  5045               	movf	??_floorf^0,w,c
 13063   005522  1046               	iorwf	(??_floorf+1)^0,w,c
 13064   005524  1047               	iorwf	(??_floorf+2)^0,w,c
 13065   005526  1048               	iorwf	(??_floorf+3)^0,w,c
 13066   005528  B4D8               	btfsc	status,2,c
 13067   00552A  EF99  F02A         	goto	u8551
 13068   00552E  EF9B  F02A         	goto	u8550
 13069   005532                     u8551:
 13070   005532  EFA3  F02A         	goto	l1172
 13071   005536                     u8550:
 13072   005536  504B               	movf	floorf@m^0,w,c
 13073   005538  2651               	addwf	floorf@u^0,f,c
 13074   00553A  504C               	movf	(floorf@m+1)^0,w,c
 13075   00553C  2252               	addwfc	(floorf@u+1)^0,f,c
 13076   00553E  504D               	movf	(floorf@m+2)^0,w,c
 13077   005540  2253               	addwfc	(floorf@u+2)^0,f,c
 13078   005542  504E               	movf	(floorf@m+3)^0,w,c
 13079   005544  2254               	addwfc	(floorf@u+3)^0,f,c
 13080   005546                     l1172:
 13081   005546  1C4B               	comf	floorf@m^0,w,c
 13082   005548  6E45               	movwf	??_floorf^0,c
 13083   00554A  1C4C               	comf	(floorf@m+1)^0,w,c
 13084   00554C  6E46               	movwf	(??_floorf+1)^0,c
 13085   00554E  1C4D               	comf	(floorf@m+2)^0,w,c
 13086   005550  6E47               	movwf	(??_floorf+2)^0,c
 13087   005552  1C4E               	comf	(floorf@m+3)^0,w,c
 13088   005554  6E48               	movwf	(??_floorf+3)^0,c
 13089   005556  5045               	movf	??_floorf^0,w,c
 13090   005558  1651               	andwf	floorf@u^0,f,c
 13091   00555A  5046               	movf	(??_floorf+1)^0,w,c
 13092   00555C  1652               	andwf	(floorf@u+1)^0,f,c
 13093   00555E  5047               	movf	(??_floorf+2)^0,w,c
 13094   005560  1653               	andwf	(floorf@u+2)^0,f,c
 13095   005562  5048               	movf	(??_floorf+3)^0,w,c
 13096   005564  1654               	andwf	(floorf@u+3)^0,f,c
 13097   005566  EFF9  F02A         	goto	l6662
 13098   00556A                     l6654:
 13099   00556A  C051  F045         	movff	floorf@u,??_floorf
 13100   00556E  C052  F046         	movff	floorf@u+1,??_floorf+1
 13101   005572  C053  F047         	movff	floorf@u+2,??_floorf+2
 13102   005576  C054  F048         	movff	floorf@u+3,??_floorf+3
 13103   00557A  0E20               	movlw	32
 13104   00557C  EFC5  F02A         	goto	u8560
 13105   005580                     u8565:
 13106   005580  90D8               	bcf	status,0,c
 13107   005582  3248               	rrcf	(??_floorf+3)^0,f,c
 13108   005584  3247               	rrcf	(??_floorf+2)^0,f,c
 13109   005586  3246               	rrcf	(??_floorf+1)^0,f,c
 13110   005588  3245               	rrcf	??_floorf^0,f,c
 13111   00558A                     u8560:
 13112   00558A  2EE8               	decfsz	wreg,f,c
 13113   00558C  EFC0  F02A         	goto	u8565
 13114   005590  5045               	movf	??_floorf^0,w,c
 13115   005592  1046               	iorwf	(??_floorf+1)^0,w,c
 13116   005594  1047               	iorwf	(??_floorf+2)^0,w,c
 13117   005596  1048               	iorwf	(??_floorf+3)^0,w,c
 13118   005598  A4D8               	btfss	status,2,c
 13119   00559A  EFD1  F02A         	goto	u8571
 13120   00559E  EFD3  F02A         	goto	u8570
 13121   0055A2                     u8571:
 13122   0055A2  EFDD  F02A         	goto	l6658
 13123   0055A6                     u8570:
 13124   0055A6  0E00               	movlw	0
 13125   0055A8  6E51               	movwf	floorf@u^0,c
 13126   0055AA  0E00               	movlw	0
 13127   0055AC  6E52               	movwf	(floorf@u+1)^0,c
 13128   0055AE  0E00               	movlw	0
 13129   0055B0  6E53               	movwf	(floorf@u+2)^0,c
 13130   0055B2  0E00               	movlw	0
 13131   0055B4  6E54               	movwf	(floorf@u+3)^0,c
 13132   0055B6  EFF9  F02A         	goto	l6662
 13133   0055BA                     l6658:
 13134   0055BA  90D8               	bcf	status,0,c
 13135   0055BC  3451               	rlcf	floorf@u^0,w,c
 13136   0055BE  6E45               	movwf	??_floorf^0,c
 13137   0055C0  3452               	rlcf	(floorf@u+1)^0,w,c
 13138   0055C2  6E46               	movwf	(??_floorf+1)^0,c
 13139   0055C4  3453               	rlcf	(floorf@u+2)^0,w,c
 13140   0055C6  6E47               	movwf	(??_floorf+2)^0,c
 13141   0055C8  3454               	rlcf	(floorf@u+3)^0,w,c
 13142   0055CA  6E48               	movwf	(??_floorf+3)^0,c
 13143   0055CC  5045               	movf	??_floorf^0,w,c
 13144   0055CE  1046               	iorwf	(??_floorf+1)^0,w,c
 13145   0055D0  1047               	iorwf	(??_floorf+2)^0,w,c
 13146   0055D2  1048               	iorwf	(??_floorf+3)^0,w,c
 13147   0055D4  B4D8               	btfsc	status,2,c
 13148   0055D6  EFEF  F02A         	goto	u8581
 13149   0055DA  EFF1  F02A         	goto	u8580
 13150   0055DE                     u8581:
 13151   0055DE  EFF9  F02A         	goto	l6662
 13152   0055E2                     u8580:
 13153   0055E2  0E00               	movlw	0
 13154   0055E4  6E51               	movwf	floorf@u^0,c
 13155   0055E6  0E00               	movlw	0
 13156   0055E8  6E52               	movwf	(floorf@u+1)^0,c
 13157   0055EA  0E80               	movlw	128
 13158   0055EC  6E53               	movwf	(floorf@u+2)^0,c
 13159   0055EE  0EBF               	movlw	191
 13160   0055F0  6E54               	movwf	(floorf@u+3)^0,c
 13161   0055F2                     l6662:
 13162   0055F2  C051  F041         	movff	floorf@u,?_floorf
 13163   0055F6  C052  F042         	movff	floorf@u+1,?_floorf+1
 13164   0055FA  C053  F043         	movff	floorf@u+2,?_floorf+2
 13165   0055FE  C054  F044         	movff	floorf@u+3,?_floorf+3
 13166   005602                     l1169:
 13167   005602  0012               	return		;funcret
 13168   005604                     __end_of_floorf:
 13169                           	callstack 0
 13170                           
 13171 ;; *************** function ___fpclassifyf *****************
 13172 ;; Defined at:
 13173 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;  x               4    0[COMRAM] float 
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;  u               4   10[COMRAM] struct .
 13178 ;;  e               2    8[COMRAM] int 
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  2    0[COMRAM] int 
 13181 ;; Registers used:
 13182 ;;		wreg, status,2, status,0
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13188 ;;      Params:         4       0       0       0       0       0       0       0       0
 13189 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13190 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13191 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13192 ;;Total ram usage:       14 bytes
 13193 ;; Hardware stack levels used: 1
 13194 ;; Hardware stack levels required when called: 1
 13195 ;; This function calls:
 13196 ;;		Nothing
 13197 ;; This function is called by:
 13198 ;;		_efgtoa
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text30
 13203   00621E                     __ptext30:
 13204                           	callstack 0
 13205   00621E                     ___fpclassifyf:
 13206                           	callstack 24
 13207   00621E  C318  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 13208   006222  C319  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 13209   006226  C31A  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 13210   00622A  C31B  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 13211   00622E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 13212   006232  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 13213   006236  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 13214   00623A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 13215   00623E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13216   006242  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13217   006246  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13218   00624A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13219   00624E  0E18               	movlw	24
 13220   006250  EF2F  F031         	goto	u8410
 13221   006254                     u8415:
 13222   006254  90D8               	bcf	status,0,c
 13223   006256  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 13224   006258  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 13225   00625A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 13226   00625C  3205               	rrcf	??___fpclassifyf^0,f,c
 13227   00625E                     u8410:
 13228   00625E  2EE8               	decfsz	wreg,f,c
 13229   006260  EF2A  F031         	goto	u8415
 13230   006264  5005               	movf	??___fpclassifyf^0,w,c
 13231   006266  6E09               	movwf	___fpclassifyf@e^0,c
 13232   006268  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 13233   00626A  5009               	movf	___fpclassifyf@e^0,w,c
 13234   00626C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13235   00626E  A4D8               	btfss	status,2,c
 13236   006270  EF3C  F031         	goto	u8421
 13237   006274  EF3E  F031         	goto	u8420
 13238   006278                     u8421:
 13239   006278  EF5E  F031         	goto	l6620
 13240   00627C                     u8420:
 13241   00627C  90D8               	bcf	status,0,c
 13242   00627E  340B               	rlcf	___fpclassifyf@u^0,w,c
 13243   006280  6E05               	movwf	??___fpclassifyf^0,c
 13244   006282  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 13245   006284  6E06               	movwf	(??___fpclassifyf+1)^0,c
 13246   006286  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 13247   006288  6E07               	movwf	(??___fpclassifyf+2)^0,c
 13248   00628A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 13249   00628C  6E08               	movwf	(??___fpclassifyf+3)^0,c
 13250   00628E  5005               	movf	??___fpclassifyf^0,w,c
 13251   006290  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13252   006292  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13253   006294  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13254   006296  A4D8               	btfss	status,2,c
 13255   006298  EF50  F031         	goto	u8431
 13256   00629C  EF52  F031         	goto	u8430
 13257   0062A0                     u8431:
 13258   0062A0  EF58  F031         	goto	l6616
 13259   0062A4                     u8430:
 13260   0062A4  0E00               	movlw	0
 13261   0062A6  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13262   0062A8  0E02               	movlw	2
 13263   0062AA  6E01               	movwf	?___fpclassifyf^0,c
 13264   0062AC  EF8D  F031         	goto	l1155
 13265   0062B0                     l6616:
 13266   0062B0  0E00               	movlw	0
 13267   0062B2  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13268   0062B4  0E03               	movlw	3
 13269   0062B6  6E01               	movwf	?___fpclassifyf^0,c
 13270   0062B8  EF8D  F031         	goto	l1155
 13271   0062BC                     l6620:
 13272   0062BC  2809               	incf	___fpclassifyf@e^0,w,c
 13273   0062BE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13274   0062C0  A4D8               	btfss	status,2,c
 13275   0062C2  EF65  F031         	goto	u8441
 13276   0062C6  EF67  F031         	goto	u8440
 13277   0062CA                     u8441:
 13278   0062CA  EF89  F031         	goto	l6626
 13279   0062CE                     u8440:
 13280   0062CE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13281   0062D2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13282   0062D6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13283   0062DA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13284   0062DE  0E09               	movlw	9
 13285   0062E0                     u8455:
 13286   0062E0  90D8               	bcf	status,0,c
 13287   0062E2  3605               	rlcf	??___fpclassifyf^0,f,c
 13288   0062E4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 13289   0062E6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 13290   0062E8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 13291   0062EA  2EE8               	decfsz	wreg,f,c
 13292   0062EC  EF70  F031         	goto	u8455
 13293   0062F0  5005               	movf	??___fpclassifyf^0,w,c
 13294   0062F2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13295   0062F4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13296   0062F6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13297   0062F8  B4D8               	btfsc	status,2,c
 13298   0062FA  EF81  F031         	goto	u8461
 13299   0062FE  EF84  F031         	goto	u8460
 13300   006302                     u8461:
 13301   006302  0E01               	movlw	1
 13302   006304  EF85  F031         	goto	u8470
 13303   006308                     u8460:
 13304   006308  0E00               	movlw	0
 13305   00630A                     u8470:
 13306   00630A  6E01               	movwf	?___fpclassifyf^0,c
 13307   00630C  6A02               	clrf	(?___fpclassifyf+1)^0,c
 13308   00630E  EF8D  F031         	goto	l1155
 13309   006312                     l6626:
 13310   006312  0E00               	movlw	0
 13311   006314  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13312   006316  0E04               	movlw	4
 13313   006318  6E01               	movwf	?___fpclassifyf^0,c
 13314   00631A                     l1155:
 13315   00631A  0012               	return		;funcret
 13316   00631C                     __end_of___fpclassifyf:
 13317                           	callstack 0
 13318                           
 13319 ;; *************** function ___fltol *****************
 13320 ;; Defined at:
 13321 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 13322 ;; Parameters:    Size  Location     Type
 13323 ;;  f1              4    0[COMRAM] int 
 13324 ;; Auto vars:     Size  Location     Type
 13325 ;;  exp1            1    9[COMRAM] unsigned char 
 13326 ;;  sign1           1    8[COMRAM] unsigned char 
 13327 ;; Return value:  Size  Location     Type
 13328 ;;                  4    0[COMRAM] long 
 13329 ;; Registers used:
 13330 ;;		wreg, status,2, status,0
 13331 ;; Tracked objects:
 13332 ;;		On entry : 0/0
 13333 ;;		On exit  : 0/0
 13334 ;;		Unchanged: 0/0
 13335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13336 ;;      Params:         4       0       0       0       0       0       0       0       0
 13337 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13338 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13339 ;;      Totals:        10       0       0       0       0       0       0       0       0
 13340 ;;Total ram usage:       10 bytes
 13341 ;; Hardware stack levels used: 1
 13342 ;; Hardware stack levels required when called: 1
 13343 ;; This function calls:
 13344 ;;		Nothing
 13345 ;; This function is called by:
 13346 ;;		_efgtoa
 13347 ;; This function uses a non-reentrant model
 13348 ;;
 13349                           
 13350                           	psect	text31
 13351   005E0E                     __ptext31:
 13352                           	callstack 0
 13353   005E0E                     ___fltol:
 13354                           	callstack 24
 13355   005E0E  3403               	rlcf	(___fltol@f1+2)^0,w,c
 13356   005E10  3404               	rlcf	(___fltol@f1+3)^0,w,c
 13357   005E12  6E0A               	movwf	___fltol@exp1^0,c
 13358   005E14  500A               	movf	___fltol@exp1^0,w,c
 13359   005E16  A4D8               	btfss	status,2,c
 13360   005E18  EF10  F02F         	goto	u8281
 13361   005E1C  EF12  F02F         	goto	u8280
 13362   005E20                     u8281:
 13363   005E20  EF1C  F02F         	goto	l6538
 13364   005E24                     u8280:
 13365   005E24                     l6534:
 13366   005E24  0E00               	movlw	0
 13367   005E26  6E01               	movwf	?___fltol^0,c
 13368   005E28  0E00               	movlw	0
 13369   005E2A  6E02               	movwf	(?___fltol+1)^0,c
 13370   005E2C  0E00               	movlw	0
 13371   005E2E  6E03               	movwf	(?___fltol+2)^0,c
 13372   005E30  0E00               	movlw	0
 13373   005E32  6E04               	movwf	(?___fltol+3)^0,c
 13374   005E34  EF89  F02F         	goto	l574
 13375   005E38                     l6538:
 13376   005E38  C001  F005         	movff	___fltol@f1,??___fltol
 13377   005E3C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
 13378   005E40  C003  F007         	movff	___fltol@f1+2,??___fltol+2
 13379   005E44  C004  F008         	movff	___fltol@f1+3,??___fltol+3
 13380   005E48  0E20               	movlw	32
 13381   005E4A  EF2C  F02F         	goto	u8290
 13382   005E4E                     u8295:
 13383   005E4E  90D8               	bcf	status,0,c
 13384   005E50  3208               	rrcf	(??___fltol+3)^0,f,c
 13385   005E52  3207               	rrcf	(??___fltol+2)^0,f,c
 13386   005E54  3206               	rrcf	(??___fltol+1)^0,f,c
 13387   005E56  3205               	rrcf	??___fltol^0,f,c
 13388   005E58                     u8290:
 13389   005E58  2EE8               	decfsz	wreg,f,c
 13390   005E5A  EF27  F02F         	goto	u8295
 13391   005E5E  5005               	movf	??___fltol^0,w,c
 13392   005E60  6E09               	movwf	___fltol@sign1^0,c
 13393   005E62  8E03               	bsf	(___fltol@f1+2)^0,7,c
 13394   005E64  0EFF               	movlw	255
 13395   005E66  1601               	andwf	___fltol@f1^0,f,c
 13396   005E68  0EFF               	movlw	255
 13397   005E6A  1602               	andwf	(___fltol@f1+1)^0,f,c
 13398   005E6C  0EFF               	movlw	255
 13399   005E6E  1603               	andwf	(___fltol@f1+2)^0,f,c
 13400   005E70  0E00               	movlw	0
 13401   005E72  1604               	andwf	(___fltol@f1+3)^0,f,c
 13402   005E74  0E96               	movlw	150
 13403   005E76  5E0A               	subwf	___fltol@exp1^0,f,c
 13404   005E78  BE0A               	btfsc	___fltol@exp1^0,7,c
 13405   005E7A  EF43  F02F         	goto	u8300
 13406   005E7E  EF41  F02F         	goto	u8301
 13407   005E82                     u8301:
 13408   005E82  EF59  F02F         	goto	l6558
 13409   005E86                     u8300:
 13410   005E86  500A               	movf	___fltol@exp1^0,w,c
 13411   005E88  0A80               	xorlw	128
 13412   005E8A  0F97               	addlw	151
 13413   005E8C  B0D8               	btfsc	status,0,c
 13414   005E8E  EF4B  F02F         	goto	u8311
 13415   005E92  EF4D  F02F         	goto	u8310
 13416   005E96                     u8311:
 13417   005E96  EF4F  F02F         	goto	l6554
 13418   005E9A                     u8310:
 13419   005E9A  EF12  F02F         	goto	l6534
 13420   005E9E                     l6554:
 13421   005E9E  90D8               	bcf	status,0,c
 13422   005EA0  3204               	rrcf	(___fltol@f1+3)^0,f,c
 13423   005EA2  3203               	rrcf	(___fltol@f1+2)^0,f,c
 13424   005EA4  3202               	rrcf	(___fltol@f1+1)^0,f,c
 13425   005EA6  3201               	rrcf	___fltol@f1^0,f,c
 13426   005EA8  3E0A               	incfsz	___fltol@exp1^0,f,c
 13427   005EAA  EF4F  F02F         	goto	l6554
 13428   005EAE  EF71  F02F         	goto	l6568
 13429   005EB2                     l6558:
 13430   005EB2  0E1F               	movlw	31
 13431   005EB4  640A               	cpfsgt	___fltol@exp1^0,c
 13432   005EB6  EF5F  F02F         	goto	u8321
 13433   005EBA  EF61  F02F         	goto	u8320
 13434   005EBE                     u8321:
 13435   005EBE  EF69  F02F         	goto	l6566
 13436   005EC2                     u8320:
 13437   005EC2  EF12  F02F         	goto	l6534
 13438   005EC6                     l6564:
 13439   005EC6  90D8               	bcf	status,0,c
 13440   005EC8  3601               	rlcf	___fltol@f1^0,f,c
 13441   005ECA  3602               	rlcf	(___fltol@f1+1)^0,f,c
 13442   005ECC  3603               	rlcf	(___fltol@f1+2)^0,f,c
 13443   005ECE  3604               	rlcf	(___fltol@f1+3)^0,f,c
 13444   005ED0  060A               	decf	___fltol@exp1^0,f,c
 13445   005ED2                     l6566:
 13446   005ED2  500A               	movf	___fltol@exp1^0,w,c
 13447   005ED4  A4D8               	btfss	status,2,c
 13448   005ED6  EF6F  F02F         	goto	u8331
 13449   005EDA  EF71  F02F         	goto	u8330
 13450   005EDE                     u8331:
 13451   005EDE  EF63  F02F         	goto	l6564
 13452   005EE2                     u8330:
 13453   005EE2                     l6568:
 13454   005EE2  5009               	movf	___fltol@sign1^0,w,c
 13455   005EE4  B4D8               	btfsc	status,2,c
 13456   005EE6  EF77  F02F         	goto	u8341
 13457   005EEA  EF79  F02F         	goto	u8340
 13458   005EEE                     u8341:
 13459   005EEE  EF81  F02F         	goto	l6572
 13460   005EF2                     u8340:
 13461   005EF2  1E04               	comf	(___fltol@f1+3)^0,f,c
 13462   005EF4  1E03               	comf	(___fltol@f1+2)^0,f,c
 13463   005EF6  1E02               	comf	(___fltol@f1+1)^0,f,c
 13464   005EF8  6C01               	negf	___fltol@f1^0,c
 13465   005EFA  0E00               	movlw	0
 13466   005EFC  2202               	addwfc	(___fltol@f1+1)^0,f,c
 13467   005EFE  2203               	addwfc	(___fltol@f1+2)^0,f,c
 13468   005F00  2204               	addwfc	(___fltol@f1+3)^0,f,c
 13469   005F02                     l6572:
 13470   005F02  C001  F001         	movff	___fltol@f1,?___fltol
 13471   005F06  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 13472   005F0A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 13473   005F0E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 13474   005F12                     l574:
 13475   005F12  0012               	return		;funcret
 13476   005F14                     __end_of___fltol:
 13477                           	callstack 0
 13478                           
 13479 ;; *************** function ___flsub *****************
 13480 ;; Defined at:
 13481 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13482 ;; Parameters:    Size  Location     Type
 13483 ;;  b               4   80[COMRAM] long 
 13484 ;;  a               4   84[COMRAM] long 
 13485 ;; Auto vars:     Size  Location     Type
 13486 ;;		None
 13487 ;; Return value:  Size  Location     Type
 13488 ;;                  4   80[COMRAM] long 
 13489 ;; Registers used:
 13490 ;;		wreg, status,2, status,0, cstack
 13491 ;; Tracked objects:
 13492 ;;		On entry : 0/0
 13493 ;;		On exit  : 0/0
 13494 ;;		Unchanged: 0/0
 13495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13496 ;;      Params:         8       0       0       0       0       0       0       0       0
 13497 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13498 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13499 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13500 ;;Total ram usage:        8 bytes
 13501 ;; Hardware stack levels used: 1
 13502 ;; Hardware stack levels required when called: 2
 13503 ;; This function calls:
 13504 ;;		___fladd
 13505 ;; This function is called by:
 13506 ;;		_main
 13507 ;;		_Handle_Fire_Events
 13508 ;;		_Handle_Test_Events
 13509 ;;		_Read_Sensors
 13510 ;;		_efgtoa
 13511 ;;		_powf
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           	psect	text32
 13516   006C68                     __ptext32:
 13517                           	callstack 0
 13518   006C68                     ___flsub:
 13519                           	callstack 28
 13520   006C68  0E00               	movlw	0
 13521   006C6A  1A55               	xorwf	___flsub@a^0,f,c
 13522   006C6C  0E00               	movlw	0
 13523   006C6E  1A56               	xorwf	(___flsub@a+1)^0,f,c
 13524   006C70  0E00               	movlw	0
 13525   006C72  1A57               	xorwf	(___flsub@a+2)^0,f,c
 13526   006C74  0E80               	movlw	128
 13527   006C76  1A58               	xorwf	(___flsub@a+3)^0,f,c
 13528   006C78  C051  F041         	movff	___flsub@b,___fladd@b
 13529   006C7C  C052  F042         	movff	___flsub@b+1,___fladd@b+1
 13530   006C80  C053  F043         	movff	___flsub@b+2,___fladd@b+2
 13531   006C84  C054  F044         	movff	___flsub@b+3,___fladd@b+3
 13532   006C88  C055  F045         	movff	___flsub@a,___fladd@a
 13533   006C8C  C056  F046         	movff	___flsub@a+1,___fladd@a+1
 13534   006C90  C057  F047         	movff	___flsub@a+2,___fladd@a+2
 13535   006C94  C058  F048         	movff	___flsub@a+3,___fladd@a+3
 13536   006C98  ECB3  F01D         	call	___fladd	;wreg free
 13537   006C9C  C041  F051         	movff	?___fladd,?___flsub
 13538   006CA0  C042  F052         	movff	?___fladd+1,?___flsub+1
 13539   006CA4  C043  F053         	movff	?___fladd+2,?___flsub+2
 13540   006CA8  C044  F054         	movff	?___fladd+3,?___flsub+3
 13541   006CAC  0012               	return		;funcret
 13542   006CAE                     __end_of___flsub:
 13543                           	callstack 0
 13544                           
 13545 ;; *************** function ___fladd *****************
 13546 ;; Defined at:
 13547 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13548 ;; Parameters:    Size  Location     Type
 13549 ;;  b               4   64[COMRAM] long 
 13550 ;;  a               4   68[COMRAM] long 
 13551 ;; Auto vars:     Size  Location     Type
 13552 ;;  grs             1   79[COMRAM] unsigned char 
 13553 ;;  bexp            1   78[COMRAM] unsigned char 
 13554 ;;  aexp            1   77[COMRAM] unsigned char 
 13555 ;;  signs           1   76[COMRAM] unsigned char 
 13556 ;; Return value:  Size  Location     Type
 13557 ;;                  4   64[COMRAM] unsigned char 
 13558 ;; Registers used:
 13559 ;;		wreg, status,2, status,0
 13560 ;; Tracked objects:
 13561 ;;		On entry : 0/0
 13562 ;;		On exit  : 0/0
 13563 ;;		Unchanged: 0/0
 13564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13565 ;;      Params:         8       0       0       0       0       0       0       0       0
 13566 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13567 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13568 ;;      Totals:        16       0       0       0       0       0       0       0       0
 13569 ;;Total ram usage:       16 bytes
 13570 ;; Hardware stack levels used: 1
 13571 ;; Hardware stack levels required when called: 1
 13572 ;; This function calls:
 13573 ;;		Nothing
 13574 ;; This function is called by:
 13575 ;;		_main
 13576 ;;		_Read_Sensors
 13577 ;;		_Apply_Filter
 13578 ;;		___flsub
 13579 ;;		_efgtoa
 13580 ;;		_powf
 13581 ;; This function uses a non-reentrant model
 13582 ;;
 13583                           
 13584                           	psect	text33
 13585   003B66                     __ptext33:
 13586                           	callstack 0
 13587   003B66                     ___fladd:
 13588                           	callstack 28
 13589   003B66  5044               	movf	(___fladd@b+3)^0,w,c
 13590   003B68  0B80               	andlw	128
 13591   003B6A  6E4D               	movwf	___fladd@signs^0,c
 13592   003B6C  5044               	movf	(___fladd@b+3)^0,w,c
 13593   003B6E  2444               	addwf	(___fladd@b+3)^0,w,c
 13594   003B70  6E4F               	movwf	___fladd@bexp^0,c
 13595   003B72  AE43               	btfss	(___fladd@b+2)^0,7,c
 13596   003B74  EFBE  F01D         	goto	u7211
 13597   003B78  EFC0  F01D         	goto	u7210
 13598   003B7C                     u7211:
 13599   003B7C  EFC1  F01D         	goto	l5914
 13600   003B80                     u7210:
 13601   003B80  804F               	bsf	___fladd@bexp^0,0,c
 13602   003B82                     l5914:
 13603   003B82  504F               	movf	___fladd@bexp^0,w,c
 13604   003B84  B4D8               	btfsc	status,2,c
 13605   003B86  EFC7  F01D         	goto	u7221
 13606   003B8A  EFC9  F01D         	goto	u7220
 13607   003B8E                     u7221:
 13608   003B8E  EFDD  F01D         	goto	l5924
 13609   003B92                     u7220:
 13610   003B92  284F               	incf	___fladd@bexp^0,w,c
 13611   003B94  A4D8               	btfss	status,2,c
 13612   003B96  EFCF  F01D         	goto	u7231
 13613   003B9A  EFD1  F01D         	goto	u7230
 13614   003B9E                     u7231:
 13615   003B9E  EFD9  F01D         	goto	l5920
 13616   003BA2                     u7230:
 13617   003BA2  0E00               	movlw	0
 13618   003BA4  6E41               	movwf	___fladd@b^0,c
 13619   003BA6  0E00               	movlw	0
 13620   003BA8  6E42               	movwf	(___fladd@b+1)^0,c
 13621   003BAA  0E00               	movlw	0
 13622   003BAC  6E43               	movwf	(___fladd@b+2)^0,c
 13623   003BAE  0E00               	movlw	0
 13624   003BB0  6E44               	movwf	(___fladd@b+3)^0,c
 13625   003BB2                     l5920:
 13626   003BB2  8E43               	bsf	(___fladd@b+2)^0,7,c
 13627   003BB4  6A44               	clrf	(___fladd@b+3)^0,c
 13628   003BB6  EFE5  F01D         	goto	l5926
 13629   003BBA                     l5924:
 13630   003BBA  0E00               	movlw	0
 13631   003BBC  6E41               	movwf	___fladd@b^0,c
 13632   003BBE  0E00               	movlw	0
 13633   003BC0  6E42               	movwf	(___fladd@b+1)^0,c
 13634   003BC2  0E00               	movlw	0
 13635   003BC4  6E43               	movwf	(___fladd@b+2)^0,c
 13636   003BC6  0E00               	movlw	0
 13637   003BC8  6E44               	movwf	(___fladd@b+3)^0,c
 13638   003BCA                     l5926:
 13639   003BCA  5048               	movf	(___fladd@a+3)^0,w,c
 13640   003BCC  0B80               	andlw	128
 13641   003BCE  6E4E               	movwf	___fladd@aexp^0,c
 13642   003BD0  504D               	movf	___fladd@signs^0,w,c
 13643   003BD2  184E               	xorwf	___fladd@aexp^0,w,c
 13644   003BD4  B4D8               	btfsc	status,2,c
 13645   003BD6  EFEF  F01D         	goto	u7241
 13646   003BDA  EFF1  F01D         	goto	u7240
 13647   003BDE                     u7241:
 13648   003BDE  EFF2  F01D         	goto	l5932
 13649   003BE2                     u7240:
 13650   003BE2  8C4D               	bsf	___fladd@signs^0,6,c
 13651   003BE4                     l5932:
 13652   003BE4  5048               	movf	(___fladd@a+3)^0,w,c
 13653   003BE6  2448               	addwf	(___fladd@a+3)^0,w,c
 13654   003BE8  6E4E               	movwf	___fladd@aexp^0,c
 13655   003BEA  AE47               	btfss	(___fladd@a+2)^0,7,c
 13656   003BEC  EFFA  F01D         	goto	u7251
 13657   003BF0  EFFC  F01D         	goto	u7250
 13658   003BF4                     u7251:
 13659   003BF4  EFFD  F01D         	goto	l5938
 13660   003BF8                     u7250:
 13661   003BF8  804E               	bsf	___fladd@aexp^0,0,c
 13662   003BFA                     l5938:
 13663   003BFA  504E               	movf	___fladd@aexp^0,w,c
 13664   003BFC  B4D8               	btfsc	status,2,c
 13665   003BFE  EF03  F01E         	goto	u7261
 13666   003C02  EF05  F01E         	goto	u7260
 13667   003C06                     u7261:
 13668   003C06  EF19  F01E         	goto	l5948
 13669   003C0A                     u7260:
 13670   003C0A  284E               	incf	___fladd@aexp^0,w,c
 13671   003C0C  A4D8               	btfss	status,2,c
 13672   003C0E  EF0B  F01E         	goto	u7271
 13673   003C12  EF0D  F01E         	goto	u7270
 13674   003C16                     u7271:
 13675   003C16  EF15  F01E         	goto	l5944
 13676   003C1A                     u7270:
 13677   003C1A  0E00               	movlw	0
 13678   003C1C  6E45               	movwf	___fladd@a^0,c
 13679   003C1E  0E00               	movlw	0
 13680   003C20  6E46               	movwf	(___fladd@a+1)^0,c
 13681   003C22  0E00               	movlw	0
 13682   003C24  6E47               	movwf	(___fladd@a+2)^0,c
 13683   003C26  0E00               	movlw	0
 13684   003C28  6E48               	movwf	(___fladd@a+3)^0,c
 13685   003C2A                     l5944:
 13686   003C2A  8E47               	bsf	(___fladd@a+2)^0,7,c
 13687   003C2C  6A48               	clrf	(___fladd@a+3)^0,c
 13688   003C2E  EF21  F01E         	goto	l5950
 13689   003C32                     l5948:
 13690   003C32  0E00               	movlw	0
 13691   003C34  6E45               	movwf	___fladd@a^0,c
 13692   003C36  0E00               	movlw	0
 13693   003C38  6E46               	movwf	(___fladd@a+1)^0,c
 13694   003C3A  0E00               	movlw	0
 13695   003C3C  6E47               	movwf	(___fladd@a+2)^0,c
 13696   003C3E  0E00               	movlw	0
 13697   003C40  6E48               	movwf	(___fladd@a+3)^0,c
 13698   003C42                     l5950:
 13699   003C42  504F               	movf	___fladd@bexp^0,w,c
 13700   003C44  5C4E               	subwf	___fladd@aexp^0,w,c
 13701   003C46  B0D8               	btfsc	status,0,c
 13702   003C48  EF28  F01E         	goto	u7281
 13703   003C4C  EF2A  F01E         	goto	u7280
 13704   003C50                     u7281:
 13705   003C50  EF51  F01E         	goto	l5986
 13706   003C54                     u7280:
 13707   003C54  AC4D               	btfss	___fladd@signs^0,6,c
 13708   003C56  EF2F  F01E         	goto	u7291
 13709   003C5A  EF31  F01E         	goto	u7290
 13710   003C5E                     u7291:
 13711   003C5E  EF33  F01E         	goto	l5956
 13712   003C62                     u7290:
 13713   003C62  0E80               	movlw	128
 13714   003C64  1A4D               	xorwf	___fladd@signs^0,f,c
 13715   003C66                     l5956:
 13716   003C66  C04F  F050         	movff	___fladd@bexp,___fladd@grs
 13717   003C6A  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
 13718   003C6E  C050  F04E         	movff	___fladd@grs,___fladd@aexp
 13719   003C72  C041  F050         	movff	___fladd@b,___fladd@grs
 13720   003C76  C045  F041         	movff	___fladd@a,___fladd@b
 13721   003C7A  C050  F045         	movff	___fladd@grs,___fladd@a
 13722   003C7E  C042  F050         	movff	___fladd@b+1,___fladd@grs
 13723   003C82  C046  F042         	movff	___fladd@a+1,___fladd@b+1
 13724   003C86  C050  F046         	movff	___fladd@grs,___fladd@a+1
 13725   003C8A  C043  F050         	movff	___fladd@b+2,___fladd@grs
 13726   003C8E  C047  F043         	movff	___fladd@a+2,___fladd@b+2
 13727   003C92  C050  F047         	movff	___fladd@grs,___fladd@a+2
 13728   003C96  C044  F050         	movff	___fladd@b+3,___fladd@grs
 13729   003C9A  C048  F044         	movff	___fladd@a+3,___fladd@b+3
 13730   003C9E  C050  F048         	movff	___fladd@grs,___fladd@a+3
 13731   003CA2                     l5986:
 13732   003CA2  6A50               	clrf	___fladd@grs^0,c
 13733   003CA4  504F               	movf	___fladd@bexp^0,w,c
 13734   003CA6  C04E  F049         	movff	___fladd@aexp,??___fladd
 13735   003CAA  6A4A               	clrf	(??___fladd+1)^0,c
 13736   003CAC  5E49               	subwf	??___fladd^0,f,c
 13737   003CAE  0E00               	movlw	0
 13738   003CB0  5A4A               	subwfb	(??___fladd+1)^0,f,c
 13739   003CB2  BE4A               	btfsc	(??___fladd+1)^0,7,c
 13740   003CB4  EF65  F01E         	goto	u7301
 13741   003CB8  504A               	movf	(??___fladd+1)^0,w,c
 13742   003CBA  E109               	bnz	u7300
 13743   003CBC  0E1A               	movlw	26
 13744   003CBE  5C49               	subwf	??___fladd^0,w,c
 13745   003CC0  A0D8               	btfss	status,0,c
 13746   003CC2  EF65  F01E         	goto	u7301
 13747   003CC6  EF67  F01E         	goto	u7300
 13748   003CCA                     u7301:
 13749   003CCA  EF9E  F01E         	goto	l806
 13750   003CCE                     u7300:
 13751   003CCE  5041               	movf	___fladd@b^0,w,c
 13752   003CD0  1042               	iorwf	(___fladd@b+1)^0,w,c
 13753   003CD2  1043               	iorwf	(___fladd@b+2)^0,w,c
 13754   003CD4  1044               	iorwf	(___fladd@b+3)^0,w,c
 13755   003CD6  A4D8               	btfss	status,2,c
 13756   003CD8  EF70  F01E         	goto	u7311
 13757   003CDC  EF73  F01E         	goto	u7310
 13758   003CE0                     u7311:
 13759   003CE0  0E01               	movlw	1
 13760   003CE2  EF74  F01E         	goto	u7320
 13761   003CE6                     u7310:
 13762   003CE6  0E00               	movlw	0
 13763   003CE8                     u7320:
 13764   003CE8  6E50               	movwf	___fladd@grs^0,c
 13765   003CEA  0E00               	movlw	0
 13766   003CEC  6E41               	movwf	___fladd@b^0,c
 13767   003CEE  0E00               	movlw	0
 13768   003CF0  6E42               	movwf	(___fladd@b+1)^0,c
 13769   003CF2  0E00               	movlw	0
 13770   003CF4  6E43               	movwf	(___fladd@b+2)^0,c
 13771   003CF6  0E00               	movlw	0
 13772   003CF8  6E44               	movwf	(___fladd@b+3)^0,c
 13773   003CFA  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
 13774   003CFE  EFA7  F01E         	goto	l805
 13775   003D02                     l807:
 13776   003D02  A050               	btfss	___fladd@grs^0,0,c
 13777   003D04  EF86  F01E         	goto	u7331
 13778   003D08  EF88  F01E         	goto	u7330
 13779   003D0C                     u7331:
 13780   003D0C  EF8E  F01E         	goto	l5996
 13781   003D10                     u7330:
 13782   003D10  90D8               	bcf	status,0,c
 13783   003D12  3050               	rrcf	___fladd@grs^0,w,c
 13784   003D14  0901               	iorlw	1
 13785   003D16  6E50               	movwf	___fladd@grs^0,c
 13786   003D18  EF90  F01E         	goto	l5998
 13787   003D1C                     l5996:
 13788   003D1C  90D8               	bcf	status,0,c
 13789   003D1E  3250               	rrcf	___fladd@grs^0,f,c
 13790   003D20                     l5998:
 13791   003D20  A041               	btfss	___fladd@b^0,0,c
 13792   003D22  EF95  F01E         	goto	u7341
 13793   003D26  EF97  F01E         	goto	u7340
 13794   003D2A                     u7341:
 13795   003D2A  EF98  F01E         	goto	l6002
 13796   003D2E                     u7340:
 13797   003D2E  8E50               	bsf	___fladd@grs^0,7,c
 13798   003D30                     l6002:
 13799   003D30  3444               	rlcf	(___fladd@b+3)^0,w,c
 13800   003D32  3244               	rrcf	(___fladd@b+3)^0,f,c
 13801   003D34  3243               	rrcf	(___fladd@b+2)^0,f,c
 13802   003D36  3242               	rrcf	(___fladd@b+1)^0,f,c
 13803   003D38  3241               	rrcf	___fladd@b^0,f,c
 13804   003D3A  2A4F               	incf	___fladd@bexp^0,f,c
 13805   003D3C                     l806:
 13806   003D3C  504E               	movf	___fladd@aexp^0,w,c
 13807   003D3E  5C4F               	subwf	___fladd@bexp^0,w,c
 13808   003D40  A0D8               	btfss	status,0,c
 13809   003D42  EFA5  F01E         	goto	u7351
 13810   003D46  EFA7  F01E         	goto	u7350
 13811   003D4A                     u7351:
 13812   003D4A  EF81  F01E         	goto	l807
 13813   003D4E                     u7350:
 13814   003D4E                     l805:
 13815   003D4E  BC4D               	btfsc	___fladd@signs^0,6,c
 13816   003D50  EFAC  F01E         	goto	u7361
 13817   003D54  EFAE  F01E         	goto	u7360
 13818   003D58                     u7361:
 13819   003D58  EFEE  F01E         	goto	l6030
 13820   003D5C                     u7360:
 13821   003D5C  504F               	movf	___fladd@bexp^0,w,c
 13822   003D5E  A4D8               	btfss	status,2,c
 13823   003D60  EFB4  F01E         	goto	u7371
 13824   003D64  EFB6  F01E         	goto	u7370
 13825   003D68                     u7371:
 13826   003D68  EFC0  F01E         	goto	l6012
 13827   003D6C                     u7370:
 13828   003D6C  0E00               	movlw	0
 13829   003D6E  6E41               	movwf	?___fladd^0,c
 13830   003D70  0E00               	movlw	0
 13831   003D72  6E42               	movwf	(?___fladd+1)^0,c
 13832   003D74  0E00               	movlw	0
 13833   003D76  6E43               	movwf	(?___fladd+2)^0,c
 13834   003D78  0E00               	movlw	0
 13835   003D7A  6E44               	movwf	(?___fladd+3)^0,c
 13836   003D7C  EF0D  F020         	goto	l814
 13837   003D80                     l6012:
 13838   003D80  5045               	movf	___fladd@a^0,w,c
 13839   003D82  2641               	addwf	___fladd@b^0,f,c
 13840   003D84  5046               	movf	(___fladd@a+1)^0,w,c
 13841   003D86  2242               	addwfc	(___fladd@b+1)^0,f,c
 13842   003D88  5047               	movf	(___fladd@a+2)^0,w,c
 13843   003D8A  2243               	addwfc	(___fladd@b+2)^0,f,c
 13844   003D8C  5048               	movf	(___fladd@a+3)^0,w,c
 13845   003D8E  2244               	addwfc	(___fladd@b+3)^0,f,c
 13846   003D90  A044               	btfss	(___fladd@b+3)^0,0,c
 13847   003D92  EFCD  F01E         	goto	u7381
 13848   003D96  EFCF  F01E         	goto	u7380
 13849   003D9A                     u7381:
 13850   003D9A  EF7B  F01F         	goto	l819
 13851   003D9E                     u7380:
 13852   003D9E  A050               	btfss	___fladd@grs^0,0,c
 13853   003DA0  EFD4  F01E         	goto	u7391
 13854   003DA4  EFD6  F01E         	goto	u7390
 13855   003DA8                     u7391:
 13856   003DA8  EFDC  F01E         	goto	l6020
 13857   003DAC                     u7390:
 13858   003DAC  90D8               	bcf	status,0,c
 13859   003DAE  3050               	rrcf	___fladd@grs^0,w,c
 13860   003DB0  0901               	iorlw	1
 13861   003DB2  6E50               	movwf	___fladd@grs^0,c
 13862   003DB4  EFDE  F01E         	goto	l6022
 13863   003DB8                     l6020:
 13864   003DB8  90D8               	bcf	status,0,c
 13865   003DBA  3250               	rrcf	___fladd@grs^0,f,c
 13866   003DBC                     l6022:
 13867   003DBC  A041               	btfss	___fladd@b^0,0,c
 13868   003DBE  EFE3  F01E         	goto	u7401
 13869   003DC2  EFE5  F01E         	goto	u7400
 13870   003DC6                     u7401:
 13871   003DC6  EFE6  F01E         	goto	l6026
 13872   003DCA                     u7400:
 13873   003DCA  8E50               	bsf	___fladd@grs^0,7,c
 13874   003DCC                     l6026:
 13875   003DCC  3444               	rlcf	(___fladd@b+3)^0,w,c
 13876   003DCE  3244               	rrcf	(___fladd@b+3)^0,f,c
 13877   003DD0  3243               	rrcf	(___fladd@b+2)^0,f,c
 13878   003DD2  3242               	rrcf	(___fladd@b+1)^0,f,c
 13879   003DD4  3241               	rrcf	___fladd@b^0,f,c
 13880   003DD6  2A4F               	incf	___fladd@bexp^0,f,c
 13881   003DD8  EF7B  F01F         	goto	l819
 13882   003DDC                     l6030:
 13883   003DDC  5045               	movf	___fladd@a^0,w,c
 13884   003DDE  5C41               	subwf	___fladd@b^0,w,c
 13885   003DE0  5046               	movf	(___fladd@a+1)^0,w,c
 13886   003DE2  5842               	subwfb	(___fladd@b+1)^0,w,c
 13887   003DE4  5047               	movf	(___fladd@a+2)^0,w,c
 13888   003DE6  5843               	subwfb	(___fladd@b+2)^0,w,c
 13889   003DE8  5044               	movf	(___fladd@b+3)^0,w,c
 13890   003DEA  0A80               	xorlw	128
 13891   003DEC  6E49               	movwf	??___fladd^0,c
 13892   003DEE  5048               	movf	(___fladd@a+3)^0,w,c
 13893   003DF0  0A80               	xorlw	128
 13894   003DF2  5849               	subwfb	??___fladd^0,w,c
 13895   003DF4  B0D8               	btfsc	status,0,c
 13896   003DF6  EFFF  F01E         	goto	u7411
 13897   003DFA  EF01  F01F         	goto	u7410
 13898   003DFE                     u7411:
 13899   003DFE  EF2C  F01F         	goto	l6040
 13900   003E02                     u7410:
 13901   003E02  5041               	movf	___fladd@b^0,w,c
 13902   003E04  5C45               	subwf	___fladd@a^0,w,c
 13903   003E06  6E49               	movwf	??___fladd^0,c
 13904   003E08  5042               	movf	(___fladd@b+1)^0,w,c
 13905   003E0A  5846               	subwfb	(___fladd@a+1)^0,w,c
 13906   003E0C  6E4A               	movwf	(??___fladd+1)^0,c
 13907   003E0E  5043               	movf	(___fladd@b+2)^0,w,c
 13908   003E10  5847               	subwfb	(___fladd@a+2)^0,w,c
 13909   003E12  6E4B               	movwf	(??___fladd+2)^0,c
 13910   003E14  5044               	movf	(___fladd@b+3)^0,w,c
 13911   003E16  5848               	subwfb	(___fladd@a+3)^0,w,c
 13912   003E18  6E4C               	movwf	(??___fladd+3)^0,c
 13913   003E1A  0EFF               	movlw	255
 13914   003E1C  2449               	addwf	??___fladd^0,w,c
 13915   003E1E  6E41               	movwf	___fladd@b^0,c
 13916   003E20  0EFF               	movlw	255
 13917   003E22  204A               	addwfc	(??___fladd+1)^0,w,c
 13918   003E24  6E42               	movwf	(___fladd@b+1)^0,c
 13919   003E26  0EFF               	movlw	255
 13920   003E28  204B               	addwfc	(??___fladd+2)^0,w,c
 13921   003E2A  6E43               	movwf	(___fladd@b+2)^0,c
 13922   003E2C  0EFF               	movlw	255
 13923   003E2E  204C               	addwfc	(??___fladd+3)^0,w,c
 13924   003E30  6E44               	movwf	(___fladd@b+3)^0,c
 13925   003E32  0E80               	movlw	128
 13926   003E34  1A4D               	xorwf	___fladd@signs^0,f,c
 13927   003E36  6C50               	negf	___fladd@grs^0,c
 13928   003E38  5050               	movf	___fladd@grs^0,w,c
 13929   003E3A  A4D8               	btfss	status,2,c
 13930   003E3C  EF22  F01F         	goto	u7421
 13931   003E40  EF24  F01F         	goto	u7420
 13932   003E44                     u7421:
 13933   003E44  EF34  F01F         	goto	l822
 13934   003E48                     u7420:
 13935   003E48  0E01               	movlw	1
 13936   003E4A  2641               	addwf	___fladd@b^0,f,c
 13937   003E4C  0E00               	movlw	0
 13938   003E4E  2242               	addwfc	(___fladd@b+1)^0,f,c
 13939   003E50  2243               	addwfc	(___fladd@b+2)^0,f,c
 13940   003E52  2244               	addwfc	(___fladd@b+3)^0,f,c
 13941   003E54  EF34  F01F         	goto	l822
 13942   003E58                     l6040:
 13943   003E58  5045               	movf	___fladd@a^0,w,c
 13944   003E5A  5E41               	subwf	___fladd@b^0,f,c
 13945   003E5C  5046               	movf	(___fladd@a+1)^0,w,c
 13946   003E5E  5A42               	subwfb	(___fladd@b+1)^0,f,c
 13947   003E60  5047               	movf	(___fladd@a+2)^0,w,c
 13948   003E62  5A43               	subwfb	(___fladd@b+2)^0,f,c
 13949   003E64  5048               	movf	(___fladd@a+3)^0,w,c
 13950   003E66  5A44               	subwfb	(___fladd@b+3)^0,f,c
 13951   003E68                     l822:
 13952   003E68  5041               	movf	___fladd@b^0,w,c
 13953   003E6A  1042               	iorwf	(___fladd@b+1)^0,w,c
 13954   003E6C  1043               	iorwf	(___fladd@b+2)^0,w,c
 13955   003E6E  1044               	iorwf	(___fladd@b+3)^0,w,c
 13956   003E70  A4D8               	btfss	status,2,c
 13957   003E72  EF3D  F01F         	goto	u7431
 13958   003E76  EF3F  F01F         	goto	u7430
 13959   003E7A                     u7431:
 13960   003E7A  EF74  F01F         	goto	l6064
 13961   003E7E                     u7430:
 13962   003E7E  5050               	movf	___fladd@grs^0,w,c
 13963   003E80  A4D8               	btfss	status,2,c
 13964   003E82  EF45  F01F         	goto	u7441
 13965   003E86  EF47  F01F         	goto	u7440
 13966   003E8A                     u7441:
 13967   003E8A  EF74  F01F         	goto	l6064
 13968   003E8E                     u7440:
 13969   003E8E  0E00               	movlw	0
 13970   003E90  6E41               	movwf	?___fladd^0,c
 13971   003E92  0E00               	movlw	0
 13972   003E94  6E42               	movwf	(?___fladd+1)^0,c
 13973   003E96  0E00               	movlw	0
 13974   003E98  6E43               	movwf	(?___fladd+2)^0,c
 13975   003E9A  0E00               	movlw	0
 13976   003E9C  6E44               	movwf	(?___fladd+3)^0,c
 13977   003E9E  EF0D  F020         	goto	l814
 13978   003EA2                     l6048:
 13979   003EA2  90D8               	bcf	status,0,c
 13980   003EA4  3641               	rlcf	___fladd@b^0,f,c
 13981   003EA6  3642               	rlcf	(___fladd@b+1)^0,f,c
 13982   003EA8  3643               	rlcf	(___fladd@b+2)^0,f,c
 13983   003EAA  3644               	rlcf	(___fladd@b+3)^0,f,c
 13984   003EAC  AE50               	btfss	___fladd@grs^0,7,c
 13985   003EAE  EF5B  F01F         	goto	u7451
 13986   003EB2  EF5D  F01F         	goto	u7450
 13987   003EB6                     u7451:
 13988   003EB6  EF5E  F01F         	goto	l6054
 13989   003EBA                     u7450:
 13990   003EBA  8041               	bsf	___fladd@b^0,0,c
 13991   003EBC                     l6054:
 13992   003EBC  A050               	btfss	___fladd@grs^0,0,c
 13993   003EBE  EF63  F01F         	goto	u7461
 13994   003EC2  EF65  F01F         	goto	u7460
 13995   003EC6                     u7461:
 13996   003EC6  EF69  F01F         	goto	l6058
 13997   003ECA                     u7460:
 13998   003ECA  80D8               	bsf	status,0,c
 13999   003ECC  3650               	rlcf	___fladd@grs^0,f,c
 14000   003ECE  EF6B  F01F         	goto	l6060
 14001   003ED2                     l6058:
 14002   003ED2  90D8               	bcf	status,0,c
 14003   003ED4  3650               	rlcf	___fladd@grs^0,f,c
 14004   003ED6                     l6060:
 14005   003ED6  504F               	movf	___fladd@bexp^0,w,c
 14006   003ED8  B4D8               	btfsc	status,2,c
 14007   003EDA  EF71  F01F         	goto	u7471
 14008   003EDE  EF73  F01F         	goto	u7470
 14009   003EE2                     u7471:
 14010   003EE2  EF74  F01F         	goto	l6064
 14011   003EE6                     u7470:
 14012   003EE6  064F               	decf	___fladd@bexp^0,f,c
 14013   003EE8                     l6064:
 14014   003EE8  AE43               	btfss	(___fladd@b+2)^0,7,c
 14015   003EEA  EF79  F01F         	goto	u7481
 14016   003EEE  EF7B  F01F         	goto	u7480
 14017   003EF2                     u7481:
 14018   003EF2  EF51  F01F         	goto	l6048
 14019   003EF6                     u7480:
 14020   003EF6                     l819:
 14021   003EF6  6A4E               	clrf	___fladd@aexp^0,c
 14022   003EF8  AE50               	btfss	___fladd@grs^0,7,c
 14023   003EFA  EF81  F01F         	goto	u7491
 14024   003EFE  EF83  F01F         	goto	u7490
 14025   003F02                     u7491:
 14026   003F02  EF9B  F01F         	goto	l831
 14027   003F06                     u7490:
 14028   003F06  C050  F049         	movff	___fladd@grs,??___fladd
 14029   003F0A  0E7F               	movlw	127
 14030   003F0C  1649               	andwf	??___fladd^0,f,c
 14031   003F0E  B4D8               	btfsc	status,2,c
 14032   003F10  EF8C  F01F         	goto	u7501
 14033   003F14  EF8E  F01F         	goto	u7500
 14034   003F18                     u7501:
 14035   003F18  EF92  F01F         	goto	l832
 14036   003F1C                     u7500:
 14037   003F1C                     l6068:
 14038   003F1C  0E01               	movlw	1
 14039   003F1E  6E4E               	movwf	___fladd@aexp^0,c
 14040   003F20  EF9B  F01F         	goto	l831
 14041   003F24                     l832:
 14042   003F24  A041               	btfss	___fladd@b^0,0,c
 14043   003F26  EF97  F01F         	goto	u7511
 14044   003F2A  EF99  F01F         	goto	u7510
 14045   003F2E                     u7511:
 14046   003F2E  EF9B  F01F         	goto	l831
 14047   003F32                     u7510:
 14048   003F32  EF8E  F01F         	goto	l6068
 14049   003F36                     l831:
 14050   003F36  504E               	movf	___fladd@aexp^0,w,c
 14051   003F38  B4D8               	btfsc	status,2,c
 14052   003F3A  EFA1  F01F         	goto	u7521
 14053   003F3E  EFA3  F01F         	goto	u7520
 14054   003F42                     u7521:
 14055   003F42  EFCE  F01F         	goto	l6080
 14056   003F46                     u7520:
 14057   003F46  0E01               	movlw	1
 14058   003F48  2641               	addwf	___fladd@b^0,f,c
 14059   003F4A  0E00               	movlw	0
 14060   003F4C  2242               	addwfc	(___fladd@b+1)^0,f,c
 14061   003F4E  2243               	addwfc	(___fladd@b+2)^0,f,c
 14062   003F50  2244               	addwfc	(___fladd@b+3)^0,f,c
 14063   003F52  A044               	btfss	(___fladd@b+3)^0,0,c
 14064   003F54  EFAE  F01F         	goto	u7531
 14065   003F58  EFB0  F01F         	goto	u7530
 14066   003F5C                     u7531:
 14067   003F5C  EFCE  F01F         	goto	l6080
 14068   003F60                     u7530:
 14069   003F60  C041  F049         	movff	___fladd@b,??___fladd
 14070   003F64  C042  F04A         	movff	___fladd@b+1,??___fladd+1
 14071   003F68  C043  F04B         	movff	___fladd@b+2,??___fladd+2
 14072   003F6C  C044  F04C         	movff	___fladd@b+3,??___fladd+3
 14073   003F70  344C               	rlcf	(??___fladd+3)^0,w,c
 14074   003F72  324C               	rrcf	(??___fladd+3)^0,f,c
 14075   003F74  324B               	rrcf	(??___fladd+2)^0,f,c
 14076   003F76  324A               	rrcf	(??___fladd+1)^0,f,c
 14077   003F78  3249               	rrcf	??___fladd^0,f,c
 14078   003F7A  C049  F041         	movff	??___fladd,___fladd@b
 14079   003F7E  C04A  F042         	movff	??___fladd+1,___fladd@b+1
 14080   003F82  C04B  F043         	movff	??___fladd+2,___fladd@b+2
 14081   003F86  C04C  F044         	movff	??___fladd+3,___fladd@b+3
 14082   003F8A  284F               	incf	___fladd@bexp^0,w,c
 14083   003F8C  B4D8               	btfsc	status,2,c
 14084   003F8E  EFCB  F01F         	goto	u7541
 14085   003F92  EFCD  F01F         	goto	u7540
 14086   003F96                     u7541:
 14087   003F96  EFCE  F01F         	goto	l6080
 14088   003F9A                     u7540:
 14089   003F9A  2A4F               	incf	___fladd@bexp^0,f,c
 14090   003F9C                     l6080:
 14091   003F9C  284F               	incf	___fladd@bexp^0,w,c
 14092   003F9E  B4D8               	btfsc	status,2,c
 14093   003FA0  EFD4  F01F         	goto	u7551
 14094   003FA4  EFD6  F01F         	goto	u7550
 14095   003FA8                     u7551:
 14096   003FA8  EFDE  F01F         	goto	l6084
 14097   003FAC                     u7550:
 14098   003FAC  504F               	movf	___fladd@bexp^0,w,c
 14099   003FAE  A4D8               	btfss	status,2,c
 14100   003FB0  EFDC  F01F         	goto	u7561
 14101   003FB4  EFDE  F01F         	goto	u7560
 14102   003FB8                     u7561:
 14103   003FB8  EFEF  F01F         	goto	l838
 14104   003FBC                     u7560:
 14105   003FBC                     l6084:
 14106   003FBC  0E00               	movlw	0
 14107   003FBE  6E41               	movwf	___fladd@b^0,c
 14108   003FC0  0E00               	movlw	0
 14109   003FC2  6E42               	movwf	(___fladd@b+1)^0,c
 14110   003FC4  0E00               	movlw	0
 14111   003FC6  6E43               	movwf	(___fladd@b+2)^0,c
 14112   003FC8  0E00               	movlw	0
 14113   003FCA  6E44               	movwf	(___fladd@b+3)^0,c
 14114   003FCC  504F               	movf	___fladd@bexp^0,w,c
 14115   003FCE  A4D8               	btfss	status,2,c
 14116   003FD0  EFEC  F01F         	goto	u7571
 14117   003FD4  EFEE  F01F         	goto	u7570
 14118   003FD8                     u7571:
 14119   003FD8  EFEF  F01F         	goto	l838
 14120   003FDC                     u7570:
 14121   003FDC  6A4D               	clrf	___fladd@signs^0,c
 14122   003FDE                     l838:
 14123   003FDE  A04F               	btfss	___fladd@bexp^0,0,c
 14124   003FE0  EFF4  F01F         	goto	u7581
 14125   003FE4  EFF6  F01F         	goto	u7580
 14126   003FE8                     u7581:
 14127   003FE8  EFF9  F01F         	goto	l6090
 14128   003FEC                     u7580:
 14129   003FEC  8E43               	bsf	(___fladd@b+2)^0,7,c
 14130   003FEE  EFFA  F01F         	goto	l6092
 14131   003FF2                     l6090:
 14132   003FF2  9E43               	bcf	(___fladd@b+2)^0,7,c
 14133   003FF4                     l6092:
 14134   003FF4  90D8               	bcf	status,0,c
 14135   003FF6  304F               	rrcf	___fladd@bexp^0,w,c
 14136   003FF8  6E44               	movwf	(___fladd@b+3)^0,c
 14137   003FFA  AE4D               	btfss	___fladd@signs^0,7,c
 14138   003FFC  EF02  F020         	goto	u7591
 14139   004000  EF04  F020         	goto	u7590
 14140   004004                     u7591:
 14141   004004  EF05  F020         	goto	l6098
 14142   004008                     u7590:
 14143   004008  8E44               	bsf	(___fladd@b+3)^0,7,c
 14144   00400A                     l6098:
 14145   00400A  C041  F041         	movff	___fladd@b,?___fladd
 14146   00400E  C042  F042         	movff	___fladd@b+1,?___fladd+1
 14147   004012  C043  F043         	movff	___fladd@b+2,?___fladd+2
 14148   004016  C044  F044         	movff	___fladd@b+3,?___fladd+3
 14149   00401A                     l814:
 14150   00401A  0012               	return		;funcret
 14151   00401C                     __end_of___fladd:
 14152                           	callstack 0
 14153                           
 14154 ;; *************** function ___flneg *****************
 14155 ;; Defined at:
 14156 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 14157 ;; Parameters:    Size  Location     Type
 14158 ;;  f1              4    0[COMRAM] unsigned char 
 14159 ;; Auto vars:     Size  Location     Type
 14160 ;;		None
 14161 ;; Return value:  Size  Location     Type
 14162 ;;                  4    0[COMRAM] unsigned char 
 14163 ;; Registers used:
 14164 ;;		wreg, status,2, status,0
 14165 ;; Tracked objects:
 14166 ;;		On entry : 0/0
 14167 ;;		On exit  : 0/0
 14168 ;;		Unchanged: 0/0
 14169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14170 ;;      Params:         4       0       0       0       0       0       0       0       0
 14171 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14172 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14173 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14174 ;;Total ram usage:        4 bytes
 14175 ;; Hardware stack levels used: 1
 14176 ;; Hardware stack levels required when called: 1
 14177 ;; This function calls:
 14178 ;;		Nothing
 14179 ;; This function is called by:
 14180 ;;		_efgtoa
 14181 ;;		_powf
 14182 ;; This function uses a non-reentrant model
 14183 ;;
 14184                           
 14185                           	psect	text34
 14186   006DA2                     __ptext34:
 14187                           	callstack 0
 14188   006DA2                     ___flneg:
 14189                           	callstack 24
 14190   006DA2  5001               	movf	___flneg@f1^0,w,c
 14191   006DA4  1002               	iorwf	(___flneg@f1+1)^0,w,c
 14192   006DA6  1003               	iorwf	(___flneg@f1+2)^0,w,c
 14193   006DA8  1004               	iorwf	(___flneg@f1+3)^0,w,c
 14194   006DAA  B4D8               	btfsc	status,2,c
 14195   006DAC  EFDA  F036         	goto	u8271
 14196   006DB0  EFDC  F036         	goto	u8270
 14197   006DB4                     u8271:
 14198   006DB4  EFE4  F036         	goto	l6528
 14199   006DB8                     u8270:
 14200   006DB8  0E00               	movlw	0
 14201   006DBA  1A01               	xorwf	___flneg@f1^0,f,c
 14202   006DBC  0E00               	movlw	0
 14203   006DBE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 14204   006DC0  0E00               	movlw	0
 14205   006DC2  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 14206   006DC4  0E80               	movlw	128
 14207   006DC6  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 14208   006DC8                     l6528:
 14209   006DC8  C001  F001         	movff	___flneg@f1,?___flneg
 14210   006DCC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 14211   006DD0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 14212   006DD4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 14213   006DD8  0012               	return		;funcret
 14214   006DDA                     __end_of___flneg:
 14215                           	callstack 0
 14216                           
 14217 ;; *************** function ___flmul *****************
 14218 ;; Defined at:
 14219 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;  b               4   14[COMRAM] unsigned char 
 14222 ;;  a               4   18[COMRAM] unsigned char 
 14223 ;; Auto vars:     Size  Location     Type
 14224 ;;  prod            4   33[COMRAM] struct .
 14225 ;;  grs             4   28[COMRAM] unsigned long 
 14226 ;;  temp            2   37[COMRAM] struct .
 14227 ;;  bexp            1   32[COMRAM] unsigned char 
 14228 ;;  aexp            1   27[COMRAM] unsigned char 
 14229 ;;  sign            1   26[COMRAM] unsigned char 
 14230 ;; Return value:  Size  Location     Type
 14231 ;;                  4   14[COMRAM] unsigned char 
 14232 ;; Registers used:
 14233 ;;		wreg, status,2, status,0, prodl, prodh
 14234 ;; Tracked objects:
 14235 ;;		On entry : 0/0
 14236 ;;		On exit  : 0/0
 14237 ;;		Unchanged: 0/0
 14238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14239 ;;      Params:         8       0       0       0       0       0       0       0       0
 14240 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14241 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14242 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14243 ;;Total ram usage:       25 bytes
 14244 ;; Hardware stack levels used: 1
 14245 ;; Hardware stack levels required when called: 1
 14246 ;; This function calls:
 14247 ;;		Nothing
 14248 ;; This function is called by:
 14249 ;;		_main
 14250 ;;		_Read_Sensors
 14251 ;;		_efgtoa
 14252 ;;		_powf
 14253 ;;		_scalbnf
 14254 ;; This function uses a non-reentrant model
 14255 ;;
 14256                           
 14257                           	psect	text35
 14258   00401C                     __ptext35:
 14259                           	callstack 0
 14260   00401C                     ___flmul:
 14261                           	callstack 29
 14262   00401C  5012               	movf	(___flmul@b+3)^0,w,c
 14263   00401E  0B80               	andlw	128
 14264   004020  6E1B               	movwf	___flmul@sign^0,c
 14265   004022  5012               	movf	(___flmul@b+3)^0,w,c
 14266   004024  2412               	addwf	(___flmul@b+3)^0,w,c
 14267   004026  6E21               	movwf	___flmul@bexp^0,c
 14268   004028  AE11               	btfss	(___flmul@b+2)^0,7,c
 14269   00402A  EF19  F020         	goto	u8001
 14270   00402E  EF1B  F020         	goto	u8000
 14271   004032                     u8001:
 14272   004032  EF1C  F020         	goto	l6358
 14273   004036                     u8000:
 14274   004036  8021               	bsf	___flmul@bexp^0,0,c
 14275   004038                     l6358:
 14276   004038  5021               	movf	___flmul@bexp^0,w,c
 14277   00403A  B4D8               	btfsc	status,2,c
 14278   00403C  EF22  F020         	goto	u8011
 14279   004040  EF24  F020         	goto	u8010
 14280   004044                     u8011:
 14281   004044  EF37  F020         	goto	l6366
 14282   004048                     u8010:
 14283   004048  2821               	incf	___flmul@bexp^0,w,c
 14284   00404A  A4D8               	btfss	status,2,c
 14285   00404C  EF2A  F020         	goto	u8021
 14286   004050  EF2C  F020         	goto	u8020
 14287   004054                     u8021:
 14288   004054  EF34  F020         	goto	l6364
 14289   004058                     u8020:
 14290   004058  0E00               	movlw	0
 14291   00405A  6E0F               	movwf	___flmul@b^0,c
 14292   00405C  0E00               	movlw	0
 14293   00405E  6E10               	movwf	(___flmul@b+1)^0,c
 14294   004060  0E00               	movlw	0
 14295   004062  6E11               	movwf	(___flmul@b+2)^0,c
 14296   004064  0E00               	movlw	0
 14297   004066  6E12               	movwf	(___flmul@b+3)^0,c
 14298   004068                     l6364:
 14299   004068  8E11               	bsf	(___flmul@b+2)^0,7,c
 14300   00406A  EF3F  F020         	goto	l6368
 14301   00406E                     l6366:
 14302   00406E  0E00               	movlw	0
 14303   004070  6E0F               	movwf	___flmul@b^0,c
 14304   004072  0E00               	movlw	0
 14305   004074  6E10               	movwf	(___flmul@b+1)^0,c
 14306   004076  0E00               	movlw	0
 14307   004078  6E11               	movwf	(___flmul@b+2)^0,c
 14308   00407A  0E00               	movlw	0
 14309   00407C  6E12               	movwf	(___flmul@b+3)^0,c
 14310   00407E                     l6368:
 14311   00407E  5016               	movf	(___flmul@a+3)^0,w,c
 14312   004080  0B80               	andlw	128
 14313   004082  1A1B               	xorwf	___flmul@sign^0,f,c
 14314   004084  5016               	movf	(___flmul@a+3)^0,w,c
 14315   004086  2416               	addwf	(___flmul@a+3)^0,w,c
 14316   004088  6E1C               	movwf	___flmul@aexp^0,c
 14317   00408A  AE15               	btfss	(___flmul@a+2)^0,7,c
 14318   00408C  EF4A  F020         	goto	u8031
 14319   004090  EF4C  F020         	goto	u8030
 14320   004094                     u8031:
 14321   004094  EF4D  F020         	goto	l6376
 14322   004098                     u8030:
 14323   004098  801C               	bsf	___flmul@aexp^0,0,c
 14324   00409A                     l6376:
 14325   00409A  501C               	movf	___flmul@aexp^0,w,c
 14326   00409C  B4D8               	btfsc	status,2,c
 14327   00409E  EF53  F020         	goto	u8041
 14328   0040A2  EF55  F020         	goto	u8040
 14329   0040A6                     u8041:
 14330   0040A6  EF68  F020         	goto	l6384
 14331   0040AA                     u8040:
 14332   0040AA  281C               	incf	___flmul@aexp^0,w,c
 14333   0040AC  A4D8               	btfss	status,2,c
 14334   0040AE  EF5B  F020         	goto	u8051
 14335   0040B2  EF5D  F020         	goto	u8050
 14336   0040B6                     u8051:
 14337   0040B6  EF65  F020         	goto	l6382
 14338   0040BA                     u8050:
 14339   0040BA  0E00               	movlw	0
 14340   0040BC  6E13               	movwf	___flmul@a^0,c
 14341   0040BE  0E00               	movlw	0
 14342   0040C0  6E14               	movwf	(___flmul@a+1)^0,c
 14343   0040C2  0E00               	movlw	0
 14344   0040C4  6E15               	movwf	(___flmul@a+2)^0,c
 14345   0040C6  0E00               	movlw	0
 14346   0040C8  6E16               	movwf	(___flmul@a+3)^0,c
 14347   0040CA                     l6382:
 14348   0040CA  8E15               	bsf	(___flmul@a+2)^0,7,c
 14349   0040CC  EF70  F020         	goto	l891
 14350   0040D0                     l6384:
 14351   0040D0  0E00               	movlw	0
 14352   0040D2  6E13               	movwf	___flmul@a^0,c
 14353   0040D4  0E00               	movlw	0
 14354   0040D6  6E14               	movwf	(___flmul@a+1)^0,c
 14355   0040D8  0E00               	movlw	0
 14356   0040DA  6E15               	movwf	(___flmul@a+2)^0,c
 14357   0040DC  0E00               	movlw	0
 14358   0040DE  6E16               	movwf	(___flmul@a+3)^0,c
 14359   0040E0                     l891:
 14360   0040E0  501C               	movf	___flmul@aexp^0,w,c
 14361   0040E2  B4D8               	btfsc	status,2,c
 14362   0040E4  EF76  F020         	goto	u8061
 14363   0040E8  EF78  F020         	goto	u8060
 14364   0040EC                     u8061:
 14365   0040EC  EF80  F020         	goto	l6388
 14366   0040F0                     u8060:
 14367   0040F0  5021               	movf	___flmul@bexp^0,w,c
 14368   0040F2  A4D8               	btfss	status,2,c
 14369   0040F4  EF7E  F020         	goto	u8071
 14370   0040F8  EF80  F020         	goto	u8070
 14371   0040FC                     u8071:
 14372   0040FC  EF8A  F020         	goto	l6392
 14373   004100                     u8070:
 14374   004100                     l6388:
 14375   004100  0E00               	movlw	0
 14376   004102  6E0F               	movwf	?___flmul^0,c
 14377   004104  0E00               	movlw	0
 14378   004106  6E10               	movwf	(?___flmul+1)^0,c
 14379   004108  0E00               	movlw	0
 14380   00410A  6E11               	movwf	(?___flmul+2)^0,c
 14381   00410C  0E00               	movlw	0
 14382   00410E  6E12               	movwf	(?___flmul+3)^0,c
 14383   004110  EF20  F022         	goto	l895
 14384   004114                     l6392:
 14385   004114  5015               	movf	(___flmul@a+2)^0,w,c
 14386   004116  020F               	mulwf	___flmul@b^0,c
 14387   004118  CFF3 F026          	movff	prodl,___flmul@temp
 14388   00411C  CFF4 F027          	movff	prodh,___flmul@temp+1
 14389   004120  5026               	movf	___flmul@temp^0,w,c
 14390   004122  6E1D               	movwf	___flmul@grs^0,c
 14391   004124  6A1E               	clrf	(___flmul@grs+1)^0,c
 14392   004126  6A1F               	clrf	(___flmul@grs+2)^0,c
 14393   004128  6A20               	clrf	(___flmul@grs+3)^0,c
 14394   00412A  5027               	movf	(___flmul@temp+1)^0,w,c
 14395   00412C  6E22               	movwf	___flmul@prod^0,c
 14396   00412E  6A23               	clrf	(___flmul@prod+1)^0,c
 14397   004130  6A24               	clrf	(___flmul@prod+2)^0,c
 14398   004132  6A25               	clrf	(___flmul@prod+3)^0,c
 14399   004134  5014               	movf	(___flmul@a+1)^0,w,c
 14400   004136  0210               	mulwf	(___flmul@b+1)^0,c
 14401   004138  CFF3 F026          	movff	prodl,___flmul@temp
 14402   00413C  CFF4 F027          	movff	prodh,___flmul@temp+1
 14403   004140  5026               	movf	___flmul@temp^0,w,c
 14404   004142  261D               	addwf	___flmul@grs^0,f,c
 14405   004144  0E00               	movlw	0
 14406   004146  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14407   004148  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14408   00414A  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14409   00414C  5027               	movf	(___flmul@temp+1)^0,w,c
 14410   00414E  2622               	addwf	___flmul@prod^0,f,c
 14411   004150  0E00               	movlw	0
 14412   004152  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14413   004154  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14414   004156  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14415   004158  5013               	movf	___flmul@a^0,w,c
 14416   00415A  0211               	mulwf	(___flmul@b+2)^0,c
 14417   00415C  CFF3 F026          	movff	prodl,___flmul@temp
 14418   004160  CFF4 F027          	movff	prodh,___flmul@temp+1
 14419   004164  5026               	movf	___flmul@temp^0,w,c
 14420   004166  261D               	addwf	___flmul@grs^0,f,c
 14421   004168  0E00               	movlw	0
 14422   00416A  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14423   00416C  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14424   00416E  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14425   004170  5027               	movf	(___flmul@temp+1)^0,w,c
 14426   004172  2622               	addwf	___flmul@prod^0,f,c
 14427   004174  0E00               	movlw	0
 14428   004176  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14429   004178  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14430   00417A  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14431   00417C  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14432   004180  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14433   004184  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14434   004188  6A1D               	clrf	___flmul@grs^0,c
 14435   00418A  5013               	movf	___flmul@a^0,w,c
 14436   00418C  0210               	mulwf	(___flmul@b+1)^0,c
 14437   00418E  CFF3 F026          	movff	prodl,___flmul@temp
 14438   004192  CFF4 F027          	movff	prodh,___flmul@temp+1
 14439   004196  5026               	movf	___flmul@temp^0,w,c
 14440   004198  261D               	addwf	___flmul@grs^0,f,c
 14441   00419A  5027               	movf	(___flmul@temp+1)^0,w,c
 14442   00419C  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14443   00419E  0E00               	movlw	0
 14444   0041A0  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14445   0041A2  0E00               	movlw	0
 14446   0041A4  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14447   0041A6  5014               	movf	(___flmul@a+1)^0,w,c
 14448   0041A8  020F               	mulwf	___flmul@b^0,c
 14449   0041AA  CFF3 F026          	movff	prodl,___flmul@temp
 14450   0041AE  CFF4 F027          	movff	prodh,___flmul@temp+1
 14451   0041B2  5026               	movf	___flmul@temp^0,w,c
 14452   0041B4  261D               	addwf	___flmul@grs^0,f,c
 14453   0041B6  5027               	movf	(___flmul@temp+1)^0,w,c
 14454   0041B8  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14455   0041BA  0E00               	movlw	0
 14456   0041BC  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14457   0041BE  0E00               	movlw	0
 14458   0041C0  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14459   0041C2  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14460   0041C6  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14461   0041CA  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14462   0041CE  6A1D               	clrf	___flmul@grs^0,c
 14463   0041D0  5013               	movf	___flmul@a^0,w,c
 14464   0041D2  020F               	mulwf	___flmul@b^0,c
 14465   0041D4  CFF3 F026          	movff	prodl,___flmul@temp
 14466   0041D8  CFF4 F027          	movff	prodh,___flmul@temp+1
 14467   0041DC  5026               	movf	___flmul@temp^0,w,c
 14468   0041DE  261D               	addwf	___flmul@grs^0,f,c
 14469   0041E0  5027               	movf	(___flmul@temp+1)^0,w,c
 14470   0041E2  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14471   0041E4  0E00               	movlw	0
 14472   0041E6  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14473   0041E8  0E00               	movlw	0
 14474   0041EA  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14475   0041EC  5015               	movf	(___flmul@a+2)^0,w,c
 14476   0041EE  0210               	mulwf	(___flmul@b+1)^0,c
 14477   0041F0  CFF3 F026          	movff	prodl,___flmul@temp
 14478   0041F4  CFF4 F027          	movff	prodh,___flmul@temp+1
 14479   0041F8  5026               	movf	___flmul@temp^0,w,c
 14480   0041FA  2622               	addwf	___flmul@prod^0,f,c
 14481   0041FC  5027               	movf	(___flmul@temp+1)^0,w,c
 14482   0041FE  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14483   004200  0E00               	movlw	0
 14484   004202  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14485   004204  0E00               	movlw	0
 14486   004206  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14487   004208  5014               	movf	(___flmul@a+1)^0,w,c
 14488   00420A  0211               	mulwf	(___flmul@b+2)^0,c
 14489   00420C  CFF3 F026          	movff	prodl,___flmul@temp
 14490   004210  CFF4 F027          	movff	prodh,___flmul@temp+1
 14491   004214  5026               	movf	___flmul@temp^0,w,c
 14492   004216  2622               	addwf	___flmul@prod^0,f,c
 14493   004218  5027               	movf	(___flmul@temp+1)^0,w,c
 14494   00421A  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14495   00421C  0E00               	movlw	0
 14496   00421E  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14497   004220  0E00               	movlw	0
 14498   004222  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14499   004224  5015               	movf	(___flmul@a+2)^0,w,c
 14500   004226  0211               	mulwf	(___flmul@b+2)^0,c
 14501   004228  CFF3 F026          	movff	prodl,___flmul@temp
 14502   00422C  CFF4 F027          	movff	prodh,___flmul@temp+1
 14503   004230  5026               	movf	___flmul@temp^0,w,c
 14504   004232  6E17               	movwf	??___flmul^0,c
 14505   004234  5027               	movf	(___flmul@temp+1)^0,w,c
 14506   004236  6E18               	movwf	(??___flmul+1)^0,c
 14507   004238  6A19               	clrf	(??___flmul+2)^0,c
 14508   00423A  6A1A               	clrf	(??___flmul+3)^0,c
 14509   00423C  C019  F01A         	movff	??___flmul+2,??___flmul+3
 14510   004240  C018  F019         	movff	??___flmul+1,??___flmul+2
 14511   004244  C017  F018         	movff	??___flmul,??___flmul+1
 14512   004248  6A17               	clrf	??___flmul^0,c
 14513   00424A  5017               	movf	??___flmul^0,w,c
 14514   00424C  2622               	addwf	___flmul@prod^0,f,c
 14515   00424E  5018               	movf	(??___flmul+1)^0,w,c
 14516   004250  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14517   004252  5019               	movf	(??___flmul+2)^0,w,c
 14518   004254  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14519   004256  501A               	movf	(??___flmul+3)^0,w,c
 14520   004258  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14521   00425A  C01D  F017         	movff	___flmul@grs,??___flmul
 14522   00425E  C01E  F018         	movff	___flmul@grs+1,??___flmul+1
 14523   004262  C01F  F019         	movff	___flmul@grs+2,??___flmul+2
 14524   004266  C020  F01A         	movff	___flmul@grs+3,??___flmul+3
 14525   00426A  0E19               	movlw	25
 14526   00426C  EF3D  F021         	goto	u8080
 14527   004270                     u8085:
 14528   004270  90D8               	bcf	status,0,c
 14529   004272  321A               	rrcf	(??___flmul+3)^0,f,c
 14530   004274  3219               	rrcf	(??___flmul+2)^0,f,c
 14531   004276  3218               	rrcf	(??___flmul+1)^0,f,c
 14532   004278  3217               	rrcf	??___flmul^0,f,c
 14533   00427A                     u8080:
 14534   00427A  2EE8               	decfsz	wreg,f,c
 14535   00427C  EF38  F021         	goto	u8085
 14536   004280  5017               	movf	??___flmul^0,w,c
 14537   004282  2622               	addwf	___flmul@prod^0,f,c
 14538   004284  5018               	movf	(??___flmul+1)^0,w,c
 14539   004286  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14540   004288  5019               	movf	(??___flmul+2)^0,w,c
 14541   00428A  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14542   00428C  501A               	movf	(??___flmul+3)^0,w,c
 14543   00428E  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14544   004290  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14545   004294  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14546   004298  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14547   00429C  6A1D               	clrf	___flmul@grs^0,c
 14548   00429E  501C               	movf	___flmul@aexp^0,w,c
 14549   0042A0  C021  F017         	movff	___flmul@bexp,??___flmul
 14550   0042A4  6A18               	clrf	(??___flmul+1)^0,c
 14551   0042A6  2617               	addwf	??___flmul^0,f,c
 14552   0042A8  0E00               	movlw	0
 14553   0042AA  2218               	addwfc	(??___flmul+1)^0,f,c
 14554   0042AC  0E82               	movlw	130
 14555   0042AE  2417               	addwf	??___flmul^0,w,c
 14556   0042B0  6E26               	movwf	___flmul@temp^0,c
 14557   0042B2  0EFF               	movlw	255
 14558   0042B4  2018               	addwfc	(??___flmul+1)^0,w,c
 14559   0042B6  6E27               	movwf	(___flmul@temp+1)^0,c
 14560   0042B8  EF73  F021         	goto	l6440
 14561   0042BC                     l6434:
 14562   0042BC  90D8               	bcf	status,0,c
 14563   0042BE  3622               	rlcf	___flmul@prod^0,f,c
 14564   0042C0  3623               	rlcf	(___flmul@prod+1)^0,f,c
 14565   0042C2  3624               	rlcf	(___flmul@prod+2)^0,f,c
 14566   0042C4  3625               	rlcf	(___flmul@prod+3)^0,f,c
 14567   0042C6  AE20               	btfss	(___flmul@grs+3)^0,7,c
 14568   0042C8  EF68  F021         	goto	u8091
 14569   0042CC  EF6A  F021         	goto	u8090
 14570   0042D0                     u8091:
 14571   0042D0  EF6B  F021         	goto	l898
 14572   0042D4                     u8090:
 14573   0042D4  8022               	bsf	___flmul@prod^0,0,c
 14574   0042D6                     l898:
 14575   0042D6  90D8               	bcf	status,0,c
 14576   0042D8  361D               	rlcf	___flmul@grs^0,f,c
 14577   0042DA  361E               	rlcf	(___flmul@grs+1)^0,f,c
 14578   0042DC  361F               	rlcf	(___flmul@grs+2)^0,f,c
 14579   0042DE  3620               	rlcf	(___flmul@grs+3)^0,f,c
 14580   0042E0  0626               	decf	___flmul@temp^0,f,c
 14581   0042E2  A0D8               	btfss	status,0,c
 14582   0042E4  0627               	decf	(___flmul@temp+1)^0,f,c
 14583   0042E6                     l6440:
 14584   0042E6  AE24               	btfss	(___flmul@prod+2)^0,7,c
 14585   0042E8  EF78  F021         	goto	u8101
 14586   0042EC  EF7A  F021         	goto	u8100
 14587   0042F0                     u8101:
 14588   0042F0  EF5E  F021         	goto	l6434
 14589   0042F4                     u8100:
 14590   0042F4  6A1C               	clrf	___flmul@aexp^0,c
 14591   0042F6  AE20               	btfss	(___flmul@grs+3)^0,7,c
 14592   0042F8  EF80  F021         	goto	u8111
 14593   0042FC  EF82  F021         	goto	u8110
 14594   004300                     u8111:
 14595   004300  EFA6  F021         	goto	l900
 14596   004304                     u8110:
 14597   004304  0EFF               	movlw	255
 14598   004306  141D               	andwf	___flmul@grs^0,w,c
 14599   004308  6E17               	movwf	??___flmul^0,c
 14600   00430A  0EFF               	movlw	255
 14601   00430C  141E               	andwf	(___flmul@grs+1)^0,w,c
 14602   00430E  6E18               	movwf	(??___flmul+1)^0,c
 14603   004310  0EFF               	movlw	255
 14604   004312  141F               	andwf	(___flmul@grs+2)^0,w,c
 14605   004314  6E19               	movwf	(??___flmul+2)^0,c
 14606   004316  0E7F               	movlw	127
 14607   004318  1420               	andwf	(___flmul@grs+3)^0,w,c
 14608   00431A  6E1A               	movwf	(??___flmul+3)^0,c
 14609   00431C  5017               	movf	??___flmul^0,w,c
 14610   00431E  1018               	iorwf	(??___flmul+1)^0,w,c
 14611   004320  1019               	iorwf	(??___flmul+2)^0,w,c
 14612   004322  101A               	iorwf	(??___flmul+3)^0,w,c
 14613   004324  B4D8               	btfsc	status,2,c
 14614   004326  EF97  F021         	goto	u8121
 14615   00432A  EF99  F021         	goto	u8120
 14616   00432E                     u8121:
 14617   00432E  EF9D  F021         	goto	l901
 14618   004332                     u8120:
 14619   004332                     l6444:
 14620   004332  0E01               	movlw	1
 14621   004334  6E1C               	movwf	___flmul@aexp^0,c
 14622   004336  EFA6  F021         	goto	l900
 14623   00433A                     l901:
 14624   00433A  A022               	btfss	___flmul@prod^0,0,c
 14625   00433C  EFA2  F021         	goto	u8131
 14626   004340  EFA4  F021         	goto	u8130
 14627   004344                     u8131:
 14628   004344  EFA6  F021         	goto	l900
 14629   004348                     u8130:
 14630   004348  EF99  F021         	goto	l6444
 14631   00434C                     l900:
 14632   00434C  501C               	movf	___flmul@aexp^0,w,c
 14633   00434E  B4D8               	btfsc	status,2,c
 14634   004350  EFAC  F021         	goto	u8141
 14635   004354  EFAE  F021         	goto	u8140
 14636   004358                     u8141:
 14637   004358  EFD2  F021         	goto	l6456
 14638   00435C                     u8140:
 14639   00435C  0E01               	movlw	1
 14640   00435E  2622               	addwf	___flmul@prod^0,f,c
 14641   004360  0E00               	movlw	0
 14642   004362  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14643   004364  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14644   004366  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14645   004368  A025               	btfss	(___flmul@prod+3)^0,0,c
 14646   00436A  EFB9  F021         	goto	u8151
 14647   00436E  EFBB  F021         	goto	u8150
 14648   004372                     u8151:
 14649   004372  EFD2  F021         	goto	l6456
 14650   004376                     u8150:
 14651   004376  C022  F017         	movff	___flmul@prod,??___flmul
 14652   00437A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 14653   00437E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 14654   004382  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 14655   004386  341A               	rlcf	(??___flmul+3)^0,w,c
 14656   004388  321A               	rrcf	(??___flmul+3)^0,f,c
 14657   00438A  3219               	rrcf	(??___flmul+2)^0,f,c
 14658   00438C  3218               	rrcf	(??___flmul+1)^0,f,c
 14659   00438E  3217               	rrcf	??___flmul^0,f,c
 14660   004390  C017  F022         	movff	??___flmul,___flmul@prod
 14661   004394  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 14662   004398  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 14663   00439C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 14664   0043A0  4A26               	infsnz	___flmul@temp^0,f,c
 14665   0043A2  2A27               	incf	(___flmul@temp+1)^0,f,c
 14666   0043A4                     l6456:
 14667   0043A4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 14668   0043A6  EFDD  F021         	goto	u8161
 14669   0043AA  5027               	movf	(___flmul@temp+1)^0,w,c
 14670   0043AC  E108               	bnz	u8160
 14671   0043AE  2826               	incf	___flmul@temp^0,w,c
 14672   0043B0  A0D8               	btfss	status,0,c
 14673   0043B2  EFDD  F021         	goto	u8161
 14674   0043B6  EFDF  F021         	goto	u8160
 14675   0043BA                     u8161:
 14676   0043BA  EFE9  F021         	goto	l6460
 14677   0043BE                     u8160:
 14678   0043BE  0E00               	movlw	0
 14679   0043C0  6E22               	movwf	___flmul@prod^0,c
 14680   0043C2  0E00               	movlw	0
 14681   0043C4  6E23               	movwf	(___flmul@prod+1)^0,c
 14682   0043C6  0E80               	movlw	128
 14683   0043C8  6E24               	movwf	(___flmul@prod+2)^0,c
 14684   0043CA  0E7F               	movlw	127
 14685   0043CC  6E25               	movwf	(___flmul@prod+3)^0,c
 14686   0043CE  EF16  F022         	goto	l6474
 14687   0043D2                     l6460:
 14688   0043D2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 14689   0043D4  EFF6  F021         	goto	u8170
 14690   0043D8  5027               	movf	(___flmul@temp+1)^0,w,c
 14691   0043DA  E106               	bnz	u8171
 14692   0043DC  0426               	decf	___flmul@temp^0,w,c
 14693   0043DE  B0D8               	btfsc	status,0,c
 14694   0043E0  EFF4  F021         	goto	u8171
 14695   0043E4  EFF6  F021         	goto	u8170
 14696   0043E8                     u8171:
 14697   0043E8  EF01  F022         	goto	l908
 14698   0043EC                     u8170:
 14699   0043EC  0E00               	movlw	0
 14700   0043EE  6E22               	movwf	___flmul@prod^0,c
 14701   0043F0  0E00               	movlw	0
 14702   0043F2  6E23               	movwf	(___flmul@prod+1)^0,c
 14703   0043F4  0E00               	movlw	0
 14704   0043F6  6E24               	movwf	(___flmul@prod+2)^0,c
 14705   0043F8  0E00               	movlw	0
 14706   0043FA  6E25               	movwf	(___flmul@prod+3)^0,c
 14707   0043FC  6A1B               	clrf	___flmul@sign^0,c
 14708   0043FE  EF16  F022         	goto	l6474
 14709   004402                     l908:
 14710   004402  C026  F021         	movff	___flmul@temp,___flmul@bexp
 14711   004406  0EFF               	movlw	255
 14712   004408  1622               	andwf	___flmul@prod^0,f,c
 14713   00440A  0EFF               	movlw	255
 14714   00440C  1623               	andwf	(___flmul@prod+1)^0,f,c
 14715   00440E  0E7F               	movlw	127
 14716   004410  1624               	andwf	(___flmul@prod+2)^0,f,c
 14717   004412  0E00               	movlw	0
 14718   004414  1625               	andwf	(___flmul@prod+3)^0,f,c
 14719   004416  A021               	btfss	___flmul@bexp^0,0,c
 14720   004418  EF10  F022         	goto	u8181
 14721   00441C  EF12  F022         	goto	u8180
 14722   004420                     u8181:
 14723   004420  EF13  F022         	goto	l6472
 14724   004424                     u8180:
 14725   004424  8E24               	bsf	(___flmul@prod+2)^0,7,c
 14726   004426                     l6472:
 14727   004426  90D8               	bcf	status,0,c
 14728   004428  3021               	rrcf	___flmul@bexp^0,w,c
 14729   00442A  6E25               	movwf	(___flmul@prod+3)^0,c
 14730   00442C                     l6474:
 14731   00442C  501B               	movf	___flmul@sign^0,w,c
 14732   00442E  1225               	iorwf	(___flmul@prod+3)^0,f,c
 14733   004430  C022  F00F         	movff	___flmul@prod,?___flmul
 14734   004434  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 14735   004438  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 14736   00443C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 14737   004440                     l895:
 14738   004440  0012               	return		;funcret
 14739   004442                     __end_of___flmul:
 14740                           	callstack 0
 14741                           
 14742 ;; *************** function ___flge *****************
 14743 ;; Defined at:
 14744 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 14745 ;; Parameters:    Size  Location     Type
 14746 ;;  ff1             4    0[BANK0 ] unsigned char 
 14747 ;;  ff2             4    4[BANK0 ] unsigned char 
 14748 ;; Auto vars:     Size  Location     Type
 14749 ;;		None
 14750 ;; Return value:  Size  Location     Type
 14751 ;;		None               void
 14752 ;; Registers used:
 14753 ;;		wreg, status,2, status,0
 14754 ;; Tracked objects:
 14755 ;;		On entry : 0/0
 14756 ;;		On exit  : 0/0
 14757 ;;		Unchanged: 0/0
 14758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14759 ;;      Params:         0       8       0       0       0       0       0       0       0
 14760 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14761 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14762 ;;      Totals:         4       8       0       0       0       0       0       0       0
 14763 ;;Total ram usage:       12 bytes
 14764 ;; Hardware stack levels used: 1
 14765 ;; Hardware stack levels required when called: 1
 14766 ;; This function calls:
 14767 ;;		Nothing
 14768 ;; This function is called by:
 14769 ;;		_Handle_Fire_Events
 14770 ;;		_Read_Sensors
 14771 ;;		_Update_Actuators
 14772 ;;		_efgtoa
 14773 ;;		_powf
 14774 ;; This function uses a non-reentrant model
 14775 ;;
 14776                           
 14777                           	psect	text36
 14778   005F14                     __ptext36:
 14779                           	callstack 0
 14780   005F14                     ___flge:
 14781                           	callstack 28
 14782   005F14  0E00               	movlw	0
 14783   005F16  0100               	movlb	0	; () banked
 14784   005F18  1560               	andwf	___flge@ff1& (0+255),w,b
 14785   005F1A  6E59               	movwf	??___flge^0,c
 14786   005F1C  0E00               	movlw	0
 14787   005F1E  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
 14788   005F20  6E5A               	movwf	(??___flge+1)^0,c
 14789   005F22  0E80               	movlw	128
 14790   005F24  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
 14791   005F26  6E5B               	movwf	(??___flge+2)^0,c
 14792   005F28  0E7F               	movlw	127
 14793   005F2A  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
 14794   005F2C  6E5C               	movwf	(??___flge+3)^0,c
 14795   005F2E  5059               	movf	??___flge^0,w,c
 14796   005F30  105A               	iorwf	(??___flge+1)^0,w,c
 14797   005F32  105B               	iorwf	(??___flge+2)^0,w,c
 14798   005F34  105C               	iorwf	(??___flge+3)^0,w,c
 14799   005F36  A4D8               	btfss	status,2,c
 14800   005F38  EFA0  F02F         	goto	u8221
 14801   005F3C  EFA2  F02F         	goto	u8220
 14802   005F40                     u8221:
 14803   005F40  EFAA  F02F         	goto	l6506
 14804   005F44                     u8220:
 14805   005F44                     
 14806                           ; BSR set to: 0
 14807   005F44  0E00               	movlw	0
 14808   005F46  6F60               	movwf	___flge@ff1& (0+255),b
 14809   005F48  0E00               	movlw	0
 14810   005F4A  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 14811   005F4C  0E00               	movlw	0
 14812   005F4E  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 14813   005F50  0E00               	movlw	0
 14814   005F52  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 14815   005F54                     l6506:
 14816                           
 14817                           ; BSR set to: 0
 14818   005F54  0E00               	movlw	0
 14819   005F56  1564               	andwf	___flge@ff2& (0+255),w,b
 14820   005F58  6E59               	movwf	??___flge^0,c
 14821   005F5A  0E00               	movlw	0
 14822   005F5C  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
 14823   005F5E  6E5A               	movwf	(??___flge+1)^0,c
 14824   005F60  0E80               	movlw	128
 14825   005F62  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
 14826   005F64  6E5B               	movwf	(??___flge+2)^0,c
 14827   005F66  0E7F               	movlw	127
 14828   005F68  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
 14829   005F6A  6E5C               	movwf	(??___flge+3)^0,c
 14830   005F6C  5059               	movf	??___flge^0,w,c
 14831   005F6E  105A               	iorwf	(??___flge+1)^0,w,c
 14832   005F70  105B               	iorwf	(??___flge+2)^0,w,c
 14833   005F72  105C               	iorwf	(??___flge+3)^0,w,c
 14834   005F74  A4D8               	btfss	status,2,c
 14835   005F76  EFBF  F02F         	goto	u8231
 14836   005F7A  EFC1  F02F         	goto	u8230
 14837   005F7E                     u8231:
 14838   005F7E  EFC9  F02F         	goto	l6510
 14839   005F82                     u8230:
 14840   005F82                     
 14841                           ; BSR set to: 0
 14842   005F82  0E00               	movlw	0
 14843   005F84  6F64               	movwf	___flge@ff2& (0+255),b
 14844   005F86  0E00               	movlw	0
 14845   005F88  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 14846   005F8A  0E00               	movlw	0
 14847   005F8C  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 14848   005F8E  0E00               	movlw	0
 14849   005F90  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 14850   005F92                     l6510:
 14851                           
 14852                           ; BSR set to: 0
 14853   005F92  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
 14854   005F94  EFCE  F02F         	goto	u8241
 14855   005F98  EFD0  F02F         	goto	u8240
 14856   005F9C                     u8241:
 14857   005F9C  EFD9  F02F         	goto	l6514
 14858   005FA0                     u8240:
 14859   005FA0                     
 14860                           ; BSR set to: 0
 14861   005FA0  6D60               	negf	___flge@ff1& (0+255),b
 14862   005FA2  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
 14863   005FA4  B0D8               	btfsc	status,0,c
 14864   005FA6  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
 14865   005FA8  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
 14866   005FAA  B0D8               	btfsc	status,0,c
 14867   005FAC  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
 14868   005FAE  0E80               	movlw	128
 14869   005FB0  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
 14870   005FB2                     l6514:
 14871                           
 14872                           ; BSR set to: 0
 14873   005FB2  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
 14874   005FB4  EFDE  F02F         	goto	u8251
 14875   005FB8  EFE0  F02F         	goto	u8250
 14876   005FBC                     u8251:
 14877   005FBC  EFE9  F02F         	goto	l542
 14878   005FC0                     u8250:
 14879   005FC0                     
 14880                           ; BSR set to: 0
 14881   005FC0  6D64               	negf	___flge@ff2& (0+255),b
 14882   005FC2  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
 14883   005FC4  B0D8               	btfsc	status,0,c
 14884   005FC6  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
 14885   005FC8  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
 14886   005FCA  B0D8               	btfsc	status,0,c
 14887   005FCC  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
 14888   005FCE  0E80               	movlw	128
 14889   005FD0  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
 14890   005FD2                     l542:
 14891                           
 14892                           ; BSR set to: 0
 14893   005FD2  0E00               	movlw	0
 14894   005FD4  1B60               	xorwf	___flge@ff1& (0+255),f,b
 14895   005FD6  0E00               	movlw	0
 14896   005FD8  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
 14897   005FDA  0E00               	movlw	0
 14898   005FDC  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
 14899   005FDE  0E80               	movlw	128
 14900   005FE0  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
 14901   005FE2  0E00               	movlw	0
 14902   005FE4  1B64               	xorwf	___flge@ff2& (0+255),f,b
 14903   005FE6  0E00               	movlw	0
 14904   005FE8  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
 14905   005FEA  0E00               	movlw	0
 14906   005FEC  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
 14907   005FEE  0E80               	movlw	128
 14908   005FF0  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
 14909   005FF2  5164               	movf	___flge@ff2& (0+255),w,b
 14910   005FF4  5D60               	subwf	___flge@ff1& (0+255),w,b
 14911   005FF6  5165               	movf	(___flge@ff2+1)& (0+255),w,b
 14912   005FF8  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
 14913   005FFA  5166               	movf	(___flge@ff2+2)& (0+255),w,b
 14914   005FFC  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
 14915   005FFE  5167               	movf	(___flge@ff2+3)& (0+255),w,b
 14916   006000  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
 14917   006002  B0D8               	btfsc	status,0,c
 14918   006004  EF06  F030         	goto	u8261
 14919   006008  EF08  F030         	goto	u8260
 14920   00600C                     u8261:
 14921   00600C  EF0B  F030         	goto	l6520
 14922   006010                     u8260:
 14923   006010                     
 14924                           ; BSR set to: 0
 14925   006010  90D8               	bcf	status,0,c
 14926   006012  EF0C  F030         	goto	l547
 14927   006016                     l6520:
 14928                           
 14929                           ; BSR set to: 0
 14930   006016  80D8               	bsf	status,0,c
 14931   006018                     l547:
 14932                           
 14933                           ; BSR set to: 0
 14934   006018  0012               	return		;funcret
 14935   00601A                     __end_of___flge:
 14936                           	callstack 0
 14937                           
 14938 ;; *************** function ___fleq *****************
 14939 ;; Defined at:
 14940 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 14941 ;; Parameters:    Size  Location     Type
 14942 ;;  ff1             4    0[COMRAM] unsigned char 
 14943 ;;  ff2             4    4[COMRAM] unsigned char 
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;		None
 14946 ;; Return value:  Size  Location     Type
 14947 ;;		None               void
 14948 ;; Registers used:
 14949 ;;		wreg, status,2, status,0
 14950 ;; Tracked objects:
 14951 ;;		On entry : 0/0
 14952 ;;		On exit  : 0/0
 14953 ;;		Unchanged: 0/0
 14954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14955 ;;      Params:         8       0       0       0       0       0       0       0       0
 14956 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14957 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14958 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14959 ;;Total ram usage:       12 bytes
 14960 ;; Hardware stack levels used: 1
 14961 ;; Hardware stack levels required when called: 1
 14962 ;; This function calls:
 14963 ;;		Nothing
 14964 ;; This function is called by:
 14965 ;;		_efgtoa
 14966 ;; This function uses a non-reentrant model
 14967 ;;
 14968                           
 14969                           	psect	text37
 14970   0067EA                     __ptext37:
 14971                           	callstack 0
 14972   0067EA                     ___fleq:
 14973                           	callstack 24
 14974   0067EA  0E00               	movlw	0
 14975   0067EC  1401               	andwf	___fleq@ff1^0,w,c
 14976   0067EE  6E09               	movwf	??___fleq^0,c
 14977   0067F0  0E00               	movlw	0
 14978   0067F2  1402               	andwf	(___fleq@ff1+1)^0,w,c
 14979   0067F4  6E0A               	movwf	(??___fleq+1)^0,c
 14980   0067F6  0E80               	movlw	128
 14981   0067F8  1403               	andwf	(___fleq@ff1+2)^0,w,c
 14982   0067FA  6E0B               	movwf	(??___fleq+2)^0,c
 14983   0067FC  0E7F               	movlw	127
 14984   0067FE  1404               	andwf	(___fleq@ff1+3)^0,w,c
 14985   006800  6E0C               	movwf	(??___fleq+3)^0,c
 14986   006802  5009               	movf	??___fleq^0,w,c
 14987   006804  100A               	iorwf	(??___fleq+1)^0,w,c
 14988   006806  100B               	iorwf	(??___fleq+2)^0,w,c
 14989   006808  100C               	iorwf	(??___fleq+3)^0,w,c
 14990   00680A  A4D8               	btfss	status,2,c
 14991   00680C  EF0A  F034         	goto	u8191
 14992   006810  EF0C  F034         	goto	u8190
 14993   006814                     u8191:
 14994   006814  EF14  F034         	goto	l6490
 14995   006818                     u8190:
 14996   006818  0E00               	movlw	0
 14997   00681A  6E01               	movwf	___fleq@ff1^0,c
 14998   00681C  0E00               	movlw	0
 14999   00681E  6E02               	movwf	(___fleq@ff1+1)^0,c
 15000   006820  0E00               	movlw	0
 15001   006822  6E03               	movwf	(___fleq@ff1+2)^0,c
 15002   006824  0E00               	movlw	0
 15003   006826  6E04               	movwf	(___fleq@ff1+3)^0,c
 15004   006828                     l6490:
 15005   006828  0E00               	movlw	0
 15006   00682A  1405               	andwf	___fleq@ff2^0,w,c
 15007   00682C  6E09               	movwf	??___fleq^0,c
 15008   00682E  0E00               	movlw	0
 15009   006830  1406               	andwf	(___fleq@ff2+1)^0,w,c
 15010   006832  6E0A               	movwf	(??___fleq+1)^0,c
 15011   006834  0E80               	movlw	128
 15012   006836  1407               	andwf	(___fleq@ff2+2)^0,w,c
 15013   006838  6E0B               	movwf	(??___fleq+2)^0,c
 15014   00683A  0E7F               	movlw	127
 15015   00683C  1408               	andwf	(___fleq@ff2+3)^0,w,c
 15016   00683E  6E0C               	movwf	(??___fleq+3)^0,c
 15017   006840  5009               	movf	??___fleq^0,w,c
 15018   006842  100A               	iorwf	(??___fleq+1)^0,w,c
 15019   006844  100B               	iorwf	(??___fleq+2)^0,w,c
 15020   006846  100C               	iorwf	(??___fleq+3)^0,w,c
 15021   006848  A4D8               	btfss	status,2,c
 15022   00684A  EF29  F034         	goto	u8201
 15023   00684E  EF2B  F034         	goto	u8200
 15024   006852                     u8201:
 15025   006852  EF33  F034         	goto	l6494
 15026   006856                     u8200:
 15027   006856  0E00               	movlw	0
 15028   006858  6E05               	movwf	___fleq@ff2^0,c
 15029   00685A  0E00               	movlw	0
 15030   00685C  6E06               	movwf	(___fleq@ff2+1)^0,c
 15031   00685E  0E00               	movlw	0
 15032   006860  6E07               	movwf	(___fleq@ff2+2)^0,c
 15033   006862  0E00               	movlw	0
 15034   006864  6E08               	movwf	(___fleq@ff2+3)^0,c
 15035   006866                     l6494:
 15036   006866  5005               	movf	___fleq@ff2^0,w,c
 15037   006868  1801               	xorwf	___fleq@ff1^0,w,c
 15038   00686A  E10F               	bnz	u8210
 15039   00686C  5006               	movf	(___fleq@ff2+1)^0,w,c
 15040   00686E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 15041   006870  E10C               	bnz	u8210
 15042   006872  5007               	movf	(___fleq@ff2+2)^0,w,c
 15043   006874  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 15044   006876  E109               	bnz	u8210
 15045   006878  5008               	movf	(___fleq@ff2+3)^0,w,c
 15046   00687A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 15047   00687C  B4D8               	btfsc	status,2,c
 15048   00687E  EF43  F034         	goto	u8211
 15049   006882  EF45  F034         	goto	u8210
 15050   006886                     u8211:
 15051   006886  EF48  F034         	goto	l6498
 15052   00688A                     u8210:
 15053   00688A  90D8               	bcf	status,0,c
 15054   00688C  EF49  F034         	goto	l536
 15055   006890                     l6498:
 15056   006890  80D8               	bsf	status,0,c
 15057   006892                     l536:
 15058   006892  0012               	return		;funcret
 15059   006894                     __end_of___fleq:
 15060                           	callstack 0
 15061                           
 15062 ;; *************** function ___fldiv *****************
 15063 ;; Defined at:
 15064 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 15065 ;; Parameters:    Size  Location     Type
 15066 ;;  b               4   39[COMRAM] unsigned char 
 15067 ;;  a               4   43[COMRAM] unsigned char 
 15068 ;; Auto vars:     Size  Location     Type
 15069 ;;  grs             4   58[COMRAM] unsigned long 
 15070 ;;  rem             4   51[COMRAM] unsigned long 
 15071 ;;  new_exp         2   56[COMRAM] short 
 15072 ;;  aexp            1   63[COMRAM] unsigned char 
 15073 ;;  bexp            1   62[COMRAM] unsigned char 
 15074 ;;  sign            1   55[COMRAM] unsigned char 
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  4   39[COMRAM] unsigned char 
 15077 ;; Registers used:
 15078 ;;		wreg, status,2, status,0
 15079 ;; Tracked objects:
 15080 ;;		On entry : 0/0
 15081 ;;		On exit  : 0/0
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15084 ;;      Params:         8       0       0       0       0       0       0       0       0
 15085 ;;      Locals:        13       0       0       0       0       0       0       0       0
 15086 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15087 ;;      Totals:        25       0       0       0       0       0       0       0       0
 15088 ;;Total ram usage:       25 bytes
 15089 ;; Hardware stack levels used: 1
 15090 ;; Hardware stack levels required when called: 1
 15091 ;; This function calls:
 15092 ;;		Nothing
 15093 ;; This function is called by:
 15094 ;;		_main
 15095 ;;		_Read_Sensors
 15096 ;;		_Apply_Filter
 15097 ;;		_efgtoa
 15098 ;;		_powf
 15099 ;; This function uses a non-reentrant model
 15100 ;;
 15101                           
 15102                           	psect	text38
 15103   004820                     __ptext38:
 15104                           	callstack 0
 15105   004820                     ___fldiv:
 15106                           	callstack 29
 15107   004820  502B               	movf	(___fldiv@b+3)^0,w,c
 15108   004822  0B80               	andlw	128
 15109   004824  6E38               	movwf	___fldiv@sign^0,c
 15110   004826  502B               	movf	(___fldiv@b+3)^0,w,c
 15111   004828  242B               	addwf	(___fldiv@b+3)^0,w,c
 15112   00482A  6E3F               	movwf	___fldiv@bexp^0,c
 15113   00482C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 15114   00482E  EF1B  F024         	goto	u7771
 15115   004832  EF1D  F024         	goto	u7770
 15116   004836                     u7771:
 15117   004836  EF1E  F024         	goto	l6222
 15118   00483A                     u7770:
 15119   00483A  803F               	bsf	___fldiv@bexp^0,0,c
 15120   00483C                     l6222:
 15121   00483C  503F               	movf	___fldiv@bexp^0,w,c
 15122   00483E  B4D8               	btfsc	status,2,c
 15123   004840  EF24  F024         	goto	u7781
 15124   004844  EF26  F024         	goto	u7780
 15125   004848                     u7781:
 15126   004848  EF3A  F024         	goto	l6232
 15127   00484C                     u7780:
 15128   00484C  283F               	incf	___fldiv@bexp^0,w,c
 15129   00484E  A4D8               	btfss	status,2,c
 15130   004850  EF2C  F024         	goto	u7791
 15131   004854  EF2E  F024         	goto	u7790
 15132   004858                     u7791:
 15133   004858  EF36  F024         	goto	l6228
 15134   00485C                     u7790:
 15135   00485C  0E00               	movlw	0
 15136   00485E  6E28               	movwf	___fldiv@b^0,c
 15137   004860  0E00               	movlw	0
 15138   004862  6E29               	movwf	(___fldiv@b+1)^0,c
 15139   004864  0E00               	movlw	0
 15140   004866  6E2A               	movwf	(___fldiv@b+2)^0,c
 15141   004868  0E00               	movlw	0
 15142   00486A  6E2B               	movwf	(___fldiv@b+3)^0,c
 15143   00486C                     l6228:
 15144   00486C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 15145   00486E  6A2B               	clrf	(___fldiv@b+3)^0,c
 15146   004870  EF42  F024         	goto	l6234
 15147   004874                     l6232:
 15148   004874  0E00               	movlw	0
 15149   004876  6E28               	movwf	___fldiv@b^0,c
 15150   004878  0E00               	movlw	0
 15151   00487A  6E29               	movwf	(___fldiv@b+1)^0,c
 15152   00487C  0E00               	movlw	0
 15153   00487E  6E2A               	movwf	(___fldiv@b+2)^0,c
 15154   004880  0E00               	movlw	0
 15155   004882  6E2B               	movwf	(___fldiv@b+3)^0,c
 15156   004884                     l6234:
 15157   004884  502F               	movf	(___fldiv@a+3)^0,w,c
 15158   004886  0B80               	andlw	128
 15159   004888  1A38               	xorwf	___fldiv@sign^0,f,c
 15160   00488A  502F               	movf	(___fldiv@a+3)^0,w,c
 15161   00488C  242F               	addwf	(___fldiv@a+3)^0,w,c
 15162   00488E  6E40               	movwf	___fldiv@aexp^0,c
 15163   004890  AE2E               	btfss	(___fldiv@a+2)^0,7,c
 15164   004892  EF4D  F024         	goto	u7801
 15165   004896  EF4F  F024         	goto	u7800
 15166   00489A                     u7801:
 15167   00489A  EF50  F024         	goto	l6242
 15168   00489E                     u7800:
 15169   00489E  8040               	bsf	___fldiv@aexp^0,0,c
 15170   0048A0                     l6242:
 15171   0048A0  5040               	movf	___fldiv@aexp^0,w,c
 15172   0048A2  B4D8               	btfsc	status,2,c
 15173   0048A4  EF56  F024         	goto	u7811
 15174   0048A8  EF58  F024         	goto	u7810
 15175   0048AC                     u7811:
 15176   0048AC  EF6C  F024         	goto	l6252
 15177   0048B0                     u7810:
 15178   0048B0  2840               	incf	___fldiv@aexp^0,w,c
 15179   0048B2  A4D8               	btfss	status,2,c
 15180   0048B4  EF5E  F024         	goto	u7821
 15181   0048B8  EF60  F024         	goto	u7820
 15182   0048BC                     u7821:
 15183   0048BC  EF68  F024         	goto	l6248
 15184   0048C0                     u7820:
 15185   0048C0  0E00               	movlw	0
 15186   0048C2  6E2C               	movwf	___fldiv@a^0,c
 15187   0048C4  0E00               	movlw	0
 15188   0048C6  6E2D               	movwf	(___fldiv@a+1)^0,c
 15189   0048C8  0E00               	movlw	0
 15190   0048CA  6E2E               	movwf	(___fldiv@a+2)^0,c
 15191   0048CC  0E00               	movlw	0
 15192   0048CE  6E2F               	movwf	(___fldiv@a+3)^0,c
 15193   0048D0                     l6248:
 15194   0048D0  8E2E               	bsf	(___fldiv@a+2)^0,7,c
 15195   0048D2  6A2F               	clrf	(___fldiv@a+3)^0,c
 15196   0048D4  EF74  F024         	goto	l6254
 15197   0048D8                     l6252:
 15198   0048D8  0E00               	movlw	0
 15199   0048DA  6E2C               	movwf	___fldiv@a^0,c
 15200   0048DC  0E00               	movlw	0
 15201   0048DE  6E2D               	movwf	(___fldiv@a+1)^0,c
 15202   0048E0  0E00               	movlw	0
 15203   0048E2  6E2E               	movwf	(___fldiv@a+2)^0,c
 15204   0048E4  0E00               	movlw	0
 15205   0048E6  6E2F               	movwf	(___fldiv@a+3)^0,c
 15206   0048E8                     l6254:
 15207   0048E8  502C               	movf	___fldiv@a^0,w,c
 15208   0048EA  102D               	iorwf	(___fldiv@a+1)^0,w,c
 15209   0048EC  102E               	iorwf	(___fldiv@a+2)^0,w,c
 15210   0048EE  102F               	iorwf	(___fldiv@a+3)^0,w,c
 15211   0048F0  A4D8               	btfss	status,2,c
 15212   0048F2  EF7D  F024         	goto	u7831
 15213   0048F6  EF7F  F024         	goto	u7830
 15214   0048FA                     u7831:
 15215   0048FA  EF97  F024         	goto	l6266
 15216   0048FE                     u7830:
 15217   0048FE  0E00               	movlw	0
 15218   004900  6E28               	movwf	___fldiv@b^0,c
 15219   004902  0E00               	movlw	0
 15220   004904  6E29               	movwf	(___fldiv@b+1)^0,c
 15221   004906  0E00               	movlw	0
 15222   004908  6E2A               	movwf	(___fldiv@b+2)^0,c
 15223   00490A  0E00               	movlw	0
 15224   00490C  6E2B               	movwf	(___fldiv@b+3)^0,c
 15225   00490E  0E80               	movlw	128
 15226   004910  122A               	iorwf	(___fldiv@b+2)^0,f,c
 15227   004912  0E7F               	movlw	127
 15228   004914  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15229   004916                     l6260:
 15230   004916  5038               	movf	___fldiv@sign^0,w,c
 15231   004918  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15232   00491A  C028  F028         	movff	___fldiv@b,?___fldiv
 15233   00491E  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
 15234   004922  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
 15235   004926  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
 15236   00492A  EFD7  F025         	goto	l859
 15237   00492E                     l6266:
 15238   00492E  503F               	movf	___fldiv@bexp^0,w,c
 15239   004930  A4D8               	btfss	status,2,c
 15240   004932  EF9D  F024         	goto	u7841
 15241   004936  EF9F  F024         	goto	u7840
 15242   00493A                     u7841:
 15243   00493A  EFA9  F024         	goto	l6274
 15244   00493E                     u7840:
 15245   00493E  0E00               	movlw	0
 15246   004940  6E28               	movwf	?___fldiv^0,c
 15247   004942  0E00               	movlw	0
 15248   004944  6E29               	movwf	(?___fldiv+1)^0,c
 15249   004946  0E00               	movlw	0
 15250   004948  6E2A               	movwf	(?___fldiv+2)^0,c
 15251   00494A  0E00               	movlw	0
 15252   00494C  6E2B               	movwf	(?___fldiv+3)^0,c
 15253   00494E  EFD7  F025         	goto	l859
 15254   004952                     l6274:
 15255   004952  5040               	movf	___fldiv@aexp^0,w,c
 15256   004954  C03F  F030         	movff	___fldiv@bexp,??___fldiv
 15257   004958  6A31               	clrf	(??___fldiv+1)^0,c
 15258   00495A  5E30               	subwf	??___fldiv^0,f,c
 15259   00495C  0E00               	movlw	0
 15260   00495E  5A31               	subwfb	(??___fldiv+1)^0,f,c
 15261   004960  0E7F               	movlw	127
 15262   004962  2430               	addwf	??___fldiv^0,w,c
 15263   004964  6E39               	movwf	___fldiv@new_exp^0,c
 15264   004966  0E00               	movlw	0
 15265   004968  2031               	addwfc	(??___fldiv+1)^0,w,c
 15266   00496A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15267   00496C  C028  F034         	movff	___fldiv@b,___fldiv@rem
 15268   004970  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
 15269   004974  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
 15270   004978  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
 15271   00497C  0E00               	movlw	0
 15272   00497E  6E28               	movwf	___fldiv@b^0,c
 15273   004980  0E00               	movlw	0
 15274   004982  6E29               	movwf	(___fldiv@b+1)^0,c
 15275   004984  0E00               	movlw	0
 15276   004986  6E2A               	movwf	(___fldiv@b+2)^0,c
 15277   004988  0E00               	movlw	0
 15278   00498A  6E2B               	movwf	(___fldiv@b+3)^0,c
 15279   00498C  0E00               	movlw	0
 15280   00498E  6E3B               	movwf	___fldiv@grs^0,c
 15281   004990  0E00               	movlw	0
 15282   004992  6E3C               	movwf	(___fldiv@grs+1)^0,c
 15283   004994  0E00               	movlw	0
 15284   004996  6E3D               	movwf	(___fldiv@grs+2)^0,c
 15285   004998  0E00               	movlw	0
 15286   00499A  6E3E               	movwf	(___fldiv@grs+3)^0,c
 15287   00499C  6A40               	clrf	___fldiv@aexp^0,c
 15288   00499E  EF09  F025         	goto	l861
 15289   0049A2                     l6284:
 15290   0049A2  5040               	movf	___fldiv@aexp^0,w,c
 15291   0049A4  B4D8               	btfsc	status,2,c
 15292   0049A6  EFD7  F024         	goto	u7851
 15293   0049AA  EFD9  F024         	goto	u7850
 15294   0049AE                     u7851:
 15295   0049AE  EFF0  F024         	goto	l6292
 15296   0049B2                     u7850:
 15297   0049B2  90D8               	bcf	status,0,c
 15298   0049B4  3634               	rlcf	___fldiv@rem^0,f,c
 15299   0049B6  3635               	rlcf	(___fldiv@rem+1)^0,f,c
 15300   0049B8  3636               	rlcf	(___fldiv@rem+2)^0,f,c
 15301   0049BA  3637               	rlcf	(___fldiv@rem+3)^0,f,c
 15302   0049BC  90D8               	bcf	status,0,c
 15303   0049BE  3628               	rlcf	___fldiv@b^0,f,c
 15304   0049C0  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15305   0049C2  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15306   0049C4  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15307   0049C6  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15308   0049C8  EFE8  F024         	goto	u7861
 15309   0049CC  EFEA  F024         	goto	u7860
 15310   0049D0                     u7861:
 15311   0049D0  EFEB  F024         	goto	l864
 15312   0049D4                     u7860:
 15313   0049D4  8028               	bsf	___fldiv@b^0,0,c
 15314   0049D6                     l864:
 15315   0049D6  90D8               	bcf	status,0,c
 15316   0049D8  363B               	rlcf	___fldiv@grs^0,f,c
 15317   0049DA  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15318   0049DC  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15319   0049DE  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15320   0049E0                     l6292:
 15321   0049E0  502C               	movf	___fldiv@a^0,w,c
 15322   0049E2  5C34               	subwf	___fldiv@rem^0,w,c
 15323   0049E4  502D               	movf	(___fldiv@a+1)^0,w,c
 15324   0049E6  5835               	subwfb	(___fldiv@rem+1)^0,w,c
 15325   0049E8  502E               	movf	(___fldiv@a+2)^0,w,c
 15326   0049EA  5836               	subwfb	(___fldiv@rem+2)^0,w,c
 15327   0049EC  502F               	movf	(___fldiv@a+3)^0,w,c
 15328   0049EE  5837               	subwfb	(___fldiv@rem+3)^0,w,c
 15329   0049F0  A0D8               	btfss	status,0,c
 15330   0049F2  EFFD  F024         	goto	u7871
 15331   0049F6  EFFF  F024         	goto	u7870
 15332   0049FA                     u7871:
 15333   0049FA  EF08  F025         	goto	l6298
 15334   0049FE                     u7870:
 15335   0049FE  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
 15336   004A00  502C               	movf	___fldiv@a^0,w,c
 15337   004A02  5E34               	subwf	___fldiv@rem^0,f,c
 15338   004A04  502D               	movf	(___fldiv@a+1)^0,w,c
 15339   004A06  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
 15340   004A08  502E               	movf	(___fldiv@a+2)^0,w,c
 15341   004A0A  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
 15342   004A0C  502F               	movf	(___fldiv@a+3)^0,w,c
 15343   004A0E  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
 15344   004A10                     l6298:
 15345   004A10  2A40               	incf	___fldiv@aexp^0,f,c
 15346   004A12                     l861:
 15347   004A12  0E19               	movlw	25
 15348   004A14  6440               	cpfsgt	___fldiv@aexp^0,c
 15349   004A16  EF0F  F025         	goto	u7881
 15350   004A1A  EF11  F025         	goto	u7880
 15351   004A1E                     u7881:
 15352   004A1E  EFD1  F024         	goto	l6284
 15353   004A22                     u7880:
 15354   004A22  5034               	movf	___fldiv@rem^0,w,c
 15355   004A24  1035               	iorwf	(___fldiv@rem+1)^0,w,c
 15356   004A26  1036               	iorwf	(___fldiv@rem+2)^0,w,c
 15357   004A28  1037               	iorwf	(___fldiv@rem+3)^0,w,c
 15358   004A2A  B4D8               	btfsc	status,2,c
 15359   004A2C  EF1A  F025         	goto	u7891
 15360   004A30  EF1C  F025         	goto	u7890
 15361   004A34                     u7891:
 15362   004A34  EF34  F025         	goto	l6310
 15363   004A38                     u7890:
 15364   004A38  803B               	bsf	___fldiv@grs^0,0,c
 15365   004A3A  EF34  F025         	goto	l6310
 15366   004A3E                     l6304:
 15367   004A3E  90D8               	bcf	status,0,c
 15368   004A40  3628               	rlcf	___fldiv@b^0,f,c
 15369   004A42  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15370   004A44  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15371   004A46  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15372   004A48  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15373   004A4A  EF29  F025         	goto	u7901
 15374   004A4E  EF2B  F025         	goto	u7900
 15375   004A52                     u7901:
 15376   004A52  EF2C  F025         	goto	l870
 15377   004A56                     u7900:
 15378   004A56  8028               	bsf	___fldiv@b^0,0,c
 15379   004A58                     l870:
 15380   004A58  90D8               	bcf	status,0,c
 15381   004A5A  363B               	rlcf	___fldiv@grs^0,f,c
 15382   004A5C  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15383   004A5E  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15384   004A60  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15385   004A62  0639               	decf	___fldiv@new_exp^0,f,c
 15386   004A64  A0D8               	btfss	status,0,c
 15387   004A66  063A               	decf	(___fldiv@new_exp+1)^0,f,c
 15388   004A68                     l6310:
 15389   004A68  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 15390   004A6A  EF39  F025         	goto	u7911
 15391   004A6E  EF3B  F025         	goto	u7910
 15392   004A72                     u7911:
 15393   004A72  EF1F  F025         	goto	l6304
 15394   004A76                     u7910:
 15395   004A76  6A40               	clrf	___fldiv@aexp^0,c
 15396   004A78  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15397   004A7A  EF41  F025         	goto	u7921
 15398   004A7E  EF43  F025         	goto	u7920
 15399   004A82                     u7921:
 15400   004A82  EF67  F025         	goto	l872
 15401   004A86                     u7920:
 15402   004A86  0EFF               	movlw	255
 15403   004A88  143B               	andwf	___fldiv@grs^0,w,c
 15404   004A8A  6E30               	movwf	??___fldiv^0,c
 15405   004A8C  0EFF               	movlw	255
 15406   004A8E  143C               	andwf	(___fldiv@grs+1)^0,w,c
 15407   004A90  6E31               	movwf	(??___fldiv+1)^0,c
 15408   004A92  0EFF               	movlw	255
 15409   004A94  143D               	andwf	(___fldiv@grs+2)^0,w,c
 15410   004A96  6E32               	movwf	(??___fldiv+2)^0,c
 15411   004A98  0E7F               	movlw	127
 15412   004A9A  143E               	andwf	(___fldiv@grs+3)^0,w,c
 15413   004A9C  6E33               	movwf	(??___fldiv+3)^0,c
 15414   004A9E  5030               	movf	??___fldiv^0,w,c
 15415   004AA0  1031               	iorwf	(??___fldiv+1)^0,w,c
 15416   004AA2  1032               	iorwf	(??___fldiv+2)^0,w,c
 15417   004AA4  1033               	iorwf	(??___fldiv+3)^0,w,c
 15418   004AA6  B4D8               	btfsc	status,2,c
 15419   004AA8  EF58  F025         	goto	u7931
 15420   004AAC  EF5A  F025         	goto	u7930
 15421   004AB0                     u7931:
 15422   004AB0  EF5E  F025         	goto	l873
 15423   004AB4                     u7930:
 15424   004AB4                     l6314:
 15425   004AB4  0E01               	movlw	1
 15426   004AB6  6E40               	movwf	___fldiv@aexp^0,c
 15427   004AB8  EF67  F025         	goto	l872
 15428   004ABC                     l873:
 15429   004ABC  A028               	btfss	___fldiv@b^0,0,c
 15430   004ABE  EF63  F025         	goto	u7941
 15431   004AC2  EF65  F025         	goto	u7940
 15432   004AC6                     u7941:
 15433   004AC6  EF67  F025         	goto	l872
 15434   004ACA                     u7940:
 15435   004ACA  EF5A  F025         	goto	l6314
 15436   004ACE                     l872:
 15437   004ACE  5040               	movf	___fldiv@aexp^0,w,c
 15438   004AD0  B4D8               	btfsc	status,2,c
 15439   004AD2  EF6D  F025         	goto	u7951
 15440   004AD6  EF6F  F025         	goto	u7950
 15441   004ADA                     u7951:
 15442   004ADA  EF93  F025         	goto	l6326
 15443   004ADE                     u7950:
 15444   004ADE  0E01               	movlw	1
 15445   004AE0  2628               	addwf	___fldiv@b^0,f,c
 15446   004AE2  0E00               	movlw	0
 15447   004AE4  2229               	addwfc	(___fldiv@b+1)^0,f,c
 15448   004AE6  222A               	addwfc	(___fldiv@b+2)^0,f,c
 15449   004AE8  222B               	addwfc	(___fldiv@b+3)^0,f,c
 15450   004AEA  A02B               	btfss	(___fldiv@b+3)^0,0,c
 15451   004AEC  EF7A  F025         	goto	u7961
 15452   004AF0  EF7C  F025         	goto	u7960
 15453   004AF4                     u7961:
 15454   004AF4  EF93  F025         	goto	l6326
 15455   004AF8                     u7960:
 15456   004AF8  C028  F030         	movff	___fldiv@b,??___fldiv
 15457   004AFC  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
 15458   004B00  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
 15459   004B04  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
 15460   004B08  3433               	rlcf	(??___fldiv+3)^0,w,c
 15461   004B0A  3233               	rrcf	(??___fldiv+3)^0,f,c
 15462   004B0C  3232               	rrcf	(??___fldiv+2)^0,f,c
 15463   004B0E  3231               	rrcf	(??___fldiv+1)^0,f,c
 15464   004B10  3230               	rrcf	??___fldiv^0,f,c
 15465   004B12  C030  F028         	movff	??___fldiv,___fldiv@b
 15466   004B16  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
 15467   004B1A  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
 15468   004B1E  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
 15469   004B22  4A39               	infsnz	___fldiv@new_exp^0,f,c
 15470   004B24  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
 15471   004B26                     l6326:
 15472   004B26  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15473   004B28  EF9E  F025         	goto	u7971
 15474   004B2C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15475   004B2E  E108               	bnz	u7970
 15476   004B30  2839               	incf	___fldiv@new_exp^0,w,c
 15477   004B32  A0D8               	btfss	status,0,c
 15478   004B34  EF9E  F025         	goto	u7971
 15479   004B38  EFA0  F025         	goto	u7970
 15480   004B3C                     u7971:
 15481   004B3C  EFAB  F025         	goto	l6330
 15482   004B40                     u7970:
 15483   004B40  0E00               	movlw	0
 15484   004B42  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15485   004B44  6839               	setf	___fldiv@new_exp^0,c
 15486   004B46  0E00               	movlw	0
 15487   004B48  6E28               	movwf	___fldiv@b^0,c
 15488   004B4A  0E00               	movlw	0
 15489   004B4C  6E29               	movwf	(___fldiv@b+1)^0,c
 15490   004B4E  0E00               	movlw	0
 15491   004B50  6E2A               	movwf	(___fldiv@b+2)^0,c
 15492   004B52  0E00               	movlw	0
 15493   004B54  6E2B               	movwf	(___fldiv@b+3)^0,c
 15494   004B56                     l6330:
 15495   004B56  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15496   004B58  EFB8  F025         	goto	u7980
 15497   004B5C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15498   004B5E  E106               	bnz	u7981
 15499   004B60  0439               	decf	___fldiv@new_exp^0,w,c
 15500   004B62  B0D8               	btfsc	status,0,c
 15501   004B64  EFB6  F025         	goto	u7981
 15502   004B68  EFB8  F025         	goto	u7980
 15503   004B6C                     u7981:
 15504   004B6C  EFC5  F025         	goto	l6336
 15505   004B70                     u7980:
 15506   004B70  0E00               	movlw	0
 15507   004B72  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15508   004B74  0E00               	movlw	0
 15509   004B76  6E39               	movwf	___fldiv@new_exp^0,c
 15510   004B78  0E00               	movlw	0
 15511   004B7A  6E28               	movwf	___fldiv@b^0,c
 15512   004B7C  0E00               	movlw	0
 15513   004B7E  6E29               	movwf	(___fldiv@b+1)^0,c
 15514   004B80  0E00               	movlw	0
 15515   004B82  6E2A               	movwf	(___fldiv@b+2)^0,c
 15516   004B84  0E00               	movlw	0
 15517   004B86  6E2B               	movwf	(___fldiv@b+3)^0,c
 15518   004B88  6A38               	clrf	___fldiv@sign^0,c
 15519   004B8A                     l6336:
 15520   004B8A  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
 15521   004B8E  A03F               	btfss	___fldiv@bexp^0,0,c
 15522   004B90  EFCC  F025         	goto	u7991
 15523   004B94  EFCE  F025         	goto	u7990
 15524   004B98                     u7991:
 15525   004B98  EFD1  F025         	goto	l6342
 15526   004B9C                     u7990:
 15527   004B9C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 15528   004B9E  EFD2  F025         	goto	l6344
 15529   004BA2                     l6342:
 15530   004BA2  9E2A               	bcf	(___fldiv@b+2)^0,7,c
 15531   004BA4                     l6344:
 15532   004BA4  90D8               	bcf	status,0,c
 15533   004BA6  303F               	rrcf	___fldiv@bexp^0,w,c
 15534   004BA8  6E2B               	movwf	(___fldiv@b+3)^0,c
 15535   004BAA  EF8B  F024         	goto	l6260
 15536   004BAE                     l859:
 15537   004BAE  0012               	return		;funcret
 15538   004BB0                     __end_of___fldiv:
 15539                           	callstack 0
 15540                           
 15541 ;; *************** function _dtoa *****************
 15542 ;; Defined at:
 15543 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 15544 ;; Parameters:    Size  Location     Type
 15545 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 15546 ;;		 -> sprintf@f(11), 
 15547 ;;  d               4   23[COMRAM] long 
 15548 ;; Auto vars:     Size  Location     Type
 15549 ;;  i               2   34[COMRAM] int 
 15550 ;;  p               2   31[COMRAM] int 
 15551 ;;  w               2   29[COMRAM] int 
 15552 ;;  s               1   33[COMRAM] unsigned char 
 15553 ;; Return value:  Size  Location     Type
 15554 ;;                  1    wreg      void 
 15555 ;; Registers used:
 15556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15557 ;; Tracked objects:
 15558 ;;		On entry : 0/0
 15559 ;;		On exit  : 0/0
 15560 ;;		Unchanged: 0/0
 15561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15562 ;;      Params:         5       0       0       0       0       0       0       0       0
 15563 ;;      Locals:         9       0       0       0       0       0       0       0       0
 15564 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15565 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15566 ;;Total ram usage:       14 bytes
 15567 ;; Hardware stack levels used: 1
 15568 ;; Hardware stack levels required when called: 5
 15569 ;; This function calls:
 15570 ;;		___aldiv
 15571 ;;		___almod
 15572 ;;		_abs
 15573 ;;		_pad
 15574 ;; This function is called by:
 15575 ;;		_vfpfcnvrt
 15576 ;; This function uses a non-reentrant model
 15577 ;;
 15578                           
 15579                           	psect	text39
 15580   0057B8                     __ptext39:
 15581                           	callstack 0
 15582   0057B8                     _dtoa:
 15583                           	callstack 21
 15584   0057B8                     
 15585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 15586   0057B8  BE1B               	btfsc	(dtoa@d+3)^0,7,c
 15587   0057BA  EFE1  F02B         	goto	u8601
 15588   0057BE  EFE4  F02B         	goto	u8600
 15589   0057C2                     u8601:
 15590   0057C2  0E01               	movlw	1
 15591   0057C4  EFE5  F02B         	goto	u8610
 15592   0057C8                     u8600:
 15593   0057C8  0E00               	movlw	0
 15594   0057CA                     u8610:
 15595   0057CA  6E22               	movwf	dtoa@s^0,c
 15596                           
 15597                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 15598   0057CC  0102               	movlb	2	; () banked
 15599   0057CE  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 15600   0057D0  EFEE  F02B         	goto	u8620
 15601   0057D4  EFEC  F02B         	goto	u8621
 15602   0057D8                     u8621:
 15603   0057D8  EFF4  F02B         	goto	l992
 15604   0057DC                     u8620:
 15605   0057DC                     
 15606                           ; BSR set to: 2
 15607   0057DC  0E00               	movlw	0
 15608   0057DE  6E21               	movwf	(dtoa@p+1)^0,c
 15609   0057E0  0E01               	movlw	1
 15610   0057E2  6E20               	movwf	dtoa@p^0,c
 15611   0057E4  EFF8  F02B         	goto	l994
 15612   0057E8                     l992:
 15613                           
 15614                           ; BSR set to: 2
 15615   0057E8  C2FE  F020         	movff	_prec,dtoa@p
 15616   0057EC  C2FF  F021         	movff	_prec+1,dtoa@p+1
 15617   0057F0                     l994:
 15618                           
 15619                           ; BSR set to: 2
 15620                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 15621   0057F0  C362  F01E         	movff	_width,dtoa@w
 15622   0057F4  C363  F01F         	movff	_width+1,dtoa@w+1
 15623   0057F8                     
 15624                           ; BSR set to: 2
 15625                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 15626   0057F8  5022               	movf	dtoa@s^0,w,c
 15627   0057FA  B4D8               	btfsc	status,2,c
 15628   0057FC  EF02  F02C         	goto	u8631
 15629   005800  EF04  F02C         	goto	u8630
 15630   005804                     u8631:
 15631   005804  EF1B  F02C         	goto	l995
 15632   005808                     u8630:
 15633   005808                     
 15634                           ; BSR set to: 2
 15635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 15636   005808  061E               	decf	dtoa@w^0,f,c
 15637   00580A  A0D8               	btfss	status,0,c
 15638   00580C  061F               	decf	(dtoa@w+1)^0,f,c
 15639   00580E                     
 15640                           ; BSR set to: 2
 15641                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 15642   00580E  5022               	movf	dtoa@s^0,w,c
 15643   005810  A4D8               	btfss	status,2,c
 15644   005812  EF0D  F02C         	goto	u8641
 15645   005816  EF0F  F02C         	goto	u8640
 15646   00581A                     u8641:
 15647   00581A  EF15  F02C         	goto	l6690
 15648   00581E                     u8640:
 15649   00581E                     
 15650                           ; BSR set to: 2
 15651   00581E  0E00               	movlw	0
 15652   005820  6E1D               	movwf	(_dtoa$1346+1)^0,c
 15653   005822  0E2B               	movlw	43
 15654   005824  6E1C               	movwf	_dtoa$1346^0,c
 15655   005826  EF19  F02C         	goto	l6692
 15656   00582A                     l6690:
 15657                           
 15658                           ; BSR set to: 2
 15659   00582A  0E00               	movlw	0
 15660   00582C  6E1D               	movwf	(_dtoa$1346+1)^0,c
 15661   00582E  0E2D               	movlw	45
 15662   005830  6E1C               	movwf	_dtoa$1346^0,c
 15663   005832                     l6692:
 15664                           
 15665                           ; BSR set to: 2
 15666   005832  C01C  F022         	movff	_dtoa$1346,dtoa@s
 15667   005836                     l995:
 15668                           
 15669                           ; BSR set to: 2
 15670                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 15671   005836  0E00               	movlw	0
 15672   005838  6E24               	movwf	(dtoa@i+1)^0,c
 15673   00583A  0E4F               	movlw	79
 15674   00583C  6E23               	movwf	dtoa@i^0,c
 15675   00583E                     
 15676                           ; BSR set to: 2
 15677                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 15678   00583E  0103               	movlb	3	; () banked
 15679   005840  6BC1               	clrf	(_dbuf+79)& (0+255),b
 15680                           
 15681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 15682   005842  EF67  F02C         	goto	l6706
 15683   005846                     l6696:
 15684                           
 15685                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 15686   005846  0623               	decf	dtoa@i^0,f,c
 15687   005848  A0D8               	btfss	status,0,c
 15688   00584A  0624               	decf	(dtoa@i+1)^0,f,c
 15689   00584C                     
 15690                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 15691   00584C  0E72               	movlw	low _dbuf
 15692   00584E  2423               	addwf	dtoa@i^0,w,c
 15693   005850  6ED9               	movwf	fsr2l,c
 15694   005852  0E03               	movlw	high _dbuf
 15695   005854  2024               	addwfc	(dtoa@i+1)^0,w,c
 15696   005856  6EDA               	movwf	fsr2h,c
 15697   005858  C018  F001         	movff	dtoa@d,___almod@dividend
 15698   00585C  C019  F002         	movff	dtoa@d+1,___almod@dividend+1
 15699   005860  C01A  F003         	movff	dtoa@d+2,___almod@dividend+2
 15700   005864  C01B  F004         	movff	dtoa@d+3,___almod@dividend+3
 15701   005868  0E0A               	movlw	10
 15702   00586A  6E05               	movwf	___almod@divisor^0,c
 15703   00586C  0E00               	movlw	0
 15704   00586E  6E06               	movwf	(___almod@divisor+1)^0,c
 15705   005870  0E00               	movlw	0
 15706   005872  6E07               	movwf	(___almod@divisor+2)^0,c
 15707   005874  0E00               	movlw	0
 15708   005876  6E08               	movwf	(___almod@divisor+3)^0,c
 15709   005878  EC8E  F031         	call	___almod	;wreg free
 15710   00587C  C001  F00B         	movff	?___almod,abs@a
 15711   005880  C002  F00C         	movff	?___almod+1,abs@a+1
 15712   005884  ECED  F036         	call	_abs	;wreg free
 15713   005888  500B               	movf	?_abs^0,w,c
 15714   00588A  0F30               	addlw	48
 15715   00588C  6EDF               	movwf	indf2,c
 15716   00588E                     
 15717                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
 15718   00588E  0620               	decf	dtoa@p^0,f,c
 15719   005890  A0D8               	btfss	status,0,c
 15720   005892  0621               	decf	(dtoa@p+1)^0,f,c
 15721   005894                     
 15722                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 15723   005894  061E               	decf	dtoa@w^0,f,c
 15724   005896  A0D8               	btfss	status,0,c
 15725   005898  061F               	decf	(dtoa@w+1)^0,f,c
 15726   00589A                     
 15727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 15728   00589A  C018  F001         	movff	dtoa@d,___aldiv@dividend
 15729   00589E  C019  F002         	movff	dtoa@d+1,___aldiv@dividend+1
 15730   0058A2  C01A  F003         	movff	dtoa@d+2,___aldiv@dividend+2
 15731   0058A6  C01B  F004         	movff	dtoa@d+3,___aldiv@dividend+3
 15732   0058AA  0E0A               	movlw	10
 15733   0058AC  6E05               	movwf	___aldiv@divisor^0,c
 15734   0058AE  0E00               	movlw	0
 15735   0058B0  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15736   0058B2  0E00               	movlw	0
 15737   0058B4  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15738   0058B6  0E00               	movlw	0
 15739   0058B8  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15740   0058BA  EC82  F02E         	call	___aldiv	;wreg free
 15741   0058BE  C001  F018         	movff	?___aldiv,dtoa@d
 15742   0058C2  C002  F019         	movff	?___aldiv+1,dtoa@d+1
 15743   0058C6  C003  F01A         	movff	?___aldiv+2,dtoa@d+2
 15744   0058CA  C004  F01B         	movff	?___aldiv+3,dtoa@d+3
 15745   0058CE                     l6706:
 15746                           
 15747                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 15748   0058CE  BE24               	btfsc	(dtoa@i+1)^0,7,c
 15749   0058D0  EF72  F02C         	goto	u8651
 15750   0058D4  5024               	movf	(dtoa@i+1)^0,w,c
 15751   0058D6  E108               	bnz	u8650
 15752   0058D8  0423               	decf	dtoa@i^0,w,c
 15753   0058DA  A0D8               	btfss	status,0,c
 15754   0058DC  EF72  F02C         	goto	u8651
 15755   0058E0  EF74  F02C         	goto	u8650
 15756   0058E4                     u8651:
 15757   0058E4  EF8C  F02C         	goto	l6712
 15758   0058E8                     u8650:
 15759   0058E8  5018               	movf	dtoa@d^0,w,c
 15760   0058EA  1019               	iorwf	(dtoa@d+1)^0,w,c
 15761   0058EC  101A               	iorwf	(dtoa@d+2)^0,w,c
 15762   0058EE  101B               	iorwf	(dtoa@d+3)^0,w,c
 15763   0058F0  A4D8               	btfss	status,2,c
 15764   0058F2  EF7D  F02C         	goto	u8661
 15765   0058F6  EF7F  F02C         	goto	u8660
 15766   0058FA                     u8661:
 15767   0058FA  EF23  F02C         	goto	l6696
 15768   0058FE                     u8660:
 15769   0058FE  BE21               	btfsc	(dtoa@p+1)^0,7,c
 15770   005900  EF8C  F02C         	goto	u8670
 15771   005904  5021               	movf	(dtoa@p+1)^0,w,c
 15772   005906  E106               	bnz	u8671
 15773   005908  0420               	decf	dtoa@p^0,w,c
 15774   00590A  B0D8               	btfsc	status,0,c
 15775   00590C  EF8A  F02C         	goto	u8671
 15776   005910  EF8C  F02C         	goto	u8670
 15777   005914                     u8671:
 15778   005914  EF23  F02C         	goto	l6696
 15779   005918                     u8670:
 15780   005918                     l6712:
 15781                           
 15782                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 15783   005918  5022               	movf	dtoa@s^0,w,c
 15784   00591A  B4D8               	btfsc	status,2,c
 15785   00591C  EF92  F02C         	goto	u8681
 15786   005920  EF94  F02C         	goto	u8680
 15787   005924                     u8681:
 15788   005924  EF9F  F02C         	goto	l6718
 15789   005928                     u8680:
 15790   005928                     
 15791                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 15792   005928  0623               	decf	dtoa@i^0,f,c
 15793   00592A  A0D8               	btfss	status,0,c
 15794   00592C  0624               	decf	(dtoa@i+1)^0,f,c
 15795   00592E                     
 15796                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 15797   00592E  0E72               	movlw	low _dbuf
 15798   005930  2423               	addwf	dtoa@i^0,w,c
 15799   005932  6ED9               	movwf	fsr2l,c
 15800   005934  0E03               	movlw	high _dbuf
 15801   005936  2024               	addwfc	(dtoa@i+1)^0,w,c
 15802   005938  6EDA               	movwf	fsr2h,c
 15803   00593A  C022  FFDF         	movff	dtoa@s,indf2
 15804   00593E                     l6718:
 15805                           
 15806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 15807   00593E  C017  F00F         	movff	dtoa@fp,pad@fp
 15808   005942  0E72               	movlw	low _dbuf
 15809   005944  2423               	addwf	dtoa@i^0,w,c
 15810   005946  6E10               	movwf	pad@buf^0,c
 15811   005948  0E03               	movlw	high _dbuf
 15812   00594A  2024               	addwfc	(dtoa@i+1)^0,w,c
 15813   00594C  6E11               	movwf	(pad@buf+1)^0,c
 15814   00594E  C01E  F012         	movff	dtoa@w,pad@p
 15815   005952  C01F  F013         	movff	dtoa@w+1,pad@p+1
 15816   005956  EC65  F035         	call	_pad	;wreg free
 15817   00595A  0012               	return		;funcret
 15818   00595C                     __end_of_dtoa:
 15819                           	callstack 0
 15820                           
 15821 ;; *************** function _pad *****************
 15822 ;; Defined at:
 15823 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 15824 ;; Parameters:    Size  Location     Type
 15825 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
 15826 ;;		 -> sprintf@f(11), 
 15827 ;;  buf             2   15[COMRAM] PTR unsigned char 
 15828 ;;		 -> dbuf(80), 
 15829 ;;  p               2   17[COMRAM] int 
 15830 ;; Auto vars:     Size  Location     Type
 15831 ;;  i               2   20[COMRAM] int 
 15832 ;; Return value:  Size  Location     Type
 15833 ;;                  1    wreg      void 
 15834 ;; Registers used:
 15835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15836 ;; Tracked objects:
 15837 ;;		On entry : 0/0
 15838 ;;		On exit  : 0/0
 15839 ;;		Unchanged: 0/0
 15840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15841 ;;      Params:         5       0       0       0       0       0       0       0       0
 15842 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15843 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15844 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15845 ;;Total ram usage:        8 bytes
 15846 ;; Hardware stack levels used: 1
 15847 ;; Hardware stack levels required when called: 4
 15848 ;; This function calls:
 15849 ;;		_fputc
 15850 ;;		_fputs
 15851 ;; This function is called by:
 15852 ;;		_dtoa
 15853 ;;		_efgtoa
 15854 ;;		_utoa
 15855 ;; This function uses a non-reentrant model
 15856 ;;
 15857                           
 15858                           	psect	text40
 15859   006ACA                     __ptext40:
 15860                           	callstack 0
 15861   006ACA                     _pad:
 15862                           	callstack 21
 15863   006ACA                     
 15864                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 15865   006ACA  BE13               	btfsc	(pad@p+1)^0,7,c
 15866   006ACC  EF6C  F035         	goto	u8380
 15867   006AD0  EF6A  F035         	goto	u8381
 15868   006AD4                     u8381:
 15869   006AD4  EF70  F035         	goto	l984
 15870   006AD8                     u8380:
 15871   006AD8                     
 15872                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 15873   006AD8  0E00               	movlw	0
 15874   006ADA  6E13               	movwf	(pad@p+1)^0,c
 15875   006ADC  0E00               	movlw	0
 15876   006ADE  6E12               	movwf	pad@p^0,c
 15877   006AE0                     l984:
 15878                           
 15879                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 15880   006AE0  0E00               	movlw	0
 15881   006AE2  6E16               	movwf	(pad@i+1)^0,c
 15882   006AE4  0E00               	movlw	0
 15883   006AE6  6E15               	movwf	pad@i^0,c
 15884                           
 15885                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 15886   006AE8  EF80  F035         	goto	l6600
 15887   006AEC                     l6596:
 15888                           
 15889                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 15890   006AEC  0E00               	movlw	0
 15891   006AEE  6E02               	movwf	(fputc@c+1)^0,c
 15892   006AF0  0E20               	movlw	32
 15893   006AF2  6E01               	movwf	fputc@c^0,c
 15894   006AF4  C00F  F003         	movff	pad@fp,fputc@fp
 15895   006AF8  ECEB  F032         	call	_fputc	;wreg free
 15896   006AFC                     
 15897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 15898   006AFC  4A15               	infsnz	pad@i^0,f,c
 15899   006AFE  2A16               	incf	(pad@i+1)^0,f,c
 15900   006B00                     l6600:
 15901                           
 15902                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 15903   006B00  5012               	movf	pad@p^0,w,c
 15904   006B02  5C15               	subwf	pad@i^0,w,c
 15905   006B04  5016               	movf	(pad@i+1)^0,w,c
 15906   006B06  0A80               	xorlw	128
 15907   006B08  6E14               	movwf	??_pad^0,c
 15908   006B0A  5013               	movf	(pad@p+1)^0,w,c
 15909   006B0C  0A80               	xorlw	128
 15910   006B0E  5814               	subwfb	??_pad^0,w,c
 15911   006B10  A0D8               	btfss	status,0,c
 15912   006B12  EF8D  F035         	goto	u8391
 15913   006B16  EF8F  F035         	goto	u8390
 15914   006B1A                     u8391:
 15915   006B1A  EF76  F035         	goto	l6596
 15916   006B1E                     u8390:
 15917   006B1E                     
 15918                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 15919   006B1E  C010  F009         	movff	pad@buf,fputs@s
 15920   006B22  C011  F00A         	movff	pad@buf+1,fputs@s+1
 15921   006B26  C00F  F00B         	movff	pad@fp,fputs@fp
 15922   006B2A  EC79  F036         	call	_fputs	;wreg free
 15923   006B2E  0012               	return		;funcret
 15924   006B30                     __end_of_pad:
 15925                           	callstack 0
 15926                           
 15927 ;; *************** function _fputs *****************
 15928 ;; Defined at:
 15929 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 15930 ;; Parameters:    Size  Location     Type
 15931 ;;  s               2    8[COMRAM] PTR const unsigned char 
 15932 ;;		 -> dbuf(80), 
 15933 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
 15934 ;;		 -> sprintf@f(11), 
 15935 ;; Auto vars:     Size  Location     Type
 15936 ;;  i               2   12[COMRAM] int 
 15937 ;;  c               1   11[COMRAM] unsigned char 
 15938 ;; Return value:  Size  Location     Type
 15939 ;;                  2    8[COMRAM] int 
 15940 ;; Registers used:
 15941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15942 ;; Tracked objects:
 15943 ;;		On entry : 0/0
 15944 ;;		On exit  : 0/0
 15945 ;;		Unchanged: 0/0
 15946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15947 ;;      Params:         3       0       0       0       0       0       0       0       0
 15948 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15949 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15950 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15951 ;;Total ram usage:        6 bytes
 15952 ;; Hardware stack levels used: 1
 15953 ;; Hardware stack levels required when called: 3
 15954 ;; This function calls:
 15955 ;;		_fputc
 15956 ;; This function is called by:
 15957 ;;		_pad
 15958 ;; This function uses a non-reentrant model
 15959 ;;
 15960                           
 15961                           	psect	text41
 15962   006CF2                     __ptext41:
 15963                           	callstack 0
 15964   006CF2                     _fputs:
 15965                           	callstack 21
 15966   006CF2  0E00               	movlw	0
 15967   006CF4  6E0E               	movwf	(fputs@i+1)^0,c
 15968   006CF6  0E00               	movlw	0
 15969   006CF8  6E0D               	movwf	fputs@i^0,c
 15970   006CFA  EF88  F036         	goto	l6108
 15971   006CFE                     l6104:
 15972   006CFE  C00C  F001         	movff	fputs@c,fputc@c
 15973   006D02  6A02               	clrf	(fputc@c+1)^0,c
 15974   006D04  C00B  F003         	movff	fputs@fp,fputc@fp
 15975   006D08  ECEB  F032         	call	_fputc	;wreg free
 15976   006D0C  4A0D               	infsnz	fputs@i^0,f,c
 15977   006D0E  2A0E               	incf	(fputs@i+1)^0,f,c
 15978   006D10                     l6108:
 15979   006D10  500D               	movf	fputs@i^0,w,c
 15980   006D12  2409               	addwf	fputs@s^0,w,c
 15981   006D14  6ED9               	movwf	fsr2l,c
 15982   006D16  500E               	movf	(fputs@i+1)^0,w,c
 15983   006D18  200A               	addwfc	(fputs@s+1)^0,w,c
 15984   006D1A  6EDA               	movwf	fsr2h,c
 15985   006D1C  50DF               	movf	indf2,w,c
 15986   006D1E  6E0C               	movwf	fputs@c^0,c
 15987   006D20  500C               	movf	fputs@c^0,w,c
 15988   006D22  A4D8               	btfss	status,2,c
 15989   006D24  EF96  F036         	goto	u7601
 15990   006D28  EF98  F036         	goto	u7600
 15991   006D2C                     u7601:
 15992   006D2C  EF7F  F036         	goto	l6104
 15993   006D30                     u7600:
 15994   006D30  0012               	return		;funcret
 15995   006D32                     __end_of_fputs:
 15996                           	callstack 0
 15997                           
 15998 ;; *************** function _fputc *****************
 15999 ;; Defined at:
 16000 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;  c               2    0[COMRAM] int 
 16003 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
 16004 ;;		 -> sprintf@f(11), 
 16005 ;; Auto vars:     Size  Location     Type
 16006 ;;		None
 16007 ;; Return value:  Size  Location     Type
 16008 ;;                  2    0[COMRAM] int 
 16009 ;; Registers used:
 16010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16011 ;; Tracked objects:
 16012 ;;		On entry : 0/0
 16013 ;;		On exit  : 0/0
 16014 ;;		Unchanged: 0/0
 16015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16016 ;;      Params:         3       0       0       0       0       0       0       0       0
 16017 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16018 ;;      Temps:          5       0       0       0       0       0       0       0       0
 16019 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16020 ;;Total ram usage:        8 bytes
 16021 ;; Hardware stack levels used: 1
 16022 ;; Hardware stack levels required when called: 2
 16023 ;; This function calls:
 16024 ;;		_putch
 16025 ;; This function is called by:
 16026 ;;		_pad
 16027 ;;		_stoa
 16028 ;;		_vfpfcnvrt
 16029 ;;		_fputs
 16030 ;; This function uses a non-reentrant model
 16031 ;;
 16032                           
 16033                           	psect	text42
 16034   0065D6                     __ptext42:
 16035                           	callstack 0
 16036   0065D6                     _fputc:
 16037                           	callstack 21
 16038   0065D6  5003               	movf	fputc@fp^0,w,c
 16039   0065D8  B4D8               	btfsc	status,2,c
 16040   0065DA  EFF1  F032         	goto	u7171
 16041   0065DE  EFF3  F032         	goto	u7170
 16042   0065E2                     u7171:
 16043   0065E2  EFFB  F032         	goto	l5898
 16044   0065E6                     u7170:
 16045   0065E6  5003               	movf	fputc@fp^0,w,c
 16046   0065E8  A4D8               	btfss	status,2,c
 16047   0065EA  EFF9  F032         	goto	u7181
 16048   0065EE  EFFB  F032         	goto	u7180
 16049   0065F2                     u7181:
 16050   0065F2  EF00  F033         	goto	l5900
 16051   0065F6                     u7180:
 16052   0065F6                     l5898:
 16053   0065F6  5001               	movf	fputc@c^0,w,c
 16054   0065F8  EC3C  F037         	call	_putch
 16055   0065FC  EF47  F033         	goto	l1201
 16056   006600                     l5900:
 16057   006600  5003               	movf	fputc@fp^0,w,c
 16058   006602  6ED9               	movwf	fsr2l,c
 16059   006604  6ADA               	clrf	fsr2h,c
 16060   006606  0E09               	movlw	9
 16061   006608  26D9               	addwf	fsr2l,f,c
 16062   00660A  50DE               	movf	postinc2,w,c
 16063   00660C  10DE               	iorwf	postinc2,w,c
 16064   00660E  B4D8               	btfsc	status,2,c
 16065   006610  EF0C  F033         	goto	u7191
 16066   006614  EF0E  F033         	goto	u7190
 16067   006618                     u7191:
 16068   006618  EF27  F033         	goto	l5904
 16069   00661C                     u7190:
 16070   00661C  5003               	movf	fputc@fp^0,w,c
 16071   00661E  6ED9               	movwf	fsr2l,c
 16072   006620  6ADA               	clrf	fsr2h,c
 16073   006622  0E09               	movlw	9
 16074   006624  26D9               	addwf	fsr2l,f,c
 16075   006626  5003               	movf	fputc@fp^0,w,c
 16076   006628  6EE1               	movwf	fsr1l,c
 16077   00662A  6AE2               	clrf	fsr1h,c
 16078   00662C  0E02               	movlw	2
 16079   00662E  26E1               	addwf	fsr1l,f,c
 16080   006630  50DE               	movf	postinc2,w,c
 16081   006632  5CE6               	subwf	postinc1,w,c
 16082   006634  50E6               	movf	postinc1,w,c
 16083   006636  0A80               	xorlw	128
 16084   006638  6E08               	movwf	(??_fputc+4)^0,c
 16085   00663A  50DE               	movf	postinc2,w,c
 16086   00663C  0A80               	xorlw	128
 16087   00663E  5808               	subwfb	(??_fputc+4)^0,w,c
 16088   006640  B0D8               	btfsc	status,0,c
 16089   006642  EF25  F033         	goto	u7201
 16090   006646  EF27  F033         	goto	u7200
 16091   00664A                     u7201:
 16092   00664A  EF47  F033         	goto	l1201
 16093   00664E                     u7200:
 16094   00664E                     l5904:
 16095   00664E  5003               	movf	fputc@fp^0,w,c
 16096   006650  6ED9               	movwf	fsr2l,c
 16097   006652  6ADA               	clrf	fsr2h,c
 16098   006654  0E02               	movlw	2
 16099   006656  26D9               	addwf	fsr2l,f,c
 16100   006658  CFDE F004          	movff	postinc2,??_fputc
 16101   00665C  CFDD F005          	movff	postdec2,??_fputc+1
 16102   006660  5003               	movf	fputc@fp^0,w,c
 16103   006662  6ED9               	movwf	fsr2l,c
 16104   006664  6ADA               	clrf	fsr2h,c
 16105   006666  CFDE F006          	movff	postinc2,??_fputc+2
 16106   00666A  CFDD F007          	movff	postdec2,??_fputc+3
 16107   00666E  5004               	movf	??_fputc^0,w,c
 16108   006670  2406               	addwf	(??_fputc+2)^0,w,c
 16109   006672  6ED9               	movwf	fsr2l,c
 16110   006674  5005               	movf	(??_fputc+1)^0,w,c
 16111   006676  2007               	addwfc	(??_fputc+3)^0,w,c
 16112   006678  6EDA               	movwf	fsr2h,c
 16113   00667A  C001  FFDF         	movff	fputc@c,indf2
 16114   00667E  5003               	movf	fputc@fp^0,w,c
 16115   006680  6ED9               	movwf	fsr2l,c
 16116   006682  6ADA               	clrf	fsr2h,c
 16117   006684  0E02               	movlw	2
 16118   006686  26D9               	addwf	fsr2l,f,c
 16119   006688  2ADE               	incf	postinc2,f,c
 16120   00668A  0E00               	movlw	0
 16121   00668C  22DD               	addwfc	postdec2,f,c
 16122   00668E                     l1201:
 16123   00668E  0012               	return		;funcret
 16124   006690                     __end_of_fputc:
 16125                           	callstack 0
 16126                           
 16127 ;; *************** function _putch *****************
 16128 ;; Defined at:
 16129 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 16130 ;; Parameters:    Size  Location     Type
 16131 ;;  c               1    wreg     unsigned char 
 16132 ;; Auto vars:     Size  Location     Type
 16133 ;;  c               1    0[COMRAM] unsigned char 
 16134 ;; Return value:  Size  Location     Type
 16135 ;;                  1    wreg      void 
 16136 ;; Registers used:
 16137 ;;		wreg
 16138 ;; Tracked objects:
 16139 ;;		On entry : 0/0
 16140 ;;		On exit  : 0/0
 16141 ;;		Unchanged: 0/0
 16142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16143 ;;      Params:         0       0       0       0       0       0       0       0       0
 16144 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16145 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16146 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16147 ;;Total ram usage:        0 bytes
 16148 ;; Hardware stack levels used: 1
 16149 ;; Hardware stack levels required when called: 1
 16150 ;; This function calls:
 16151 ;;		Nothing
 16152 ;; This function is called by:
 16153 ;;		_fputc
 16154 ;; This function uses a non-reentrant model
 16155 ;;
 16156                           
 16157                           	psect	text43
 16158   006E78                     __ptext43:
 16159                           	callstack 0
 16160   006E78                     _putch:
 16161                           	callstack 21
 16162   006E78  0012               	return		;funcret
 16163   006E7A                     __end_of_putch:
 16164                           	callstack 0
 16165                           
 16166 ;; *************** function _abs *****************
 16167 ;; Defined at:
 16168 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 16169 ;; Parameters:    Size  Location     Type
 16170 ;;  a               2   10[COMRAM] int 
 16171 ;; Auto vars:     Size  Location     Type
 16172 ;;		None
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  2   10[COMRAM] int 
 16175 ;; Registers used:
 16176 ;;		wreg, status,2, status,0
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/0
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16182 ;;      Params:         2       0       0       0       0       0       0       0       0
 16183 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16184 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16185 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16186 ;;Total ram usage:        4 bytes
 16187 ;; Hardware stack levels used: 1
 16188 ;; Hardware stack levels required when called: 1
 16189 ;; This function calls:
 16190 ;;		Nothing
 16191 ;; This function is called by:
 16192 ;;		_dtoa
 16193 ;; This function uses a non-reentrant model
 16194 ;;
 16195                           
 16196                           	psect	text44
 16197   006DDA                     __ptext44:
 16198                           	callstack 0
 16199   006DDA                     _abs:
 16200                           	callstack 24
 16201   006DDA  BE0C               	btfsc	(abs@a+1)^0,7,c
 16202   006DDC  EFF2  F036         	goto	u8401
 16203   006DE0  EFF4  F036         	goto	u8400
 16204   006DE4                     u8401:
 16205   006DE4  EFFA  F036         	goto	l1160
 16206   006DE8                     u8400:
 16207   006DE8  C00B  F00B         	movff	abs@a,?_abs
 16208   006DEC  C00C  F00C         	movff	abs@a+1,?_abs+1
 16209   006DF0  EF06  F037         	goto	l1163
 16210   006DF4                     l1160:
 16211   006DF4  C00B  F00D         	movff	abs@a,??_abs
 16212   006DF8  C00C  F00E         	movff	abs@a+1,??_abs+1
 16213   006DFC  1E0D               	comf	??_abs^0,f,c
 16214   006DFE  1E0E               	comf	(??_abs+1)^0,f,c
 16215   006E00  4A0D               	infsnz	??_abs^0,f,c
 16216   006E02  2A0E               	incf	(??_abs+1)^0,f,c
 16217   006E04  C00D  F00B         	movff	??_abs,?_abs
 16218   006E08  C00E  F00C         	movff	??_abs+1,?_abs+1
 16219   006E0C                     l1163:
 16220   006E0C  0012               	return		;funcret
 16221   006E0E                     __end_of_abs:
 16222                           	callstack 0
 16223                           
 16224 ;; *************** function ___almod *****************
 16225 ;; Defined at:
 16226 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
 16227 ;; Parameters:    Size  Location     Type
 16228 ;;  dividend        4    0[COMRAM] long 
 16229 ;;  divisor         4    4[COMRAM] long 
 16230 ;; Auto vars:     Size  Location     Type
 16231 ;;  sign            1    9[COMRAM] unsigned char 
 16232 ;;  counter         1    8[COMRAM] unsigned char 
 16233 ;; Return value:  Size  Location     Type
 16234 ;;                  4    0[COMRAM] long 
 16235 ;; Registers used:
 16236 ;;		wreg, status,2, status,0
 16237 ;; Tracked objects:
 16238 ;;		On entry : 0/0
 16239 ;;		On exit  : 0/0
 16240 ;;		Unchanged: 0/0
 16241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16242 ;;      Params:         8       0       0       0       0       0       0       0       0
 16243 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16244 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16245 ;;      Totals:        10       0       0       0       0       0       0       0       0
 16246 ;;Total ram usage:       10 bytes
 16247 ;; Hardware stack levels used: 1
 16248 ;; Hardware stack levels required when called: 1
 16249 ;; This function calls:
 16250 ;;		Nothing
 16251 ;; This function is called by:
 16252 ;;		_dtoa
 16253 ;; This function uses a non-reentrant model
 16254 ;;
 16255                           
 16256                           	psect	text45
 16257   00631C                     __ptext45:
 16258                           	callstack 0
 16259   00631C                     ___almod:
 16260                           	callstack 24
 16261   00631C  6A0A               	clrf	___almod@sign^0,c
 16262   00631E  BE04               	btfsc	(___almod@dividend+3)^0,7,c
 16263   006320  EF96  F031         	goto	u7710
 16264   006324  EF94  F031         	goto	u7711
 16265   006328                     u7711:
 16266   006328  EFA0  F031         	goto	l6188
 16267   00632C                     u7710:
 16268   00632C  1E04               	comf	(___almod@dividend+3)^0,f,c
 16269   00632E  1E03               	comf	(___almod@dividend+2)^0,f,c
 16270   006330  1E02               	comf	(___almod@dividend+1)^0,f,c
 16271   006332  6C01               	negf	___almod@dividend^0,c
 16272   006334  0E00               	movlw	0
 16273   006336  2202               	addwfc	(___almod@dividend+1)^0,f,c
 16274   006338  2203               	addwfc	(___almod@dividend+2)^0,f,c
 16275   00633A  2204               	addwfc	(___almod@dividend+3)^0,f,c
 16276   00633C  0E01               	movlw	1
 16277   00633E  6E0A               	movwf	___almod@sign^0,c
 16278   006340                     l6188:
 16279   006340  BE08               	btfsc	(___almod@divisor+3)^0,7,c
 16280   006342  EFA7  F031         	goto	u7720
 16281   006346  EFA5  F031         	goto	u7721
 16282   00634A                     u7721:
 16283   00634A  EFAF  F031         	goto	l6192
 16284   00634E                     u7720:
 16285   00634E  1E08               	comf	(___almod@divisor+3)^0,f,c
 16286   006350  1E07               	comf	(___almod@divisor+2)^0,f,c
 16287   006352  1E06               	comf	(___almod@divisor+1)^0,f,c
 16288   006354  6C05               	negf	___almod@divisor^0,c
 16289   006356  0E00               	movlw	0
 16290   006358  2206               	addwfc	(___almod@divisor+1)^0,f,c
 16291   00635A  2207               	addwfc	(___almod@divisor+2)^0,f,c
 16292   00635C  2208               	addwfc	(___almod@divisor+3)^0,f,c
 16293   00635E                     l6192:
 16294   00635E  5005               	movf	___almod@divisor^0,w,c
 16295   006360  1006               	iorwf	(___almod@divisor+1)^0,w,c
 16296   006362  1007               	iorwf	(___almod@divisor+2)^0,w,c
 16297   006364  1008               	iorwf	(___almod@divisor+3)^0,w,c
 16298   006366  B4D8               	btfsc	status,2,c
 16299   006368  EFB8  F031         	goto	u7731
 16300   00636C  EFBA  F031         	goto	u7730
 16301   006370                     u7731:
 16302   006370  EFEA  F031         	goto	l6208
 16303   006374                     u7730:
 16304   006374  0E01               	movlw	1
 16305   006376  6E09               	movwf	___almod@counter^0,c
 16306   006378  EFC4  F031         	goto	l6198
 16307   00637C                     l6196:
 16308   00637C  90D8               	bcf	status,0,c
 16309   00637E  3605               	rlcf	___almod@divisor^0,f,c
 16310   006380  3606               	rlcf	(___almod@divisor+1)^0,f,c
 16311   006382  3607               	rlcf	(___almod@divisor+2)^0,f,c
 16312   006384  3608               	rlcf	(___almod@divisor+3)^0,f,c
 16313   006386  2A09               	incf	___almod@counter^0,f,c
 16314   006388                     l6198:
 16315   006388  AE08               	btfss	(___almod@divisor+3)^0,7,c
 16316   00638A  EFC9  F031         	goto	u7741
 16317   00638E  EFCB  F031         	goto	u7740
 16318   006392                     u7741:
 16319   006392  EFBE  F031         	goto	l6196
 16320   006396                     u7740:
 16321   006396                     l6200:
 16322   006396  5005               	movf	___almod@divisor^0,w,c
 16323   006398  5C01               	subwf	___almod@dividend^0,w,c
 16324   00639A  5006               	movf	(___almod@divisor+1)^0,w,c
 16325   00639C  5802               	subwfb	(___almod@dividend+1)^0,w,c
 16326   00639E  5007               	movf	(___almod@divisor+2)^0,w,c
 16327   0063A0  5803               	subwfb	(___almod@dividend+2)^0,w,c
 16328   0063A2  5008               	movf	(___almod@divisor+3)^0,w,c
 16329   0063A4  5804               	subwfb	(___almod@dividend+3)^0,w,c
 16330   0063A6  A0D8               	btfss	status,0,c
 16331   0063A8  EFD8  F031         	goto	u7751
 16332   0063AC  EFDA  F031         	goto	u7750
 16333   0063B0                     u7751:
 16334   0063B0  EFE2  F031         	goto	l6204
 16335   0063B4                     u7750:
 16336   0063B4  5005               	movf	___almod@divisor^0,w,c
 16337   0063B6  5E01               	subwf	___almod@dividend^0,f,c
 16338   0063B8  5006               	movf	(___almod@divisor+1)^0,w,c
 16339   0063BA  5A02               	subwfb	(___almod@dividend+1)^0,f,c
 16340   0063BC  5007               	movf	(___almod@divisor+2)^0,w,c
 16341   0063BE  5A03               	subwfb	(___almod@dividend+2)^0,f,c
 16342   0063C0  5008               	movf	(___almod@divisor+3)^0,w,c
 16343   0063C2  5A04               	subwfb	(___almod@dividend+3)^0,f,c
 16344   0063C4                     l6204:
 16345   0063C4  90D8               	bcf	status,0,c
 16346   0063C6  3208               	rrcf	(___almod@divisor+3)^0,f,c
 16347   0063C8  3207               	rrcf	(___almod@divisor+2)^0,f,c
 16348   0063CA  3206               	rrcf	(___almod@divisor+1)^0,f,c
 16349   0063CC  3205               	rrcf	___almod@divisor^0,f,c
 16350   0063CE  2E09               	decfsz	___almod@counter^0,f,c
 16351   0063D0  EFCB  F031         	goto	l6200
 16352   0063D4                     l6208:
 16353   0063D4  500A               	movf	___almod@sign^0,w,c
 16354   0063D6  B4D8               	btfsc	status,2,c
 16355   0063D8  EFF0  F031         	goto	u7761
 16356   0063DC  EFF2  F031         	goto	u7760
 16357   0063E0                     u7761:
 16358   0063E0  EFFA  F031         	goto	l6212
 16359   0063E4                     u7760:
 16360   0063E4  1E04               	comf	(___almod@dividend+3)^0,f,c
 16361   0063E6  1E03               	comf	(___almod@dividend+2)^0,f,c
 16362   0063E8  1E02               	comf	(___almod@dividend+1)^0,f,c
 16363   0063EA  6C01               	negf	___almod@dividend^0,c
 16364   0063EC  0E00               	movlw	0
 16365   0063EE  2202               	addwfc	(___almod@dividend+1)^0,f,c
 16366   0063F0  2203               	addwfc	(___almod@dividend+2)^0,f,c
 16367   0063F2  2204               	addwfc	(___almod@dividend+3)^0,f,c
 16368   0063F4                     l6212:
 16369   0063F4  C001  F001         	movff	___almod@dividend,?___almod
 16370   0063F8  C002  F002         	movff	___almod@dividend+1,?___almod+1
 16371   0063FC  C003  F003         	movff	___almod@dividend+2,?___almod+2
 16372   006400  C004  F004         	movff	___almod@dividend+3,?___almod+3
 16373   006404  0012               	return		;funcret
 16374   006406                     __end_of___almod:
 16375                           	callstack 0
 16376                           
 16377 ;; *************** function ___aldiv *****************
 16378 ;; Defined at:
 16379 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
 16380 ;; Parameters:    Size  Location     Type
 16381 ;;  dividend        4    0[COMRAM] long 
 16382 ;;  divisor         4    4[COMRAM] long 
 16383 ;; Auto vars:     Size  Location     Type
 16384 ;;  quotient        4   10[COMRAM] long 
 16385 ;;  sign            1    9[COMRAM] unsigned char 
 16386 ;;  counter         1    8[COMRAM] unsigned char 
 16387 ;; Return value:  Size  Location     Type
 16388 ;;                  4    0[COMRAM] long 
 16389 ;; Registers used:
 16390 ;;		wreg, status,2, status,0
 16391 ;; Tracked objects:
 16392 ;;		On entry : 0/0
 16393 ;;		On exit  : 0/0
 16394 ;;		Unchanged: 0/0
 16395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16396 ;;      Params:         8       0       0       0       0       0       0       0       0
 16397 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16398 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16399 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16400 ;;Total ram usage:       14 bytes
 16401 ;; Hardware stack levels used: 1
 16402 ;; Hardware stack levels required when called: 1
 16403 ;; This function calls:
 16404 ;;		Nothing
 16405 ;; This function is called by:
 16406 ;;		_dtoa
 16407 ;; This function uses a non-reentrant model
 16408 ;;
 16409                           
 16410                           	psect	text46
 16411   005D04                     __ptext46:
 16412                           	callstack 0
 16413   005D04                     ___aldiv:
 16414                           	callstack 24
 16415   005D04  6A0A               	clrf	___aldiv@sign^0,c
 16416   005D06  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 16417   005D08  EF8A  F02E         	goto	u7650
 16418   005D0C  EF88  F02E         	goto	u7651
 16419   005D10                     u7651:
 16420   005D10  EF94  F02E         	goto	l6144
 16421   005D14                     u7650:
 16422   005D14  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 16423   005D16  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 16424   005D18  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 16425   005D1A  6C05               	negf	___aldiv@divisor^0,c
 16426   005D1C  0E00               	movlw	0
 16427   005D1E  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 16428   005D20  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 16429   005D22  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 16430   005D24  0E01               	movlw	1
 16431   005D26  6E0A               	movwf	___aldiv@sign^0,c
 16432   005D28                     l6144:
 16433   005D28  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 16434   005D2A  EF9B  F02E         	goto	u7660
 16435   005D2E  EF99  F02E         	goto	u7661
 16436   005D32                     u7661:
 16437   005D32  EFA5  F02E         	goto	l6150
 16438   005D36                     u7660:
 16439   005D36  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 16440   005D38  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 16441   005D3A  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 16442   005D3C  6C01               	negf	___aldiv@dividend^0,c
 16443   005D3E  0E00               	movlw	0
 16444   005D40  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 16445   005D42  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 16446   005D44  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 16447   005D46  0E01               	movlw	1
 16448   005D48  1A0A               	xorwf	___aldiv@sign^0,f,c
 16449   005D4A                     l6150:
 16450   005D4A  0E00               	movlw	0
 16451   005D4C  6E0B               	movwf	___aldiv@quotient^0,c
 16452   005D4E  0E00               	movlw	0
 16453   005D50  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 16454   005D52  0E00               	movlw	0
 16455   005D54  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 16456   005D56  0E00               	movlw	0
 16457   005D58  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 16458   005D5A  5005               	movf	___aldiv@divisor^0,w,c
 16459   005D5C  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 16460   005D5E  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 16461   005D60  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 16462   005D62  B4D8               	btfsc	status,2,c
 16463   005D64  EFB6  F02E         	goto	u7671
 16464   005D68  EFB8  F02E         	goto	u7670
 16465   005D6C                     u7671:
 16466   005D6C  EFEE  F02E         	goto	l6172
 16467   005D70                     u7670:
 16468   005D70  0E01               	movlw	1
 16469   005D72  6E09               	movwf	___aldiv@counter^0,c
 16470   005D74  EFC2  F02E         	goto	l6158
 16471   005D78                     l6156:
 16472   005D78  90D8               	bcf	status,0,c
 16473   005D7A  3605               	rlcf	___aldiv@divisor^0,f,c
 16474   005D7C  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 16475   005D7E  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 16476   005D80  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 16477   005D82  2A09               	incf	___aldiv@counter^0,f,c
 16478   005D84                     l6158:
 16479   005D84  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 16480   005D86  EFC7  F02E         	goto	u7681
 16481   005D8A  EFC9  F02E         	goto	u7680
 16482   005D8E                     u7681:
 16483   005D8E  EFBC  F02E         	goto	l6156
 16484   005D92                     u7680:
 16485   005D92                     l6160:
 16486   005D92  90D8               	bcf	status,0,c
 16487   005D94  360B               	rlcf	___aldiv@quotient^0,f,c
 16488   005D96  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 16489   005D98  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 16490   005D9A  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 16491   005D9C  5005               	movf	___aldiv@divisor^0,w,c
 16492   005D9E  5C01               	subwf	___aldiv@dividend^0,w,c
 16493   005DA0  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16494   005DA2  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 16495   005DA4  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16496   005DA6  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 16497   005DA8  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16498   005DAA  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 16499   005DAC  A0D8               	btfss	status,0,c
 16500   005DAE  EFDB  F02E         	goto	u7691
 16501   005DB2  EFDD  F02E         	goto	u7690
 16502   005DB6                     u7691:
 16503   005DB6  EFE6  F02E         	goto	l6168
 16504   005DBA                     u7690:
 16505   005DBA  5005               	movf	___aldiv@divisor^0,w,c
 16506   005DBC  5E01               	subwf	___aldiv@dividend^0,f,c
 16507   005DBE  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16508   005DC0  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 16509   005DC2  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16510   005DC4  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 16511   005DC6  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16512   005DC8  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 16513   005DCA  800B               	bsf	___aldiv@quotient^0,0,c
 16514   005DCC                     l6168:
 16515   005DCC  90D8               	bcf	status,0,c
 16516   005DCE  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 16517   005DD0  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 16518   005DD2  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 16519   005DD4  3205               	rrcf	___aldiv@divisor^0,f,c
 16520   005DD6  2E09               	decfsz	___aldiv@counter^0,f,c
 16521   005DD8  EFC9  F02E         	goto	l6160
 16522   005DDC                     l6172:
 16523   005DDC  500A               	movf	___aldiv@sign^0,w,c
 16524   005DDE  B4D8               	btfsc	status,2,c
 16525   005DE0  EFF4  F02E         	goto	u7701
 16526   005DE4  EFF6  F02E         	goto	u7700
 16527   005DE8                     u7701:
 16528   005DE8  EFFE  F02E         	goto	l6176
 16529   005DEC                     u7700:
 16530   005DEC  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 16531   005DEE  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 16532   005DF0  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 16533   005DF2  6C0B               	negf	___aldiv@quotient^0,c
 16534   005DF4  0E00               	movlw	0
 16535   005DF6  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 16536   005DF8  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 16537   005DFA  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 16538   005DFC                     l6176:
 16539   005DFC  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 16540   005E00  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 16541   005E04  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 16542   005E08  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 16543   005E0C  0012               	return		;funcret
 16544   005E0E                     __end_of___aldiv:
 16545                           	callstack 0
 16546                           
 16547 ;; *************** function _Handle_Commands *****************
 16548 ;; Defined at:
 16549 ;;		line 168 in file "newmain.c"
 16550 ;; Parameters:    Size  Location     Type
 16551 ;;		None
 16552 ;; Auto vars:     Size  Location     Type
 16553 ;;  cmd             1    4[COMRAM] unsigned char 
 16554 ;; Return value:  Size  Location     Type
 16555 ;;                  1    wreg      void 
 16556 ;; Registers used:
 16557 ;;		wreg, status,2, status,0
 16558 ;; Tracked objects:
 16559 ;;		On entry : 0/0
 16560 ;;		On exit  : 0/0
 16561 ;;		Unchanged: 0/0
 16562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16563 ;;      Params:         0       0       0       0       0       0       0       0       0
 16564 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16565 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16566 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16567 ;;Total ram usage:        5 bytes
 16568 ;; Hardware stack levels used: 1
 16569 ;; Hardware stack levels required when called: 1
 16570 ;; This function calls:
 16571 ;;		Nothing
 16572 ;; This function is called by:
 16573 ;;		_main
 16574 ;; This function uses a non-reentrant model
 16575 ;;
 16576                           
 16577                           	psect	text47
 16578   00595C                     __ptext47:
 16579                           	callstack 0
 16580   00595C                     _Handle_Commands:
 16581                           	callstack 29
 16582   00595C                     
 16583                           ;newmain.c: 169:     if(PIR1bits.RCIF) {
 16584   00595C  AA9E               	btfss	158,5,c	;volatile
 16585   00595E  EFB3  F02C         	goto	u10201
 16586   005962  EFB5  F02C         	goto	u10200
 16587   005966                     u10201:
 16588   005966  EFED  F02C         	goto	l7810
 16589   00596A                     u10200:
 16590   00596A                     
 16591                           ;newmain.c: 170:         char cmd = RCREG;
 16592   00596A  CFAE F005          	movff	4014,Handle_Commands@cmd	;volatile
 16593                           
 16594                           ;newmain.c: 171:         switch(cmd) {
 16595   00596E  EFDE  F02C         	goto	l7808
 16596   005972                     l7796:
 16597                           
 16598                           ;newmain.c: 173:                 if(!trigger_test) {
 16599   005972  505E               	movf	_trigger_test^0,w,c
 16600   005974  A4D8               	btfss	status,2,c
 16601   005976  EFBF  F02C         	goto	u10211
 16602   00597A  EFC1  F02C         	goto	u10210
 16603   00597E                     u10211:
 16604   00597E  EFED  F02C         	goto	l7810
 16605   005982                     u10210:
 16606   005982                     
 16607                           ;newmain.c: 174:                     trigger_test = 1;
 16608   005982  0E01               	movlw	1
 16609   005984  6E5E               	movwf	_trigger_test^0,c
 16610   005986                     
 16611                           ;newmain.c: 175:                     test_start_time = system_millis;
 16612   005986  C2FA  F344         	movff	_system_millis,_test_start_time
 16613   00598A  C2FB  F345         	movff	_system_millis+1,_test_start_time+1
 16614   00598E  C2FC  F346         	movff	_system_millis+2,_test_start_time+2
 16615   005992  C2FD  F347         	movff	_system_millis+3,_test_start_time+3
 16616   005996                     
 16617                           ;newmain.c: 176:                     test_start_flow = total_flow;
 16618   005996  C348  F32C         	movff	_total_flow,_test_start_flow
 16619   00599A  C349  F32D         	movff	_total_flow+1,_test_start_flow+1
 16620   00599E  C34A  F32E         	movff	_total_flow+2,_test_start_flow+2
 16621   0059A2  C34B  F32F         	movff	_total_flow+3,_test_start_flow+3
 16622   0059A6  EFED  F02C         	goto	l7810
 16623   0059AA                     l7804:
 16624                           
 16625                           ;newmain.c: 180:                 shutdown_system = 1;
 16626   0059AA  0E01               	movlw	1
 16627   0059AC  0103               	movlb	3	; () banked
 16628   0059AE  6F6B               	movwf	_shutdown_system& (0+255),b
 16629                           
 16630                           ;newmain.c: 181:                 break;
 16631   0059B0  EFED  F02C         	goto	l7810
 16632   0059B4                     l170:
 16633                           
 16634                           ;newmain.c: 183:                 shutdown_system = 0;
 16635   0059B4  0103               	movlb	3	; () banked
 16636   0059B6  6B6B               	clrf	_shutdown_system& (0+255),b
 16637                           
 16638                           ;newmain.c: 184:                 break;
 16639   0059B8  EFED  F02C         	goto	l7810
 16640   0059BC                     l7808:
 16641   0059BC  5005               	movf	Handle_Commands@cmd^0,w,c
 16642                           
 16643                           ; Switch size 1, requested type "simple"
 16644                           ; Number of cases is 3, Range of values is 82 to 84
 16645                           ; switch strategies available:
 16646                           ; Name         Instructions Cycles
 16647                           ; simple_byte           10     6 (average)
 16648                           ;	Chosen strategy is simple_byte
 16649   0059BE  0A52               	xorlw	82	; case 82
 16650   0059C0  B4D8               	btfsc	status,2,c
 16651   0059C2  EFDA  F02C         	goto	l170
 16652   0059C6  0A01               	xorlw	1	; case 83
 16653   0059C8  B4D8               	btfsc	status,2,c
 16654   0059CA  EFD5  F02C         	goto	l7804
 16655   0059CE  0A07               	xorlw	7	; case 84
 16656   0059D0  B4D8               	btfsc	status,2,c
 16657   0059D2  EFB9  F02C         	goto	l7796
 16658   0059D6  EFED  F02C         	goto	l7810
 16659   0059DA                     l7810:
 16660                           
 16661                           ;newmain.c: 189:     if(trigger_test) {
 16662   0059DA  505E               	movf	_trigger_test^0,w,c
 16663   0059DC  B4D8               	btfsc	status,2,c
 16664   0059DE  EFF3  F02C         	goto	u10221
 16665   0059E2  EFF5  F02C         	goto	u10220
 16666   0059E6                     u10221:
 16667   0059E6  EF5D  F02D         	goto	l176
 16668   0059EA                     u10220:
 16669   0059EA                     
 16670                           ;newmain.c: 190:         PORTBbits.RB0 = 1;
 16671   0059EA  8081               	bsf	129,0,c	;volatile
 16672   0059EC                     
 16673                           ;newmain.c: 191:         pump_active = 1;
 16674   0059EC  0E01               	movlw	1
 16675   0059EE  0103               	movlb	3	; () banked
 16676   0059F0  6F70               	movwf	_pump_active& (0+255),b
 16677   0059F2                     
 16678                           ; BSR set to: 3
 16679                           ;newmain.c: 194:         static unsigned long last_blink = 0;;newmain.c: 195:         if
      +                          (system_millis - last_blink >= 500) {
 16680   0059F2  5128               	movf	Handle_Commands@last_blink& (0+255),w,b
 16681   0059F4  0102               	movlb	2	; () banked
 16682   0059F6  5DFA               	subwf	_system_millis& (0+255),w,b
 16683   0059F8  6E01               	movwf	??_Handle_Commands^0,c
 16684   0059FA  0103               	movlb	3	; () banked
 16685   0059FC  5129               	movf	(Handle_Commands@last_blink+1)& (0+255),w,b
 16686   0059FE  0102               	movlb	2	; () banked
 16687   005A00  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
 16688   005A02  6E02               	movwf	(??_Handle_Commands+1)^0,c
 16689   005A04  0103               	movlb	3	; () banked
 16690   005A06  512A               	movf	(Handle_Commands@last_blink+2)& (0+255),w,b
 16691   005A08  0102               	movlb	2	; () banked
 16692   005A0A  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
 16693   005A0C  6E03               	movwf	(??_Handle_Commands+2)^0,c
 16694   005A0E  0103               	movlb	3	; () banked
 16695   005A10  512B               	movf	(Handle_Commands@last_blink+3)& (0+255),w,b
 16696   005A12  0102               	movlb	2	; () banked
 16697   005A14  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
 16698   005A16  6E04               	movwf	(??_Handle_Commands+3)^0,c
 16699   005A18  5004               	movf	(??_Handle_Commands+3)^0,w,c
 16700   005A1A  1003               	iorwf	(??_Handle_Commands+2)^0,w,c
 16701   005A1C  E10B               	bnz	u10230
 16702   005A1E  0EF4               	movlw	244
 16703   005A20  5C01               	subwf	??_Handle_Commands^0,w,c
 16704   005A22  0E01               	movlw	1
 16705   005A24  5802               	subwfb	(??_Handle_Commands+1)^0,w,c
 16706   005A26  A0D8               	btfss	status,0,c
 16707   005A28  EF18  F02D         	goto	u10231
 16708   005A2C  EF1A  F02D         	goto	u10230
 16709   005A30                     u10231:
 16710   005A30  EF33  F02D         	goto	l7822
 16711   005A34                     u10230:
 16712   005A34                     
 16713                           ; BSR set to: 2
 16714                           ;newmain.c: 196:             PORTBbits.RB5 = !PORTBbits.RB5;
 16715   005A34  AA81               	btfss	129,5,c	;volatile
 16716   005A36  EF1F  F02D         	goto	u10241
 16717   005A3A  EF23  F02D         	goto	u10240
 16718   005A3E                     u10241:
 16719   005A3E  6A01               	clrf	??_Handle_Commands^0,c
 16720   005A40  2A01               	incf	??_Handle_Commands^0,f,c
 16721   005A42  EF24  F02D         	goto	u10258
 16722   005A46                     u10240:
 16723   005A46  6A01               	clrf	??_Handle_Commands^0,c
 16724   005A48                     u10258:
 16725   005A48  3A01               	swapf	??_Handle_Commands^0,f,c
 16726   005A4A  4601               	rlncf	??_Handle_Commands^0,f,c
 16727   005A4C  5081               	movf	129,w,c	;volatile
 16728   005A4E  1801               	xorwf	??_Handle_Commands^0,w,c
 16729   005A50  0BDF               	andlw	-33
 16730   005A52  1801               	xorwf	??_Handle_Commands^0,w,c
 16731   005A54  6E81               	movwf	129,c	;volatile
 16732   005A56                     
 16733                           ;newmain.c: 197:             last_blink = system_millis;
 16734   005A56  C2FA  F328         	movff	_system_millis,Handle_Commands@last_blink
 16735   005A5A  C2FB  F329         	movff	_system_millis+1,Handle_Commands@last_blink+1
 16736   005A5E  C2FC  F32A         	movff	_system_millis+2,Handle_Commands@last_blink+2
 16737   005A62  C2FD  F32B         	movff	_system_millis+3,Handle_Commands@last_blink+3
 16738   005A66                     l7822:
 16739                           
 16740                           ;newmain.c: 199:         alarm_active = 1;
 16741   005A66  0E01               	movlw	1
 16742   005A68  0103               	movlb	3	; () banked
 16743   005A6A  6F6F               	movwf	_alarm_active& (0+255),b
 16744   005A6C                     
 16745                           ; BSR set to: 3
 16746                           ;newmain.c: 202:         if((system_millis - test_start_time) >= TEST_DURATION) {
 16747   005A6C  5144               	movf	_test_start_time& (0+255),w,b
 16748   005A6E  0102               	movlb	2	; () banked
 16749   005A70  5DFA               	subwf	_system_millis& (0+255),w,b
 16750   005A72  6E01               	movwf	??_Handle_Commands^0,c
 16751   005A74  0103               	movlb	3	; () banked
 16752   005A76  5145               	movf	(_test_start_time+1)& (0+255),w,b
 16753   005A78  0102               	movlb	2	; () banked
 16754   005A7A  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
 16755   005A7C  6E02               	movwf	(??_Handle_Commands+1)^0,c
 16756   005A7E  0103               	movlb	3	; () banked
 16757   005A80  5146               	movf	(_test_start_time+2)& (0+255),w,b
 16758   005A82  0102               	movlb	2	; () banked
 16759   005A84  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
 16760   005A86  6E03               	movwf	(??_Handle_Commands+2)^0,c
 16761   005A88  0103               	movlb	3	; () banked
 16762   005A8A  5147               	movf	(_test_start_time+3)& (0+255),w,b
 16763   005A8C  0102               	movlb	2	; () banked
 16764   005A8E  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
 16765   005A90  6E04               	movwf	(??_Handle_Commands+3)^0,c
 16766   005A92  5004               	movf	(??_Handle_Commands+3)^0,w,c
 16767   005A94  1003               	iorwf	(??_Handle_Commands+2)^0,w,c
 16768   005A96  E10B               	bnz	u10260
 16769   005A98  0E05               	movlw	5
 16770   005A9A  5C01               	subwf	??_Handle_Commands^0,w,c
 16771   005A9C  0E0D               	movlw	13
 16772   005A9E  5802               	subwfb	(??_Handle_Commands+1)^0,w,c
 16773   005AA0  A0D8               	btfss	status,0,c
 16774   005AA2  EF55  F02D         	goto	u10261
 16775   005AA6  EF57  F02D         	goto	u10260
 16776   005AAA                     u10261:
 16777   005AAA  EF5D  F02D         	goto	l176
 16778   005AAE                     u10260:
 16779   005AAE                     
 16780                           ; BSR set to: 2
 16781                           ;newmain.c: 203:             trigger_test = 0;
 16782   005AAE  6A5E               	clrf	_trigger_test^0,c
 16783                           
 16784                           ;newmain.c: 204:             PORTBbits.RB0 = 0;
 16785   005AB0  9081               	bcf	129,0,c	;volatile
 16786                           
 16787                           ;newmain.c: 205:             PORTBbits.RB5 = 1;
 16788   005AB2  8A81               	bsf	129,5,c	;volatile
 16789                           
 16790                           ;newmain.c: 206:             pump_active = 0;
 16791   005AB4  0103               	movlb	3	; () banked
 16792   005AB6  6B70               	clrf	_pump_active& (0+255),b
 16793                           
 16794                           ;newmain.c: 207:             alarm_active = 0;
 16795   005AB8  6B6F               	clrf	_alarm_active& (0+255),b
 16796   005ABA                     l176:
 16797   005ABA  0012               	return		;funcret
 16798   005ABC                     __end_of_Handle_Commands:
 16799                           	callstack 0
 16800                           
 16801 ;; *************** function _ADC_Init *****************
 16802 ;; Defined at:
 16803 ;;		line 423 in file "newmain.c"
 16804 ;; Parameters:    Size  Location     Type
 16805 ;;		None
 16806 ;; Auto vars:     Size  Location     Type
 16807 ;;		None
 16808 ;; Return value:  Size  Location     Type
 16809 ;;                  1    wreg      void 
 16810 ;; Registers used:
 16811 ;;		wreg, status,2
 16812 ;; Tracked objects:
 16813 ;;		On entry : 0/0
 16814 ;;		On exit  : 0/0
 16815 ;;		Unchanged: 0/0
 16816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16817 ;;      Params:         0       0       0       0       0       0       0       0       0
 16818 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16819 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16820 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16821 ;;Total ram usage:        0 bytes
 16822 ;; Hardware stack levels used: 1
 16823 ;; Hardware stack levels required when called: 1
 16824 ;; This function calls:
 16825 ;;		Nothing
 16826 ;; This function is called by:
 16827 ;;		_main
 16828 ;; This function uses a non-reentrant model
 16829 ;;
 16830                           
 16831                           	psect	text48
 16832   006E56                     __ptext48:
 16833                           	callstack 0
 16834   006E56                     _ADC_Init:
 16835                           	callstack 29
 16836   006E56                     
 16837                           ;newmain.c: 424:     TRISA0 = TRISA1 = TRISA2 = 1;
 16838   006E56  8492               	bsf	3986,2,c	;volatile
 16839   006E58  8292               	bsf	3986,1,c	;volatile
 16840   006E5A  8092               	bsf	3986,0,c	;volatile
 16841                           
 16842                           ;newmain.c: 425:     ADCON0bits.ADON = 1;
 16843   006E5C  80C2               	bsf	194,0,c	;volatile
 16844   006E5E                     
 16845                           ;newmain.c: 426:     ADCON1 = 0x0C;
 16846   006E5E  0E0C               	movlw	12
 16847   006E60  6EC1               	movwf	193,c	;volatile
 16848                           
 16849                           ;newmain.c: 427:     ADCON2 = 0xBE;
 16850   006E62  0EBE               	movlw	190
 16851   006E64  6EC0               	movwf	192,c	;volatile
 16852   006E66  0012               	return		;funcret
 16853   006E68                     __end_of_ADC_Init:
 16854                           	callstack 0
 16855                           
 16856 ;; *************** function _HighISR *****************
 16857 ;; Defined at:
 16858 ;;		line 100 in file "newmain.c"
 16859 ;; Parameters:    Size  Location     Type
 16860 ;;		None
 16861 ;; Auto vars:     Size  Location     Type
 16862 ;;		None
 16863 ;; Return value:  Size  Location     Type
 16864 ;;                  1    wreg      void 
 16865 ;; Registers used:
 16866 ;;		status,2, status,0
 16867 ;; Tracked objects:
 16868 ;;		On entry : 0/0
 16869 ;;		On exit  : 0/0
 16870 ;;		Unchanged: 0/0
 16871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16872 ;;      Params:         0       0       0       0       0       0       0       0       0
 16873 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16874 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16875 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16876 ;;Total ram usage:        0 bytes
 16877 ;; Hardware stack levels used: 1
 16878 ;; This function calls:
 16879 ;;		Nothing
 16880 ;; This function is called by:
 16881 ;;		Interrupt level 2
 16882 ;; This function uses a non-reentrant model
 16883 ;;
 16884                           
 16885                           	psect	intcode
 16886   000008                     __pintcode:
 16887                           	callstack 0
 16888   000008                     _HighISR:
 16889                           	callstack 20
 16890                           
 16891                           ;incstack = 0
 16892   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16893   00000A  ED07  F037         	call	int_func,f	;refresh shadow registers
 16894                           
 16895                           	psect	intcode_body
 16896   006E0E                     __pintcode_body:
 16897                           	callstack 20
 16898   006E0E                     int_func:
 16899                           	callstack 20
 16900   006E0E  0006               	pop		; remove dummy address from shadow register refresh
 16901   006E10                     
 16902                           ;newmain.c: 101:     if (INTCON3bits.INT1IF) {
 16903   006E10  A0F0               	btfss	240,0,c	;volatile
 16904   006E12  EF0D  F037         	goto	i2u711_41
 16905   006E16  EF0F  F037         	goto	i2u711_40
 16906   006E1A                     i2u711_41:
 16907   006E1A  EF13  F037         	goto	i2l146
 16908   006E1E                     i2u711_40:
 16909   006E1E                     
 16910                           ;newmain.c: 102:         pulse_count++;
 16911   006E1E  0103               	movlb	3	; () banked
 16912   006E20  4B66               	infsnz	_pulse_count& (0+255),f,b	;volatile
 16913   006E22  2B67               	incf	(_pulse_count+1)& (0+255),f,b	;volatile
 16914   006E24                     
 16915                           ; BSR set to: 3
 16916                           ;newmain.c: 103:         INTCON3bits.INT1IF = 0;
 16917   006E24  90F0               	bcf	240,0,c	;volatile
 16918   006E26                     i2l146:
 16919   006E26  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16920   006E28  0011               	retfie		f
 16921   006E2A                     __end_of_HighISR:
 16922                           	callstack 0
 16923                           
 16924                           	psect	rparam
 16925   000001                     ___rparam_used  equ	1
 16926   000000                     ___param_bank   equ	0
 16927   000000                     __Lparam        equ	__Lrparam
 16928   000000                     __Hparam        equ	__Hrparam
 16929                           
 16930                           	psect	temp
 16931   00005F                     btemp:
 16932                           	callstack 0
 16933   00005F                     	ds	1
 16934   00005F                     int$flags       set	btemp
 16935   000060                     wtemp8          set	btemp+1
 16936   000060                     ttemp5          set	btemp+1
 16937   000063                     ttemp6          set	btemp+4
 16938   000067                     ttemp7          set	btemp+8
 16939                           
 16940                           	psect	idloc
 16941                           
 16942                           ;Config register IDLOC0 @ 0x200000
 16943                           ;	unspecified, using default values
 16944   200000                     	org	2097152
 16945   200000  FF                 	db	255
 16946                           
 16947                           ;Config register IDLOC1 @ 0x200001
 16948                           ;	unspecified, using default values
 16949   200001                     	org	2097153
 16950   200001  FF                 	db	255
 16951                           
 16952                           ;Config register IDLOC2 @ 0x200002
 16953                           ;	unspecified, using default values
 16954   200002                     	org	2097154
 16955   200002  FF                 	db	255
 16956                           
 16957                           ;Config register IDLOC3 @ 0x200003
 16958                           ;	unspecified, using default values
 16959   200003                     	org	2097155
 16960   200003  FF                 	db	255
 16961                           
 16962                           ;Config register IDLOC4 @ 0x200004
 16963                           ;	unspecified, using default values
 16964   200004                     	org	2097156
 16965   200004  FF                 	db	255
 16966                           
 16967                           ;Config register IDLOC5 @ 0x200005
 16968                           ;	unspecified, using default values
 16969   200005                     	org	2097157
 16970   200005  FF                 	db	255
 16971                           
 16972                           ;Config register IDLOC6 @ 0x200006
 16973                           ;	unspecified, using default values
 16974   200006                     	org	2097158
 16975   200006  FF                 	db	255
 16976                           
 16977                           ;Config register IDLOC7 @ 0x200007
 16978                           ;	unspecified, using default values
 16979   200007                     	org	2097159
 16980   200007  FF                 	db	255
 16981                           
 16982                           	psect	config
 16983                           
 16984                           ;Config register CONFIG1L @ 0x300000
 16985                           ;	unspecified, using default values
 16986                           ;	PLL Prescaler Selection bits
 16987                           ;	PLLDIV = 0x0, unprogrammed default
 16988                           ;	System Clock Postscaler Selection bits
 16989                           ;	CPUDIV = 0x0, unprogrammed default
 16990                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 16991                           ;	USBDIV = 0x0, unprogrammed default
 16992   300000                     	org	3145728
 16993   300000  00                 	db	0
 16994                           
 16995                           ;Config register CONFIG1H @ 0x300001
 16996                           ;	Oscillator Selection bits
 16997                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
 16998                           ;	Fail-Safe Clock Monitor Enable bit
 16999                           ;	FCMEN = 0x0, unprogrammed default
 17000                           ;	Internal/External Oscillator Switchover bit
 17001                           ;	IESO = 0x0, unprogrammed default
 17002   300001                     	org	3145729
 17003   300001  08                 	db	8
 17004                           
 17005                           ;Config register CONFIG2L @ 0x300002
 17006                           ;	Power-up Timer Enable bit
 17007                           ;	PWRT = ON, PWRT enabled
 17008                           ;	Brown-out Reset Enable bits
 17009                           ;	BOR = 0x3, unprogrammed default
 17010                           ;	Brown-out Reset Voltage bits
 17011                           ;	BORV = 0x3, unprogrammed default
 17012                           ;	USB Voltage Regulator Enable bit
 17013                           ;	VREGEN = 0x0, unprogrammed default
 17014   300002                     	org	3145730
 17015   300002  1E                 	db	30
 17016                           
 17017                           ;Config register CONFIG2H @ 0x300003
 17018                           ;	Watchdog Timer Enable bit
 17019                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 17020                           ;	Watchdog Timer Postscale Select bits
 17021                           ;	WDTPS = 0xF, unprogrammed default
 17022   300003                     	org	3145731
 17023   300003  1E                 	db	30
 17024                           
 17025                           ; Padding undefined space
 17026   300004                     	org	3145732
 17027   300004  FF                 	db	255
 17028                           
 17029                           ;Config register CONFIG3H @ 0x300005
 17030                           ;	CCP2 MUX bit
 17031                           ;	CCP2MX = 0x1, unprogrammed default
 17032                           ;	PORTB A/D Enable bit
 17033                           ;	PBADEN = 0x1, unprogrammed default
 17034                           ;	Low-Power Timer 1 Oscillator Enable bit
 17035                           ;	LPT1OSC = 0x0, unprogrammed default
 17036                           ;	MCLR Pin Enable bit
 17037                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 17038   300005                     	org	3145733
 17039   300005  83                 	db	131
 17040                           
 17041                           ;Config register CONFIG4L @ 0x300006
 17042                           ;	Stack Full/Underflow Reset Enable bit
 17043                           ;	STVREN = 0x1, unprogrammed default
 17044                           ;	Single-Supply ICSP Enable bit
 17045                           ;	LVP = OFF, Single-Supply ICSP disabled
 17046                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 17047                           ;	ICPRT = 0x0, unprogrammed default
 17048                           ;	Extended Instruction Set Enable bit
 17049                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17050                           ;	Background Debugger Enable bit
 17051                           ;	DEBUG = 0x1, unprogrammed default
 17052   300006                     	org	3145734
 17053   300006  81                 	db	129
 17054                           
 17055                           ; Padding undefined space
 17056   300007                     	org	3145735
 17057   300007  FF                 	db	255
 17058                           
 17059                           ;Config register CONFIG5L @ 0x300008
 17060                           ;	unspecified, using default values
 17061                           ;	Code Protection bit
 17062                           ;	CP0 = 0x1, unprogrammed default
 17063                           ;	Code Protection bit
 17064                           ;	CP1 = 0x1, unprogrammed default
 17065                           ;	Code Protection bit
 17066                           ;	CP2 = 0x1, unprogrammed default
 17067                           ;	Code Protection bit
 17068                           ;	CP3 = 0x1, unprogrammed default
 17069   300008                     	org	3145736
 17070   300008  0F                 	db	15
 17071                           
 17072                           ;Config register CONFIG5H @ 0x300009
 17073                           ;	unspecified, using default values
 17074                           ;	Boot Block Code Protection bit
 17075                           ;	CPB = 0x1, unprogrammed default
 17076                           ;	Data EEPROM Code Protection bit
 17077                           ;	CPD = 0x1, unprogrammed default
 17078   300009                     	org	3145737
 17079   300009  C0                 	db	192
 17080                           
 17081                           ;Config register CONFIG6L @ 0x30000A
 17082                           ;	unspecified, using default values
 17083                           ;	Write Protection bit
 17084                           ;	WRT0 = 0x1, unprogrammed default
 17085                           ;	Write Protection bit
 17086                           ;	WRT1 = 0x1, unprogrammed default
 17087                           ;	Write Protection bit
 17088                           ;	WRT2 = 0x1, unprogrammed default
 17089                           ;	Write Protection bit
 17090                           ;	WRT3 = 0x1, unprogrammed default
 17091   30000A                     	org	3145738
 17092   30000A  0F                 	db	15
 17093                           
 17094                           ;Config register CONFIG6H @ 0x30000B
 17095                           ;	unspecified, using default values
 17096                           ;	Configuration Register Write Protection bit
 17097                           ;	WRTC = 0x1, unprogrammed default
 17098                           ;	Boot Block Write Protection bit
 17099                           ;	WRTB = 0x1, unprogrammed default
 17100                           ;	Data EEPROM Write Protection bit
 17101                           ;	WRTD = 0x1, unprogrammed default
 17102   30000B                     	org	3145739
 17103   30000B  E0                 	db	224
 17104                           
 17105                           ;Config register CONFIG7L @ 0x30000C
 17106                           ;	unspecified, using default values
 17107                           ;	Table Read Protection bit
 17108                           ;	EBTR0 = 0x1, unprogrammed default
 17109                           ;	Table Read Protection bit
 17110                           ;	EBTR1 = 0x1, unprogrammed default
 17111                           ;	Table Read Protection bit
 17112                           ;	EBTR2 = 0x1, unprogrammed default
 17113                           ;	Table Read Protection bit
 17114                           ;	EBTR3 = 0x1, unprogrammed default
 17115   30000C                     	org	3145740
 17116   30000C  0F                 	db	15
 17117                           
 17118                           ;Config register CONFIG7H @ 0x30000D
 17119                           ;	unspecified, using default values
 17120                           ;	Boot Block Table Read Protection bit
 17121                           ;	EBTRB = 0x1, unprogrammed default
 17122   30000D                     	org	3145741
 17123   30000D  40                 	db	64
 17124                           tosu	equ	0xFFF
 17125                           tosh	equ	0xFFE
 17126                           tosl	equ	0xFFD
 17127                           stkptr	equ	0xFFC
 17128                           pclatu	equ	0xFFB
 17129                           pclath	equ	0xFFA
 17130                           pcl	equ	0xFF9
 17131                           tblptru	equ	0xFF8
 17132                           tblptrh	equ	0xFF7
 17133                           tblptrl	equ	0xFF6
 17134                           tablat	equ	0xFF5
 17135                           prodh	equ	0xFF4
 17136                           prodl	equ	0xFF3
 17137                           indf0	equ	0xFEF
 17138                           postinc0	equ	0xFEE
 17139                           postdec0	equ	0xFED
 17140                           preinc0	equ	0xFEC
 17141                           plusw0	equ	0xFEB
 17142                           fsr0h	equ	0xFEA
 17143                           fsr0l	equ	0xFE9
 17144                           wreg	equ	0xFE8
 17145                           indf1	equ	0xFE7
 17146                           postinc1	equ	0xFE6
 17147                           postdec1	equ	0xFE5
 17148                           preinc1	equ	0xFE4
 17149                           plusw1	equ	0xFE3
 17150                           fsr1h	equ	0xFE2
 17151                           fsr1l	equ	0xFE1
 17152                           bsr	equ	0xFE0
 17153                           indf2	equ	0xFDF
 17154                           postinc2	equ	0xFDE
 17155                           postdec2	equ	0xFDD
 17156                           preinc2	equ	0xFDC
 17157                           plusw2	equ	0xFDB
 17158                           fsr2h	equ	0xFDA
 17159                           fsr2l	equ	0xFD9
 17160                           status	equ	0xFD8

Data Sizes:
    Strings     302
    Constant    116
    Data        24
    BSS         221
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     144
    BANK1           256    256     256
    BANK2           256    250     256
    BANK3           256     18     256
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Apply_Filter@samples	PTR float  size(2) Largest target is 20
		 -> temp_samples(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1241$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    S1241$source	PTR const unsigned char  size(2) Largest target is 0

    Send_History_Event@event_type	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[9]), STR_12(CODE[9]), STR_14(CODE[7]), STR_5(CODE[11]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), 

    Send_History_Event@extra_data	PTR const unsigned char  size(2) Largest target is 150
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), STR_13(CODE[1]), 
		 -> STR_15(CODE[1]), STR_9(CODE[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 150
		 -> fire_trigger_sensor(BANK3[20]), Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), 
		 -> sp__powf(UNKNOWN), ?_sprintf(BANK0[2]), STR_11(CODE[9]), STR_12(CODE[9]), 
		 -> STR_13(CODE[1]), STR_14(CODE[7]), STR_15(CODE[1]), STR_24(CODE[7]), 
		 -> STR_5(CODE[11]), STR_7(CODE[9]), STR_8(CODE[11]), STR_9(CODE[1]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 150
		 -> fire_trigger_sensor(BANK3[20]), Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), 
		 -> sp__powf(UNKNOWN), ?_sprintf(BANK0[2]), STR_11(CODE[9]), STR_12(CODE[9]), 
		 -> STR_13(CODE[1]), STR_14(CODE[7]), STR_15(CODE[1]), STR_5(CODE[11]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), STR_9(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[13]), STR_18(CODE[4]), STR_2(CODE[19]), STR_21(CODE[4]), 
		 -> STR_3(CODE[10]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _main->_Update_Actuators
    _Update_Actuators->___flge
    _Read_Sensors->___flge
    _powf->___flge
    _scalbnf->___flmul
    _Apply_Filter->___fladd
    _Handle_Fire_Events->___flge
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flsub
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Handle_Fire_Events
    _Update_Actuators->___flge
    _Send_Data->_sprintf
    _Read_Sensors->_powf
    _powf->___flge
    _Handle_Test_Events->_Send_History_Event
    _Handle_Shutdown_Events->_Send_History_Event
    _Handle_Fire_Events->_Send_History_Event
    _Send_History_Event->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Handle_Test_Events
    _Read_Sensors->_powf
    _Handle_Test_Events->_Send_History_Event
    _Handle_Shutdown_Events->_Send_History_Event
    _Handle_Fire_Events->_Send_History_Event

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Handle_Fire_Events

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0  218821
                                            142 BANK0      2     2      0
                                              0 BANK3     18    18      0
                           _ADC_Init
                           _ADC_Read
                    _Handle_Commands
                 _Handle_Fire_Events
             _Handle_Shutdown_Events
                 _Handle_Test_Events
                     _Interrupt_Init
                       _Read_Sensors
                          _Send_Data
                          _UART_Init
                   _Update_Actuators
                            ___awmod
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     439
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Update_Actuators                                     5     5      0     393
                                             92 COMRAM     1     1      0
                                              8 BANK0      4     4      0
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send_Data                                          202   202      0   25802
                                              0 BANK1    202   202      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Read_Sensors                                        54    54      0   43151
                                             25 BANK0     54    54      0
                           _ADC_Read
                       _Apply_Filter
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   25096
                                              8 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               41    37      4    1070
                                              0 COMRAM    37    33      4
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    3093
                                             39 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     529
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _Apply_Filter                                        14     8      6    5293
                                             80 COMRAM     8     2      6
                                              0 BANK0      6     6      0
                            ___fladd
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Test_Events                                  56    56      0   55118
                                            132 BANK0      2     2      0
                                            202 BANK1     54    54      0
                 _Send_History_Event
                            ___flsub
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Handle_Shutdown_Events                               0     0      0   25900
                 _Send_History_Event
 ---------------------------------------------------------------------------------
 (1) _Handle_Fire_Events                                 260   260      0   55974
                                            132 BANK0     10    10      0
                                              0 BANK2    250   250      0
                 _Send_History_Event
                             ___flge
                            ___flsub
                            ___lldiv
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Send_History_Event                                 206   202      4   25900
                                            128 BANK0      4     0      4
                                              0 BANK1    202   202      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             50    14     36   25623
                                             80 BANK0     48    12     36
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4   25245
                                             74 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   24979
                                             60 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                11     6      5    1899
                                             22 COMRAM    11     6      5
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     238
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     253
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _stoa                                                11     8      3     647
                                              8 COMRAM    11     8      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     266
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   17488
                                              8 BANK0     52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     133
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     217
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     102
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     495
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     201
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     346
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    3481
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3194
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      74
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2583
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     356
                                             88 COMRAM     4     4      0
                                              0 BANK0      8     0      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     142
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1833
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                14     9      5    2629
                                             22 COMRAM    14     9      5
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    1068
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3     487
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     341
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      96
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     439
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     451
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Handle_Commands                                      5     5      0      34
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Handle_Commands
   _Handle_Fire_Events
     _Send_History_Event
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aldiv
               ___almod
               _abs
                 ___almod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _efgtoa
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                 ___xxtofl (ARG)
               ___fldiv
               ___fleq
               ___flge
                 ___fladd (ARG)
                 ___flmul (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___fldiv (ARG)
                   ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
               _strcpy
             _fputc
             _read_prec_or_width
             _stoa
               _fputc
             _utoa
               ___lldiv
               ___llmod
               _pad
     ___flge
     ___flsub
     ___lldiv
     _sprintf
     _strcpy
   _Handle_Shutdown_Events
     _Send_History_Event
   _Handle_Test_Events
     _Send_History_Event
     ___flsub
     _sprintf
   _Interrupt_Init
   _Read_Sensors
     _ADC_Read
     _Apply_Filter
       ___fladd
       ___fldiv
     ___fladd
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___xxtofl
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
   _Send_Data
     _sprintf
   _UART_Init
   _Update_Actuators
     ___flge
   ___awmod
   ___fladd
   ___fldiv
   ___flmul
   ___flsub
   ___xxtofl

 _HighISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256     18     256    100.0%
BITBANK2           256      0       0      0.0%
BANK2              256    250     256    100.0%
BITBANK1           256      0       0      0.0%
BANK1              256    256     256    100.0%
BITBANK0           160      0       0      0.0%
BANK0              160    144     144     90.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     93      94    100.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    1004      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jul 07 23:20:35 2025

                   ??_Interrupt_Init 0001                         ___fldiv@aexp 0040  
                       ___fldiv@bexp 003F                          _pump_active 0370  
                       ___fldiv@sign 0038                    _Read_Sensors$1836 0089  
                  _Read_Sensors$1837 008D                    _Read_Sensors$1838 0091  
                                 _L1 7EB9                                   _L2 7EB5  
                                 _L3 7EB1                                   _L4 7EAD  
                                 _L5 7EA9                                   _L6 7EA5  
                                 _P1 7EA1                                   _P2 7E9D  
                                 _P3 7E99                                   _P4 7E95  
                                 _P5 7E91                                   _bp 7E6D  
                                 _cp 7E7D                          _pulse_count 0366  
                                l200 6AC8                                  l203 696E  
                                l212 69CA                                  l311 6936  
                                l304 6926                                  l208 699A  
                                l232 3656                                  l216 30EC  
                                l241 5B3E                                  l170 59B4  
                                l250 6490                                  l242 5BE2  
                                l237 65D4                                  l262 6E66  
                                l271 6E76                                  l255 64BC  
                                l247 5BEA                                  l176 5ABA  
                                l193 611C                                  l265 6D4E  
                                l521 673C                                  l186 51BC  
                                l274 6E54                                  l259 64EC  
                                l356 5E0C                                  l268 6D68  
                                l542 5FD2                                  l551 6DD8  
                                l536 6892                                  l704 6A52  
                                l369 6404                                  l547 6018  
                                l900 434C                                  l901 433A  
                                l805 3D4E                                  l822 3E68  
                                l814 401A                                  l806 3D3C  
                                l574 5F12                                  l831 3F36  
                                l807 3D02                                  l832 3F24  
                                l819 3EF6                                  l908 4402  
                                l932 565A                                  l861 4A12  
                                l870 4A58                                  l838 3FDE  
                                l871 4A76                                  l847 6CAC  
                                l935 57B6                                  l872 4ACE  
                                l864 49D6                                  l873 4ABC  
                                l697 6A42                                  l946 574E  
                                l859 4BAE                                  l891 40E0  
                                l955 6CF0                                  l939 56F2  
                                l895 4440                                  l984 6AE0  
                                l992 57E8                                  l994 57F0  
                                l898 42D6                                  l995 5836  
                                l899 42F4                                  l988 6B2E  
                                _lg2 7E8D                                  _abs 6DDA  
                                _pad 6ACA                                  _ovt 7E81  
                       ___awmod@sign 0006                                  wreg 0FE8  
         __end_of_Handle_Test_Events 611E                         ___flmul@aexp 001C  
                       ___flmul@bexp 0021                         ___flmul@sign 001B  
                       ___flmul@temp 0026                         ___flmul@prod 0022  
                       ___fltol@exp1 000A                                 l1020 2856  
                               l1101 3712                                 l1006 595A  
                               l1022 269A                                 l1110 38EC  
                               l1201 668E                                 l1017 2EB6  
                               l1050 2C9E                                 ?_abs 000B  
                               l1109 3B64                                 l1070 621C  
                               l1302 055C                                 l1160 6DF4  
                               l1209 6D30                                 l1129 3A22  
                               l1145 6C66                                 l1090 67E8  
                               l1066 61C2                                 l1082 5D02  
                               l1074 5C08                                 l1163 6E0C  
                               l1155 631A                                 l1172 5546  
                               l1076 5C10                                 l1342 6E78  
                               l1086 67E0                                 l1183 6B84  
                               l1335 248A                                 l1352 53F0  
                               l1169 5602                                 l1361 481E  
                               l1274 02F4                                 l1380 6DA0  
                               l1372 4748                                 l1284 038A  
                               l1189 6BD4                                 l1365 4626  
                               l1269 24C6                                 l1374 47B6  
                               l1294 044C                                 l1369 4684  
                               l1298 04FE                                 l6000 3D2E  
                               l6002 3D30                                 l6020 3DB8  
                               l6012 3D80                                 l6004 3D3A  
                               l6102 6CF2                                 l6022 3DBC  
                               l6014 3D90                                 l6006 3D5C  
                               l6030 3DDC                                 l6110 6D6A  
                               l6200 6396                                 l6104 6CFE  
                               l6032 3E02                                 l6040 3E58  
                               l6024 3DCA                                 l6016 3D9E  
                               l6008 3D6C                                 l6112 6D72  
                               l7000 6790                                 l6120 68C2  
                               l6210 63E4                                 l6202 63B4  
                               l6106 6D0C                                 l6050 3EAC  
                               l6042 3E7E                                 l6034 3E36  
                               l6026 3DCC                                 l6018 3DAC  
                               l7002 67AE                                 l6130 6914  
                               l6122 68CE                                 l6114 6894  
                               l7010 3688                                 l6140 5D14  
                               l6212 63F4                                 l6204 63C4  
                               l6108 6D10                                 l6300 4A22  
                               l6220 483A                                 l6060 3ED6  
                               l6052 3EBA                                 l6044 3E8E  
                               l6036 3E38                                 l6028 3DD6  
                               l7004 67BA                                 l6132 6916  
                               l6124 68DC                                 l6116 68A4  
                               l7020 36E0                                 l7012 3696  
                               l6150 5D4A                                 l6142 5D24  
                               l6206 63CE                                 l6302 4A38  
                               l6310 4A68                                 l6230 486E  
                               l6222 483C                                 l6062 3EE6  
                               l6054 3EBC                                 l6038 3E48  
                               l6134 6920                                 l6126 68E6  
                               l6118 68BA                                 l7102 3A28  
                               l7030 3718                                 l7022 36F0  
                               l7014 369C                                 l7006 3658  
                               ?_pad 000F                                 l6160 5D92  
                               l6152 5D5A                                 l6144 5D28  
                               l6136 5D04                                 l6208 63D4  
                               l6320 4AEA                                 l6312 4A86  
                               l6304 4A3E                                 l6240 489E  
                               l6224 484C                                 l6232 4874  
                               l6216 4820                                 l6400 414C  
                               l6072 3F46                                 l6080 3F9C  
                               l6056 3ECA                                 l6048 3EA2  
                               l6064 3EE8                                 l6128 6904  
                               l7112 3ABA                                 l7104 3A46  
                               l7032 373E                                 l7024 3702  
                               l7016 36C0                                 l7008 367C  
                               l8000 6A8C                                 l6170 5DD6  
                               l6162 5D9C                                 l6154 5D70  
                               l6146 5D36                                 l6138 5D06  
                               l6330 4B56                                 l6322 4AF8  
                               l6314 4AB4                                 l6306 4A48  
                               l6250 48D2                                 l6242 48A0  
                               l6234 4884                                 l6226 485C  
                               l6218 482C                                 l6410 4196  
                               l6402 4164                                 l6090 3FF2  
                               l6082 3FAC                                 l6074 3F52  
                               l6066 3F06                                 l6058 3ED2  
                               l7122 3B18                                 l7114 3AD0  
                               l7106 3A66                                 l7050 3814  
                               l7034 375A                                 l7042 37C8  
                               l7026 370A                                 l7018 36CC  
                               l8002 6A9E                                 l7210 44C2  
                               l7202 4442                                 l8010 649E  
                               l6164 5DBA                                 l6156 5D78  
                               l6172 5DDC                                 l6148 5D46  
                               l6180 631C                                 l6340 4B9C  
                               l6332 4B70                                 l6324 4B22  
                               l6308 4A56                                 l6260 4916  
                               l6244 48B0                                 l6252 48D8  
                               l6236 488A                                 l6228 486C  
                               l6420 41EC                                 l6412 41A6  
                               l6404 4170                                 l6092 3FF4  
                               l6084 3FBC                                 l6076 3F60  
                               l6068 3F1C                                 l7116 3AEE  
                               l7108 3A90                                 l7124 3B30  
                               l7060 389A                                 l7052 3834  
                               l7044 37DE                                 l7036 377A  
                               l7140 6C5C                                 l8004 6AAE  
                               l7300 5372                                 l7220 4532  
                               l7212 44D2                                 l7204 4452  
                               l8012 64AC                                 l8020 6692  
                               l8100 4DD4                                 l6174 5DEC  
                               l6166 5DCA                                 l6158 5D84  
                               l6190 634E                                 l6182 631E  
                               l6342 4BA2                                 l6334 4B88  
                               l6318 4ADE                                 l6326 4B26  
                               l6270 493E                                 l6262 491A  
                               l6254 48E8                                 l6246 48C0  
                               l6238 4890                                 l6510 5F92  
                               l6502 5F14                                 l6430 4290  
                               l6422 4208                                 l6414 41B2  
                               l6406 417C                                 l6094 3FFA  
                               l6086 3FDC                                 l6078 3F9A  
                               l7070 38EE                                 l7062 38B8  
                               l7054 385E                                 l7046 37F8  
                               l7038 37A2                                 l7134 6C20  
                               l7150 6CCC                                 l8006 6AC4  
                               l7310 6D34                                 l7302 537A  
                               l7206 4486                                 l8014 64CA  
                               l8030 66C2                                 l8022 66A0  
                               l8110 4E78                                 l8102 4E08  
                               l6176 5DFC                                 l6168 5DCC  
                               l6192 635E                                 l6184 632C  
                               l6600 6B00                                 l6344 4BA4  
                               l6336 4B8A                                 l6328 4B40  
                               l6280 498C                                 l6256 48FE  
                               l6248 48D0                                 l6520 6016  
                               l6512 5FA0                                 l6504 5F44  
                               l6440 42E6                                 l6432 429E  
                               l6424 4214                                 l6416 41C2  
                               l6408 418A                                 l6360 4048  
                               l6352 401C                                 l6096 4008  
                               l6088 3FEC                                 l7080 3978  
                               l7072 3910                                 l7128 3B42  
                               l7136 6C2C                                 l7152 6CE0  
                               l7144 6CAE                                 l7320 6938  
                               l7312 6D46                                 l7160 5624  
                               l7304 53AC                                 l7240 45F0  
                               l7224 4546                                 l7232 4572  
                               l7208 44B4                                 l7216 44E6  
                               l8016 64D0                                 l8008 6406  
                               l8040 6708                                 l8032 66D4  
                               l8024 66A8                                 l8120 4EAA  
                               l8112 4E82                                 l8104 4E22  
                               l6194 6374                                 l6186 633C  
                               l6602 6B1E                                 l6338 4B8E  
                               l6290 49D4                                 l6282 499C  
                               l6274 4952                                 l6258 490E  
                               l6266 492E                                 l6514 5FB2  
                               l6506 5F54                                 l6450 4368  
                               l6442 4304                                 l6434 42BC  
                               l6426 4230                                 l6418 41DC  
                               l6370 4084                                 l6362 4058  
                               l6354 4028                                 l6098 400A  
                               l6610 623E                                 l7082 39AA  
                               l7074 391C                                 l7058 3884  
                               l7138 6C40                                 l7146 6CBC  
                               l7322 697C                                 l7314 6D4C  
                               l7330 64EE                                 l7170 569C  
                               l7162 566A                                 l7306 53E0  
                               l7250 46BE                                 l7242 45FE  
                               l7234 45C6                                 l7226 4554  
                               l7218 4504                                 l7402 039E  
                               l7410 03EA                                 l8050 6734  
                               l8042 6710                                 l8034 66DC  
                               l8026 66AC                                 l8018 6690  
                               l8130 4ECA                                 l8122 4EBA  
                               l8114 4E90                                 l8106 4E28  
                               l6196 637C                                 l6188 6340  
                               l6604 6DDA                                 l5900 6600  
                               l6700 588E                                 l6292 49E0  
                               l6284 49A2                                 l6276 496C  
                               l6268 493E                                 l6516 5FC0  
                               l6508 5F82                                 l6460 43D2  
                               l6452 4376                                 l6444 4332  
                               l6436 42C6                                 l6428 425A  
                               l6380 40BA                                 l6372 408A  
                               l6364 4068                                 l6356 4036  
                               l6524 6DA2                                 l6540 5E62  
                               l6532 5E0E                                 l6612 627C  
                               l6620 62BC                                 l7092 39F2  
                               l7076 3924                                 l7068 38D4  
                               l7148 6CC4                                 l7324 698A  
                               l7316 6D5C                                 l7340 6532  
                               l7332 6518                                 l7180 5724  
                               l7172 56A8                                 l7164 5680  
                               l7156 5606                                 l7260 4778  
                               l7252 46D2                                 l7244 4666  
                               l7236 45DA                                 l7500 07BE  
                               l7412 0406                                 l7404 03AC  
                               l8044 6716                                 l8036 66E4  
                               l8028 66BA                                 l8140 4F12  
                               l8132 4EE2                                 l8124 4EBE  
                               l8116 4E94                                 l8108 4E44  
                               l8060 4BBC                                 l6198 6388  
                               l6606 6DE8                                 l5902 661C  
                               l6710 58FE                                 l6702 5894  
                               l6294 49FE                                 l6286 49B2  
                               l6278 497C                                 l6518 6010  
                               l6470 4424                                 l6462 43EC  
                               l6454 43A0                                 l6438 42D4  
                               l6382 40CA                                 l6374 4098  
                               l6366 406E                                 l6358 4038  
                               l6526 6DB8                                 l5910 3B72  
                               l6542 5E64                                 l6534 5E24  
                               l6622 62CE                                 l6614 62A4  
                               l6630 6B30                                 l7094 3A00  
                               l7078 3946                                 l7086 39BC  
                               l7326 69A8                                 l7342 657E  
                               l7334 652A                                 l7190 5762  
                               l7182 5730                                 l7174 56DA  
                               l7158 5616                                 l7270 51CE  
                               l7262 478E                                 l7254 4710  
                               l7246 4674                                 l7238 45E4  
                               l7510 0894                                 l7430 050E  
                               l7422 04B0                                 l7414 0414  
                               l7406 03D4                                 l7350 0012  
                               l8038 66F2                                 l8046 671C  
                               l8134 4EE6                                 l8126 4EC2  
                               l8118 4EA6                                 l8070 4BE4  
                               l8062 4BBE                                 l8054 4BB0  
                               l5904 664E                                 l6712 5918  
                               l6704 589A                                 l6296 4A00  
                               l6288 49C6                                 l6472 4426  
                               l6464 43FC                                 l6448 435C  
                               l6456 43A4                                 l6392 4114  
                               l6384 40D0                                 l6376 409A  
                               l6368 407E                                 l6528 6DC8  
                               l5920 3BB2                                 l5912 3B80  
                               l6480 6C68                                 l6544 5E74  
                               l6616 62B0                                 l6608 621E  
                               l6640 5412                                 l6632 6B3E  
                               l6800 27DA                                 l7096 3A12  
                               l7088 39CC                                 l7328 69AE  
                               l7344 6584                                 l7192 5786  
                               l7184 573E                                 l7176 56DC  
                               l7168 5694                                 l7280 5276  
                               l7272 51EA                                 l7256 4758  
                               l7248 469E                                 l7600 128C  
                               l7520 0A14                                 l7512 08EC  
                               l7504 07D4                                 l7440 05AE  
                               l7432 052A                                 l7424 04C8  
                               l7416 0460                                 l7360 00AC  
                               l7352 0032                                 l8048 672C  
                               l8136 4EF0                                 l8128 4EC6  
                               l8080 4C8A                                 l8064 4BD8  
                               l8056 4BB8                                 l6714 5928  
                               l6706 58CE                                 l6298 4A10  
                               l6490 6828                                 l6466 4406  
                               l6474 442C                                 l6458 43BE  
                               l6394 4120                                 l6386 40F0  
                               l6378 40AA                                 l5930 3BE2  
                               l5922 3BB4                                 l5914 3B82  
                               l6482 6C78                                 l6570 5EF2  
                               l6554 5E9E                                 l6546 5E78  
                               l6538 5E38                                 l6626 6312  
                               l6650 54FA                                 l6642 5468  
                               l6634 6B52                                 l6810 286E  
                               l6802 27E2                                 l6730 2512  
                               l6722 24C8                                 l7098 3A1A  
                               l7346 65A0                                 l7194 5796  
                               l7186 575C                                 l7178 56E8  
                               l7290 52F6                                 l7282 527E  
                               l7274 521E                                 l7258 4762  
                               l7610 136C                                 l7602 12C0  
                               l7530 0AC6                                 l7522 0A2E  
                               l7514 0920                                 l7506 0808  
                               l7442 05BE                                 l7450 067E  
                               l7434 0540                                 l7426 04D6  
                               l7418 0478                                 l7354 007A  
                               l8138 4EF4                                 l8082 4CA4  
                               l8066 4BDC                                 l8058 4BBA  
                               l6716 592E                                 l6708 58E8  
                               l6492 6856                                 l6476 4430  
                               l6468 4416                                 l6396 412A  
                               l6388 4100                                 l5940 3C0A  
                               l5932 3BE4                                 l5916 3B92  
                               l5924 3BBA                                 l5908 3B66  
                               l6572 5F02                                 l6564 5EC6  
                               l6556 5EA8                                 l6548 5E86  
                               l6660 55E2                                 l6652 5536  
                               l6644 547C                                 l6900 2CFA  
                               l6820 28A4                                 l6812 287A  
                               l6740 2550                                 l6732 251C  
                               l6724 24DC                                 l6580 69EA  
                               l7196 57A4                                 l7188 575E  
                               l7292 52FE                                 l7284 529A  
                               l7276 5226                                 l7268 51BE  
                               l7620 1456                                 l7612 1386  
                               l7604 12F4                                 l7540 0B9C  
                               l7532 0AFA                                 l7524 0A62  
                               l7516 0954                                 l7508 0860  
                               l7444 0622                                 l7436 056C  
                               l7380 018C                                 l7372 013E  
                               l7364 00C2                                 l8084 4CAA  
                               l8076 4BEE                                 l8068 4BE0  
                               l6718 593E                                 l6494 6866  
                               l6486 67EA                                 l6398 4140  
                               l5950 3C42                                 l5942 3C1A  
                               l5934 3BEA                                 l5926 3BCA  
                               l5918 3BA2                                 l6566 5ED2  
                               l6558 5EB2                                 l6662 55F2  
                               l6646 548A                                 l6654 556A  
                               l6638 53F2                                 l6670 6BA6  
                               l6910 2D2E                                 l6902 2D00  
                               l6830 28EC                                 l6822 28B2  
                               l6814 2884                                 l6806 2822  
                               l6750 2598                                 l6742 2558  
                               l6734 2524                                 l6726 24EA  
                               l6590 6A3C                                 l6582 69F6  
                               l7198 57A6                                 l7294 531A  
                               l7278 5242                                 l7286 52A6  
                               l7710 1E06                                 l7702 1BAE  
                               l7630 1564                                 l7622 14D2  
                               l7614 13BA                                 l7606 1328  
                               l7550 0C10                                 l7542 0BAC  
                               l7534 0B0C                                 l7518 0A04  
                               l7526 0A9A                                 l7470 06F0  
                               l7446 0642                                 l7438 057A  
                               l7454 0692                                 l7382 01A8  
                               l7374 014E                                 l7366 00E4  
                               l7358 0090                                 l8094 4D04  
                               l8086 4CC6                                 l8078 4BFC  
                               l7800 5986                                 l6592 6ACA  
                               l6680 57DC                                 l6496 688A  
                               l6488 6818                                 l5960 3C6E  
                               l5952 3C54                                 l5944 3C2A  
                               l5936 3BF8                                 l5928 3BD0  
                               l6568 5EE2                                 l6656 55A6  
                               l6672 6BAA                                 l6920 2DE4  
                               l6912 2D86                                 l6904 2D12  
                               l6840 2A00                                 l6832 28FC  
                               l6824 28CA                                 l6816 288C  
                               l6808 285E                                 l6752 259E  
                               l6736 2534                                 l6744 255C  
                               l6728 24EE                                 l6584 6A04  
                               l6576 69CC                                 l7296 534E  
                               l7288 52C2                                 l7720 1EA8  
                               l7712 1E16                                 l7704 1C20  
                               l7640 175E                                 l7632 1598  
                               l7624 1506                                 l7616 13EE  
                               l7608 135C                                 l7560 0D30  
                               l7552 0C24                                 l7544 0BC4  
                               l7536 0B1C                                 l7528 0AAA  
                               l7472 0712                                 l7456 06A2  
                               l7448 065A                                 l7384 02A6  
                               l7376 015C                                 l7368 0106  
                               l8096 4D12                                 l8088 4CFA  
                               l7802 5996                                 l7810 59DA  
                               l6594 6AD8                                 l6690 582A  
                               l6682 57F8                                 l6498 6890  
                               l5970 3C82                                 l5962 3C72  
                               l5954 3C62                                 l5946 3C2C  
                               l5938 3BFA                                 l6658 55BA  
                               l6674 6BB6                                 l6666 6B86  
                               l6930 2E54                                 l6922 2E00  
                               l6914 2DBA                                 l6906 2D24  
                               l6850 2AA0                                 l6834 2910  
                               l6842 2A06                                 l6826 28DC  
                               l6818 2892                                 l6770 2626  
                               l6754 25A6                                 l6746 2582  
                               l6762 25E4                                 l6738 2544  
                               l6586 6A22                                 l6578 69E2  
                               l7298 5356                                 l7730 1FF4  
                               l7722 1EDC                                 l7714 1E4A  
                               l7706 1C30                                 l7650 184E  
                               l7642 1792                                 l7634 15CC  
                               l7626 1516                                 l7618 1422  
                               l7570 0DF8                                 l7562 0D64  
                               l7554 0C40                                 l7538 0B84  
                               l7490 079C                                 l7474 0736  
                               l7466 06CA                                 l7458 06B0  
                               l7394 0344                                 l7386 0312  
                               l7378 0178                                 l8098 4D7C  
                               l7820 5A56                                 l7812 59EA  
                               l7804 59AA                                 l6596 6AEC  
                               l6692 5832                                 l6684 5808  
                               l5980 3C96                                 l5972 3C86  
                               l5964 3C76                                 l5956 3C66  
                               l5948 3C32                                 l6668 6B9A  
                               l6676 6BBA                                 l6932 2E6C  
                               l6924 2E08                                 l6916 2DC2  
                               l6908 2D28                                 l6860 2B7E  
                               l6852 2AD2                                 l6844 2A24  
                               l6836 2974                                 l6828 28E4  
                               l6772 262E                                 l6764 260A  
                               l6780 264A                                 l6756 25BE  
                               l6748 2594                                 l6588 6A32  
                               l7740 2140                                 l7732 2028  
                               l7724 1F10                                 l7716 1E7E  
                               l7708 1C52                                 l7660 1990  
                               l7652 1882                                 l7644 17A2  
                               l7636 16A6                                 l7628 1530  
                               l7580 0FAC                                 l7572 0E6A  
                               l7564 0D74                                 l7556 0C50  
                               l7548 0BEC                                 l7476 0744  
                               l7484 0762                                 l7468 06E0  
                               l7396 0366                                 l7388 032E  
                               l7900 357C                                 l7822 5A66  
                               l7814 59EC                                 l5894 65D6  
                               l6598 6AFC                                 l6694 583E  
                               l6686 580E                                 l6678 57B8  
                               l5990 3CEA                                 l5982 3C9A  
                               l5974 3C8A                                 l5966 3C7A  
                               l5958 3C6A                                 l6934 2E7C  
                               l6926 2E16                                 l6918 2DC6  
                               l6870 2BDE                                 l6862 2B82  
                               l6854 2AE2                                 l6846 2A58  
                               l6838 29CC                                 l6790 26E4  
                               l6782 2664                                 l6766 261C  
                               l6758 25C8                                 l6950 6150  
                               l6942 611E                                 l7750 231C  
                               l7742 2198                                 l7734 205C  
                               l7726 1F68                                 l7718 1E8E  
                               l7662 19C4                                 l7646 17BC  
                               l7638 16CC                                 l7590 111C  
                               l7582 0FE0                                 l7574 0EC8  
                               l7566 0D84                                 l7558 0CAE  
                               l7654 18B6                                 l7398 0374  
                               l7902 35E6                                 l7830 2EC6  
                               l7910 5AD2                                 l7824 5A6C  
                               l7816 59F2                                 l7808 59BC  
                               l5896 65E6                                 l6696 5846  
                               l6688 581E                                 l5992 3CFA  
                               l5984 3C9E                                 l5976 3C8E  
                               l5968 3C7E                                 l6936 2E92  
                               l6928 2E46                                 l6880 2C74  
                               l6872 2BE6                                 l6864 2BB6  
                               l6856 2AF2                                 l6848 2A8C  
                               l6792 2722                                 l6768 2620  
                               l6960 61FE                                 l6952 618C  
                               l6944 6138                                 l7760 240A  
                               l7752 2350                                 l7744 21F0  
                               l7736 2090                                 l7728 1FC0  
                               l7664 19F8                                 l7656 18E0  
                               l7648 17F0                                 l7592 1174  
                               l7584 1014                                 l7576 0EFC  
                               l7568 0D9E                                 l7488 0778  
                               l7904 363E                                 l7840 3008  
                               l7832 2F30                                 l7920 5B56  
                               l7912 5B08                                 l7826 5AAE  
                               l7818 5A34                                 l5898 65F6  
                               l6698 584C                                 l5994 3D10  
                               l5978 3C92                                 l5986 3CA2  
                               l6938 2E9A                                 l6890 2CD2  
                               l6882 2C94                                 l6874 2BE8  
                               l6866 2BCA                                 l6858 2B26  
                               l6794 2756                                 l6786 26AA  
                               l6962 6202                                 l6954 619C  
                               l6946 6140                                 l6970 5C20  
                               l7930 4F34                                 l7762 245A  
                               l7754 2384                                 l7746 2248  
                               l7738 20E8                                 l7666 1A08  
                               l7658 1938                                 l7594 11CC  
                               l7586 106C                                 l7578 0F54  
                               l7906 3646                                 l7850 30FE  
                               l7842 3084                                 l7834 2F64  
                               l7922 5B5A                                 l7914 5B3C  
                               l5996 3D1C                                 l5988 3CCE  
                               l6892 2CD8                                 l6884 2CB0  
                               l6876 2BF0                                 l6868 2BCE  
                               l6796 2792                                 l6788 26B0  
                               l6956 61BA                                 l6948 614C  
                               l6980 5C70                                 l6972 5C28  
                               l6964 5BEC                                 l7940 4FCE  
                               l7932 4F46                                 l7764 249A  
                               l7756 23B8                                 l7748 22C4  
                               l7676 1A30                                 l7596 1200  
                               l7588 10C4                                 l7860 318A  
                               l7852 3134                                 l7844 3094  
                               l7836 2F90                                 l7828 2EB8  
                               l7780 6E4E                                 l7772 6E42  
                               l7924 5BA4                                 l7916 5B42  
                               l7908 5ABC                                 l5998 3D20  
                               l6894 2CE0                                 l6886 2CBE  
                               l6878 2BFC                                 l6798 27A6  
                               l6958 61CE                                 l6974 5C2E  
                               l6982 5CA4                                 l6966 5BFC  
                               l7950 5082                                 l7942 5004  
                               l7934 4F56                                 l7790 6E68  
                               l7766 24B2                                 l7758 23C8  
                               l7694 1B24                                 l7678 1A48  
                               l7686 1AC8                                 l7598 1234  
                               l7870 331A                                 l7862 3198  
                               l7854 313E                                 l7846 30A4  
                               l7838 2F9E                                 l7782 6E50  
                               l7774 6E46                                 l7926 5BC8  
                               l7918 5B54                                 l7792 595C  
                               l6896 2CF0                                 l6888 2CCE  
                               l6992 673E                                 l6984 5CB6  
                               l6976 5C64                                 l6968 5C18  
                               l7960 516E                                 l7944 501C  
                               l7936 4FA6                                 l7952 5098  
                               l7696 1B42                                 l7688 1B10  
                               l7880 33FC                                 l7872 334E  
                               l7864 3202                                 l7856 3150  
                               l7848 30DA                                 l7784 6E52  
                               l7776 6E4A                                 l7928 5BD8  
                               l7786 6E56                                 l7794 596A  
                               l6898 2CF4                                 l6994 6746  
                               l6986 5CCC                                 l6978 5C6A  
                               l7962 5184                                 l7954 50AA  
                               l7946 5050                                 l7938 4FB6  
                               l7970 601A                                 l7698 1B9A  
                               l7890 34DC                                 l7882 340C  
                               l7874 3360                                 l7866 32B2  
                               l7858 3186                                 l7778 6E4C  
                               l7788 6E5E                                 l7796 5972  
                               l6996 6768                                 l6988 5CE6  
                               l7964 519E                                 l7956 50BA  
                               l7948 5064                                 l7980 6074  
                               l7972 602A                                 l7892 34EC  
                               l7884 341C                                 l7876 3394  
                               l7868 32E6                                 l7798 5982  
                               l6998 6774                                 l7966 51B0  
                               l7958 5138                                 l7990 6110  
                               l7982 60A8                                 l7974 603C  
                               l7894 3538                                 l7886 3450  
                               l7878 33C8                                 l7968 51B8  
                               l7984 60CE                                 l7992 6118  
                               l7976 6052                                 l7896 3540  
                               l7888 3460                      Send_Data@buffer 0100  
                               l7994 6A54                                 l7986 60E4  
                               l7978 6062                                 l7898 3566  
                               l7996 6A66                                 l7988 60FE  
                               l7998 6A76                                 STR_1 7FA1  
                               STR_2 7F7F                                 STR_3 7FC4  
                               STR_4 7F92                                 STR_5 7FAE  
                               STR_6 7F62                                 STR_7 7FCE  
                               STR_8 7FB9                                 STR_9 7F61  
                               u7200 664E                                 u8000 4036  
                               u7201 664A                                 u8001 4032  
                               u8010 4048                                 u7210 3B80  
                               u8011 4044                                 u7211 3B7C  
                               u8100 42F4                                 u8020 4058  
                               u7300 3CCE                                 u7220 3B92  
                               u8101 42F0                                 u8021 4054  
                               u7301 3CCA                                 u7221 3B8E  
                               u8110 4304                                 u8030 4098  
                               u7310 3CE6                                 u7230 3BA2  
                               u8111 4300                                 u8031 4094  
                               u7311 3CE0                                 u7231 3B9E  
                               u8200 6856                                 u8120 4332  
                               u8040 40AA                                 u7400 3DCA  
                               u7320 3CE8                                 u7240 3BE2  
                               u9000 2E7C                                 u8201 6852  
                               u8121 432E                                 u8041 40A6  
                               u7401 3DC6                                 u7241 3BDE  
                               u9001 2E78                                 u7170 65E6  
                               u8210 688A                                 u8130 4348  
                               u8050 40BA                                 u7410 3E02  
                               u7330 3D10                                 u7250 3BF8  
                               u9010 6138                                 u7171 65E2  
                               u8211 6886                                 u8131 4344  
                               u8051 40B6                                 u7411 3DFE  
                               u7331 3D0C                                 u7251 3BF4  
                               u9011 6134                                 u7180 65F6  
                               u8220 5F44                                 u8140 435C  
                               u8060 40F0                                 u7500 3F1C  
                               u7420 3E48                                 u7340 3D2E  
                               u7260 3C0A                                 u8300 5E86  
                               u9020 617C                                 u9100 5CCC  
                               u7181 65F2                                 u8221 5F40  
                               u8141 4358                                 u8061 40EC  
                               u7501 3F18                                 u7421 3E44  
                               u7341 3D2A                                 u7261 3C06  
                               u8301 5E82                                 u9101 5CC8  
                               u7190 661C                                 u8230 5F82  
                               u8150 4376                                 u8070 4100  
                               u7510 3F32                                 u7430 3E7E  
                               u7350 3D4E                                 u7270 3C1A  
                               u8310 5E9A                                 u9030 618C  
                               u9110 5CE6                                 u7191 6618  
                               u8231 5F7E                                 u8151 4372  
                               u8071 40FC                                 u7511 3F2E  
                               u7431 3E7A                                 u7351 3D4A  
                               u7271 3C16                                 u8311 5E96  
                               u9031 6188                                 u9111 5CE2  
                               u8400 6DE8                                 u7600 6D30  
                               u8240 5FA0                                 u8160 43BE  
                               u8080 427A                                 u7520 3F46  
                               u7440 3E8E                                 u7360 3D5C  
                               u7280 3C54                                 u8320 5EC2  
                               u9120 6768                                 u9040 619C  
                               u9200 3946                                 u8401 6DE4  
                               u7601 6D2C                                 u8241 5F9C  
                               u8161 43BA                                 u7521 3F42  
                               u7441 3E8A                                 u7361 3D58  
                               u7281 3C50                                 u8321 5EBE  
                               u9121 6764                                 u9041 6198  
                               u9201 3942                                 u8250 5FC0  
                               u8170 43EC                                 u8090 42D4  
                               u7530 3F60                                 u7450 3EBA  
                               u7370 3D6C                                 u7290 3C62  
                               u8330 5EE2                                 u8410 625E  
                               u7610 6DA0                                 u9130 67E0  
                               u9050 61BA                                 u9210 3978  
                               u8251 5FBC                                 u8171 43E8  
                               u8091 42D0                                 u7531 3F5C  
                               u7451 3EB6                                 u7371 3D68  
                               u7291 3C5E                                 u8331 5EDE  
                               u7611 6D9C                                 u9131 67DC  
                               u9051 61B6                                 u9027 6172  
                               u9211 3974                                 u7700 5DEC  
                               u8260 6010                                 u8180 4424  
                               u7540 3F9A                                 u7460 3ECA  
                               u7380 3D9E                                 u8340 5EF2  
                               u8420 627C                                 u8500 5468  
                               u9060 61EE                                 u7620 68BA  
                               u9220 39AA                                 u9140 367C  
                               u9300 5720                                 u7701 5DE8  
                               u8261 600C                                 u8181 4420  
                               u8085 4270                                 u7541 3F96  
                               u7461 3EC6                                 u7381 3D9A  
                               u8341 5EEE                                 u8421 6278  
                               u8501 5464                                 u7621 68B6  
                               u9221 39A6                                 u9141 3678  
                               u9301 571C                                 u7710 632C  
                               u8190 6818                                 u8270 6DB8  
                               u7550 3FAC                                 u7470 3EE6  
                               u7390 3DAC                                 u8430 62A4  
                               u8510 548A                                 u9070 621C  
                               u7630 68DC                                 u8350 69E2  
                               u9230 39CC                                 u9150 36C0  
                               u9310 573E                                 u7711 6328  
                               u8191 6814                                 u8271 6DB4  
                               u7551 3FA8                                 u7471 3EE2  
                               u7391 3DA8                                 u8431 62A0  
                               u8415 6254                                 u8511 5486  
                               u9071 6218                                 u7631 68D8  
                               u8351 69DE                                 u9231 39C8  
                               u9151 36BC                                 u9311 573A  
                               u7720 634E                                 u8600 57C8  
                               u7800 489E                                 u7560 3FBC  
                               u7480 3EF6                                 u8280 5E24  
                               u8440 62CE                                 u7640 6904  
                               u8360 6A04                                 u9080 5BFC  
                               u9240 3A62                                 u9160 375A  
                               u9320 574E                                 u9400 4532  
                               u7721 634A                                 u8601 57C2  
                               u7801 489A                                 u7561 3FB8  
                               u7481 3EF2                                 u8281 5E20  
                               u8441 62CA                                 u7641 6900  
                               u8361 6A00                                 u9081 5BF8  
                               u9241 3A5E                                 u9161 3756  
                               u9321 574A                                 u9401 452E  
                               u7650 5D14                                 u7730 6374  
                               u8610 57CA                                 u7810 48B0  
                               u7570 3FDC                                 u7490 3F06  
                               u8290 5E58                                 u8530 54F6  
                               u8370 6A22                                 u9090 5CB6  
                               u9170 3776                                 u9250 6C5C  
                               u9330 575C                                 u9410 4554  
                               u7651 5D10                                 u7731 6370  
                               u7811 48AC                                 u7571 3FD8  
                               u7491 3F02                                 u8531 54F2  
                               u9067 61E4                                 u8371 6A1E  
                               u9091 5CB2                                 u9171 3772  
                               u9251 6C58                                 u9331 5758  
                               u9411 4550                                 u7660 5D36  
                               u7740 6396                                 u8380 6AD8  
                               u8620 57DC                                 u7900 4A56  
                               u7820 48C0                                 u7580 3FEC  
                               u8460 6308                                 u8540 551A  
                               u8700 2534                                 u9180 3830  
                               u9340 5796                                 u9260 5616  
                               u9500 51EA                                 u7661 5D32  
                               u7741 6392                                 u8381 6AD4  
                               u8621 57D8                                 u7901 4A52  
                               u7821 48BC                                 u7581 3FE8  
                               u8461 6302                                 u8525 549E  
                               u8701 2530                                 u9181 382C  
                               u9341 5792                                 u9261 5612  
                               u9501 51E6                                 u7670 5D70  
                               u7750 63B4                                 u8390 6B1E  
                               u8630 5808                                 u7910 4A76  
                               u7830 48FE                                 u7590 4008  
                               u8470 630A                                 u8550 5536  
                               u8526 54A8                                 u8710 2544  
                               u9190 3910                                 u9350 57A4  
                               u9270 5624                                 u9510 5242  
                               u9430 45C6                                 u7671 5D6C  
                               u7751 63B0                                 u8391 6B1A  
                               u8631 5804                                 u7911 4A72  
                               u7831 48FA                                 u7591 4004  
                               u8295 5E4E                                 u8455 62E0  
                               u8551 5532                                 u8527 54B8  
                               u8711 2540                                 u9191 390C  
                               u9351 57A0                                 u9271 5620  
                               u9511 523E                                 u9431 45C2  
                               u7680 5D92                                 u7760 63E4  
                               u8640 581E                                 u7920 4A86  
                               u7840 493E                                 u8560 558A  
                               u8480 6B3E                                 u8800 281E  
                               u8720 2582                                 u9600 69CA  
                               u9280 5680                                 u9520 529A  
                               u9440 45FE                                 u9360 4486  
                               u7681 5D8E                                 u7761 63E0  
                               u8641 581A                                 u7921 4A82  
                               u7841 493A                                 u8545 5510  
                               u8481 6B3A                                 u8801 281A  
                               u8721 257E                                 u9601 69C6  
                               u9281 567C                                 u9521 5296  
                               u9441 45FA                                 u9425 4586  
                               u9361 4482                                 u7690 5DBA  
                               u8650 58E8                                 u7930 4AB4  
                               u7850 49B2                                 u7770 483A  
                               u8570 55A6                                 u8490 543A  
                               u8810 2856                                 u8730 2594  
                               u9610 65A0                                 u9290 56D6  
                               u9530 52C2                                 u9450 4674  
                               u9426 4590                                 u9370 44B4  
                               u7691 5DB6                                 u8651 58E4  
                               u7931 4AB0                                 u7851 49AE  
                               u7771 4836                                 u8571 55A2  
                               u8811 2852                                 u8731 2590  
                               u9611 659C                                 u9291 56D2  
                               u9531 52BE                                 u9451 4670  
                               u9427 45A0                                 u9371 44B0  
                               u8660 58FE                                 u7940 4ACA  
                               u7860 49D4                                 u7780 484C  
                               u8580 55E2                                 u8900 2B7E  
                               u8820 286E                                 u8740 260A  
                               u9540 531A                                 u9460 4710  
                               u9380 44C2                                 u9620 007A  
                               u8661 58FA                                 u7941 4AC6  
                               u7861 49D0                                 u7781 4848  
                               u8581 55DE                                 u8565 5580  
                               u8901 2B7A                                 u8821 286A  
                               u8741 2606                                 u9541 5316  
                               u9461 470C                                 u9381 44BE  
                               u9621 0076                                 u8670 5918  
                               u7950 4ADE                                 u7870 49FE  
                               u7790 485C                                 u8590 6BD4  
                               u8910 2BCA                                 u8830 28A4  
                               u8750 261C                                 u9550 5372  
                               u9470 4778                                 u9390 4504  
                               u9710 026C                                 u9630 00AC  
                               u8671 5914                                 u7951 4ADA  
                               u7871 49FA                                 u7791 4858  
                               u8495 5430                                 u8591 6BD0  
                               u8911 2BC6                                 u8831 28A0  
                               u8751 2618                                 u9551 536E  
                               u9471 4774                                 u9391 4500  
                               u9631 00A8                                 u8680 5928  
                               u7960 4AF8                                 u7880 4A22  
                               u8920 2C74                                 u8840 28B2  
                               u8760 2696                                 u9480 478E  
                               u9800 0478                                 u9720 02A6  
                               u9640 00E4                                 u8681 5924  
                               u7961 4AF4                                 u7881 4A1E  
                               u8921 2C70                                 u8841 28AE  
                               u8761 2692                                 u9481 478A  
                               u9801 0474                                 u9721 02A2  
                               u9705 0218                                 u9641 00E0  
                               u7970 4B40                                 u7890 4A38  
                               u8930 2CB0                                 u8850 28DC  
                               u8770 2722                                 u8690 24EA  
                               u9570 6D5C                                 u9810 04C8  
                               u9730 0312                                 u9706 0222  
                               u9650 0106                                 u7971 4B3C  
                               u7891 4A34                                 u8931 2CAC  
                               u8851 28D8                                 u8771 271E  
                               u8691 24E6                                 u9571 6D58  
                               u9811 04C4                                 u9731 030E  
                               u9715 0262                                 u9707 0232  
                               u9651 0102                                 u7980 4B70  
                               u8940 2CBE                                 u8860 2A24  
                               u8780 2756                                 u9580 697C  
                               u9900 06B0                                 u9820 04D6  
                               u9740 032E                                 u9660 015C  
                               u7981 4B6C                                 u8941 2CBA  
                               u8861 2A20                                 u8781 2752  
                               u9581 6978                                 u9565 538C  
                               u9901 06AC                                 u9821 04D2  
                               u9741 032A                                 u9661 0158  
                               u7990 4B9C                                 u8950 2D12  
                               u8870 2A8C                                 u8790 2792  
                               u9590 69A8                                 u9910 06C6  
                               u9830 052A                                 u9750 0366  
                               u9670 0178                                 u7991 4B98  
                               u8951 2D0E                                 u8871 2A88  
                               u8791 278E                                 u9591 69A4  
                               u9495 47FA                                 u9911 06C2  
                               u9831 0526                                 u9751 0362  
                               u9671 0174                                 u8960 2DE4  
                               u8880 2AD2                                 u9920 06E0  
                               u9840 0540                                 u9760 0374  
                               u9680 01A8                                 u8961 2DE0  
                               u8881 2ACE                                 u9921 06DC  
                               u9841 053C                                 u9761 0370  
                               u9681 01A4                                 u8970 2E00  
                               u8890 2AE2                                 u9930 0712  
                               u9850 055C                                 u9770 03AC  
                               u8971 2DFC                                 u8891 2ADE  
                               u9931 070E                                 u9851 0558  
                               u9771 03A8                                 u8980 2E66  
                               u9940 0736                                 u9860 057A  
                               u9780 0406                                 u8981 2E60  
                               u9941 0732                                 u9861 0576  
                               u9781 0402                                 u8990 2E68  
                               u9950 0744                                 u9870 05BE  
                               u9790 0414                                 u9951 0740  
                               u9871 05BA                                 u9791 0410  
                               u9695 01BE                                 u9960 079C  
                               u9880 0622                                 u9696 01C8  
                               u9961 0798                                 u9881 061E  
                               u9697 01D8                                 u9970 07BA  
                               u9890 065A                                 u9971 07B6  
                               u9891 0656                                 u9980 0AC6  
                               u9981 0AC2                                 u9995 0B32  
                               u9996 0B3C                                 u9997 0B4C  
                     Read_Sensors@Rs 00A7                                 abs@a 000B  
                               _dbuf 0372                                 _cp_h 7ECD  
                               _cp_l 7EC9                                 _dp_h 7E65  
                               _dp_l 7E5D                                 _labs 6B30  
                               _main 4BB0                                 _dtoa 57B8  
                       _trigger_test 005E                                 _prec 02FE  
                               _powf 0012                                 pad@i 0015  
                               pad@p 0012                                 fsr1h 0FE2  
                               fsr2h 0FDA                                 indf1 0FE7  
                               indf2 0FDF                                 fsr1l 0FE1  
                               fsr2l 0FD9                                 _stoa 611E  
                               btemp 005F                                 _utoa 5BEC  
                   __end_of_ADC_Init 6E68                     __end_of_ADC_Read 6D6A  
                      ___fpclassifyf 621E                                 prodh 0FF4  
                               prodl 0FF3                                 start 000E  
                    ___fldiv@new_exp 0039                          main@voltage 03F8  
               Read_Sensors@raw_temp 007D                      __end_of_HighISR 6E2A  
               Read_Sensors@temp_adc 0095                         ___param_bank 0000  
          Handle_Commands@last_blink 0328                                ??_abs 000D  
              Read_Sensors@flame_adc 0097                                ??_pad 0014  
                  ?_Update_Actuators 0001                   ??_Update_Actuators 0068  
                 _Handle_Fire_Events 4F34                        ___fltol@sign1 0009  
                    __end_of___aldiv 5E0E                                ?_labs 0001  
                    __end_of___almod 6406                      __end_of___fladd 401C  
                              ?_main 0001                                ?_dtoa 0017  
                    __end_of___fldiv 4BB0                      __end_of___flneg 6DDA  
                              STR_10 7F71                                STR_11 7FD7  
                              STR_12 7FE0                                STR_13 7F61  
                              STR_21 7FFB                                STR_14 7FF0  
                              STR_15 7F61                                STR_24 7FE9  
                              STR_16 7F44                                STR_17 7ED1  
                              STR_18 7FF7                      __end_of___awmod 673E  
                    __end_of___flmul 4442                                ?_powf 0068  
                    __end_of___flsub 6CAE                      __end_of___fltol 5F14  
                              ?_stoa 0009                                u10000 0BE8  
                              u10001 0BE4                                u10010 0C10  
                    __end_of___lldiv 6938                                u10011 0C0C  
                              u10100 1C52                                u10101 1C4E  
                              u10030 1A2C                                u10031 1A28  
                              ?_utoa 0017                                u10200 596A  
                              u10040 1A48                                u10201 5966  
                              u10041 1A44                                u10025 0E0A  
                              u10210 5982                                u10050 1AC4  
                              u10211 597E                                u10115 1C6C  
                              u10051 1AC0                                u10220 59EA  
                              u10116 1C76                                u10060 1B10  
                              u10300 3134                                u10221 59E6  
                              u10125 1CD6                                u10117 1C86  
                              u10061 1B0C                                u10301 3130  
                              u10230 5A34                                u10150 1E06  
                              u10126 1CE0                                u10070 1B42  
                              u10310 3150                                u10231 5A30  
                              u10151 1E02                                u10135 1D2E  
                              u10127 1CF0                                u10071 1B3E  
                              u10311 314C                                u10240 5A46  
                              u10136 1D38                                u10080 1B9A  
                              u10320 3186                                u10400 5B3C  
                              u10241 5A3E                                u10145 1DCC  
                              u10137 1D48                                u10081 1B96  
                              u10321 3182                                u10401 5B38  
                              u10146 1DD6                                u10330 3394  
                              u10410 5B54                                u10147 1DE6  
                              u10331 3390                                u10411 5B50  
                              u10260 5AAE                                u10500 50AA  
                              u10180 245A                                u10340 340C  
                              u10420 5BA4                                u10261 5AAA  
                              u10501 50A6                                u10181 2456  
                              u10165 23DA                                u10341 3408  
                              u10421 5BA0                                u10510 50BA  
                              u10190 24B2                                u10350 3450  
                              u10270 3094                                u10430 5BB6  
                              u10511 50B6                                u10191 24AE  
                              u10175 2420                                u10095 1BDE  
                              u10351 344C                                u10271 3090  
                              u10431 5BAE                                u10520 602A  
                              u10176 242A                                u10096 1BE8  
                              u10360 3538                                u10280 30DA  
                              u10600 649E                                u10521 6026  
                              u10177 243A                                u10097 1BF8  
                              u10361 3534                                u10281 30D6  
                              u10601 649A                                u10258 5A48  
                              u10450 4F46                                u10530 603C  
                              u10370 3566                                u10290 30FE  
                              u10610 64CA                                u10451 4F42  
                              u10531 6038                                u10371 3562  
                              u10291 30FA                                u10611 64C6  
                              u10460 4F56                                u10540 6062  
                              u10620 64EC                                u10380 5AD2  
                              u10700 4E44                                u10461 4F52  
                              u10541 605E                                u10621 64E8  
                              u10381 5ACE                                u10701 4E40  
                              u10470 4FB6                                u10550 6074  
                              u10390 5B08                                u10630 66A0  
                              u10710 4EA6                                u10471 4FB2  
                              u10551 6070                                u10391 5B04  
                              u10631 669C                                u10711 4EA2  
                              u10480 5004                                u10560 6A66  
                              u10448 5BBA                                u10640 66BA  
                              u10720 4EBA                      __end_of___llmod 6A54  
                              u10481 5000                                u10561 6A62  
                              u10641 66B6                                u10721 4EB6  
                              u10490 5050                                u10570 6A76  
                              u10650 66D4                                u10730 4EE2  
                              u10491 504C                                u10571 6A72  
                              u10651 66D0                                u10731 4EDE  
                              u10580 6A9E                                u10660 66F2  
                              u10581 6A9A                                u10661 66EE  
                              u10590 6AAE                                u10670 6708  
                              u10807 5190                                u10591 6AAA  
                              u10671 6704                                u10680 672C  
                              u10681 6728                                u10690 4CC6  
                              u10691 4CC2                                u10747 4BCA  
                              u10757 4C96                                u10767 4E14  
                              u10777 4F1E                                u10787 6D48  
                              u10797 60F0                                i2l146 6E26  
                              _RCREG 0FAE                         vfpfcnvrt@fmt 009D  
                              _SPBRG 0FAF                                _PORTB 0F81  
                              _TRISB 0F93                                _TXREG 0FAD  
                      ?_Read_Sensors 0001                  ?_Handle_Fire_Events 0001  
                              _lg2_h 7E89                                _lg2_l 7E85  
                              _flags 0368                  read_prec_or_width@c 0005  
                              _errno 0360                  read_prec_or_width@n 0006  
                              _ivln2 7E79                                _fputc 65D6  
                              _fputs 6CF2                      __end_of_ivln2_h 7EC9  
                    __end_of_ivln2_l 7E79                                _two24 7EBD  
                    __end_of_scalbnf 53F2                                labs@a 0001  
                              pad@fp 000F                                _width 0362  
                              _putch 6E78                                main@i 03FC  
                              dtoa@d 0018                                dtoa@i 0023  
                              dtoa@p 0020                                _sqrtf 4442  
                              dtoa@s 0022                                dtoa@w 001E  
                              tablat 0FF5                                powf@i 0128  
                              powf@j 01A8                                powf@k 01A4  
                              powf@n 0188                                powf@r 0150  
                              powf@s 0160                                powf@t 01B0  
                              powf@u 017C                                powf@v 0180  
                              powf@w 0144                                powf@x 0068  
                              powf@y 006C                                powf@z 01B4  
                              stoa@l 0012                                stoa@p 000E  
                              stoa@s 000A                                ttemp5 0060  
                              ttemp6 0063                                ttemp7 0067  
                              utoa@d 0018                                utoa@i 0020  
                              utoa@p 001E                                utoa@w 001C  
                              status 0FD8                                wtemp8 0060  
                    __end_of_sprintf 6CF2                       ?___fpclassifyf 0001  
                      main@adc_value 03F2                           Send_Data@i 01C8  
                    _shutdown_system 036B                 ??_Handle_Fire_Events 00E4  
                    __initialization 6BD6                         __end_of_cp_h 7ED1  
                       __end_of_cp_l 7ECD                         __end_of_dp_h 7E6D  
                       __end_of_dp_l 7E65                         __end_of_labs 6B86  
                       __end_of_main 4F34                         __end_of_dtoa 595C  
                       __end_of_powf 24C8                         __end_of_stoa 621E  
                       __end_of_utoa 5D04              ?_Handle_Shutdown_Events 0001  
                  ??_Handle_Commands 0001                 _Update_Actuators$753 005D  
               __end_of_Apply_Filter 65D6                               ??_labs 0005  
                             ??_main 00EE                               ??_dtoa 001C  
                             ??_powf 0070                               ??_stoa 000C  
                             ??_utoa 001C                        __activetblptr 0002  
                     ??_Read_Sensors 0079           __end_of_read_prec_or_width 67EA  
                             _ADCON1 0FC1                               _ADCON2 0FC0  
                             ?_fputc 0001                     ___llmod@dividend 0001  
                             ?_fputs 0009                               _ADRESH 0FC4  
                             _ADRESL 0FC3                               ?_putch 0001  
                             ?_sqrtf 0001                               i2l5800 6E10  
                             i2l5802 6E1E                               i2l5804 6E24  
                             _MQ2_Ro 03D6                               _OSCCON 0FD3  
                      vfpfcnvrt@done 00A2                            ??_HighISR 0001  
                             _TRISA0 7C90                               _TRISA1 7C91  
                             _TRISA2 7C92                               _TRISC6 7CA6  
                             _TRISC7 7CA7         Handle_Fire_Events@water_used 00EA  
                   __end_of___xxtofl 57B8                         vfprintf@cfmt 00AE  
     __end_of_Handle_Shutdown_Events 6ACA                    __end_of_UART_Init 6E56  
       Send_History_Event@event_type 00E0                               ___flge 5F14  
                             ___fleq 67EA         Handle_Fire_Events@start_data 0296  
                          ??___aldiv 0009                            ??___almod 0009  
                          ??___fladd 0049               Read_Sensors@last_pulse 0364  
                          ??___fldiv 0030                            ??___flneg 0005  
                          ??___awmod 0005                            ??___flmul 0017  
                          ??___flsub 0059                            ??___fltol 0005  
                          ??___lldiv 0009                            ??___llmod 0009  
                             _efgtoa 24C8                               _co_ppm 0350  
                    ADC_Read@channel 0005                               _floorf 53F2  
                             _memcpy 6B86                 read_prec_or_width@ap 0002  
                             clear_0 6BFC           Handle_Fire_Events@end_data 0200  
                    ___awmod@divisor 0003                               isa$std 0001  
                    ___awmod@counter 0005                               pad@buf 0010  
                             dtoa@fp 0017                               _strcpy 6D6A  
                    Apply_Filter@sum 0060                               fputc@c 0001  
                             fputs@c 000C                               fputs@i 000D  
                             fputs@s 0009                            ??_scalbnf 002E  
                    ___fpclassifyf@e 0009             Send_History_Event@buffer 0100  
                          ?_ADC_Init 0001                      ___fpclassifyf@u 000B  
                          ?_ADC_Read 0001                      ___fpclassifyf@x 0001  
                       __mediumconst 7E5C           Handle_Fire_Events@duration 00E6  
              Apply_Filter@new_value 0051                               powf@s2 0190  
                             powf@t1 018C                               powf@t2 011C  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             powf@y1 012C                               tblptru 0FF8  
       Send_History_Event@extra_data 00E2                               powf@ax 0178  
                             powf@is 0198                               powf@hx 0168  
                             powf@hy 0184                               powf@ix 01AC  
                             powf@iy 0194                               powf@sn 0164  
                             stoa@cp 0010                               stoa@fp 0009  
                             putch@c 0001                     __end_of_vfprintf 6C68  
                             utoa@fp 0017                               sqrtf@i 000E  
                             sqrtf@m 001A                               sqrtf@q 0012  
                             sqrtf@r 001E                               sqrtf@s 000A  
                             sqrtf@t 0016                               sqrtf@x 0001  
                          ??_sprintf 005D                           ___flge@ff1 0060  
                    ??___fpclassifyf 0005                           ___flge@ff2 0064  
                       ___xxtofl@arg 000B                         ___xxtofl@exp 000A  
                       ___xxtofl@val 0001                           ___fleq@ff1 0001  
                         ___fleq@ff2 0005                           __accesstop 0060  
            __end_of__initialization 6C12                __end_of_TEST_DURATION 7EC5  
                         ___flneg@f1 0001  Handle_Shutdown_Events@prev_shutdown 0369  
                      ___rparam_used 0001                           ___fltol@f1 0001  
            Read_Sensors@mq2_voltage 009B                       __pcstackCOMRAM 0001  
                       __pidataBANK3 6E2A                        __end_of_lg2_h 7E8D  
                      __end_of_lg2_l 7E89                        __end_of_ivln2 7E7D  
                      __end_of_fputc 6690                        __end_of_fputs 6D32  
                      __end_of_two24 7EC1                        __end_of_putch 6E7A  
                      __end_of_sqrtf 4820                           __end_of_L1 7EBD  
                         __end_of_L2 7EB9                           __end_of_L3 7EB5  
                         __end_of_L4 7EB1                           __end_of_L5 7EAD  
                         __end_of_L6 7EA9                           __end_of_P1 7EA5  
                         __end_of_P2 7EA1                           __end_of_P3 7E9D  
                         __end_of_P4 7E99                           __end_of_P5 7E95  
                         __end_of_bp 7E75                           __end_of_cp 7E81  
                       _alarm_active 036F                           ??_ADC_Init 0001  
                         ??_ADC_Read 0003                  _fire_trigger_sensor 03C2  
                  __end_of_Send_Data 64EE                              ??_fputc 0004  
                            ??_fputs 000C                              ??_putch 0001  
                            ??_sqrtf 0005                           __pbssBANK2 02FA  
                         __pbssBANK3 0300                   _Handle_Test_Events 601A  
               __end_of_Read_Sensors 3658                              ?___flge 0060  
                            ?___fleq 0001                  ?_Handle_Test_Events 0001  
                            ?_efgtoa 0068                              ?_floorf 0041  
                            ?_memcpy 0001                           _co_samples 0300  
                Send_History_Event@i 01C8                              ?_strcpy 0001  
                          ?___xxtofl 0001                           _fire_alarm 036E  
               ??_Handle_Test_Events 00E4                         _Apply_Filter 64EE  
                            _HighISR 0008                      _Handle_Commands 595C  
                    _flame_intensity 0358                              __Hparam 0000  
                            __Lparam 0000                              ___aldiv 5D04  
                            ___almod 631C                              ___fladd 3B66  
                            ___fldiv 4820                              ___flneg 6DA2  
                            ___awmod 6690                              ___flmul 401C  
                            ___flsub 6C68                              ___fltol 5E0E  
                            ___lldiv 6894                              ___llmod 69CC  
                          ?_vfprintf 00AA                              __pcinit 6BD6  
                            __ramtop 0800                              __ptext0 4BB0  
                            __ptext1 6690                              __ptext2 5ABC  
                            __ptext3 6E42                              __ptext4 6406  
                            __ptext5 2EB8                              __ptext6 0012  
                            __ptext7 4442                              __ptext8 51BE  
                            __ptext9 5604                read_prec_or_width@fmt 0001  
                            _ivln2_h 7EC5                              _ivln2_l 7E75  
                         ??___xxtofl 0005                              _scalbnf 51BE  
                   ___awmod@dividend 0001           Read_Sensors@last_flow_time 0320  
                   ___aldiv@dividend 0001                              efgtoa@c 006D  
                            efgtoa@d 007B                              efgtoa@e 007F  
                            efgtoa@f 0069                      _prev_fire_alarm 036D  
                            efgtoa@g 0092                              efgtoa@h 0089  
                            efgtoa@i 0087                              efgtoa@l 008D  
                            efgtoa@m 007D                              efgtoa@n 0096  
                            efgtoa@p 0072                              efgtoa@t 0074  
                            efgtoa@u 0098                              efgtoa@w 0081  
                            _sprintf 6CAE                       __pintcode_body 6E0E  
               end_of_initialization 6C12                              floorf@e 004F  
                            floorf@m 004B                              floorf@u 0051  
                            floorf@x 0041                              memcpy@d 0008  
                            memcpy@n 0005                              memcpy@s 000A  
                            fputc@fp 0003                        __Lmediumconst 7E5C  
                            int_func 6E0E                              fputs@fp 000B  
                 _read_prec_or_width 673E                      ___lldiv@divisor 0005  
                    ___lldiv@counter 000D                              powf@p_h 01A0  
                            powf@p_l 016C                              powf@s_h 0174  
                            powf@t_h 0170                              powf@s_l 0130  
                            powf@t_l 0134                              powf@z_h 0120  
                            powf@z_l 0124                    __end_of_vfpfcnvrt 3B66  
                         efgtoa@mode 0079                           efgtoa@sign 0091  
                          _RCSTAbits 0FAB                     ___aldiv@quotient 000B  
                            postdec1 0FE5                              postdec2 0FDD  
                ?_read_prec_or_width 0001                              postinc0 0FEE  
                            postinc1 0FE6                              postinc2 0FDE  
                   vfpfcnvrt@convarg 00A3           __end_of_Send_History_Event 69CC  
                         ??_vfprintf 005D                              sqrtf@ix 0022  
                            strcpy@d 0005                            _UART_Init 6E42  
                          _PORTBbits 0F81                          ___fladd@grs 0050  
                      ___xxtofl@sign 0009                            _TRISBbits 0F93  
               ??_read_prec_or_width 0003                          ___fldiv@grs 003B  
                        ___fldiv@rem 0034              __end_of_Handle_Commands 5ABC  
                Read_Sensors@mq2_adc 0099                          ___flmul@grs 001D  
                         _total_flow 0348                            _TXSTAbits 0FAC  
                Read_Sensors@last_co 0324              Read_Sensors@temp_factor 0085  
                     __end_of___flge 601A                       __end_of___fleq 6894  
                        vfpfcnvrt@ap 009E                          vfpfcnvrt@cp 00A8  
                        vfpfcnvrt@fp 009C                           ?_UART_Init 0001  
                      _system_millis 02FA                       __end_of_efgtoa 2EB8  
                     __end_of_floorf 5604                       __end_of_memcpy 6BD6  
                         floorf@F521 0314                  Apply_Filter@samples 0055  
                     __end_of_strcpy 6DA2                  start_initialization 6BD6  
                       _Read_Sensors 2EB8                          __end_of_lg2 7E91  
                        __end_of_abs 6E0E                          __end_of_pad 6B30  
                        __end_of_ovt 7E85                     _Update_Actuators 5ABC  
         Read_Sensors@current_pulses 00A3              Read_Sensors@rs_ro_ratio 009F  
                          _Send_Data 6406                __end_of___fpclassifyf 631C  
                    ___llmod@divisor 0005                      ___llmod@counter 0009  
                        vfprintf@fmt 00AB                             ??___flge 0059  
                           ??___fleq 0009                             ??_efgtoa 006E  
                        __pdataBANK3 03D6                             ??_floorf 0045  
                           ??_memcpy 0007              Read_Sensors@pulses_diff 00A5  
                           ??_strcpy 0005                            ___fladd@a 0045  
                          ___fladd@b 0041                       _Interrupt_Init 6E68  
                          ___fldiv@a 002C                            ___fldiv@b 0028  
                          ___flmul@a 0013                            ___flmul@b 000F  
                        __pbssCOMRAM 005E                            ___flsub@a 0055  
                          ___flsub@b 0051                        __pcstackBANK0 0060  
                      __pcstackBANK1 0100                        __pcstackBANK2 0200  
                      __pcstackBANK3 03EE                     ?_Handle_Commands 0001  
                           ?_HighISR 0001                           ?_Send_Data 0001  
           ??_Handle_Shutdown_Events 005D                          _efgtoa$1377 0076  
                          _main$1835 03EE                            _dtoa$1346 001C  
                 _flame_base_voltage 0354                            __pintcode 0008  
                      __pmediumconst 7E5C                             ?___aldiv 0001  
                           ?___almod 0001                             ?___fladd 0041  
                           ?___fldiv 0028                             ?___flneg 0001  
                           ?___awmod 0001                             ?___flmul 000F  
                           ?___flsub 0051                             ?___fltol 0001  
                           ?___lldiv 0001                       _flame_detected 0371  
                           ?___llmod 0001                          ??_UART_Init 0001  
             __end_of_Interrupt_Init 6E78                     ___almod@dividend 0001  
                        __smallconst 7E5C                             ?_scalbnf 0028  
                           _ADC_Init 6E56                             _ADC_Read 6D32  
                          _flow_rate 034C                             ?_sprintf 00B0  
                    main@cycle_count 03F6                      ___aldiv@divisor 0005  
                          _powf$1840 0158                            _powf$1841 014C  
                          _powf$1842 019C                            _powf$1850 010C  
                          _powf$1843 0138                            _powf$1851 0110  
                          _powf$1852 0114                            _powf$1844 0100  
                          _powf$1853 0118                            _powf$1845 0104  
                          _powf$1846 015C                            _powf$1839 0148  
                          _powf$1847 013C                            _powf$1848 0140  
                          _powf$1849 0108                      ___aldiv@counter 0009  
                      _TEST_DURATION 7EC1                             _PIR1bits 0F9E  
                           i2u711_40 6E1E                             i2u711_41 6E1A  
                           _RCONbits 0FD0                           powf@yisint 0154  
                          _vfpfcnvrt 3658                      ?_Interrupt_Init 0001  
                         _ADCON0bits 0FC2                            main@i_676 03FE  
                 Read_Sensors@raw_co 00AB                   _Send_History_Event 6938  
                         vfpfcnvrt@c 00A7                          _INTCON2bits 0FF1  
                        _INTCON3bits 0FF0                            copy_data0 6BEA  
                    _test_start_flow 032C                  ?_Send_History_Event 00E0  
                    _test_start_time 0344                          ??_Send_Data 005D  
         __end_of_Handle_Fire_Events 51BE                             __Hrparam 0000  
                          memcpy@tmp 0007                           vfprintf@ap 00AD  
                           __Lrparam 0000                           vfprintf@fp 00AA  
                      Apply_Filter@i 0064                         _sample_index 036C  
           __end_of_Update_Actuators 5BEC                           ?_vfpfcnvrt 009C  
               ??_Send_History_Event 005D                   ___fpclassifyf@F465 0318  
                         sprintf@fmt 00B2                             ___xxtofl 5604  
          Read_Sensors@flame_voltage 0081                             __ptext10 64EE  
                           __ptext11 6D32                             __ptext20 5BEC  
                           __ptext12 6E68                             __ptext21 69CC  
                           __ptext13 601A                             __ptext30 621E  
                           __ptext22 6894                             __ptext14 6A54  
                           __ptext31 5E0E                             __ptext23 611E  
                           __ptext15 4F34                             __ptext40 6ACA  
                           __ptext32 6C68                             __ptext24 673E  
                           __ptext16 6938                             __ptext41 6CF2  
                           __ptext33 3B66                             __ptext25 24C8  
                           __ptext17 6CAE                             __ptext42 65D6  
                           __ptext34 6DA2                             __ptext26 6D6A  
                           __ptext18 6C20                             __ptext43 6E78  
                           __ptext35 401C                             __ptext27 6B86  
                           __ptext19 3658                             __ptext44 6DDA  
                           __ptext36 5F14                             __ptext28 6B30  
                           __ptext45 631C                             __ptext37 67EA  
                           __ptext29 53F2                             __ptext46 5D04  
                           __ptext38 4820                             __ptext47 595C  
                           __ptext39 57B8                             __ptext48 6E56  
                 Handle_Commands@cmd 0005                      ___almod@divisor 0005  
                    ___almod@counter 0009                           strcpy@dest 0001  
                           efgtoa@fp 0068                             efgtoa@ne 0070  
                           efgtoa@pp 0078                             efgtoa@ou 0083  
       Handle_Test_Events@water_used 01FC                             isa$xinst 0000  
                           int$flags 005F                             _vfprintf 6C20  
             _Handle_Shutdown_Events 6A54                           _INTCONbits 0FF2  
                       _temp_samples 03DA                             memcpy@d1 0001  
                           memcpy@s1 0003                             scalbnf@n 002C  
                           scalbnf@u 0032                             scalbnf@x 0028  
                           scalbnf@y 0036                     _fire_start_flame 0338  
                           intlevel2 0000                            sprintf@ap 00D4  
                      ?_Apply_Filter 0051                     ___lldiv@dividend 0001  
                          strcpy@src 0003          Handle_Test_Events@prev_test 036A  
        Handle_Test_Events@test_data 01CA                          efgtoa@nmode 007A  
                        ??_vfpfcnvrt 00A0           Update_Actuators@last_blink 031C  
                    _fire_start_flow 0330                          _temperature 035C  
                           sprintf@f 00D5                             sprintf@s 00B0  
                    _fire_start_temp 033C                      _fire_start_time 0340  
                  main@adc_value_677 03F4                     ___lldiv@quotient 0009  
                       ___aldiv@sign 000A                        ___fladd@signs 004D  
                     ??_Apply_Filter 0057                         ___almod@sign 000A  
                       ___fladd@aexp 004E                         ___fladd@bexp 004F  
                      _fire_start_co 0334  
