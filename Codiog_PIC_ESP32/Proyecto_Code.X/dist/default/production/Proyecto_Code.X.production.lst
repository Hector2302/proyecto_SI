

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jul 07 16:20:01 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK3,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=3
    58                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    59                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=3
    60                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=3
    61                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=2
    62                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1,group=2
    65                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Version 2.20
    75                           ; Generated 12/02/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4550 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000FE0                     bsr             equ	4064
   109   000FE9                     fsr0            equ	4073
   110   000FEA                     fsr0h           equ	4074
   111   000FE9                     fsr0l           equ	4073
   112   000FE1                     fsr1            equ	4065
   113   000FE2                     fsr1h           equ	4066
   114   000FE1                     fsr1l           equ	4065
   115   000FD9                     fsr2            equ	4057
   116   000FDA                     fsr2h           equ	4058
   117   000FD9                     fsr2l           equ	4057
   118   000FEF                     indf0           equ	4079
   119   000FE7                     indf1           equ	4071
   120   000FDF                     indf2           equ	4063
   121   000FF2                     intcon          equ	4082
   122   000000                     nvmcon          equ	0
   123   000FF9                     pcl             equ	4089
   124   000FFA                     pclath          equ	4090
   125   000FFB                     pclatu          equ	4091
   126   000FEB                     plusw0          equ	4075
   127   000FE3                     plusw1          equ	4067
   128   000FDB                     plusw2          equ	4059
   129   000FED                     postdec0        equ	4077
   130   000FE5                     postdec1        equ	4069
   131   000FDD                     postdec2        equ	4061
   132   000FEE                     postinc0        equ	4078
   133   000FE6                     postinc1        equ	4070
   134   000FDE                     postinc2        equ	4062
   135   000FEC                     preinc0         equ	4076
   136   000FE4                     preinc1         equ	4068
   137   000FDC                     preinc2         equ	4060
   138   000FF3                     prod            equ	4083
   139   000FF4                     prodh           equ	4084
   140   000FF3                     prodl           equ	4083
   141   000FD8                     status          equ	4056
   142   000FF5                     tablat          equ	4085
   143   000FF6                     tblptr          equ	4086
   144   000FF7                     tblptrh         equ	4087
   145   000FF6                     tblptrl         equ	4086
   146   000FF8                     tblptru         equ	4088
   147   000FFD                     tosl            equ	4093
   148   000FE8                     wreg            equ	4072
   149   000F62                     SPPDATA         equ	3938	;# 
   150   000F63                     SPPCFG          equ	3939	;# 
   151   000F64                     SPPEPS          equ	3940	;# 
   152   000F65                     SPPCON          equ	3941	;# 
   153   000F66                     UFRM            equ	3942	;# 
   154   000F66                     UFRML           equ	3942	;# 
   155   000F67                     UFRMH           equ	3943	;# 
   156   000F68                     UIR             equ	3944	;# 
   157   000F69                     UIE             equ	3945	;# 
   158   000F6A                     UEIR            equ	3946	;# 
   159   000F6B                     UEIE            equ	3947	;# 
   160   000F6C                     USTAT           equ	3948	;# 
   161   000F6D                     UCON            equ	3949	;# 
   162   000F6E                     UADDR           equ	3950	;# 
   163   000F6F                     UCFG            equ	3951	;# 
   164   000F70                     UEP0            equ	3952	;# 
   165   000F71                     UEP1            equ	3953	;# 
   166   000F72                     UEP2            equ	3954	;# 
   167   000F73                     UEP3            equ	3955	;# 
   168   000F74                     UEP4            equ	3956	;# 
   169   000F75                     UEP5            equ	3957	;# 
   170   000F76                     UEP6            equ	3958	;# 
   171   000F77                     UEP7            equ	3959	;# 
   172   000F78                     UEP8            equ	3960	;# 
   173   000F79                     UEP9            equ	3961	;# 
   174   000F7A                     UEP10           equ	3962	;# 
   175   000F7B                     UEP11           equ	3963	;# 
   176   000F7C                     UEP12           equ	3964	;# 
   177   000F7D                     UEP13           equ	3965	;# 
   178   000F7E                     UEP14           equ	3966	;# 
   179   000F7F                     UEP15           equ	3967	;# 
   180   000F80                     PORTA           equ	3968	;# 
   181   000F81                     PORTB           equ	3969	;# 
   182   000F82                     PORTC           equ	3970	;# 
   183   000F83                     PORTD           equ	3971	;# 
   184   000F84                     PORTE           equ	3972	;# 
   185   000F89                     LATA            equ	3977	;# 
   186   000F8A                     LATB            equ	3978	;# 
   187   000F8B                     LATC            equ	3979	;# 
   188   000F8C                     LATD            equ	3980	;# 
   189   000F8D                     LATE            equ	3981	;# 
   190   000F92                     TRISA           equ	3986	;# 
   191   000F92                     DDRA            equ	3986	;# 
   192   000F93                     TRISB           equ	3987	;# 
   193   000F93                     DDRB            equ	3987	;# 
   194   000F94                     TRISC           equ	3988	;# 
   195   000F94                     DDRC            equ	3988	;# 
   196   000F95                     TRISD           equ	3989	;# 
   197   000F95                     DDRD            equ	3989	;# 
   198   000F96                     TRISE           equ	3990	;# 
   199   000F96                     DDRE            equ	3990	;# 
   200   000F9B                     OSCTUNE         equ	3995	;# 
   201   000F9D                     PIE1            equ	3997	;# 
   202   000F9E                     PIR1            equ	3998	;# 
   203   000F9F                     IPR1            equ	3999	;# 
   204   000FA0                     PIE2            equ	4000	;# 
   205   000FA1                     PIR2            equ	4001	;# 
   206   000FA2                     IPR2            equ	4002	;# 
   207   000FA6                     EECON1          equ	4006	;# 
   208   000FA7                     EECON2          equ	4007	;# 
   209   000FA8                     EEDATA          equ	4008	;# 
   210   000FA9                     EEADR           equ	4009	;# 
   211   000FAB                     RCSTA           equ	4011	;# 
   212   000FAB                     RCSTA1          equ	4011	;# 
   213   000FAC                     TXSTA           equ	4012	;# 
   214   000FAC                     TXSTA1          equ	4012	;# 
   215   000FAD                     TXREG           equ	4013	;# 
   216   000FAD                     TXREG1          equ	4013	;# 
   217   000FAE                     RCREG           equ	4014	;# 
   218   000FAE                     RCREG1          equ	4014	;# 
   219   000FAF                     SPBRG           equ	4015	;# 
   220   000FAF                     SPBRG1          equ	4015	;# 
   221   000FB0                     SPBRGH          equ	4016	;# 
   222   000FB1                     T3CON           equ	4017	;# 
   223   000FB2                     TMR3            equ	4018	;# 
   224   000FB2                     TMR3L           equ	4018	;# 
   225   000FB3                     TMR3H           equ	4019	;# 
   226   000FB4                     CMCON           equ	4020	;# 
   227   000FB5                     CVRCON          equ	4021	;# 
   228   000FB6                     ECCP1AS         equ	4022	;# 
   229   000FB6                     CCP1AS          equ	4022	;# 
   230   000FB7                     ECCP1DEL        equ	4023	;# 
   231   000FB7                     CCP1DEL         equ	4023	;# 
   232   000FB8                     BAUDCON         equ	4024	;# 
   233   000FB8                     BAUDCTL         equ	4024	;# 
   234   000FBA                     CCP2CON         equ	4026	;# 
   235   000FBB                     CCPR2           equ	4027	;# 
   236   000FBB                     CCPR2L          equ	4027	;# 
   237   000FBC                     CCPR2H          equ	4028	;# 
   238   000FBD                     CCP1CON         equ	4029	;# 
   239   000FBD                     ECCP1CON        equ	4029	;# 
   240   000FBE                     CCPR1           equ	4030	;# 
   241   000FBE                     CCPR1L          equ	4030	;# 
   242   000FBF                     CCPR1H          equ	4031	;# 
   243   000FC0                     ADCON2          equ	4032	;# 
   244   000FC1                     ADCON1          equ	4033	;# 
   245   000FC2                     ADCON0          equ	4034	;# 
   246   000FC3                     ADRES           equ	4035	;# 
   247   000FC3                     ADRESL          equ	4035	;# 
   248   000FC4                     ADRESH          equ	4036	;# 
   249   000FC5                     SSPCON2         equ	4037	;# 
   250   000FC6                     SSPCON1         equ	4038	;# 
   251   000FC7                     SSPSTAT         equ	4039	;# 
   252   000FC8                     SSPADD          equ	4040	;# 
   253   000FC9                     SSPBUF          equ	4041	;# 
   254   000FCA                     T2CON           equ	4042	;# 
   255   000FCB                     PR2             equ	4043	;# 
   256   000FCB                     MEMCON          equ	4043	;# 
   257   000FCC                     TMR2            equ	4044	;# 
   258   000FCD                     T1CON           equ	4045	;# 
   259   000FCE                     TMR1            equ	4046	;# 
   260   000FCE                     TMR1L           equ	4046	;# 
   261   000FCF                     TMR1H           equ	4047	;# 
   262   000FD0                     RCON            equ	4048	;# 
   263   000FD1                     WDTCON          equ	4049	;# 
   264   000FD2                     HLVDCON         equ	4050	;# 
   265   000FD2                     LVDCON          equ	4050	;# 
   266   000FD3                     OSCCON          equ	4051	;# 
   267   000FD5                     T0CON           equ	4053	;# 
   268   000FD6                     TMR0            equ	4054	;# 
   269   000FD6                     TMR0L           equ	4054	;# 
   270   000FD7                     TMR0H           equ	4055	;# 
   271   000FD8                     STATUS          equ	4056	;# 
   272   000FD9                     FSR2            equ	4057	;# 
   273   000FD9                     FSR2L           equ	4057	;# 
   274   000FDA                     FSR2H           equ	4058	;# 
   275   000FDB                     PLUSW2          equ	4059	;# 
   276   000FDC                     PREINC2         equ	4060	;# 
   277   000FDD                     POSTDEC2        equ	4061	;# 
   278   000FDE                     POSTINC2        equ	4062	;# 
   279   000FDF                     INDF2           equ	4063	;# 
   280   000FE0                     BSR             equ	4064	;# 
   281   000FE1                     FSR1            equ	4065	;# 
   282   000FE1                     FSR1L           equ	4065	;# 
   283   000FE2                     FSR1H           equ	4066	;# 
   284   000FE3                     PLUSW1          equ	4067	;# 
   285   000FE4                     PREINC1         equ	4068	;# 
   286   000FE5                     POSTDEC1        equ	4069	;# 
   287   000FE6                     POSTINC1        equ	4070	;# 
   288   000FE7                     INDF1           equ	4071	;# 
   289   000FE8                     WREG            equ	4072	;# 
   290   000FE9                     FSR0            equ	4073	;# 
   291   000FE9                     FSR0L           equ	4073	;# 
   292   000FEA                     FSR0H           equ	4074	;# 
   293   000FEB                     PLUSW0          equ	4075	;# 
   294   000FEC                     PREINC0         equ	4076	;# 
   295   000FED                     POSTDEC0        equ	4077	;# 
   296   000FEE                     POSTINC0        equ	4078	;# 
   297   000FEF                     INDF0           equ	4079	;# 
   298   000FF0                     INTCON3         equ	4080	;# 
   299   000FF1                     INTCON2         equ	4081	;# 
   300   000FF2                     INTCON          equ	4082	;# 
   301   000FF3                     PROD            equ	4083	;# 
   302   000FF3                     PRODL           equ	4083	;# 
   303   000FF4                     PRODH           equ	4084	;# 
   304   000FF5                     TABLAT          equ	4085	;# 
   305   000FF6                     TBLPTR          equ	4086	;# 
   306   000FF6                     TBLPTRL         equ	4086	;# 
   307   000FF7                     TBLPTRH         equ	4087	;# 
   308   000FF8                     TBLPTRU         equ	4088	;# 
   309   000FF9                     PCLAT           equ	4089	;# 
   310   000FF9                     PC              equ	4089	;# 
   311   000FF9                     PCL             equ	4089	;# 
   312   000FFA                     PCLATH          equ	4090	;# 
   313   000FFB                     PCLATU          equ	4091	;# 
   314   000FFC                     STKPTR          equ	4092	;# 
   315   000FFD                     TOS             equ	4093	;# 
   316   000FFD                     TOSL            equ	4093	;# 
   317   000FFE                     TOSH            equ	4094	;# 
   318   000FFF                     TOSU            equ	4095	;# 
   319                           
   320                           	psect	idataBANK3
   321   006DCE                     __pidataBANK3:
   322                           	callstack 0
   323                           
   324                           ;initializer for _MQ2_Ro
   325   006DCE  0000               	dw	0
   326   006DD0  4120               	dw	16672
   327                           
   328                           ;initializer for _temp_samples
   329   006DD2  0000               	dw	0
   330   006DD4  41C8               	dw	16840
   331   006DD6  0000               	dw	0
   332   006DD8  41C8               	dw	16840
   333   006DDA  0000               	dw	0
   334   006DDC  41C8               	dw	16840
   335   006DDE  0000               	dw	0
   336   006DE0  41C8               	dw	16840
   337   006DE2  0000               	dw	0
   338   006DE4  41C8               	dw	16840
   339                           
   340                           	psect	mediumconst
   341   007E5C                     __pmediumconst:
   342                           	callstack 0
   343   007E5C  00                 	db	0
   344   007E5D                     _dp_l:
   345                           	callstack 0
   346   007E5D  0000               	dw	0
   347   007E5F  0000               	dw	0
   348   007E61  CFDC               	dw	53212
   349   007E63  35D1               	dw	13777
   350   007E65                     __end_of_dp_l:
   351                           	callstack 0
   352   007E65                     _dp_h:
   353                           	callstack 0
   354   007E65  0000               	dw	0
   355   007E67  0000               	dw	0
   356   007E69  C000               	dw	49152
   357   007E6B  3F15               	dw	16149
   358   007E6D                     __end_of_dp_h:
   359                           	callstack 0
   360   007E6D                     _bp:
   361                           	callstack 0
   362   007E6D  0000               	dw	0
   363   007E6F  3F80               	dw	16256
   364   007E71  0000               	dw	0
   365   007E73  3FC0               	dw	16320
   366   007E75                     __end_of_bp:
   367                           	callstack 0
   368   007E75  A570               	dw	42352
   369   007E77  36EC               	dw	14060
   370   007E79                     __end_of_ivln2_l:
   371                           	callstack 0
   372   007E79  AA3B               	dw	43579
   373   007E7B  3FB8               	dw	16312
   374   007E7D                     __end_of_ivln2:
   375                           	callstack 0
   376   007E7D  384F               	dw	14415
   377   007E7F  3F76               	dw	16246
   378   007E81                     __end_of_cp:
   379                           	callstack 0
   380   007E81  AA3C               	dw	43580
   381   007E83  3338               	dw	13112
   382   007E85                     __end_of_ovt:
   383                           	callstack 0
   384   007E85  BE8C               	dw	48780
   385   007E87  35BF               	dw	13759
   386   007E89                     __end_of_lg2_l:
   387                           	callstack 0
   388   007E89  7200               	dw	29184
   389   007E8B  3F31               	dw	16177
   390   007E8D                     __end_of_lg2_h:
   391                           	callstack 0
   392   007E8D  7218               	dw	29208
   393   007E8F  3F31               	dw	16177
   394   007E91                     __end_of_lg2:
   395                           	callstack 0
   396   007E91  BB4C               	dw	47948
   397   007E93  3331               	dw	13105
   398   007E95                     __end_of_P5:
   399                           	callstack 0
   400   007E95  EA0E               	dw	59918
   401   007E97  B5DD               	dw	46557
   402   007E99                     __end_of_P4:
   403                           	callstack 0
   404   007E99  B355               	dw	45909
   405   007E9B  388A               	dw	14474
   406   007E9D                     __end_of_P3:
   407                           	callstack 0
   408   007E9D  0B61               	dw	2913
   409   007E9F  BB36               	dw	47926
   410   007EA1                     __end_of_P2:
   411                           	callstack 0
   412   007EA1  AAAB               	dw	43691
   413   007EA3  3E2A               	dw	15914
   414   007EA5                     __end_of_P1:
   415                           	callstack 0
   416   007EA5  F142               	dw	61762
   417   007EA7  3E53               	dw	15955
   418   007EA9                     __end_of_L6:
   419                           	callstack 0
   420   007EA9  3255               	dw	12885
   421   007EAB  3E6C               	dw	15980
   422   007EAD                     __end_of_L5:
   423                           	callstack 0
   424   007EAD  A305               	dw	41733
   425   007EAF  3E8B               	dw	16011
   426   007EB1                     __end_of_L4:
   427                           	callstack 0
   428   007EB1  AAAB               	dw	43691
   429   007EB3  3EAA               	dw	16042
   430   007EB5                     __end_of_L3:
   431                           	callstack 0
   432   007EB5  6DB7               	dw	28087
   433   007EB7  3EDB               	dw	16091
   434   007EB9                     __end_of_L2:
   435                           	callstack 0
   436   007EB9  999A               	dw	39322
   437   007EBB  3F19               	dw	16153
   438   007EBD                     __end_of_L1:
   439                           	callstack 0
   440   007EBD  0000               	dw	0
   441   007EBF  4B80               	dw	19328
   442   007EC1                     __end_of_two24:
   443                           	callstack 0
   444   007EC1  2710               	dw	10000
   445   007EC3  0000               	dw	0
   446   007EC5                     __end_of_TEST_DURATION:
   447                           	callstack 0
   448   007EC5  AA00               	dw	43520
   449   007EC7  3FB8               	dw	16312
   450   007EC9                     __end_of_ivln2_h:
   451                           	callstack 0
   452   007EC9  23C6               	dw	9158
   453   007ECB  B8F6               	dw	47350
   454   007ECD                     __end_of_cp_l:
   455                           	callstack 0
   456   007ECD  4000               	dw	16384
   457   007ECF  3F76               	dw	16246
   458   007ED1                     __end_of_cp_h:
   459                           	callstack 0
   460   007CA7                     _TRISC7         set	31911
   461   007CA6                     _TRISC6         set	31910
   462   007C92                     _TRISA2         set	31890
   463   007C91                     _TRISA1         set	31889
   464   007C90                     _TRISA0         set	31888
   465   000FAB                     _RCSTAbits      set	4011
   466   000FAF                     _SPBRG          set	4015
   467   000FF2                     _INTCONbits     set	4082
   468   000FD0                     _RCONbits       set	4048
   469   000FF1                     _INTCON2bits    set	4081
   470   000F93                     _TRISBbits      set	3987
   471   000FC3                     _ADRESL         set	4035
   472   000FC4                     _ADRESH         set	4036
   473   000FC0                     _ADCON2         set	4032
   474   000FC1                     _ADCON1         set	4033
   475   000FC2                     _ADCON0bits     set	4034
   476   000FAD                     _TXREG          set	4013
   477   000FAC                     _TXSTAbits      set	4012
   478   000FAE                     _RCREG          set	4014
   479   000F9E                     _PIR1bits       set	3998
   480   000F81                     _PORTBbits      set	3969
   481   000F81                     _PORTB          set	3969
   482   000F93                     _TRISB          set	3987
   483   000FD3                     _OSCCON         set	4051
   484   000FF0                     _INTCON3bits    set	4080
   485   007ED1                     STR_17:
   486   007ED1  7B                 	db	123
   487   007ED2  22                 	db	34
   488   007ED3  74                 	db	116	;'t'
   489   007ED4  22                 	db	34
   490   007ED5  3A                 	db	58	;':'
   491   007ED6  25                 	db	37
   492   007ED7  2E                 	db	46
   493   007ED8  31                 	db	49	;'1'
   494   007ED9  66                 	db	102	;'f'
   495   007EDA  2C                 	db	44
   496   007EDB  22                 	db	34
   497   007EDC  66                 	db	102	;'f'
   498   007EDD  64                 	db	100	;'d'
   499   007EDE  22                 	db	34
   500   007EDF  3A                 	db	58	;':'
   501   007EE0  25                 	db	37
   502   007EE1  64                 	db	100	;'d'
   503   007EE2  2C                 	db	44
   504   007EE3  22                 	db	34
   505   007EE4  66                 	db	102	;'f'
   506   007EE5  69                 	db	105	;'i'
   507   007EE6  22                 	db	34
   508   007EE7  3A                 	db	58	;':'
   509   007EE8  25                 	db	37
   510   007EE9  2E                 	db	46
   511   007EEA  31                 	db	49	;'1'
   512   007EEB  66                 	db	102	;'f'
   513   007EEC  2C                 	db	44
   514   007EED  22                 	db	34
   515   007EEE  63                 	db	99	;'c'
   516   007EEF  6F                 	db	111	;'o'
   517   007EF0  22                 	db	34
   518   007EF1  3A                 	db	58	;':'
   519   007EF2  25                 	db	37
   520   007EF3  2E                 	db	46
   521   007EF4  31                 	db	49	;'1'
   522   007EF5  66                 	db	102	;'f'
   523   007EF6  2C                 	db	44
   524   007EF7  22                 	db	34
   525   007EF8  66                 	db	102	;'f'
   526   007EF9  72                 	db	114	;'r'
   527   007EFA  22                 	db	34
   528   007EFB  3A                 	db	58	;':'
   529   007EFC  25                 	db	37
   530   007EFD  2E                 	db	46
   531   007EFE  32                 	db	50	;'2'
   532   007EFF  66                 	db	102	;'f'
   533   007F00  2C                 	db	44
   534   007F01  22                 	db	34
   535   007F02  74                 	db	116	;'t'
   536   007F03  66                 	db	102	;'f'
   537   007F04  22                 	db	34
   538   007F05  3A                 	db	58	;':'
   539   007F06  25                 	db	37
   540   007F07  2E                 	db	46
   541   007F08  32                 	db	50	;'2'
   542   007F09  66                 	db	102	;'f'
   543   007F0A  2C                 	db	44
   544   007F0B  22                 	db	34
   545   007F0C  70                 	db	112	;'p'
   546   007F0D  22                 	db	34
   547   007F0E  3A                 	db	58	;':'
   548   007F0F  25                 	db	37
   549   007F10  64                 	db	100	;'d'
   550   007F11  2C                 	db	44
   551   007F12  22                 	db	34
   552   007F13  61                 	db	97	;'a'
   553   007F14  22                 	db	34
   554   007F15  3A                 	db	58	;':'
   555   007F16  25                 	db	37
   556   007F17  64                 	db	100	;'d'
   557   007F18  2C                 	db	44
   558   007F19  22                 	db	34
   559   007F1A  66                 	db	102	;'f'
   560   007F1B  61                 	db	97	;'a'
   561   007F1C  22                 	db	34
   562   007F1D  3A                 	db	58	;':'
   563   007F1E  25                 	db	37
   564   007F1F  64                 	db	100	;'d'
   565   007F20  2C                 	db	44
   566   007F21  22                 	db	34
   567   007F22  63                 	db	99	;'c'
   568   007F23  6D                 	db	109	;'m'
   569   007F24  64                 	db	100	;'d'
   570   007F25  22                 	db	34
   571   007F26  3A                 	db	58	;':'
   572   007F27  7B                 	db	123
   573   007F28  22                 	db	34
   574   007F29  74                 	db	116	;'t'
   575   007F2A  65                 	db	101	;'e'
   576   007F2B  73                 	db	115	;'s'
   577   007F2C  74                 	db	116	;'t'
   578   007F2D  22                 	db	34
   579   007F2E  3A                 	db	58	;':'
   580   007F2F  25                 	db	37
   581   007F30  64                 	db	100	;'d'
   582   007F31  2C                 	db	44
   583   007F32  22                 	db	34
   584   007F33  73                 	db	115	;'s'
   585   007F34  68                 	db	104	;'h'
   586   007F35  75                 	db	117	;'u'
   587   007F36  74                 	db	116	;'t'
   588   007F37  64                 	db	100	;'d'
   589   007F38  6F                 	db	111	;'o'
   590   007F39  77                 	db	119	;'w'
   591   007F3A  6E                 	db	110	;'n'
   592   007F3B  22                 	db	34
   593   007F3C  3A                 	db	58	;':'
   594   007F3D  25                 	db	37
   595   007F3E  64                 	db	100	;'d'
   596   007F3F  7D                 	db	125
   597   007F40  7D                 	db	125
   598   007F41  0D                 	db	13
   599   007F42  0A                 	db	10
   600   007F43  00                 	db	0
   601   007F44                     STR_16:
   602   007F44  7B                 	db	123
   603   007F45  22                 	db	34
   604   007F46  65                 	db	101	;'e'
   605   007F47  76                 	db	118	;'v'
   606   007F48  65                 	db	101	;'e'
   607   007F49  6E                 	db	110	;'n'
   608   007F4A  74                 	db	116	;'t'
   609   007F4B  22                 	db	34
   610   007F4C  3A                 	db	58	;':'
   611   007F4D  22                 	db	34
   612   007F4E  25                 	db	37
   613   007F4F  73                 	db	115	;'s'
   614   007F50  22                 	db	34
   615   007F51  2C                 	db	44
   616   007F52  22                 	db	34
   617   007F53  74                 	db	116	;'t'
   618   007F54  69                 	db	105	;'i'
   619   007F55  6D                 	db	109	;'m'
   620   007F56  65                 	db	101	;'e'
   621   007F57  22                 	db	34
   622   007F58  3A                 	db	58	;':'
   623   007F59  25                 	db	37
   624   007F5A  6C                 	db	108	;'l'
   625   007F5B  75                 	db	117	;'u'
   626   007F5C  25                 	db	37
   627   007F5D  73                 	db	115	;'s'
   628   007F5E  7D                 	db	125
   629   007F5F  0D                 	db	13
   630   007F60  0A                 	db	10
   631   007F61  00                 	db	0
   632   007F62                     STR_6:
   633   007F62  2C                 	db	44
   634   007F63  22                 	db	34
   635   007F64  64                 	db	100	;'d'
   636   007F65  75                 	db	117	;'u'
   637   007F66  72                 	db	114	;'r'
   638   007F67  61                 	db	97	;'a'
   639   007F68  74                 	db	116	;'t'
   640   007F69  69                 	db	105	;'i'
   641   007F6A  6F                 	db	111	;'o'
   642   007F6B  6E                 	db	110	;'n'
   643   007F6C  22                 	db	34
   644   007F6D  3A                 	db	58	;':'
   645   007F6E  25                 	db	37
   646   007F6F  6C                 	db	108	;'l'
   647   007F70  75                 	db	117	;'u'
   648   007F71  2C                 	db	44
   649   007F72  22                 	db	34
   650   007F73  77                 	db	119	;'w'
   651   007F74  61                 	db	97	;'a'
   652   007F75  74                 	db	116	;'t'
   653   007F76  65                 	db	101	;'e'
   654   007F77  72                 	db	114	;'r'
   655   007F78  22                 	db	34
   656   007F79  3A                 	db	58	;':'
   657   007F7A  25                 	db	37
   658   007F7B  2E                 	db	46
   659   007F7C  32                 	db	50	;'2'
   660   007F7D  66                 	db	102	;'f'
   661   007F7E  00                 	db	0
   662   007F7F                     STR_2:
   663   007F7F  74                 	db	116	;'t'
   664   007F80  65                 	db	101	;'e'
   665   007F81  6D                 	db	109	;'m'
   666   007F82  70                 	db	112	;'p'
   667   007F83  65                 	db	101	;'e'
   668   007F84  72                 	db	114	;'r'
   669   007F85  61                 	db	97	;'a'
   670   007F86  74                 	db	116	;'t'
   671   007F87  75                 	db	117	;'u'
   672   007F88  72                 	db	114	;'r'
   673   007F89  65                 	db	101	;'e'
   674   007F8A  5F                 	db	95	;'_'
   675   007F8B  73                 	db	115	;'s'
   676   007F8C  65                 	db	101	;'e'
   677   007F8D  6E                 	db	110	;'n'
   678   007F8E  73                 	db	115	;'s'
   679   007F8F  6F                 	db	111	;'o'
   680   007F90  72                 	db	114	;'r'
   681   007F91  00                 	db	0
   682   007F92                     STR_4:
   683   007F92  2C                 	db	44
   684   007F93  22                 	db	34
   685   007F94  73                 	db	115	;'s'
   686   007F95  65                 	db	101	;'e'
   687   007F96  6E                 	db	110	;'n'
   688   007F97  73                 	db	115	;'s'
   689   007F98  6F                 	db	111	;'o'
   690   007F99  72                 	db	114	;'r'
   691   007F9A  22                 	db	34
   692   007F9B  3A                 	db	58	;':'
   693   007F9C  22                 	db	34
   694   007F9D  25                 	db	37
   695   007F9E  73                 	db	115	;'s'
   696   007F9F  22                 	db	34
   697   007FA0  00                 	db	0
   698   007FA1                     STR_1:
   699   007FA1  66                 	db	102	;'f'
   700   007FA2  6C                 	db	108	;'l'
   701   007FA3  61                 	db	97	;'a'
   702   007FA4  6D                 	db	109	;'m'
   703   007FA5  65                 	db	101	;'e'
   704   007FA6  5F                 	db	95	;'_'
   705   007FA7  73                 	db	115	;'s'
   706   007FA8  65                 	db	101	;'e'
   707   007FA9  6E                 	db	110	;'n'
   708   007FAA  73                 	db	115	;'s'
   709   007FAB  6F                 	db	111	;'o'
   710   007FAC  72                 	db	114	;'r'
   711   007FAD  00                 	db	0
   712   007FAE                     STR_5:
   713   007FAE  66                 	db	102	;'f'
   714   007FAF  69                 	db	105	;'i'
   715   007FB0  72                 	db	114	;'r'
   716   007FB1  65                 	db	101	;'e'
   717   007FB2  5F                 	db	95	;'_'
   718   007FB3  73                 	db	115	;'s'
   719   007FB4  74                 	db	116	;'t'
   720   007FB5  61                 	db	97	;'a'
   721   007FB6  72                 	db	114	;'r'
   722   007FB7  74                 	db	116	;'t'
   723   007FB8  00                 	db	0
   724   007FB9                     STR_8:
   725   007FB9  74                 	db	116	;'t'
   726   007FBA  65                 	db	101	;'e'
   727   007FBB  73                 	db	115	;'s'
   728   007FBC  74                 	db	116	;'t'
   729   007FBD  5F                 	db	95	;'_'
   730   007FBE  73                 	db	115	;'s'
   731   007FBF  74                 	db	116	;'t'
   732   007FC0  61                 	db	97	;'a'
   733   007FC1  72                 	db	114	;'r'
   734   007FC2  74                 	db	116	;'t'
   735   007FC3  00                 	db	0
   736   007FC4                     STR_3:
   737   007FC4  63                 	db	99	;'c'
   738   007FC5  6F                 	db	111	;'o'
   739   007FC6  5F                 	db	95	;'_'
   740   007FC7  73                 	db	115	;'s'
   741   007FC8  65                 	db	101	;'e'
   742   007FC9  6E                 	db	110	;'n'
   743   007FCA  73                 	db	115	;'s'
   744   007FCB  6F                 	db	111	;'o'
   745   007FCC  72                 	db	114	;'r'
   746   007FCD  00                 	db	0
   747   007FCE                     STR_7:
   748   007FCE  66                 	db	102	;'f'
   749   007FCF  69                 	db	105	;'i'
   750   007FD0  72                 	db	114	;'r'
   751   007FD1  65                 	db	101	;'e'
   752   007FD2  5F                 	db	95	;'_'
   753   007FD3  65                 	db	101	;'e'
   754   007FD4  6E                 	db	110	;'n'
   755   007FD5  64                 	db	100	;'d'
   756   007FD6  00                 	db	0
   757   007FD7                     STR_11:
   758   007FD7  74                 	db	116	;'t'
   759   007FD8  65                 	db	101	;'e'
   760   007FD9  73                 	db	115	;'s'
   761   007FDA  74                 	db	116	;'t'
   762   007FDB  5F                 	db	95	;'_'
   763   007FDC  65                 	db	101	;'e'
   764   007FDD  6E                 	db	110	;'n'
   765   007FDE  64                 	db	100	;'d'
   766   007FDF  00                 	db	0
   767   007FE0                     STR_12:
   768   007FE0  73                 	db	115	;'s'
   769   007FE1  68                 	db	104	;'h'
   770   007FE2  75                 	db	117	;'u'
   771   007FE3  74                 	db	116	;'t'
   772   007FE4  64                 	db	100	;'d'
   773   007FE5  6F                 	db	111	;'o'
   774   007FE6  77                 	db	119	;'w'
   775   007FE7  6E                 	db	110	;'n'
   776   007FE8  00                 	db	0
   777   007FE9                     STR_24:
   778   007FE9  28                 	db	40
   779   007FEA  6E                 	db	110	;'n'
   780   007FEB  75                 	db	117	;'u'
   781   007FEC  6C                 	db	108	;'l'
   782   007FED  6C                 	db	108	;'l'
   783   007FEE  29                 	db	41
   784   007FEF  00                 	db	0
   785   007FF0                     STR_14:
   786   007FF0  72                 	db	114	;'r'
   787   007FF1  65                 	db	101	;'e'
   788   007FF2  73                 	db	115	;'s'
   789   007FF3  75                 	db	117	;'u'
   790   007FF4  6D                 	db	109	;'m'
   791   007FF5  65                 	db	101	;'e'
   792   007FF6  00                 	db	0
   793   007FF7                     STR_18:
   794   007FF7  69                 	db	105	;'i'
   795   007FF8  6E                 	db	110	;'n'
   796   007FF9  66                 	db	102	;'f'
   797   007FFA  00                 	db	0
   798   007FFB                     STR_21:
   799   007FFB  6E                 	db	110	;'n'
   800   007FFC  61                 	db	97	;'a'
   801   007FFD  6E                 	db	110	;'n'
   802   007FFE  00                 	db	0
   803   007FFB                     STR_22          equ	STR_21
   804   007FFB                     STR_23          equ	STR_21
   805   007FF7                     STR_19          equ	STR_18
   806   007FF7                     STR_20          equ	STR_18
   807   007F71                     STR_10          equ	STR_6+15
   808   007F61                     STR_9           equ	STR_16+29
   809   007F61                     STR_13          equ	STR_16+29
   810   007F61                     STR_15          equ	STR_16+29
   811   007FFF  00                 	db	0	; dummy byte at the end
   812   007E5C                     __smallconst    set	__pmediumconst
   813   007E5C                     __mediumconst   set	__pmediumconst
   814   000002                     __activetblptr  equ	2
   815                           
   816                           ; #config settings
   817                           
   818                           	psect	cinit
   819   006B70                     __pcinit:
   820                           	callstack 0
   821   006B70                     start_initialization:
   822                           	callstack 0
   823   006B70                     __initialization:
   824                           	callstack 0
   825                           
   826                           ; Initialize objects allocated to BANK3 (24 bytes)
   827                           ; load TBLPTR registers with __pidataBANK3
   828   006B70  0ECE               	movlw	low __pidataBANK3
   829   006B72  6EF6               	movwf	tblptrl,c
   830   006B74  0E6D               	movlw	high __pidataBANK3
   831   006B76  6EF7               	movwf	tblptrh,c
   832   006B78  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   833   006B7A  6EF8               	movwf	tblptru,c
   834   006B7C  EE03  F0D2         	lfsr	0,__pdataBANK3
   835   006B80  EE10 F018          	lfsr	1,24
   836   006B84                     copy_data0:
   837   006B84  0009               	tblrd		*+
   838   006B86  CFF5 FFEE          	movff	tablat,postinc0
   839   006B8A  50E5               	movf	postdec1,w,c
   840   006B8C  50E1               	movf	fsr1l,w,c
   841   006B8E  E1FA               	bnz	copy_data0
   842                           
   843                           ; Clear objects allocated to BANK3 (210 bytes)
   844   006B90  EE03  F000         	lfsr	0,__pbssBANK3
   845   006B94  0ED2               	movlw	210
   846   006B96                     clear_0:
   847   006B96  6AEE               	clrf	postinc0,c
   848   006B98  06E8               	decf	wreg,f,c
   849   006B9A  E1FD               	bnz	clear_0
   850                           
   851                           ; Clear objects allocated to BANK2 (6 bytes)
   852   006B9C  0102               	movlb	2
   853   006B9E  6BFF               	clrf	(__pbssBANK2+5)& (0+255),b
   854   006BA0  6BFE               	clrf	(__pbssBANK2+4)& (0+255),b
   855   006BA2  6BFD               	clrf	(__pbssBANK2+3)& (0+255),b
   856   006BA4  6BFC               	clrf	(__pbssBANK2+2)& (0+255),b
   857   006BA6  6BFB               	clrf	(__pbssBANK2+1)& (0+255),b
   858   006BA8  6BFA               	clrf	__pbssBANK2& (0+255),b
   859                           
   860                           ; Clear objects allocated to COMRAM (1 bytes)
   861   006BAA  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   862   006BAC                     end_of_initialization:
   863                           	callstack 0
   864   006BAC                     __end_of__initialization:
   865                           	callstack 0
   866   006BAC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   867   006BAE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   868   006BB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   869   006BB2  6EF8               	movwf	tblptru,c
   870   006BB4  0100               	movlb	0
   871   006BB6  EF90  F025         	goto	_main	;jump to C main() function
   872                           
   873                           	psect	bssCOMRAM
   874   00005E                     __pbssCOMRAM:
   875                           	callstack 0
   876   00005E                     _trigger_test:
   877                           	callstack 0
   878   00005E                     	ds	1
   879                           
   880                           	psect	bssBANK2
   881   0002FA                     __pbssBANK2:
   882                           	callstack 0
   883   0002FA                     _system_millis:
   884                           	callstack 0
   885   0002FA                     	ds	4
   886   0002FE                     _prec:
   887                           	callstack 0
   888   0002FE                     	ds	2
   889                           
   890                           	psect	bssBANK3
   891   000300                     __pbssBANK3:
   892                           	callstack 0
   893   000300                     floorf@F521:
   894                           	callstack 0
   895   000300                     	ds	4
   896   000304                     ___fpclassifyf@F465:
   897                           	callstack 0
   898   000304                     	ds	4
   899   000308                     Update_Actuators@last_blink:
   900                           	callstack 0
   901   000308                     	ds	4
   902   00030C                     Read_Sensors@last_flow_time:
   903                           	callstack 0
   904   00030C                     	ds	4
   905   000310                     Handle_Commands@last_blink:
   906                           	callstack 0
   907   000310                     	ds	4
   908   000314                     _test_start_flow:
   909                           	callstack 0
   910   000314                     	ds	4
   911   000318                     _fire_start_flow:
   912                           	callstack 0
   913   000318                     	ds	4
   914   00031C                     _fire_start_co:
   915                           	callstack 0
   916   00031C                     	ds	4
   917   000320                     _fire_start_flame:
   918                           	callstack 0
   919   000320                     	ds	4
   920   000324                     _fire_start_temp:
   921                           	callstack 0
   922   000324                     	ds	4
   923   000328                     _fire_start_time:
   924                           	callstack 0
   925   000328                     	ds	4
   926   00032C                     _test_start_time:
   927                           	callstack 0
   928   00032C                     	ds	4
   929   000330                     _total_flow:
   930                           	callstack 0
   931   000330                     	ds	4
   932   000334                     _flow_rate:
   933                           	callstack 0
   934   000334                     	ds	4
   935   000338                     _co_ppm:
   936                           	callstack 0
   937   000338                     	ds	4
   938   00033C                     _flame_base_voltage:
   939                           	callstack 0
   940   00033C                     	ds	4
   941   000340                     _flame_intensity:
   942                           	callstack 0
   943   000340                     	ds	4
   944   000344                     _temperature:
   945                           	callstack 0
   946   000344                     	ds	4
   947   000348                     _errno:
   948                           	callstack 0
   949   000348                     	ds	2
   950   00034A                     _width:
   951                           	callstack 0
   952   00034A                     	ds	2
   953   00034C                     Read_Sensors@last_pulse:
   954                           	callstack 0
   955   00034C                     	ds	2
   956   00034E                     _pulse_count:
   957                           	callstack 0
   958   00034E                     	ds	2
   959   000350                     _flags:
   960                           	callstack 0
   961   000350                     	ds	1
   962   000351                     Handle_Shutdown_Events@prev_shutdown:
   963                           	callstack 0
   964   000351                     	ds	1
   965   000352                     Handle_Test_Events@prev_test:
   966                           	callstack 0
   967   000352                     	ds	1
   968   000353                     _shutdown_system:
   969                           	callstack 0
   970   000353                     	ds	1
   971   000354                     _sample_index:
   972                           	callstack 0
   973   000354                     	ds	1
   974   000355                     _prev_fire_alarm:
   975                           	callstack 0
   976   000355                     	ds	1
   977   000356                     _fire_alarm:
   978                           	callstack 0
   979   000356                     	ds	1
   980   000357                     _alarm_active:
   981                           	callstack 0
   982   000357                     	ds	1
   983   000358                     _pump_active:
   984                           	callstack 0
   985   000358                     	ds	1
   986   000359                     _flame_detected:
   987                           	callstack 0
   988   000359                     	ds	1
   989   00035A                     _dbuf:
   990                           	callstack 0
   991   00035A                     	ds	80
   992   0003AA                     _fire_trigger_sensor:
   993                           	callstack 0
   994   0003AA                     	ds	20
   995   0003BE                     _co_samples:
   996                           	callstack 0
   997   0003BE                     	ds	20
   998                           
   999                           	psect	dataBANK3
  1000   0003D2                     __pdataBANK3:
  1001                           	callstack 0
  1002   0003D2                     _MQ2_Ro:
  1003                           	callstack 0
  1004   0003D2                     	ds	4
  1005   0003D6                     _temp_samples:
  1006                           	callstack 0
  1007   0003D6                     	ds	20
  1008                           
  1009                           	psect	cstackBANK3
  1010   0003EA                     __pcstackBANK3:
  1011                           	callstack 0
  1012   0003EA                     _main$1833:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x0
  1016   0003EA                     	ds	4
  1017   0003EE                     main@adc_value:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x4
  1021   0003EE                     	ds	2
  1022   0003F0                     main@adc_value_677:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x6
  1026   0003F0                     	ds	2
  1027   0003F2                     main@cycle_count:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x8
  1031   0003F2                     	ds	2
  1032   0003F4                     main@voltage:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0xA
  1036   0003F4                     	ds	4
  1037   0003F8                     main@i:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0xE
  1041   0003F8                     	ds	2
  1042   0003FA                     main@i_676:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x10
  1046   0003FA                     	ds	2
  1047                           
  1048                           	psect	cstackBANK2
  1049   000200                     __pcstackBANK2:
  1050                           	callstack 0
  1051   000200                     Handle_Fire_Events@end_data:
  1052                           	callstack 0
  1053                           
  1054                           ; 150 bytes @ 0x0
  1055   000200                     	ds	150
  1056   000296                     Handle_Fire_Events@start_data:
  1057                           	callstack 0
  1058                           
  1059                           ; 100 bytes @ 0x96
  1060   000296                     	ds	100
  1061                           
  1062                           	psect	cstackBANK1
  1063   000100                     __pcstackBANK1:
  1064                           	callstack 0
  1065   000100                     _powf$1842:
  1066                           	callstack 0
  1067   000100                     Send_History_Event@buffer:
  1068                           	callstack 0
  1069   000100                     Send_Data@buffer:
  1070                           	callstack 0
  1071                           
  1072                           ; 200 bytes @ 0x0
  1073   000100                     	ds	4
  1074   000104                     _powf$1843:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x4
  1078   000104                     	ds	4
  1079   000108                     _powf$1847:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x8
  1083   000108                     	ds	4
  1084   00010C                     _powf$1848:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0xC
  1088   00010C                     	ds	4
  1089   000110                     _powf$1849:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x10
  1093   000110                     	ds	4
  1094   000114                     _powf$1850:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x14
  1098   000114                     	ds	4
  1099   000118                     _powf$1851:
  1100                           	callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x18
  1103   000118                     	ds	4
  1104   00011C                     powf@t2:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x1C
  1108   00011C                     	ds	4
  1109   000120                     powf@z_h:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x20
  1113   000120                     	ds	4
  1114   000124                     powf@z_l:
  1115                           	callstack 0
  1116                           
  1117                           ; 4 bytes @ 0x24
  1118   000124                     	ds	4
  1119   000128                     powf@i:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x28
  1123   000128                     	ds	4
  1124   00012C                     powf@y1:
  1125                           	callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x2C
  1128   00012C                     	ds	4
  1129   000130                     powf@s_l:
  1130                           	callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x30
  1133   000130                     	ds	4
  1134   000134                     powf@t_l:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x34
  1138   000134                     	ds	4
  1139   000138                     _powf$1841:
  1140                           	callstack 0
  1141                           
  1142                           ; 4 bytes @ 0x38
  1143   000138                     	ds	4
  1144   00013C                     _powf$1845:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x3C
  1148   00013C                     	ds	4
  1149   000140                     _powf$1846:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x40
  1153   000140                     	ds	4
  1154   000144                     powf@w:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x44
  1158   000144                     	ds	4
  1159   000148                     _powf$1837:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x48
  1163   000148                     	ds	4
  1164   00014C                     _powf$1839:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x4C
  1168   00014C                     	ds	4
  1169   000150                     powf@r:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x50
  1173   000150                     	ds	4
  1174   000154                     powf@yisint:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x54
  1178   000154                     	ds	4
  1179   000158                     _powf$1838:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x58
  1183   000158                     	ds	4
  1184   00015C                     _powf$1844:
  1185                           	callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x5C
  1188   00015C                     	ds	4
  1189   000160                     powf@s:
  1190                           	callstack 0
  1191                           
  1192                           ; 4 bytes @ 0x60
  1193   000160                     	ds	4
  1194   000164                     powf@sn:
  1195                           	callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x64
  1198   000164                     	ds	4
  1199   000168                     powf@hx:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x68
  1203   000168                     	ds	4
  1204   00016C                     powf@p_l:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x6C
  1208   00016C                     	ds	4
  1209   000170                     powf@t_h:
  1210                           	callstack 0
  1211                           
  1212                           ; 4 bytes @ 0x70
  1213   000170                     	ds	4
  1214   000174                     powf@s_h:
  1215                           	callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x74
  1218   000174                     	ds	4
  1219   000178                     powf@ax:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x78
  1223   000178                     	ds	4
  1224   00017C                     powf@u:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x7C
  1228   00017C                     	ds	4
  1229   000180                     powf@v:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x80
  1233   000180                     	ds	4
  1234   000184                     powf@hy:
  1235                           	callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x84
  1238   000184                     	ds	4
  1239   000188                     powf@n:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x88
  1243   000188                     	ds	4
  1244   00018C                     powf@t1:
  1245                           	callstack 0
  1246                           
  1247                           ; 4 bytes @ 0x8C
  1248   00018C                     	ds	4
  1249   000190                     powf@s2:
  1250                           	callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x90
  1253   000190                     	ds	4
  1254   000194                     powf@iy:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x94
  1258   000194                     	ds	4
  1259   000198                     powf@is:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x98
  1263   000198                     	ds	4
  1264   00019C                     _powf$1840:
  1265                           	callstack 0
  1266                           
  1267                           ; 4 bytes @ 0x9C
  1268   00019C                     	ds	4
  1269   0001A0                     powf@p_h:
  1270                           	callstack 0
  1271                           
  1272                           ; 4 bytes @ 0xA0
  1273   0001A0                     	ds	4
  1274   0001A4                     powf@k:
  1275                           	callstack 0
  1276                           
  1277                           ; 4 bytes @ 0xA4
  1278   0001A4                     	ds	4
  1279   0001A8                     powf@j:
  1280                           	callstack 0
  1281                           
  1282                           ; 4 bytes @ 0xA8
  1283   0001A8                     	ds	4
  1284   0001AC                     powf@ix:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0xAC
  1288   0001AC                     	ds	4
  1289   0001B0                     powf@t:
  1290                           	callstack 0
  1291                           
  1292                           ; 4 bytes @ 0xB0
  1293   0001B0                     	ds	4
  1294   0001B4                     powf@z:
  1295                           	callstack 0
  1296                           
  1297                           ; 4 bytes @ 0xB4
  1298   0001B4                     	ds	20
  1299   0001C8                     Send_History_Event@i:
  1300                           	callstack 0
  1301   0001C8                     Send_Data@i:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0xC8
  1305   0001C8                     	ds	2
  1306   0001CA                     Handle_Test_Events@test_data:
  1307                           	callstack 0
  1308                           
  1309                           ; 50 bytes @ 0xCA
  1310   0001CA                     	ds	50
  1311   0001FC                     Handle_Test_Events@water_used:
  1312                           	callstack 0
  1313                           
  1314                           ; 4 bytes @ 0xFC
  1315   0001FC                     	ds	4
  1316                           
  1317                           	psect	cstackBANK0
  1318   000060                     __pcstackBANK0:
  1319                           	callstack 0
  1320   000060                     Apply_Filter@sum:
  1321                           	callstack 0
  1322   000060                     ___flge@ff1:
  1323                           	callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x0
  1326   000060                     	ds	4
  1327   000064                     Apply_Filter@i:
  1328                           	callstack 0
  1329   000064                     ___flge@ff2:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x4
  1333   000064                     	ds	4
  1334   000068                     ?_powf:
  1335                           	callstack 0
  1336   000068                     efgtoa@fp:
  1337                           	callstack 0
  1338   000068                     powf@x:
  1339                           	callstack 0
  1340   000068                     ??_Update_Actuators:
  1341                           
  1342                           ; 1 bytes @ 0x8
  1343   000068                     	ds	1
  1344   000069                     efgtoa@f:
  1345                           	callstack 0
  1346                           
  1347                           ; 4 bytes @ 0x9
  1348   000069                     	ds	3
  1349   00006C                     powf@y:
  1350                           	callstack 0
  1351                           
  1352                           ; 4 bytes @ 0xC
  1353   00006C                     	ds	1
  1354   00006D                     efgtoa@c:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0xD
  1358   00006D                     	ds	1
  1359   00006E                     ??_efgtoa:
  1360                           
  1361                           ; 1 bytes @ 0xE
  1362   00006E                     	ds	2
  1363   000070                     efgtoa@ne:
  1364                           	callstack 0
  1365   000070                     ??_powf:
  1366                           
  1367                           ; 1 bytes @ 0x10
  1368   000070                     	ds	2
  1369   000072                     efgtoa@p:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x12
  1373   000072                     	ds	2
  1374   000074                     efgtoa@t:
  1375                           	callstack 0
  1376                           
  1377                           ; 2 bytes @ 0x14
  1378   000074                     	ds	2
  1379   000076                     _efgtoa$1375:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x16
  1383   000076                     	ds	2
  1384   000078                     efgtoa@pp:
  1385                           	callstack 0
  1386                           
  1387                           ; 1 bytes @ 0x18
  1388   000078                     	ds	1
  1389   000079                     efgtoa@mode:
  1390                           	callstack 0
  1391   000079                     ??_Read_Sensors:
  1392                           
  1393                           ; 1 bytes @ 0x19
  1394   000079                     	ds	1
  1395   00007A                     efgtoa@nmode:
  1396                           	callstack 0
  1397                           
  1398                           ; 1 bytes @ 0x1A
  1399   00007A                     	ds	1
  1400   00007B                     efgtoa@d:
  1401                           	callstack 0
  1402                           
  1403                           ; 2 bytes @ 0x1B
  1404   00007B                     	ds	2
  1405   00007D                     efgtoa@m:
  1406                           	callstack 0
  1407   00007D                     Read_Sensors@raw_temp:
  1408                           	callstack 0
  1409                           
  1410                           ; 4 bytes @ 0x1D
  1411   00007D                     	ds	2
  1412   00007F                     efgtoa@e:
  1413                           	callstack 0
  1414                           
  1415                           ; 2 bytes @ 0x1F
  1416   00007F                     	ds	2
  1417   000081                     efgtoa@w:
  1418                           	callstack 0
  1419   000081                     Read_Sensors@flame_voltage:
  1420                           	callstack 0
  1421                           
  1422                           ; 4 bytes @ 0x21
  1423   000081                     	ds	2
  1424   000083                     efgtoa@ou:
  1425                           	callstack 0
  1426                           
  1427                           ; 4 bytes @ 0x23
  1428   000083                     	ds	2
  1429   000085                     Read_Sensors@temp_factor:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0x25
  1433   000085                     	ds	2
  1434   000087                     efgtoa@i:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x27
  1438   000087                     	ds	2
  1439   000089                     efgtoa@h:
  1440                           	callstack 0
  1441   000089                     _Read_Sensors$1834:
  1442                           	callstack 0
  1443                           
  1444                           ; 4 bytes @ 0x29
  1445   000089                     	ds	4
  1446   00008D                     efgtoa@l:
  1447                           	callstack 0
  1448   00008D                     _Read_Sensors$1835:
  1449                           	callstack 0
  1450                           
  1451                           ; 4 bytes @ 0x2D
  1452   00008D                     	ds	4
  1453   000091                     efgtoa@sign:
  1454                           	callstack 0
  1455   000091                     _Read_Sensors$1836:
  1456                           	callstack 0
  1457                           
  1458                           ; 4 bytes @ 0x31
  1459   000091                     	ds	1
  1460   000092                     efgtoa@g:
  1461                           	callstack 0
  1462                           
  1463                           ; 4 bytes @ 0x32
  1464   000092                     	ds	3
  1465   000095                     Read_Sensors@temp_adc:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x35
  1469   000095                     	ds	1
  1470   000096                     efgtoa@n:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x36
  1474   000096                     	ds	1
  1475   000097                     Read_Sensors@flame_adc:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x37
  1479   000097                     	ds	1
  1480   000098                     efgtoa@u:
  1481                           	callstack 0
  1482                           
  1483                           ; 4 bytes @ 0x38
  1484   000098                     	ds	1
  1485   000099                     Read_Sensors@mq2_adc:
  1486                           	callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x39
  1489   000099                     	ds	2
  1490   00009B                     Read_Sensors@pulses:
  1491                           	callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x3B
  1494   00009B                     	ds	1
  1495   00009C                     vfpfcnvrt@fp:
  1496                           	callstack 0
  1497                           
  1498                           ; 1 bytes @ 0x3C
  1499   00009C                     	ds	1
  1500   00009D                     vfpfcnvrt@fmt:
  1501                           	callstack 0
  1502   00009D                     Read_Sensors@mq2_voltage:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x3D
  1506   00009D                     	ds	1
  1507   00009E                     vfpfcnvrt@ap:
  1508                           	callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x3E
  1511   00009E                     	ds	2
  1512   0000A0                     ??_vfpfcnvrt:
  1513                           
  1514                           ; 1 bytes @ 0x40
  1515   0000A0                     	ds	1
  1516   0000A1                     Read_Sensors@rs_ro_ratio:
  1517                           	callstack 0
  1518                           
  1519                           ; 4 bytes @ 0x41
  1520   0000A1                     	ds	1
  1521   0000A2                     vfpfcnvrt@done:
  1522                           	callstack 0
  1523                           
  1524                           ; 1 bytes @ 0x42
  1525   0000A2                     	ds	1
  1526   0000A3                     vfpfcnvrt@convarg:
  1527                           	callstack 0
  1528                           
  1529                           ; 4 bytes @ 0x43
  1530   0000A3                     	ds	2
  1531   0000A5                     Read_Sensors@Rs:
  1532                           	callstack 0
  1533                           
  1534                           ; 4 bytes @ 0x45
  1535   0000A5                     	ds	2
  1536   0000A7                     vfpfcnvrt@c:
  1537                           	callstack 0
  1538                           
  1539                           ; 1 bytes @ 0x47
  1540   0000A7                     	ds	1
  1541   0000A8                     vfpfcnvrt@cp:
  1542                           	callstack 0
  1543                           
  1544                           ; 2 bytes @ 0x48
  1545   0000A8                     	ds	1
  1546   0000A9                     Read_Sensors@raw_co:
  1547                           	callstack 0
  1548                           
  1549                           ; 4 bytes @ 0x49
  1550   0000A9                     	ds	1
  1551   0000AA                     ?_vfprintf:
  1552                           	callstack 0
  1553   0000AA                     vfprintf@fp:
  1554                           	callstack 0
  1555                           
  1556                           ; 1 bytes @ 0x4A
  1557   0000AA                     	ds	1
  1558   0000AB                     vfprintf@fmt:
  1559                           	callstack 0
  1560                           
  1561                           ; 2 bytes @ 0x4B
  1562   0000AB                     	ds	2
  1563   0000AD                     vfprintf@ap:
  1564                           	callstack 0
  1565                           
  1566                           ; 1 bytes @ 0x4D
  1567   0000AD                     	ds	1
  1568   0000AE                     vfprintf@cfmt:
  1569                           	callstack 0
  1570                           
  1571                           ; 2 bytes @ 0x4E
  1572   0000AE                     	ds	2
  1573   0000B0                     ?_sprintf:
  1574                           	callstack 0
  1575   0000B0                     sprintf@s:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x50
  1579   0000B0                     	ds	2
  1580   0000B2                     sprintf@fmt:
  1581                           	callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x52
  1584   0000B2                     	ds	34
  1585   0000D4                     sprintf@ap:
  1586                           	callstack 0
  1587                           
  1588                           ; 1 bytes @ 0x74
  1589   0000D4                     	ds	1
  1590   0000D5                     sprintf@f:
  1591                           	callstack 0
  1592                           
  1593                           ; 11 bytes @ 0x75
  1594   0000D5                     	ds	11
  1595   0000E0                     Send_History_Event@event_type:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x80
  1599   0000E0                     	ds	2
  1600   0000E2                     Send_History_Event@extra_data:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x82
  1604   0000E2                     	ds	2
  1605   0000E4                     ??_Handle_Fire_Events:
  1606   0000E4                     ??_Handle_Test_Events:
  1607                           
  1608                           ; 1 bytes @ 0x84
  1609   0000E4                     	ds	2
  1610   0000E6                     Handle_Fire_Events@duration:
  1611                           	callstack 0
  1612                           
  1613                           ; 4 bytes @ 0x86
  1614   0000E6                     	ds	4
  1615   0000EA                     Handle_Fire_Events@water_used:
  1616                           	callstack 0
  1617                           
  1618                           ; 4 bytes @ 0x8A
  1619   0000EA                     	ds	4
  1620   0000EE                     ??_main:
  1621                           
  1622                           ; 1 bytes @ 0x8E
  1623   0000EE                     	ds	2
  1624                           
  1625                           	psect	cstackCOMRAM
  1626   000001                     __pcstackCOMRAM:
  1627                           	callstack 0
  1628   000001                     ?_ADC_Read:
  1629                           	callstack 0
  1630   000001                     ?___fpclassifyf:
  1631                           	callstack 0
  1632   000001                     ?___awmod:
  1633                           	callstack 0
  1634   000001                     ?_read_prec_or_width:
  1635                           	callstack 0
  1636   000001                     ?_labs:
  1637                           	callstack 0
  1638   000001                     ?_sqrtf:
  1639                           	callstack 0
  1640   000001                     ?___lldiv:
  1641                           	callstack 0
  1642   000001                     ?___aldiv:
  1643                           	callstack 0
  1644   000001                     ?___almod:
  1645                           	callstack 0
  1646   000001                     ?___flneg:
  1647                           	callstack 0
  1648   000001                     ?___fltol:
  1649                           	callstack 0
  1650   000001                     ?___llmod:
  1651                           	callstack 0
  1652   000001                     ?___xxtofl:
  1653                           	callstack 0
  1654   000001                     read_prec_or_width@fmt:
  1655                           	callstack 0
  1656   000001                     ___awmod@dividend:
  1657                           	callstack 0
  1658   000001                     memcpy@d1:
  1659                           	callstack 0
  1660   000001                     fputc@c:
  1661                           	callstack 0
  1662   000001                     strcpy@dest:
  1663                           	callstack 0
  1664   000001                     ___lldiv@dividend:
  1665                           	callstack 0
  1666   000001                     ___aldiv@dividend:
  1667                           	callstack 0
  1668   000001                     ___almod@dividend:
  1669                           	callstack 0
  1670   000001                     ___fleq@ff1:
  1671                           	callstack 0
  1672   000001                     ___flneg@f1:
  1673                           	callstack 0
  1674   000001                     ___fltol@f1:
  1675                           	callstack 0
  1676   000001                     ___llmod@dividend:
  1677                           	callstack 0
  1678   000001                     ___xxtofl@val:
  1679                           	callstack 0
  1680   000001                     ___fpclassifyf@x:
  1681                           	callstack 0
  1682   000001                     labs@a:
  1683                           	callstack 0
  1684   000001                     sqrtf@x:
  1685                           	callstack 0
  1686   000001                     
  1687                           ; 1 bytes @ 0x0
  1688   000001                     	ds	1
  1689   000002                     read_prec_or_width@ap:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x1
  1693   000002                     	ds	1
  1694   000003                     fputc@fp:
  1695                           	callstack 0
  1696   000003                     ___awmod@divisor:
  1697                           	callstack 0
  1698   000003                     memcpy@s1:
  1699                           	callstack 0
  1700   000003                     strcpy@src:
  1701                           	callstack 0
  1702   000003                     ??_ADC_Read:
  1703   000003                     ??_read_prec_or_width:
  1704                           
  1705                           ; 1 bytes @ 0x2
  1706   000003                     	ds	1
  1707   000004                     ??_fputc:
  1708                           
  1709                           ; 1 bytes @ 0x3
  1710   000004                     	ds	1
  1711   000005                     ADC_Read@channel:
  1712                           	callstack 0
  1713   000005                     ___awmod@counter:
  1714                           	callstack 0
  1715   000005                     read_prec_or_width@c:
  1716                           	callstack 0
  1717   000005                     memcpy@n:
  1718                           	callstack 0
  1719   000005                     strcpy@d:
  1720                           	callstack 0
  1721   000005                     ___lldiv@divisor:
  1722                           	callstack 0
  1723   000005                     ___aldiv@divisor:
  1724                           	callstack 0
  1725   000005                     ___almod@divisor:
  1726                           	callstack 0
  1727   000005                     ___fleq@ff2:
  1728                           	callstack 0
  1729   000005                     ___llmod@divisor:
  1730                           	callstack 0
  1731   000005                     ??___fpclassifyf:
  1732   000005                     ??_labs:
  1733   000005                     ??_sqrtf:
  1734   000005                     ??___fltol:
  1735   000005                     ??___xxtofl:
  1736                           
  1737                           ; 1 bytes @ 0x4
  1738   000005                     	ds	1
  1739   000006                     ___awmod@sign:
  1740                           	callstack 0
  1741   000006                     read_prec_or_width@n:
  1742                           	callstack 0
  1743                           
  1744                           ; 2 bytes @ 0x5
  1745   000006                     	ds	1
  1746   000007                     memcpy@tmp:
  1747                           	callstack 0
  1748   000007                     
  1749                           ; 1 bytes @ 0x6
  1750   000007                     	ds	1
  1751   000008                     memcpy@d:
  1752                           	callstack 0
  1753                           
  1754                           ; 2 bytes @ 0x7
  1755   000008                     	ds	1
  1756   000009                     ___aldiv@counter:
  1757                           	callstack 0
  1758   000009                     ___almod@counter:
  1759                           	callstack 0
  1760   000009                     ___fltol@sign1:
  1761                           	callstack 0
  1762   000009                     ___llmod@counter:
  1763                           	callstack 0
  1764   000009                     ___xxtofl@sign:
  1765                           	callstack 0
  1766   000009                     stoa@fp:
  1767                           	callstack 0
  1768   000009                     ___fpclassifyf@e:
  1769                           	callstack 0
  1770   000009                     fputs@s:
  1771                           	callstack 0
  1772   000009                     ___lldiv@quotient:
  1773                           	callstack 0
  1774   000009                     ??___fleq:
  1775   000009                     
  1776                           ; 1 bytes @ 0x8
  1777   000009                     	ds	1
  1778   00000A                     ___aldiv@sign:
  1779                           	callstack 0
  1780   00000A                     ___almod@sign:
  1781                           	callstack 0
  1782   00000A                     ___fltol@exp1:
  1783                           	callstack 0
  1784   00000A                     ___xxtofl@exp:
  1785                           	callstack 0
  1786   00000A                     stoa@s:
  1787                           	callstack 0
  1788   00000A                     memcpy@s:
  1789                           	callstack 0
  1790   00000A                     sqrtf@s:
  1791                           	callstack 0
  1792                           
  1793                           ; 4 bytes @ 0x9
  1794   00000A                     	ds	1
  1795   00000B                     ?_abs:
  1796                           	callstack 0
  1797   00000B                     fputs@fp:
  1798                           	callstack 0
  1799   00000B                     abs@a:
  1800                           	callstack 0
  1801   00000B                     ___aldiv@quotient:
  1802                           	callstack 0
  1803   00000B                     ___xxtofl@arg:
  1804                           	callstack 0
  1805   00000B                     ___fpclassifyf@u:
  1806                           	callstack 0
  1807   00000B                     ??_Handle_Commands:
  1808                           
  1809                           ; 1 bytes @ 0xA
  1810   00000B                     	ds	1
  1811   00000C                     fputs@c:
  1812                           	callstack 0
  1813   00000C                     ??_stoa:
  1814                           
  1815                           ; 1 bytes @ 0xB
  1816   00000C                     	ds	1
  1817   00000D                     ___lldiv@counter:
  1818                           	callstack 0
  1819   00000D                     fputs@i:
  1820                           	callstack 0
  1821   00000D                     ??_abs:
  1822                           
  1823                           ; 1 bytes @ 0xC
  1824   00000D                     	ds	1
  1825   00000E                     stoa@p:
  1826                           	callstack 0
  1827   00000E                     sqrtf@i:
  1828                           	callstack 0
  1829                           
  1830                           ; 4 bytes @ 0xD
  1831   00000E                     	ds	1
  1832   00000F                     ?___flmul:
  1833                           	callstack 0
  1834   00000F                     Handle_Commands@cmd:
  1835                           	callstack 0
  1836   00000F                     pad@fp:
  1837                           	callstack 0
  1838   00000F                     ___flmul@b:
  1839                           	callstack 0
  1840                           
  1841                           ; 4 bytes @ 0xE
  1842   00000F                     	ds	1
  1843   000010                     pad@buf:
  1844                           	callstack 0
  1845   000010                     stoa@cp:
  1846                           	callstack 0
  1847                           
  1848                           ; 2 bytes @ 0xF
  1849   000010                     	ds	2
  1850   000012                     pad@p:
  1851                           	callstack 0
  1852   000012                     stoa@l:
  1853                           	callstack 0
  1854   000012                     sqrtf@q:
  1855                           	callstack 0
  1856                           
  1857                           ; 4 bytes @ 0x11
  1858   000012                     	ds	1
  1859   000013                     ___flmul@a:
  1860                           	callstack 0
  1861                           
  1862                           ; 4 bytes @ 0x12
  1863   000013                     	ds	1
  1864   000014                     ??_pad:
  1865                           
  1866                           ; 1 bytes @ 0x13
  1867   000014                     	ds	1
  1868   000015                     pad@i:
  1869                           	callstack 0
  1870                           
  1871                           ; 2 bytes @ 0x14
  1872   000015                     	ds	1
  1873   000016                     sqrtf@t:
  1874                           	callstack 0
  1875                           
  1876                           ; 4 bytes @ 0x15
  1877   000016                     	ds	1
  1878   000017                     dtoa@fp:
  1879                           	callstack 0
  1880   000017                     utoa@fp:
  1881                           	callstack 0
  1882   000017                     ??___flmul:
  1883                           
  1884                           ; 1 bytes @ 0x16
  1885   000017                     	ds	1
  1886   000018                     dtoa@d:
  1887                           	callstack 0
  1888   000018                     utoa@d:
  1889                           	callstack 0
  1890                           
  1891                           ; 4 bytes @ 0x17
  1892   000018                     	ds	2
  1893   00001A                     sqrtf@m:
  1894                           	callstack 0
  1895                           
  1896                           ; 4 bytes @ 0x19
  1897   00001A                     	ds	1
  1898   00001B                     ___flmul@sign:
  1899                           	callstack 0
  1900                           
  1901                           ; 1 bytes @ 0x1A
  1902   00001B                     	ds	1
  1903   00001C                     ___flmul@aexp:
  1904                           	callstack 0
  1905   00001C                     _dtoa$1344:
  1906                           	callstack 0
  1907   00001C                     utoa@w:
  1908                           	callstack 0
  1909   00001C                     
  1910                           ; 1 bytes @ 0x1B
  1911   00001C                     	ds	1
  1912   00001D                     ___flmul@grs:
  1913                           	callstack 0
  1914                           
  1915                           ; 4 bytes @ 0x1C
  1916   00001D                     	ds	1
  1917   00001E                     dtoa@w:
  1918                           	callstack 0
  1919   00001E                     utoa@p:
  1920                           	callstack 0
  1921   00001E                     sqrtf@r:
  1922                           	callstack 0
  1923                           
  1924                           ; 4 bytes @ 0x1D
  1925   00001E                     	ds	2
  1926   000020                     dtoa@p:
  1927                           	callstack 0
  1928   000020                     utoa@i:
  1929                           	callstack 0
  1930                           
  1931                           ; 2 bytes @ 0x1F
  1932   000020                     	ds	1
  1933   000021                     ___flmul@bexp:
  1934                           	callstack 0
  1935                           
  1936                           ; 1 bytes @ 0x20
  1937   000021                     	ds	1
  1938   000022                     dtoa@s:
  1939                           	callstack 0
  1940   000022                     ___flmul@prod:
  1941                           	callstack 0
  1942   000022                     sqrtf@ix:
  1943                           	callstack 0
  1944                           
  1945                           ; 4 bytes @ 0x21
  1946   000022                     	ds	1
  1947   000023                     dtoa@i:
  1948                           	callstack 0
  1949                           
  1950                           ; 2 bytes @ 0x22
  1951   000023                     	ds	3
  1952   000026                     ___flmul@temp:
  1953                           	callstack 0
  1954                           
  1955                           ; 2 bytes @ 0x25
  1956   000026                     	ds	2
  1957   000028                     ?___fldiv:
  1958                           	callstack 0
  1959   000028                     ?_scalbnf:
  1960                           	callstack 0
  1961   000028                     ___fldiv@b:
  1962                           	callstack 0
  1963   000028                     scalbnf@x:
  1964                           	callstack 0
  1965                           
  1966                           ; 4 bytes @ 0x27
  1967   000028                     	ds	4
  1968   00002C                     scalbnf@n:
  1969                           	callstack 0
  1970   00002C                     ___fldiv@a:
  1971                           	callstack 0
  1972                           
  1973                           ; 4 bytes @ 0x2B
  1974   00002C                     	ds	2
  1975   00002E                     ??_scalbnf:
  1976                           
  1977                           ; 1 bytes @ 0x2D
  1978   00002E                     	ds	2
  1979   000030                     ??___fldiv:
  1980                           
  1981                           ; 1 bytes @ 0x2F
  1982   000030                     	ds	2
  1983   000032                     scalbnf@u:
  1984                           	callstack 0
  1985                           
  1986                           ; 4 bytes @ 0x31
  1987   000032                     	ds	2
  1988   000034                     ___fldiv@rem:
  1989                           	callstack 0
  1990                           
  1991                           ; 4 bytes @ 0x33
  1992   000034                     	ds	2
  1993   000036                     scalbnf@y:
  1994                           	callstack 0
  1995                           
  1996                           ; 4 bytes @ 0x35
  1997   000036                     	ds	2
  1998   000038                     ___fldiv@sign:
  1999                           	callstack 0
  2000                           
  2001                           ; 1 bytes @ 0x37
  2002   000038                     	ds	1
  2003   000039                     ___fldiv@new_exp:
  2004                           	callstack 0
  2005                           
  2006                           ; 2 bytes @ 0x38
  2007   000039                     	ds	2
  2008   00003B                     ___fldiv@grs:
  2009                           	callstack 0
  2010                           
  2011                           ; 4 bytes @ 0x3A
  2012   00003B                     	ds	4
  2013   00003F                     ___fldiv@bexp:
  2014                           	callstack 0
  2015                           
  2016                           ; 1 bytes @ 0x3E
  2017   00003F                     	ds	1
  2018   000040                     ___fldiv@aexp:
  2019                           	callstack 0
  2020                           
  2021                           ; 1 bytes @ 0x3F
  2022   000040                     	ds	1
  2023   000041                     ?___fladd:
  2024                           	callstack 0
  2025   000041                     ?_floorf:
  2026                           	callstack 0
  2027   000041                     ___fladd@b:
  2028                           	callstack 0
  2029   000041                     floorf@x:
  2030                           	callstack 0
  2031                           
  2032                           ; 4 bytes @ 0x40
  2033   000041                     	ds	4
  2034   000045                     ___fladd@a:
  2035                           	callstack 0
  2036   000045                     ??_floorf:
  2037                           
  2038                           ; 1 bytes @ 0x44
  2039   000045                     	ds	4
  2040   000049                     ??___fladd:
  2041                           
  2042                           ; 1 bytes @ 0x48
  2043   000049                     	ds	2
  2044   00004B                     floorf@m:
  2045                           	callstack 0
  2046                           
  2047                           ; 4 bytes @ 0x4A
  2048   00004B                     	ds	2
  2049   00004D                     ___fladd@signs:
  2050                           	callstack 0
  2051                           
  2052                           ; 1 bytes @ 0x4C
  2053   00004D                     	ds	1
  2054   00004E                     ___fladd@aexp:
  2055                           	callstack 0
  2056                           
  2057                           ; 1 bytes @ 0x4D
  2058   00004E                     	ds	1
  2059   00004F                     ___fladd@bexp:
  2060                           	callstack 0
  2061   00004F                     floorf@e:
  2062                           	callstack 0
  2063                           
  2064                           ; 2 bytes @ 0x4E
  2065   00004F                     	ds	1
  2066   000050                     ___fladd@grs:
  2067                           	callstack 0
  2068                           
  2069                           ; 1 bytes @ 0x4F
  2070   000050                     	ds	1
  2071   000051                     ?_Apply_Filter:
  2072                           	callstack 0
  2073   000051                     ?___flsub:
  2074                           	callstack 0
  2075   000051                     Apply_Filter@new_value:
  2076                           	callstack 0
  2077   000051                     ___flsub@b:
  2078                           	callstack 0
  2079   000051                     floorf@u:
  2080                           	callstack 0
  2081                           
  2082                           ; 4 bytes @ 0x50
  2083   000051                     	ds	4
  2084   000055                     Apply_Filter@samples:
  2085                           	callstack 0
  2086   000055                     ___flsub@a:
  2087                           	callstack 0
  2088                           
  2089                           ; 4 bytes @ 0x54
  2090   000055                     	ds	2
  2091   000057                     ??_Apply_Filter:
  2092                           
  2093                           ; 1 bytes @ 0x56
  2094   000057                     	ds	2
  2095   000059                     ??___flge:
  2096                           
  2097                           ; 1 bytes @ 0x58
  2098   000059                     	ds	4
  2099   00005D                     _Update_Actuators$751:
  2100                           	callstack 0
  2101   00005D                     
  2102                           ; 1 bytes @ 0x5C
  2103   00005D                     	ds	1
  2104                           
  2105 ;;
  2106 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2107 ;;
  2108 ;; *************** function _main *****************
  2109 ;; Defined at:
  2110 ;;		line 98 in file "newmain.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  voltage         4   10[BANK3 ] float 
  2115 ;;  adc_value       2    6[BANK3 ] unsigned int 
  2116 ;;  adc_value       2    4[BANK3 ] unsigned int 
  2117 ;;  i               2   16[BANK3 ] int 
  2118 ;;  i               2   14[BANK3 ] int 
  2119 ;;  cycle_count     2    8[BANK3 ] unsigned int 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2129 ;;      Params:         0       0       0       0       0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0      18       0       0       0       0
  2131 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2132 ;;      Totals:         0       2       0       0      18       0       0       0       0
  2133 ;;Total ram usage:       20 bytes
  2134 ;; Hardware stack levels required when called: 11
  2135 ;; This function calls:
  2136 ;;		_ADC_Init
  2137 ;;		_ADC_Read
  2138 ;;		_Handle_Commands
  2139 ;;		_Handle_Fire_Events
  2140 ;;		_Handle_Shutdown_Events
  2141 ;;		_Handle_Test_Events
  2142 ;;		_Interrupt_Init
  2143 ;;		_Read_Sensors
  2144 ;;		_Send_Data
  2145 ;;		_UART_Init
  2146 ;;		_Update_Actuators
  2147 ;;		___awmod
  2148 ;;		___fladd
  2149 ;;		___fldiv
  2150 ;;		___flmul
  2151 ;;		___flsub
  2152 ;;		___xxtofl
  2153 ;; This function is called by:
  2154 ;;		Startup code after reset
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text0
  2159   004B20                     __ptext0:
  2160                           	callstack 0
  2161   004B20                     _main:
  2162                           	callstack 20
  2163   004B20                     
  2164                           ;newmain.c: 100:     OSCCON = 0x70;
  2165   004B20  0E70               	movlw	112
  2166   004B22  6ED3               	movwf	211,c	;volatile
  2167                           
  2168                           ;newmain.c: 101:     TRISB = 0x02;
  2169   004B24  0E02               	movlw	2
  2170   004B26  6E93               	movwf	147,c	;volatile
  2171   004B28                     
  2172                           ;newmain.c: 102:     PORTB = 0x00;
  2173   004B28  6A81               	clrf	129,c	;volatile
  2174   004B2A                     
  2175                           ;newmain.c: 103:     PORTBbits.RB5 = 1;
  2176   004B2A  8A81               	bsf	129,5,c	;volatile
  2177   004B2C                     
  2178                           ;newmain.c: 104:     PORTBbits.RB0 = 0;
  2179   004B2C  9081               	bcf	129,0,c	;volatile
  2180   004B2E                     
  2181                           ;newmain.c: 106:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  2182   004B2E  0E15               	movlw	21
  2183   004B30  0100               	movlb	0	; () banked
  2184   004B32  6FEF               	movwf	(??_main+1)& (0+255),b
  2185   004B34  0E4B               	movlw	75
  2186   004B36  6FEE               	movwf	??_main& (0+255),b
  2187   004B38  0EBE               	movlw	190
  2188   004B3A                     u10717:
  2189   004B3A  2EE8               	decfsz	wreg,f,c
  2190   004B3C  D7FE               	bra	u10717
  2191   004B3E  2FEE               	decfsz	??_main& (0+255),f,b
  2192   004B40  D7FC               	bra	u10717
  2193   004B42  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2194   004B44  D7FA               	bra	u10717
  2195   004B46  0000               	nop	
  2196   004B48                     
  2197                           ;newmain.c: 107:     UART_Init();
  2198   004B48  ECF3  F036         	call	_UART_Init	;wreg free
  2199   004B4C                     
  2200                           ;newmain.c: 108:     ADC_Init();
  2201   004B4C  ECFD  F036         	call	_ADC_Init	;wreg free
  2202   004B50                     
  2203                           ;newmain.c: 109:     Interrupt_Init();
  2204   004B50  EC06  F037         	call	_Interrupt_Init	;wreg free
  2205   004B54                     
  2206                           ;newmain.c: 112:     for(int i = 0; i < 50; i++) {
  2207   004B54  0E00               	movlw	0
  2208   004B56  0103               	movlb	3	; () banked
  2209   004B58  6FF9               	movwf	(main@i+1)& (0+255),b
  2210   004B5A  0E00               	movlw	0
  2211   004B5C  6FF8               	movwf	main@i& (0+255),b
  2212   004B5E                     l8054:
  2213                           
  2214                           ; BSR set to: 3
  2215                           ;newmain.c: 113:         unsigned int adc_value = ADC_Read(1);
  2216   004B5E  0E01               	movlw	1
  2217   004B60  EC46  F036         	call	_ADC_Read
  2218   004B64  C001  F3EE         	movff	?_ADC_Read,main@adc_value
  2219   004B68  C002  F3EF         	movff	?_ADC_Read+1,main@adc_value+1
  2220   004B6C                     
  2221                           ;newmain.c: 114:         flame_base_voltage += (adc_value * 5.0) / 1024.0;
  2222   004B6C  C33C  F041         	movff	_flame_base_voltage,___fladd@b
  2223   004B70  C33D  F042         	movff	_flame_base_voltage+1,___fladd@b+1
  2224   004B74  C33E  F043         	movff	_flame_base_voltage+2,___fladd@b+2
  2225   004B78  C33F  F044         	movff	_flame_base_voltage+3,___fladd@b+3
  2226   004B7C  0E00               	movlw	0
  2227   004B7E  6E2C               	movwf	___fldiv@a^0,c
  2228   004B80  0E00               	movlw	0
  2229   004B82  6E2D               	movwf	(___fldiv@a+1)^0,c
  2230   004B84  0E80               	movlw	128
  2231   004B86  6E2E               	movwf	(___fldiv@a+2)^0,c
  2232   004B88  0E44               	movlw	68
  2233   004B8A  6E2F               	movwf	(___fldiv@a+3)^0,c
  2234   004B8C  0E00               	movlw	0
  2235   004B8E  6E13               	movwf	___flmul@a^0,c
  2236   004B90  0E00               	movlw	0
  2237   004B92  6E14               	movwf	(___flmul@a+1)^0,c
  2238   004B94  0EA0               	movlw	160
  2239   004B96  6E15               	movwf	(___flmul@a+2)^0,c
  2240   004B98  0E40               	movlw	64
  2241   004B9A  6E16               	movwf	(___flmul@a+3)^0,c
  2242   004B9C  C3EE  F001         	movff	main@adc_value,___xxtofl@val
  2243   004BA0  C3EF  F002         	movff	main@adc_value+1,___xxtofl@val+1
  2244   004BA4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2245   004BA6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2246   004BA8  0E00               	movlw	0
  2247   004BAA  ECBA  F02A         	call	___xxtofl
  2248   004BAE  C001  F00F         	movff	?___xxtofl,___flmul@b
  2249   004BB2  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2250   004BB6  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2251   004BBA  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2252   004BBE  ECC6  F01F         	call	___flmul	;wreg free
  2253   004BC2  C00F  F028         	movff	?___flmul,___fldiv@b
  2254   004BC6  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2255   004BCA  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2256   004BCE  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2257   004BD2  ECC8  F023         	call	___fldiv	;wreg free
  2258   004BD6  C028  F045         	movff	?___fldiv,___fladd@a
  2259   004BDA  C029  F046         	movff	?___fldiv+1,___fladd@a+1
  2260   004BDE  C02A  F047         	movff	?___fldiv+2,___fladd@a+2
  2261   004BE2  C02B  F048         	movff	?___fldiv+3,___fladd@a+3
  2262   004BE6  EC6B  F01D         	call	___fladd	;wreg free
  2263   004BEA  C041  F33C         	movff	?___fladd,_flame_base_voltage
  2264   004BEE  C042  F33D         	movff	?___fladd+1,_flame_base_voltage+1
  2265   004BF2  C043  F33E         	movff	?___fladd+2,_flame_base_voltage+2
  2266   004BF6  C044  F33F         	movff	?___fladd+3,_flame_base_voltage+3
  2267   004BFA                     
  2268                           ;newmain.c: 115:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2269   004BFA  0E02               	movlw	2
  2270   004BFC  0100               	movlb	0	; () banked
  2271   004BFE  6FEF               	movwf	(??_main+1)& (0+255),b
  2272   004C00  0E04               	movlw	4
  2273   004C02  6FEE               	movwf	??_main& (0+255),b
  2274   004C04  0EBA               	movlw	186
  2275   004C06                     u10727:
  2276   004C06  2EE8               	decfsz	wreg,f,c
  2277   004C08  D7FE               	bra	u10727
  2278   004C0A  2FEE               	decfsz	??_main& (0+255),f,b
  2279   004C0C  D7FC               	bra	u10727
  2280   004C0E  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2281   004C10  D7FA               	bra	u10727
  2282   004C12  0000               	nop	
  2283   004C14                     
  2284                           ;newmain.c: 116:     }
  2285   004C14  0103               	movlb	3	; () banked
  2286   004C16  4BF8               	infsnz	main@i& (0+255),f,b
  2287   004C18  2BF9               	incf	(main@i+1)& (0+255),f,b
  2288   004C1A                     
  2289                           ; BSR set to: 3
  2290   004C1A  BFF9               	btfsc	(main@i+1)& (0+255),7,b
  2291   004C1C  EF19  F026         	goto	u10661
  2292   004C20  51F9               	movf	(main@i+1)& (0+255),w,b
  2293   004C22  E109               	bnz	u10660
  2294   004C24  0E32               	movlw	50
  2295   004C26  5DF8               	subwf	main@i& (0+255),w,b
  2296   004C28  A0D8               	btfss	status,0,c
  2297   004C2A  EF19  F026         	goto	u10661
  2298   004C2E  EF1B  F026         	goto	u10660
  2299   004C32                     u10661:
  2300   004C32  EFAF  F025         	goto	l8054
  2301   004C36                     u10660:
  2302   004C36                     
  2303                           ; BSR set to: 3
  2304                           ;newmain.c: 117:     flame_base_voltage /= 50.0;
  2305   004C36  C33C  F028         	movff	_flame_base_voltage,___fldiv@b
  2306   004C3A  C33D  F029         	movff	_flame_base_voltage+1,___fldiv@b+1
  2307   004C3E  C33E  F02A         	movff	_flame_base_voltage+2,___fldiv@b+2
  2308   004C42  C33F  F02B         	movff	_flame_base_voltage+3,___fldiv@b+3
  2309   004C46  0E00               	movlw	0
  2310   004C48  6E2C               	movwf	___fldiv@a^0,c
  2311   004C4A  0E00               	movlw	0
  2312   004C4C  6E2D               	movwf	(___fldiv@a+1)^0,c
  2313   004C4E  0E48               	movlw	72
  2314   004C50  6E2E               	movwf	(___fldiv@a+2)^0,c
  2315   004C52  0E42               	movlw	66
  2316   004C54  6E2F               	movwf	(___fldiv@a+3)^0,c
  2317   004C56  ECC8  F023         	call	___fldiv	;wreg free
  2318   004C5A  C028  F33C         	movff	?___fldiv,_flame_base_voltage
  2319   004C5E  C029  F33D         	movff	?___fldiv+1,_flame_base_voltage+1
  2320   004C62  C02A  F33E         	movff	?___fldiv+2,_flame_base_voltage+2
  2321   004C66  C02B  F33F         	movff	?___fldiv+3,_flame_base_voltage+3
  2322   004C6A                     
  2323                           ;newmain.c: 120:     for(int i = 0; i < 50; i++) {
  2324   004C6A  0E00               	movlw	0
  2325   004C6C  0103               	movlb	3	; () banked
  2326   004C6E  6FFB               	movwf	(main@i_676+1)& (0+255),b
  2327   004C70  0E00               	movlw	0
  2328   004C72  6FFA               	movwf	main@i_676& (0+255),b
  2329   004C74                     l8072:
  2330                           
  2331                           ; BSR set to: 3
  2332                           ;newmain.c: 121:         unsigned int adc_value = ADC_Read(2);
  2333   004C74  0E02               	movlw	2
  2334   004C76  EC46  F036         	call	_ADC_Read
  2335   004C7A  C001  F3F0         	movff	?_ADC_Read,main@adc_value_677
  2336   004C7E  C002  F3F1         	movff	?_ADC_Read+1,main@adc_value_677+1
  2337   004C82                     
  2338                           ;newmain.c: 122:         float voltage = (adc_value * 5.0) / 1024.0;
  2339   004C82  0E00               	movlw	0
  2340   004C84  6E13               	movwf	___flmul@a^0,c
  2341   004C86  0E00               	movlw	0
  2342   004C88  6E14               	movwf	(___flmul@a+1)^0,c
  2343   004C8A  0EA0               	movlw	160
  2344   004C8C  6E15               	movwf	(___flmul@a+2)^0,c
  2345   004C8E  0E40               	movlw	64
  2346   004C90  6E16               	movwf	(___flmul@a+3)^0,c
  2347   004C92  C3F0  F001         	movff	main@adc_value_677,___xxtofl@val
  2348   004C96  C3F1  F002         	movff	main@adc_value_677+1,___xxtofl@val+1
  2349   004C9A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2350   004C9C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2351   004C9E  0E00               	movlw	0
  2352   004CA0  ECBA  F02A         	call	___xxtofl
  2353   004CA4  C001  F00F         	movff	?___xxtofl,___flmul@b
  2354   004CA8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2355   004CAC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2356   004CB0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2357   004CB4  ECC6  F01F         	call	___flmul	;wreg free
  2358   004CB8  C00F  F028         	movff	?___flmul,___fldiv@b
  2359   004CBC  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2360   004CC0  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2361   004CC4  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2362   004CC8  0E00               	movlw	0
  2363   004CCA  6E2C               	movwf	___fldiv@a^0,c
  2364   004CCC  0E00               	movlw	0
  2365   004CCE  6E2D               	movwf	(___fldiv@a+1)^0,c
  2366   004CD0  0E80               	movlw	128
  2367   004CD2  6E2E               	movwf	(___fldiv@a+2)^0,c
  2368   004CD4  0E44               	movlw	68
  2369   004CD6  6E2F               	movwf	(___fldiv@a+3)^0,c
  2370   004CD8  ECC8  F023         	call	___fldiv	;wreg free
  2371   004CDC  C028  F3F4         	movff	?___fldiv,main@voltage
  2372   004CE0  C029  F3F5         	movff	?___fldiv+1,main@voltage+1
  2373   004CE4  C02A  F3F6         	movff	?___fldiv+2,main@voltage+2
  2374   004CE8  C02B  F3F7         	movff	?___fldiv+3,main@voltage+3
  2375   004CEC                     
  2376                           ;newmain.c: 123:         MQ2_Ro += (5.0 - voltage) / voltage;
  2377   004CEC  C3F4  F02C         	movff	main@voltage,___fldiv@a
  2378   004CF0  C3F5  F02D         	movff	main@voltage+1,___fldiv@a+1
  2379   004CF4  C3F6  F02E         	movff	main@voltage+2,___fldiv@a+2
  2380   004CF8  C3F7  F02F         	movff	main@voltage+3,___fldiv@a+3
  2381   004CFC  C3F4  F055         	movff	main@voltage,___flsub@a
  2382   004D00  C3F5  F056         	movff	main@voltage+1,___flsub@a+1
  2383   004D04  C3F6  F057         	movff	main@voltage+2,___flsub@a+2
  2384   004D08  C3F7  F058         	movff	main@voltage+3,___flsub@a+3
  2385   004D0C  0E00               	movlw	0
  2386   004D0E  6E51               	movwf	___flsub@b^0,c
  2387   004D10  0E00               	movlw	0
  2388   004D12  6E52               	movwf	(___flsub@b+1)^0,c
  2389   004D14  0EA0               	movlw	160
  2390   004D16  6E53               	movwf	(___flsub@b+2)^0,c
  2391   004D18  0E40               	movlw	64
  2392   004D1A  6E54               	movwf	(___flsub@b+3)^0,c
  2393   004D1C  EC01  F036         	call	___flsub	;wreg free
  2394   004D20  C051  F028         	movff	?___flsub,___fldiv@b
  2395   004D24  C052  F029         	movff	?___flsub+1,___fldiv@b+1
  2396   004D28  C053  F02A         	movff	?___flsub+2,___fldiv@b+2
  2397   004D2C  C054  F02B         	movff	?___flsub+3,___fldiv@b+3
  2398   004D30  ECC8  F023         	call	___fldiv	;wreg free
  2399   004D34  C028  F3EA         	movff	?___fldiv,_main$1833
  2400   004D38  C029  F3EB         	movff	?___fldiv+1,_main$1833+1
  2401   004D3C  C02A  F3EC         	movff	?___fldiv+2,_main$1833+2
  2402   004D40  C02B  F3ED         	movff	?___fldiv+3,_main$1833+3
  2403   004D44                     
  2404                           ;newmain.c: 123:         MQ2_Ro += (5.0 - voltage) / voltage;
  2405   004D44  C3D2  F041         	movff	_MQ2_Ro,___fladd@b
  2406   004D48  C3D3  F042         	movff	_MQ2_Ro+1,___fladd@b+1
  2407   004D4C  C3D4  F043         	movff	_MQ2_Ro+2,___fladd@b+2
  2408   004D50  C3D5  F044         	movff	_MQ2_Ro+3,___fladd@b+3
  2409   004D54  C3EA  F045         	movff	_main$1833,___fladd@a
  2410   004D58  C3EB  F046         	movff	_main$1833+1,___fladd@a+1
  2411   004D5C  C3EC  F047         	movff	_main$1833+2,___fladd@a+2
  2412   004D60  C3ED  F048         	movff	_main$1833+3,___fladd@a+3
  2413   004D64  EC6B  F01D         	call	___fladd	;wreg free
  2414   004D68  C041  F3D2         	movff	?___fladd,_MQ2_Ro
  2415   004D6C  C042  F3D3         	movff	?___fladd+1,_MQ2_Ro+1
  2416   004D70  C043  F3D4         	movff	?___fladd+2,_MQ2_Ro+2
  2417   004D74  C044  F3D5         	movff	?___fladd+3,_MQ2_Ro+3
  2418   004D78                     
  2419                           ;newmain.c: 124:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2420   004D78  0E02               	movlw	2
  2421   004D7A  0100               	movlb	0	; () banked
  2422   004D7C  6FEF               	movwf	(??_main+1)& (0+255),b
  2423   004D7E  0E04               	movlw	4
  2424   004D80  6FEE               	movwf	??_main& (0+255),b
  2425   004D82  0EBA               	movlw	186
  2426   004D84                     u10737:
  2427   004D84  2EE8               	decfsz	wreg,f,c
  2428   004D86  D7FE               	bra	u10737
  2429   004D88  2FEE               	decfsz	??_main& (0+255),f,b
  2430   004D8A  D7FC               	bra	u10737
  2431   004D8C  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2432   004D8E  D7FA               	bra	u10737
  2433   004D90  0000               	nop	
  2434   004D92                     
  2435                           ;newmain.c: 125:     }
  2436   004D92  0103               	movlb	3	; () banked
  2437   004D94  4BFA               	infsnz	main@i_676& (0+255),f,b
  2438   004D96  2BFB               	incf	(main@i_676+1)& (0+255),f,b
  2439   004D98                     
  2440                           ; BSR set to: 3
  2441   004D98  BFFB               	btfsc	(main@i_676+1)& (0+255),7,b
  2442   004D9A  EFD8  F026         	goto	u10671
  2443   004D9E  51FB               	movf	(main@i_676+1)& (0+255),w,b
  2444   004DA0  E109               	bnz	u10670
  2445   004DA2  0E32               	movlw	50
  2446   004DA4  5DFA               	subwf	main@i_676& (0+255),w,b
  2447   004DA6  A0D8               	btfss	status,0,c
  2448   004DA8  EFD8  F026         	goto	u10671
  2449   004DAC  EFDA  F026         	goto	u10670
  2450   004DB0                     u10671:
  2451   004DB0  EF3A  F026         	goto	l8072
  2452   004DB4                     u10670:
  2453   004DB4                     
  2454                           ; BSR set to: 3
  2455                           ;newmain.c: 126:     MQ2_Ro /= 50.0;
  2456   004DB4  C3D2  F028         	movff	_MQ2_Ro,___fldiv@b
  2457   004DB8  C3D3  F029         	movff	_MQ2_Ro+1,___fldiv@b+1
  2458   004DBC  C3D4  F02A         	movff	_MQ2_Ro+2,___fldiv@b+2
  2459   004DC0  C3D5  F02B         	movff	_MQ2_Ro+3,___fldiv@b+3
  2460   004DC4  0E00               	movlw	0
  2461   004DC6  6E2C               	movwf	___fldiv@a^0,c
  2462   004DC8  0E00               	movlw	0
  2463   004DCA  6E2D               	movwf	(___fldiv@a+1)^0,c
  2464   004DCC  0E48               	movlw	72
  2465   004DCE  6E2E               	movwf	(___fldiv@a+2)^0,c
  2466   004DD0  0E42               	movlw	66
  2467   004DD2  6E2F               	movwf	(___fldiv@a+3)^0,c
  2468   004DD4  ECC8  F023         	call	___fldiv	;wreg free
  2469   004DD8  C028  F3D2         	movff	?___fldiv,_MQ2_Ro
  2470   004DDC  C029  F3D3         	movff	?___fldiv+1,_MQ2_Ro+1
  2471   004DE0  C02A  F3D4         	movff	?___fldiv+2,_MQ2_Ro+2
  2472   004DE4  C02B  F3D5         	movff	?___fldiv+3,_MQ2_Ro+3
  2473   004DE8                     
  2474                           ;newmain.c: 128:     unsigned int cycle_count = 0;
  2475   004DE8  0E00               	movlw	0
  2476   004DEA  0103               	movlb	3	; () banked
  2477   004DEC  6FF3               	movwf	(main@cycle_count+1)& (0+255),b
  2478   004DEE  0E00               	movlw	0
  2479   004DF0  6FF2               	movwf	main@cycle_count& (0+255),b
  2480   004DF2                     l8090:
  2481                           
  2482                           ;newmain.c: 131:         system_millis += 125;
  2483   004DF2  0E7D               	movlw	125
  2484   004DF4  0102               	movlb	2	; () banked
  2485   004DF6  27FA               	addwf	_system_millis& (0+255),f,b
  2486   004DF8  0E00               	movlw	0
  2487   004DFA  23FB               	addwfc	(_system_millis+1)& (0+255),f,b
  2488   004DFC  23FC               	addwfc	(_system_millis+2)& (0+255),f,b
  2489   004DFE  23FD               	addwfc	(_system_millis+3)& (0+255),f,b
  2490   004E00                     
  2491                           ; BSR set to: 2
  2492                           ;newmain.c: 133:         Handle_Commands();
  2493   004E00  EC66  F02C         	call	_Handle_Commands	;wreg free
  2494   004E04                     
  2495                           ;newmain.c: 135:         if(!shutdown_system) {
  2496   004E04  0103               	movlb	3	; () banked
  2497   004E06  5153               	movf	_shutdown_system& (0+255),w,b
  2498   004E08  A4D8               	btfss	status,2,c
  2499   004E0A  EF09  F027         	goto	u10681
  2500   004E0E  EF0B  F027         	goto	u10680
  2501   004E12                     u10681:
  2502   004E12  EF17  F027         	goto	l8102
  2503   004E16                     u10680:
  2504   004E16                     
  2505                           ; BSR set to: 3
  2506                           ;newmain.c: 136:             Read_Sensors();
  2507   004E16  EC5C  F017         	call	_Read_Sensors	;wreg free
  2508   004E1A                     
  2509                           ;newmain.c: 137:             if(!trigger_test) {
  2510   004E1A  505E               	movf	_trigger_test^0,w,c
  2511   004E1C  A4D8               	btfss	status,2,c
  2512   004E1E  EF13  F027         	goto	u10691
  2513   004E22  EF15  F027         	goto	u10690
  2514   004E26                     u10691:
  2515   004E26  EF17  F027         	goto	l8102
  2516   004E2A                     u10690:
  2517   004E2A                     
  2518                           ;newmain.c: 138:                 Update_Actuators();
  2519   004E2A  EC20  F02D         	call	_Update_Actuators	;wreg free
  2520   004E2E                     l8102:
  2521                           
  2522                           ;newmain.c: 142:         Handle_Fire_Events();
  2523   004E2E  EC52  F027         	call	_Handle_Fire_Events	;wreg free
  2524   004E32                     
  2525                           ;newmain.c: 143:         Handle_Test_Events();
  2526   004E32  ECB8  F02D         	call	_Handle_Test_Events	;wreg free
  2527   004E36                     
  2528                           ;newmain.c: 144:         Handle_Shutdown_Events();
  2529   004E36  ECF7  F034         	call	_Handle_Shutdown_Events	;wreg free
  2530   004E3A                     
  2531                           ;newmain.c: 147:         if(cycle_count >= 4) {
  2532   004E3A  0103               	movlb	3	; () banked
  2533   004E3C  51F3               	movf	(main@cycle_count+1)& (0+255),w,b
  2534   004E3E  E109               	bnz	u10700
  2535   004E40  0E04               	movlw	4
  2536   004E42  5DF2               	subwf	main@cycle_count& (0+255),w,b
  2537   004E44  A0D8               	btfss	status,0,c
  2538   004E46  EF27  F027         	goto	u10701
  2539   004E4A  EF29  F027         	goto	u10700
  2540   004E4E                     u10701:
  2541   004E4E  EF30  F027         	goto	l8114
  2542   004E52                     u10700:
  2543   004E52                     
  2544                           ; BSR set to: 3
  2545                           ;newmain.c: 148:             Send_Data();
  2546   004E52  ECD0  F031         	call	_Send_Data	;wreg free
  2547   004E56                     
  2548                           ;newmain.c: 149:             cycle_count = 0;
  2549   004E56  0E00               	movlw	0
  2550   004E58  0103               	movlb	3	; () banked
  2551   004E5A  6FF3               	movwf	(main@cycle_count+1)& (0+255),b
  2552   004E5C  0E00               	movlw	0
  2553   004E5E  6FF2               	movwf	main@cycle_count& (0+255),b
  2554   004E60                     l8114:
  2555                           
  2556                           ; BSR set to: 3
  2557                           ;newmain.c: 152:         cycle_count++;
  2558   004E60  4BF2               	infsnz	main@cycle_count& (0+255),f,b
  2559   004E62  2BF3               	incf	(main@cycle_count+1)& (0+255),f,b
  2560   004E64                     
  2561                           ; BSR set to: 3
  2562                           ;newmain.c: 153:         sample_index = (sample_index + 1) % 5;
  2563   004E64  0E01               	movlw	1
  2564   004E66  2554               	addwf	_sample_index& (0+255),w,b
  2565   004E68  6E01               	movwf	___awmod@dividend^0,c
  2566   004E6A  6A02               	clrf	(___awmod@dividend+1)^0,c
  2567   004E6C  0E00               	movlw	0
  2568   004E6E  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2569   004E70  0E00               	movlw	0
  2570   004E72  6E04               	movwf	(___awmod@divisor+1)^0,c
  2571   004E74  0E05               	movlw	5
  2572   004E76  6E03               	movwf	___awmod@divisor^0,c
  2573   004E78  EC15  F033         	call	___awmod	;wreg free
  2574   004E7C  5001               	movf	?___awmod^0,w,c
  2575   004E7E  0103               	movlb	3	; () banked
  2576   004E80  6F54               	movwf	_sample_index& (0+255),b
  2577   004E82                     
  2578                           ; BSR set to: 3
  2579                           ;newmain.c: 154:         _delay((unsigned long)((125)*(8000000/4000.0)));
  2580   004E82  0E02               	movlw	2
  2581   004E84  0100               	movlb	0	; () banked
  2582   004E86  6FEF               	movwf	(??_main+1)& (0+255),b
  2583   004E88  0E45               	movlw	69
  2584   004E8A  6FEE               	movwf	??_main& (0+255),b
  2585   004E8C  0EA9               	movlw	169
  2586   004E8E                     u10747:
  2587   004E8E  2EE8               	decfsz	wreg,f,c
  2588   004E90  D7FE               	bra	u10747
  2589   004E92  2FEE               	decfsz	??_main& (0+255),f,b
  2590   004E94  D7FC               	bra	u10747
  2591   004E96  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  2592   004E98  D7FA               	bra	u10747
  2593   004E9A  D000               	nop2	
  2594   004E9C  EFF9  F026         	goto	l8090
  2595   004EA0  EF07  F000         	goto	start
  2596   004EA4                     __end_of_main:
  2597                           	callstack 0
  2598                           
  2599 ;; *************** function ___awmod *****************
  2600 ;; Defined at:
  2601 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  dividend        2    0[COMRAM] int 
  2604 ;;  divisor         2    2[COMRAM] int 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  sign            1    5[COMRAM] unsigned char 
  2607 ;;  counter         1    4[COMRAM] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  2    0[COMRAM] int 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2617 ;;      Params:         4       0       0       0       0       0       0       0       0
  2618 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2620 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2621 ;;Total ram usage:        6 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text1
  2632   00662A                     __ptext1:
  2633                           	callstack 0
  2634   00662A                     ___awmod:
  2635                           	callstack 29
  2636   00662A  6A06               	clrf	___awmod@sign^0,c
  2637   00662C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2638   00662E  EF1D  F033         	goto	u10600
  2639   006632  EF1B  F033         	goto	u10601
  2640   006636                     u10601:
  2641   006636  EF23  F033         	goto	l8004
  2642   00663A                     u10600:
  2643   00663A  6C01               	negf	___awmod@dividend^0,c
  2644   00663C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2645   00663E  B0D8               	btfsc	status,0,c
  2646   006640  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2647   006642  0E01               	movlw	1
  2648   006644  6E06               	movwf	___awmod@sign^0,c
  2649   006646                     l8004:
  2650   006646  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2651   006648  EF2A  F033         	goto	u10610
  2652   00664C  EF28  F033         	goto	u10611
  2653   006650                     u10611:
  2654   006650  EF2E  F033         	goto	l8008
  2655   006654                     u10610:
  2656   006654  6C03               	negf	___awmod@divisor^0,c
  2657   006656  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2658   006658  B0D8               	btfsc	status,0,c
  2659   00665A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2660   00665C                     l8008:
  2661   00665C  5003               	movf	___awmod@divisor^0,w,c
  2662   00665E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2663   006660  B4D8               	btfsc	status,2,c
  2664   006662  EF35  F033         	goto	u10621
  2665   006666  EF37  F033         	goto	u10620
  2666   00666A                     u10621:
  2667   00666A  EF5B  F033         	goto	l8024
  2668   00666E                     u10620:
  2669   00666E  0E01               	movlw	1
  2670   006670  6E05               	movwf	___awmod@counter^0,c
  2671   006672  EF3F  F033         	goto	l8014
  2672   006676                     l8012:
  2673   006676  90D8               	bcf	status,0,c
  2674   006678  3603               	rlcf	___awmod@divisor^0,f,c
  2675   00667A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2676   00667C  2A05               	incf	___awmod@counter^0,f,c
  2677   00667E                     l8014:
  2678   00667E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2679   006680  EF44  F033         	goto	u10631
  2680   006684  EF46  F033         	goto	u10630
  2681   006688                     u10631:
  2682   006688  EF3B  F033         	goto	l8012
  2683   00668C                     u10630:
  2684   00668C                     l8016:
  2685   00668C  5003               	movf	___awmod@divisor^0,w,c
  2686   00668E  5C01               	subwf	___awmod@dividend^0,w,c
  2687   006690  5004               	movf	(___awmod@divisor+1)^0,w,c
  2688   006692  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2689   006694  A0D8               	btfss	status,0,c
  2690   006696  EF4F  F033         	goto	u10641
  2691   00669A  EF51  F033         	goto	u10640
  2692   00669E                     u10641:
  2693   00669E  EF55  F033         	goto	l8020
  2694   0066A2                     u10640:
  2695   0066A2  5003               	movf	___awmod@divisor^0,w,c
  2696   0066A4  5E01               	subwf	___awmod@dividend^0,f,c
  2697   0066A6  5004               	movf	(___awmod@divisor+1)^0,w,c
  2698   0066A8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2699   0066AA                     l8020:
  2700   0066AA  90D8               	bcf	status,0,c
  2701   0066AC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2702   0066AE  3203               	rrcf	___awmod@divisor^0,f,c
  2703   0066B0  2E05               	decfsz	___awmod@counter^0,f,c
  2704   0066B2  EF46  F033         	goto	l8016
  2705   0066B6                     l8024:
  2706   0066B6  5006               	movf	___awmod@sign^0,w,c
  2707   0066B8  B4D8               	btfsc	status,2,c
  2708   0066BA  EF61  F033         	goto	u10651
  2709   0066BE  EF63  F033         	goto	u10650
  2710   0066C2                     u10651:
  2711   0066C2  EF67  F033         	goto	l8028
  2712   0066C6                     u10650:
  2713   0066C6  6C01               	negf	___awmod@dividend^0,c
  2714   0066C8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2715   0066CA  B0D8               	btfsc	status,0,c
  2716   0066CC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2717   0066CE                     l8028:
  2718   0066CE  C001  F001         	movff	___awmod@dividend,?___awmod
  2719   0066D2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2720   0066D6  0012               	return		;funcret
  2721   0066D8                     __end_of___awmod:
  2722                           	callstack 0
  2723                           
  2724 ;; *************** function _Update_Actuators *****************
  2725 ;; Defined at:
  2726 ;;		line 363 in file "newmain.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;		None
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2740 ;;      Params:         0       0       0       0       0       0       0       0       0
  2741 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2742 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2743 ;;      Totals:         1       4       0       0       0       0       0       0       0
  2744 ;;Total ram usage:        5 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 2
  2747 ;; This function calls:
  2748 ;;		___flge
  2749 ;; This function is called by:
  2750 ;;		_main
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text2
  2755   005A40                     __ptext2:
  2756                           	callstack 0
  2757   005A40                     _Update_Actuators:
  2758                           	callstack 28
  2759   005A40                     
  2760                           ;newmain.c: 365:     fire_alarm = flame_detected ||
  2761   005A40  0E01               	movlw	1
  2762   005A42  6E5D               	movwf	_Update_Actuators$751^0,c
  2763   005A44  0103               	movlb	3	; () banked
  2764   005A46  5159               	movf	_flame_detected& (0+255),w,b
  2765   005A48  A4D8               	btfss	status,2,c
  2766   005A4A  EF29  F02D         	goto	u10351
  2767   005A4E  EF2B  F02D         	goto	u10350
  2768   005A52                     u10351:
  2769   005A52  EF61  F02D         	goto	l237
  2770   005A56                     u10350:
  2771   005A56                     
  2772                           ; BSR set to: 3
  2773   005A56  C344  F060         	movff	_temperature,___flge@ff1
  2774   005A5A  C345  F061         	movff	_temperature+1,___flge@ff1+1
  2775   005A5E  C346  F062         	movff	_temperature+2,___flge@ff1+2
  2776   005A62  C347  F063         	movff	_temperature+3,___flge@ff1+3
  2777   005A66  0E00               	movlw	0
  2778   005A68  0100               	movlb	0	; () banked
  2779   005A6A  6F64               	movwf	___flge@ff2& (0+255),b
  2780   005A6C  0E00               	movlw	0
  2781   005A6E  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2782   005A70  0E20               	movlw	32
  2783   005A72  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2784   005A74  0E42               	movlw	66
  2785   005A76  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2786   005A78  EC56  F02F         	call	___flge	;wreg free
  2787   005A7C  0100               	movlb	0	; () banked
  2788   005A7E  B0D8               	btfsc	status,0,c
  2789   005A80  EF44  F02D         	goto	u10361
  2790   005A84  EF46  F02D         	goto	u10360
  2791   005A88                     u10361:
  2792   005A88  EF61  F02D         	goto	l237
  2793   005A8C                     u10360:
  2794   005A8C                     
  2795                           ; BSR set to: 0
  2796   005A8C  C338  F060         	movff	_co_ppm,___flge@ff1
  2797   005A90  C339  F061         	movff	_co_ppm+1,___flge@ff1+1
  2798   005A94  C33A  F062         	movff	_co_ppm+2,___flge@ff1+2
  2799   005A98  C33B  F063         	movff	_co_ppm+3,___flge@ff1+3
  2800   005A9C  0E00               	movlw	0
  2801   005A9E  6F64               	movwf	___flge@ff2& (0+255),b
  2802   005AA0  0E00               	movlw	0
  2803   005AA2  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2804   005AA4  0E48               	movlw	72
  2805   005AA6  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2806   005AA8  0E42               	movlw	66
  2807   005AAA  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2808   005AAC  EC56  F02F         	call	___flge	;wreg free
  2809   005AB0  0100               	movlb	0	; () banked
  2810   005AB2  B0D8               	btfsc	status,0,c
  2811   005AB4  EF5E  F02D         	goto	u10371
  2812   005AB8  EF60  F02D         	goto	u10370
  2813   005ABC                     u10371:
  2814   005ABC  EF61  F02D         	goto	l237
  2815   005AC0                     u10370:
  2816   005AC0                     
  2817                           ; BSR set to: 0
  2818   005AC0  6A5D               	clrf	_Update_Actuators$751^0,c
  2819   005AC2                     l237:
  2820   005AC2  C05D  F356         	movff	_Update_Actuators$751,_fire_alarm
  2821   005AC6                     
  2822                           ;newmain.c: 369:     if(fire_alarm) {
  2823   005AC6  0103               	movlb	3	; () banked
  2824   005AC8  5156               	movf	_fire_alarm& (0+255),w,b
  2825   005ACA  B4D8               	btfsc	status,2,c
  2826   005ACC  EF6A  F02D         	goto	u10381
  2827   005AD0  EF6C  F02D         	goto	u10380
  2828   005AD4                     u10381:
  2829   005AD4  EFB3  F02D         	goto	l238
  2830   005AD8                     u10380:
  2831   005AD8                     
  2832                           ; BSR set to: 3
  2833                           ;newmain.c: 370:         PORTBbits.RB0 = 1;
  2834   005AD8  8081               	bsf	129,0,c	;volatile
  2835   005ADA                     
  2836                           ; BSR set to: 3
  2837                           ;newmain.c: 371:         pump_active = 1;
  2838   005ADA  0E01               	movlw	1
  2839   005ADC  6F58               	movwf	_pump_active& (0+255),b
  2840   005ADE                     
  2841                           ; BSR set to: 3
  2842                           ;newmain.c: 374:         static unsigned long last_blink = 0;;newmain.c: 375:         if
      +                          (system_millis - last_blink >= 500) {
  2843   005ADE  5108               	movf	Update_Actuators@last_blink& (0+255),w,b
  2844   005AE0  0102               	movlb	2	; () banked
  2845   005AE2  5DFA               	subwf	_system_millis& (0+255),w,b
  2846   005AE4  0100               	movlb	0	; () banked
  2847   005AE6  6F68               	movwf	??_Update_Actuators& (0+255),b
  2848   005AE8  0103               	movlb	3	; () banked
  2849   005AEA  5109               	movf	(Update_Actuators@last_blink+1)& (0+255),w,b
  2850   005AEC  0102               	movlb	2	; () banked
  2851   005AEE  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  2852   005AF0  0100               	movlb	0	; () banked
  2853   005AF2  6F69               	movwf	(??_Update_Actuators+1)& (0+255),b
  2854   005AF4  0103               	movlb	3	; () banked
  2855   005AF6  510A               	movf	(Update_Actuators@last_blink+2)& (0+255),w,b
  2856   005AF8  0102               	movlb	2	; () banked
  2857   005AFA  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  2858   005AFC  0100               	movlb	0	; () banked
  2859   005AFE  6F6A               	movwf	(??_Update_Actuators+2)& (0+255),b
  2860   005B00  0103               	movlb	3	; () banked
  2861   005B02  510B               	movf	(Update_Actuators@last_blink+3)& (0+255),w,b
  2862   005B04  0102               	movlb	2	; () banked
  2863   005B06  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  2864   005B08  0100               	movlb	0	; () banked
  2865   005B0A  6F6B               	movwf	(??_Update_Actuators+3)& (0+255),b
  2866   005B0C  516B               	movf	(??_Update_Actuators+3)& (0+255),w,b
  2867   005B0E  116A               	iorwf	(??_Update_Actuators+2)& (0+255),w,b
  2868   005B10  E10B               	bnz	u10390
  2869   005B12  0EF4               	movlw	244
  2870   005B14  5D68               	subwf	??_Update_Actuators& (0+255),w,b
  2871   005B16  0E01               	movlw	1
  2872   005B18  5969               	subwfb	(??_Update_Actuators+1)& (0+255),w,b
  2873   005B1A  A0D8               	btfss	status,0,c
  2874   005B1C  EF92  F02D         	goto	u10391
  2875   005B20  EF94  F02D         	goto	u10390
  2876   005B24                     u10391:
  2877   005B24  EFAE  F02D         	goto	l7906
  2878   005B28                     u10390:
  2879   005B28                     
  2880                           ; BSR set to: 0
  2881                           ;newmain.c: 376:             PORTBbits.RB5 = !PORTBbits.RB5;
  2882   005B28  AA81               	btfss	129,5,c	;volatile
  2883   005B2A  EF99  F02D         	goto	u10401
  2884   005B2E  EF9D  F02D         	goto	u10400
  2885   005B32                     u10401:
  2886   005B32  6B68               	clrf	??_Update_Actuators& (0+255),b
  2887   005B34  2B68               	incf	??_Update_Actuators& (0+255),f,b
  2888   005B36  EF9F  F02D         	goto	u10418
  2889   005B3A                     u10400:
  2890   005B3A  0100               	movlb	0	; () banked
  2891   005B3C  6B68               	clrf	??_Update_Actuators& (0+255),b
  2892   005B3E                     u10418:
  2893   005B3E  3B68               	swapf	??_Update_Actuators& (0+255),f,b
  2894   005B40  4768               	rlncf	??_Update_Actuators& (0+255),f,b
  2895   005B42  5081               	movf	129,w,c	;volatile
  2896   005B44  1968               	xorwf	??_Update_Actuators& (0+255),w,b
  2897   005B46  0BDF               	andlw	-33
  2898   005B48  1968               	xorwf	??_Update_Actuators& (0+255),w,b
  2899   005B4A  6E81               	movwf	129,c	;volatile
  2900   005B4C                     
  2901                           ; BSR set to: 0
  2902                           ;newmain.c: 377:             last_blink = system_millis;
  2903   005B4C  C2FA  F308         	movff	_system_millis,Update_Actuators@last_blink
  2904   005B50  C2FB  F309         	movff	_system_millis+1,Update_Actuators@last_blink+1
  2905   005B54  C2FC  F30A         	movff	_system_millis+2,Update_Actuators@last_blink+2
  2906   005B58  C2FD  F30B         	movff	_system_millis+3,Update_Actuators@last_blink+3
  2907   005B5C                     l7906:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;newmain.c: 379:         alarm_active = 1;
  2911   005B5C  0E01               	movlw	1
  2912   005B5E  0103               	movlb	3	; () banked
  2913   005B60  6F57               	movwf	_alarm_active& (0+255),b
  2914                           
  2915                           ;newmain.c: 380:     } else {
  2916   005B62  EFB7  F02D         	goto	l243
  2917   005B66                     l238:
  2918                           
  2919                           ; BSR set to: 3
  2920                           ;newmain.c: 381:         PORTBbits.RB0 = 0;
  2921   005B66  9081               	bcf	129,0,c	;volatile
  2922                           
  2923                           ;newmain.c: 382:         pump_active = 0;
  2924   005B68  6B58               	clrf	_pump_active& (0+255),b
  2925                           
  2926                           ;newmain.c: 383:         PORTBbits.RB5 = 1;
  2927   005B6A  8A81               	bsf	129,5,c	;volatile
  2928                           
  2929                           ;newmain.c: 384:         alarm_active = 0;
  2930   005B6C  6B57               	clrf	_alarm_active& (0+255),b
  2931   005B6E                     l243:
  2932                           
  2933                           ; BSR set to: 3
  2934   005B6E  0012               	return		;funcret
  2935   005B70                     __end_of_Update_Actuators:
  2936                           	callstack 0
  2937                           
  2938 ;; *************** function _UART_Init *****************
  2939 ;; Defined at:
  2940 ;;		line 427 in file "newmain.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2957 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used: 1
  2960 ;; Hardware stack levels required when called: 1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_main
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text3
  2969   006DE6                     __ptext3:
  2970                           	callstack 0
  2971   006DE6                     _UART_Init:
  2972                           	callstack 29
  2973   006DE6                     
  2974                           ;newmain.c: 428:     TRISC6 = 0;
  2975   006DE6  9C94               	bcf	3988,6,c	;volatile
  2976                           
  2977                           ;newmain.c: 429:     TRISC7 = 1;
  2978   006DE8  8E94               	bsf	3988,7,c	;volatile
  2979   006DEA                     
  2980                           ;newmain.c: 430:     SPBRG = 51;
  2981   006DEA  0E33               	movlw	51
  2982   006DEC  6EAF               	movwf	175,c	;volatile
  2983   006DEE                     
  2984                           ;newmain.c: 431:     TXSTAbits.BRGH = 1;
  2985   006DEE  84AC               	bsf	172,2,c	;volatile
  2986   006DF0                     
  2987                           ;newmain.c: 432:     TXSTAbits.SYNC = 0;
  2988   006DF0  98AC               	bcf	172,4,c	;volatile
  2989   006DF2                     
  2990                           ;newmain.c: 433:     TXSTAbits.TXEN = 1;
  2991   006DF2  8AAC               	bsf	172,5,c	;volatile
  2992   006DF4                     
  2993                           ;newmain.c: 434:     RCSTAbits.SPEN = 1;
  2994   006DF4  8EAB               	bsf	171,7,c	;volatile
  2995   006DF6                     
  2996                           ;newmain.c: 435:     RCSTAbits.CREN = 1;
  2997   006DF6  88AB               	bsf	171,4,c	;volatile
  2998   006DF8  0012               	return		;funcret
  2999   006DFA                     __end_of_UART_Init:
  3000                           	callstack 0
  3001                           
  3002 ;; *************** function _Send_Data *****************
  3003 ;; Defined at:
  3004 ;;		line 388 in file "newmain.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  i               2  200[BANK1 ] int 
  3009 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0
  3020 ;;      Locals:         0       0     202       0       0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3022 ;;      Totals:         0       0     202       0       0       0       0       0       0
  3023 ;;Total ram usage:      202 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 9
  3026 ;; This function calls:
  3027 ;;		_sprintf
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text4
  3034   0063A0                     __ptext4:
  3035                           	callstack 0
  3036   0063A0                     _Send_Data:
  3037                           	callstack 21
  3038   0063A0                     
  3039                           ;newmain.c: 389:     char buffer[200];;newmain.c: 390:     sprintf(buffer,
  3040   0063A0  0E00               	movlw	low Send_Data@buffer
  3041   0063A2  0100               	movlb	0	; () banked
  3042   0063A4  6FB0               	movwf	sprintf@s& (0+255),b
  3043   0063A6  0E01               	movlw	high Send_Data@buffer
  3044   0063A8  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3045   0063AA  0ED1               	movlw	low STR_17
  3046   0063AC  6FB2               	movwf	sprintf@fmt& (0+255),b
  3047   0063AE  0E7E               	movlw	high STR_17
  3048   0063B0  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3049   0063B2  C344  F0B4         	movff	_temperature,?_sprintf+4
  3050   0063B6  C345  F0B5         	movff	_temperature+1,?_sprintf+5
  3051   0063BA  C346  F0B6         	movff	_temperature+2,?_sprintf+6
  3052   0063BE  C347  F0B7         	movff	_temperature+3,?_sprintf+7
  3053   0063C2  C359  F0B8         	movff	_flame_detected,?_sprintf+8
  3054   0063C6  6BB9               	clrf	(?_sprintf+9)& (0+255),b
  3055   0063C8  C340  F0BA         	movff	_flame_intensity,?_sprintf+10
  3056   0063CC  C341  F0BB         	movff	_flame_intensity+1,?_sprintf+11
  3057   0063D0  C342  F0BC         	movff	_flame_intensity+2,?_sprintf+12
  3058   0063D4  C343  F0BD         	movff	_flame_intensity+3,?_sprintf+13
  3059   0063D8  C338  F0BE         	movff	_co_ppm,?_sprintf+14
  3060   0063DC  C339  F0BF         	movff	_co_ppm+1,?_sprintf+15
  3061   0063E0  C33A  F0C0         	movff	_co_ppm+2,?_sprintf+16
  3062   0063E4  C33B  F0C1         	movff	_co_ppm+3,?_sprintf+17
  3063   0063E8  C334  F0C2         	movff	_flow_rate,?_sprintf+18
  3064   0063EC  C335  F0C3         	movff	_flow_rate+1,?_sprintf+19
  3065   0063F0  C336  F0C4         	movff	_flow_rate+2,?_sprintf+20
  3066   0063F4  C337  F0C5         	movff	_flow_rate+3,?_sprintf+21
  3067   0063F8  C330  F0C6         	movff	_total_flow,?_sprintf+22
  3068   0063FC  C331  F0C7         	movff	_total_flow+1,?_sprintf+23
  3069   006400  C332  F0C8         	movff	_total_flow+2,?_sprintf+24
  3070   006404  C333  F0C9         	movff	_total_flow+3,?_sprintf+25
  3071   006408  C358  F0CA         	movff	_pump_active,?_sprintf+26
  3072   00640C  6BCB               	clrf	(?_sprintf+27)& (0+255),b
  3073   00640E  C357  F0CC         	movff	_alarm_active,?_sprintf+28
  3074   006412  6BCD               	clrf	(?_sprintf+29)& (0+255),b
  3075   006414  C356  F0CE         	movff	_fire_alarm,?_sprintf+30
  3076   006418  6BCF               	clrf	(?_sprintf+31)& (0+255),b
  3077   00641A  C05E  F0D0         	movff	_trigger_test,?_sprintf+32
  3078   00641E  6BD1               	clrf	(?_sprintf+33)& (0+255),b
  3079   006420  C353  F0D2         	movff	_shutdown_system,?_sprintf+34
  3080   006424  6BD3               	clrf	(?_sprintf+35)& (0+255),b
  3081   006426  EC24  F036         	call	_sprintf	;wreg free
  3082   00642A                     l246:
  3083   00642A  A2AC               	btfss	172,1,c	;volatile
  3084   00642C  EF1A  F032         	goto	u10571
  3085   006430  EF1C  F032         	goto	u10570
  3086   006434                     u10571:
  3087   006434  EF15  F032         	goto	l246
  3088   006438                     u10570:
  3089   006438                     
  3090                           ;newmain.c: 396:     for(int i = 0; buffer[i]; i++) {
  3091   006438  0E00               	movlw	0
  3092   00643A  0101               	movlb	1	; () banked
  3093   00643C  6FC9               	movwf	(Send_Data@i+1)& (0+255),b
  3094   00643E  0E00               	movlw	0
  3095   006440  6FC8               	movwf	Send_Data@i& (0+255),b
  3096   006442  EF35  F032         	goto	l7994
  3097   006446                     l7990:
  3098                           
  3099                           ; BSR set to: 1
  3100                           ;newmain.c: 397:         TXREG = buffer[i];
  3101   006446  0E00               	movlw	low Send_Data@buffer
  3102   006448  25C8               	addwf	Send_Data@i& (0+255),w,b
  3103   00644A  6ED9               	movwf	fsr2l,c
  3104   00644C  0E01               	movlw	high Send_Data@buffer
  3105   00644E  21C9               	addwfc	(Send_Data@i+1)& (0+255),w,b
  3106   006450  6EDA               	movwf	fsr2h,c
  3107   006452  50DF               	movf	indf2,w,c
  3108   006454  6EAD               	movwf	173,c	;volatile
  3109   006456                     l251:
  3110   006456  A2AC               	btfss	172,1,c	;volatile
  3111   006458  EF30  F032         	goto	u10581
  3112   00645C  EF32  F032         	goto	u10580
  3113   006460                     u10581:
  3114   006460  EF2B  F032         	goto	l251
  3115   006464                     u10580:
  3116   006464                     
  3117                           ;newmain.c: 399:     }
  3118   006464  0101               	movlb	1	; () banked
  3119   006466  4BC8               	infsnz	Send_Data@i& (0+255),f,b
  3120   006468  2BC9               	incf	(Send_Data@i+1)& (0+255),f,b
  3121   00646A                     l7994:
  3122                           
  3123                           ; BSR set to: 1
  3124   00646A  0E00               	movlw	low Send_Data@buffer
  3125   00646C  25C8               	addwf	Send_Data@i& (0+255),w,b
  3126   00646E  6ED9               	movwf	fsr2l,c
  3127   006470  0E01               	movlw	high Send_Data@buffer
  3128   006472  21C9               	addwfc	(Send_Data@i+1)& (0+255),w,b
  3129   006474  6EDA               	movwf	fsr2h,c
  3130   006476  50DF               	movf	indf2,w,c
  3131   006478  A4D8               	btfss	status,2,c
  3132   00647A  EF41  F032         	goto	u10591
  3133   00647E  EF43  F032         	goto	u10590
  3134   006482                     u10591:
  3135   006482  EF23  F032         	goto	l7990
  3136   006486                     u10590:
  3137   006486                     
  3138                           ; BSR set to: 1
  3139   006486  0012               	return		;funcret
  3140   006488                     __end_of_Send_Data:
  3141                           	callstack 0
  3142                           
  3143 ;; *************** function _Read_Sensors *****************
  3144 ;; Defined at:
  3145 ;;		line 297 in file "newmain.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  pulses          2   59[BANK0 ] unsigned int 
  3150 ;;  raw_co          4   73[BANK0 ] float 
  3151 ;;  Rs              4   69[BANK0 ] float 
  3152 ;;  rs_ro_ratio     4   65[BANK0 ] float 
  3153 ;;  mq2_voltage     4   61[BANK0 ] float 
  3154 ;;  temp_factor     4   37[BANK0 ] float 
  3155 ;;  flame_voltag    4   33[BANK0 ] float 
  3156 ;;  raw_temp        4   29[BANK0 ] float 
  3157 ;;  mq2_adc         2   57[BANK0 ] unsigned int 
  3158 ;;  flame_adc       2   55[BANK0 ] unsigned int 
  3159 ;;  temp_adc        2   53[BANK0 ] unsigned int 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3169 ;;      Params:         0       0       0       0       0       0       0       0       0
  3170 ;;      Locals:         0      48       0       0       0       0       0       0       0
  3171 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3172 ;;      Totals:         0      52       0       0       0       0       0       0       0
  3173 ;;Total ram usage:       52 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 4
  3176 ;; This function calls:
  3177 ;;		_ADC_Read
  3178 ;;		_Apply_Filter
  3179 ;;		___fladd
  3180 ;;		___fldiv
  3181 ;;		___flge
  3182 ;;		___flmul
  3183 ;;		___flsub
  3184 ;;		___xxtofl
  3185 ;;		_powf
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text5
  3192   002EB8                     __ptext5:
  3193                           	callstack 0
  3194   002EB8                     _Read_Sensors:
  3195                           	callstack 26
  3196   002EB8                     
  3197                           ;newmain.c: 299:     unsigned int temp_adc = ADC_Read(0);
  3198   002EB8  0E00               	movlw	0
  3199   002EBA  EC46  F036         	call	_ADC_Read
  3200   002EBE  C001  F095         	movff	?_ADC_Read,Read_Sensors@temp_adc
  3201   002EC2  C002  F096         	movff	?_ADC_Read+1,Read_Sensors@temp_adc+1
  3202   002EC6                     
  3203                           ;newmain.c: 300:     float raw_temp = (temp_adc * 5.0 / 1024.0) / 0.01;
  3204   002EC6  0E00               	movlw	0
  3205   002EC8  6E2C               	movwf	___fldiv@a^0,c
  3206   002ECA  0E00               	movlw	0
  3207   002ECC  6E2D               	movwf	(___fldiv@a+1)^0,c
  3208   002ECE  0E80               	movlw	128
  3209   002ED0  6E2E               	movwf	(___fldiv@a+2)^0,c
  3210   002ED2  0E44               	movlw	68
  3211   002ED4  6E2F               	movwf	(___fldiv@a+3)^0,c
  3212   002ED6  0E00               	movlw	0
  3213   002ED8  6E13               	movwf	___flmul@a^0,c
  3214   002EDA  0E00               	movlw	0
  3215   002EDC  6E14               	movwf	(___flmul@a+1)^0,c
  3216   002EDE  0EA0               	movlw	160
  3217   002EE0  6E15               	movwf	(___flmul@a+2)^0,c
  3218   002EE2  0E40               	movlw	64
  3219   002EE4  6E16               	movwf	(___flmul@a+3)^0,c
  3220   002EE6  C095  F001         	movff	Read_Sensors@temp_adc,___xxtofl@val
  3221   002EEA  C096  F002         	movff	Read_Sensors@temp_adc+1,___xxtofl@val+1
  3222   002EEE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3223   002EF0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3224   002EF2  0E00               	movlw	0
  3225   002EF4  ECBA  F02A         	call	___xxtofl
  3226   002EF8  C001  F00F         	movff	?___xxtofl,___flmul@b
  3227   002EFC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3228   002F00  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3229   002F04  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3230   002F08  ECC6  F01F         	call	___flmul	;wreg free
  3231   002F0C  C00F  F028         	movff	?___flmul,___fldiv@b
  3232   002F10  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3233   002F14  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3234   002F18  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3235   002F1C  ECC8  F023         	call	___fldiv	;wreg free
  3236   002F20  C028  F089         	movff	?___fldiv,_Read_Sensors$1834
  3237   002F24  C029  F08A         	movff	?___fldiv+1,_Read_Sensors$1834+1
  3238   002F28  C02A  F08B         	movff	?___fldiv+2,_Read_Sensors$1834+2
  3239   002F2C  C02B  F08C         	movff	?___fldiv+3,_Read_Sensors$1834+3
  3240   002F30                     
  3241                           ;newmain.c: 300:     float raw_temp = (temp_adc * 5.0 / 1024.0) / 0.01;
  3242   002F30  C089  F028         	movff	_Read_Sensors$1834,___fldiv@b
  3243   002F34  C08A  F029         	movff	_Read_Sensors$1834+1,___fldiv@b+1
  3244   002F38  C08B  F02A         	movff	_Read_Sensors$1834+2,___fldiv@b+2
  3245   002F3C  C08C  F02B         	movff	_Read_Sensors$1834+3,___fldiv@b+3
  3246   002F40  0E0A               	movlw	10
  3247   002F42  6E2C               	movwf	___fldiv@a^0,c
  3248   002F44  0ED7               	movlw	215
  3249   002F46  6E2D               	movwf	(___fldiv@a+1)^0,c
  3250   002F48  0E23               	movlw	35
  3251   002F4A  6E2E               	movwf	(___fldiv@a+2)^0,c
  3252   002F4C  0E3C               	movlw	60
  3253   002F4E  6E2F               	movwf	(___fldiv@a+3)^0,c
  3254   002F50  ECC8  F023         	call	___fldiv	;wreg free
  3255   002F54  C028  F07D         	movff	?___fldiv,Read_Sensors@raw_temp
  3256   002F58  C029  F07E         	movff	?___fldiv+1,Read_Sensors@raw_temp+1
  3257   002F5C  C02A  F07F         	movff	?___fldiv+2,Read_Sensors@raw_temp+2
  3258   002F60  C02B  F080         	movff	?___fldiv+3,Read_Sensors@raw_temp+3
  3259   002F64                     
  3260                           ;newmain.c: 301:     temperature = Apply_Filter(raw_temp, temp_samples);
  3261   002F64  C07D  F051         	movff	Read_Sensors@raw_temp,Apply_Filter@new_value
  3262   002F68  C07E  F052         	movff	Read_Sensors@raw_temp+1,Apply_Filter@new_value+1
  3263   002F6C  C07F  F053         	movff	Read_Sensors@raw_temp+2,Apply_Filter@new_value+2
  3264   002F70  C080  F054         	movff	Read_Sensors@raw_temp+3,Apply_Filter@new_value+3
  3265   002F74  0ED6               	movlw	low _temp_samples
  3266   002F76  6E55               	movwf	Apply_Filter@samples^0,c
  3267   002F78  0E03               	movlw	high _temp_samples
  3268   002F7A  6E56               	movwf	(Apply_Filter@samples+1)^0,c
  3269   002F7C  EC44  F032         	call	_Apply_Filter	;wreg free
  3270   002F80  C051  F344         	movff	?_Apply_Filter,_temperature
  3271   002F84  C052  F345         	movff	?_Apply_Filter+1,_temperature+1
  3272   002F88  C053  F346         	movff	?_Apply_Filter+2,_temperature+2
  3273   002F8C  C054  F347         	movff	?_Apply_Filter+3,_temperature+3
  3274   002F90                     
  3275                           ;newmain.c: 304:     unsigned int flame_adc = ADC_Read(1);
  3276   002F90  0E01               	movlw	1
  3277   002F92  EC46  F036         	call	_ADC_Read
  3278   002F96  C001  F097         	movff	?_ADC_Read,Read_Sensors@flame_adc
  3279   002F9A  C002  F098         	movff	?_ADC_Read+1,Read_Sensors@flame_adc+1
  3280   002F9E                     
  3281                           ;newmain.c: 305:     float flame_voltage = (flame_adc * 5.0) / 1024.0;
  3282   002F9E  0E00               	movlw	0
  3283   002FA0  6E13               	movwf	___flmul@a^0,c
  3284   002FA2  0E00               	movlw	0
  3285   002FA4  6E14               	movwf	(___flmul@a+1)^0,c
  3286   002FA6  0EA0               	movlw	160
  3287   002FA8  6E15               	movwf	(___flmul@a+2)^0,c
  3288   002FAA  0E40               	movlw	64
  3289   002FAC  6E16               	movwf	(___flmul@a+3)^0,c
  3290   002FAE  C097  F001         	movff	Read_Sensors@flame_adc,___xxtofl@val
  3291   002FB2  C098  F002         	movff	Read_Sensors@flame_adc+1,___xxtofl@val+1
  3292   002FB6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3293   002FB8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3294   002FBA  0E00               	movlw	0
  3295   002FBC  ECBA  F02A         	call	___xxtofl
  3296   002FC0  C001  F00F         	movff	?___xxtofl,___flmul@b
  3297   002FC4  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3298   002FC8  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3299   002FCC  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3300   002FD0  ECC6  F01F         	call	___flmul	;wreg free
  3301   002FD4  C00F  F028         	movff	?___flmul,___fldiv@b
  3302   002FD8  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3303   002FDC  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3304   002FE0  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3305   002FE4  0E00               	movlw	0
  3306   002FE6  6E2C               	movwf	___fldiv@a^0,c
  3307   002FE8  0E00               	movlw	0
  3308   002FEA  6E2D               	movwf	(___fldiv@a+1)^0,c
  3309   002FEC  0E80               	movlw	128
  3310   002FEE  6E2E               	movwf	(___fldiv@a+2)^0,c
  3311   002FF0  0E44               	movlw	68
  3312   002FF2  6E2F               	movwf	(___fldiv@a+3)^0,c
  3313   002FF4  ECC8  F023         	call	___fldiv	;wreg free
  3314   002FF8  C028  F081         	movff	?___fldiv,Read_Sensors@flame_voltage
  3315   002FFC  C029  F082         	movff	?___fldiv+1,Read_Sensors@flame_voltage+1
  3316   003000  C02A  F083         	movff	?___fldiv+2,Read_Sensors@flame_voltage+2
  3317   003004  C02B  F084         	movff	?___fldiv+3,Read_Sensors@flame_voltage+3
  3318   003008                     
  3319                           ;newmain.c: 306:     flame_intensity = (flame_base_voltage - flame_voltage) * 100.0 / fl
      +                          ame_base_voltage;
  3320   003008  0E00               	movlw	0
  3321   00300A  6E13               	movwf	___flmul@a^0,c
  3322   00300C  0E00               	movlw	0
  3323   00300E  6E14               	movwf	(___flmul@a+1)^0,c
  3324   003010  0EC8               	movlw	200
  3325   003012  6E15               	movwf	(___flmul@a+2)^0,c
  3326   003014  0E42               	movlw	66
  3327   003016  6E16               	movwf	(___flmul@a+3)^0,c
  3328   003018  C081  F055         	movff	Read_Sensors@flame_voltage,___flsub@a
  3329   00301C  C082  F056         	movff	Read_Sensors@flame_voltage+1,___flsub@a+1
  3330   003020  C083  F057         	movff	Read_Sensors@flame_voltage+2,___flsub@a+2
  3331   003024  C084  F058         	movff	Read_Sensors@flame_voltage+3,___flsub@a+3
  3332   003028  C33C  F051         	movff	_flame_base_voltage,___flsub@b
  3333   00302C  C33D  F052         	movff	_flame_base_voltage+1,___flsub@b+1
  3334   003030  C33E  F053         	movff	_flame_base_voltage+2,___flsub@b+2
  3335   003034  C33F  F054         	movff	_flame_base_voltage+3,___flsub@b+3
  3336   003038  EC01  F036         	call	___flsub	;wreg free
  3337   00303C  C051  F00F         	movff	?___flsub,___flmul@b
  3338   003040  C052  F010         	movff	?___flsub+1,___flmul@b+1
  3339   003044  C053  F011         	movff	?___flsub+2,___flmul@b+2
  3340   003048  C054  F012         	movff	?___flsub+3,___flmul@b+3
  3341   00304C  ECC6  F01F         	call	___flmul	;wreg free
  3342   003050  C00F  F028         	movff	?___flmul,___fldiv@b
  3343   003054  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3344   003058  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3345   00305C  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3346   003060  C33C  F02C         	movff	_flame_base_voltage,___fldiv@a
  3347   003064  C33D  F02D         	movff	_flame_base_voltage+1,___fldiv@a+1
  3348   003068  C33E  F02E         	movff	_flame_base_voltage+2,___fldiv@a+2
  3349   00306C  C33F  F02F         	movff	_flame_base_voltage+3,___fldiv@a+3
  3350   003070  ECC8  F023         	call	___fldiv	;wreg free
  3351   003074  C028  F340         	movff	?___fldiv,_flame_intensity
  3352   003078  C029  F341         	movff	?___fldiv+1,_flame_intensity+1
  3353   00307C  C02A  F342         	movff	?___fldiv+2,_flame_intensity+2
  3354   003080  C02B  F343         	movff	?___fldiv+3,_flame_intensity+3
  3355   003084                     
  3356                           ;newmain.c: 308:     if(flame_intensity < 0) flame_intensity = 0;
  3357   003084  0103               	movlb	3	; () banked
  3358   003086  BF43               	btfsc	(_flame_intensity+3)& (0+255),7,b
  3359   003088  EF4A  F018         	goto	u10250
  3360   00308C  EF48  F018         	goto	u10251
  3361   003090                     u10251:
  3362   003090  EF52  F018         	goto	l7830
  3363   003094                     u10250:
  3364   003094                     
  3365                           ; BSR set to: 3
  3366   003094  0E00               	movlw	0
  3367   003096  6F40               	movwf	_flame_intensity& (0+255),b
  3368   003098  0E00               	movlw	0
  3369   00309A  6F41               	movwf	(_flame_intensity+1)& (0+255),b
  3370   00309C  0E00               	movlw	0
  3371   00309E  6F42               	movwf	(_flame_intensity+2)& (0+255),b
  3372   0030A0  0E00               	movlw	0
  3373   0030A2  6F43               	movwf	(_flame_intensity+3)& (0+255),b
  3374   0030A4                     l7830:
  3375                           
  3376                           ; BSR set to: 3
  3377                           ;newmain.c: 309:     if(flame_intensity > 100) flame_intensity = 100;
  3378   0030A4  0E00               	movlw	0
  3379   0030A6  0100               	movlb	0	; () banked
  3380   0030A8  6F60               	movwf	___flge@ff1& (0+255),b
  3381   0030AA  0E00               	movlw	0
  3382   0030AC  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3383   0030AE  0EC8               	movlw	200
  3384   0030B0  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3385   0030B2  0E42               	movlw	66
  3386   0030B4  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3387   0030B6  C340  F064         	movff	_flame_intensity,___flge@ff2
  3388   0030BA  C341  F065         	movff	_flame_intensity+1,___flge@ff2+1
  3389   0030BE  C342  F066         	movff	_flame_intensity+2,___flge@ff2+2
  3390   0030C2  C343  F067         	movff	_flame_intensity+3,___flge@ff2+3
  3391   0030C6  EC56  F02F         	call	___flge	;wreg free
  3392   0030CA  0100               	movlb	0	; () banked
  3393   0030CC  B0D8               	btfsc	status,0,c
  3394   0030CE  EF6B  F018         	goto	u10261
  3395   0030D2  EF6D  F018         	goto	u10260
  3396   0030D6                     u10261:
  3397   0030D6  EF76  F018         	goto	l216
  3398   0030DA                     u10260:
  3399   0030DA                     
  3400                           ; BSR set to: 0
  3401   0030DA  0E00               	movlw	0
  3402   0030DC  0103               	movlb	3	; () banked
  3403   0030DE  6F40               	movwf	_flame_intensity& (0+255),b
  3404   0030E0  0E00               	movlw	0
  3405   0030E2  6F41               	movwf	(_flame_intensity+1)& (0+255),b
  3406   0030E4  0EC8               	movlw	200
  3407   0030E6  6F42               	movwf	(_flame_intensity+2)& (0+255),b
  3408   0030E8  0E42               	movlw	66
  3409   0030EA  6F43               	movwf	(_flame_intensity+3)& (0+255),b
  3410   0030EC                     l216:
  3411                           
  3412                           ;newmain.c: 312:     if(!flame_detected && flame_intensity >= 15.0) {
  3413   0030EC  0103               	movlb	3	; () banked
  3414   0030EE  5159               	movf	_flame_detected& (0+255),w,b
  3415   0030F0  A4D8               	btfss	status,2,c
  3416   0030F2  EF7D  F018         	goto	u10271
  3417   0030F6  EF7F  F018         	goto	u10270
  3418   0030FA                     u10271:
  3419   0030FA  EF9F  F018         	goto	l7838
  3420   0030FE                     u10270:
  3421   0030FE                     
  3422                           ; BSR set to: 3
  3423   0030FE  C340  F060         	movff	_flame_intensity,___flge@ff1
  3424   003102  C341  F061         	movff	_flame_intensity+1,___flge@ff1+1
  3425   003106  C342  F062         	movff	_flame_intensity+2,___flge@ff1+2
  3426   00310A  C343  F063         	movff	_flame_intensity+3,___flge@ff1+3
  3427   00310E  0E00               	movlw	0
  3428   003110  0100               	movlb	0	; () banked
  3429   003112  6F64               	movwf	___flge@ff2& (0+255),b
  3430   003114  0E00               	movlw	0
  3431   003116  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3432   003118  0E70               	movlw	112
  3433   00311A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3434   00311C  0E41               	movlw	65
  3435   00311E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3436   003120  EC56  F02F         	call	___flge	;wreg free
  3437   003124  0100               	movlb	0	; () banked
  3438   003126  A0D8               	btfss	status,0,c
  3439   003128  EF98  F018         	goto	u10281
  3440   00312C  EF9A  F018         	goto	u10280
  3441   003130                     u10281:
  3442   003130  EF9F  F018         	goto	l7838
  3443   003134                     u10280:
  3444   003134                     
  3445                           ; BSR set to: 0
  3446                           ;newmain.c: 313:         flame_detected = 1;
  3447   003134  0E01               	movlw	1
  3448   003136  0103               	movlb	3	; () banked
  3449   003138  6F59               	movwf	_flame_detected& (0+255),b
  3450                           
  3451                           ;newmain.c: 314:     } else if(flame_detected && flame_intensity <= (15.0 - 3.0)) {
  3452   00313A  EFC5  F018         	goto	l7844
  3453   00313E                     l7838:
  3454   00313E  0103               	movlb	3	; () banked
  3455   003140  5159               	movf	_flame_detected& (0+255),w,b
  3456   003142  B4D8               	btfsc	status,2,c
  3457   003144  EFA6  F018         	goto	u10291
  3458   003148  EFA8  F018         	goto	u10290
  3459   00314C                     u10291:
  3460   00314C  EFC5  F018         	goto	l7844
  3461   003150                     u10290:
  3462   003150                     
  3463                           ; BSR set to: 3
  3464   003150  0E00               	movlw	0
  3465   003152  0100               	movlb	0	; () banked
  3466   003154  6F60               	movwf	___flge@ff1& (0+255),b
  3467   003156  0E00               	movlw	0
  3468   003158  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3469   00315A  0E40               	movlw	64
  3470   00315C  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3471   00315E  0E41               	movlw	65
  3472   003160  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3473   003162  C340  F064         	movff	_flame_intensity,___flge@ff2
  3474   003166  C341  F065         	movff	_flame_intensity+1,___flge@ff2+1
  3475   00316A  C342  F066         	movff	_flame_intensity+2,___flge@ff2+2
  3476   00316E  C343  F067         	movff	_flame_intensity+3,___flge@ff2+3
  3477   003172  EC56  F02F         	call	___flge	;wreg free
  3478   003176  0100               	movlb	0	; () banked
  3479   003178  A0D8               	btfss	status,0,c
  3480   00317A  EFC1  F018         	goto	u10301
  3481   00317E  EFC3  F018         	goto	u10300
  3482   003182                     u10301:
  3483   003182  EFC5  F018         	goto	l7844
  3484   003186                     u10300:
  3485   003186                     
  3486                           ; BSR set to: 0
  3487                           ;newmain.c: 315:         flame_detected = 0;
  3488   003186  0103               	movlb	3	; () banked
  3489   003188  6B59               	clrf	_flame_detected& (0+255),b
  3490   00318A                     l7844:
  3491                           
  3492                           ;newmain.c: 319:     unsigned int mq2_adc = ADC_Read(2);
  3493   00318A  0E02               	movlw	2
  3494   00318C  EC46  F036         	call	_ADC_Read
  3495   003190  C001  F099         	movff	?_ADC_Read,Read_Sensors@mq2_adc
  3496   003194  C002  F09A         	movff	?_ADC_Read+1,Read_Sensors@mq2_adc+1
  3497   003198                     
  3498                           ;newmain.c: 320:     float mq2_voltage = (mq2_adc * 5.0) / 1024.0;
  3499   003198  0E00               	movlw	0
  3500   00319A  6E13               	movwf	___flmul@a^0,c
  3501   00319C  0E00               	movlw	0
  3502   00319E  6E14               	movwf	(___flmul@a+1)^0,c
  3503   0031A0  0EA0               	movlw	160
  3504   0031A2  6E15               	movwf	(___flmul@a+2)^0,c
  3505   0031A4  0E40               	movlw	64
  3506   0031A6  6E16               	movwf	(___flmul@a+3)^0,c
  3507   0031A8  C099  F001         	movff	Read_Sensors@mq2_adc,___xxtofl@val
  3508   0031AC  C09A  F002         	movff	Read_Sensors@mq2_adc+1,___xxtofl@val+1
  3509   0031B0  6A03               	clrf	(___xxtofl@val+2)^0,c
  3510   0031B2  6A04               	clrf	(___xxtofl@val+3)^0,c
  3511   0031B4  0E00               	movlw	0
  3512   0031B6  ECBA  F02A         	call	___xxtofl
  3513   0031BA  C001  F00F         	movff	?___xxtofl,___flmul@b
  3514   0031BE  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3515   0031C2  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3516   0031C6  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3517   0031CA  ECC6  F01F         	call	___flmul	;wreg free
  3518   0031CE  C00F  F028         	movff	?___flmul,___fldiv@b
  3519   0031D2  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3520   0031D6  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3521   0031DA  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3522   0031DE  0E00               	movlw	0
  3523   0031E0  6E2C               	movwf	___fldiv@a^0,c
  3524   0031E2  0E00               	movlw	0
  3525   0031E4  6E2D               	movwf	(___fldiv@a+1)^0,c
  3526   0031E6  0E80               	movlw	128
  3527   0031E8  6E2E               	movwf	(___fldiv@a+2)^0,c
  3528   0031EA  0E44               	movlw	68
  3529   0031EC  6E2F               	movwf	(___fldiv@a+3)^0,c
  3530   0031EE  ECC8  F023         	call	___fldiv	;wreg free
  3531   0031F2  C028  F09D         	movff	?___fldiv,Read_Sensors@mq2_voltage
  3532   0031F6  C029  F09E         	movff	?___fldiv+1,Read_Sensors@mq2_voltage+1
  3533   0031FA  C02A  F09F         	movff	?___fldiv+2,Read_Sensors@mq2_voltage+2
  3534   0031FE  C02B  F0A0         	movff	?___fldiv+3,Read_Sensors@mq2_voltage+3
  3535   003202                     
  3536                           ;newmain.c: 321:     float Rs = (5.0 - mq2_voltage) / mq2_voltage;
  3537   003202  C09D  F055         	movff	Read_Sensors@mq2_voltage,___flsub@a
  3538   003206  C09E  F056         	movff	Read_Sensors@mq2_voltage+1,___flsub@a+1
  3539   00320A  C09F  F057         	movff	Read_Sensors@mq2_voltage+2,___flsub@a+2
  3540   00320E  C0A0  F058         	movff	Read_Sensors@mq2_voltage+3,___flsub@a+3
  3541   003212  0E00               	movlw	0
  3542   003214  6E51               	movwf	___flsub@b^0,c
  3543   003216  0E00               	movlw	0
  3544   003218  6E52               	movwf	(___flsub@b+1)^0,c
  3545   00321A  0EA0               	movlw	160
  3546   00321C  6E53               	movwf	(___flsub@b+2)^0,c
  3547   00321E  0E40               	movlw	64
  3548   003220  6E54               	movwf	(___flsub@b+3)^0,c
  3549   003222  EC01  F036         	call	___flsub	;wreg free
  3550   003226  C051  F028         	movff	?___flsub,___fldiv@b
  3551   00322A  C052  F029         	movff	?___flsub+1,___fldiv@b+1
  3552   00322E  C053  F02A         	movff	?___flsub+2,___fldiv@b+2
  3553   003232  C054  F02B         	movff	?___flsub+3,___fldiv@b+3
  3554   003236  C09D  F02C         	movff	Read_Sensors@mq2_voltage,___fldiv@a
  3555   00323A  C09E  F02D         	movff	Read_Sensors@mq2_voltage+1,___fldiv@a+1
  3556   00323E  C09F  F02E         	movff	Read_Sensors@mq2_voltage+2,___fldiv@a+2
  3557   003242  C0A0  F02F         	movff	Read_Sensors@mq2_voltage+3,___fldiv@a+3
  3558   003246  ECC8  F023         	call	___fldiv	;wreg free
  3559   00324A  C028  F0A5         	movff	?___fldiv,Read_Sensors@Rs
  3560   00324E  C029  F0A6         	movff	?___fldiv+1,Read_Sensors@Rs+1
  3561   003252  C02A  F0A7         	movff	?___fldiv+2,Read_Sensors@Rs+2
  3562   003256  C02B  F0A8         	movff	?___fldiv+3,Read_Sensors@Rs+3
  3563                           
  3564                           ;newmain.c: 324:     float temp_factor = 1.0 + 0.02 * (temperature - 25.0);
  3565   00325A  0E0A               	movlw	10
  3566   00325C  6E13               	movwf	___flmul@a^0,c
  3567   00325E  0ED7               	movlw	215
  3568   003260  6E14               	movwf	(___flmul@a+1)^0,c
  3569   003262  0EA3               	movlw	163
  3570   003264  6E15               	movwf	(___flmul@a+2)^0,c
  3571   003266  0E3C               	movlw	60
  3572   003268  6E16               	movwf	(___flmul@a+3)^0,c
  3573   00326A  0E00               	movlw	0
  3574   00326C  6E45               	movwf	___fladd@a^0,c
  3575   00326E  0E00               	movlw	0
  3576   003270  6E46               	movwf	(___fladd@a+1)^0,c
  3577   003272  0EC8               	movlw	200
  3578   003274  6E47               	movwf	(___fladd@a+2)^0,c
  3579   003276  0EC1               	movlw	193
  3580   003278  6E48               	movwf	(___fladd@a+3)^0,c
  3581   00327A  C344  F041         	movff	_temperature,___fladd@b
  3582   00327E  C345  F042         	movff	_temperature+1,___fladd@b+1
  3583   003282  C346  F043         	movff	_temperature+2,___fladd@b+2
  3584   003286  C347  F044         	movff	_temperature+3,___fladd@b+3
  3585   00328A  EC6B  F01D         	call	___fladd	;wreg free
  3586   00328E  C041  F00F         	movff	?___fladd,___flmul@b
  3587   003292  C042  F010         	movff	?___fladd+1,___flmul@b+1
  3588   003296  C043  F011         	movff	?___fladd+2,___flmul@b+2
  3589   00329A  C044  F012         	movff	?___fladd+3,___flmul@b+3
  3590   00329E  ECC6  F01F         	call	___flmul	;wreg free
  3591   0032A2  C00F  F08D         	movff	?___flmul,_Read_Sensors$1835
  3592   0032A6  C010  F08E         	movff	?___flmul+1,_Read_Sensors$1835+1
  3593   0032AA  C011  F08F         	movff	?___flmul+2,_Read_Sensors$1835+2
  3594   0032AE  C012  F090         	movff	?___flmul+3,_Read_Sensors$1835+3
  3595   0032B2                     
  3596                           ;newmain.c: 324:     float temp_factor = 1.0 + 0.02 * (temperature - 25.0);
  3597   0032B2  C08D  F041         	movff	_Read_Sensors$1835,___fladd@b
  3598   0032B6  C08E  F042         	movff	_Read_Sensors$1835+1,___fladd@b+1
  3599   0032BA  C08F  F043         	movff	_Read_Sensors$1835+2,___fladd@b+2
  3600   0032BE  C090  F044         	movff	_Read_Sensors$1835+3,___fladd@b+3
  3601   0032C2  0E00               	movlw	0
  3602   0032C4  6E45               	movwf	___fladd@a^0,c
  3603   0032C6  0E00               	movlw	0
  3604   0032C8  6E46               	movwf	(___fladd@a+1)^0,c
  3605   0032CA  0E80               	movlw	128
  3606   0032CC  6E47               	movwf	(___fladd@a+2)^0,c
  3607   0032CE  0E3F               	movlw	63
  3608   0032D0  6E48               	movwf	(___fladd@a+3)^0,c
  3609   0032D2  EC6B  F01D         	call	___fladd	;wreg free
  3610   0032D6  C041  F085         	movff	?___fladd,Read_Sensors@temp_factor
  3611   0032DA  C042  F086         	movff	?___fladd+1,Read_Sensors@temp_factor+1
  3612   0032DE  C043  F087         	movff	?___fladd+2,Read_Sensors@temp_factor+2
  3613   0032E2  C044  F088         	movff	?___fladd+3,Read_Sensors@temp_factor+3
  3614   0032E6                     
  3615                           ;newmain.c: 325:     Rs /= temp_factor;
  3616   0032E6  C0A5  F028         	movff	Read_Sensors@Rs,___fldiv@b
  3617   0032EA  C0A6  F029         	movff	Read_Sensors@Rs+1,___fldiv@b+1
  3618   0032EE  C0A7  F02A         	movff	Read_Sensors@Rs+2,___fldiv@b+2
  3619   0032F2  C0A8  F02B         	movff	Read_Sensors@Rs+3,___fldiv@b+3
  3620   0032F6  C085  F02C         	movff	Read_Sensors@temp_factor,___fldiv@a
  3621   0032FA  C086  F02D         	movff	Read_Sensors@temp_factor+1,___fldiv@a+1
  3622   0032FE  C087  F02E         	movff	Read_Sensors@temp_factor+2,___fldiv@a+2
  3623   003302  C088  F02F         	movff	Read_Sensors@temp_factor+3,___fldiv@a+3
  3624   003306  ECC8  F023         	call	___fldiv	;wreg free
  3625   00330A  C028  F0A5         	movff	?___fldiv,Read_Sensors@Rs
  3626   00330E  C029  F0A6         	movff	?___fldiv+1,Read_Sensors@Rs+1
  3627   003312  C02A  F0A7         	movff	?___fldiv+2,Read_Sensors@Rs+2
  3628   003316  C02B  F0A8         	movff	?___fldiv+3,Read_Sensors@Rs+3
  3629   00331A                     
  3630                           ;newmain.c: 327:     float rs_ro_ratio = Rs / MQ2_Ro;
  3631   00331A  C0A5  F028         	movff	Read_Sensors@Rs,___fldiv@b
  3632   00331E  C0A6  F029         	movff	Read_Sensors@Rs+1,___fldiv@b+1
  3633   003322  C0A7  F02A         	movff	Read_Sensors@Rs+2,___fldiv@b+2
  3634   003326  C0A8  F02B         	movff	Read_Sensors@Rs+3,___fldiv@b+3
  3635   00332A  C3D2  F02C         	movff	_MQ2_Ro,___fldiv@a
  3636   00332E  C3D3  F02D         	movff	_MQ2_Ro+1,___fldiv@a+1
  3637   003332  C3D4  F02E         	movff	_MQ2_Ro+2,___fldiv@a+2
  3638   003336  C3D5  F02F         	movff	_MQ2_Ro+3,___fldiv@a+3
  3639   00333A  ECC8  F023         	call	___fldiv	;wreg free
  3640   00333E  C028  F0A1         	movff	?___fldiv,Read_Sensors@rs_ro_ratio
  3641   003342  C029  F0A2         	movff	?___fldiv+1,Read_Sensors@rs_ro_ratio+1
  3642   003346  C02A  F0A3         	movff	?___fldiv+2,Read_Sensors@rs_ro_ratio+2
  3643   00334A  C02B  F0A4         	movff	?___fldiv+3,Read_Sensors@rs_ro_ratio+3
  3644   00334E                     
  3645                           ;newmain.c: 328:     float raw_co = 0.0;
  3646   00334E  0E00               	movlw	0
  3647   003350  0100               	movlb	0	; () banked
  3648   003352  6FA9               	movwf	Read_Sensors@raw_co& (0+255),b
  3649   003354  0E00               	movlw	0
  3650   003356  6FAA               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3651   003358  0E00               	movlw	0
  3652   00335A  6FAB               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3653   00335C  0E00               	movlw	0
  3654   00335E  6FAC               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3655   003360                     
  3656                           ; BSR set to: 0
  3657                           ;newmain.c: 330:     if(rs_ro_ratio > 0.1) {
  3658   003360  0ECD               	movlw	205
  3659   003362  6F60               	movwf	___flge@ff1& (0+255),b
  3660   003364  0ECC               	movlw	204
  3661   003366  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3662   003368  0ECC               	movlw	204
  3663   00336A  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3664   00336C  0E3D               	movlw	61
  3665   00336E  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3666   003370  C0A1  F064         	movff	Read_Sensors@rs_ro_ratio,___flge@ff2
  3667   003374  C0A2  F065         	movff	Read_Sensors@rs_ro_ratio+1,___flge@ff2+1
  3668   003378  C0A3  F066         	movff	Read_Sensors@rs_ro_ratio+2,___flge@ff2+2
  3669   00337C  C0A4  F067         	movff	Read_Sensors@rs_ro_ratio+3,___flge@ff2+3
  3670   003380  EC56  F02F         	call	___flge	;wreg free
  3671   003384  0100               	movlb	0	; () banked
  3672   003386  B0D8               	btfsc	status,0,c
  3673   003388  EFC8  F019         	goto	u10311
  3674   00338C  EFCA  F019         	goto	u10310
  3675   003390                     u10311:
  3676   003390  EFFE  F019         	goto	l7864
  3677   003394                     u10310:
  3678   003394                     
  3679                           ; BSR set to: 0
  3680                           ;newmain.c: 331:         raw_co = 15.0 * powf(rs_ro_ratio,-1.5);
  3681   003394  0E00               	movlw	0
  3682   003396  6F6C               	movwf	powf@y& (0+255),b
  3683   003398  0E00               	movlw	0
  3684   00339A  6F6D               	movwf	(powf@y+1)& (0+255),b
  3685   00339C  0EC0               	movlw	192
  3686   00339E  6F6E               	movwf	(powf@y+2)& (0+255),b
  3687   0033A0  0EBF               	movlw	191
  3688   0033A2  6F6F               	movwf	(powf@y+3)& (0+255),b
  3689   0033A4  C0A1  F068         	movff	Read_Sensors@rs_ro_ratio,powf@x
  3690   0033A8  C0A2  F069         	movff	Read_Sensors@rs_ro_ratio+1,powf@x+1
  3691   0033AC  C0A3  F06A         	movff	Read_Sensors@rs_ro_ratio+2,powf@x+2
  3692   0033B0  C0A4  F06B         	movff	Read_Sensors@rs_ro_ratio+3,powf@x+3
  3693   0033B4  EC09  F000         	call	_powf	;wreg free
  3694   0033B8  C068  F091         	movff	?_powf,_Read_Sensors$1836
  3695   0033BC  C069  F092         	movff	?_powf+1,_Read_Sensors$1836+1
  3696   0033C0  C06A  F093         	movff	?_powf+2,_Read_Sensors$1836+2
  3697   0033C4  C06B  F094         	movff	?_powf+3,_Read_Sensors$1836+3
  3698   0033C8                     
  3699                           ;newmain.c: 331:         raw_co = 15.0 * powf(rs_ro_ratio,-1.5);
  3700   0033C8  C091  F00F         	movff	_Read_Sensors$1836,___flmul@b
  3701   0033CC  C092  F010         	movff	_Read_Sensors$1836+1,___flmul@b+1
  3702   0033D0  C093  F011         	movff	_Read_Sensors$1836+2,___flmul@b+2
  3703   0033D4  C094  F012         	movff	_Read_Sensors$1836+3,___flmul@b+3
  3704   0033D8  0E00               	movlw	0
  3705   0033DA  6E13               	movwf	___flmul@a^0,c
  3706   0033DC  0E00               	movlw	0
  3707   0033DE  6E14               	movwf	(___flmul@a+1)^0,c
  3708   0033E0  0E70               	movlw	112
  3709   0033E2  6E15               	movwf	(___flmul@a+2)^0,c
  3710   0033E4  0E41               	movlw	65
  3711   0033E6  6E16               	movwf	(___flmul@a+3)^0,c
  3712   0033E8  ECC6  F01F         	call	___flmul	;wreg free
  3713   0033EC  C00F  F0A9         	movff	?___flmul,Read_Sensors@raw_co
  3714   0033F0  C010  F0AA         	movff	?___flmul+1,Read_Sensors@raw_co+1
  3715   0033F4  C011  F0AB         	movff	?___flmul+2,Read_Sensors@raw_co+2
  3716   0033F8  C012  F0AC         	movff	?___flmul+3,Read_Sensors@raw_co+3
  3717   0033FC                     l7864:
  3718                           
  3719                           ;newmain.c: 334:     if(raw_co < 0) raw_co = 0;
  3720   0033FC  0100               	movlb	0	; () banked
  3721   0033FE  BFAC               	btfsc	(Read_Sensors@raw_co+3)& (0+255),7,b
  3722   003400  EF06  F01A         	goto	u10320
  3723   003404  EF04  F01A         	goto	u10321
  3724   003408                     u10321:
  3725   003408  EF0E  F01A         	goto	l7868
  3726   00340C                     u10320:
  3727   00340C                     
  3728                           ; BSR set to: 0
  3729   00340C  0E00               	movlw	0
  3730   00340E  6FA9               	movwf	Read_Sensors@raw_co& (0+255),b
  3731   003410  0E00               	movlw	0
  3732   003412  6FAA               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3733   003414  0E00               	movlw	0
  3734   003416  6FAB               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3735   003418  0E00               	movlw	0
  3736   00341A  6FAC               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3737   00341C                     l7868:
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;newmain.c: 335:     if(raw_co > 1000) raw_co = 1000;
  3741   00341C  0E00               	movlw	0
  3742   00341E  6F60               	movwf	___flge@ff1& (0+255),b
  3743   003420  0E00               	movlw	0
  3744   003422  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3745   003424  0E7A               	movlw	122
  3746   003426  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3747   003428  0E44               	movlw	68
  3748   00342A  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3749   00342C  C0A9  F064         	movff	Read_Sensors@raw_co,___flge@ff2
  3750   003430  C0AA  F065         	movff	Read_Sensors@raw_co+1,___flge@ff2+1
  3751   003434  C0AB  F066         	movff	Read_Sensors@raw_co+2,___flge@ff2+2
  3752   003438  C0AC  F067         	movff	Read_Sensors@raw_co+3,___flge@ff2+3
  3753   00343C  EC56  F02F         	call	___flge	;wreg free
  3754   003440  0100               	movlb	0	; () banked
  3755   003442  B0D8               	btfsc	status,0,c
  3756   003444  EF26  F01A         	goto	u10331
  3757   003448  EF28  F01A         	goto	u10330
  3758   00344C                     u10331:
  3759   00344C  EF30  F01A         	goto	l7872
  3760   003450                     u10330:
  3761   003450                     
  3762                           ; BSR set to: 0
  3763   003450  0E00               	movlw	0
  3764   003452  6FA9               	movwf	Read_Sensors@raw_co& (0+255),b
  3765   003454  0E00               	movlw	0
  3766   003456  6FAA               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3767   003458  0E7A               	movlw	122
  3768   00345A  6FAB               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3769   00345C  0E44               	movlw	68
  3770   00345E  6FAC               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3771   003460                     l7872:
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;newmain.c: 337:     co_ppm = Apply_Filter(raw_co, co_samples);
  3775   003460  C0A9  F051         	movff	Read_Sensors@raw_co,Apply_Filter@new_value
  3776   003464  C0AA  F052         	movff	Read_Sensors@raw_co+1,Apply_Filter@new_value+1
  3777   003468  C0AB  F053         	movff	Read_Sensors@raw_co+2,Apply_Filter@new_value+2
  3778   00346C  C0AC  F054         	movff	Read_Sensors@raw_co+3,Apply_Filter@new_value+3
  3779   003470  0EBE               	movlw	low _co_samples
  3780   003472  6E55               	movwf	Apply_Filter@samples^0,c
  3781   003474  0E03               	movlw	high _co_samples
  3782   003476  6E56               	movwf	(Apply_Filter@samples+1)^0,c
  3783   003478  EC44  F032         	call	_Apply_Filter	;wreg free
  3784   00347C  C051  F338         	movff	?_Apply_Filter,_co_ppm
  3785   003480  C052  F339         	movff	?_Apply_Filter+1,_co_ppm+1
  3786   003484  C053  F33A         	movff	?_Apply_Filter+2,_co_ppm+2
  3787   003488  C054  F33B         	movff	?_Apply_Filter+3,_co_ppm+3
  3788   00348C                     
  3789                           ;newmain.c: 340:     static unsigned int last_pulse = 0;;newmain.c: 341:     static unsi
      +                          gned long last_flow_time = 0;;newmain.c: 343:     if(system_millis - last_flow_time >= 1
      +                          000) {
  3790   00348C  0103               	movlb	3	; () banked
  3791   00348E  510C               	movf	Read_Sensors@last_flow_time& (0+255),w,b
  3792   003490  0102               	movlb	2	; () banked
  3793   003492  5DFA               	subwf	_system_millis& (0+255),w,b
  3794   003494  0100               	movlb	0	; () banked
  3795   003496  6F79               	movwf	??_Read_Sensors& (0+255),b
  3796   003498  0103               	movlb	3	; () banked
  3797   00349A  510D               	movf	(Read_Sensors@last_flow_time+1)& (0+255),w,b
  3798   00349C  0102               	movlb	2	; () banked
  3799   00349E  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  3800   0034A0  0100               	movlb	0	; () banked
  3801   0034A2  6F7A               	movwf	(??_Read_Sensors+1)& (0+255),b
  3802   0034A4  0103               	movlb	3	; () banked
  3803   0034A6  510E               	movf	(Read_Sensors@last_flow_time+2)& (0+255),w,b
  3804   0034A8  0102               	movlb	2	; () banked
  3805   0034AA  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  3806   0034AC  0100               	movlb	0	; () banked
  3807   0034AE  6F7B               	movwf	(??_Read_Sensors+2)& (0+255),b
  3808   0034B0  0103               	movlb	3	; () banked
  3809   0034B2  510F               	movf	(Read_Sensors@last_flow_time+3)& (0+255),w,b
  3810   0034B4  0102               	movlb	2	; () banked
  3811   0034B6  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  3812   0034B8  0100               	movlb	0	; () banked
  3813   0034BA  6F7C               	movwf	(??_Read_Sensors+3)& (0+255),b
  3814   0034BC  517C               	movf	(??_Read_Sensors+3)& (0+255),w,b
  3815   0034BE  117B               	iorwf	(??_Read_Sensors+2)& (0+255),w,b
  3816   0034C0  E10B               	bnz	u10340
  3817   0034C2  0EE8               	movlw	232
  3818   0034C4  5D79               	subwf	??_Read_Sensors& (0+255),w,b
  3819   0034C6  0E03               	movlw	3
  3820   0034C8  597A               	subwfb	(??_Read_Sensors+1)& (0+255),w,b
  3821   0034CA  A0D8               	btfss	status,0,c
  3822   0034CC  EF6A  F01A         	goto	u10341
  3823   0034D0  EF6C  F01A         	goto	u10340
  3824   0034D4                     u10341:
  3825   0034D4  EFE3  F01A         	goto	l228
  3826   0034D8                     u10340:
  3827   0034D8                     
  3828                           ; BSR set to: 0
  3829                           ;newmain.c: 344:         unsigned int pulses = pulse_count - last_pulse;
  3830   0034D8  0103               	movlb	3	; () banked
  3831   0034DA  514C               	movf	Read_Sensors@last_pulse& (0+255),w,b
  3832   0034DC  5D4E               	subwf	_pulse_count& (0+255),w,b	;volatile
  3833   0034DE  0100               	movlb	0	; () banked
  3834   0034E0  6F9B               	movwf	Read_Sensors@pulses& (0+255),b
  3835   0034E2  0103               	movlb	3	; () banked
  3836   0034E4  514D               	movf	(Read_Sensors@last_pulse+1)& (0+255),w,b
  3837   0034E6  594F               	subwfb	(_pulse_count+1)& (0+255),w,b	;volatile
  3838   0034E8  0100               	movlb	0	; () banked
  3839   0034EA  6F9C               	movwf	(Read_Sensors@pulses+1)& (0+255),b
  3840   0034EC                     
  3841                           ; BSR set to: 0
  3842                           ;newmain.c: 345:         flow_rate = (pulses / (float)450) * 60.0;
  3843   0034EC  0E00               	movlw	0
  3844   0034EE  6E2C               	movwf	___fldiv@a^0,c
  3845   0034F0  0E00               	movlw	0
  3846   0034F2  6E2D               	movwf	(___fldiv@a+1)^0,c
  3847   0034F4  0EE1               	movlw	225
  3848   0034F6  6E2E               	movwf	(___fldiv@a+2)^0,c
  3849   0034F8  0E43               	movlw	67
  3850   0034FA  6E2F               	movwf	(___fldiv@a+3)^0,c
  3851   0034FC  C09B  F001         	movff	Read_Sensors@pulses,___xxtofl@val
  3852   003500  C09C  F002         	movff	Read_Sensors@pulses+1,___xxtofl@val+1
  3853   003504  6A03               	clrf	(___xxtofl@val+2)^0,c
  3854   003506  6A04               	clrf	(___xxtofl@val+3)^0,c
  3855   003508  0E00               	movlw	0
  3856   00350A  ECBA  F02A         	call	___xxtofl
  3857   00350E  C001  F028         	movff	?___xxtofl,___fldiv@b
  3858   003512  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3859   003516  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3860   00351A  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3861   00351E  ECC8  F023         	call	___fldiv	;wreg free
  3862   003522  C028  F00F         	movff	?___fldiv,___flmul@b
  3863   003526  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3864   00352A  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3865   00352E  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3866   003532  0E00               	movlw	0
  3867   003534  6E13               	movwf	___flmul@a^0,c
  3868   003536  0E00               	movlw	0
  3869   003538  6E14               	movwf	(___flmul@a+1)^0,c
  3870   00353A  0E70               	movlw	112
  3871   00353C  6E15               	movwf	(___flmul@a+2)^0,c
  3872   00353E  0E42               	movlw	66
  3873   003540  6E16               	movwf	(___flmul@a+3)^0,c
  3874   003542  ECC6  F01F         	call	___flmul	;wreg free
  3875   003546  C00F  F334         	movff	?___flmul,_flow_rate
  3876   00354A  C010  F335         	movff	?___flmul+1,_flow_rate+1
  3877   00354E  C011  F336         	movff	?___flmul+2,_flow_rate+2
  3878   003552  C012  F337         	movff	?___flmul+3,_flow_rate+3
  3879   003556                     
  3880                           ;newmain.c: 346:         total_flow += flow_rate / 60.0;
  3881   003556  C330  F041         	movff	_total_flow,___fladd@b
  3882   00355A  C331  F042         	movff	_total_flow+1,___fladd@b+1
  3883   00355E  C332  F043         	movff	_total_flow+2,___fladd@b+2
  3884   003562  C333  F044         	movff	_total_flow+3,___fladd@b+3
  3885   003566  0E00               	movlw	0
  3886   003568  6E2C               	movwf	___fldiv@a^0,c
  3887   00356A  0E00               	movlw	0
  3888   00356C  6E2D               	movwf	(___fldiv@a+1)^0,c
  3889   00356E  0E70               	movlw	112
  3890   003570  6E2E               	movwf	(___fldiv@a+2)^0,c
  3891   003572  0E42               	movlw	66
  3892   003574  6E2F               	movwf	(___fldiv@a+3)^0,c
  3893   003576  C334  F028         	movff	_flow_rate,___fldiv@b
  3894   00357A  C335  F029         	movff	_flow_rate+1,___fldiv@b+1
  3895   00357E  C336  F02A         	movff	_flow_rate+2,___fldiv@b+2
  3896   003582  C337  F02B         	movff	_flow_rate+3,___fldiv@b+3
  3897   003586  ECC8  F023         	call	___fldiv	;wreg free
  3898   00358A  C028  F045         	movff	?___fldiv,___fladd@a
  3899   00358E  C029  F046         	movff	?___fldiv+1,___fladd@a+1
  3900   003592  C02A  F047         	movff	?___fldiv+2,___fladd@a+2
  3901   003596  C02B  F048         	movff	?___fldiv+3,___fladd@a+3
  3902   00359A  EC6B  F01D         	call	___fladd	;wreg free
  3903   00359E  C041  F330         	movff	?___fladd,_total_flow
  3904   0035A2  C042  F331         	movff	?___fladd+1,_total_flow+1
  3905   0035A6  C043  F332         	movff	?___fladd+2,_total_flow+2
  3906   0035AA  C044  F333         	movff	?___fladd+3,_total_flow+3
  3907   0035AE                     
  3908                           ;newmain.c: 348:         last_pulse = pulse_count;
  3909   0035AE  C34E  F34C         	movff	_pulse_count,Read_Sensors@last_pulse	;volatile
  3910   0035B2  C34F  F34D         	movff	_pulse_count+1,Read_Sensors@last_pulse+1	;volatile
  3911   0035B6                     
  3912                           ;newmain.c: 349:         last_flow_time = system_millis;
  3913   0035B6  C2FA  F30C         	movff	_system_millis,Read_Sensors@last_flow_time
  3914   0035BA  C2FB  F30D         	movff	_system_millis+1,Read_Sensors@last_flow_time+1
  3915   0035BE  C2FC  F30E         	movff	_system_millis+2,Read_Sensors@last_flow_time+2
  3916   0035C2  C2FD  F30F         	movff	_system_millis+3,Read_Sensors@last_flow_time+3
  3917   0035C6                     l228:
  3918   0035C6  0012               	return		;funcret
  3919   0035C8                     __end_of_Read_Sensors:
  3920                           	callstack 0
  3921                           
  3922 ;; *************** function _powf *****************
  3923 ;; Defined at:
  3924 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\powf.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  x               4    8[BANK0 ] float 
  3927 ;;  y               4   12[BANK0 ] float 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  s2              4  144[BANK1 ] float 
  3930 ;;  s_h             4  116[BANK1 ] struct fui
  3931 ;;  t_h             4  112[BANK1 ] struct fui
  3932 ;;  t_l             4   52[BANK1 ] float 
  3933 ;;  s_l             4   48[BANK1 ] float 
  3934 ;;  z               4  180[BANK1 ] struct fui
  3935 ;;  t               4  176[BANK1 ] struct fui
  3936 ;;  ix              4  172[BANK1 ] struct fui
  3937 ;;  j               4  168[BANK1 ] long 
  3938 ;;  k               4  164[BANK1 ] long 
  3939 ;;  p_h             4  160[BANK1 ] struct fui
  3940 ;;  is              4  152[BANK1 ] struct fui
  3941 ;;  iy              4  148[BANK1 ] long 
  3942 ;;  t1              4  140[BANK1 ] struct fui
  3943 ;;  n               4  136[BANK1 ] long 
  3944 ;;  hy              4  132[BANK1 ] struct fui
  3945 ;;  v               4  128[BANK1 ] float 
  3946 ;;  u               4  124[BANK1 ] float 
  3947 ;;  ax              4  120[BANK1 ] struct fui
  3948 ;;  p_l             4  108[BANK1 ] float 
  3949 ;;  hx              4  104[BANK1 ] struct fui
  3950 ;;  sn              4  100[BANK1 ] unsigned long 
  3951 ;;  s               4   96[BANK1 ] float 
  3952 ;;  yisint          4   84[BANK1 ] long 
  3953 ;;  r               4   80[BANK1 ] float 
  3954 ;;  w               4   68[BANK1 ] float 
  3955 ;;  y1              4   44[BANK1 ] struct fui
  3956 ;;  i               4   40[BANK1 ] long 
  3957 ;;  z_l             4   36[BANK1 ] float 
  3958 ;;  z_h             4   32[BANK1 ] float 
  3959 ;;  t2              4   28[BANK1 ] float 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  4    8[BANK0 ] float 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3969 ;;      Params:         0       8       0       0       0       0       0       0       0
  3970 ;;      Locals:         0       0     184       0       0       0       0       0       0
  3971 ;;      Temps:          0       9       0       0       0       0       0       0       0
  3972 ;;      Totals:         0      17     184       0       0       0       0       0       0
  3973 ;;Total ram usage:      201 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; Hardware stack levels required when called: 3
  3976 ;; This function calls:
  3977 ;;		___fladd
  3978 ;;		___fldiv
  3979 ;;		___flge
  3980 ;;		___flmul
  3981 ;;		___flneg
  3982 ;;		___flsub
  3983 ;;		___xxtofl
  3984 ;;		_scalbnf
  3985 ;;		_sqrtf
  3986 ;; This function is called by:
  3987 ;;		_Read_Sensors
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text6
  3992   000012                     __ptext6:
  3993                           	callstack 0
  3994   000012                     _powf:
  3995                           	callstack 26
  3996   000012  C068  F168         	movff	powf@x,powf@hx
  3997   000016  C069  F169         	movff	powf@x+1,powf@hx+1
  3998   00001A  C06A  F16A         	movff	powf@x+2,powf@hx+2
  3999   00001E  C06B  F16B         	movff	powf@x+3,powf@hx+3
  4000   000022  C06C  F184         	movff	powf@y,powf@hy
  4001   000026  C06D  F185         	movff	powf@y+1,powf@hy+1
  4002   00002A  C06E  F186         	movff	powf@y+2,powf@hy+2
  4003   00002E  C06F  F187         	movff	powf@y+3,powf@hy+3
  4004   000032  0EFF               	movlw	255
  4005   000034  0101               	movlb	1	; () banked
  4006   000036  1568               	andwf	powf@hx& (0+255),w,b
  4007   000038  6FAC               	movwf	powf@ix& (0+255),b
  4008   00003A  0EFF               	movlw	255
  4009   00003C  1569               	andwf	(powf@hx+1)& (0+255),w,b
  4010   00003E  6FAD               	movwf	(powf@ix+1)& (0+255),b
  4011   000040  0EFF               	movlw	255
  4012   000042  156A               	andwf	(powf@hx+2)& (0+255),w,b
  4013   000044  6FAE               	movwf	(powf@ix+2)& (0+255),b
  4014   000046  0E7F               	movlw	127
  4015   000048  156B               	andwf	(powf@hx+3)& (0+255),w,b
  4016   00004A  6FAF               	movwf	(powf@ix+3)& (0+255),b
  4017   00004C  0EFF               	movlw	255
  4018   00004E  1584               	andwf	powf@hy& (0+255),w,b
  4019   000050  6F94               	movwf	powf@iy& (0+255),b
  4020   000052  0EFF               	movlw	255
  4021   000054  1585               	andwf	(powf@hy+1)& (0+255),w,b
  4022   000056  6F95               	movwf	(powf@iy+1)& (0+255),b
  4023   000058  0EFF               	movlw	255
  4024   00005A  1586               	andwf	(powf@hy+2)& (0+255),w,b
  4025   00005C  6F96               	movwf	(powf@iy+2)& (0+255),b
  4026   00005E  0E7F               	movlw	127
  4027   000060  1587               	andwf	(powf@hy+3)& (0+255),w,b
  4028   000062  6F97               	movwf	(powf@iy+3)& (0+255),b
  4029   000064  5194               	movf	powf@iy& (0+255),w,b
  4030   000066  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4031   000068  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  4032   00006A  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  4033   00006C  A4D8               	btfss	status,2,c
  4034   00006E  EF3B  F000         	goto	u9601
  4035   000072  EF3D  F000         	goto	u9600
  4036   000076                     u9601:
  4037   000076  EF48  F000         	goto	l7342
  4038   00007A                     u9600:
  4039   00007A                     
  4040                           ; BSR set to: 1
  4041   00007A  0E00               	movlw	0
  4042   00007C  0100               	movlb	0	; () banked
  4043   00007E  6F68               	movwf	?_powf& (0+255),b
  4044   000080  0E00               	movlw	0
  4045   000082  6F69               	movwf	(?_powf+1)& (0+255),b
  4046   000084  0E80               	movlw	128
  4047   000086  6F6A               	movwf	(?_powf+2)& (0+255),b
  4048   000088  0E3F               	movlw	63
  4049   00008A  6F6B               	movwf	(?_powf+3)& (0+255),b
  4050   00008C  EF63  F012         	goto	l1265
  4051   000090                     l7342:
  4052                           
  4053                           ; BSR set to: 1
  4054   000090  0E80               	movlw	128
  4055   000092  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  4056   000094  E109               	bnz	u9611
  4057   000096  0E3F               	movlw	63
  4058   000098  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  4059   00009A  1168               	iorwf	powf@hx& (0+255),w,b
  4060   00009C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  4061   00009E  A4D8               	btfss	status,2,c
  4062   0000A0  EF54  F000         	goto	u9611
  4063   0000A4  EF56  F000         	goto	u9610
  4064   0000A8                     u9611:
  4065   0000A8  EF61  F000         	goto	l7348
  4066   0000AC                     u9610:
  4067   0000AC                     
  4068                           ; BSR set to: 1
  4069   0000AC  0E00               	movlw	0
  4070   0000AE  0100               	movlb	0	; () banked
  4071   0000B0  6F68               	movwf	?_powf& (0+255),b
  4072   0000B2  0E00               	movlw	0
  4073   0000B4  6F69               	movwf	(?_powf+1)& (0+255),b
  4074   0000B6  0E80               	movlw	128
  4075   0000B8  6F6A               	movwf	(?_powf+2)& (0+255),b
  4076   0000BA  0E3F               	movlw	63
  4077   0000BC  6F6B               	movwf	(?_powf+3)& (0+255),b
  4078   0000BE  EF63  F012         	goto	l1265
  4079   0000C2                     l7348:
  4080                           
  4081                           ; BSR set to: 1
  4082   0000C2  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4083   0000C4  EF72  F000         	goto	u9620
  4084   0000C8  05AC               	decf	powf@ix& (0+255),w,b
  4085   0000CA  0E00               	movlw	0
  4086   0000CC  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4087   0000CE  0E80               	movlw	128
  4088   0000D0  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4089   0000D2  0E7F               	movlw	127
  4090   0000D4  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4091   0000D6  B0D8               	btfsc	status,0,c
  4092   0000D8  EF70  F000         	goto	u9621
  4093   0000DC  EF72  F000         	goto	u9620
  4094   0000E0                     u9621:
  4095   0000E0  EF83  F000         	goto	l7352
  4096   0000E4                     u9620:
  4097   0000E4                     
  4098                           ; BSR set to: 1
  4099   0000E4  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4100   0000E6  EF81  F000         	goto	u9631
  4101   0000EA  0594               	decf	powf@iy& (0+255),w,b
  4102   0000EC  0E00               	movlw	0
  4103   0000EE  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  4104   0000F0  0E80               	movlw	128
  4105   0000F2  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  4106   0000F4  0E7F               	movlw	127
  4107   0000F6  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4108   0000F8  A0D8               	btfss	status,0,c
  4109   0000FA  EF81  F000         	goto	u9631
  4110   0000FE  EF83  F000         	goto	u9630
  4111   000102                     u9631:
  4112   000102  EF9F  F000         	goto	l7356
  4113   000106                     u9630:
  4114   000106                     l7352:
  4115                           
  4116                           ; BSR set to: 1
  4117   000106  C068  F041         	movff	powf@x,___fladd@b
  4118   00010A  C069  F042         	movff	powf@x+1,___fladd@b+1
  4119   00010E  C06A  F043         	movff	powf@x+2,___fladd@b+2
  4120   000112  C06B  F044         	movff	powf@x+3,___fladd@b+3
  4121   000116  C06C  F045         	movff	powf@y,___fladd@a
  4122   00011A  C06D  F046         	movff	powf@y+1,___fladd@a+1
  4123   00011E  C06E  F047         	movff	powf@y+2,___fladd@a+2
  4124   000122  C06F  F048         	movff	powf@y+3,___fladd@a+3
  4125   000126  EC6B  F01D         	call	___fladd	;wreg free
  4126   00012A  C041  F068         	movff	?___fladd,?_powf
  4127   00012E  C042  F069         	movff	?___fladd+1,?_powf+1
  4128   000132  C043  F06A         	movff	?___fladd+2,?_powf+2
  4129   000136  C044  F06B         	movff	?___fladd+3,?_powf+3
  4130   00013A  EF63  F012         	goto	l1265
  4131   00013E                     l7356:
  4132                           
  4133                           ; BSR set to: 1
  4134   00013E  0E00               	movlw	0
  4135   000140  6F54               	movwf	powf@yisint& (0+255),b
  4136   000142  0E00               	movlw	0
  4137   000144  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4138   000146  0E00               	movlw	0
  4139   000148  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4140   00014A  0E00               	movlw	0
  4141   00014C  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4142   00014E                     
  4143                           ; BSR set to: 1
  4144   00014E  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4145   000150  EFAE  F000         	goto	u9640
  4146   000154  EFAC  F000         	goto	u9641
  4147   000158                     u9641:
  4148   000158  EF7A  F001         	goto	l1270
  4149   00015C                     u9640:
  4150   00015C                     
  4151                           ; BSR set to: 1
  4152   00015C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4153   00015E  EFBA  F000         	goto	u9651
  4154   000162  0E80               	movlw	128
  4155   000164  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4156   000166  0E4B               	movlw	75
  4157   000168  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4158   00016A  A0D8               	btfss	status,0,c
  4159   00016C  EFBA  F000         	goto	u9651
  4160   000170  EFBC  F000         	goto	u9650
  4161   000174                     u9651:
  4162   000174  EFC6  F000         	goto	l7364
  4163   000178                     u9650:
  4164   000178                     
  4165                           ; BSR set to: 1
  4166   000178  0E02               	movlw	2
  4167   00017A  6F54               	movwf	powf@yisint& (0+255),b
  4168   00017C  0E00               	movlw	0
  4169   00017E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4170   000180  0E00               	movlw	0
  4171   000182  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4172   000184  0E00               	movlw	0
  4173   000186  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4174   000188  EF7A  F001         	goto	l1270
  4175   00018C                     l7364:
  4176                           
  4177                           ; BSR set to: 1
  4178   00018C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4179   00018E  EFD2  F000         	goto	u9661
  4180   000192  0E80               	movlw	128
  4181   000194  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4182   000196  0E3F               	movlw	63
  4183   000198  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4184   00019A  A0D8               	btfss	status,0,c
  4185   00019C  EFD2  F000         	goto	u9661
  4186   0001A0  EFD4  F000         	goto	u9660
  4187   0001A4                     u9661:
  4188   0001A4  EF7A  F001         	goto	l1270
  4189   0001A8                     u9660:
  4190   0001A8                     
  4191                           ; BSR set to: 1
  4192   0001A8  0E17               	movlw	23
  4193   0001AA  0100               	movlb	0	; () banked
  4194   0001AC  6F70               	movwf	??_powf& (0+255),b
  4195   0001AE  C194  F071         	movff	powf@iy,??_powf+1
  4196   0001B2  C195  F072         	movff	powf@iy+1,??_powf+2
  4197   0001B6  C196  F073         	movff	powf@iy+2,??_powf+3
  4198   0001BA  C197  F074         	movff	powf@iy+3,??_powf+4
  4199   0001BE                     u9675:
  4200   0001BE  6770               	tstfsz	??_powf& (0+255),b
  4201   0001C0  EFE4  F000         	goto	u9676
  4202   0001C4  EFEC  F000         	goto	u9677
  4203   0001C8                     u9676:
  4204   0001C8  3574               	rlcf	(??_powf+4)& (0+255),w,b
  4205   0001CA  3374               	rrcf	(??_powf+4)& (0+255),f,b
  4206   0001CC  3373               	rrcf	(??_powf+3)& (0+255),f,b
  4207   0001CE  3372               	rrcf	(??_powf+2)& (0+255),f,b
  4208   0001D0  3371               	rrcf	(??_powf+1)& (0+255),f,b
  4209   0001D2  2F70               	decfsz	??_powf& (0+255),f,b
  4210   0001D4  EFDF  F000         	goto	u9675
  4211   0001D8                     u9677:
  4212   0001D8  0E81               	movlw	129
  4213   0001DA  0100               	movlb	0	; () banked
  4214   0001DC  2571               	addwf	(??_powf+1)& (0+255),w,b
  4215   0001DE  0101               	movlb	1	; () banked
  4216   0001E0  6FA4               	movwf	powf@k& (0+255),b
  4217   0001E2  0EFF               	movlw	255
  4218   0001E4  0100               	movlb	0	; () banked
  4219   0001E6  2172               	addwfc	(??_powf+2)& (0+255),w,b
  4220   0001E8  0101               	movlb	1	; () banked
  4221   0001EA  6FA5               	movwf	(powf@k+1)& (0+255),b
  4222   0001EC  0EFF               	movlw	255
  4223   0001EE  0100               	movlb	0	; () banked
  4224   0001F0  2173               	addwfc	(??_powf+3)& (0+255),w,b
  4225   0001F2  0101               	movlb	1	; () banked
  4226   0001F4  6FA6               	movwf	(powf@k+2)& (0+255),b
  4227   0001F6  0EFF               	movlw	255
  4228   0001F8  0100               	movlb	0	; () banked
  4229   0001FA  2174               	addwfc	(??_powf+4)& (0+255),w,b
  4230   0001FC  0101               	movlb	1	; () banked
  4231   0001FE  6FA7               	movwf	(powf@k+3)& (0+255),b
  4232   000200  51A4               	movf	powf@k& (0+255),w,b
  4233   000202  0817               	sublw	23
  4234   000204  0100               	movlb	0	; () banked
  4235   000206  6F70               	movwf	??_powf& (0+255),b
  4236   000208  C194  F071         	movff	powf@iy,??_powf+1
  4237   00020C  C195  F072         	movff	powf@iy+1,??_powf+2
  4238   000210  C196  F073         	movff	powf@iy+2,??_powf+3
  4239   000214  C197  F074         	movff	powf@iy+3,??_powf+4
  4240   000218                     u9685:
  4241   000218  6770               	tstfsz	??_powf& (0+255),b
  4242   00021A  EF11  F001         	goto	u9686
  4243   00021E  EF19  F001         	goto	u9687
  4244   000222                     u9686:
  4245   000222  3574               	rlcf	(??_powf+4)& (0+255),w,b
  4246   000224  3374               	rrcf	(??_powf+4)& (0+255),f,b
  4247   000226  3373               	rrcf	(??_powf+3)& (0+255),f,b
  4248   000228  3372               	rrcf	(??_powf+2)& (0+255),f,b
  4249   00022A  3371               	rrcf	(??_powf+1)& (0+255),f,b
  4250   00022C  2F70               	decfsz	??_powf& (0+255),f,b
  4251   00022E  EF0C  F001         	goto	u9685
  4252   000232                     u9687:
  4253   000232  C071  F1A8         	movff	??_powf+1,powf@j
  4254   000236  C072  F1A9         	movff	??_powf+2,powf@j+1
  4255   00023A  C073  F1AA         	movff	??_powf+3,powf@j+2
  4256   00023E  C074  F1AB         	movff	??_powf+4,powf@j+3
  4257   000242  0101               	movlb	1	; () banked
  4258   000244  51A4               	movf	powf@k& (0+255),w,b
  4259   000246  0817               	sublw	23
  4260   000248  0100               	movlb	0	; () banked
  4261   00024A  6F70               	movwf	??_powf& (0+255),b
  4262   00024C  C1A8  F071         	movff	powf@j,??_powf+1
  4263   000250  C1A9  F072         	movff	powf@j+1,??_powf+2
  4264   000254  C1AA  F073         	movff	powf@j+2,??_powf+3
  4265   000258  C1AB  F074         	movff	powf@j+3,??_powf+4
  4266   00025C  2B70               	incf	??_powf& (0+255),f,b
  4267   00025E  EF36  F001         	goto	u9690
  4268   000262                     u9695:
  4269   000262  90D8               	bcf	status,0,c
  4270   000264  3771               	rlcf	(??_powf+1)& (0+255),f,b
  4271   000266  3772               	rlcf	(??_powf+2)& (0+255),f,b
  4272   000268  3773               	rlcf	(??_powf+3)& (0+255),f,b
  4273   00026A  3774               	rlcf	(??_powf+4)& (0+255),f,b
  4274   00026C                     u9690:
  4275   00026C  2F70               	decfsz	??_powf& (0+255),f,b
  4276   00026E  EF31  F001         	goto	u9695
  4277   000272  0101               	movlb	1	; () banked
  4278   000274  5194               	movf	powf@iy& (0+255),w,b
  4279   000276  0100               	movlb	0	; () banked
  4280   000278  1971               	xorwf	(??_powf+1)& (0+255),w,b
  4281   00027A  E113               	bnz	u9701
  4282   00027C  0101               	movlb	1	; () banked
  4283   00027E  5195               	movf	(powf@iy+1)& (0+255),w,b
  4284   000280  0100               	movlb	0	; () banked
  4285   000282  1972               	xorwf	(??_powf+2)& (0+255),w,b
  4286   000284  E10E               	bnz	u9701
  4287   000286  0101               	movlb	1	; () banked
  4288   000288  5196               	movf	(powf@iy+2)& (0+255),w,b
  4289   00028A  0100               	movlb	0	; () banked
  4290   00028C  1973               	xorwf	(??_powf+3)& (0+255),w,b
  4291   00028E  E109               	bnz	u9701
  4292   000290  0101               	movlb	1	; () banked
  4293   000292  5197               	movf	(powf@iy+3)& (0+255),w,b
  4294   000294  0100               	movlb	0	; () banked
  4295   000296  1974               	xorwf	(??_powf+4)& (0+255),w,b
  4296   000298  A4D8               	btfss	status,2,c
  4297   00029A  EF51  F001         	goto	u9701
  4298   00029E  EF53  F001         	goto	u9700
  4299   0002A2                     u9701:
  4300   0002A2  EF7A  F001         	goto	l1270
  4301   0002A6                     u9700:
  4302   0002A6                     
  4303                           ; BSR set to: 0
  4304   0002A6  0E01               	movlw	1
  4305   0002A8  0101               	movlb	1	; () banked
  4306   0002AA  15A8               	andwf	powf@j& (0+255),w,b
  4307   0002AC  0100               	movlb	0	; () banked
  4308   0002AE  6F70               	movwf	??_powf& (0+255),b
  4309   0002B0  0E00               	movlw	0
  4310   0002B2  0101               	movlb	1	; () banked
  4311   0002B4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  4312   0002B6  0100               	movlb	0	; () banked
  4313   0002B8  6F71               	movwf	(??_powf+1)& (0+255),b
  4314   0002BA  0E00               	movlw	0
  4315   0002BC  0101               	movlb	1	; () banked
  4316   0002BE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  4317   0002C0  0100               	movlb	0	; () banked
  4318   0002C2  6F72               	movwf	(??_powf+2)& (0+255),b
  4319   0002C4  0E00               	movlw	0
  4320   0002C6  0101               	movlb	1	; () banked
  4321   0002C8  15AB               	andwf	(powf@j+3)& (0+255),w,b
  4322   0002CA  0100               	movlb	0	; () banked
  4323   0002CC  6F73               	movwf	(??_powf+3)& (0+255),b
  4324   0002CE  5170               	movf	??_powf& (0+255),w,b
  4325   0002D0  0802               	sublw	2
  4326   0002D2  0101               	movlb	1	; () banked
  4327   0002D4  6F54               	movwf	powf@yisint& (0+255),b
  4328   0002D6  0E00               	movlw	0
  4329   0002D8  0100               	movlb	0	; () banked
  4330   0002DA  5571               	subfwb	(??_powf+1)& (0+255),w,b
  4331   0002DC  0101               	movlb	1	; () banked
  4332   0002DE  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4333   0002E0  0E00               	movlw	0
  4334   0002E2  0100               	movlb	0	; () banked
  4335   0002E4  5572               	subfwb	(??_powf+2)& (0+255),w,b
  4336   0002E6  0101               	movlb	1	; () banked
  4337   0002E8  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4338   0002EA  0E00               	movlw	0
  4339   0002EC  0100               	movlb	0	; () banked
  4340   0002EE  5573               	subfwb	(??_powf+3)& (0+255),w,b
  4341   0002F0  0101               	movlb	1	; () banked
  4342   0002F2  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4343   0002F4                     l1270:
  4344   0002F4  0E80               	movlw	128
  4345   0002F6  0101               	movlb	1	; () banked
  4346   0002F8  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4347   0002FA  E109               	bnz	u9711
  4348   0002FC  0E7F               	movlw	127
  4349   0002FE  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4350   000300  1194               	iorwf	powf@iy& (0+255),w,b
  4351   000302  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4352   000304  A4D8               	btfss	status,2,c
  4353   000306  EF87  F001         	goto	u9711
  4354   00030A  EF89  F001         	goto	u9710
  4355   00030E                     u9711:
  4356   00030E  EFF5  F001         	goto	l7394
  4357   000312                     u9710:
  4358   000312                     
  4359                           ; BSR set to: 1
  4360   000312  0E80               	movlw	128
  4361   000314  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4362   000316  E109               	bnz	u9721
  4363   000318  0E3F               	movlw	63
  4364   00031A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4365   00031C  11AC               	iorwf	powf@ix& (0+255),w,b
  4366   00031E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4367   000320  A4D8               	btfss	status,2,c
  4368   000322  EF95  F001         	goto	u9721
  4369   000326  EF97  F001         	goto	u9720
  4370   00032A                     u9721:
  4371   00032A  EFA2  F001         	goto	l7378
  4372   00032E                     u9720:
  4373   00032E                     
  4374                           ; BSR set to: 1
  4375   00032E  0E00               	movlw	0
  4376   000330  0100               	movlb	0	; () banked
  4377   000332  6F68               	movwf	?_powf& (0+255),b
  4378   000334  0E00               	movlw	0
  4379   000336  6F69               	movwf	(?_powf+1)& (0+255),b
  4380   000338  0E80               	movlw	128
  4381   00033A  6F6A               	movwf	(?_powf+2)& (0+255),b
  4382   00033C  0E3F               	movlw	63
  4383   00033E  6F6B               	movwf	(?_powf+3)& (0+255),b
  4384   000340  EF63  F012         	goto	l1265
  4385   000344                     l7378:
  4386                           
  4387                           ; BSR set to: 1
  4388   000344  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4389   000346  EFB1  F001         	goto	u9731
  4390   00034A  05AC               	decf	powf@ix& (0+255),w,b
  4391   00034C  0E00               	movlw	0
  4392   00034E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4393   000350  0E80               	movlw	128
  4394   000352  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4395   000354  0E3F               	movlw	63
  4396   000356  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4397   000358  A0D8               	btfss	status,0,c
  4398   00035A  EFB1  F001         	goto	u9731
  4399   00035E  EFB3  F001         	goto	u9730
  4400   000362                     u9731:
  4401   000362  EFCF  F001         	goto	l7386
  4402   000366                     u9730:
  4403   000366                     
  4404                           ; BSR set to: 1
  4405   000366  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4406   000368  EFBA  F001         	goto	u9740
  4407   00036C  EFB8  F001         	goto	u9741
  4408   000370                     u9741:
  4409   000370  EFC5  F001         	goto	l1280
  4410   000374                     u9740:
  4411   000374                     
  4412                           ; BSR set to: 1
  4413   000374  0E00               	movlw	0
  4414   000376  0100               	movlb	0	; () banked
  4415   000378  6F68               	movwf	?_powf& (0+255),b
  4416   00037A  0E00               	movlw	0
  4417   00037C  6F69               	movwf	(?_powf+1)& (0+255),b
  4418   00037E  0E00               	movlw	0
  4419   000380  6F6A               	movwf	(?_powf+2)& (0+255),b
  4420   000382  0E00               	movlw	0
  4421   000384  6F6B               	movwf	(?_powf+3)& (0+255),b
  4422   000386  EF63  F012         	goto	l1265
  4423   00038A                     l1280:
  4424                           
  4425                           ; BSR set to: 1
  4426   00038A  C06C  F068         	movff	powf@y,?_powf
  4427   00038E  C06D  F069         	movff	powf@y+1,?_powf+1
  4428   000392  C06E  F06A         	movff	powf@y+2,?_powf+2
  4429   000396  C06F  F06B         	movff	powf@y+3,?_powf+3
  4430   00039A  EF63  F012         	goto	l1265
  4431   00039E                     l7386:
  4432                           
  4433                           ; BSR set to: 1
  4434   00039E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4435   0003A0  EFD6  F001         	goto	u9750
  4436   0003A4  EFD4  F001         	goto	u9751
  4437   0003A8                     u9751:
  4438   0003A8  EFEA  F001         	goto	l7390
  4439   0003AC                     u9750:
  4440   0003AC                     
  4441                           ; BSR set to: 1
  4442   0003AC  C06C  F001         	movff	powf@y,___flneg@f1
  4443   0003B0  C06D  F002         	movff	powf@y+1,___flneg@f1+1
  4444   0003B4  C06E  F003         	movff	powf@y+2,___flneg@f1+2
  4445   0003B8  C06F  F004         	movff	powf@y+3,___flneg@f1+3
  4446   0003BC  ECA3  F036         	call	___flneg	;wreg free
  4447   0003C0  C001  F068         	movff	?___flneg,?_powf
  4448   0003C4  C002  F069         	movff	?___flneg+1,?_powf+1
  4449   0003C8  C003  F06A         	movff	?___flneg+2,?_powf+2
  4450   0003CC  C004  F06B         	movff	?___flneg+3,?_powf+3
  4451   0003D0  EF63  F012         	goto	l1265
  4452   0003D4                     l7390:
  4453                           
  4454                           ; BSR set to: 1
  4455   0003D4  0E00               	movlw	0
  4456   0003D6  0100               	movlb	0	; () banked
  4457   0003D8  6F68               	movwf	?_powf& (0+255),b
  4458   0003DA  0E00               	movlw	0
  4459   0003DC  6F69               	movwf	(?_powf+1)& (0+255),b
  4460   0003DE  0E00               	movlw	0
  4461   0003E0  6F6A               	movwf	(?_powf+2)& (0+255),b
  4462   0003E2  0E00               	movlw	0
  4463   0003E4  6F6B               	movwf	(?_powf+3)& (0+255),b
  4464   0003E6  EF63  F012         	goto	l1265
  4465   0003EA                     l7394:
  4466                           
  4467                           ; BSR set to: 1
  4468   0003EA  0E80               	movlw	128
  4469   0003EC  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4470   0003EE  E109               	bnz	u9761
  4471   0003F0  0E3F               	movlw	63
  4472   0003F2  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4473   0003F4  1194               	iorwf	powf@iy& (0+255),w,b
  4474   0003F6  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4475   0003F8  A4D8               	btfss	status,2,c
  4476   0003FA  EF01  F002         	goto	u9761
  4477   0003FE  EF03  F002         	goto	u9760
  4478   000402                     u9761:
  4479   000402  EF30  F002         	goto	l7400
  4480   000406                     u9760:
  4481   000406                     
  4482                           ; BSR set to: 1
  4483   000406  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4484   000408  EF0A  F002         	goto	u9770
  4485   00040C  EF08  F002         	goto	u9771
  4486   000410                     u9771:
  4487   000410  EF26  F002         	goto	l1290
  4488   000414                     u9770:
  4489   000414                     
  4490                           ; BSR set to: 1
  4491   000414  0E00               	movlw	0
  4492   000416  6E28               	movwf	___fldiv@b^0,c
  4493   000418  0E00               	movlw	0
  4494   00041A  6E29               	movwf	(___fldiv@b+1)^0,c
  4495   00041C  0E80               	movlw	128
  4496   00041E  6E2A               	movwf	(___fldiv@b+2)^0,c
  4497   000420  0E3F               	movlw	63
  4498   000422  6E2B               	movwf	(___fldiv@b+3)^0,c
  4499   000424  C068  F02C         	movff	powf@x,___fldiv@a
  4500   000428  C069  F02D         	movff	powf@x+1,___fldiv@a+1
  4501   00042C  C06A  F02E         	movff	powf@x+2,___fldiv@a+2
  4502   000430  C06B  F02F         	movff	powf@x+3,___fldiv@a+3
  4503   000434  ECC8  F023         	call	___fldiv	;wreg free
  4504   000438  C028  F068         	movff	?___fldiv,?_powf
  4505   00043C  C029  F069         	movff	?___fldiv+1,?_powf+1
  4506   000440  C02A  F06A         	movff	?___fldiv+2,?_powf+2
  4507   000444  C02B  F06B         	movff	?___fldiv+3,?_powf+3
  4508   000448  EF63  F012         	goto	l1265
  4509   00044C                     l1290:
  4510                           
  4511                           ; BSR set to: 1
  4512   00044C  C068  F068         	movff	powf@x,?_powf
  4513   000450  C069  F069         	movff	powf@x+1,?_powf+1
  4514   000454  C06A  F06A         	movff	powf@x+2,?_powf+2
  4515   000458  C06B  F06B         	movff	powf@x+3,?_powf+3
  4516   00045C  EF63  F012         	goto	l1265
  4517   000460                     l7400:
  4518                           
  4519                           ; BSR set to: 1
  4520   000460  0E40               	movlw	64
  4521   000462  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4522   000464  1184               	iorwf	powf@hy& (0+255),w,b
  4523   000466  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4524   000468  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4525   00046A  A4D8               	btfss	status,2,c
  4526   00046C  EF3A  F002         	goto	u9781
  4527   000470  EF3C  F002         	goto	u9780
  4528   000474                     u9781:
  4529   000474  EF58  F002         	goto	l7406
  4530   000478                     u9780:
  4531   000478                     
  4532                           ; BSR set to: 1
  4533   000478  C068  F00F         	movff	powf@x,___flmul@b
  4534   00047C  C069  F010         	movff	powf@x+1,___flmul@b+1
  4535   000480  C06A  F011         	movff	powf@x+2,___flmul@b+2
  4536   000484  C06B  F012         	movff	powf@x+3,___flmul@b+3
  4537   000488  C068  F013         	movff	powf@x,___flmul@a
  4538   00048C  C069  F014         	movff	powf@x+1,___flmul@a+1
  4539   000490  C06A  F015         	movff	powf@x+2,___flmul@a+2
  4540   000494  C06B  F016         	movff	powf@x+3,___flmul@a+3
  4541   000498  ECC6  F01F         	call	___flmul	;wreg free
  4542   00049C  C00F  F068         	movff	?___flmul,?_powf
  4543   0004A0  C010  F069         	movff	?___flmul+1,?_powf+1
  4544   0004A4  C011  F06A         	movff	?___flmul+2,?_powf+2
  4545   0004A8  C012  F06B         	movff	?___flmul+3,?_powf+3
  4546   0004AC  EF63  F012         	goto	l1265
  4547   0004B0                     l7406:
  4548                           
  4549                           ; BSR set to: 1
  4550   0004B0  0E3F               	movlw	63
  4551   0004B2  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4552   0004B4  1184               	iorwf	powf@hy& (0+255),w,b
  4553   0004B6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4554   0004B8  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4555   0004BA  A4D8               	btfss	status,2,c
  4556   0004BC  EF62  F002         	goto	u9791
  4557   0004C0  EF64  F002         	goto	u9790
  4558   0004C4                     u9791:
  4559   0004C4  EF7F  F002         	goto	l1294
  4560   0004C8                     u9790:
  4561   0004C8                     
  4562                           ; BSR set to: 1
  4563   0004C8  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4564   0004CA  EF69  F002         	goto	u9801
  4565   0004CE  EF6B  F002         	goto	u9800
  4566   0004D2                     u9801:
  4567   0004D2  EF7F  F002         	goto	l1294
  4568   0004D6                     u9800:
  4569   0004D6                     
  4570                           ; BSR set to: 1
  4571   0004D6  C068  F001         	movff	powf@x,sqrtf@x
  4572   0004DA  C069  F002         	movff	powf@x+1,sqrtf@x+1
  4573   0004DE  C06A  F003         	movff	powf@x+2,sqrtf@x+2
  4574   0004E2  C06B  F004         	movff	powf@x+3,sqrtf@x+3
  4575   0004E6  ECD9  F021         	call	_sqrtf	;wreg free
  4576   0004EA  C001  F068         	movff	?_sqrtf,?_powf
  4577   0004EE  C002  F069         	movff	?_sqrtf+1,?_powf+1
  4578   0004F2  C003  F06A         	movff	?_sqrtf+2,?_powf+2
  4579   0004F6  C004  F06B         	movff	?_sqrtf+3,?_powf+3
  4580   0004FA  EF63  F012         	goto	l1265
  4581   0004FE                     l1294:
  4582                           
  4583                           ; BSR set to: 1
  4584   0004FE  C1AC  F178         	movff	powf@ix,powf@ax
  4585   000502  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  4586   000506  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  4587   00050A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  4588   00050E                     
  4589                           ; BSR set to: 1
  4590   00050E  0E80               	movlw	128
  4591   000510  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4592   000512  E10B               	bnz	u9810
  4593   000514  0E7F               	movlw	127
  4594   000516  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4595   000518  11AC               	iorwf	powf@ix& (0+255),w,b
  4596   00051A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4597   00051C  B4D8               	btfsc	status,2,c
  4598   00051E  EF93  F002         	goto	u9811
  4599   000522  EF95  F002         	goto	u9810
  4600   000526                     u9811:
  4601   000526  EFAE  F002         	goto	l1298
  4602   00052A                     u9810:
  4603   00052A                     
  4604                           ; BSR set to: 1
  4605   00052A  51AC               	movf	powf@ix& (0+255),w,b
  4606   00052C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4607   00052E  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  4608   000530  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  4609   000532  B4D8               	btfsc	status,2,c
  4610   000534  EF9E  F002         	goto	u9821
  4611   000538  EFA0  F002         	goto	u9820
  4612   00053C                     u9821:
  4613   00053C  EFAE  F002         	goto	l1298
  4614   000540                     u9820:
  4615   000540                     
  4616                           ; BSR set to: 1
  4617   000540  0E80               	movlw	128
  4618   000542  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4619   000544  E109               	bnz	u9831
  4620   000546  0E3F               	movlw	63
  4621   000548  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4622   00054A  11AC               	iorwf	powf@ix& (0+255),w,b
  4623   00054C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4624   00054E  A4D8               	btfss	status,2,c
  4625   000550  EFAC  F002         	goto	u9831
  4626   000554  EFAE  F002         	goto	u9830
  4627   000558                     u9831:
  4628   000558  EF49  F003         	goto	l7438
  4629   00055C                     u9830:
  4630   00055C                     l1298:
  4631                           
  4632                           ; BSR set to: 1
  4633   00055C  C178  F1B4         	movff	powf@ax,powf@z
  4634   000560  C179  F1B5         	movff	powf@ax+1,powf@z+1
  4635   000564  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  4636   000568  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  4637   00056C                     
  4638                           ; BSR set to: 1
  4639   00056C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4640   00056E  EFBD  F002         	goto	u9840
  4641   000572  EFBB  F002         	goto	u9841
  4642   000576                     u9841:
  4643   000576  EFD7  F002         	goto	l7424
  4644   00057A                     u9840:
  4645   00057A                     
  4646                           ; BSR set to: 1
  4647   00057A  0E00               	movlw	0
  4648   00057C  6E28               	movwf	___fldiv@b^0,c
  4649   00057E  0E00               	movlw	0
  4650   000580  6E29               	movwf	(___fldiv@b+1)^0,c
  4651   000582  0E80               	movlw	128
  4652   000584  6E2A               	movwf	(___fldiv@b+2)^0,c
  4653   000586  0E3F               	movlw	63
  4654   000588  6E2B               	movwf	(___fldiv@b+3)^0,c
  4655   00058A  C1B4  F02C         	movff	powf@z,___fldiv@a
  4656   00058E  C1B5  F02D         	movff	powf@z+1,___fldiv@a+1
  4657   000592  C1B6  F02E         	movff	powf@z+2,___fldiv@a+2
  4658   000596  C1B7  F02F         	movff	powf@z+3,___fldiv@a+3
  4659   00059A  ECC8  F023         	call	___fldiv	;wreg free
  4660   00059E  C028  F1B4         	movff	?___fldiv,powf@z
  4661   0005A2  C029  F1B5         	movff	?___fldiv+1,powf@z+1
  4662   0005A6  C02A  F1B6         	movff	?___fldiv+2,powf@z+2
  4663   0005AA  C02B  F1B7         	movff	?___fldiv+3,powf@z+3
  4664   0005AE                     l7424:
  4665   0005AE  0101               	movlb	1	; () banked
  4666   0005B0  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4667   0005B2  EFDF  F002         	goto	u9850
  4668   0005B6  EFDD  F002         	goto	u9851
  4669   0005BA                     u9851:
  4670   0005BA  EF3F  F003         	goto	l7434
  4671   0005BE                     u9850:
  4672   0005BE                     
  4673                           ; BSR set to: 1
  4674   0005BE  0E00               	movlw	0
  4675   0005C0  25AC               	addwf	powf@ix& (0+255),w,b
  4676   0005C2  0100               	movlb	0	; () banked
  4677   0005C4  6F70               	movwf	??_powf& (0+255),b
  4678   0005C6  0E00               	movlw	0
  4679   0005C8  0101               	movlb	1	; () banked
  4680   0005CA  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  4681   0005CC  0100               	movlb	0	; () banked
  4682   0005CE  6F71               	movwf	(??_powf+1)& (0+255),b
  4683   0005D0  0E80               	movlw	128
  4684   0005D2  0101               	movlb	1	; () banked
  4685   0005D4  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  4686   0005D6  0100               	movlb	0	; () banked
  4687   0005D8  6F72               	movwf	(??_powf+2)& (0+255),b
  4688   0005DA  0EC0               	movlw	192
  4689   0005DC  0101               	movlb	1	; () banked
  4690   0005DE  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  4691   0005E0  0100               	movlb	0	; () banked
  4692   0005E2  6F73               	movwf	(??_powf+3)& (0+255),b
  4693   0005E4  0101               	movlb	1	; () banked
  4694   0005E6  5154               	movf	powf@yisint& (0+255),w,b
  4695   0005E8  0100               	movlb	0	; () banked
  4696   0005EA  1170               	iorwf	??_powf& (0+255),w,b
  4697   0005EC  6F74               	movwf	(??_powf+4)& (0+255),b
  4698   0005EE  0101               	movlb	1	; () banked
  4699   0005F0  5155               	movf	(powf@yisint+1)& (0+255),w,b
  4700   0005F2  0100               	movlb	0	; () banked
  4701   0005F4  1171               	iorwf	(??_powf+1)& (0+255),w,b
  4702   0005F6  6F75               	movwf	(??_powf+5)& (0+255),b
  4703   0005F8  0101               	movlb	1	; () banked
  4704   0005FA  5156               	movf	(powf@yisint+2)& (0+255),w,b
  4705   0005FC  0100               	movlb	0	; () banked
  4706   0005FE  1172               	iorwf	(??_powf+2)& (0+255),w,b
  4707   000600  6F76               	movwf	(??_powf+6)& (0+255),b
  4708   000602  0101               	movlb	1	; () banked
  4709   000604  5157               	movf	(powf@yisint+3)& (0+255),w,b
  4710   000606  0100               	movlb	0	; () banked
  4711   000608  1173               	iorwf	(??_powf+3)& (0+255),w,b
  4712   00060A  6F77               	movwf	(??_powf+7)& (0+255),b
  4713   00060C  5174               	movf	(??_powf+4)& (0+255),w,b
  4714   00060E  1175               	iorwf	(??_powf+5)& (0+255),w,b
  4715   000610  1176               	iorwf	(??_powf+6)& (0+255),w,b
  4716   000612  1177               	iorwf	(??_powf+7)& (0+255),w,b
  4717   000614  A4D8               	btfss	status,2,c
  4718   000616  EF0F  F003         	goto	u9861
  4719   00061A  EF11  F003         	goto	u9860
  4720   00061E                     u9861:
  4721   00061E  EF21  F003         	goto	l7430
  4722   000622                     u9860:
  4723   000622                     l7428:
  4724   000622  0E00               	movlw	0
  4725   000624  0103               	movlb	3	; () banked
  4726   000626  6F49               	movwf	(_errno+1)& (0+255),b
  4727   000628  0E21               	movlw	33
  4728   00062A  6F48               	movwf	_errno& (0+255),b
  4729   00062C  0EFF               	movlw	255
  4730   00062E  0101               	movlb	1	; () banked
  4731   000630  6FB4               	movwf	powf@z& (0+255),b
  4732   000632  0EFF               	movlw	255
  4733   000634  6FB5               	movwf	(powf@z+1)& (0+255),b
  4734   000636  0EFF               	movlw	255
  4735   000638  6FB6               	movwf	(powf@z+2)& (0+255),b
  4736   00063A  0E7F               	movlw	127
  4737   00063C  6FB7               	movwf	(powf@z+3)& (0+255),b
  4738   00063E  EF3F  F003         	goto	l7434
  4739   000642                     l7430:
  4740                           
  4741                           ; BSR set to: 0
  4742   000642  0101               	movlb	1	; () banked
  4743   000644  0554               	decf	powf@yisint& (0+255),w,b
  4744   000646  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4745   000648  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4746   00064A  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4747   00064C  A4D8               	btfss	status,2,c
  4748   00064E  EF2B  F003         	goto	u9871
  4749   000652  EF2D  F003         	goto	u9870
  4750   000656                     u9871:
  4751   000656  EF3F  F003         	goto	l7434
  4752   00065A                     u9870:
  4753   00065A                     
  4754                           ; BSR set to: 1
  4755   00065A  C1B4  F001         	movff	powf@z,___flneg@f1
  4756   00065E  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  4757   000662  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  4758   000666  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  4759   00066A  ECA3  F036         	call	___flneg	;wreg free
  4760   00066E  C001  F1B4         	movff	?___flneg,powf@z
  4761   000672  C002  F1B5         	movff	?___flneg+1,powf@z+1
  4762   000676  C003  F1B6         	movff	?___flneg+2,powf@z+2
  4763   00067A  C004  F1B7         	movff	?___flneg+3,powf@z+3
  4764   00067E                     l7434:
  4765   00067E  C1B4  F068         	movff	powf@z,?_powf
  4766   000682  C1B5  F069         	movff	powf@z+1,?_powf+1
  4767   000686  C1B6  F06A         	movff	powf@z+2,?_powf+2
  4768   00068A  C1B7  F06B         	movff	powf@z+3,?_powf+3
  4769   00068E  EF63  F012         	goto	l1265
  4770   000692                     l7438:
  4771                           
  4772                           ; BSR set to: 1
  4773   000692  0E00               	movlw	0
  4774   000694  6F64               	movwf	powf@sn& (0+255),b
  4775   000696  0E00               	movlw	0
  4776   000698  6F65               	movwf	(powf@sn+1)& (0+255),b
  4777   00069A  0E00               	movlw	0
  4778   00069C  6F66               	movwf	(powf@sn+2)& (0+255),b
  4779   00069E  0E00               	movlw	0
  4780   0006A0  6F67               	movwf	(powf@sn+3)& (0+255),b
  4781   0006A2                     
  4782                           ; BSR set to: 1
  4783   0006A2  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4784   0006A4  EF58  F003         	goto	u9880
  4785   0006A8  EF56  F003         	goto	u9881
  4786   0006AC                     u9881:
  4787   0006AC  EF78  F003         	goto	l7454
  4788   0006B0                     u9880:
  4789   0006B0                     
  4790                           ; BSR set to: 1
  4791   0006B0  5154               	movf	powf@yisint& (0+255),w,b
  4792   0006B2  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4793   0006B4  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4794   0006B6  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4795   0006B8  A4D8               	btfss	status,2,c
  4796   0006BA  EF61  F003         	goto	u9891
  4797   0006BE  EF63  F003         	goto	u9890
  4798   0006C2                     u9891:
  4799   0006C2  EF65  F003         	goto	l7450
  4800   0006C6                     u9890:
  4801   0006C6  EF11  F003         	goto	l7428
  4802   0006CA                     l7450:
  4803                           
  4804                           ; BSR set to: 1
  4805   0006CA  0554               	decf	powf@yisint& (0+255),w,b
  4806   0006CC  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4807   0006CE  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4808   0006D0  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4809   0006D2  A4D8               	btfss	status,2,c
  4810   0006D4  EF6E  F003         	goto	u9901
  4811   0006D8  EF70  F003         	goto	u9900
  4812   0006DC                     u9901:
  4813   0006DC  EF78  F003         	goto	l7454
  4814   0006E0                     u9900:
  4815   0006E0                     
  4816                           ; BSR set to: 1
  4817   0006E0  0E00               	movlw	0
  4818   0006E2  6F64               	movwf	powf@sn& (0+255),b
  4819   0006E4  0E00               	movlw	0
  4820   0006E6  6F65               	movwf	(powf@sn+1)& (0+255),b
  4821   0006E8  0E00               	movlw	0
  4822   0006EA  6F66               	movwf	(powf@sn+2)& (0+255),b
  4823   0006EC  0E80               	movlw	128
  4824   0006EE  6F67               	movwf	(powf@sn+3)& (0+255),b
  4825   0006F0                     l7454:
  4826                           
  4827                           ; BSR set to: 1
  4828   0006F0  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4829   0006F2  EF87  F003         	goto	u9911
  4830   0006F6  0594               	decf	powf@iy& (0+255),w,b
  4831   0006F8  0E00               	movlw	0
  4832   0006FA  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  4833   0006FC  0E00               	movlw	0
  4834   0006FE  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  4835   000700  0E4D               	movlw	77
  4836   000702  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4837   000704  A0D8               	btfss	status,0,c
  4838   000706  EF87  F003         	goto	u9911
  4839   00070A  EF89  F003         	goto	u9910
  4840   00070E                     u9911:
  4841   00070E  EF4D  F005         	goto	l7510
  4842   000712                     u9910:
  4843   000712                     
  4844                           ; BSR set to: 1
  4845   000712  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4846   000714  EF9B  F003         	goto	u9920
  4847   000718  0EF8               	movlw	248
  4848   00071A  5DAC               	subwf	powf@ix& (0+255),w,b
  4849   00071C  0EFF               	movlw	255
  4850   00071E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4851   000720  0E7F               	movlw	127
  4852   000722  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4853   000724  0E3F               	movlw	63
  4854   000726  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4855   000728  B0D8               	btfsc	status,0,c
  4856   00072A  EF99  F003         	goto	u9921
  4857   00072E  EF9B  F003         	goto	u9920
  4858   000732                     u9921:
  4859   000732  EFBC  F003         	goto	l7472
  4860   000736                     u9920:
  4861   000736                     
  4862                           ; BSR set to: 1
  4863   000736  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4864   000738  EFA2  F003         	goto	u9930
  4865   00073C  EFA0  F003         	goto	u9931
  4866   000740                     u9931:
  4867   000740  EFB1  F003         	goto	l7468
  4868   000744                     u9930:
  4869   000744                     l7460:
  4870   000744  0E00               	movlw	0
  4871   000746  0101               	movlb	1	; () banked
  4872   000748  1164               	iorwf	powf@sn& (0+255),w,b
  4873   00074A  6FB4               	movwf	powf@z& (0+255),b
  4874   00074C  0E00               	movlw	0
  4875   00074E  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  4876   000750  6FB5               	movwf	(powf@z+1)& (0+255),b
  4877   000752  0E80               	movlw	128
  4878   000754  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  4879   000756  6FB6               	movwf	(powf@z+2)& (0+255),b
  4880   000758  0E7F               	movlw	127
  4881   00075A  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  4882   00075C  6FB7               	movwf	(powf@z+3)& (0+255),b
  4883   00075E  EF3F  F003         	goto	l7434
  4884   000762                     l7468:
  4885                           
  4886                           ; BSR set to: 1
  4887   000762  0E00               	movlw	0
  4888   000764  0100               	movlb	0	; () banked
  4889   000766  6F68               	movwf	?_powf& (0+255),b
  4890   000768  0E00               	movlw	0
  4891   00076A  6F69               	movwf	(?_powf+1)& (0+255),b
  4892   00076C  0E00               	movlw	0
  4893   00076E  6F6A               	movwf	(?_powf+2)& (0+255),b
  4894   000770  0E00               	movlw	0
  4895   000772  6F6B               	movwf	(?_powf+3)& (0+255),b
  4896   000774  EF63  F012         	goto	l1265
  4897   000778                     l7472:
  4898                           
  4899                           ; BSR set to: 1
  4900   000778  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4901   00077A  EFCC  F003         	goto	u9941
  4902   00077E  0E08               	movlw	8
  4903   000780  5DAC               	subwf	powf@ix& (0+255),w,b
  4904   000782  0E00               	movlw	0
  4905   000784  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4906   000786  0E80               	movlw	128
  4907   000788  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4908   00078A  0E3F               	movlw	63
  4909   00078C  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4910   00078E  A0D8               	btfss	status,0,c
  4911   000790  EFCC  F003         	goto	u9941
  4912   000794  EFCE  F003         	goto	u9940
  4913   000798                     u9941:
  4914   000798  EFEA  F003         	goto	l7488
  4915   00079C                     u9940:
  4916   00079C                     
  4917                           ; BSR set to: 1
  4918   00079C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4919   00079E  EFDB  F003         	goto	u9951
  4920   0007A2  5187               	movf	(powf@hy+3)& (0+255),w,b
  4921   0007A4  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4922   0007A6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4923   0007A8  E108               	bnz	u9950
  4924   0007AA  0584               	decf	powf@hy& (0+255),w,b
  4925   0007AC  A0D8               	btfss	status,0,c
  4926   0007AE  EFDB  F003         	goto	u9951
  4927   0007B2  EFDD  F003         	goto	u9950
  4928   0007B6                     u9951:
  4929   0007B6  EFDF  F003         	goto	l7484
  4930   0007BA                     u9950:
  4931   0007BA  EFA2  F003         	goto	l7460
  4932   0007BE                     l7484:
  4933                           
  4934                           ; BSR set to: 1
  4935   0007BE  0E00               	movlw	0
  4936   0007C0  0100               	movlb	0	; () banked
  4937   0007C2  6F68               	movwf	?_powf& (0+255),b
  4938   0007C4  0E00               	movlw	0
  4939   0007C6  6F69               	movwf	(?_powf+1)& (0+255),b
  4940   0007C8  0E00               	movlw	0
  4941   0007CA  6F6A               	movwf	(?_powf+2)& (0+255),b
  4942   0007CC  0E00               	movlw	0
  4943   0007CE  6F6B               	movwf	(?_powf+3)& (0+255),b
  4944   0007D0  EF63  F012         	goto	l1265
  4945   0007D4                     l7488:
  4946                           
  4947                           ; BSR set to: 1
  4948   0007D4  C178  F041         	movff	powf@ax,___fladd@b
  4949   0007D8  C179  F042         	movff	powf@ax+1,___fladd@b+1
  4950   0007DC  C17A  F043         	movff	powf@ax+2,___fladd@b+2
  4951   0007E0  C17B  F044         	movff	powf@ax+3,___fladd@b+3
  4952   0007E4  0E00               	movlw	0
  4953   0007E6  6E45               	movwf	___fladd@a^0,c
  4954   0007E8  0E00               	movlw	0
  4955   0007EA  6E46               	movwf	(___fladd@a+1)^0,c
  4956   0007EC  0E80               	movlw	128
  4957   0007EE  6E47               	movwf	(___fladd@a+2)^0,c
  4958   0007F0  0EBF               	movlw	191
  4959   0007F2  6E48               	movwf	(___fladd@a+3)^0,c
  4960   0007F4  EC6B  F01D         	call	___fladd	;wreg free
  4961   0007F8  C041  F1B0         	movff	?___fladd,powf@t
  4962   0007FC  C042  F1B1         	movff	?___fladd+1,powf@t+1
  4963   000800  C043  F1B2         	movff	?___fladd+2,powf@t+2
  4964   000804  C044  F1B3         	movff	?___fladd+3,powf@t+3
  4965   000808  0E00               	movlw	0
  4966   00080A  6E13               	movwf	___flmul@a^0,c
  4967   00080C  0E00               	movlw	0
  4968   00080E  6E14               	movwf	(___flmul@a+1)^0,c
  4969   000810  0E80               	movlw	128
  4970   000812  6E15               	movwf	(___flmul@a+2)^0,c
  4971   000814  0E3E               	movlw	62
  4972   000816  6E16               	movwf	(___flmul@a+3)^0,c
  4973   000818  C1B0  F00F         	movff	powf@t,___flmul@b
  4974   00081C  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  4975   000820  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  4976   000824  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  4977   000828  ECC6  F01F         	call	___flmul	;wreg free
  4978   00082C  C00F  F055         	movff	?___flmul,___flsub@a
  4979   000830  C010  F056         	movff	?___flmul+1,___flsub@a+1
  4980   000834  C011  F057         	movff	?___flmul+2,___flsub@a+2
  4981   000838  C012  F058         	movff	?___flmul+3,___flsub@a+3
  4982   00083C  0EAB               	movlw	171
  4983   00083E  6E51               	movwf	___flsub@b^0,c
  4984   000840  0EAA               	movlw	170
  4985   000842  6E52               	movwf	(___flsub@b+1)^0,c
  4986   000844  0EAA               	movlw	170
  4987   000846  6E53               	movwf	(___flsub@b+2)^0,c
  4988   000848  0E3E               	movlw	62
  4989   00084A  6E54               	movwf	(___flsub@b+3)^0,c
  4990   00084C  EC01  F036         	call	___flsub	;wreg free
  4991   000850  C051  F148         	movff	?___flsub,_powf$1837
  4992   000854  C052  F149         	movff	?___flsub+1,_powf$1837+1
  4993   000858  C053  F14A         	movff	?___flsub+2,_powf$1837+2
  4994   00085C  C054  F14B         	movff	?___flsub+3,_powf$1837+3
  4995   000860  C1B0  F013         	movff	powf@t,___flmul@a
  4996   000864  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  4997   000868  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  4998   00086C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  4999   000870  C1B0  F00F         	movff	powf@t,___flmul@b
  5000   000874  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5001   000878  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5002   00087C  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5003   000880  ECC6  F01F         	call	___flmul	;wreg free
  5004   000884  C00F  F158         	movff	?___flmul,_powf$1838
  5005   000888  C010  F159         	movff	?___flmul+1,_powf$1838+1
  5006   00088C  C011  F15A         	movff	?___flmul+2,_powf$1838+2
  5007   000890  C012  F15B         	movff	?___flmul+3,_powf$1838+3
  5008   000894  C1B0  F013         	movff	powf@t,___flmul@a
  5009   000898  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  5010   00089C  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  5011   0008A0  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  5012   0008A4  C148  F00F         	movff	_powf$1837,___flmul@b
  5013   0008A8  C149  F010         	movff	_powf$1837+1,___flmul@b+1
  5014   0008AC  C14A  F011         	movff	_powf$1837+2,___flmul@b+2
  5015   0008B0  C14B  F012         	movff	_powf$1837+3,___flmul@b+3
  5016   0008B4  ECC6  F01F         	call	___flmul	;wreg free
  5017   0008B8  C00F  F055         	movff	?___flmul,___flsub@a
  5018   0008BC  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5019   0008C0  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5020   0008C4  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5021   0008C8  0E00               	movlw	0
  5022   0008CA  6E51               	movwf	___flsub@b^0,c
  5023   0008CC  0E00               	movlw	0
  5024   0008CE  6E52               	movwf	(___flsub@b+1)^0,c
  5025   0008D0  0E00               	movlw	0
  5026   0008D2  6E53               	movwf	(___flsub@b+2)^0,c
  5027   0008D4  0E3F               	movlw	63
  5028   0008D6  6E54               	movwf	(___flsub@b+3)^0,c
  5029   0008D8  EC01  F036         	call	___flsub	;wreg free
  5030   0008DC  C051  F14C         	movff	?___flsub,_powf$1839
  5031   0008E0  C052  F14D         	movff	?___flsub+1,_powf$1839+1
  5032   0008E4  C053  F14E         	movff	?___flsub+2,_powf$1839+2
  5033   0008E8  C054  F14F         	movff	?___flsub+3,_powf$1839+3
  5034   0008EC  C158  F00F         	movff	_powf$1838,___flmul@b
  5035   0008F0  C159  F010         	movff	_powf$1838+1,___flmul@b+1
  5036   0008F4  C15A  F011         	movff	_powf$1838+2,___flmul@b+2
  5037   0008F8  C15B  F012         	movff	_powf$1838+3,___flmul@b+3
  5038   0008FC  C14C  F013         	movff	_powf$1839,___flmul@a
  5039   000900  C14D  F014         	movff	_powf$1839+1,___flmul@a+1
  5040   000904  C14E  F015         	movff	_powf$1839+2,___flmul@a+2
  5041   000908  C14F  F016         	movff	_powf$1839+3,___flmul@a+3
  5042   00090C  ECC6  F01F         	call	___flmul	;wreg free
  5043   000910  C00F  F144         	movff	?___flmul,powf@w
  5044   000914  C010  F145         	movff	?___flmul+1,powf@w+1
  5045   000918  C011  F146         	movff	?___flmul+2,powf@w+2
  5046   00091C  C012  F147         	movff	?___flmul+3,powf@w+3
  5047   000920  C1B0  F00F         	movff	powf@t,___flmul@b
  5048   000924  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5049   000928  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5050   00092C  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5051   000930  0E00               	movlw	0
  5052   000932  6E13               	movwf	___flmul@a^0,c
  5053   000934  0EAA               	movlw	170
  5054   000936  6E14               	movwf	(___flmul@a+1)^0,c
  5055   000938  0EB8               	movlw	184
  5056   00093A  6E15               	movwf	(___flmul@a+2)^0,c
  5057   00093C  0E3F               	movlw	63
  5058   00093E  6E16               	movwf	(___flmul@a+3)^0,c
  5059   000940  ECC6  F01F         	call	___flmul	;wreg free
  5060   000944  C00F  F17C         	movff	?___flmul,powf@u
  5061   000948  C010  F17D         	movff	?___flmul+1,powf@u+1
  5062   00094C  C011  F17E         	movff	?___flmul+2,powf@u+2
  5063   000950  C012  F17F         	movff	?___flmul+3,powf@u+3
  5064   000954  0E70               	movlw	112
  5065   000956  6E13               	movwf	___flmul@a^0,c
  5066   000958  0EA5               	movlw	165
  5067   00095A  6E14               	movwf	(___flmul@a+1)^0,c
  5068   00095C  0EEC               	movlw	236
  5069   00095E  6E15               	movwf	(___flmul@a+2)^0,c
  5070   000960  0E36               	movlw	54
  5071   000962  6E16               	movwf	(___flmul@a+3)^0,c
  5072   000964  C1B0  F00F         	movff	powf@t,___flmul@b
  5073   000968  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5074   00096C  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5075   000970  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5076   000974  ECC6  F01F         	call	___flmul	;wreg free
  5077   000978  C00F  F051         	movff	?___flmul,___flsub@b
  5078   00097C  C010  F052         	movff	?___flmul+1,___flsub@b+1
  5079   000980  C011  F053         	movff	?___flmul+2,___flsub@b+2
  5080   000984  C012  F054         	movff	?___flmul+3,___flsub@b+3
  5081   000988  0E3B               	movlw	59
  5082   00098A  6E13               	movwf	___flmul@a^0,c
  5083   00098C  0EAA               	movlw	170
  5084   00098E  6E14               	movwf	(___flmul@a+1)^0,c
  5085   000990  0EB8               	movlw	184
  5086   000992  6E15               	movwf	(___flmul@a+2)^0,c
  5087   000994  0E3F               	movlw	63
  5088   000996  6E16               	movwf	(___flmul@a+3)^0,c
  5089   000998  C144  F00F         	movff	powf@w,___flmul@b
  5090   00099C  C145  F010         	movff	powf@w+1,___flmul@b+1
  5091   0009A0  C146  F011         	movff	powf@w+2,___flmul@b+2
  5092   0009A4  C147  F012         	movff	powf@w+3,___flmul@b+3
  5093   0009A8  ECC6  F01F         	call	___flmul	;wreg free
  5094   0009AC  C00F  F055         	movff	?___flmul,___flsub@a
  5095   0009B0  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5096   0009B4  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5097   0009B8  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5098   0009BC  EC01  F036         	call	___flsub	;wreg free
  5099   0009C0  C051  F180         	movff	?___flsub,powf@v
  5100   0009C4  C052  F181         	movff	?___flsub+1,powf@v+1
  5101   0009C8  C053  F182         	movff	?___flsub+2,powf@v+2
  5102   0009CC  C054  F183         	movff	?___flsub+3,powf@v+3
  5103   0009D0  C17C  F041         	movff	powf@u,___fladd@b
  5104   0009D4  C17D  F042         	movff	powf@u+1,___fladd@b+1
  5105   0009D8  C17E  F043         	movff	powf@u+2,___fladd@b+2
  5106   0009DC  C17F  F044         	movff	powf@u+3,___fladd@b+3
  5107   0009E0  C180  F045         	movff	powf@v,___fladd@a
  5108   0009E4  C181  F046         	movff	powf@v+1,___fladd@a+1
  5109   0009E8  C182  F047         	movff	powf@v+2,___fladd@a+2
  5110   0009EC  C183  F048         	movff	powf@v+3,___fladd@a+3
  5111   0009F0  EC6B  F01D         	call	___fladd	;wreg free
  5112   0009F4  C041  F18C         	movff	?___fladd,powf@t1
  5113   0009F8  C042  F18D         	movff	?___fladd+1,powf@t1+1
  5114   0009FC  C043  F18E         	movff	?___fladd+2,powf@t1+2
  5115   000A00  C044  F18F         	movff	?___fladd+3,powf@t1+3
  5116   000A04  C18C  F198         	movff	powf@t1,powf@is
  5117   000A08  C18D  F199         	movff	powf@t1+1,powf@is+1
  5118   000A0C  C18E  F19A         	movff	powf@t1+2,powf@is+2
  5119   000A10  C18F  F19B         	movff	powf@t1+3,powf@is+3
  5120   000A14  0E00               	movlw	0
  5121   000A16  0101               	movlb	1	; () banked
  5122   000A18  1598               	andwf	powf@is& (0+255),w,b
  5123   000A1A  6F8C               	movwf	powf@t1& (0+255),b
  5124   000A1C  0EF0               	movlw	240
  5125   000A1E  1599               	andwf	(powf@is+1)& (0+255),w,b
  5126   000A20  6F8D               	movwf	(powf@t1+1)& (0+255),b
  5127   000A22  0EFF               	movlw	255
  5128   000A24  159A               	andwf	(powf@is+2)& (0+255),w,b
  5129   000A26  6F8E               	movwf	(powf@t1+2)& (0+255),b
  5130   000A28  0EFF               	movlw	255
  5131   000A2A  159B               	andwf	(powf@is+3)& (0+255),w,b
  5132   000A2C  6F8F               	movwf	(powf@t1+3)& (0+255),b
  5133   000A2E                     
  5134                           ; BSR set to: 1
  5135   000A2E  C17C  F055         	movff	powf@u,___flsub@a
  5136   000A32  C17D  F056         	movff	powf@u+1,___flsub@a+1
  5137   000A36  C17E  F057         	movff	powf@u+2,___flsub@a+2
  5138   000A3A  C17F  F058         	movff	powf@u+3,___flsub@a+3
  5139   000A3E  C18C  F051         	movff	powf@t1,___flsub@b
  5140   000A42  C18D  F052         	movff	powf@t1+1,___flsub@b+1
  5141   000A46  C18E  F053         	movff	powf@t1+2,___flsub@b+2
  5142   000A4A  C18F  F054         	movff	powf@t1+3,___flsub@b+3
  5143   000A4E  EC01  F036         	call	___flsub	;wreg free
  5144   000A52  C051  F19C         	movff	?___flsub,_powf$1840
  5145   000A56  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  5146   000A5A  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  5147   000A5E  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  5148   000A62  C180  F051         	movff	powf@v,___flsub@b
  5149   000A66  C181  F052         	movff	powf@v+1,___flsub@b+1
  5150   000A6A  C182  F053         	movff	powf@v+2,___flsub@b+2
  5151   000A6E  C183  F054         	movff	powf@v+3,___flsub@b+3
  5152   000A72  C19C  F055         	movff	_powf$1840,___flsub@a
  5153   000A76  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  5154   000A7A  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  5155   000A7E  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  5156   000A82  EC01  F036         	call	___flsub	;wreg free
  5157   000A86  C051  F11C         	movff	?___flsub,powf@t2
  5158   000A8A  C052  F11D         	movff	?___flsub+1,powf@t2+1
  5159   000A8E  C053  F11E         	movff	?___flsub+2,powf@t2+2
  5160   000A92  C054  F11F         	movff	?___flsub+3,powf@t2+3
  5161   000A96  EF5B  F00C         	goto	l7638
  5162   000A9A                     l7510:
  5163                           
  5164                           ; BSR set to: 1
  5165   000A9A  0E00               	movlw	0
  5166   000A9C  6F88               	movwf	powf@n& (0+255),b
  5167   000A9E  0E00               	movlw	0
  5168   000AA0  6F89               	movwf	(powf@n+1)& (0+255),b
  5169   000AA2  0E00               	movlw	0
  5170   000AA4  6F8A               	movwf	(powf@n+2)& (0+255),b
  5171   000AA6  0E00               	movlw	0
  5172   000AA8  6F8B               	movwf	(powf@n+3)& (0+255),b
  5173   000AAA                     
  5174                           ; BSR set to: 1
  5175   000AAA  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  5176   000AAC  EF63  F005         	goto	u9960
  5177   000AB0  51AF               	movf	(powf@ix+3)& (0+255),w,b
  5178   000AB2  E107               	bnz	u9961
  5179   000AB4  0E80               	movlw	128
  5180   000AB6  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  5181   000AB8  B0D8               	btfsc	status,0,c
  5182   000ABA  EF61  F005         	goto	u9961
  5183   000ABE  EF63  F005         	goto	u9960
  5184   000AC2                     u9961:
  5185   000AC2  EF8E  F005         	goto	l7520
  5186   000AC6                     u9960:
  5187   000AC6                     
  5188                           ; BSR set to: 1
  5189   000AC6  C178  F00F         	movff	powf@ax,___flmul@b
  5190   000ACA  C179  F010         	movff	powf@ax+1,___flmul@b+1
  5191   000ACE  C17A  F011         	movff	powf@ax+2,___flmul@b+2
  5192   000AD2  C17B  F012         	movff	powf@ax+3,___flmul@b+3
  5193   000AD6  0E00               	movlw	0
  5194   000AD8  6E13               	movwf	___flmul@a^0,c
  5195   000ADA  0E00               	movlw	0
  5196   000ADC  6E14               	movwf	(___flmul@a+1)^0,c
  5197   000ADE  0E80               	movlw	128
  5198   000AE0  6E15               	movwf	(___flmul@a+2)^0,c
  5199   000AE2  0E4B               	movlw	75
  5200   000AE4  6E16               	movwf	(___flmul@a+3)^0,c
  5201   000AE6  ECC6  F01F         	call	___flmul	;wreg free
  5202   000AEA  C00F  F178         	movff	?___flmul,powf@ax
  5203   000AEE  C010  F179         	movff	?___flmul+1,powf@ax+1
  5204   000AF2  C011  F17A         	movff	?___flmul+2,powf@ax+2
  5205   000AF6  C012  F17B         	movff	?___flmul+3,powf@ax+3
  5206   000AFA  0EE8               	movlw	232
  5207   000AFC  0101               	movlb	1	; () banked
  5208   000AFE  2788               	addwf	powf@n& (0+255),f,b
  5209   000B00  0EFF               	movlw	255
  5210   000B02  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5211   000B04  0EFF               	movlw	255
  5212   000B06  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5213   000B08  0EFF               	movlw	255
  5214   000B0A  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5215   000B0C                     
  5216                           ; BSR set to: 1
  5217   000B0C  C178  F1AC         	movff	powf@ax,powf@ix
  5218   000B10  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  5219   000B14  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  5220   000B18  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  5221   000B1C                     l7520:
  5222                           
  5223                           ; BSR set to: 1
  5224   000B1C  0E17               	movlw	23
  5225   000B1E  0100               	movlb	0	; () banked
  5226   000B20  6F70               	movwf	??_powf& (0+255),b
  5227   000B22  C1AC  F071         	movff	powf@ix,??_powf+1
  5228   000B26  C1AD  F072         	movff	powf@ix+1,??_powf+2
  5229   000B2A  C1AE  F073         	movff	powf@ix+2,??_powf+3
  5230   000B2E  C1AF  F074         	movff	powf@ix+3,??_powf+4
  5231   000B32                     u9975:
  5232   000B32  6770               	tstfsz	??_powf& (0+255),b
  5233   000B34  EF9E  F005         	goto	u9976
  5234   000B38  EFA6  F005         	goto	u9977
  5235   000B3C                     u9976:
  5236   000B3C  3574               	rlcf	(??_powf+4)& (0+255),w,b
  5237   000B3E  3374               	rrcf	(??_powf+4)& (0+255),f,b
  5238   000B40  3373               	rrcf	(??_powf+3)& (0+255),f,b
  5239   000B42  3372               	rrcf	(??_powf+2)& (0+255),f,b
  5240   000B44  3371               	rrcf	(??_powf+1)& (0+255),f,b
  5241   000B46  2F70               	decfsz	??_powf& (0+255),f,b
  5242   000B48  EF99  F005         	goto	u9975
  5243   000B4C                     u9977:
  5244   000B4C  0E81               	movlw	129
  5245   000B4E  0100               	movlb	0	; () banked
  5246   000B50  2571               	addwf	(??_powf+1)& (0+255),w,b
  5247   000B52  6F75               	movwf	(??_powf+5)& (0+255),b
  5248   000B54  0EFF               	movlw	255
  5249   000B56  2172               	addwfc	(??_powf+2)& (0+255),w,b
  5250   000B58  6F76               	movwf	(??_powf+6)& (0+255),b
  5251   000B5A  0EFF               	movlw	255
  5252   000B5C  2173               	addwfc	(??_powf+3)& (0+255),w,b
  5253   000B5E  6F77               	movwf	(??_powf+7)& (0+255),b
  5254   000B60  0EFF               	movlw	255
  5255   000B62  2174               	addwfc	(??_powf+4)& (0+255),w,b
  5256   000B64  6F78               	movwf	(??_powf+8)& (0+255),b
  5257   000B66  5175               	movf	(??_powf+5)& (0+255),w,b
  5258   000B68  0101               	movlb	1	; () banked
  5259   000B6A  2788               	addwf	powf@n& (0+255),f,b
  5260   000B6C  0100               	movlb	0	; () banked
  5261   000B6E  5176               	movf	(??_powf+6)& (0+255),w,b
  5262   000B70  0101               	movlb	1	; () banked
  5263   000B72  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5264   000B74  0100               	movlb	0	; () banked
  5265   000B76  5177               	movf	(??_powf+7)& (0+255),w,b
  5266   000B78  0101               	movlb	1	; () banked
  5267   000B7A  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5268   000B7C  0100               	movlb	0	; () banked
  5269   000B7E  5178               	movf	(??_powf+8)& (0+255),w,b
  5270   000B80  0101               	movlb	1	; () banked
  5271   000B82  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5272   000B84                     
  5273                           ; BSR set to: 1
  5274   000B84  0EFF               	movlw	255
  5275   000B86  15AC               	andwf	powf@ix& (0+255),w,b
  5276   000B88  6FA8               	movwf	powf@j& (0+255),b
  5277   000B8A  0EFF               	movlw	255
  5278   000B8C  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  5279   000B8E  6FA9               	movwf	(powf@j+1)& (0+255),b
  5280   000B90  0E7F               	movlw	127
  5281   000B92  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  5282   000B94  6FAA               	movwf	(powf@j+2)& (0+255),b
  5283   000B96  0E00               	movlw	0
  5284   000B98  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  5285   000B9A  6FAB               	movwf	(powf@j+3)& (0+255),b
  5286   000B9C                     
  5287                           ; BSR set to: 1
  5288   000B9C  0E00               	movlw	0
  5289   000B9E  6FA4               	movwf	powf@k& (0+255),b
  5290   000BA0  0E00               	movlw	0
  5291   000BA2  6FA5               	movwf	(powf@k+1)& (0+255),b
  5292   000BA4  0E00               	movlw	0
  5293   000BA6  6FA6               	movwf	(powf@k+2)& (0+255),b
  5294   000BA8  0E00               	movlw	0
  5295   000BAA  6FA7               	movwf	(powf@k+3)& (0+255),b
  5296   000BAC                     
  5297                           ; BSR set to: 1
  5298   000BAC  0E00               	movlw	0
  5299   000BAE  11A8               	iorwf	powf@j& (0+255),w,b
  5300   000BB0  6FAC               	movwf	powf@ix& (0+255),b
  5301   000BB2  0E00               	movlw	0
  5302   000BB4  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  5303   000BB6  6FAD               	movwf	(powf@ix+1)& (0+255),b
  5304   000BB8  0E80               	movlw	128
  5305   000BBA  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  5306   000BBC  6FAE               	movwf	(powf@ix+2)& (0+255),b
  5307   000BBE  0E3F               	movlw	63
  5308   000BC0  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  5309   000BC2  6FAF               	movwf	(powf@ix+3)& (0+255),b
  5310   000BC4                     
  5311                           ; BSR set to: 1
  5312   000BC4  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5313   000BC6  EFF4  F005         	goto	u9980
  5314   000BCA  51AB               	movf	(powf@j+3)& (0+255),w,b
  5315   000BCC  E10B               	bnz	u9981
  5316   000BCE  0E72               	movlw	114
  5317   000BD0  5DA8               	subwf	powf@j& (0+255),w,b
  5318   000BD2  0EC4               	movlw	196
  5319   000BD4  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5320   000BD6  0E1C               	movlw	28
  5321   000BD8  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5322   000BDA  B0D8               	btfsc	status,0,c
  5323   000BDC  EFF2  F005         	goto	u9981
  5324   000BE0  EFF4  F005         	goto	u9980
  5325   000BE4                     u9981:
  5326   000BE4  EFF6  F005         	goto	l7532
  5327   000BE8                     u9980:
  5328   000BE8  EF20  F006         	goto	l7538
  5329   000BEC                     l7532:
  5330                           
  5331                           ; BSR set to: 1
  5332   000BEC  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5333   000BEE  EF08  F006         	goto	u9990
  5334   000BF2  51AB               	movf	(powf@j+3)& (0+255),w,b
  5335   000BF4  E10B               	bnz	u9991
  5336   000BF6  0ED7               	movlw	215
  5337   000BF8  5DA8               	subwf	powf@j& (0+255),w,b
  5338   000BFA  0EB3               	movlw	179
  5339   000BFC  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5340   000BFE  0E5D               	movlw	93
  5341   000C00  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5342   000C02  B0D8               	btfsc	status,0,c
  5343   000C04  EF06  F006         	goto	u9991
  5344   000C08  EF08  F006         	goto	u9990
  5345   000C0C                     u9991:
  5346   000C0C  EF12  F006         	goto	l7536
  5347   000C10                     u9990:
  5348   000C10                     
  5349                           ; BSR set to: 1
  5350   000C10  0E01               	movlw	1
  5351   000C12  6FA4               	movwf	powf@k& (0+255),b
  5352   000C14  0E00               	movlw	0
  5353   000C16  6FA5               	movwf	(powf@k+1)& (0+255),b
  5354   000C18  0E00               	movlw	0
  5355   000C1A  6FA6               	movwf	(powf@k+2)& (0+255),b
  5356   000C1C  0E00               	movlw	0
  5357   000C1E  6FA7               	movwf	(powf@k+3)& (0+255),b
  5358   000C20  EF20  F006         	goto	l7538
  5359   000C24                     l7536:
  5360                           
  5361                           ; BSR set to: 1
  5362   000C24  0E01               	movlw	1
  5363   000C26  2788               	addwf	powf@n& (0+255),f,b
  5364   000C28  0E00               	movlw	0
  5365   000C2A  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5366   000C2C  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5367   000C2E  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5368   000C30  0E00               	movlw	0
  5369   000C32  27AC               	addwf	powf@ix& (0+255),f,b
  5370   000C34  0E00               	movlw	0
  5371   000C36  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  5372   000C38  0E80               	movlw	128
  5373   000C3A  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  5374   000C3C  0EFF               	movlw	255
  5375   000C3E  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  5376   000C40                     l7538:
  5377                           
  5378                           ; BSR set to: 1
  5379   000C40  C1AC  F178         	movff	powf@ix,powf@ax
  5380   000C44  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  5381   000C48  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  5382   000C4C  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  5383   000C50                     
  5384                           ; BSR set to: 1
  5385   000C50  C178  F051         	movff	powf@ax,___flsub@b
  5386   000C54  C179  F052         	movff	powf@ax+1,___flsub@b+1
  5387   000C58  C17A  F053         	movff	powf@ax+2,___flsub@b+2
  5388   000C5C  C17B  F054         	movff	powf@ax+3,___flsub@b+3
  5389   000C60  C1A4  F070         	movff	powf@k,??_powf
  5390   000C64  C1A5  F071         	movff	powf@k+1,??_powf+1
  5391   000C68  0100               	movlb	0	; () banked
  5392   000C6A  90D8               	bcf	status,0,c
  5393   000C6C  3770               	rlcf	??_powf& (0+255),f,b
  5394   000C6E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5395   000C70  90D8               	bcf	status,0,c
  5396   000C72  3770               	rlcf	??_powf& (0+255),f,b
  5397   000C74  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5398   000C76  0E6D               	movlw	low _bp
  5399   000C78  2570               	addwf	??_powf& (0+255),w,b
  5400   000C7A  6EF6               	movwf	tblptrl,c
  5401   000C7C  0E7E               	movlw	high _bp
  5402   000C7E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5403   000C80  6EF7               	movwf	tblptrh,c
  5404   000C82                     	if	0	;There are less than 3 active tblptr bytes
  5405   000C82                     	endif
  5406   000C82  0009               	tblrd		*+
  5407   000C84  CFF5 F055          	movff	tablat,___flsub@a
  5408   000C88  0009               	tblrd		*+
  5409   000C8A  CFF5 F056          	movff	tablat,___flsub@a+1
  5410   000C8E  0009               	tblrd		*+
  5411   000C90  CFF5 F057          	movff	tablat,___flsub@a+2
  5412   000C94  000A               	tblrd		*-
  5413   000C96  CFF5 F058          	movff	tablat,___flsub@a+3
  5414   000C9A  EC01  F036         	call	___flsub	;wreg free
  5415   000C9E  C051  F17C         	movff	?___flsub,powf@u
  5416   000CA2  C052  F17D         	movff	?___flsub+1,powf@u+1
  5417   000CA6  C053  F17E         	movff	?___flsub+2,powf@u+2
  5418   000CAA  C054  F17F         	movff	?___flsub+3,powf@u+3
  5419   000CAE  0E00               	movlw	0
  5420   000CB0  6E28               	movwf	___fldiv@b^0,c
  5421   000CB2  0E00               	movlw	0
  5422   000CB4  6E29               	movwf	(___fldiv@b+1)^0,c
  5423   000CB6  0E80               	movlw	128
  5424   000CB8  6E2A               	movwf	(___fldiv@b+2)^0,c
  5425   000CBA  0E3F               	movlw	63
  5426   000CBC  6E2B               	movwf	(___fldiv@b+3)^0,c
  5427   000CBE  C178  F045         	movff	powf@ax,___fladd@a
  5428   000CC2  C179  F046         	movff	powf@ax+1,___fladd@a+1
  5429   000CC6  C17A  F047         	movff	powf@ax+2,___fladd@a+2
  5430   000CCA  C17B  F048         	movff	powf@ax+3,___fladd@a+3
  5431   000CCE  C1A4  F070         	movff	powf@k,??_powf
  5432   000CD2  C1A5  F071         	movff	powf@k+1,??_powf+1
  5433   000CD6  0100               	movlb	0	; () banked
  5434   000CD8  90D8               	bcf	status,0,c
  5435   000CDA  3770               	rlcf	??_powf& (0+255),f,b
  5436   000CDC  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5437   000CDE  90D8               	bcf	status,0,c
  5438   000CE0  3770               	rlcf	??_powf& (0+255),f,b
  5439   000CE2  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5440   000CE4  0E6D               	movlw	low _bp
  5441   000CE6  2570               	addwf	??_powf& (0+255),w,b
  5442   000CE8  6EF6               	movwf	tblptrl,c
  5443   000CEA  0E7E               	movlw	high _bp
  5444   000CEC  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5445   000CEE  6EF7               	movwf	tblptrh,c
  5446   000CF0                     	if	0	;There are less than 3 active tblptr bytes
  5447   000CF0                     	endif
  5448   000CF0  0009               	tblrd		*+
  5449   000CF2  CFF5 F041          	movff	tablat,___fladd@b
  5450   000CF6  0009               	tblrd		*+
  5451   000CF8  CFF5 F042          	movff	tablat,___fladd@b+1
  5452   000CFC  0009               	tblrd		*+
  5453   000CFE  CFF5 F043          	movff	tablat,___fladd@b+2
  5454   000D02  000A               	tblrd		*-
  5455   000D04  CFF5 F044          	movff	tablat,___fladd@b+3
  5456   000D08  EC6B  F01D         	call	___fladd	;wreg free
  5457   000D0C  C041  F02C         	movff	?___fladd,___fldiv@a
  5458   000D10  C042  F02D         	movff	?___fladd+1,___fldiv@a+1
  5459   000D14  C043  F02E         	movff	?___fladd+2,___fldiv@a+2
  5460   000D18  C044  F02F         	movff	?___fladd+3,___fldiv@a+3
  5461   000D1C  ECC8  F023         	call	___fldiv	;wreg free
  5462   000D20  C028  F180         	movff	?___fldiv,powf@v
  5463   000D24  C029  F181         	movff	?___fldiv+1,powf@v+1
  5464   000D28  C02A  F182         	movff	?___fldiv+2,powf@v+2
  5465   000D2C  C02B  F183         	movff	?___fldiv+3,powf@v+3
  5466   000D30  C17C  F00F         	movff	powf@u,___flmul@b
  5467   000D34  C17D  F010         	movff	powf@u+1,___flmul@b+1
  5468   000D38  C17E  F011         	movff	powf@u+2,___flmul@b+2
  5469   000D3C  C17F  F012         	movff	powf@u+3,___flmul@b+3
  5470   000D40  C180  F013         	movff	powf@v,___flmul@a
  5471   000D44  C181  F014         	movff	powf@v+1,___flmul@a+1
  5472   000D48  C182  F015         	movff	powf@v+2,___flmul@a+2
  5473   000D4C  C183  F016         	movff	powf@v+3,___flmul@a+3
  5474   000D50  ECC6  F01F         	call	___flmul	;wreg free
  5475   000D54  C00F  F160         	movff	?___flmul,powf@s
  5476   000D58  C010  F161         	movff	?___flmul+1,powf@s+1
  5477   000D5C  C011  F162         	movff	?___flmul+2,powf@s+2
  5478   000D60  C012  F163         	movff	?___flmul+3,powf@s+3
  5479   000D64  C160  F174         	movff	powf@s,powf@s_h
  5480   000D68  C161  F175         	movff	powf@s+1,powf@s_h+1
  5481   000D6C  C162  F176         	movff	powf@s+2,powf@s_h+2
  5482   000D70  C163  F177         	movff	powf@s+3,powf@s_h+3
  5483   000D74  C174  F198         	movff	powf@s_h,powf@is
  5484   000D78  C175  F199         	movff	powf@s_h+1,powf@is+1
  5485   000D7C  C176  F19A         	movff	powf@s_h+2,powf@is+2
  5486   000D80  C177  F19B         	movff	powf@s_h+3,powf@is+3
  5487   000D84  0E00               	movlw	0
  5488   000D86  0101               	movlb	1	; () banked
  5489   000D88  1598               	andwf	powf@is& (0+255),w,b
  5490   000D8A  6F74               	movwf	powf@s_h& (0+255),b
  5491   000D8C  0EF0               	movlw	240
  5492   000D8E  1599               	andwf	(powf@is+1)& (0+255),w,b
  5493   000D90  6F75               	movwf	(powf@s_h+1)& (0+255),b
  5494   000D92  0EFF               	movlw	255
  5495   000D94  159A               	andwf	(powf@is+2)& (0+255),w,b
  5496   000D96  6F76               	movwf	(powf@s_h+2)& (0+255),b
  5497   000D98  0EFF               	movlw	255
  5498   000D9A  159B               	andwf	(powf@is+3)& (0+255),w,b
  5499   000D9C  6F77               	movwf	(powf@s_h+3)& (0+255),b
  5500   000D9E                     
  5501                           ; BSR set to: 1
  5502   000D9E  C1AC  F070         	movff	powf@ix,??_powf
  5503   000DA2  C1AD  F071         	movff	powf@ix+1,??_powf+1
  5504   000DA6  C1AE  F072         	movff	powf@ix+2,??_powf+2
  5505   000DAA  C1AF  F073         	movff	powf@ix+3,??_powf+3
  5506   000DAE  0100               	movlb	0	; () banked
  5507   000DB0  3573               	rlcf	(??_powf+3)& (0+255),w,b
  5508   000DB2  3373               	rrcf	(??_powf+3)& (0+255),f,b
  5509   000DB4  3372               	rrcf	(??_powf+2)& (0+255),f,b
  5510   000DB6  3371               	rrcf	(??_powf+1)& (0+255),f,b
  5511   000DB8  3370               	rrcf	??_powf& (0+255),f,b
  5512   000DBA  0E00               	movlw	0
  5513   000DBC  1570               	andwf	??_powf& (0+255),w,b
  5514   000DBE  6F74               	movwf	(??_powf+4)& (0+255),b
  5515   000DC0  0EF0               	movlw	240
  5516   000DC2  1571               	andwf	(??_powf+1)& (0+255),w,b
  5517   000DC4  6F75               	movwf	(??_powf+5)& (0+255),b
  5518   000DC6  0EFF               	movlw	255
  5519   000DC8  1572               	andwf	(??_powf+2)& (0+255),w,b
  5520   000DCA  6F76               	movwf	(??_powf+6)& (0+255),b
  5521   000DCC  0EFF               	movlw	255
  5522   000DCE  1573               	andwf	(??_powf+3)& (0+255),w,b
  5523   000DD0  6F77               	movwf	(??_powf+7)& (0+255),b
  5524   000DD2  0E00               	movlw	0
  5525   000DD4  1174               	iorwf	(??_powf+4)& (0+255),w,b
  5526   000DD6  0101               	movlb	1	; () banked
  5527   000DD8  6F98               	movwf	powf@is& (0+255),b
  5528   000DDA  0E00               	movlw	0
  5529   000DDC  0100               	movlb	0	; () banked
  5530   000DDE  1175               	iorwf	(??_powf+5)& (0+255),w,b
  5531   000DE0  0101               	movlb	1	; () banked
  5532   000DE2  6F99               	movwf	(powf@is+1)& (0+255),b
  5533   000DE4  0E00               	movlw	0
  5534   000DE6  0100               	movlb	0	; () banked
  5535   000DE8  1176               	iorwf	(??_powf+6)& (0+255),w,b
  5536   000DEA  0101               	movlb	1	; () banked
  5537   000DEC  6F9A               	movwf	(powf@is+2)& (0+255),b
  5538   000DEE  0E20               	movlw	32
  5539   000DF0  0100               	movlb	0	; () banked
  5540   000DF2  1177               	iorwf	(??_powf+7)& (0+255),w,b
  5541   000DF4  0101               	movlb	1	; () banked
  5542   000DF6  6F9B               	movwf	(powf@is+3)& (0+255),b
  5543   000DF8                     
  5544                           ; BSR set to: 1
  5545   000DF8  C1A4  F070         	movff	powf@k,??_powf
  5546   000DFC  C1A5  F071         	movff	powf@k+1,??_powf+1
  5547   000E00  C1A6  F072         	movff	powf@k+2,??_powf+2
  5548   000E04  C1A7  F073         	movff	powf@k+3,??_powf+3
  5549   000E08  0E15               	movlw	21
  5550   000E0A                     u10005:
  5551   000E0A  90D8               	bcf	status,0,c
  5552   000E0C  0100               	movlb	0	; () banked
  5553   000E0E  3770               	rlcf	??_powf& (0+255),f,b
  5554   000E10  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5555   000E12  3772               	rlcf	(??_powf+2)& (0+255),f,b
  5556   000E14  3773               	rlcf	(??_powf+3)& (0+255),f,b
  5557   000E16  2EE8               	decfsz	wreg,f,c
  5558   000E18  EF05  F007         	goto	u10005
  5559   000E1C  0101               	movlb	1	; () banked
  5560   000E1E  5198               	movf	powf@is& (0+255),w,b
  5561   000E20  0100               	movlb	0	; () banked
  5562   000E22  2570               	addwf	??_powf& (0+255),w,b
  5563   000E24  6F74               	movwf	(??_powf+4)& (0+255),b
  5564   000E26  0101               	movlb	1	; () banked
  5565   000E28  5199               	movf	(powf@is+1)& (0+255),w,b
  5566   000E2A  0100               	movlb	0	; () banked
  5567   000E2C  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5568   000E2E  6F75               	movwf	(??_powf+5)& (0+255),b
  5569   000E30  0101               	movlb	1	; () banked
  5570   000E32  519A               	movf	(powf@is+2)& (0+255),w,b
  5571   000E34  0100               	movlb	0	; () banked
  5572   000E36  2172               	addwfc	(??_powf+2)& (0+255),w,b
  5573   000E38  6F76               	movwf	(??_powf+6)& (0+255),b
  5574   000E3A  0101               	movlb	1	; () banked
  5575   000E3C  519B               	movf	(powf@is+3)& (0+255),w,b
  5576   000E3E  0100               	movlb	0	; () banked
  5577   000E40  2173               	addwfc	(??_powf+3)& (0+255),w,b
  5578   000E42  6F77               	movwf	(??_powf+7)& (0+255),b
  5579   000E44  0E00               	movlw	0
  5580   000E46  2574               	addwf	(??_powf+4)& (0+255),w,b
  5581   000E48  0101               	movlb	1	; () banked
  5582   000E4A  6F70               	movwf	powf@t_h& (0+255),b
  5583   000E4C  0E00               	movlw	0
  5584   000E4E  0100               	movlb	0	; () banked
  5585   000E50  2175               	addwfc	(??_powf+5)& (0+255),w,b
  5586   000E52  0101               	movlb	1	; () banked
  5587   000E54  6F71               	movwf	(powf@t_h+1)& (0+255),b
  5588   000E56  0E40               	movlw	64
  5589   000E58  0100               	movlb	0	; () banked
  5590   000E5A  2176               	addwfc	(??_powf+6)& (0+255),w,b
  5591   000E5C  0101               	movlb	1	; () banked
  5592   000E5E  6F72               	movwf	(powf@t_h+2)& (0+255),b
  5593   000E60  0E00               	movlw	0
  5594   000E62  0100               	movlb	0	; () banked
  5595   000E64  2177               	addwfc	(??_powf+7)& (0+255),w,b
  5596   000E66  0101               	movlb	1	; () banked
  5597   000E68  6F73               	movwf	(powf@t_h+3)& (0+255),b
  5598   000E6A                     
  5599                           ; BSR set to: 1
  5600   000E6A  C1A4  F070         	movff	powf@k,??_powf
  5601   000E6E  C1A5  F071         	movff	powf@k+1,??_powf+1
  5602   000E72  0100               	movlb	0	; () banked
  5603   000E74  90D8               	bcf	status,0,c
  5604   000E76  3770               	rlcf	??_powf& (0+255),f,b
  5605   000E78  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5606   000E7A  90D8               	bcf	status,0,c
  5607   000E7C  3770               	rlcf	??_powf& (0+255),f,b
  5608   000E7E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5609   000E80  0E6D               	movlw	low _bp
  5610   000E82  2570               	addwf	??_powf& (0+255),w,b
  5611   000E84  6EF6               	movwf	tblptrl,c
  5612   000E86  0E7E               	movlw	high _bp
  5613   000E88  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5614   000E8A  6EF7               	movwf	tblptrh,c
  5615   000E8C                     	if	0	;There are less than 3 active tblptr bytes
  5616   000E8C                     	endif
  5617   000E8C  0009               	tblrd		*+
  5618   000E8E  CFF5 F055          	movff	tablat,___flsub@a
  5619   000E92  0009               	tblrd		*+
  5620   000E94  CFF5 F056          	movff	tablat,___flsub@a+1
  5621   000E98  0009               	tblrd		*+
  5622   000E9A  CFF5 F057          	movff	tablat,___flsub@a+2
  5623   000E9E  000A               	tblrd		*-
  5624   000EA0  CFF5 F058          	movff	tablat,___flsub@a+3
  5625   000EA4  C170  F051         	movff	powf@t_h,___flsub@b
  5626   000EA8  C171  F052         	movff	powf@t_h+1,___flsub@b+1
  5627   000EAC  C172  F053         	movff	powf@t_h+2,___flsub@b+2
  5628   000EB0  C173  F054         	movff	powf@t_h+3,___flsub@b+3
  5629   000EB4  EC01  F036         	call	___flsub	;wreg free
  5630   000EB8  C051  F19C         	movff	?___flsub,_powf$1840
  5631   000EBC  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  5632   000EC0  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  5633   000EC4  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  5634   000EC8  C178  F051         	movff	powf@ax,___flsub@b
  5635   000ECC  C179  F052         	movff	powf@ax+1,___flsub@b+1
  5636   000ED0  C17A  F053         	movff	powf@ax+2,___flsub@b+2
  5637   000ED4  C17B  F054         	movff	powf@ax+3,___flsub@b+3
  5638   000ED8  C19C  F055         	movff	_powf$1840,___flsub@a
  5639   000EDC  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  5640   000EE0  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  5641   000EE4  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  5642   000EE8  EC01  F036         	call	___flsub	;wreg free
  5643   000EEC  C051  F134         	movff	?___flsub,powf@t_l
  5644   000EF0  C052  F135         	movff	?___flsub+1,powf@t_l+1
  5645   000EF4  C053  F136         	movff	?___flsub+2,powf@t_l+2
  5646   000EF8  C054  F137         	movff	?___flsub+3,powf@t_l+3
  5647   000EFC  C170  F013         	movff	powf@t_h,___flmul@a
  5648   000F00  C171  F014         	movff	powf@t_h+1,___flmul@a+1
  5649   000F04  C172  F015         	movff	powf@t_h+2,___flmul@a+2
  5650   000F08  C173  F016         	movff	powf@t_h+3,___flmul@a+3
  5651   000F0C  C174  F00F         	movff	powf@s_h,___flmul@b
  5652   000F10  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5653   000F14  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5654   000F18  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5655   000F1C  ECC6  F01F         	call	___flmul	;wreg free
  5656   000F20  C00F  F055         	movff	?___flmul,___flsub@a
  5657   000F24  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5658   000F28  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5659   000F2C  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5660   000F30  C17C  F051         	movff	powf@u,___flsub@b
  5661   000F34  C17D  F052         	movff	powf@u+1,___flsub@b+1
  5662   000F38  C17E  F053         	movff	powf@u+2,___flsub@b+2
  5663   000F3C  C17F  F054         	movff	powf@u+3,___flsub@b+3
  5664   000F40  EC01  F036         	call	___flsub	;wreg free
  5665   000F44  C051  F19C         	movff	?___flsub,_powf$1840
  5666   000F48  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  5667   000F4C  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  5668   000F50  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  5669   000F54  C134  F013         	movff	powf@t_l,___flmul@a
  5670   000F58  C135  F014         	movff	powf@t_l+1,___flmul@a+1
  5671   000F5C  C136  F015         	movff	powf@t_l+2,___flmul@a+2
  5672   000F60  C137  F016         	movff	powf@t_l+3,___flmul@a+3
  5673   000F64  C174  F00F         	movff	powf@s_h,___flmul@b
  5674   000F68  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5675   000F6C  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5676   000F70  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5677   000F74  ECC6  F01F         	call	___flmul	;wreg free
  5678   000F78  C00F  F055         	movff	?___flmul,___flsub@a
  5679   000F7C  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5680   000F80  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5681   000F84  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5682   000F88  C19C  F051         	movff	_powf$1840,___flsub@b
  5683   000F8C  C19D  F052         	movff	_powf$1840+1,___flsub@b+1
  5684   000F90  C19E  F053         	movff	_powf$1840+2,___flsub@b+2
  5685   000F94  C19F  F054         	movff	_powf$1840+3,___flsub@b+3
  5686   000F98  EC01  F036         	call	___flsub	;wreg free
  5687   000F9C  C051  F158         	movff	?___flsub,_powf$1838
  5688   000FA0  C052  F159         	movff	?___flsub+1,_powf$1838+1
  5689   000FA4  C053  F15A         	movff	?___flsub+2,_powf$1838+2
  5690   000FA8  C054  F15B         	movff	?___flsub+3,_powf$1838+3
  5691   000FAC  C158  F00F         	movff	_powf$1838,___flmul@b
  5692   000FB0  C159  F010         	movff	_powf$1838+1,___flmul@b+1
  5693   000FB4  C15A  F011         	movff	_powf$1838+2,___flmul@b+2
  5694   000FB8  C15B  F012         	movff	_powf$1838+3,___flmul@b+3
  5695   000FBC  C180  F013         	movff	powf@v,___flmul@a
  5696   000FC0  C181  F014         	movff	powf@v+1,___flmul@a+1
  5697   000FC4  C182  F015         	movff	powf@v+2,___flmul@a+2
  5698   000FC8  C183  F016         	movff	powf@v+3,___flmul@a+3
  5699   000FCC  ECC6  F01F         	call	___flmul	;wreg free
  5700   000FD0  C00F  F130         	movff	?___flmul,powf@s_l
  5701   000FD4  C010  F131         	movff	?___flmul+1,powf@s_l+1
  5702   000FD8  C011  F132         	movff	?___flmul+2,powf@s_l+2
  5703   000FDC  C012  F133         	movff	?___flmul+3,powf@s_l+3
  5704   000FE0  C160  F00F         	movff	powf@s,___flmul@b
  5705   000FE4  C161  F010         	movff	powf@s+1,___flmul@b+1
  5706   000FE8  C162  F011         	movff	powf@s+2,___flmul@b+2
  5707   000FEC  C163  F012         	movff	powf@s+3,___flmul@b+3
  5708   000FF0  C160  F013         	movff	powf@s,___flmul@a
  5709   000FF4  C161  F014         	movff	powf@s+1,___flmul@a+1
  5710   000FF8  C162  F015         	movff	powf@s+2,___flmul@a+2
  5711   000FFC  C163  F016         	movff	powf@s+3,___flmul@a+3
  5712   001000  ECC6  F01F         	call	___flmul	;wreg free
  5713   001004  C00F  F190         	movff	?___flmul,powf@s2
  5714   001008  C010  F191         	movff	?___flmul+1,powf@s2+1
  5715   00100C  C011  F192         	movff	?___flmul+2,powf@s2+2
  5716   001010  C012  F193         	movff	?___flmul+3,powf@s2+3
  5717   001014  0E55               	movlw	85
  5718   001016  6E45               	movwf	___fladd@a^0,c
  5719   001018  0E32               	movlw	50
  5720   00101A  6E46               	movwf	(___fladd@a+1)^0,c
  5721   00101C  0E6C               	movlw	108
  5722   00101E  6E47               	movwf	(___fladd@a+2)^0,c
  5723   001020  0E3E               	movlw	62
  5724   001022  6E48               	movwf	(___fladd@a+3)^0,c
  5725   001024  0E42               	movlw	66
  5726   001026  6E13               	movwf	___flmul@a^0,c
  5727   001028  0EF1               	movlw	241
  5728   00102A  6E14               	movwf	(___flmul@a+1)^0,c
  5729   00102C  0E53               	movlw	83
  5730   00102E  6E15               	movwf	(___flmul@a+2)^0,c
  5731   001030  0E3E               	movlw	62
  5732   001032  6E16               	movwf	(___flmul@a+3)^0,c
  5733   001034  C190  F00F         	movff	powf@s2,___flmul@b
  5734   001038  C191  F010         	movff	powf@s2+1,___flmul@b+1
  5735   00103C  C192  F011         	movff	powf@s2+2,___flmul@b+2
  5736   001040  C193  F012         	movff	powf@s2+3,___flmul@b+3
  5737   001044  ECC6  F01F         	call	___flmul	;wreg free
  5738   001048  C00F  F041         	movff	?___flmul,___fladd@b
  5739   00104C  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5740   001050  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5741   001054  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5742   001058  EC6B  F01D         	call	___fladd	;wreg free
  5743   00105C  C041  F148         	movff	?___fladd,_powf$1837
  5744   001060  C042  F149         	movff	?___fladd+1,_powf$1837+1
  5745   001064  C043  F14A         	movff	?___fladd+2,_powf$1837+2
  5746   001068  C044  F14B         	movff	?___fladd+3,_powf$1837+3
  5747   00106C  0E05               	movlw	5
  5748   00106E  6E45               	movwf	___fladd@a^0,c
  5749   001070  0EA3               	movlw	163
  5750   001072  6E46               	movwf	(___fladd@a+1)^0,c
  5751   001074  0E8B               	movlw	139
  5752   001076  6E47               	movwf	(___fladd@a+2)^0,c
  5753   001078  0E3E               	movlw	62
  5754   00107A  6E48               	movwf	(___fladd@a+3)^0,c
  5755   00107C  C190  F013         	movff	powf@s2,___flmul@a
  5756   001080  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5757   001084  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5758   001088  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5759   00108C  C148  F00F         	movff	_powf$1837,___flmul@b
  5760   001090  C149  F010         	movff	_powf$1837+1,___flmul@b+1
  5761   001094  C14A  F011         	movff	_powf$1837+2,___flmul@b+2
  5762   001098  C14B  F012         	movff	_powf$1837+3,___flmul@b+3
  5763   00109C  ECC6  F01F         	call	___flmul	;wreg free
  5764   0010A0  C00F  F041         	movff	?___flmul,___fladd@b
  5765   0010A4  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5766   0010A8  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5767   0010AC  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5768   0010B0  EC6B  F01D         	call	___fladd	;wreg free
  5769   0010B4  C041  F158         	movff	?___fladd,_powf$1838
  5770   0010B8  C042  F159         	movff	?___fladd+1,_powf$1838+1
  5771   0010BC  C043  F15A         	movff	?___fladd+2,_powf$1838+2
  5772   0010C0  C044  F15B         	movff	?___fladd+3,_powf$1838+3
  5773   0010C4  0EAB               	movlw	171
  5774   0010C6  6E45               	movwf	___fladd@a^0,c
  5775   0010C8  0EAA               	movlw	170
  5776   0010CA  6E46               	movwf	(___fladd@a+1)^0,c
  5777   0010CC  0EAA               	movlw	170
  5778   0010CE  6E47               	movwf	(___fladd@a+2)^0,c
  5779   0010D0  0E3E               	movlw	62
  5780   0010D2  6E48               	movwf	(___fladd@a+3)^0,c
  5781   0010D4  C190  F013         	movff	powf@s2,___flmul@a
  5782   0010D8  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5783   0010DC  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5784   0010E0  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5785   0010E4  C158  F00F         	movff	_powf$1838,___flmul@b
  5786   0010E8  C159  F010         	movff	_powf$1838+1,___flmul@b+1
  5787   0010EC  C15A  F011         	movff	_powf$1838+2,___flmul@b+2
  5788   0010F0  C15B  F012         	movff	_powf$1838+3,___flmul@b+3
  5789   0010F4  ECC6  F01F         	call	___flmul	;wreg free
  5790   0010F8  C00F  F041         	movff	?___flmul,___fladd@b
  5791   0010FC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5792   001100  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5793   001104  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5794   001108  EC6B  F01D         	call	___fladd	;wreg free
  5795   00110C  C041  F14C         	movff	?___fladd,_powf$1839
  5796   001110  C042  F14D         	movff	?___fladd+1,_powf$1839+1
  5797   001114  C043  F14E         	movff	?___fladd+2,_powf$1839+2
  5798   001118  C044  F14F         	movff	?___fladd+3,_powf$1839+3
  5799   00111C  0EB7               	movlw	183
  5800   00111E  6E45               	movwf	___fladd@a^0,c
  5801   001120  0E6D               	movlw	109
  5802   001122  6E46               	movwf	(___fladd@a+1)^0,c
  5803   001124  0EDB               	movlw	219
  5804   001126  6E47               	movwf	(___fladd@a+2)^0,c
  5805   001128  0E3E               	movlw	62
  5806   00112A  6E48               	movwf	(___fladd@a+3)^0,c
  5807   00112C  C190  F013         	movff	powf@s2,___flmul@a
  5808   001130  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5809   001134  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5810   001138  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5811   00113C  C14C  F00F         	movff	_powf$1839,___flmul@b
  5812   001140  C14D  F010         	movff	_powf$1839+1,___flmul@b+1
  5813   001144  C14E  F011         	movff	_powf$1839+2,___flmul@b+2
  5814   001148  C14F  F012         	movff	_powf$1839+3,___flmul@b+3
  5815   00114C  ECC6  F01F         	call	___flmul	;wreg free
  5816   001150  C00F  F041         	movff	?___flmul,___fladd@b
  5817   001154  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5818   001158  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5819   00115C  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5820   001160  EC6B  F01D         	call	___fladd	;wreg free
  5821   001164  C041  F138         	movff	?___fladd,_powf$1841
  5822   001168  C042  F139         	movff	?___fladd+1,_powf$1841+1
  5823   00116C  C043  F13A         	movff	?___fladd+2,_powf$1841+2
  5824   001170  C044  F13B         	movff	?___fladd+3,_powf$1841+3
  5825   001174  0E9A               	movlw	154
  5826   001176  6E45               	movwf	___fladd@a^0,c
  5827   001178  0E99               	movlw	153
  5828   00117A  6E46               	movwf	(___fladd@a+1)^0,c
  5829   00117C  0E19               	movlw	25
  5830   00117E  6E47               	movwf	(___fladd@a+2)^0,c
  5831   001180  0E3F               	movlw	63
  5832   001182  6E48               	movwf	(___fladd@a+3)^0,c
  5833   001184  C190  F013         	movff	powf@s2,___flmul@a
  5834   001188  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5835   00118C  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5836   001190  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5837   001194  C138  F00F         	movff	_powf$1841,___flmul@b
  5838   001198  C139  F010         	movff	_powf$1841+1,___flmul@b+1
  5839   00119C  C13A  F011         	movff	_powf$1841+2,___flmul@b+2
  5840   0011A0  C13B  F012         	movff	_powf$1841+3,___flmul@b+3
  5841   0011A4  ECC6  F01F         	call	___flmul	;wreg free
  5842   0011A8  C00F  F041         	movff	?___flmul,___fladd@b
  5843   0011AC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5844   0011B0  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5845   0011B4  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5846   0011B8  EC6B  F01D         	call	___fladd	;wreg free
  5847   0011BC  C041  F100         	movff	?___fladd,_powf$1842
  5848   0011C0  C042  F101         	movff	?___fladd+1,_powf$1842+1
  5849   0011C4  C043  F102         	movff	?___fladd+2,_powf$1842+2
  5850   0011C8  C044  F103         	movff	?___fladd+3,_powf$1842+3
  5851   0011CC  C190  F013         	movff	powf@s2,___flmul@a
  5852   0011D0  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5853   0011D4  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5854   0011D8  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5855   0011DC  C190  F00F         	movff	powf@s2,___flmul@b
  5856   0011E0  C191  F010         	movff	powf@s2+1,___flmul@b+1
  5857   0011E4  C192  F011         	movff	powf@s2+2,___flmul@b+2
  5858   0011E8  C193  F012         	movff	powf@s2+3,___flmul@b+3
  5859   0011EC  ECC6  F01F         	call	___flmul	;wreg free
  5860   0011F0  C00F  F104         	movff	?___flmul,_powf$1843
  5861   0011F4  C010  F105         	movff	?___flmul+1,_powf$1843+1
  5862   0011F8  C011  F106         	movff	?___flmul+2,_powf$1843+2
  5863   0011FC  C012  F107         	movff	?___flmul+3,_powf$1843+3
  5864   001200  C100  F00F         	movff	_powf$1842,___flmul@b
  5865   001204  C101  F010         	movff	_powf$1842+1,___flmul@b+1
  5866   001208  C102  F011         	movff	_powf$1842+2,___flmul@b+2
  5867   00120C  C103  F012         	movff	_powf$1842+3,___flmul@b+3
  5868   001210  C104  F013         	movff	_powf$1843,___flmul@a
  5869   001214  C105  F014         	movff	_powf$1843+1,___flmul@a+1
  5870   001218  C106  F015         	movff	_powf$1843+2,___flmul@a+2
  5871   00121C  C107  F016         	movff	_powf$1843+3,___flmul@a+3
  5872   001220  ECC6  F01F         	call	___flmul	;wreg free
  5873   001224  C00F  F150         	movff	?___flmul,powf@r
  5874   001228  C010  F151         	movff	?___flmul+1,powf@r+1
  5875   00122C  C011  F152         	movff	?___flmul+2,powf@r+2
  5876   001230  C012  F153         	movff	?___flmul+3,powf@r+3
  5877   001234  C130  F013         	movff	powf@s_l,___flmul@a
  5878   001238  C131  F014         	movff	powf@s_l+1,___flmul@a+1
  5879   00123C  C132  F015         	movff	powf@s_l+2,___flmul@a+2
  5880   001240  C133  F016         	movff	powf@s_l+3,___flmul@a+3
  5881   001244  C160  F045         	movff	powf@s,___fladd@a
  5882   001248  C161  F046         	movff	powf@s+1,___fladd@a+1
  5883   00124C  C162  F047         	movff	powf@s+2,___fladd@a+2
  5884   001250  C163  F048         	movff	powf@s+3,___fladd@a+3
  5885   001254  C174  F041         	movff	powf@s_h,___fladd@b
  5886   001258  C175  F042         	movff	powf@s_h+1,___fladd@b+1
  5887   00125C  C176  F043         	movff	powf@s_h+2,___fladd@b+2
  5888   001260  C177  F044         	movff	powf@s_h+3,___fladd@b+3
  5889   001264  EC6B  F01D         	call	___fladd	;wreg free
  5890   001268  C041  F00F         	movff	?___fladd,___flmul@b
  5891   00126C  C042  F010         	movff	?___fladd+1,___flmul@b+1
  5892   001270  C043  F011         	movff	?___fladd+2,___flmul@b+2
  5893   001274  C044  F012         	movff	?___fladd+3,___flmul@b+3
  5894   001278  ECC6  F01F         	call	___flmul	;wreg free
  5895   00127C  C00F  F15C         	movff	?___flmul,_powf$1844
  5896   001280  C010  F15D         	movff	?___flmul+1,_powf$1844+1
  5897   001284  C011  F15E         	movff	?___flmul+2,_powf$1844+2
  5898   001288  C012  F15F         	movff	?___flmul+3,_powf$1844+3
  5899   00128C  C150  F041         	movff	powf@r,___fladd@b
  5900   001290  C151  F042         	movff	powf@r+1,___fladd@b+1
  5901   001294  C152  F043         	movff	powf@r+2,___fladd@b+2
  5902   001298  C153  F044         	movff	powf@r+3,___fladd@b+3
  5903   00129C  C15C  F045         	movff	_powf$1844,___fladd@a
  5904   0012A0  C15D  F046         	movff	_powf$1844+1,___fladd@a+1
  5905   0012A4  C15E  F047         	movff	_powf$1844+2,___fladd@a+2
  5906   0012A8  C15F  F048         	movff	_powf$1844+3,___fladd@a+3
  5907   0012AC  EC6B  F01D         	call	___fladd	;wreg free
  5908   0012B0  C041  F150         	movff	?___fladd,powf@r
  5909   0012B4  C042  F151         	movff	?___fladd+1,powf@r+1
  5910   0012B8  C043  F152         	movff	?___fladd+2,powf@r+2
  5911   0012BC  C044  F153         	movff	?___fladd+3,powf@r+3
  5912   0012C0  C174  F00F         	movff	powf@s_h,___flmul@b
  5913   0012C4  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5914   0012C8  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5915   0012CC  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5916   0012D0  C174  F013         	movff	powf@s_h,___flmul@a
  5917   0012D4  C175  F014         	movff	powf@s_h+1,___flmul@a+1
  5918   0012D8  C176  F015         	movff	powf@s_h+2,___flmul@a+2
  5919   0012DC  C177  F016         	movff	powf@s_h+3,___flmul@a+3
  5920   0012E0  ECC6  F01F         	call	___flmul	;wreg free
  5921   0012E4  C00F  F190         	movff	?___flmul,powf@s2
  5922   0012E8  C010  F191         	movff	?___flmul+1,powf@s2+1
  5923   0012EC  C011  F192         	movff	?___flmul+2,powf@s2+2
  5924   0012F0  C012  F193         	movff	?___flmul+3,powf@s2+3
  5925   0012F4  0E00               	movlw	0
  5926   0012F6  6E45               	movwf	___fladd@a^0,c
  5927   0012F8  0E00               	movlw	0
  5928   0012FA  6E46               	movwf	(___fladd@a+1)^0,c
  5929   0012FC  0E40               	movlw	64
  5930   0012FE  6E47               	movwf	(___fladd@a+2)^0,c
  5931   001300  0E40               	movlw	64
  5932   001302  6E48               	movwf	(___fladd@a+3)^0,c
  5933   001304  C190  F041         	movff	powf@s2,___fladd@b
  5934   001308  C191  F042         	movff	powf@s2+1,___fladd@b+1
  5935   00130C  C192  F043         	movff	powf@s2+2,___fladd@b+2
  5936   001310  C193  F044         	movff	powf@s2+3,___fladd@b+3
  5937   001314  EC6B  F01D         	call	___fladd	;wreg free
  5938   001318  C041  F15C         	movff	?___fladd,_powf$1844
  5939   00131C  C042  F15D         	movff	?___fladd+1,_powf$1844+1
  5940   001320  C043  F15E         	movff	?___fladd+2,_powf$1844+2
  5941   001324  C044  F15F         	movff	?___fladd+3,_powf$1844+3
  5942   001328  C15C  F041         	movff	_powf$1844,___fladd@b
  5943   00132C  C15D  F042         	movff	_powf$1844+1,___fladd@b+1
  5944   001330  C15E  F043         	movff	_powf$1844+2,___fladd@b+2
  5945   001334  C15F  F044         	movff	_powf$1844+3,___fladd@b+3
  5946   001338  C150  F045         	movff	powf@r,___fladd@a
  5947   00133C  C151  F046         	movff	powf@r+1,___fladd@a+1
  5948   001340  C152  F047         	movff	powf@r+2,___fladd@a+2
  5949   001344  C153  F048         	movff	powf@r+3,___fladd@a+3
  5950   001348  EC6B  F01D         	call	___fladd	;wreg free
  5951   00134C  C041  F170         	movff	?___fladd,powf@t_h
  5952   001350  C042  F171         	movff	?___fladd+1,powf@t_h+1
  5953   001354  C043  F172         	movff	?___fladd+2,powf@t_h+2
  5954   001358  C044  F173         	movff	?___fladd+3,powf@t_h+3
  5955   00135C  C170  F198         	movff	powf@t_h,powf@is
  5956   001360  C171  F199         	movff	powf@t_h+1,powf@is+1
  5957   001364  C172  F19A         	movff	powf@t_h+2,powf@is+2
  5958   001368  C173  F19B         	movff	powf@t_h+3,powf@is+3
  5959   00136C  0E00               	movlw	0
  5960   00136E  0101               	movlb	1	; () banked
  5961   001370  1598               	andwf	powf@is& (0+255),w,b
  5962   001372  6F70               	movwf	powf@t_h& (0+255),b
  5963   001374  0EF0               	movlw	240
  5964   001376  1599               	andwf	(powf@is+1)& (0+255),w,b
  5965   001378  6F71               	movwf	(powf@t_h+1)& (0+255),b
  5966   00137A  0EFF               	movlw	255
  5967   00137C  159A               	andwf	(powf@is+2)& (0+255),w,b
  5968   00137E  6F72               	movwf	(powf@t_h+2)& (0+255),b
  5969   001380  0EFF               	movlw	255
  5970   001382  159B               	andwf	(powf@is+3)& (0+255),w,b
  5971   001384  6F73               	movwf	(powf@t_h+3)& (0+255),b
  5972   001386                     
  5973                           ; BSR set to: 1
  5974   001386  0E00               	movlw	0
  5975   001388  6E45               	movwf	___fladd@a^0,c
  5976   00138A  0E00               	movlw	0
  5977   00138C  6E46               	movwf	(___fladd@a+1)^0,c
  5978   00138E  0E40               	movlw	64
  5979   001390  6E47               	movwf	(___fladd@a+2)^0,c
  5980   001392  0EC0               	movlw	192
  5981   001394  6E48               	movwf	(___fladd@a+3)^0,c
  5982   001396  C170  F041         	movff	powf@t_h,___fladd@b
  5983   00139A  C171  F042         	movff	powf@t_h+1,___fladd@b+1
  5984   00139E  C172  F043         	movff	powf@t_h+2,___fladd@b+2
  5985   0013A2  C173  F044         	movff	powf@t_h+3,___fladd@b+3
  5986   0013A6  EC6B  F01D         	call	___fladd	;wreg free
  5987   0013AA  C041  F13C         	movff	?___fladd,_powf$1845
  5988   0013AE  C042  F13D         	movff	?___fladd+1,_powf$1845+1
  5989   0013B2  C043  F13E         	movff	?___fladd+2,_powf$1845+2
  5990   0013B6  C044  F13F         	movff	?___fladd+3,_powf$1845+3
  5991   0013BA  C190  F055         	movff	powf@s2,___flsub@a
  5992   0013BE  C191  F056         	movff	powf@s2+1,___flsub@a+1
  5993   0013C2  C192  F057         	movff	powf@s2+2,___flsub@a+2
  5994   0013C6  C193  F058         	movff	powf@s2+3,___flsub@a+3
  5995   0013CA  C13C  F051         	movff	_powf$1845,___flsub@b
  5996   0013CE  C13D  F052         	movff	_powf$1845+1,___flsub@b+1
  5997   0013D2  C13E  F053         	movff	_powf$1845+2,___flsub@b+2
  5998   0013D6  C13F  F054         	movff	_powf$1845+3,___flsub@b+3
  5999   0013DA  EC01  F036         	call	___flsub	;wreg free
  6000   0013DE  C051  F140         	movff	?___flsub,_powf$1846
  6001   0013E2  C052  F141         	movff	?___flsub+1,_powf$1846+1
  6002   0013E6  C053  F142         	movff	?___flsub+2,_powf$1846+2
  6003   0013EA  C054  F143         	movff	?___flsub+3,_powf$1846+3
  6004   0013EE  C150  F051         	movff	powf@r,___flsub@b
  6005   0013F2  C151  F052         	movff	powf@r+1,___flsub@b+1
  6006   0013F6  C152  F053         	movff	powf@r+2,___flsub@b+2
  6007   0013FA  C153  F054         	movff	powf@r+3,___flsub@b+3
  6008   0013FE  C140  F055         	movff	_powf$1846,___flsub@a
  6009   001402  C141  F056         	movff	_powf$1846+1,___flsub@a+1
  6010   001406  C142  F057         	movff	_powf$1846+2,___flsub@a+2
  6011   00140A  C143  F058         	movff	_powf$1846+3,___flsub@a+3
  6012   00140E  EC01  F036         	call	___flsub	;wreg free
  6013   001412  C051  F134         	movff	?___flsub,powf@t_l
  6014   001416  C052  F135         	movff	?___flsub+1,powf@t_l+1
  6015   00141A  C053  F136         	movff	?___flsub+2,powf@t_l+2
  6016   00141E  C054  F137         	movff	?___flsub+3,powf@t_l+3
  6017   001422  C174  F00F         	movff	powf@s_h,___flmul@b
  6018   001426  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  6019   00142A  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  6020   00142E  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  6021   001432  C170  F013         	movff	powf@t_h,___flmul@a
  6022   001436  C171  F014         	movff	powf@t_h+1,___flmul@a+1
  6023   00143A  C172  F015         	movff	powf@t_h+2,___flmul@a+2
  6024   00143E  C173  F016         	movff	powf@t_h+3,___flmul@a+3
  6025   001442  ECC6  F01F         	call	___flmul	;wreg free
  6026   001446  C00F  F17C         	movff	?___flmul,powf@u
  6027   00144A  C010  F17D         	movff	?___flmul+1,powf@u+1
  6028   00144E  C011  F17E         	movff	?___flmul+2,powf@u+2
  6029   001452  C012  F17F         	movff	?___flmul+3,powf@u+3
  6030   001456  C130  F013         	movff	powf@s_l,___flmul@a
  6031   00145A  C131  F014         	movff	powf@s_l+1,___flmul@a+1
  6032   00145E  C132  F015         	movff	powf@s_l+2,___flmul@a+2
  6033   001462  C133  F016         	movff	powf@s_l+3,___flmul@a+3
  6034   001466  C170  F00F         	movff	powf@t_h,___flmul@b
  6035   00146A  C171  F010         	movff	powf@t_h+1,___flmul@b+1
  6036   00146E  C172  F011         	movff	powf@t_h+2,___flmul@b+2
  6037   001472  C173  F012         	movff	powf@t_h+3,___flmul@b+3
  6038   001476  ECC6  F01F         	call	___flmul	;wreg free
  6039   00147A  C00F  F041         	movff	?___flmul,___fladd@b
  6040   00147E  C010  F042         	movff	?___flmul+1,___fladd@b+1
  6041   001482  C011  F043         	movff	?___flmul+2,___fladd@b+2
  6042   001486  C012  F044         	movff	?___flmul+3,___fladd@b+3
  6043   00148A  C160  F013         	movff	powf@s,___flmul@a
  6044   00148E  C161  F014         	movff	powf@s+1,___flmul@a+1
  6045   001492  C162  F015         	movff	powf@s+2,___flmul@a+2
  6046   001496  C163  F016         	movff	powf@s+3,___flmul@a+3
  6047   00149A  C134  F00F         	movff	powf@t_l,___flmul@b
  6048   00149E  C135  F010         	movff	powf@t_l+1,___flmul@b+1
  6049   0014A2  C136  F011         	movff	powf@t_l+2,___flmul@b+2
  6050   0014A6  C137  F012         	movff	powf@t_l+3,___flmul@b+3
  6051   0014AA  ECC6  F01F         	call	___flmul	;wreg free
  6052   0014AE  C00F  F045         	movff	?___flmul,___fladd@a
  6053   0014B2  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6054   0014B6  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6055   0014BA  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6056   0014BE  EC6B  F01D         	call	___fladd	;wreg free
  6057   0014C2  C041  F180         	movff	?___fladd,powf@v
  6058   0014C6  C042  F181         	movff	?___fladd+1,powf@v+1
  6059   0014CA  C043  F182         	movff	?___fladd+2,powf@v+2
  6060   0014CE  C044  F183         	movff	?___fladd+3,powf@v+3
  6061   0014D2  C17C  F041         	movff	powf@u,___fladd@b
  6062   0014D6  C17D  F042         	movff	powf@u+1,___fladd@b+1
  6063   0014DA  C17E  F043         	movff	powf@u+2,___fladd@b+2
  6064   0014DE  C17F  F044         	movff	powf@u+3,___fladd@b+3
  6065   0014E2  C180  F045         	movff	powf@v,___fladd@a
  6066   0014E6  C181  F046         	movff	powf@v+1,___fladd@a+1
  6067   0014EA  C182  F047         	movff	powf@v+2,___fladd@a+2
  6068   0014EE  C183  F048         	movff	powf@v+3,___fladd@a+3
  6069   0014F2  EC6B  F01D         	call	___fladd	;wreg free
  6070   0014F6  C041  F1A0         	movff	?___fladd,powf@p_h
  6071   0014FA  C042  F1A1         	movff	?___fladd+1,powf@p_h+1
  6072   0014FE  C043  F1A2         	movff	?___fladd+2,powf@p_h+2
  6073   001502  C044  F1A3         	movff	?___fladd+3,powf@p_h+3
  6074   001506  C1A0  F198         	movff	powf@p_h,powf@is
  6075   00150A  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  6076   00150E  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  6077   001512  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  6078   001516  0E00               	movlw	0
  6079   001518  0101               	movlb	1	; () banked
  6080   00151A  1598               	andwf	powf@is& (0+255),w,b
  6081   00151C  6FA0               	movwf	powf@p_h& (0+255),b
  6082   00151E  0EF0               	movlw	240
  6083   001520  1599               	andwf	(powf@is+1)& (0+255),w,b
  6084   001522  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  6085   001524  0EFF               	movlw	255
  6086   001526  159A               	andwf	(powf@is+2)& (0+255),w,b
  6087   001528  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  6088   00152A  0EFF               	movlw	255
  6089   00152C  159B               	andwf	(powf@is+3)& (0+255),w,b
  6090   00152E  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  6091   001530                     
  6092                           ; BSR set to: 1
  6093   001530  C17C  F055         	movff	powf@u,___flsub@a
  6094   001534  C17D  F056         	movff	powf@u+1,___flsub@a+1
  6095   001538  C17E  F057         	movff	powf@u+2,___flsub@a+2
  6096   00153C  C17F  F058         	movff	powf@u+3,___flsub@a+3
  6097   001540  C1A0  F051         	movff	powf@p_h,___flsub@b
  6098   001544  C1A1  F052         	movff	powf@p_h+1,___flsub@b+1
  6099   001548  C1A2  F053         	movff	powf@p_h+2,___flsub@b+2
  6100   00154C  C1A3  F054         	movff	powf@p_h+3,___flsub@b+3
  6101   001550  EC01  F036         	call	___flsub	;wreg free
  6102   001554  C051  F19C         	movff	?___flsub,_powf$1840
  6103   001558  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  6104   00155C  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  6105   001560  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  6106   001564  C180  F051         	movff	powf@v,___flsub@b
  6107   001568  C181  F052         	movff	powf@v+1,___flsub@b+1
  6108   00156C  C182  F053         	movff	powf@v+2,___flsub@b+2
  6109   001570  C183  F054         	movff	powf@v+3,___flsub@b+3
  6110   001574  C19C  F055         	movff	_powf$1840,___flsub@a
  6111   001578  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  6112   00157C  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  6113   001580  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  6114   001584  EC01  F036         	call	___flsub	;wreg free
  6115   001588  C051  F16C         	movff	?___flsub,powf@p_l
  6116   00158C  C052  F16D         	movff	?___flsub+1,powf@p_l+1
  6117   001590  C053  F16E         	movff	?___flsub+2,powf@p_l+2
  6118   001594  C054  F16F         	movff	?___flsub+3,powf@p_l+3
  6119   001598  C1A0  F00F         	movff	powf@p_h,___flmul@b
  6120   00159C  C1A1  F010         	movff	powf@p_h+1,___flmul@b+1
  6121   0015A0  C1A2  F011         	movff	powf@p_h+2,___flmul@b+2
  6122   0015A4  C1A3  F012         	movff	powf@p_h+3,___flmul@b+3
  6123   0015A8  0E00               	movlw	0
  6124   0015AA  6E13               	movwf	___flmul@a^0,c
  6125   0015AC  0E40               	movlw	64
  6126   0015AE  6E14               	movwf	(___flmul@a+1)^0,c
  6127   0015B0  0E76               	movlw	118
  6128   0015B2  6E15               	movwf	(___flmul@a+2)^0,c
  6129   0015B4  0E3F               	movlw	63
  6130   0015B6  6E16               	movwf	(___flmul@a+3)^0,c
  6131   0015B8  ECC6  F01F         	call	___flmul	;wreg free
  6132   0015BC  C00F  F120         	movff	?___flmul,powf@z_h
  6133   0015C0  C010  F121         	movff	?___flmul+1,powf@z_h+1
  6134   0015C4  C011  F122         	movff	?___flmul+2,powf@z_h+2
  6135   0015C8  C012  F123         	movff	?___flmul+3,powf@z_h+3
  6136   0015CC  0E4F               	movlw	79
  6137   0015CE  6E13               	movwf	___flmul@a^0,c
  6138   0015D0  0E38               	movlw	56
  6139   0015D2  6E14               	movwf	(___flmul@a+1)^0,c
  6140   0015D4  0E76               	movlw	118
  6141   0015D6  6E15               	movwf	(___flmul@a+2)^0,c
  6142   0015D8  0E3F               	movlw	63
  6143   0015DA  6E16               	movwf	(___flmul@a+3)^0,c
  6144   0015DC  C16C  F00F         	movff	powf@p_l,___flmul@b
  6145   0015E0  C16D  F010         	movff	powf@p_l+1,___flmul@b+1
  6146   0015E4  C16E  F011         	movff	powf@p_l+2,___flmul@b+2
  6147   0015E8  C16F  F012         	movff	powf@p_l+3,___flmul@b+3
  6148   0015EC  ECC6  F01F         	call	___flmul	;wreg free
  6149   0015F0  C00F  F045         	movff	?___flmul,___fladd@a
  6150   0015F4  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6151   0015F8  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6152   0015FC  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6153   001600  0EC6               	movlw	198
  6154   001602  6E13               	movwf	___flmul@a^0,c
  6155   001604  0E23               	movlw	35
  6156   001606  6E14               	movwf	(___flmul@a+1)^0,c
  6157   001608  0EF6               	movlw	246
  6158   00160A  6E15               	movwf	(___flmul@a+2)^0,c
  6159   00160C  0EB8               	movlw	184
  6160   00160E  6E16               	movwf	(___flmul@a+3)^0,c
  6161   001610  C1A0  F00F         	movff	powf@p_h,___flmul@b
  6162   001614  C1A1  F010         	movff	powf@p_h+1,___flmul@b+1
  6163   001618  C1A2  F011         	movff	powf@p_h+2,___flmul@b+2
  6164   00161C  C1A3  F012         	movff	powf@p_h+3,___flmul@b+3
  6165   001620  ECC6  F01F         	call	___flmul	;wreg free
  6166   001624  C00F  F041         	movff	?___flmul,___fladd@b
  6167   001628  C010  F042         	movff	?___flmul+1,___fladd@b+1
  6168   00162C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  6169   001630  C012  F044         	movff	?___flmul+3,___fladd@b+3
  6170   001634  EC6B  F01D         	call	___fladd	;wreg free
  6171   001638  C041  F15C         	movff	?___fladd,_powf$1844
  6172   00163C  C042  F15D         	movff	?___fladd+1,_powf$1844+1
  6173   001640  C043  F15E         	movff	?___fladd+2,_powf$1844+2
  6174   001644  C044  F15F         	movff	?___fladd+3,_powf$1844+3
  6175   001648  C15C  F041         	movff	_powf$1844,___fladd@b
  6176   00164C  C15D  F042         	movff	_powf$1844+1,___fladd@b+1
  6177   001650  C15E  F043         	movff	_powf$1844+2,___fladd@b+2
  6178   001654  C15F  F044         	movff	_powf$1844+3,___fladd@b+3
  6179   001658  C1A4  F070         	movff	powf@k,??_powf
  6180   00165C  C1A5  F071         	movff	powf@k+1,??_powf+1
  6181   001660  0100               	movlb	0	; () banked
  6182   001662  90D8               	bcf	status,0,c
  6183   001664  3770               	rlcf	??_powf& (0+255),f,b
  6184   001666  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6185   001668  90D8               	bcf	status,0,c
  6186   00166A  3770               	rlcf	??_powf& (0+255),f,b
  6187   00166C  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6188   00166E  0E5D               	movlw	low _dp_l
  6189   001670  2570               	addwf	??_powf& (0+255),w,b
  6190   001672  6EF6               	movwf	tblptrl,c
  6191   001674  0E7E               	movlw	high _dp_l
  6192   001676  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6193   001678  6EF7               	movwf	tblptrh,c
  6194   00167A                     	if	0	;There are less than 3 active tblptr bytes
  6195   00167A                     	endif
  6196   00167A  0009               	tblrd		*+
  6197   00167C  CFF5 F045          	movff	tablat,___fladd@a
  6198   001680  0009               	tblrd		*+
  6199   001682  CFF5 F046          	movff	tablat,___fladd@a+1
  6200   001686  0009               	tblrd		*+
  6201   001688  CFF5 F047          	movff	tablat,___fladd@a+2
  6202   00168C  000A               	tblrd		*-
  6203   00168E  CFF5 F048          	movff	tablat,___fladd@a+3
  6204   001692  EC6B  F01D         	call	___fladd	;wreg free
  6205   001696  C041  F124         	movff	?___fladd,powf@z_l
  6206   00169A  C042  F125         	movff	?___fladd+1,powf@z_l+1
  6207   00169E  C043  F126         	movff	?___fladd+2,powf@z_l+2
  6208   0016A2  C044  F127         	movff	?___fladd+3,powf@z_l+3
  6209   0016A6  C188  F001         	movff	powf@n,___xxtofl@val
  6210   0016AA  C189  F002         	movff	powf@n+1,___xxtofl@val+1
  6211   0016AE  C18A  F003         	movff	powf@n+2,___xxtofl@val+2
  6212   0016B2  C18B  F004         	movff	powf@n+3,___xxtofl@val+3
  6213   0016B6  0E01               	movlw	1
  6214   0016B8  ECBA  F02A         	call	___xxtofl
  6215   0016BC  C001  F1B0         	movff	?___xxtofl,powf@t
  6216   0016C0  C002  F1B1         	movff	?___xxtofl+1,powf@t+1
  6217   0016C4  C003  F1B2         	movff	?___xxtofl+2,powf@t+2
  6218   0016C8  C004  F1B3         	movff	?___xxtofl+3,powf@t+3
  6219   0016CC  C124  F045         	movff	powf@z_l,___fladd@a
  6220   0016D0  C125  F046         	movff	powf@z_l+1,___fladd@a+1
  6221   0016D4  C126  F047         	movff	powf@z_l+2,___fladd@a+2
  6222   0016D8  C127  F048         	movff	powf@z_l+3,___fladd@a+3
  6223   0016DC  C120  F041         	movff	powf@z_h,___fladd@b
  6224   0016E0  C121  F042         	movff	powf@z_h+1,___fladd@b+1
  6225   0016E4  C122  F043         	movff	powf@z_h+2,___fladd@b+2
  6226   0016E8  C123  F044         	movff	powf@z_h+3,___fladd@b+3
  6227   0016EC  EC6B  F01D         	call	___fladd	;wreg free
  6228   0016F0  C041  F15C         	movff	?___fladd,_powf$1844
  6229   0016F4  C042  F15D         	movff	?___fladd+1,_powf$1844+1
  6230   0016F8  C043  F15E         	movff	?___fladd+2,_powf$1844+2
  6231   0016FC  C044  F15F         	movff	?___fladd+3,_powf$1844+3
  6232   001700  C1A4  F070         	movff	powf@k,??_powf
  6233   001704  C1A5  F071         	movff	powf@k+1,??_powf+1
  6234   001708  0100               	movlb	0	; () banked
  6235   00170A  90D8               	bcf	status,0,c
  6236   00170C  3770               	rlcf	??_powf& (0+255),f,b
  6237   00170E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6238   001710  90D8               	bcf	status,0,c
  6239   001712  3770               	rlcf	??_powf& (0+255),f,b
  6240   001714  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6241   001716  0E65               	movlw	low _dp_h
  6242   001718  2570               	addwf	??_powf& (0+255),w,b
  6243   00171A  6EF6               	movwf	tblptrl,c
  6244   00171C  0E7E               	movlw	high _dp_h
  6245   00171E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6246   001720  6EF7               	movwf	tblptrh,c
  6247   001722                     	if	0	;There are less than 3 active tblptr bytes
  6248   001722                     	endif
  6249   001722  0009               	tblrd		*+
  6250   001724  CFF5 F045          	movff	tablat,___fladd@a
  6251   001728  0009               	tblrd		*+
  6252   00172A  CFF5 F046          	movff	tablat,___fladd@a+1
  6253   00172E  0009               	tblrd		*+
  6254   001730  CFF5 F047          	movff	tablat,___fladd@a+2
  6255   001734  000A               	tblrd		*-
  6256   001736  CFF5 F048          	movff	tablat,___fladd@a+3
  6257   00173A  C15C  F041         	movff	_powf$1844,___fladd@b
  6258   00173E  C15D  F042         	movff	_powf$1844+1,___fladd@b+1
  6259   001742  C15E  F043         	movff	_powf$1844+2,___fladd@b+2
  6260   001746  C15F  F044         	movff	_powf$1844+3,___fladd@b+3
  6261   00174A  EC6B  F01D         	call	___fladd	;wreg free
  6262   00174E  C041  F108         	movff	?___fladd,_powf$1847
  6263   001752  C042  F109         	movff	?___fladd+1,_powf$1847+1
  6264   001756  C043  F10A         	movff	?___fladd+2,_powf$1847+2
  6265   00175A  C044  F10B         	movff	?___fladd+3,_powf$1847+3
  6266   00175E  C108  F041         	movff	_powf$1847,___fladd@b
  6267   001762  C109  F042         	movff	_powf$1847+1,___fladd@b+1
  6268   001766  C10A  F043         	movff	_powf$1847+2,___fladd@b+2
  6269   00176A  C10B  F044         	movff	_powf$1847+3,___fladd@b+3
  6270   00176E  C1B0  F045         	movff	powf@t,___fladd@a
  6271   001772  C1B1  F046         	movff	powf@t+1,___fladd@a+1
  6272   001776  C1B2  F047         	movff	powf@t+2,___fladd@a+2
  6273   00177A  C1B3  F048         	movff	powf@t+3,___fladd@a+3
  6274   00177E  EC6B  F01D         	call	___fladd	;wreg free
  6275   001782  C041  F18C         	movff	?___fladd,powf@t1
  6276   001786  C042  F18D         	movff	?___fladd+1,powf@t1+1
  6277   00178A  C043  F18E         	movff	?___fladd+2,powf@t1+2
  6278   00178E  C044  F18F         	movff	?___fladd+3,powf@t1+3
  6279   001792  C18C  F198         	movff	powf@t1,powf@is
  6280   001796  C18D  F199         	movff	powf@t1+1,powf@is+1
  6281   00179A  C18E  F19A         	movff	powf@t1+2,powf@is+2
  6282   00179E  C18F  F19B         	movff	powf@t1+3,powf@is+3
  6283   0017A2  0E00               	movlw	0
  6284   0017A4  0101               	movlb	1	; () banked
  6285   0017A6  1598               	andwf	powf@is& (0+255),w,b
  6286   0017A8  6F8C               	movwf	powf@t1& (0+255),b
  6287   0017AA  0EF0               	movlw	240
  6288   0017AC  1599               	andwf	(powf@is+1)& (0+255),w,b
  6289   0017AE  6F8D               	movwf	(powf@t1+1)& (0+255),b
  6290   0017B0  0EFF               	movlw	255
  6291   0017B2  159A               	andwf	(powf@is+2)& (0+255),w,b
  6292   0017B4  6F8E               	movwf	(powf@t1+2)& (0+255),b
  6293   0017B6  0EFF               	movlw	255
  6294   0017B8  159B               	andwf	(powf@is+3)& (0+255),w,b
  6295   0017BA  6F8F               	movwf	(powf@t1+3)& (0+255),b
  6296   0017BC                     
  6297                           ; BSR set to: 1
  6298   0017BC  C1B0  F055         	movff	powf@t,___flsub@a
  6299   0017C0  C1B1  F056         	movff	powf@t+1,___flsub@a+1
  6300   0017C4  C1B2  F057         	movff	powf@t+2,___flsub@a+2
  6301   0017C8  C1B3  F058         	movff	powf@t+3,___flsub@a+3
  6302   0017CC  C18C  F051         	movff	powf@t1,___flsub@b
  6303   0017D0  C18D  F052         	movff	powf@t1+1,___flsub@b+1
  6304   0017D4  C18E  F053         	movff	powf@t1+2,___flsub@b+2
  6305   0017D8  C18F  F054         	movff	powf@t1+3,___flsub@b+3
  6306   0017DC  EC01  F036         	call	___flsub	;wreg free
  6307   0017E0  C051  F19C         	movff	?___flsub,_powf$1840
  6308   0017E4  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  6309   0017E8  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  6310   0017EC  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  6311   0017F0  C1A4  F070         	movff	powf@k,??_powf
  6312   0017F4  C1A5  F071         	movff	powf@k+1,??_powf+1
  6313   0017F8  0100               	movlb	0	; () banked
  6314   0017FA  90D8               	bcf	status,0,c
  6315   0017FC  3770               	rlcf	??_powf& (0+255),f,b
  6316   0017FE  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6317   001800  90D8               	bcf	status,0,c
  6318   001802  3770               	rlcf	??_powf& (0+255),f,b
  6319   001804  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6320   001806  0E65               	movlw	low _dp_h
  6321   001808  2570               	addwf	??_powf& (0+255),w,b
  6322   00180A  6EF6               	movwf	tblptrl,c
  6323   00180C  0E7E               	movlw	high _dp_h
  6324   00180E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6325   001810  6EF7               	movwf	tblptrh,c
  6326   001812                     	if	0	;There are less than 3 active tblptr bytes
  6327   001812                     	endif
  6328   001812  0009               	tblrd		*+
  6329   001814  CFF5 F055          	movff	tablat,___flsub@a
  6330   001818  0009               	tblrd		*+
  6331   00181A  CFF5 F056          	movff	tablat,___flsub@a+1
  6332   00181E  0009               	tblrd		*+
  6333   001820  CFF5 F057          	movff	tablat,___flsub@a+2
  6334   001824  000A               	tblrd		*-
  6335   001826  CFF5 F058          	movff	tablat,___flsub@a+3
  6336   00182A  C19C  F051         	movff	_powf$1840,___flsub@b
  6337   00182E  C19D  F052         	movff	_powf$1840+1,___flsub@b+1
  6338   001832  C19E  F053         	movff	_powf$1840+2,___flsub@b+2
  6339   001836  C19F  F054         	movff	_powf$1840+3,___flsub@b+3
  6340   00183A  EC01  F036         	call	___flsub	;wreg free
  6341   00183E  C051  F140         	movff	?___flsub,_powf$1846
  6342   001842  C052  F141         	movff	?___flsub+1,_powf$1846+1
  6343   001846  C053  F142         	movff	?___flsub+2,_powf$1846+2
  6344   00184A  C054  F143         	movff	?___flsub+3,_powf$1846+3
  6345   00184E  C120  F055         	movff	powf@z_h,___flsub@a
  6346   001852  C121  F056         	movff	powf@z_h+1,___flsub@a+1
  6347   001856  C122  F057         	movff	powf@z_h+2,___flsub@a+2
  6348   00185A  C123  F058         	movff	powf@z_h+3,___flsub@a+3
  6349   00185E  C140  F051         	movff	_powf$1846,___flsub@b
  6350   001862  C141  F052         	movff	_powf$1846+1,___flsub@b+1
  6351   001866  C142  F053         	movff	_powf$1846+2,___flsub@b+2
  6352   00186A  C143  F054         	movff	_powf$1846+3,___flsub@b+3
  6353   00186E  EC01  F036         	call	___flsub	;wreg free
  6354   001872  C051  F10C         	movff	?___flsub,_powf$1848
  6355   001876  C052  F10D         	movff	?___flsub+1,_powf$1848+1
  6356   00187A  C053  F10E         	movff	?___flsub+2,_powf$1848+2
  6357   00187E  C054  F10F         	movff	?___flsub+3,_powf$1848+3
  6358   001882  C124  F051         	movff	powf@z_l,___flsub@b
  6359   001886  C125  F052         	movff	powf@z_l+1,___flsub@b+1
  6360   00188A  C126  F053         	movff	powf@z_l+2,___flsub@b+2
  6361   00188E  C127  F054         	movff	powf@z_l+3,___flsub@b+3
  6362   001892  C10C  F055         	movff	_powf$1848,___flsub@a
  6363   001896  C10D  F056         	movff	_powf$1848+1,___flsub@a+1
  6364   00189A  C10E  F057         	movff	_powf$1848+2,___flsub@a+2
  6365   00189E  C10F  F058         	movff	_powf$1848+3,___flsub@a+3
  6366   0018A2  EC01  F036         	call	___flsub	;wreg free
  6367   0018A6  C051  F11C         	movff	?___flsub,powf@t2
  6368   0018AA  C052  F11D         	movff	?___flsub+1,powf@t2+1
  6369   0018AE  C053  F11E         	movff	?___flsub+2,powf@t2+2
  6370   0018B2  C054  F11F         	movff	?___flsub+3,powf@t2+3
  6371   0018B6                     l7638:
  6372   0018B6  C06C  F198         	movff	powf@y,powf@is
  6373   0018BA  C06D  F199         	movff	powf@y+1,powf@is+1
  6374   0018BE  C06E  F19A         	movff	powf@y+2,powf@is+2
  6375   0018C2  C06F  F19B         	movff	powf@y+3,powf@is+3
  6376   0018C6  0E00               	movlw	0
  6377   0018C8  0101               	movlb	1	; () banked
  6378   0018CA  1598               	andwf	powf@is& (0+255),w,b
  6379   0018CC  6F2C               	movwf	powf@y1& (0+255),b
  6380   0018CE  0EF0               	movlw	240
  6381   0018D0  1599               	andwf	(powf@is+1)& (0+255),w,b
  6382   0018D2  6F2D               	movwf	(powf@y1+1)& (0+255),b
  6383   0018D4  0EFF               	movlw	255
  6384   0018D6  159A               	andwf	(powf@is+2)& (0+255),w,b
  6385   0018D8  6F2E               	movwf	(powf@y1+2)& (0+255),b
  6386   0018DA  0EFF               	movlw	255
  6387   0018DC  159B               	andwf	(powf@is+3)& (0+255),w,b
  6388   0018DE  6F2F               	movwf	(powf@y1+3)& (0+255),b
  6389   0018E0                     
  6390                           ; BSR set to: 1
  6391   0018E0  C18C  F013         	movff	powf@t1,___flmul@a
  6392   0018E4  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  6393   0018E8  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  6394   0018EC  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  6395   0018F0  C12C  F055         	movff	powf@y1,___flsub@a
  6396   0018F4  C12D  F056         	movff	powf@y1+1,___flsub@a+1
  6397   0018F8  C12E  F057         	movff	powf@y1+2,___flsub@a+2
  6398   0018FC  C12F  F058         	movff	powf@y1+3,___flsub@a+3
  6399   001900  C06C  F051         	movff	powf@y,___flsub@b
  6400   001904  C06D  F052         	movff	powf@y+1,___flsub@b+1
  6401   001908  C06E  F053         	movff	powf@y+2,___flsub@b+2
  6402   00190C  C06F  F054         	movff	powf@y+3,___flsub@b+3
  6403   001910  EC01  F036         	call	___flsub	;wreg free
  6404   001914  C051  F00F         	movff	?___flsub,___flmul@b
  6405   001918  C052  F010         	movff	?___flsub+1,___flmul@b+1
  6406   00191C  C053  F011         	movff	?___flsub+2,___flmul@b+2
  6407   001920  C054  F012         	movff	?___flsub+3,___flmul@b+3
  6408   001924  ECC6  F01F         	call	___flmul	;wreg free
  6409   001928  C00F  F110         	movff	?___flmul,_powf$1849
  6410   00192C  C010  F111         	movff	?___flmul+1,_powf$1849+1
  6411   001930  C011  F112         	movff	?___flmul+2,_powf$1849+2
  6412   001934  C012  F113         	movff	?___flmul+3,_powf$1849+3
  6413   001938  C110  F041         	movff	_powf$1849,___fladd@b
  6414   00193C  C111  F042         	movff	_powf$1849+1,___fladd@b+1
  6415   001940  C112  F043         	movff	_powf$1849+2,___fladd@b+2
  6416   001944  C113  F044         	movff	_powf$1849+3,___fladd@b+3
  6417   001948  C11C  F013         	movff	powf@t2,___flmul@a
  6418   00194C  C11D  F014         	movff	powf@t2+1,___flmul@a+1
  6419   001950  C11E  F015         	movff	powf@t2+2,___flmul@a+2
  6420   001954  C11F  F016         	movff	powf@t2+3,___flmul@a+3
  6421   001958  C06C  F00F         	movff	powf@y,___flmul@b
  6422   00195C  C06D  F010         	movff	powf@y+1,___flmul@b+1
  6423   001960  C06E  F011         	movff	powf@y+2,___flmul@b+2
  6424   001964  C06F  F012         	movff	powf@y+3,___flmul@b+3
  6425   001968  ECC6  F01F         	call	___flmul	;wreg free
  6426   00196C  C00F  F045         	movff	?___flmul,___fladd@a
  6427   001970  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6428   001974  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6429   001978  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6430   00197C  EC6B  F01D         	call	___fladd	;wreg free
  6431   001980  C041  F16C         	movff	?___fladd,powf@p_l
  6432   001984  C042  F16D         	movff	?___fladd+1,powf@p_l+1
  6433   001988  C043  F16E         	movff	?___fladd+2,powf@p_l+2
  6434   00198C  C044  F16F         	movff	?___fladd+3,powf@p_l+3
  6435   001990  C12C  F00F         	movff	powf@y1,___flmul@b
  6436   001994  C12D  F010         	movff	powf@y1+1,___flmul@b+1
  6437   001998  C12E  F011         	movff	powf@y1+2,___flmul@b+2
  6438   00199C  C12F  F012         	movff	powf@y1+3,___flmul@b+3
  6439   0019A0  C18C  F013         	movff	powf@t1,___flmul@a
  6440   0019A4  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  6441   0019A8  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  6442   0019AC  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  6443   0019B0  ECC6  F01F         	call	___flmul	;wreg free
  6444   0019B4  C00F  F1A0         	movff	?___flmul,powf@p_h
  6445   0019B8  C010  F1A1         	movff	?___flmul+1,powf@p_h+1
  6446   0019BC  C011  F1A2         	movff	?___flmul+2,powf@p_h+2
  6447   0019C0  C012  F1A3         	movff	?___flmul+3,powf@p_h+3
  6448   0019C4  C1A0  F041         	movff	powf@p_h,___fladd@b
  6449   0019C8  C1A1  F042         	movff	powf@p_h+1,___fladd@b+1
  6450   0019CC  C1A2  F043         	movff	powf@p_h+2,___fladd@b+2
  6451   0019D0  C1A3  F044         	movff	powf@p_h+3,___fladd@b+3
  6452   0019D4  C16C  F045         	movff	powf@p_l,___fladd@a
  6453   0019D8  C16D  F046         	movff	powf@p_l+1,___fladd@a+1
  6454   0019DC  C16E  F047         	movff	powf@p_l+2,___fladd@a+2
  6455   0019E0  C16F  F048         	movff	powf@p_l+3,___fladd@a+3
  6456   0019E4  EC6B  F01D         	call	___fladd	;wreg free
  6457   0019E8  C041  F1B4         	movff	?___fladd,powf@z
  6458   0019EC  C042  F1B5         	movff	?___fladd+1,powf@z+1
  6459   0019F0  C043  F1B6         	movff	?___fladd+2,powf@z+2
  6460   0019F4  C044  F1B7         	movff	?___fladd+3,powf@z+3
  6461   0019F8  C1B4  F1A8         	movff	powf@z,powf@j
  6462   0019FC  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  6463   001A00  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  6464   001A04  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  6465   001A08  0101               	movlb	1	; () banked
  6466   001A0A  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  6467   001A0C  EF14  F00D         	goto	u10011
  6468   001A10  05A8               	decf	powf@j& (0+255),w,b
  6469   001A12  0E00               	movlw	0
  6470   001A14  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  6471   001A16  0E00               	movlw	0
  6472   001A18  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  6473   001A1A  0E43               	movlw	67
  6474   001A1C  59AB               	subwfb	(powf@j+3)& (0+255),w,b
  6475   001A1E  A0D8               	btfss	status,0,c
  6476   001A20  EF14  F00D         	goto	u10011
  6477   001A24  EF16  F00D         	goto	u10010
  6478   001A28                     u10011:
  6479   001A28  EF18  F00D         	goto	l7660
  6480   001A2C                     u10010:
  6481   001A2C  EFA2  F003         	goto	l7460
  6482   001A30                     l7660:
  6483                           
  6484                           ; BSR set to: 1
  6485   001A30  0E43               	movlw	67
  6486   001A32  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6487   001A34  11A8               	iorwf	powf@j& (0+255),w,b
  6488   001A36  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6489   001A38  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  6490   001A3A  A4D8               	btfss	status,2,c
  6491   001A3C  EF22  F00D         	goto	u10021
  6492   001A40  EF24  F00D         	goto	u10020
  6493   001A44                     u10021:
  6494   001A44  EF64  F00D         	goto	l7670
  6495   001A48                     u10020:
  6496   001A48                     
  6497                           ; BSR set to: 1
  6498   001A48  C1A0  F055         	movff	powf@p_h,___flsub@a
  6499   001A4C  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  6500   001A50  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  6501   001A54  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  6502   001A58  C1B4  F051         	movff	powf@z,___flsub@b
  6503   001A5C  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  6504   001A60  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  6505   001A64  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  6506   001A68  EC01  F036         	call	___flsub	;wreg free
  6507   001A6C  C051  F060         	movff	?___flsub,___flge@ff1
  6508   001A70  C052  F061         	movff	?___flsub+1,___flge@ff1+1
  6509   001A74  C053  F062         	movff	?___flsub+2,___flge@ff1+2
  6510   001A78  C054  F063         	movff	?___flsub+3,___flge@ff1+3
  6511   001A7C  0E3C               	movlw	60
  6512   001A7E  6E45               	movwf	___fladd@a^0,c
  6513   001A80  0EAA               	movlw	170
  6514   001A82  6E46               	movwf	(___fladd@a+1)^0,c
  6515   001A84  0E38               	movlw	56
  6516   001A86  6E47               	movwf	(___fladd@a+2)^0,c
  6517   001A88  0E33               	movlw	51
  6518   001A8A  6E48               	movwf	(___fladd@a+3)^0,c
  6519   001A8C  C16C  F041         	movff	powf@p_l,___fladd@b
  6520   001A90  C16D  F042         	movff	powf@p_l+1,___fladd@b+1
  6521   001A94  C16E  F043         	movff	powf@p_l+2,___fladd@b+2
  6522   001A98  C16F  F044         	movff	powf@p_l+3,___fladd@b+3
  6523   001A9C  EC6B  F01D         	call	___fladd	;wreg free
  6524   001AA0  C041  F064         	movff	?___fladd,___flge@ff2
  6525   001AA4  C042  F065         	movff	?___fladd+1,___flge@ff2+1
  6526   001AA8  C043  F066         	movff	?___fladd+2,___flge@ff2+2
  6527   001AAC  C044  F067         	movff	?___fladd+3,___flge@ff2+3
  6528   001AB0  EC56  F02F         	call	___flge	;wreg free
  6529   001AB4  0100               	movlb	0	; () banked
  6530   001AB6  B0D8               	btfsc	status,0,c
  6531   001AB8  EF60  F00D         	goto	u10031
  6532   001ABC  EF62  F00D         	goto	u10030
  6533   001AC0                     u10031:
  6534   001AC0  EFD7  F00D         	goto	l7686
  6535   001AC4                     u10030:
  6536   001AC4  EFA2  F003         	goto	l7460
  6537   001AC8                     l7670:
  6538                           
  6539                           ; BSR set to: 1
  6540   001AC8  0EFF               	movlw	255
  6541   001ACA  15A8               	andwf	powf@j& (0+255),w,b
  6542   001ACC  0100               	movlb	0	; () banked
  6543   001ACE  6F70               	movwf	??_powf& (0+255),b
  6544   001AD0  0EFF               	movlw	255
  6545   001AD2  0101               	movlb	1	; () banked
  6546   001AD4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6547   001AD6  0100               	movlb	0	; () banked
  6548   001AD8  6F71               	movwf	(??_powf+1)& (0+255),b
  6549   001ADA  0EFF               	movlw	255
  6550   001ADC  0101               	movlb	1	; () banked
  6551   001ADE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6552   001AE0  0100               	movlb	0	; () banked
  6553   001AE2  6F72               	movwf	(??_powf+2)& (0+255),b
  6554   001AE4  0E7F               	movlw	127
  6555   001AE6  0101               	movlb	1	; () banked
  6556   001AE8  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6557   001AEA  0100               	movlb	0	; () banked
  6558   001AEC  6F73               	movwf	(??_powf+3)& (0+255),b
  6559   001AEE  BF73               	btfsc	(??_powf+3)& (0+255),7,b
  6560   001AF0  EF86  F00D         	goto	u10041
  6561   001AF4  0570               	decf	??_powf& (0+255),w,b
  6562   001AF6  0E00               	movlw	0
  6563   001AF8  5971               	subwfb	(??_powf+1)& (0+255),w,b
  6564   001AFA  0E16               	movlw	22
  6565   001AFC  5972               	subwfb	(??_powf+2)& (0+255),w,b
  6566   001AFE  0E43               	movlw	67
  6567   001B00  5973               	subwfb	(??_powf+3)& (0+255),w,b
  6568   001B02  A0D8               	btfss	status,0,c
  6569   001B04  EF86  F00D         	goto	u10041
  6570   001B08  EF88  F00D         	goto	u10040
  6571   001B0C                     u10041:
  6572   001B0C  EF92  F00D         	goto	l7678
  6573   001B10                     u10040:
  6574   001B10                     
  6575                           ; BSR set to: 0
  6576   001B10  0E00               	movlw	0
  6577   001B12  6F68               	movwf	?_powf& (0+255),b
  6578   001B14  0E00               	movlw	0
  6579   001B16  6F69               	movwf	(?_powf+1)& (0+255),b
  6580   001B18  0E00               	movlw	0
  6581   001B1A  6F6A               	movwf	(?_powf+2)& (0+255),b
  6582   001B1C  0E00               	movlw	0
  6583   001B1E  6F6B               	movwf	(?_powf+3)& (0+255),b
  6584   001B20  EF63  F012         	goto	l1265
  6585   001B24                     l7678:
  6586                           
  6587                           ; BSR set to: 0
  6588   001B24  0E16               	movlw	22
  6589   001B26  0101               	movlb	1	; () banked
  6590   001B28  19AA               	xorwf	(powf@j+2)& (0+255),w,b
  6591   001B2A  E109               	bnz	u10051
  6592   001B2C  0EC3               	movlw	195
  6593   001B2E  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6594   001B30  11A8               	iorwf	powf@j& (0+255),w,b
  6595   001B32  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6596   001B34  A4D8               	btfss	status,2,c
  6597   001B36  EF9F  F00D         	goto	u10051
  6598   001B3A  EFA1  F00D         	goto	u10050
  6599   001B3E                     u10051:
  6600   001B3E  EFD7  F00D         	goto	l7686
  6601   001B42                     u10050:
  6602   001B42                     
  6603                           ; BSR set to: 1
  6604   001B42  C1A0  F055         	movff	powf@p_h,___flsub@a
  6605   001B46  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  6606   001B4A  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  6607   001B4E  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  6608   001B52  C1B4  F051         	movff	powf@z,___flsub@b
  6609   001B56  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  6610   001B5A  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  6611   001B5E  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  6612   001B62  EC01  F036         	call	___flsub	;wreg free
  6613   001B66  C051  F060         	movff	?___flsub,___flge@ff1
  6614   001B6A  C052  F061         	movff	?___flsub+1,___flge@ff1+1
  6615   001B6E  C053  F062         	movff	?___flsub+2,___flge@ff1+2
  6616   001B72  C054  F063         	movff	?___flsub+3,___flge@ff1+3
  6617   001B76  C16C  F064         	movff	powf@p_l,___flge@ff2
  6618   001B7A  C16D  F065         	movff	powf@p_l+1,___flge@ff2+1
  6619   001B7E  C16E  F066         	movff	powf@p_l+2,___flge@ff2+2
  6620   001B82  C16F  F067         	movff	powf@p_l+3,___flge@ff2+3
  6621   001B86  EC56  F02F         	call	___flge	;wreg free
  6622   001B8A  0100               	movlb	0	; () banked
  6623   001B8C  A0D8               	btfss	status,0,c
  6624   001B8E  EFCB  F00D         	goto	u10061
  6625   001B92  EFCD  F00D         	goto	u10060
  6626   001B96                     u10061:
  6627   001B96  EFD7  F00D         	goto	l7686
  6628   001B9A                     u10060:
  6629   001B9A                     
  6630                           ; BSR set to: 0
  6631   001B9A  0E00               	movlw	0
  6632   001B9C  6F68               	movwf	?_powf& (0+255),b
  6633   001B9E  0E00               	movlw	0
  6634   001BA0  6F69               	movwf	(?_powf+1)& (0+255),b
  6635   001BA2  0E00               	movlw	0
  6636   001BA4  6F6A               	movwf	(?_powf+2)& (0+255),b
  6637   001BA6  0E00               	movlw	0
  6638   001BA8  6F6B               	movwf	(?_powf+3)& (0+255),b
  6639   001BAA  EF63  F012         	goto	l1265
  6640   001BAE                     l7686:
  6641   001BAE  0EFF               	movlw	255
  6642   001BB0  0101               	movlb	1	; () banked
  6643   001BB2  15A8               	andwf	powf@j& (0+255),w,b
  6644   001BB4  6F28               	movwf	powf@i& (0+255),b
  6645   001BB6  0EFF               	movlw	255
  6646   001BB8  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6647   001BBA  6F29               	movwf	(powf@i+1)& (0+255),b
  6648   001BBC  0EFF               	movlw	255
  6649   001BBE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6650   001BC0  6F2A               	movwf	(powf@i+2)& (0+255),b
  6651   001BC2  0E7F               	movlw	127
  6652   001BC4  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6653   001BC6  6F2B               	movwf	(powf@i+3)& (0+255),b
  6654   001BC8  0E17               	movlw	23
  6655   001BCA  0100               	movlb	0	; () banked
  6656   001BCC  6F70               	movwf	??_powf& (0+255),b
  6657   001BCE  C128  F071         	movff	powf@i,??_powf+1
  6658   001BD2  C129  F072         	movff	powf@i+1,??_powf+2
  6659   001BD6  C12A  F073         	movff	powf@i+2,??_powf+3
  6660   001BDA  C12B  F074         	movff	powf@i+3,??_powf+4
  6661   001BDE                     u10075:
  6662   001BDE  6770               	tstfsz	??_powf& (0+255),b
  6663   001BE0  EFF4  F00D         	goto	u10076
  6664   001BE4  EFFC  F00D         	goto	u10077
  6665   001BE8                     u10076:
  6666   001BE8  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6667   001BEA  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6668   001BEC  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6669   001BEE  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6670   001BF0  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6671   001BF2  2F70               	decfsz	??_powf& (0+255),f,b
  6672   001BF4  EFEF  F00D         	goto	u10075
  6673   001BF8                     u10077:
  6674   001BF8  0E81               	movlw	129
  6675   001BFA  0100               	movlb	0	; () banked
  6676   001BFC  2571               	addwf	(??_powf+1)& (0+255),w,b
  6677   001BFE  0101               	movlb	1	; () banked
  6678   001C00  6FA4               	movwf	powf@k& (0+255),b
  6679   001C02  0EFF               	movlw	255
  6680   001C04  0100               	movlb	0	; () banked
  6681   001C06  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6682   001C08  0101               	movlb	1	; () banked
  6683   001C0A  6FA5               	movwf	(powf@k+1)& (0+255),b
  6684   001C0C  0EFF               	movlw	255
  6685   001C0E  0100               	movlb	0	; () banked
  6686   001C10  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6687   001C12  0101               	movlb	1	; () banked
  6688   001C14  6FA6               	movwf	(powf@k+2)& (0+255),b
  6689   001C16  0EFF               	movlw	255
  6690   001C18  0100               	movlb	0	; () banked
  6691   001C1A  2174               	addwfc	(??_powf+4)& (0+255),w,b
  6692   001C1C  0101               	movlb	1	; () banked
  6693   001C1E  6FA7               	movwf	(powf@k+3)& (0+255),b
  6694   001C20                     
  6695                           ; BSR set to: 1
  6696   001C20  0E00               	movlw	0
  6697   001C22  6F88               	movwf	powf@n& (0+255),b
  6698   001C24  0E00               	movlw	0
  6699   001C26  6F89               	movwf	(powf@n+1)& (0+255),b
  6700   001C28  0E00               	movlw	0
  6701   001C2A  6F8A               	movwf	(powf@n+2)& (0+255),b
  6702   001C2C  0E00               	movlw	0
  6703   001C2E  6F8B               	movwf	(powf@n+3)& (0+255),b
  6704   001C30                     
  6705                           ; BSR set to: 1
  6706   001C30  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
  6707   001C32  EF27  F00E         	goto	u10081
  6708   001C36  0528               	decf	powf@i& (0+255),w,b
  6709   001C38  0E00               	movlw	0
  6710   001C3A  5929               	subwfb	(powf@i+1)& (0+255),w,b
  6711   001C3C  0E00               	movlw	0
  6712   001C3E  592A               	subwfb	(powf@i+2)& (0+255),w,b
  6713   001C40  0E3F               	movlw	63
  6714   001C42  592B               	subwfb	(powf@i+3)& (0+255),w,b
  6715   001C44  A0D8               	btfss	status,0,c
  6716   001C46  EF27  F00E         	goto	u10081
  6717   001C4A  EF29  F00E         	goto	u10080
  6718   001C4E                     u10081:
  6719   001C4E  EF25  F00F         	goto	l7698
  6720   001C52                     u10080:
  6721   001C52                     
  6722                           ; BSR set to: 1
  6723   001C52  C1A4  F070         	movff	powf@k,??_powf
  6724   001C56  0E01               	movlw	1
  6725   001C58  0100               	movlb	0	; () banked
  6726   001C5A  2770               	addwf	??_powf& (0+255),f,b
  6727   001C5C  0E00               	movlw	0
  6728   001C5E  6F71               	movwf	(??_powf+1)& (0+255),b
  6729   001C60  0E00               	movlw	0
  6730   001C62  6F72               	movwf	(??_powf+2)& (0+255),b
  6731   001C64  0E80               	movlw	128
  6732   001C66  6F73               	movwf	(??_powf+3)& (0+255),b
  6733   001C68  0E00               	movlw	0
  6734   001C6A  6F74               	movwf	(??_powf+4)& (0+255),b
  6735   001C6C                     u10095:
  6736   001C6C  6770               	tstfsz	??_powf& (0+255),b
  6737   001C6E  EF3B  F00E         	goto	u10096
  6738   001C72  EF43  F00E         	goto	u10097
  6739   001C76                     u10096:
  6740   001C76  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6741   001C78  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6742   001C7A  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6743   001C7C  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6744   001C7E  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6745   001C80  2F70               	decfsz	??_powf& (0+255),f,b
  6746   001C82  EF36  F00E         	goto	u10095
  6747   001C86                     u10097:
  6748   001C86  0101               	movlb	1	; () banked
  6749   001C88  51A8               	movf	powf@j& (0+255),w,b
  6750   001C8A  0100               	movlb	0	; () banked
  6751   001C8C  2571               	addwf	(??_powf+1)& (0+255),w,b
  6752   001C8E  0101               	movlb	1	; () banked
  6753   001C90  6F88               	movwf	powf@n& (0+255),b
  6754   001C92  51A9               	movf	(powf@j+1)& (0+255),w,b
  6755   001C94  0100               	movlb	0	; () banked
  6756   001C96  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6757   001C98  0101               	movlb	1	; () banked
  6758   001C9A  6F89               	movwf	(powf@n+1)& (0+255),b
  6759   001C9C  51AA               	movf	(powf@j+2)& (0+255),w,b
  6760   001C9E  0100               	movlb	0	; () banked
  6761   001CA0  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6762   001CA2  0101               	movlb	1	; () banked
  6763   001CA4  6F8A               	movwf	(powf@n+2)& (0+255),b
  6764   001CA6  51AB               	movf	(powf@j+3)& (0+255),w,b
  6765   001CA8  0100               	movlb	0	; () banked
  6766   001CAA  2174               	addwfc	(??_powf+4)& (0+255),w,b
  6767   001CAC  0101               	movlb	1	; () banked
  6768   001CAE  6F8B               	movwf	(powf@n+3)& (0+255),b
  6769   001CB0  0E81               	movlw	129
  6770   001CB2  0100               	movlb	0	; () banked
  6771   001CB4  6F70               	movwf	??_powf& (0+255),b
  6772   001CB6  0EFF               	movlw	255
  6773   001CB8  6F71               	movwf	(??_powf+1)& (0+255),b
  6774   001CBA  0EFF               	movlw	255
  6775   001CBC  6F72               	movwf	(??_powf+2)& (0+255),b
  6776   001CBE  0EFF               	movlw	255
  6777   001CC0  6F73               	movwf	(??_powf+3)& (0+255),b
  6778   001CC2  0E17               	movlw	23
  6779   001CC4  6F74               	movwf	(??_powf+4)& (0+255),b
  6780   001CC6  C188  F075         	movff	powf@n,??_powf+5
  6781   001CCA  C189  F076         	movff	powf@n+1,??_powf+6
  6782   001CCE  C18A  F077         	movff	powf@n+2,??_powf+7
  6783   001CD2  C18B  F078         	movff	powf@n+3,??_powf+8
  6784   001CD6                     u10105:
  6785   001CD6  6774               	tstfsz	(??_powf+4)& (0+255),b
  6786   001CD8  EF70  F00E         	goto	u10106
  6787   001CDC  EF78  F00E         	goto	u10107
  6788   001CE0                     u10106:
  6789   001CE0  3578               	rlcf	(??_powf+8)& (0+255),w,b
  6790   001CE2  3378               	rrcf	(??_powf+8)& (0+255),f,b
  6791   001CE4  3377               	rrcf	(??_powf+7)& (0+255),f,b
  6792   001CE6  3376               	rrcf	(??_powf+6)& (0+255),f,b
  6793   001CE8  3375               	rrcf	(??_powf+5)& (0+255),f,b
  6794   001CEA  2F74               	decfsz	(??_powf+4)& (0+255),f,b
  6795   001CEC  EF6B  F00E         	goto	u10105
  6796   001CF0                     u10107:
  6797   001CF0  0100               	movlb	0	; () banked
  6798   001CF2  5175               	movf	(??_powf+5)& (0+255),w,b
  6799   001CF4  2570               	addwf	??_powf& (0+255),w,b
  6800   001CF6  0101               	movlb	1	; () banked
  6801   001CF8  6FA4               	movwf	powf@k& (0+255),b
  6802   001CFA  0E00               	movlw	0
  6803   001CFC  0100               	movlb	0	; () banked
  6804   001CFE  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6805   001D00  0101               	movlb	1	; () banked
  6806   001D02  6FA5               	movwf	(powf@k+1)& (0+255),b
  6807   001D04  0E00               	movlw	0
  6808   001D06  0100               	movlb	0	; () banked
  6809   001D08  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6810   001D0A  0101               	movlb	1	; () banked
  6811   001D0C  6FA6               	movwf	(powf@k+2)& (0+255),b
  6812   001D0E  0E00               	movlw	0
  6813   001D10  0100               	movlb	0	; () banked
  6814   001D12  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6815   001D14  0101               	movlb	1	; () banked
  6816   001D16  6FA7               	movwf	(powf@k+3)& (0+255),b
  6817   001D18  C1A4  F070         	movff	powf@k,??_powf
  6818   001D1C  0EFF               	movlw	255
  6819   001D1E  0100               	movlb	0	; () banked
  6820   001D20  6F71               	movwf	(??_powf+1)& (0+255),b
  6821   001D22  0EFF               	movlw	255
  6822   001D24  6F72               	movwf	(??_powf+2)& (0+255),b
  6823   001D26  0E7F               	movlw	127
  6824   001D28  6F73               	movwf	(??_powf+3)& (0+255),b
  6825   001D2A  0E00               	movlw	0
  6826   001D2C  6F74               	movwf	(??_powf+4)& (0+255),b
  6827   001D2E                     u10115:
  6828   001D2E  6770               	tstfsz	??_powf& (0+255),b
  6829   001D30  EF9C  F00E         	goto	u10116
  6830   001D34  EFA4  F00E         	goto	u10117
  6831   001D38                     u10116:
  6832   001D38  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6833   001D3A  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6834   001D3C  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6835   001D3E  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6836   001D40  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6837   001D42  2F70               	decfsz	??_powf& (0+255),f,b
  6838   001D44  EF97  F00E         	goto	u10115
  6839   001D48                     u10117:
  6840   001D48  0100               	movlb	0	; () banked
  6841   001D4A  1D71               	comf	(??_powf+1)& (0+255),w,b
  6842   001D4C  6F75               	movwf	(??_powf+5)& (0+255),b
  6843   001D4E  1D72               	comf	(??_powf+2)& (0+255),w,b
  6844   001D50  6F76               	movwf	(??_powf+6)& (0+255),b
  6845   001D52  1D73               	comf	(??_powf+3)& (0+255),w,b
  6846   001D54  6F77               	movwf	(??_powf+7)& (0+255),b
  6847   001D56  1D74               	comf	(??_powf+4)& (0+255),w,b
  6848   001D58  6F78               	movwf	(??_powf+8)& (0+255),b
  6849   001D5A  0101               	movlb	1	; () banked
  6850   001D5C  5188               	movf	powf@n& (0+255),w,b
  6851   001D5E  0100               	movlb	0	; () banked
  6852   001D60  1575               	andwf	(??_powf+5)& (0+255),w,b
  6853   001D62  0101               	movlb	1	; () banked
  6854   001D64  6FB0               	movwf	powf@t& (0+255),b
  6855   001D66  5189               	movf	(powf@n+1)& (0+255),w,b
  6856   001D68  0100               	movlb	0	; () banked
  6857   001D6A  1576               	andwf	(??_powf+6)& (0+255),w,b
  6858   001D6C  0101               	movlb	1	; () banked
  6859   001D6E  6FB1               	movwf	(powf@t+1)& (0+255),b
  6860   001D70  518A               	movf	(powf@n+2)& (0+255),w,b
  6861   001D72  0100               	movlb	0	; () banked
  6862   001D74  1577               	andwf	(??_powf+7)& (0+255),w,b
  6863   001D76  0101               	movlb	1	; () banked
  6864   001D78  6FB2               	movwf	(powf@t+2)& (0+255),b
  6865   001D7A  518B               	movf	(powf@n+3)& (0+255),w,b
  6866   001D7C  0100               	movlb	0	; () banked
  6867   001D7E  1578               	andwf	(??_powf+8)& (0+255),w,b
  6868   001D80  0101               	movlb	1	; () banked
  6869   001D82  6FB3               	movwf	(powf@t+3)& (0+255),b
  6870   001D84  51A4               	movf	powf@k& (0+255),w,b
  6871   001D86  0817               	sublw	23
  6872   001D88  0100               	movlb	0	; () banked
  6873   001D8A  6F70               	movwf	??_powf& (0+255),b
  6874   001D8C  0EFF               	movlw	255
  6875   001D8E  0101               	movlb	1	; () banked
  6876   001D90  1588               	andwf	powf@n& (0+255),w,b
  6877   001D92  0100               	movlb	0	; () banked
  6878   001D94  6F71               	movwf	(??_powf+1)& (0+255),b
  6879   001D96  0EFF               	movlw	255
  6880   001D98  0101               	movlb	1	; () banked
  6881   001D9A  1589               	andwf	(powf@n+1)& (0+255),w,b
  6882   001D9C  0100               	movlb	0	; () banked
  6883   001D9E  6F72               	movwf	(??_powf+2)& (0+255),b
  6884   001DA0  0E7F               	movlw	127
  6885   001DA2  0101               	movlb	1	; () banked
  6886   001DA4  158A               	andwf	(powf@n+2)& (0+255),w,b
  6887   001DA6  0100               	movlb	0	; () banked
  6888   001DA8  6F73               	movwf	(??_powf+3)& (0+255),b
  6889   001DAA  0E00               	movlw	0
  6890   001DAC  0101               	movlb	1	; () banked
  6891   001DAE  158B               	andwf	(powf@n+3)& (0+255),w,b
  6892   001DB0  0100               	movlb	0	; () banked
  6893   001DB2  6F74               	movwf	(??_powf+4)& (0+255),b
  6894   001DB4  0E00               	movlw	0
  6895   001DB6  1171               	iorwf	(??_powf+1)& (0+255),w,b
  6896   001DB8  6F75               	movwf	(??_powf+5)& (0+255),b
  6897   001DBA  0E00               	movlw	0
  6898   001DBC  1172               	iorwf	(??_powf+2)& (0+255),w,b
  6899   001DBE  6F76               	movwf	(??_powf+6)& (0+255),b
  6900   001DC0  0E80               	movlw	128
  6901   001DC2  1173               	iorwf	(??_powf+3)& (0+255),w,b
  6902   001DC4  6F77               	movwf	(??_powf+7)& (0+255),b
  6903   001DC6  0E00               	movlw	0
  6904   001DC8  1174               	iorwf	(??_powf+4)& (0+255),w,b
  6905   001DCA  6F78               	movwf	(??_powf+8)& (0+255),b
  6906   001DCC                     u10125:
  6907   001DCC  6770               	tstfsz	??_powf& (0+255),b
  6908   001DCE  EFEB  F00E         	goto	u10126
  6909   001DD2  EFF3  F00E         	goto	u10127
  6910   001DD6                     u10126:
  6911   001DD6  3578               	rlcf	(??_powf+8)& (0+255),w,b
  6912   001DD8  3378               	rrcf	(??_powf+8)& (0+255),f,b
  6913   001DDA  3377               	rrcf	(??_powf+7)& (0+255),f,b
  6914   001DDC  3376               	rrcf	(??_powf+6)& (0+255),f,b
  6915   001DDE  3375               	rrcf	(??_powf+5)& (0+255),f,b
  6916   001DE0  2F70               	decfsz	??_powf& (0+255),f,b
  6917   001DE2  EFE6  F00E         	goto	u10125
  6918   001DE6                     u10127:
  6919   001DE6  C075  F188         	movff	??_powf+5,powf@n
  6920   001DEA  C076  F189         	movff	??_powf+6,powf@n+1
  6921   001DEE  C077  F18A         	movff	??_powf+7,powf@n+2
  6922   001DF2  C078  F18B         	movff	??_powf+8,powf@n+3
  6923   001DF6  0101               	movlb	1	; () banked
  6924   001DF8  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  6925   001DFA  EF03  F00F         	goto	u10130
  6926   001DFE  EF01  F00F         	goto	u10131
  6927   001E02                     u10131:
  6928   001E02  EF0B  F00F         	goto	l7696
  6929   001E06                     u10130:
  6930   001E06                     
  6931                           ; BSR set to: 1
  6932   001E06  1F8B               	comf	(powf@n+3)& (0+255),f,b
  6933   001E08  1F8A               	comf	(powf@n+2)& (0+255),f,b
  6934   001E0A  1F89               	comf	(powf@n+1)& (0+255),f,b
  6935   001E0C  6D88               	negf	powf@n& (0+255),b
  6936   001E0E  0E00               	movlw	0
  6937   001E10  2389               	addwfc	(powf@n+1)& (0+255),f,b
  6938   001E12  238A               	addwfc	(powf@n+2)& (0+255),f,b
  6939   001E14  238B               	addwfc	(powf@n+3)& (0+255),f,b
  6940   001E16                     l7696:
  6941                           
  6942                           ; BSR set to: 1
  6943   001E16  C1A0  F051         	movff	powf@p_h,___flsub@b
  6944   001E1A  C1A1  F052         	movff	powf@p_h+1,___flsub@b+1
  6945   001E1E  C1A2  F053         	movff	powf@p_h+2,___flsub@b+2
  6946   001E22  C1A3  F054         	movff	powf@p_h+3,___flsub@b+3
  6947   001E26  C1B0  F055         	movff	powf@t,___flsub@a
  6948   001E2A  C1B1  F056         	movff	powf@t+1,___flsub@a+1
  6949   001E2E  C1B2  F057         	movff	powf@t+2,___flsub@a+2
  6950   001E32  C1B3  F058         	movff	powf@t+3,___flsub@a+3
  6951   001E36  EC01  F036         	call	___flsub	;wreg free
  6952   001E3A  C051  F1A0         	movff	?___flsub,powf@p_h
  6953   001E3E  C052  F1A1         	movff	?___flsub+1,powf@p_h+1
  6954   001E42  C053  F1A2         	movff	?___flsub+2,powf@p_h+2
  6955   001E46  C054  F1A3         	movff	?___flsub+3,powf@p_h+3
  6956   001E4A                     l7698:
  6957   001E4A  C1A0  F041         	movff	powf@p_h,___fladd@b
  6958   001E4E  C1A1  F042         	movff	powf@p_h+1,___fladd@b+1
  6959   001E52  C1A2  F043         	movff	powf@p_h+2,___fladd@b+2
  6960   001E56  C1A3  F044         	movff	powf@p_h+3,___fladd@b+3
  6961   001E5A  C16C  F045         	movff	powf@p_l,___fladd@a
  6962   001E5E  C16D  F046         	movff	powf@p_l+1,___fladd@a+1
  6963   001E62  C16E  F047         	movff	powf@p_l+2,___fladd@a+2
  6964   001E66  C16F  F048         	movff	powf@p_l+3,___fladd@a+3
  6965   001E6A  EC6B  F01D         	call	___fladd	;wreg free
  6966   001E6E  C041  F1B0         	movff	?___fladd,powf@t
  6967   001E72  C042  F1B1         	movff	?___fladd+1,powf@t+1
  6968   001E76  C043  F1B2         	movff	?___fladd+2,powf@t+2
  6969   001E7A  C044  F1B3         	movff	?___fladd+3,powf@t+3
  6970   001E7E  C1B0  F198         	movff	powf@t,powf@is
  6971   001E82  C1B1  F199         	movff	powf@t+1,powf@is+1
  6972   001E86  C1B2  F19A         	movff	powf@t+2,powf@is+2
  6973   001E8A  C1B3  F19B         	movff	powf@t+3,powf@is+3
  6974   001E8E  0E00               	movlw	0
  6975   001E90  0101               	movlb	1	; () banked
  6976   001E92  1598               	andwf	powf@is& (0+255),w,b
  6977   001E94  6FB0               	movwf	powf@t& (0+255),b
  6978   001E96  0E80               	movlw	128
  6979   001E98  1599               	andwf	(powf@is+1)& (0+255),w,b
  6980   001E9A  6FB1               	movwf	(powf@t+1)& (0+255),b
  6981   001E9C  0EFF               	movlw	255
  6982   001E9E  159A               	andwf	(powf@is+2)& (0+255),w,b
  6983   001EA0  6FB2               	movwf	(powf@t+2)& (0+255),b
  6984   001EA2  0EFF               	movlw	255
  6985   001EA4  159B               	andwf	(powf@is+3)& (0+255),w,b
  6986   001EA6  6FB3               	movwf	(powf@t+3)& (0+255),b
  6987   001EA8                     
  6988                           ; BSR set to: 1
  6989   001EA8  C1B0  F00F         	movff	powf@t,___flmul@b
  6990   001EAC  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  6991   001EB0  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  6992   001EB4  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  6993   001EB8  0E00               	movlw	0
  6994   001EBA  6E13               	movwf	___flmul@a^0,c
  6995   001EBC  0E72               	movlw	114
  6996   001EBE  6E14               	movwf	(___flmul@a+1)^0,c
  6997   001EC0  0E31               	movlw	49
  6998   001EC2  6E15               	movwf	(___flmul@a+2)^0,c
  6999   001EC4  0E3F               	movlw	63
  7000   001EC6  6E16               	movwf	(___flmul@a+3)^0,c
  7001   001EC8  ECC6  F01F         	call	___flmul	;wreg free
  7002   001ECC  C00F  F17C         	movff	?___flmul,powf@u
  7003   001ED0  C010  F17D         	movff	?___flmul+1,powf@u+1
  7004   001ED4  C011  F17E         	movff	?___flmul+2,powf@u+2
  7005   001ED8  C012  F17F         	movff	?___flmul+3,powf@u+3
  7006   001EDC  C1A0  F055         	movff	powf@p_h,___flsub@a
  7007   001EE0  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  7008   001EE4  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  7009   001EE8  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  7010   001EEC  C1B0  F051         	movff	powf@t,___flsub@b
  7011   001EF0  C1B1  F052         	movff	powf@t+1,___flsub@b+1
  7012   001EF4  C1B2  F053         	movff	powf@t+2,___flsub@b+2
  7013   001EF8  C1B3  F054         	movff	powf@t+3,___flsub@b+3
  7014   001EFC  EC01  F036         	call	___flsub	;wreg free
  7015   001F00  C051  F19C         	movff	?___flsub,_powf$1840
  7016   001F04  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  7017   001F08  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  7018   001F0C  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  7019   001F10  0E18               	movlw	24
  7020   001F12  6E13               	movwf	___flmul@a^0,c
  7021   001F14  0E72               	movlw	114
  7022   001F16  6E14               	movwf	(___flmul@a+1)^0,c
  7023   001F18  0E31               	movlw	49
  7024   001F1A  6E15               	movwf	(___flmul@a+2)^0,c
  7025   001F1C  0E3F               	movlw	63
  7026   001F1E  6E16               	movwf	(___flmul@a+3)^0,c
  7027   001F20  C19C  F055         	movff	_powf$1840,___flsub@a
  7028   001F24  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  7029   001F28  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  7030   001F2C  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  7031   001F30  C16C  F051         	movff	powf@p_l,___flsub@b
  7032   001F34  C16D  F052         	movff	powf@p_l+1,___flsub@b+1
  7033   001F38  C16E  F053         	movff	powf@p_l+2,___flsub@b+2
  7034   001F3C  C16F  F054         	movff	powf@p_l+3,___flsub@b+3
  7035   001F40  EC01  F036         	call	___flsub	;wreg free
  7036   001F44  C051  F00F         	movff	?___flsub,___flmul@b
  7037   001F48  C052  F010         	movff	?___flsub+1,___flmul@b+1
  7038   001F4C  C053  F011         	movff	?___flsub+2,___flmul@b+2
  7039   001F50  C054  F012         	movff	?___flsub+3,___flmul@b+3
  7040   001F54  ECC6  F01F         	call	___flmul	;wreg free
  7041   001F58  C00F  F114         	movff	?___flmul,_powf$1850
  7042   001F5C  C010  F115         	movff	?___flmul+1,_powf$1850+1
  7043   001F60  C011  F116         	movff	?___flmul+2,_powf$1850+2
  7044   001F64  C012  F117         	movff	?___flmul+3,_powf$1850+3
  7045   001F68  C114  F041         	movff	_powf$1850,___fladd@b
  7046   001F6C  C115  F042         	movff	_powf$1850+1,___fladd@b+1
  7047   001F70  C116  F043         	movff	_powf$1850+2,___fladd@b+2
  7048   001F74  C117  F044         	movff	_powf$1850+3,___fladd@b+3
  7049   001F78  0E8C               	movlw	140
  7050   001F7A  6E13               	movwf	___flmul@a^0,c
  7051   001F7C  0EBE               	movlw	190
  7052   001F7E  6E14               	movwf	(___flmul@a+1)^0,c
  7053   001F80  0EBF               	movlw	191
  7054   001F82  6E15               	movwf	(___flmul@a+2)^0,c
  7055   001F84  0E35               	movlw	53
  7056   001F86  6E16               	movwf	(___flmul@a+3)^0,c
  7057   001F88  C1B0  F00F         	movff	powf@t,___flmul@b
  7058   001F8C  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7059   001F90  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7060   001F94  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7061   001F98  ECC6  F01F         	call	___flmul	;wreg free
  7062   001F9C  C00F  F045         	movff	?___flmul,___fladd@a
  7063   001FA0  C010  F046         	movff	?___flmul+1,___fladd@a+1
  7064   001FA4  C011  F047         	movff	?___flmul+2,___fladd@a+2
  7065   001FA8  C012  F048         	movff	?___flmul+3,___fladd@a+3
  7066   001FAC  EC6B  F01D         	call	___fladd	;wreg free
  7067   001FB0  C041  F180         	movff	?___fladd,powf@v
  7068   001FB4  C042  F181         	movff	?___fladd+1,powf@v+1
  7069   001FB8  C043  F182         	movff	?___fladd+2,powf@v+2
  7070   001FBC  C044  F183         	movff	?___fladd+3,powf@v+3
  7071   001FC0  C17C  F041         	movff	powf@u,___fladd@b
  7072   001FC4  C17D  F042         	movff	powf@u+1,___fladd@b+1
  7073   001FC8  C17E  F043         	movff	powf@u+2,___fladd@b+2
  7074   001FCC  C17F  F044         	movff	powf@u+3,___fladd@b+3
  7075   001FD0  C180  F045         	movff	powf@v,___fladd@a
  7076   001FD4  C181  F046         	movff	powf@v+1,___fladd@a+1
  7077   001FD8  C182  F047         	movff	powf@v+2,___fladd@a+2
  7078   001FDC  C183  F048         	movff	powf@v+3,___fladd@a+3
  7079   001FE0  EC6B  F01D         	call	___fladd	;wreg free
  7080   001FE4  C041  F1B4         	movff	?___fladd,powf@z
  7081   001FE8  C042  F1B5         	movff	?___fladd+1,powf@z+1
  7082   001FEC  C043  F1B6         	movff	?___fladd+2,powf@z+2
  7083   001FF0  C044  F1B7         	movff	?___fladd+3,powf@z+3
  7084   001FF4  C17C  F055         	movff	powf@u,___flsub@a
  7085   001FF8  C17D  F056         	movff	powf@u+1,___flsub@a+1
  7086   001FFC  C17E  F057         	movff	powf@u+2,___flsub@a+2
  7087   002000  C17F  F058         	movff	powf@u+3,___flsub@a+3
  7088   002004  C1B4  F051         	movff	powf@z,___flsub@b
  7089   002008  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  7090   00200C  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  7091   002010  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  7092   002014  EC01  F036         	call	___flsub	;wreg free
  7093   002018  C051  F19C         	movff	?___flsub,_powf$1840
  7094   00201C  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  7095   002020  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  7096   002024  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  7097   002028  C180  F051         	movff	powf@v,___flsub@b
  7098   00202C  C181  F052         	movff	powf@v+1,___flsub@b+1
  7099   002030  C182  F053         	movff	powf@v+2,___flsub@b+2
  7100   002034  C183  F054         	movff	powf@v+3,___flsub@b+3
  7101   002038  C19C  F055         	movff	_powf$1840,___flsub@a
  7102   00203C  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  7103   002040  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  7104   002044  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  7105   002048  EC01  F036         	call	___flsub	;wreg free
  7106   00204C  C051  F144         	movff	?___flsub,powf@w
  7107   002050  C052  F145         	movff	?___flsub+1,powf@w+1
  7108   002054  C053  F146         	movff	?___flsub+2,powf@w+2
  7109   002058  C054  F147         	movff	?___flsub+3,powf@w+3
  7110   00205C  C1B4  F00F         	movff	powf@z,___flmul@b
  7111   002060  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7112   002064  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7113   002068  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7114   00206C  C1B4  F013         	movff	powf@z,___flmul@a
  7115   002070  C1B5  F014         	movff	powf@z+1,___flmul@a+1
  7116   002074  C1B6  F015         	movff	powf@z+2,___flmul@a+2
  7117   002078  C1B7  F016         	movff	powf@z+3,___flmul@a+3
  7118   00207C  ECC6  F01F         	call	___flmul	;wreg free
  7119   002080  C00F  F1B0         	movff	?___flmul,powf@t
  7120   002084  C010  F1B1         	movff	?___flmul+1,powf@t+1
  7121   002088  C011  F1B2         	movff	?___flmul+2,powf@t+2
  7122   00208C  C012  F1B3         	movff	?___flmul+3,powf@t+3
  7123   002090  0E0E               	movlw	14
  7124   002092  6E45               	movwf	___fladd@a^0,c
  7125   002094  0EEA               	movlw	234
  7126   002096  6E46               	movwf	(___fladd@a+1)^0,c
  7127   002098  0EDD               	movlw	221
  7128   00209A  6E47               	movwf	(___fladd@a+2)^0,c
  7129   00209C  0EB5               	movlw	181
  7130   00209E  6E48               	movwf	(___fladd@a+3)^0,c
  7131   0020A0  0E4C               	movlw	76
  7132   0020A2  6E13               	movwf	___flmul@a^0,c
  7133   0020A4  0EBB               	movlw	187
  7134   0020A6  6E14               	movwf	(___flmul@a+1)^0,c
  7135   0020A8  0E31               	movlw	49
  7136   0020AA  6E15               	movwf	(___flmul@a+2)^0,c
  7137   0020AC  0E33               	movlw	51
  7138   0020AE  6E16               	movwf	(___flmul@a+3)^0,c
  7139   0020B0  C1B0  F00F         	movff	powf@t,___flmul@b
  7140   0020B4  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7141   0020B8  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7142   0020BC  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7143   0020C0  ECC6  F01F         	call	___flmul	;wreg free
  7144   0020C4  C00F  F041         	movff	?___flmul,___fladd@b
  7145   0020C8  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7146   0020CC  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7147   0020D0  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7148   0020D4  EC6B  F01D         	call	___fladd	;wreg free
  7149   0020D8  C041  F148         	movff	?___fladd,_powf$1837
  7150   0020DC  C042  F149         	movff	?___fladd+1,_powf$1837+1
  7151   0020E0  C043  F14A         	movff	?___fladd+2,_powf$1837+2
  7152   0020E4  C044  F14B         	movff	?___fladd+3,_powf$1837+3
  7153   0020E8  0E55               	movlw	85
  7154   0020EA  6E45               	movwf	___fladd@a^0,c
  7155   0020EC  0EB3               	movlw	179
  7156   0020EE  6E46               	movwf	(___fladd@a+1)^0,c
  7157   0020F0  0E8A               	movlw	138
  7158   0020F2  6E47               	movwf	(___fladd@a+2)^0,c
  7159   0020F4  0E38               	movlw	56
  7160   0020F6  6E48               	movwf	(___fladd@a+3)^0,c
  7161   0020F8  C1B0  F013         	movff	powf@t,___flmul@a
  7162   0020FC  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7163   002100  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7164   002104  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7165   002108  C148  F00F         	movff	_powf$1837,___flmul@b
  7166   00210C  C149  F010         	movff	_powf$1837+1,___flmul@b+1
  7167   002110  C14A  F011         	movff	_powf$1837+2,___flmul@b+2
  7168   002114  C14B  F012         	movff	_powf$1837+3,___flmul@b+3
  7169   002118  ECC6  F01F         	call	___flmul	;wreg free
  7170   00211C  C00F  F041         	movff	?___flmul,___fladd@b
  7171   002120  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7172   002124  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7173   002128  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7174   00212C  EC6B  F01D         	call	___fladd	;wreg free
  7175   002130  C041  F158         	movff	?___fladd,_powf$1838
  7176   002134  C042  F159         	movff	?___fladd+1,_powf$1838+1
  7177   002138  C043  F15A         	movff	?___fladd+2,_powf$1838+2
  7178   00213C  C044  F15B         	movff	?___fladd+3,_powf$1838+3
  7179   002140  0E61               	movlw	97
  7180   002142  6E45               	movwf	___fladd@a^0,c
  7181   002144  0E0B               	movlw	11
  7182   002146  6E46               	movwf	(___fladd@a+1)^0,c
  7183   002148  0E36               	movlw	54
  7184   00214A  6E47               	movwf	(___fladd@a+2)^0,c
  7185   00214C  0EBB               	movlw	187
  7186   00214E  6E48               	movwf	(___fladd@a+3)^0,c
  7187   002150  C1B0  F013         	movff	powf@t,___flmul@a
  7188   002154  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7189   002158  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7190   00215C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7191   002160  C158  F00F         	movff	_powf$1838,___flmul@b
  7192   002164  C159  F010         	movff	_powf$1838+1,___flmul@b+1
  7193   002168  C15A  F011         	movff	_powf$1838+2,___flmul@b+2
  7194   00216C  C15B  F012         	movff	_powf$1838+3,___flmul@b+3
  7195   002170  ECC6  F01F         	call	___flmul	;wreg free
  7196   002174  C00F  F041         	movff	?___flmul,___fladd@b
  7197   002178  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7198   00217C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7199   002180  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7200   002184  EC6B  F01D         	call	___fladd	;wreg free
  7201   002188  C041  F14C         	movff	?___fladd,_powf$1839
  7202   00218C  C042  F14D         	movff	?___fladd+1,_powf$1839+1
  7203   002190  C043  F14E         	movff	?___fladd+2,_powf$1839+2
  7204   002194  C044  F14F         	movff	?___fladd+3,_powf$1839+3
  7205   002198  0EAB               	movlw	171
  7206   00219A  6E45               	movwf	___fladd@a^0,c
  7207   00219C  0EAA               	movlw	170
  7208   00219E  6E46               	movwf	(___fladd@a+1)^0,c
  7209   0021A0  0E2A               	movlw	42
  7210   0021A2  6E47               	movwf	(___fladd@a+2)^0,c
  7211   0021A4  0E3E               	movlw	62
  7212   0021A6  6E48               	movwf	(___fladd@a+3)^0,c
  7213   0021A8  C1B0  F013         	movff	powf@t,___flmul@a
  7214   0021AC  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7215   0021B0  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7216   0021B4  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7217   0021B8  C14C  F00F         	movff	_powf$1839,___flmul@b
  7218   0021BC  C14D  F010         	movff	_powf$1839+1,___flmul@b+1
  7219   0021C0  C14E  F011         	movff	_powf$1839+2,___flmul@b+2
  7220   0021C4  C14F  F012         	movff	_powf$1839+3,___flmul@b+3
  7221   0021C8  ECC6  F01F         	call	___flmul	;wreg free
  7222   0021CC  C00F  F041         	movff	?___flmul,___fladd@b
  7223   0021D0  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7224   0021D4  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7225   0021D8  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7226   0021DC  EC6B  F01D         	call	___fladd	;wreg free
  7227   0021E0  C041  F138         	movff	?___fladd,_powf$1841
  7228   0021E4  C042  F139         	movff	?___fladd+1,_powf$1841+1
  7229   0021E8  C043  F13A         	movff	?___fladd+2,_powf$1841+2
  7230   0021EC  C044  F13B         	movff	?___fladd+3,_powf$1841+3
  7231   0021F0  C1B4  F051         	movff	powf@z,___flsub@b
  7232   0021F4  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  7233   0021F8  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  7234   0021FC  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  7235   002200  C1B0  F013         	movff	powf@t,___flmul@a
  7236   002204  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7237   002208  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7238   00220C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7239   002210  C138  F00F         	movff	_powf$1841,___flmul@b
  7240   002214  C139  F010         	movff	_powf$1841+1,___flmul@b+1
  7241   002218  C13A  F011         	movff	_powf$1841+2,___flmul@b+2
  7242   00221C  C13B  F012         	movff	_powf$1841+3,___flmul@b+3
  7243   002220  ECC6  F01F         	call	___flmul	;wreg free
  7244   002224  C00F  F055         	movff	?___flmul,___flsub@a
  7245   002228  C010  F056         	movff	?___flmul+1,___flsub@a+1
  7246   00222C  C011  F057         	movff	?___flmul+2,___flsub@a+2
  7247   002230  C012  F058         	movff	?___flmul+3,___flsub@a+3
  7248   002234  EC01  F036         	call	___flsub	;wreg free
  7249   002238  C051  F18C         	movff	?___flsub,powf@t1
  7250   00223C  C052  F18D         	movff	?___flsub+1,powf@t1+1
  7251   002240  C053  F18E         	movff	?___flsub+2,powf@t1+2
  7252   002244  C054  F18F         	movff	?___flsub+3,powf@t1+3
  7253   002248  0E00               	movlw	0
  7254   00224A  6E45               	movwf	___fladd@a^0,c
  7255   00224C  0E00               	movlw	0
  7256   00224E  6E46               	movwf	(___fladd@a+1)^0,c
  7257   002250  0E00               	movlw	0
  7258   002252  6E47               	movwf	(___fladd@a+2)^0,c
  7259   002254  0EC0               	movlw	192
  7260   002256  6E48               	movwf	(___fladd@a+3)^0,c
  7261   002258  C18C  F041         	movff	powf@t1,___fladd@b
  7262   00225C  C18D  F042         	movff	powf@t1+1,___fladd@b+1
  7263   002260  C18E  F043         	movff	powf@t1+2,___fladd@b+2
  7264   002264  C18F  F044         	movff	powf@t1+3,___fladd@b+3
  7265   002268  EC6B  F01D         	call	___fladd	;wreg free
  7266   00226C  C041  F02C         	movff	?___fladd,___fldiv@a
  7267   002270  C042  F02D         	movff	?___fladd+1,___fldiv@a+1
  7268   002274  C043  F02E         	movff	?___fladd+2,___fldiv@a+2
  7269   002278  C044  F02F         	movff	?___fladd+3,___fldiv@a+3
  7270   00227C  C18C  F013         	movff	powf@t1,___flmul@a
  7271   002280  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  7272   002284  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  7273   002288  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  7274   00228C  C1B4  F00F         	movff	powf@z,___flmul@b
  7275   002290  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7276   002294  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7277   002298  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7278   00229C  ECC6  F01F         	call	___flmul	;wreg free
  7279   0022A0  C00F  F028         	movff	?___flmul,___fldiv@b
  7280   0022A4  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  7281   0022A8  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  7282   0022AC  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  7283   0022B0  ECC8  F023         	call	___fldiv	;wreg free
  7284   0022B4  C028  F13C         	movff	?___fldiv,_powf$1845
  7285   0022B8  C029  F13D         	movff	?___fldiv+1,_powf$1845+1
  7286   0022BC  C02A  F13E         	movff	?___fldiv+2,_powf$1845+2
  7287   0022C0  C02B  F13F         	movff	?___fldiv+3,_powf$1845+3
  7288   0022C4  C144  F045         	movff	powf@w,___fladd@a
  7289   0022C8  C145  F046         	movff	powf@w+1,___fladd@a+1
  7290   0022CC  C146  F047         	movff	powf@w+2,___fladd@a+2
  7291   0022D0  C147  F048         	movff	powf@w+3,___fladd@a+3
  7292   0022D4  C144  F013         	movff	powf@w,___flmul@a
  7293   0022D8  C145  F014         	movff	powf@w+1,___flmul@a+1
  7294   0022DC  C146  F015         	movff	powf@w+2,___flmul@a+2
  7295   0022E0  C147  F016         	movff	powf@w+3,___flmul@a+3
  7296   0022E4  C1B4  F00F         	movff	powf@z,___flmul@b
  7297   0022E8  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7298   0022EC  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7299   0022F0  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7300   0022F4  ECC6  F01F         	call	___flmul	;wreg free
  7301   0022F8  C00F  F041         	movff	?___flmul,___fladd@b
  7302   0022FC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7303   002300  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7304   002304  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7305   002308  EC6B  F01D         	call	___fladd	;wreg free
  7306   00230C  C041  F118         	movff	?___fladd,_powf$1851
  7307   002310  C042  F119         	movff	?___fladd+1,_powf$1851+1
  7308   002314  C043  F11A         	movff	?___fladd+2,_powf$1851+2
  7309   002318  C044  F11B         	movff	?___fladd+3,_powf$1851+3
  7310   00231C  C13C  F051         	movff	_powf$1845,___flsub@b
  7311   002320  C13D  F052         	movff	_powf$1845+1,___flsub@b+1
  7312   002324  C13E  F053         	movff	_powf$1845+2,___flsub@b+2
  7313   002328  C13F  F054         	movff	_powf$1845+3,___flsub@b+3
  7314   00232C  C118  F055         	movff	_powf$1851,___flsub@a
  7315   002330  C119  F056         	movff	_powf$1851+1,___flsub@a+1
  7316   002334  C11A  F057         	movff	_powf$1851+2,___flsub@a+2
  7317   002338  C11B  F058         	movff	_powf$1851+3,___flsub@a+3
  7318   00233C  EC01  F036         	call	___flsub	;wreg free
  7319   002340  C051  F150         	movff	?___flsub,powf@r
  7320   002344  C052  F151         	movff	?___flsub+1,powf@r+1
  7321   002348  C053  F152         	movff	?___flsub+2,powf@r+2
  7322   00234C  C054  F153         	movff	?___flsub+3,powf@r+3
  7323   002350  C1B4  F055         	movff	powf@z,___flsub@a
  7324   002354  C1B5  F056         	movff	powf@z+1,___flsub@a+1
  7325   002358  C1B6  F057         	movff	powf@z+2,___flsub@a+2
  7326   00235C  C1B7  F058         	movff	powf@z+3,___flsub@a+3
  7327   002360  C150  F051         	movff	powf@r,___flsub@b
  7328   002364  C151  F052         	movff	powf@r+1,___flsub@b+1
  7329   002368  C152  F053         	movff	powf@r+2,___flsub@b+2
  7330   00236C  C153  F054         	movff	powf@r+3,___flsub@b+3
  7331   002370  EC01  F036         	call	___flsub	;wreg free
  7332   002374  C051  F19C         	movff	?___flsub,_powf$1840
  7333   002378  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  7334   00237C  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  7335   002380  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  7336   002384  0E00               	movlw	0
  7337   002386  6E51               	movwf	___flsub@b^0,c
  7338   002388  0E00               	movlw	0
  7339   00238A  6E52               	movwf	(___flsub@b+1)^0,c
  7340   00238C  0E80               	movlw	128
  7341   00238E  6E53               	movwf	(___flsub@b+2)^0,c
  7342   002390  0E3F               	movlw	63
  7343   002392  6E54               	movwf	(___flsub@b+3)^0,c
  7344   002394  C19C  F055         	movff	_powf$1840,___flsub@a
  7345   002398  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  7346   00239C  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  7347   0023A0  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  7348   0023A4  EC01  F036         	call	___flsub	;wreg free
  7349   0023A8  C051  F1B4         	movff	?___flsub,powf@z
  7350   0023AC  C052  F1B5         	movff	?___flsub+1,powf@z+1
  7351   0023B0  C053  F1B6         	movff	?___flsub+2,powf@z+2
  7352   0023B4  C054  F1B7         	movff	?___flsub+3,powf@z+3
  7353   0023B8  C1B4  F1A8         	movff	powf@z,powf@j
  7354   0023BC  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  7355   0023C0  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  7356   0023C4  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  7357   0023C8  C188  F070         	movff	powf@n,??_powf
  7358   0023CC  C189  F071         	movff	powf@n+1,??_powf+1
  7359   0023D0  C18A  F072         	movff	powf@n+2,??_powf+2
  7360   0023D4  C18B  F073         	movff	powf@n+3,??_powf+3
  7361   0023D8  0E17               	movlw	23
  7362   0023DA                     u10145:
  7363   0023DA  90D8               	bcf	status,0,c
  7364   0023DC  0100               	movlb	0	; () banked
  7365   0023DE  3770               	rlcf	??_powf& (0+255),f,b
  7366   0023E0  3771               	rlcf	(??_powf+1)& (0+255),f,b
  7367   0023E2  3772               	rlcf	(??_powf+2)& (0+255),f,b
  7368   0023E4  3773               	rlcf	(??_powf+3)& (0+255),f,b
  7369   0023E6  2EE8               	decfsz	wreg,f,c
  7370   0023E8  EFED  F011         	goto	u10145
  7371   0023EC  5170               	movf	??_powf& (0+255),w,b
  7372   0023EE  0101               	movlb	1	; () banked
  7373   0023F0  27A8               	addwf	powf@j& (0+255),f,b
  7374   0023F2  0100               	movlb	0	; () banked
  7375   0023F4  5171               	movf	(??_powf+1)& (0+255),w,b
  7376   0023F6  0101               	movlb	1	; () banked
  7377   0023F8  23A9               	addwfc	(powf@j+1)& (0+255),f,b
  7378   0023FA  0100               	movlb	0	; () banked
  7379   0023FC  5172               	movf	(??_powf+2)& (0+255),w,b
  7380   0023FE  0101               	movlb	1	; () banked
  7381   002400  23AA               	addwfc	(powf@j+2)& (0+255),f,b
  7382   002402  0100               	movlb	0	; () banked
  7383   002404  5173               	movf	(??_powf+3)& (0+255),w,b
  7384   002406  0101               	movlb	1	; () banked
  7385   002408  23AB               	addwfc	(powf@j+3)& (0+255),f,b
  7386   00240A                     
  7387                           ; BSR set to: 1
  7388   00240A  0E17               	movlw	23
  7389   00240C  0100               	movlb	0	; () banked
  7390   00240E  6F70               	movwf	??_powf& (0+255),b
  7391   002410  C1A8  F071         	movff	powf@j,??_powf+1
  7392   002414  C1A9  F072         	movff	powf@j+1,??_powf+2
  7393   002418  C1AA  F073         	movff	powf@j+2,??_powf+3
  7394   00241C  C1AB  F074         	movff	powf@j+3,??_powf+4
  7395   002420                     u10155:
  7396   002420  6770               	tstfsz	??_powf& (0+255),b
  7397   002422  EF15  F012         	goto	u10156
  7398   002426  EF1D  F012         	goto	u10157
  7399   00242A                     u10156:
  7400   00242A  3574               	rlcf	(??_powf+4)& (0+255),w,b
  7401   00242C  3374               	rrcf	(??_powf+4)& (0+255),f,b
  7402   00242E  3373               	rrcf	(??_powf+3)& (0+255),f,b
  7403   002430  3372               	rrcf	(??_powf+2)& (0+255),f,b
  7404   002432  3371               	rrcf	(??_powf+1)& (0+255),f,b
  7405   002434  2F70               	decfsz	??_powf& (0+255),f,b
  7406   002436  EF10  F012         	goto	u10155
  7407   00243A                     u10157:
  7408   00243A  0100               	movlb	0	; () banked
  7409   00243C  BF74               	btfsc	(??_powf+4)& (0+255),7,b
  7410   00243E  EF2D  F012         	goto	u10160
  7411   002442  5174               	movf	(??_powf+4)& (0+255),w,b
  7412   002444  1173               	iorwf	(??_powf+3)& (0+255),w,b
  7413   002446  1172               	iorwf	(??_powf+2)& (0+255),w,b
  7414   002448  E106               	bnz	u10161
  7415   00244A  0571               	decf	(??_powf+1)& (0+255),w,b
  7416   00244C  B0D8               	btfsc	status,0,c
  7417   00244E  EF2B  F012         	goto	u10161
  7418   002452  EF2D  F012         	goto	u10160
  7419   002456                     u10161:
  7420   002456  EF45  F012         	goto	l1331
  7421   00245A                     u10160:
  7422   00245A                     
  7423                           ; BSR set to: 0
  7424   00245A  C1B4  F028         	movff	powf@z,scalbnf@x
  7425   00245E  C1B5  F029         	movff	powf@z+1,scalbnf@x+1
  7426   002462  C1B6  F02A         	movff	powf@z+2,scalbnf@x+2
  7427   002466  C1B7  F02B         	movff	powf@z+3,scalbnf@x+3
  7428   00246A  C188  F02C         	movff	powf@n,scalbnf@n
  7429   00246E  C189  F02D         	movff	powf@n+1,scalbnf@n+1
  7430   002472  EC97  F028         	call	_scalbnf	;wreg free
  7431   002476  C028  F1B4         	movff	?_scalbnf,powf@z
  7432   00247A  C029  F1B5         	movff	?_scalbnf+1,powf@z+1
  7433   00247E  C02A  F1B6         	movff	?_scalbnf+2,powf@z+2
  7434   002482  C02B  F1B7         	movff	?_scalbnf+3,powf@z+3
  7435   002486  EF4D  F012         	goto	l7748
  7436   00248A                     l1331:
  7437                           
  7438                           ; BSR set to: 0
  7439   00248A  C1A8  F1B4         	movff	powf@j,powf@z
  7440   00248E  C1A9  F1B5         	movff	powf@j+1,powf@z+1
  7441   002492  C1AA  F1B6         	movff	powf@j+2,powf@z+2
  7442   002496  C1AB  F1B7         	movff	powf@j+3,powf@z+3
  7443   00249A                     l7748:
  7444   00249A  0101               	movlb	1	; () banked
  7445   00249C  51B4               	movf	powf@z& (0+255),w,b
  7446   00249E  11B5               	iorwf	(powf@z+1)& (0+255),w,b
  7447   0024A0  11B6               	iorwf	(powf@z+2)& (0+255),w,b
  7448   0024A2  11B7               	iorwf	(powf@z+3)& (0+255),w,b
  7449   0024A4  B4D8               	btfsc	status,2,c
  7450   0024A6  EF57  F012         	goto	u10171
  7451   0024AA  EF59  F012         	goto	u10170
  7452   0024AE                     u10171:
  7453   0024AE  EF3F  F003         	goto	l7434
  7454   0024B2                     u10170:
  7455   0024B2                     
  7456                           ; BSR set to: 1
  7457   0024B2  5164               	movf	powf@sn& (0+255),w,b
  7458   0024B4  1BB4               	xorwf	powf@z& (0+255),f,b
  7459   0024B6  5165               	movf	(powf@sn+1)& (0+255),w,b
  7460   0024B8  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
  7461   0024BA  5166               	movf	(powf@sn+2)& (0+255),w,b
  7462   0024BC  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
  7463   0024BE  5167               	movf	(powf@sn+3)& (0+255),w,b
  7464   0024C0  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
  7465   0024C2  EF3F  F003         	goto	l7434
  7466   0024C6                     l1265:
  7467   0024C6  0012               	return		;funcret
  7468   0024C8                     __end_of_powf:
  7469                           	callstack 0
  7470                           
  7471 ;; *************** function _sqrtf *****************
  7472 ;; Defined at:
  7473 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sqrtf.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;  x               4    0[COMRAM] float 
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;  ix              4   33[COMRAM] struct .
  7478 ;;  r               4   29[COMRAM] unsigned long 
  7479 ;;  m               4   25[COMRAM] long 
  7480 ;;  t               4   21[COMRAM] long 
  7481 ;;  q               4   17[COMRAM] long 
  7482 ;;  i               4   13[COMRAM] long 
  7483 ;;  s               4    9[COMRAM] long 
  7484 ;;  z               4    0        float 
  7485 ;; Return value:  Size  Location     Type
  7486 ;;                  4    0[COMRAM] float 
  7487 ;; Registers used:
  7488 ;;		wreg, status,2, status,0
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7494 ;;      Params:         4       0       0       0       0       0       0       0       0
  7495 ;;      Locals:        28       0       0       0       0       0       0       0       0
  7496 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7497 ;;      Totals:        37       0       0       0       0       0       0       0       0
  7498 ;;Total ram usage:       37 bytes
  7499 ;; Hardware stack levels used: 1
  7500 ;; Hardware stack levels required when called: 1
  7501 ;; This function calls:
  7502 ;;		Nothing
  7503 ;; This function is called by:
  7504 ;;		_powf
  7505 ;; This function uses a non-reentrant model
  7506 ;;
  7507                           
  7508                           	psect	text7
  7509   0043B2                     __ptext7:
  7510                           	callstack 0
  7511   0043B2                     _sqrtf:
  7512                           	callstack 27
  7513   0043B2  C001  F022         	movff	sqrtf@x,sqrtf@ix
  7514   0043B6  C002  F023         	movff	sqrtf@x+1,sqrtf@ix+1
  7515   0043BA  C003  F024         	movff	sqrtf@x+2,sqrtf@ix+2
  7516   0043BE  C004  F025         	movff	sqrtf@x+3,sqrtf@ix+3
  7517   0043C2  0E00               	movlw	0
  7518   0043C4  1422               	andwf	sqrtf@ix^0,w,c
  7519   0043C6  6E05               	movwf	??_sqrtf^0,c
  7520   0043C8  0E00               	movlw	0
  7521   0043CA  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7522   0043CC  6E06               	movwf	(??_sqrtf+1)^0,c
  7523   0043CE  0E80               	movlw	128
  7524   0043D0  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7525   0043D2  6E07               	movwf	(??_sqrtf+2)^0,c
  7526   0043D4  0E7F               	movlw	127
  7527   0043D6  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7528   0043D8  6E08               	movwf	(??_sqrtf+3)^0,c
  7529   0043DA  0E80               	movlw	128
  7530   0043DC  1807               	xorwf	(??_sqrtf+2)^0,w,c
  7531   0043DE  E109               	bnz	u9341
  7532   0043E0  0E7F               	movlw	127
  7533   0043E2  1808               	xorwf	(??_sqrtf+3)^0,w,c
  7534   0043E4  1005               	iorwf	??_sqrtf^0,w,c
  7535   0043E6  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7536   0043E8  A4D8               	btfss	status,2,c
  7537   0043EA  EFF9  F021         	goto	u9341
  7538   0043EE  EFFB  F021         	goto	u9340
  7539   0043F2                     u9341:
  7540   0043F2  EF2B  F022         	goto	l7200
  7541   0043F6                     u9340:
  7542   0043F6  0EFF               	movlw	255
  7543   0043F8  1422               	andwf	sqrtf@ix^0,w,c
  7544   0043FA  6E05               	movwf	??_sqrtf^0,c
  7545   0043FC  0EFF               	movlw	255
  7546   0043FE  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7547   004400  6E06               	movwf	(??_sqrtf+1)^0,c
  7548   004402  0E7F               	movlw	127
  7549   004404  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7550   004406  6E07               	movwf	(??_sqrtf+2)^0,c
  7551   004408  0E00               	movlw	0
  7552   00440A  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7553   00440C  6E08               	movwf	(??_sqrtf+3)^0,c
  7554   00440E  5005               	movf	??_sqrtf^0,w,c
  7555   004410  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7556   004412  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7557   004414  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7558   004416  A4D8               	btfss	status,2,c
  7559   004418  EF10  F022         	goto	u9351
  7560   00441C  EF12  F022         	goto	u9350
  7561   004420                     u9351:
  7562   004420  EF19  F022         	goto	l7194
  7563   004424                     u9350:
  7564   004424  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7565   004426  EF19  F022         	goto	u9360
  7566   00442A  EF17  F022         	goto	u9361
  7567   00442E                     u9361:
  7568   00442E  EF21  F022         	goto	l7196
  7569   004432                     u9360:
  7570   004432                     l7194:
  7571   004432  0EFF               	movlw	255
  7572   004434  1222               	iorwf	sqrtf@ix^0,f,c
  7573   004436  0EFF               	movlw	255
  7574   004438  1223               	iorwf	(sqrtf@ix+1)^0,f,c
  7575   00443A  0E7F               	movlw	127
  7576   00443C  1224               	iorwf	(sqrtf@ix+2)^0,f,c
  7577   00443E  0E00               	movlw	0
  7578   004440  1225               	iorwf	(sqrtf@ix+3)^0,f,c
  7579   004442                     l7196:
  7580   004442  C022  F001         	movff	sqrtf@ix,?_sqrtf
  7581   004446  C023  F002         	movff	sqrtf@ix+1,?_sqrtf+1
  7582   00444A  C024  F003         	movff	sqrtf@ix+2,?_sqrtf+2
  7583   00444E  C025  F004         	movff	sqrtf@ix+3,?_sqrtf+3
  7584   004452  EFC7  F023         	goto	l1357
  7585   004456                     l7200:
  7586   004456  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7587   004458  EF3A  F022         	goto	u9370
  7588   00445C  5025               	movf	(sqrtf@ix+3)^0,w,c
  7589   00445E  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7590   004460  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7591   004462  E106               	bnz	u9371
  7592   004464  0422               	decf	sqrtf@ix^0,w,c
  7593   004466  B0D8               	btfsc	status,0,c
  7594   004468  EF38  F022         	goto	u9371
  7595   00446C  EF3A  F022         	goto	u9370
  7596   004470                     u9371:
  7597   004470  EF71  F022         	goto	l7216
  7598   004474                     u9370:
  7599   004474  0EFF               	movlw	255
  7600   004476  1422               	andwf	sqrtf@ix^0,w,c
  7601   004478  6E05               	movwf	??_sqrtf^0,c
  7602   00447A  0EFF               	movlw	255
  7603   00447C  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7604   00447E  6E06               	movwf	(??_sqrtf+1)^0,c
  7605   004480  0EFF               	movlw	255
  7606   004482  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7607   004484  6E07               	movwf	(??_sqrtf+2)^0,c
  7608   004486  0E7F               	movlw	127
  7609   004488  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7610   00448A  6E08               	movwf	(??_sqrtf+3)^0,c
  7611   00448C  5005               	movf	??_sqrtf^0,w,c
  7612   00448E  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7613   004490  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7614   004492  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7615   004494  A4D8               	btfss	status,2,c
  7616   004496  EF4F  F022         	goto	u9381
  7617   00449A  EF51  F022         	goto	u9380
  7618   00449E                     u9381:
  7619   00449E  EF5B  F022         	goto	l7208
  7620   0044A2                     u9380:
  7621   0044A2  0E00               	movlw	0
  7622   0044A4  6E01               	movwf	?_sqrtf^0,c
  7623   0044A6  0E00               	movlw	0
  7624   0044A8  6E02               	movwf	(?_sqrtf+1)^0,c
  7625   0044AA  0E00               	movlw	0
  7626   0044AC  6E03               	movwf	(?_sqrtf+2)^0,c
  7627   0044AE  0E00               	movlw	0
  7628   0044B0  6E04               	movwf	(?_sqrtf+3)^0,c
  7629   0044B2  EFC7  F023         	goto	l1357
  7630   0044B6                     l7208:
  7631   0044B6  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7632   0044B8  EF62  F022         	goto	u9390
  7633   0044BC  EF60  F022         	goto	u9391
  7634   0044C0                     u9391:
  7635   0044C0  EF71  F022         	goto	l7216
  7636   0044C4                     u9390:
  7637   0044C4  0E00               	movlw	0
  7638   0044C6  0103               	movlb	3	; () banked
  7639   0044C8  6F49               	movwf	(_errno+1)& (0+255),b
  7640   0044CA  0E21               	movlw	33
  7641   0044CC  6F48               	movwf	_errno& (0+255),b
  7642   0044CE  0EFF               	movlw	255
  7643   0044D0  6E22               	movwf	sqrtf@ix^0,c
  7644   0044D2  0EFF               	movlw	255
  7645   0044D4  6E23               	movwf	(sqrtf@ix+1)^0,c
  7646   0044D6  0EFF               	movlw	255
  7647   0044D8  6E24               	movwf	(sqrtf@ix+2)^0,c
  7648   0044DA  0E7F               	movlw	127
  7649   0044DC  6E25               	movwf	(sqrtf@ix+3)^0,c
  7650   0044DE  EF21  F022         	goto	l7196
  7651   0044E2                     l7216:
  7652   0044E2  0E17               	movlw	23
  7653   0044E4  6E05               	movwf	??_sqrtf^0,c
  7654   0044E6  C022  F006         	movff	sqrtf@ix,??_sqrtf+1
  7655   0044EA  C023  F007         	movff	sqrtf@ix+1,??_sqrtf+2
  7656   0044EE  C024  F008         	movff	sqrtf@ix+2,??_sqrtf+3
  7657   0044F2  C025  F009         	movff	sqrtf@ix+3,??_sqrtf+4
  7658   0044F6                     u9405:
  7659   0044F6  6605               	tstfsz	??_sqrtf^0,c
  7660   0044F8  EF80  F022         	goto	u9406
  7661   0044FC  EF88  F022         	goto	u9407
  7662   004500                     u9406:
  7663   004500  3409               	rlcf	(??_sqrtf+4)^0,w,c
  7664   004502  3209               	rrcf	(??_sqrtf+4)^0,f,c
  7665   004504  3208               	rrcf	(??_sqrtf+3)^0,f,c
  7666   004506  3207               	rrcf	(??_sqrtf+2)^0,f,c
  7667   004508  3206               	rrcf	(??_sqrtf+1)^0,f,c
  7668   00450A  2E05               	decfsz	??_sqrtf^0,f,c
  7669   00450C  EF7B  F022         	goto	u9405
  7670   004510                     u9407:
  7671   004510  C006  F01A         	movff	??_sqrtf+1,sqrtf@m
  7672   004514  C007  F01B         	movff	??_sqrtf+2,sqrtf@m+1
  7673   004518  C008  F01C         	movff	??_sqrtf+3,sqrtf@m+2
  7674   00451C  C009  F01D         	movff	??_sqrtf+4,sqrtf@m+3
  7675   004520  501A               	movf	sqrtf@m^0,w,c
  7676   004522  101B               	iorwf	(sqrtf@m+1)^0,w,c
  7677   004524  101C               	iorwf	(sqrtf@m+2)^0,w,c
  7678   004526  101D               	iorwf	(sqrtf@m+3)^0,w,c
  7679   004528  A4D8               	btfss	status,2,c
  7680   00452A  EF99  F022         	goto	u9411
  7681   00452E  EF9B  F022         	goto	u9410
  7682   004532                     u9411:
  7683   004532  EFCB  F022         	goto	l1361
  7684   004536                     u9410:
  7685   004536  0E00               	movlw	0
  7686   004538  6E0E               	movwf	sqrtf@i^0,c
  7687   00453A  0E00               	movlw	0
  7688   00453C  6E0F               	movwf	(sqrtf@i+1)^0,c
  7689   00453E  0E00               	movlw	0
  7690   004540  6E10               	movwf	(sqrtf@i+2)^0,c
  7691   004542  0E00               	movlw	0
  7692   004544  6E11               	movwf	(sqrtf@i+3)^0,c
  7693   004546  EFB0  F022         	goto	l7224
  7694   00454A                     l7220:
  7695   00454A  90D8               	bcf	status,0,c
  7696   00454C  3622               	rlcf	sqrtf@ix^0,f,c
  7697   00454E  3623               	rlcf	(sqrtf@ix+1)^0,f,c
  7698   004550  3624               	rlcf	(sqrtf@ix+2)^0,f,c
  7699   004552  3625               	rlcf	(sqrtf@ix+3)^0,f,c
  7700   004554  0E01               	movlw	1
  7701   004556  260E               	addwf	sqrtf@i^0,f,c
  7702   004558  0E00               	movlw	0
  7703   00455A  220F               	addwfc	(sqrtf@i+1)^0,f,c
  7704   00455C  2210               	addwfc	(sqrtf@i+2)^0,f,c
  7705   00455E  2211               	addwfc	(sqrtf@i+3)^0,f,c
  7706   004560                     l7224:
  7707   004560  AE24               	btfss	(sqrtf@ix+2)^0,7,c
  7708   004562  EFB5  F022         	goto	u9421
  7709   004566  EFB7  F022         	goto	u9420
  7710   00456A                     u9421:
  7711   00456A  EFA5  F022         	goto	l7220
  7712   00456E                     u9420:
  7713   00456E  0EFF               	movlw	255
  7714   004570  240E               	addwf	sqrtf@i^0,w,c
  7715   004572  6E05               	movwf	??_sqrtf^0,c
  7716   004574  0EFF               	movlw	255
  7717   004576  200F               	addwfc	(sqrtf@i+1)^0,w,c
  7718   004578  6E06               	movwf	(??_sqrtf+1)^0,c
  7719   00457A  0EFF               	movlw	255
  7720   00457C  2010               	addwfc	(sqrtf@i+2)^0,w,c
  7721   00457E  6E07               	movwf	(??_sqrtf+2)^0,c
  7722   004580  0EFF               	movlw	255
  7723   004582  2011               	addwfc	(sqrtf@i+3)^0,w,c
  7724   004584  6E08               	movwf	(??_sqrtf+3)^0,c
  7725   004586  5005               	movf	??_sqrtf^0,w,c
  7726   004588  5E1A               	subwf	sqrtf@m^0,f,c
  7727   00458A  5006               	movf	(??_sqrtf+1)^0,w,c
  7728   00458C  5A1B               	subwfb	(sqrtf@m+1)^0,f,c
  7729   00458E  5007               	movf	(??_sqrtf+2)^0,w,c
  7730   004590  5A1C               	subwfb	(sqrtf@m+2)^0,f,c
  7731   004592  5008               	movf	(??_sqrtf+3)^0,w,c
  7732   004594  5A1D               	subwfb	(sqrtf@m+3)^0,f,c
  7733   004596                     l1361:
  7734   004596  0E81               	movlw	129
  7735   004598  261A               	addwf	sqrtf@m^0,f,c
  7736   00459A  0EFF               	movlw	255
  7737   00459C  221B               	addwfc	(sqrtf@m+1)^0,f,c
  7738   00459E  0EFF               	movlw	255
  7739   0045A0  221C               	addwfc	(sqrtf@m+2)^0,f,c
  7740   0045A2  0EFF               	movlw	255
  7741   0045A4  221D               	addwfc	(sqrtf@m+3)^0,f,c
  7742   0045A6  0EFF               	movlw	255
  7743   0045A8  1422               	andwf	sqrtf@ix^0,w,c
  7744   0045AA  6E05               	movwf	??_sqrtf^0,c
  7745   0045AC  0EFF               	movlw	255
  7746   0045AE  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7747   0045B0  6E06               	movwf	(??_sqrtf+1)^0,c
  7748   0045B2  0E7F               	movlw	127
  7749   0045B4  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7750   0045B6  6E07               	movwf	(??_sqrtf+2)^0,c
  7751   0045B8  0E00               	movlw	0
  7752   0045BA  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7753   0045BC  6E08               	movwf	(??_sqrtf+3)^0,c
  7754   0045BE  0E00               	movlw	0
  7755   0045C0  1005               	iorwf	??_sqrtf^0,w,c
  7756   0045C2  6E22               	movwf	sqrtf@ix^0,c
  7757   0045C4  0E00               	movlw	0
  7758   0045C6  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7759   0045C8  6E23               	movwf	(sqrtf@ix+1)^0,c
  7760   0045CA  0E80               	movlw	128
  7761   0045CC  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7762   0045CE  6E24               	movwf	(sqrtf@ix+2)^0,c
  7763   0045D0  0E00               	movlw	0
  7764   0045D2  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7765   0045D4  6E25               	movwf	(sqrtf@ix+3)^0,c
  7766   0045D6  A01A               	btfss	sqrtf@m^0,0,c
  7767   0045D8  EFF0  F022         	goto	u9431
  7768   0045DC  EFF2  F022         	goto	u9430
  7769   0045E0                     u9431:
  7770   0045E0  EFFA  F022         	goto	l1365
  7771   0045E4                     u9430:
  7772   0045E4  5022               	movf	sqrtf@ix^0,w,c
  7773   0045E6  2622               	addwf	sqrtf@ix^0,f,c
  7774   0045E8  5023               	movf	(sqrtf@ix+1)^0,w,c
  7775   0045EA  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7776   0045EC  5024               	movf	(sqrtf@ix+2)^0,w,c
  7777   0045EE  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7778   0045F0  5025               	movf	(sqrtf@ix+3)^0,w,c
  7779   0045F2  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7780   0045F4                     l1365:
  7781   0045F4  341D               	rlcf	(sqrtf@m+3)^0,w,c
  7782   0045F6  321D               	rrcf	(sqrtf@m+3)^0,f,c
  7783   0045F8  321C               	rrcf	(sqrtf@m+2)^0,f,c
  7784   0045FA  321B               	rrcf	(sqrtf@m+1)^0,f,c
  7785   0045FC  321A               	rrcf	sqrtf@m^0,f,c
  7786   0045FE  5022               	movf	sqrtf@ix^0,w,c
  7787   004600  2622               	addwf	sqrtf@ix^0,f,c
  7788   004602  5023               	movf	(sqrtf@ix+1)^0,w,c
  7789   004604  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7790   004606  5024               	movf	(sqrtf@ix+2)^0,w,c
  7791   004608  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7792   00460A  5025               	movf	(sqrtf@ix+3)^0,w,c
  7793   00460C  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7794   00460E  0E00               	movlw	0
  7795   004610  6E0A               	movwf	sqrtf@s^0,c
  7796   004612  0E00               	movlw	0
  7797   004614  6E0B               	movwf	(sqrtf@s+1)^0,c
  7798   004616  0E00               	movlw	0
  7799   004618  6E0C               	movwf	(sqrtf@s+2)^0,c
  7800   00461A  0E00               	movlw	0
  7801   00461C  6E0D               	movwf	(sqrtf@s+3)^0,c
  7802   00461E  C00A  F012         	movff	sqrtf@s,sqrtf@q
  7803   004622  C00B  F013         	movff	sqrtf@s+1,sqrtf@q+1
  7804   004626  C00C  F014         	movff	sqrtf@s+2,sqrtf@q+2
  7805   00462A  C00D  F015         	movff	sqrtf@s+3,sqrtf@q+3
  7806   00462E  0E00               	movlw	0
  7807   004630  6E1E               	movwf	sqrtf@r^0,c
  7808   004632  0E00               	movlw	0
  7809   004634  6E1F               	movwf	(sqrtf@r+1)^0,c
  7810   004636  0E00               	movlw	0
  7811   004638  6E20               	movwf	(sqrtf@r+2)^0,c
  7812   00463A  0E01               	movlw	1
  7813   00463C  6E21               	movwf	(sqrtf@r+3)^0,c
  7814   00463E  EF69  F023         	goto	l7242
  7815   004642                     l7236:
  7816   004642  500A               	movf	sqrtf@s^0,w,c
  7817   004644  241E               	addwf	sqrtf@r^0,w,c
  7818   004646  6E16               	movwf	sqrtf@t^0,c
  7819   004648  500B               	movf	(sqrtf@s+1)^0,w,c
  7820   00464A  201F               	addwfc	(sqrtf@r+1)^0,w,c
  7821   00464C  6E17               	movwf	(sqrtf@t+1)^0,c
  7822   00464E  500C               	movf	(sqrtf@s+2)^0,w,c
  7823   004650  2020               	addwfc	(sqrtf@r+2)^0,w,c
  7824   004652  6E18               	movwf	(sqrtf@t+2)^0,c
  7825   004654  500D               	movf	(sqrtf@s+3)^0,w,c
  7826   004656  2021               	addwfc	(sqrtf@r+3)^0,w,c
  7827   004658  6E19               	movwf	(sqrtf@t+3)^0,c
  7828   00465A  5016               	movf	sqrtf@t^0,w,c
  7829   00465C  5C22               	subwf	sqrtf@ix^0,w,c
  7830   00465E  5017               	movf	(sqrtf@t+1)^0,w,c
  7831   004660  5823               	subwfb	(sqrtf@ix+1)^0,w,c
  7832   004662  5018               	movf	(sqrtf@t+2)^0,w,c
  7833   004664  5824               	subwfb	(sqrtf@ix+2)^0,w,c
  7834   004666  5025               	movf	(sqrtf@ix+3)^0,w,c
  7835   004668  0A80               	xorlw	128
  7836   00466A  6E05               	movwf	??_sqrtf^0,c
  7837   00466C  5019               	movf	(sqrtf@t+3)^0,w,c
  7838   00466E  0A80               	xorlw	128
  7839   004670  5805               	subwfb	??_sqrtf^0,w,c
  7840   004672  A0D8               	btfss	status,0,c
  7841   004674  EF3E  F023         	goto	u9441
  7842   004678  EF40  F023         	goto	u9440
  7843   00467C                     u9441:
  7844   00467C  EF5C  F023         	goto	l1368
  7845   004680                     u9440:
  7846   004680  5016               	movf	sqrtf@t^0,w,c
  7847   004682  241E               	addwf	sqrtf@r^0,w,c
  7848   004684  6E0A               	movwf	sqrtf@s^0,c
  7849   004686  5017               	movf	(sqrtf@t+1)^0,w,c
  7850   004688  201F               	addwfc	(sqrtf@r+1)^0,w,c
  7851   00468A  6E0B               	movwf	(sqrtf@s+1)^0,c
  7852   00468C  5018               	movf	(sqrtf@t+2)^0,w,c
  7853   00468E  2020               	addwfc	(sqrtf@r+2)^0,w,c
  7854   004690  6E0C               	movwf	(sqrtf@s+2)^0,c
  7855   004692  5019               	movf	(sqrtf@t+3)^0,w,c
  7856   004694  2021               	addwfc	(sqrtf@r+3)^0,w,c
  7857   004696  6E0D               	movwf	(sqrtf@s+3)^0,c
  7858   004698  5016               	movf	sqrtf@t^0,w,c
  7859   00469A  5E22               	subwf	sqrtf@ix^0,f,c
  7860   00469C  5017               	movf	(sqrtf@t+1)^0,w,c
  7861   00469E  5A23               	subwfb	(sqrtf@ix+1)^0,f,c
  7862   0046A0  5018               	movf	(sqrtf@t+2)^0,w,c
  7863   0046A2  5A24               	subwfb	(sqrtf@ix+2)^0,f,c
  7864   0046A4  5019               	movf	(sqrtf@t+3)^0,w,c
  7865   0046A6  5A25               	subwfb	(sqrtf@ix+3)^0,f,c
  7866   0046A8  501E               	movf	sqrtf@r^0,w,c
  7867   0046AA  2612               	addwf	sqrtf@q^0,f,c
  7868   0046AC  501F               	movf	(sqrtf@r+1)^0,w,c
  7869   0046AE  2213               	addwfc	(sqrtf@q+1)^0,f,c
  7870   0046B0  5020               	movf	(sqrtf@r+2)^0,w,c
  7871   0046B2  2214               	addwfc	(sqrtf@q+2)^0,f,c
  7872   0046B4  5021               	movf	(sqrtf@r+3)^0,w,c
  7873   0046B6  2215               	addwfc	(sqrtf@q+3)^0,f,c
  7874   0046B8                     l1368:
  7875   0046B8  5022               	movf	sqrtf@ix^0,w,c
  7876   0046BA  2622               	addwf	sqrtf@ix^0,f,c
  7877   0046BC  5023               	movf	(sqrtf@ix+1)^0,w,c
  7878   0046BE  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7879   0046C0  5024               	movf	(sqrtf@ix+2)^0,w,c
  7880   0046C2  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7881   0046C4  5025               	movf	(sqrtf@ix+3)^0,w,c
  7882   0046C6  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7883   0046C8  90D8               	bcf	status,0,c
  7884   0046CA  3221               	rrcf	(sqrtf@r+3)^0,f,c
  7885   0046CC  3220               	rrcf	(sqrtf@r+2)^0,f,c
  7886   0046CE  321F               	rrcf	(sqrtf@r+1)^0,f,c
  7887   0046D0  321E               	rrcf	sqrtf@r^0,f,c
  7888   0046D2                     l7242:
  7889   0046D2  501E               	movf	sqrtf@r^0,w,c
  7890   0046D4  101F               	iorwf	(sqrtf@r+1)^0,w,c
  7891   0046D6  1020               	iorwf	(sqrtf@r+2)^0,w,c
  7892   0046D8  1021               	iorwf	(sqrtf@r+3)^0,w,c
  7893   0046DA  A4D8               	btfss	status,2,c
  7894   0046DC  EF72  F023         	goto	u9451
  7895   0046E0  EF74  F023         	goto	u9450
  7896   0046E4                     u9451:
  7897   0046E4  EF21  F023         	goto	l7236
  7898   0046E8                     u9450:
  7899   0046E8  5022               	movf	sqrtf@ix^0,w,c
  7900   0046EA  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7901   0046EC  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7902   0046EE  1025               	iorwf	(sqrtf@ix+3)^0,w,c
  7903   0046F0  B4D8               	btfsc	status,2,c
  7904   0046F2  EF7D  F023         	goto	u9461
  7905   0046F6  EF7F  F023         	goto	u9460
  7906   0046FA                     u9461:
  7907   0046FA  EF93  F023         	goto	l1370
  7908   0046FE                     u9460:
  7909   0046FE  0E01               	movlw	1
  7910   004700  1412               	andwf	sqrtf@q^0,w,c
  7911   004702  6E05               	movwf	??_sqrtf^0,c
  7912   004704  0E00               	movlw	0
  7913   004706  1413               	andwf	(sqrtf@q+1)^0,w,c
  7914   004708  6E06               	movwf	(??_sqrtf+1)^0,c
  7915   00470A  0E00               	movlw	0
  7916   00470C  1414               	andwf	(sqrtf@q+2)^0,w,c
  7917   00470E  6E07               	movwf	(??_sqrtf+2)^0,c
  7918   004710  0E00               	movlw	0
  7919   004712  1415               	andwf	(sqrtf@q+3)^0,w,c
  7920   004714  6E08               	movwf	(??_sqrtf+3)^0,c
  7921   004716  5005               	movf	??_sqrtf^0,w,c
  7922   004718  2612               	addwf	sqrtf@q^0,f,c
  7923   00471A  5006               	movf	(??_sqrtf+1)^0,w,c
  7924   00471C  2213               	addwfc	(sqrtf@q+1)^0,f,c
  7925   00471E  5007               	movf	(??_sqrtf+2)^0,w,c
  7926   004720  2214               	addwfc	(sqrtf@q+2)^0,f,c
  7927   004722  5008               	movf	(??_sqrtf+3)^0,w,c
  7928   004724  2215               	addwfc	(sqrtf@q+3)^0,f,c
  7929   004726                     l1370:
  7930   004726  C012  F005         	movff	sqrtf@q,??_sqrtf
  7931   00472A  C013  F006         	movff	sqrtf@q+1,??_sqrtf+1
  7932   00472E  C014  F007         	movff	sqrtf@q+2,??_sqrtf+2
  7933   004732  C015  F008         	movff	sqrtf@q+3,??_sqrtf+3
  7934   004736  3408               	rlcf	(??_sqrtf+3)^0,w,c
  7935   004738  3208               	rrcf	(??_sqrtf+3)^0,f,c
  7936   00473A  3207               	rrcf	(??_sqrtf+2)^0,f,c
  7937   00473C  3206               	rrcf	(??_sqrtf+1)^0,f,c
  7938   00473E  3205               	rrcf	??_sqrtf^0,f,c
  7939   004740  0E00               	movlw	0
  7940   004742  2405               	addwf	??_sqrtf^0,w,c
  7941   004744  6E22               	movwf	sqrtf@ix^0,c
  7942   004746  0E00               	movlw	0
  7943   004748  2006               	addwfc	(??_sqrtf+1)^0,w,c
  7944   00474A  6E23               	movwf	(sqrtf@ix+1)^0,c
  7945   00474C  0E00               	movlw	0
  7946   00474E  2007               	addwfc	(??_sqrtf+2)^0,w,c
  7947   004750  6E24               	movwf	(sqrtf@ix+2)^0,c
  7948   004752  0E3F               	movlw	63
  7949   004754  2008               	addwfc	(??_sqrtf+3)^0,w,c
  7950   004756  6E25               	movwf	(sqrtf@ix+3)^0,c
  7951   004758  C01A  F005         	movff	sqrtf@m,??_sqrtf
  7952   00475C  C01B  F006         	movff	sqrtf@m+1,??_sqrtf+1
  7953   004760  C01C  F007         	movff	sqrtf@m+2,??_sqrtf+2
  7954   004764  C01D  F008         	movff	sqrtf@m+3,??_sqrtf+3
  7955   004768  0E17               	movlw	23
  7956   00476A                     u9475:
  7957   00476A  90D8               	bcf	status,0,c
  7958   00476C  3605               	rlcf	??_sqrtf^0,f,c
  7959   00476E  3606               	rlcf	(??_sqrtf+1)^0,f,c
  7960   004770  3607               	rlcf	(??_sqrtf+2)^0,f,c
  7961   004772  3608               	rlcf	(??_sqrtf+3)^0,f,c
  7962   004774  2EE8               	decfsz	wreg,f,c
  7963   004776  EFB5  F023         	goto	u9475
  7964   00477A  5005               	movf	??_sqrtf^0,w,c
  7965   00477C  2622               	addwf	sqrtf@ix^0,f,c
  7966   00477E  5006               	movf	(??_sqrtf+1)^0,w,c
  7967   004780  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7968   004782  5007               	movf	(??_sqrtf+2)^0,w,c
  7969   004784  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7970   004786  5008               	movf	(??_sqrtf+3)^0,w,c
  7971   004788  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7972   00478A  EF21  F022         	goto	l7196
  7973   00478E                     l1357:
  7974   00478E  0012               	return		;funcret
  7975   004790                     __end_of_sqrtf:
  7976                           	callstack 0
  7977                           
  7978 ;; *************** function _scalbnf *****************
  7979 ;; Defined at:
  7980 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\scalbnf.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  x               4   39[COMRAM] float 
  7983 ;;  n               2   43[COMRAM] int 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  y               4   53[COMRAM] float 
  7986 ;;  u               4   49[COMRAM] struct .
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  4   39[COMRAM] float 
  7989 ;; Registers used:
  7990 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7996 ;;      Params:         6       0       0       0       0       0       0       0       0
  7997 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7998 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7999 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8000 ;;Total ram usage:       18 bytes
  8001 ;; Hardware stack levels used: 1
  8002 ;; Hardware stack levels required when called: 2
  8003 ;; This function calls:
  8004 ;;		___flmul
  8005 ;; This function is called by:
  8006 ;;		_powf
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text8
  8011   00512E                     __ptext8:
  8012                           	callstack 0
  8013   00512E                     _scalbnf:
  8014                           	callstack 26
  8015   00512E  C028  F036         	movff	scalbnf@x,scalbnf@y
  8016   005132  C029  F037         	movff	scalbnf@x+1,scalbnf@y+1
  8017   005136  C02A  F038         	movff	scalbnf@x+2,scalbnf@y+2
  8018   00513A  C02B  F039         	movff	scalbnf@x+3,scalbnf@y+3
  8019   00513E  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8020   005140  EFAB  F028         	goto	u9481
  8021   005144  502D               	movf	(scalbnf@n+1)^0,w,c
  8022   005146  E109               	bnz	u9480
  8023   005148  0E80               	movlw	128
  8024   00514A  5C2C               	subwf	scalbnf@n^0,w,c
  8025   00514C  A0D8               	btfss	status,0,c
  8026   00514E  EFAB  F028         	goto	u9481
  8027   005152  EFAD  F028         	goto	u9480
  8028   005156                     u9481:
  8029   005156  EF0B  F029         	goto	l7270
  8030   00515A                     u9480:
  8031   00515A  C036  F00F         	movff	scalbnf@y,___flmul@b
  8032   00515E  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8033   005162  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8034   005166  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8035   00516A  0E00               	movlw	0
  8036   00516C  6E13               	movwf	___flmul@a^0,c
  8037   00516E  0E00               	movlw	0
  8038   005170  6E14               	movwf	(___flmul@a+1)^0,c
  8039   005172  0E00               	movlw	0
  8040   005174  6E15               	movwf	(___flmul@a+2)^0,c
  8041   005176  0E7F               	movlw	127
  8042   005178  6E16               	movwf	(___flmul@a+3)^0,c
  8043   00517A  ECC6  F01F         	call	___flmul	;wreg free
  8044   00517E  C00F  F036         	movff	?___flmul,scalbnf@y
  8045   005182  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8046   005186  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8047   00518A  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8048   00518E  0E81               	movlw	129
  8049   005190  262C               	addwf	scalbnf@n^0,f,c
  8050   005192  0EFF               	movlw	255
  8051   005194  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8052   005196  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8053   005198  EFD7  F028         	goto	u9491
  8054   00519C  502D               	movf	(scalbnf@n+1)^0,w,c
  8055   00519E  E109               	bnz	u9490
  8056   0051A0  0E80               	movlw	128
  8057   0051A2  5C2C               	subwf	scalbnf@n^0,w,c
  8058   0051A4  A0D8               	btfss	status,0,c
  8059   0051A6  EFD7  F028         	goto	u9491
  8060   0051AA  EFD9  F028         	goto	u9490
  8061   0051AE                     u9491:
  8062   0051AE  EF75  F029         	goto	l7286
  8063   0051B2                     u9490:
  8064   0051B2  C036  F00F         	movff	scalbnf@y,___flmul@b
  8065   0051B6  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8066   0051BA  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8067   0051BE  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8068   0051C2  0E00               	movlw	0
  8069   0051C4  6E13               	movwf	___flmul@a^0,c
  8070   0051C6  0E00               	movlw	0
  8071   0051C8  6E14               	movwf	(___flmul@a+1)^0,c
  8072   0051CA  0E00               	movlw	0
  8073   0051CC  6E15               	movwf	(___flmul@a+2)^0,c
  8074   0051CE  0E7F               	movlw	127
  8075   0051D0  6E16               	movwf	(___flmul@a+3)^0,c
  8076   0051D2  ECC6  F01F         	call	___flmul	;wreg free
  8077   0051D6  C00F  F036         	movff	?___flmul,scalbnf@y
  8078   0051DA  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8079   0051DE  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8080   0051E2  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8081   0051E6  0E81               	movlw	129
  8082   0051E8  262C               	addwf	scalbnf@n^0,f,c
  8083   0051EA  0EFF               	movlw	255
  8084   0051EC  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8085   0051EE  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8086   0051F0  EF03  F029         	goto	u9501
  8087   0051F4  502D               	movf	(scalbnf@n+1)^0,w,c
  8088   0051F6  E109               	bnz	u9500
  8089   0051F8  0E80               	movlw	128
  8090   0051FA  5C2C               	subwf	scalbnf@n^0,w,c
  8091   0051FC  A0D8               	btfss	status,0,c
  8092   0051FE  EF03  F029         	goto	u9501
  8093   005202  EF05  F029         	goto	u9500
  8094   005206                     u9501:
  8095   005206  EF75  F029         	goto	l7286
  8096   00520A                     u9500:
  8097   00520A  0E00               	movlw	0
  8098   00520C  6E2D               	movwf	(scalbnf@n+1)^0,c
  8099   00520E  0E7F               	movlw	127
  8100   005210  6E2C               	movwf	scalbnf@n^0,c
  8101   005212  EF75  F029         	goto	l7286
  8102   005216                     l7270:
  8103   005216  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8104   005218  EF17  F029         	goto	u9511
  8105   00521C  0E82               	movlw	130
  8106   00521E  5C2C               	subwf	scalbnf@n^0,w,c
  8107   005220  0EFF               	movlw	255
  8108   005222  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8109   005224  B0D8               	btfsc	status,0,c
  8110   005226  EF17  F029         	goto	u9511
  8111   00522A  EF19  F029         	goto	u9510
  8112   00522E                     u9511:
  8113   00522E  EF75  F029         	goto	l7286
  8114   005232                     u9510:
  8115   005232  C036  F00F         	movff	scalbnf@y,___flmul@b
  8116   005236  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8117   00523A  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8118   00523E  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8119   005242  0E00               	movlw	0
  8120   005244  6E13               	movwf	___flmul@a^0,c
  8121   005246  0E00               	movlw	0
  8122   005248  6E14               	movwf	(___flmul@a+1)^0,c
  8123   00524A  0E80               	movlw	128
  8124   00524C  6E15               	movwf	(___flmul@a+2)^0,c
  8125   00524E  0E0C               	movlw	12
  8126   005250  6E16               	movwf	(___flmul@a+3)^0,c
  8127   005252  ECC6  F01F         	call	___flmul	;wreg free
  8128   005256  C00F  F036         	movff	?___flmul,scalbnf@y
  8129   00525A  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8130   00525E  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8131   005262  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8132   005266  0E66               	movlw	102
  8133   005268  262C               	addwf	scalbnf@n^0,f,c
  8134   00526A  0E00               	movlw	0
  8135   00526C  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8136   00526E  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8137   005270  EF43  F029         	goto	u9521
  8138   005274  0E82               	movlw	130
  8139   005276  5C2C               	subwf	scalbnf@n^0,w,c
  8140   005278  0EFF               	movlw	255
  8141   00527A  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8142   00527C  B0D8               	btfsc	status,0,c
  8143   00527E  EF43  F029         	goto	u9521
  8144   005282  EF45  F029         	goto	u9520
  8145   005286                     u9521:
  8146   005286  EF75  F029         	goto	l7286
  8147   00528A                     u9520:
  8148   00528A  C036  F00F         	movff	scalbnf@y,___flmul@b
  8149   00528E  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8150   005292  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8151   005296  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8152   00529A  0E00               	movlw	0
  8153   00529C  6E13               	movwf	___flmul@a^0,c
  8154   00529E  0E00               	movlw	0
  8155   0052A0  6E14               	movwf	(___flmul@a+1)^0,c
  8156   0052A2  0E80               	movlw	128
  8157   0052A4  6E15               	movwf	(___flmul@a+2)^0,c
  8158   0052A6  0E0C               	movlw	12
  8159   0052A8  6E16               	movwf	(___flmul@a+3)^0,c
  8160   0052AA  ECC6  F01F         	call	___flmul	;wreg free
  8161   0052AE  C00F  F036         	movff	?___flmul,scalbnf@y
  8162   0052B2  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8163   0052B6  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8164   0052BA  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8165   0052BE  0E66               	movlw	102
  8166   0052C0  262C               	addwf	scalbnf@n^0,f,c
  8167   0052C2  0E00               	movlw	0
  8168   0052C4  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8169   0052C6  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8170   0052C8  EF6F  F029         	goto	u9531
  8171   0052CC  0E82               	movlw	130
  8172   0052CE  5C2C               	subwf	scalbnf@n^0,w,c
  8173   0052D0  0EFF               	movlw	255
  8174   0052D2  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8175   0052D4  B0D8               	btfsc	status,0,c
  8176   0052D6  EF6F  F029         	goto	u9531
  8177   0052DA  EF71  F029         	goto	u9530
  8178   0052DE                     u9531:
  8179   0052DE  EF75  F029         	goto	l7286
  8180   0052E2                     u9530:
  8181   0052E2  0EFF               	movlw	255
  8182   0052E4  6E2D               	movwf	(scalbnf@n+1)^0,c
  8183   0052E6  0E82               	movlw	130
  8184   0052E8  6E2C               	movwf	scalbnf@n^0,c
  8185   0052EA                     l7286:
  8186   0052EA  0E7F               	movlw	127
  8187   0052EC  242C               	addwf	scalbnf@n^0,w,c
  8188   0052EE  6E2E               	movwf	??_scalbnf^0,c
  8189   0052F0  0E00               	movlw	0
  8190   0052F2  202D               	addwfc	(scalbnf@n+1)^0,w,c
  8191   0052F4  6E2F               	movwf	(??_scalbnf+1)^0,c
  8192   0052F6  6A30               	clrf	(??_scalbnf+2)^0,c
  8193   0052F8  6A31               	clrf	(??_scalbnf+3)^0,c
  8194   0052FA  0E17               	movlw	23
  8195   0052FC                     u9545:
  8196   0052FC  90D8               	bcf	status,0,c
  8197   0052FE  362E               	rlcf	??_scalbnf^0,f,c
  8198   005300  362F               	rlcf	(??_scalbnf+1)^0,f,c
  8199   005302  3630               	rlcf	(??_scalbnf+2)^0,f,c
  8200   005304  3631               	rlcf	(??_scalbnf+3)^0,f,c
  8201   005306  2EE8               	decfsz	wreg,f,c
  8202   005308  EF7E  F029         	goto	u9545
  8203   00530C  C02E  F032         	movff	??_scalbnf,scalbnf@u
  8204   005310  C02F  F033         	movff	??_scalbnf+1,scalbnf@u+1
  8205   005314  C030  F034         	movff	??_scalbnf+2,scalbnf@u+2
  8206   005318  C031  F035         	movff	??_scalbnf+3,scalbnf@u+3
  8207   00531C  C032  F00F         	movff	scalbnf@u,___flmul@b
  8208   005320  C033  F010         	movff	scalbnf@u+1,___flmul@b+1
  8209   005324  C034  F011         	movff	scalbnf@u+2,___flmul@b+2
  8210   005328  C035  F012         	movff	scalbnf@u+3,___flmul@b+3
  8211   00532C  C036  F013         	movff	scalbnf@y,___flmul@a
  8212   005330  C037  F014         	movff	scalbnf@y+1,___flmul@a+1
  8213   005334  C038  F015         	movff	scalbnf@y+2,___flmul@a+2
  8214   005338  C039  F016         	movff	scalbnf@y+3,___flmul@a+3
  8215   00533C  ECC6  F01F         	call	___flmul	;wreg free
  8216   005340  C00F  F028         	movff	?___flmul,scalbnf@x
  8217   005344  C010  F029         	movff	?___flmul+1,scalbnf@x+1
  8218   005348  C011  F02A         	movff	?___flmul+2,scalbnf@x+2
  8219   00534C  C012  F02B         	movff	?___flmul+3,scalbnf@x+3
  8220   005350  C028  F028         	movff	scalbnf@x,?_scalbnf
  8221   005354  C029  F029         	movff	scalbnf@x+1,?_scalbnf+1
  8222   005358  C02A  F02A         	movff	scalbnf@x+2,?_scalbnf+2
  8223   00535C  C02B  F02B         	movff	scalbnf@x+3,?_scalbnf+3
  8224   005360  0012               	return		;funcret
  8225   005362                     __end_of_scalbnf:
  8226                           	callstack 0
  8227                           
  8228 ;; *************** function _Apply_Filter *****************
  8229 ;; Defined at:
  8230 ;;		line 353 in file "newmain.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  new_value       4   80[COMRAM] float 
  8233 ;;  samples         2   84[COMRAM] PTR float 
  8234 ;;		 -> co_samples(20), temp_samples(20), 
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;  i               2    4[BANK0 ] int 
  8237 ;;  sum             4    0[BANK0 ] float 
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  4   80[COMRAM] float 
  8240 ;; Registers used:
  8241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8247 ;;      Params:         6       0       0       0       0       0       0       0       0
  8248 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8249 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8250 ;;      Totals:         8       6       0       0       0       0       0       0       0
  8251 ;;Total ram usage:       14 bytes
  8252 ;; Hardware stack levels used: 1
  8253 ;; Hardware stack levels required when called: 2
  8254 ;; This function calls:
  8255 ;;		___fladd
  8256 ;;		___fldiv
  8257 ;; This function is called by:
  8258 ;;		_Read_Sensors
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text9
  8263   006488                     __ptext9:
  8264                           	callstack 0
  8265   006488                     _Apply_Filter:
  8266                           	callstack 27
  8267   006488                     
  8268                           ;newmain.c: 354:     samples[sample_index] = new_value;
  8269   006488  0103               	movlb	3	; () banked
  8270   00648A  5154               	movf	_sample_index& (0+255),w,b
  8271   00648C  0D04               	mullw	4
  8272   00648E  CFF3 F057          	movff	prodl,??_Apply_Filter
  8273   006492  CFF4 F058          	movff	prodh,??_Apply_Filter+1
  8274   006496  5057               	movf	??_Apply_Filter^0,w,c
  8275   006498  2455               	addwf	Apply_Filter@samples^0,w,c
  8276   00649A  6ED9               	movwf	fsr2l,c
  8277   00649C  5058               	movf	(??_Apply_Filter+1)^0,w,c
  8278   00649E  2056               	addwfc	(Apply_Filter@samples+1)^0,w,c
  8279   0064A0  6EDA               	movwf	fsr2h,c
  8280   0064A2  C051  FFDE         	movff	Apply_Filter@new_value,postinc2
  8281   0064A6  C052  FFDE         	movff	Apply_Filter@new_value+1,postinc2
  8282   0064AA  C053  FFDE         	movff	Apply_Filter@new_value+2,postinc2
  8283   0064AE  C054  FFDE         	movff	Apply_Filter@new_value+3,postinc2
  8284   0064B2                     
  8285                           ; BSR set to: 3
  8286                           ;newmain.c: 356:     float sum = 0;
  8287   0064B2  0E00               	movlw	0
  8288   0064B4  0100               	movlb	0	; () banked
  8289   0064B6  6F60               	movwf	Apply_Filter@sum& (0+255),b
  8290   0064B8  0E00               	movlw	0
  8291   0064BA  6F61               	movwf	(Apply_Filter@sum+1)& (0+255),b
  8292   0064BC  0E00               	movlw	0
  8293   0064BE  6F62               	movwf	(Apply_Filter@sum+2)& (0+255),b
  8294   0064C0  0E00               	movlw	0
  8295   0064C2  6F63               	movwf	(Apply_Filter@sum+3)& (0+255),b
  8296   0064C4                     
  8297                           ; BSR set to: 0
  8298                           ;newmain.c: 357:     for(int i = 0; i < 5; i++) {
  8299   0064C4  0E00               	movlw	0
  8300   0064C6  6F65               	movwf	(Apply_Filter@i+1)& (0+255),b
  8301   0064C8  0E00               	movlw	0
  8302   0064CA  6F64               	movwf	Apply_Filter@i& (0+255),b
  8303   0064CC                     l7324:
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;newmain.c: 358:         sum += samples[i];
  8307   0064CC  C060  F041         	movff	Apply_Filter@sum,___fladd@b
  8308   0064D0  C061  F042         	movff	Apply_Filter@sum+1,___fladd@b+1
  8309   0064D4  C062  F043         	movff	Apply_Filter@sum+2,___fladd@b+2
  8310   0064D8  C063  F044         	movff	Apply_Filter@sum+3,___fladd@b+3
  8311   0064DC  90D8               	bcf	status,0,c
  8312   0064DE  3564               	rlcf	Apply_Filter@i& (0+255),w,b
  8313   0064E0  6ED9               	movwf	fsr2l,c
  8314   0064E2  3565               	rlcf	(Apply_Filter@i+1)& (0+255),w,b
  8315   0064E4  6EDA               	movwf	fsr2h,c
  8316   0064E6  90D8               	bcf	status,0,c
  8317   0064E8  36D9               	rlcf	fsr2l,f,c
  8318   0064EA  36DA               	rlcf	fsr2h,f,c
  8319   0064EC  5055               	movf	Apply_Filter@samples^0,w,c
  8320   0064EE  26D9               	addwf	fsr2l,f,c
  8321   0064F0  5056               	movf	(Apply_Filter@samples+1)^0,w,c
  8322   0064F2  22DA               	addwfc	fsr2h,f,c
  8323   0064F4  CFDE F045          	movff	postinc2,___fladd@a
  8324   0064F8  CFDE F046          	movff	postinc2,___fladd@a+1
  8325   0064FC  CFDE F047          	movff	postinc2,___fladd@a+2
  8326   006500  CFDE F048          	movff	postinc2,___fladd@a+3
  8327   006504  EC6B  F01D         	call	___fladd	;wreg free
  8328   006508  C041  F060         	movff	?___fladd,Apply_Filter@sum
  8329   00650C  C042  F061         	movff	?___fladd+1,Apply_Filter@sum+1
  8330   006510  C043  F062         	movff	?___fladd+2,Apply_Filter@sum+2
  8331   006514  C044  F063         	movff	?___fladd+3,Apply_Filter@sum+3
  8332   006518                     
  8333                           ;newmain.c: 359:     }
  8334   006518  0100               	movlb	0	; () banked
  8335   00651A  4B64               	infsnz	Apply_Filter@i& (0+255),f,b
  8336   00651C  2B65               	incf	(Apply_Filter@i+1)& (0+255),f,b
  8337   00651E                     
  8338                           ; BSR set to: 0
  8339   00651E  BF65               	btfsc	(Apply_Filter@i+1)& (0+255),7,b
  8340   006520  EF9B  F032         	goto	u9591
  8341   006524  5165               	movf	(Apply_Filter@i+1)& (0+255),w,b
  8342   006526  E109               	bnz	u9590
  8343   006528  0E05               	movlw	5
  8344   00652A  5D64               	subwf	Apply_Filter@i& (0+255),w,b
  8345   00652C  A0D8               	btfss	status,0,c
  8346   00652E  EF9B  F032         	goto	u9591
  8347   006532  EF9D  F032         	goto	u9590
  8348   006536                     u9591:
  8349   006536  EF66  F032         	goto	l7324
  8350   00653A                     u9590:
  8351   00653A                     
  8352                           ; BSR set to: 0
  8353                           ;newmain.c: 360:     return sum / 5;
  8354   00653A  C060  F028         	movff	Apply_Filter@sum,___fldiv@b
  8355   00653E  C061  F029         	movff	Apply_Filter@sum+1,___fldiv@b+1
  8356   006542  C062  F02A         	movff	Apply_Filter@sum+2,___fldiv@b+2
  8357   006546  C063  F02B         	movff	Apply_Filter@sum+3,___fldiv@b+3
  8358   00654A  0E00               	movlw	0
  8359   00654C  6E2C               	movwf	___fldiv@a^0,c
  8360   00654E  0E00               	movlw	0
  8361   006550  6E2D               	movwf	(___fldiv@a+1)^0,c
  8362   006552  0EA0               	movlw	160
  8363   006554  6E2E               	movwf	(___fldiv@a+2)^0,c
  8364   006556  0E40               	movlw	64
  8365   006558  6E2F               	movwf	(___fldiv@a+3)^0,c
  8366   00655A  ECC8  F023         	call	___fldiv	;wreg free
  8367   00655E  C028  F051         	movff	?___fldiv,?_Apply_Filter
  8368   006562  C029  F052         	movff	?___fldiv+1,?_Apply_Filter+1
  8369   006566  C02A  F053         	movff	?___fldiv+2,?_Apply_Filter+2
  8370   00656A  C02B  F054         	movff	?___fldiv+3,?_Apply_Filter+3
  8371   00656E  0012               	return		;funcret
  8372   006570                     __end_of_Apply_Filter:
  8373                           	callstack 0
  8374                           
  8375 ;; *************** function _ADC_Read *****************
  8376 ;; Defined at:
  8377 ;;		line 409 in file "newmain.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  channel         1    wreg     unsigned char 
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;  channel         1    4[COMRAM] unsigned char 
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  2    0[COMRAM] unsigned int 
  8384 ;; Registers used:
  8385 ;;		wreg, status,2, status,0
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8391 ;;      Params:         2       0       0       0       0       0       0       0       0
  8392 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8393 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8394 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8395 ;;Total ram usage:        5 bytes
  8396 ;; Hardware stack levels used: 1
  8397 ;; Hardware stack levels required when called: 1
  8398 ;; This function calls:
  8399 ;;		Nothing
  8400 ;; This function is called by:
  8401 ;;		_main
  8402 ;;		_Read_Sensors
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           	psect	text10
  8407   006C8C                     __ptext10:
  8408                           	callstack 0
  8409   006C8C                     _ADC_Read:
  8410                           	callstack 28
  8411                           
  8412                           ;incstack = 0
  8413                           ;ADC_Read@channel stored from wreg
  8414   006C8C  6E05               	movwf	ADC_Read@channel^0,c
  8415   006C8E                     
  8416                           ;newmain.c: 410:     ADCON0bits.CHS = channel;
  8417   006C8E  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  8418   006C92  4603               	rlncf	??_ADC_Read^0,f,c
  8419   006C94  4603               	rlncf	??_ADC_Read^0,f,c
  8420   006C96  50C2               	movf	194,w,c	;volatile
  8421   006C98  1803               	xorwf	??_ADC_Read^0,w,c
  8422   006C9A  0BC3               	andlw	-61
  8423   006C9C  1803               	xorwf	??_ADC_Read^0,w,c
  8424   006C9E  6EC2               	movwf	194,c	;volatile
  8425   006CA0                     
  8426                           ;newmain.c: 411:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  8427   006CA0  0E14               	movlw	20
  8428   006CA2                     u10757:
  8429   006CA2  2EE8               	decfsz	wreg,f,c
  8430   006CA4  D7FE               	bra	u10757
  8431   006CA6                     
  8432                           ;newmain.c: 412:     ADCON0bits.GO = 1;
  8433   006CA6  82C2               	bsf	194,1,c	;volatile
  8434   006CA8                     l261:
  8435   006CA8  B2C2               	btfsc	194,1,c	;volatile
  8436   006CAA  EF59  F036         	goto	u9551
  8437   006CAE  EF5B  F036         	goto	u9550
  8438   006CB2                     u9551:
  8439   006CB2  EF54  F036         	goto	l261
  8440   006CB6                     u9550:
  8441   006CB6                     
  8442                           ;newmain.c: 414:     return (ADRESH << 8) | ADRESL;
  8443   006CB6  50C3               	movf	195,w,c	;volatile
  8444   006CB8  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  8445   006CBC  6A04               	clrf	(??_ADC_Read+1)^0,c
  8446   006CBE  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  8447   006CC2  6A03               	clrf	??_ADC_Read^0,c
  8448   006CC4  1003               	iorwf	??_ADC_Read^0,w,c
  8449   006CC6  6E01               	movwf	?_ADC_Read^0,c
  8450   006CC8  5004               	movf	(??_ADC_Read+1)^0,w,c
  8451   006CCA  6E02               	movwf	(?_ADC_Read+1)^0,c
  8452   006CCC  0012               	return		;funcret
  8453   006CCE                     __end_of_ADC_Read:
  8454                           	callstack 0
  8455                           
  8456 ;; *************** function _Interrupt_Init *****************
  8457 ;; Defined at:
  8458 ;;		line 417 in file "newmain.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;		None
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;		None
  8463 ;; Return value:  Size  Location     Type
  8464 ;;                  1    wreg      void 
  8465 ;; Registers used:
  8466 ;;		None
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8472 ;;      Params:         0       0       0       0       0       0       0       0       0
  8473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8475 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8476 ;;Total ram usage:        0 bytes
  8477 ;; Hardware stack levels used: 1
  8478 ;; Hardware stack levels required when called: 1
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		_main
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           	psect	text11
  8487   006E0C                     __ptext11:
  8488                           	callstack 0
  8489   006E0C                     _Interrupt_Init:
  8490                           	callstack 29
  8491   006E0C                     
  8492                           ;newmain.c: 418:     TRISBbits.TRISB1 = 1;
  8493   006E0C  8293               	bsf	147,1,c	;volatile
  8494                           
  8495                           ;newmain.c: 419:     INTCON2bits.INTEDG1 = 0;
  8496   006E0E  9AF1               	bcf	241,5,c	;volatile
  8497                           
  8498                           ;newmain.c: 420:     INTCON3bits.INT1IE = 1;
  8499   006E10  86F0               	bsf	240,3,c	;volatile
  8500                           
  8501                           ;newmain.c: 421:     INTCON3bits.INT1IP = 1;
  8502   006E12  8CF0               	bsf	240,6,c	;volatile
  8503                           
  8504                           ;newmain.c: 422:     RCONbits.IPEN = 1;
  8505   006E14  8ED0               	bsf	208,7,c	;volatile
  8506                           
  8507                           ;newmain.c: 423:     INTCONbits.GIEH = 1;
  8508   006E16  8EF2               	bsf	242,7,c	;volatile
  8509                           
  8510                           ;newmain.c: 424:     INTCONbits.GIEL = 1;
  8511   006E18  8CF2               	bsf	242,6,c	;volatile
  8512   006E1A  0012               	return		;funcret
  8513   006E1C                     __end_of_Interrupt_Init:
  8514                           	callstack 0
  8515                           
  8516 ;; *************** function _Handle_Test_Events *****************
  8517 ;; Defined at:
  8518 ;;		line 244 in file "newmain.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;		None
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  test_data      50  202[BANK1 ] unsigned char [50]
  8523 ;;  water_used      4  252[BANK1 ] float 
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  1    wreg      void 
  8526 ;; Registers used:
  8527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/0
  8530 ;;		On exit  : 0/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8533 ;;      Params:         0       0       0       0       0       0       0       0       0
  8534 ;;      Locals:         0       0      54       0       0       0       0       0       0
  8535 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8536 ;;      Totals:         0       2      54       0       0       0       0       0       0
  8537 ;;Total ram usage:       56 bytes
  8538 ;; Hardware stack levels used: 1
  8539 ;; Hardware stack levels required when called: 10
  8540 ;; This function calls:
  8541 ;;		_Send_History_Event
  8542 ;;		___flsub
  8543 ;;		___xxtofl
  8544 ;;		_sprintf
  8545 ;; This function is called by:
  8546 ;;		_main
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text12
  8551   005B70                     __ptext12:
  8552                           	callstack 0
  8553   005B70                     _Handle_Test_Events:
  8554                           	callstack 20
  8555   005B70                     
  8556                           ;newmain.c: 245:     static bool prev_test = 0;;newmain.c: 248:     if(trigger_test && !
      +                          prev_test) {
  8557   005B70  505E               	movf	_trigger_test^0,w,c
  8558   005B72  B4D8               	btfsc	status,2,c
  8559   005B74  EFBE  F02D         	goto	u10491
  8560   005B78  EFC0  F02D         	goto	u10490
  8561   005B7C                     u10491:
  8562   005B7C  EFD4  F02D         	goto	l7954
  8563   005B80                     u10490:
  8564   005B80  0103               	movlb	3	; () banked
  8565   005B82  5152               	movf	Handle_Test_Events@prev_test& (0+255),w,b
  8566   005B84  A4D8               	btfss	status,2,c
  8567   005B86  EFC7  F02D         	goto	u10501
  8568   005B8A  EFC9  F02D         	goto	u10500
  8569   005B8E                     u10501:
  8570   005B8E  EFD4  F02D         	goto	l7954
  8571   005B92                     u10500:
  8572   005B92                     
  8573                           ; BSR set to: 3
  8574                           ;newmain.c: 249:         Send_History_Event("test_start", "");
  8575   005B92  0EB9               	movlw	low STR_8
  8576   005B94  0100               	movlb	0	; () banked
  8577   005B96  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  8578   005B98  0E7F               	movlw	high STR_8
  8579   005B9A  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  8580   005B9C  0E61               	movlw	low (STR_16+29)
  8581   005B9E  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  8582   005BA0  0E7F               	movlw	high (STR_16+29)
  8583   005BA2  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  8584   005BA4  EC69  F034         	call	_Send_History_Event	;wreg free
  8585   005BA8                     l7954:
  8586                           
  8587                           ;newmain.c: 253:     if(!trigger_test && prev_test) {
  8588   005BA8  505E               	movf	_trigger_test^0,w,c
  8589   005BAA  A4D8               	btfss	status,2,c
  8590   005BAC  EFDA  F02D         	goto	u10511
  8591   005BB0  EFDC  F02D         	goto	u10510
  8592   005BB4                     u10511:
  8593   005BB4  EF42  F02E         	goto	l7970
  8594   005BB8                     u10510:
  8595   005BB8  0103               	movlb	3	; () banked
  8596   005BBA  5152               	movf	Handle_Test_Events@prev_test& (0+255),w,b
  8597   005BBC  B4D8               	btfsc	status,2,c
  8598   005BBE  EFE3  F02D         	goto	u10521
  8599   005BC2  EFE5  F02D         	goto	u10520
  8600   005BC6                     u10521:
  8601   005BC6  EF42  F02E         	goto	l7970
  8602   005BCA                     u10520:
  8603   005BCA                     
  8604                           ; BSR set to: 3
  8605                           ;newmain.c: 254:         float water_used = total_flow - test_start_flow;
  8606   005BCA  C330  F051         	movff	_total_flow,___flsub@b
  8607   005BCE  C331  F052         	movff	_total_flow+1,___flsub@b+1
  8608   005BD2  C332  F053         	movff	_total_flow+2,___flsub@b+2
  8609   005BD6  C333  F054         	movff	_total_flow+3,___flsub@b+3
  8610   005BDA  C314  F001         	movff	_test_start_flow,___xxtofl@val
  8611   005BDE  C315  F002         	movff	_test_start_flow+1,___xxtofl@val+1
  8612   005BE2  C316  F003         	movff	_test_start_flow+2,___xxtofl@val+2
  8613   005BE6  C317  F004         	movff	_test_start_flow+3,___xxtofl@val+3
  8614   005BEA  0E00               	movlw	0
  8615   005BEC  ECBA  F02A         	call	___xxtofl
  8616   005BF0  C001  F055         	movff	?___xxtofl,___flsub@a
  8617   005BF4  C002  F056         	movff	?___xxtofl+1,___flsub@a+1
  8618   005BF8  C003  F057         	movff	?___xxtofl+2,___flsub@a+2
  8619   005BFC  C004  F058         	movff	?___xxtofl+3,___flsub@a+3
  8620   005C00  EC01  F036         	call	___flsub	;wreg free
  8621   005C04  C051  F1FC         	movff	?___flsub,Handle_Test_Events@water_used
  8622   005C08  C052  F1FD         	movff	?___flsub+1,Handle_Test_Events@water_used+1
  8623   005C0C  C053  F1FE         	movff	?___flsub+2,Handle_Test_Events@water_used+2
  8624   005C10  C054  F1FF         	movff	?___flsub+3,Handle_Test_Events@water_used+3
  8625   005C14                     
  8626                           ;newmain.c: 256:         char test_data[50];;newmain.c: 257:         sprintf(test_data, 
      +                          ",\"water\":%.2f", water_used);
  8627   005C14  0ECA               	movlw	low Handle_Test_Events@test_data
  8628   005C16  0100               	movlb	0	; () banked
  8629   005C18  6FB0               	movwf	sprintf@s& (0+255),b
  8630   005C1A  0E01               	movlw	high Handle_Test_Events@test_data
  8631   005C1C  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  8632   005C1E  0E71               	movlw	low (STR_6+15)
  8633   005C20  6FB2               	movwf	sprintf@fmt& (0+255),b
  8634   005C22  0E7F               	movlw	high (STR_6+15)
  8635   005C24  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  8636   005C26  C1FC  F0B4         	movff	Handle_Test_Events@water_used,?_sprintf+4
  8637   005C2A  C1FD  F0B5         	movff	Handle_Test_Events@water_used+1,?_sprintf+5
  8638   005C2E  C1FE  F0B6         	movff	Handle_Test_Events@water_used+2,?_sprintf+6
  8639   005C32  C1FF  F0B7         	movff	Handle_Test_Events@water_used+3,?_sprintf+7
  8640   005C36  EC24  F036         	call	_sprintf	;wreg free
  8641   005C3A                     
  8642                           ;newmain.c: 258:         Send_History_Event("test_end", test_data);
  8643   005C3A  0ED7               	movlw	low STR_11
  8644   005C3C  0100               	movlb	0	; () banked
  8645   005C3E  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  8646   005C40  0E7F               	movlw	high STR_11
  8647   005C42  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  8648   005C44  0ECA               	movlw	low Handle_Test_Events@test_data
  8649   005C46  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  8650   005C48  0E01               	movlw	high Handle_Test_Events@test_data
  8651   005C4A  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  8652   005C4C  EC69  F034         	call	_Send_History_Event	;wreg free
  8653   005C50                     
  8654                           ;newmain.c: 261:         _delay((unsigned long)((3000)*(8000000/4000.0)));
  8655   005C50  0E1F               	movlw	31
  8656   005C52  0100               	movlb	0	; () banked
  8657   005C54  6FE5               	movwf	(??_Handle_Test_Events+1)& (0+255),b
  8658   005C56  0E71               	movlw	113
  8659   005C58  6FE4               	movwf	??_Handle_Test_Events& (0+255),b
  8660   005C5A  0E1E               	movlw	30
  8661   005C5C                     u10767:
  8662   005C5C  2EE8               	decfsz	wreg,f,c
  8663   005C5E  D7FE               	bra	u10767
  8664   005C60  2FE4               	decfsz	??_Handle_Test_Events& (0+255),f,b
  8665   005C62  D7FC               	bra	u10767
  8666   005C64  2FE5               	decfsz	(??_Handle_Test_Events+1)& (0+255),f,b
  8667   005C66  D7FA               	bra	u10767
  8668   005C68  0000               	nop	
  8669   005C6A                     
  8670                           ;newmain.c: 262:         total_flow = 0.0;
  8671   005C6A  0E00               	movlw	0
  8672   005C6C  0103               	movlb	3	; () banked
  8673   005C6E  6F30               	movwf	_total_flow& (0+255),b
  8674   005C70  0E00               	movlw	0
  8675   005C72  6F31               	movwf	(_total_flow+1)& (0+255),b
  8676   005C74  0E00               	movlw	0
  8677   005C76  6F32               	movwf	(_total_flow+2)& (0+255),b
  8678   005C78  0E00               	movlw	0
  8679   005C7A  6F33               	movwf	(_total_flow+3)& (0+255),b
  8680   005C7C                     
  8681                           ; BSR set to: 3
  8682                           ;newmain.c: 263:         pulse_count = 0;
  8683   005C7C  0E00               	movlw	0
  8684   005C7E  6F4F               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  8685   005C80  0E00               	movlw	0
  8686   005C82  6F4E               	movwf	_pulse_count& (0+255),b	;volatile
  8687   005C84                     l7970:
  8688                           
  8689                           ;newmain.c: 266:     prev_test = trigger_test;
  8690   005C84  C05E  F352         	movff	_trigger_test,Handle_Test_Events@prev_test
  8691   005C88  0012               	return		;funcret
  8692   005C8A                     __end_of_Handle_Test_Events:
  8693                           	callstack 0
  8694                           
  8695 ;; *************** function ___xxtofl *****************
  8696 ;; Defined at:
  8697 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  sign            1    wreg     unsigned char 
  8700 ;;  val             4    0[COMRAM] long 
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;  sign            1    8[COMRAM] unsigned char 
  8703 ;;  arg             4   10[COMRAM] unsigned long 
  8704 ;;  exp             1    9[COMRAM] unsigned char 
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  4    0[COMRAM] unsigned char 
  8707 ;; Registers used:
  8708 ;;		wreg, status,2, status,0
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8714 ;;      Params:         4       0       0       0       0       0       0       0       0
  8715 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8716 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8717 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8718 ;;Total ram usage:       14 bytes
  8719 ;; Hardware stack levels used: 1
  8720 ;; Hardware stack levels required when called: 1
  8721 ;; This function calls:
  8722 ;;		Nothing
  8723 ;; This function is called by:
  8724 ;;		_main
  8725 ;;		_Handle_Test_Events
  8726 ;;		_Read_Sensors
  8727 ;;		_powf
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           	psect	text13
  8732   005574                     __ptext13:
  8733                           	callstack 0
  8734   005574                     ___xxtofl:
  8735                           	callstack 29
  8736                           
  8737                           ;incstack = 0
  8738                           ;___xxtofl@sign stored from wreg
  8739   005574  6E09               	movwf	___xxtofl@sign^0,c
  8740   005576  5009               	movf	___xxtofl@sign^0,w,c
  8741   005578  B4D8               	btfsc	status,2,c
  8742   00557A  EFC1  F02A         	goto	u9241
  8743   00557E  EFC3  F02A         	goto	u9240
  8744   005582                     u9241:
  8745   005582  EFE5  F02A         	goto	l928
  8746   005586                     u9240:
  8747   005586  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8748   005588  EFCA  F02A         	goto	u9250
  8749   00558C  EFC8  F02A         	goto	u9251
  8750   005590                     u9251:
  8751   005590  EFE5  F02A         	goto	l928
  8752   005594                     u9250:
  8753   005594  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8754   005598  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8755   00559C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8756   0055A0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8757   0055A4  1E05               	comf	??___xxtofl^0,f,c
  8758   0055A6  1E06               	comf	(??___xxtofl+1)^0,f,c
  8759   0055A8  1E07               	comf	(??___xxtofl+2)^0,f,c
  8760   0055AA  1E08               	comf	(??___xxtofl+3)^0,f,c
  8761   0055AC  2A05               	incf	??___xxtofl^0,f,c
  8762   0055AE  0E00               	movlw	0
  8763   0055B0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8764   0055B2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8765   0055B4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8766   0055B6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8767   0055BA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8768   0055BE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8769   0055C2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8770   0055C6  EFED  F02A         	goto	l7146
  8771   0055CA                     l928:
  8772   0055CA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8773   0055CE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8774   0055D2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8775   0055D6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8776   0055DA                     l7146:
  8777   0055DA  5001               	movf	___xxtofl@val^0,w,c
  8778   0055DC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8779   0055DE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8780   0055E0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8781   0055E2  A4D8               	btfss	status,2,c
  8782   0055E4  EFF6  F02A         	goto	u9261
  8783   0055E8  EFF8  F02A         	goto	u9260
  8784   0055EC                     u9261:
  8785   0055EC  EF02  F02B         	goto	l7152
  8786   0055F0                     u9260:
  8787   0055F0  0E00               	movlw	0
  8788   0055F2  6E01               	movwf	?___xxtofl^0,c
  8789   0055F4  0E00               	movlw	0
  8790   0055F6  6E02               	movwf	(?___xxtofl+1)^0,c
  8791   0055F8  0E00               	movlw	0
  8792   0055FA  6E03               	movwf	(?___xxtofl+2)^0,c
  8793   0055FC  0E00               	movlw	0
  8794   0055FE  6E04               	movwf	(?___xxtofl+3)^0,c
  8795   005600  EF93  F02B         	goto	l931
  8796   005604                     l7152:
  8797   005604  0E96               	movlw	150
  8798   005606  6E0A               	movwf	___xxtofl@exp^0,c
  8799   005608  EF0C  F02B         	goto	l7156
  8800   00560C                     l7154:
  8801   00560C  2A0A               	incf	___xxtofl@exp^0,f,c
  8802   00560E  90D8               	bcf	status,0,c
  8803   005610  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8804   005612  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8805   005614  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8806   005616  320B               	rrcf	___xxtofl@arg^0,f,c
  8807   005618                     l7156:
  8808   005618  0E00               	movlw	0
  8809   00561A  140B               	andwf	___xxtofl@arg^0,w,c
  8810   00561C  6E05               	movwf	??___xxtofl^0,c
  8811   00561E  0E00               	movlw	0
  8812   005620  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8813   005622  6E06               	movwf	(??___xxtofl+1)^0,c
  8814   005624  0E00               	movlw	0
  8815   005626  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8816   005628  6E07               	movwf	(??___xxtofl+2)^0,c
  8817   00562A  0EFE               	movlw	254
  8818   00562C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8819   00562E  6E08               	movwf	(??___xxtofl+3)^0,c
  8820   005630  5005               	movf	??___xxtofl^0,w,c
  8821   005632  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8822   005634  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8823   005636  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8824   005638  A4D8               	btfss	status,2,c
  8825   00563A  EF21  F02B         	goto	u9271
  8826   00563E  EF23  F02B         	goto	u9270
  8827   005642                     u9271:
  8828   005642  EF06  F02B         	goto	l7154
  8829   005646                     u9270:
  8830   005646  EF31  F02B         	goto	l935
  8831   00564A                     l7158:
  8832   00564A  2A0A               	incf	___xxtofl@exp^0,f,c
  8833   00564C  0E01               	movlw	1
  8834   00564E  260B               	addwf	___xxtofl@arg^0,f,c
  8835   005650  0E00               	movlw	0
  8836   005652  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8837   005654  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8838   005656  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8839   005658  90D8               	bcf	status,0,c
  8840   00565A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8841   00565C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8842   00565E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8843   005660  320B               	rrcf	___xxtofl@arg^0,f,c
  8844   005662                     l935:
  8845   005662  0E00               	movlw	0
  8846   005664  140B               	andwf	___xxtofl@arg^0,w,c
  8847   005666  6E05               	movwf	??___xxtofl^0,c
  8848   005668  0E00               	movlw	0
  8849   00566A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8850   00566C  6E06               	movwf	(??___xxtofl+1)^0,c
  8851   00566E  0E00               	movlw	0
  8852   005670  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8853   005672  6E07               	movwf	(??___xxtofl+2)^0,c
  8854   005674  0EFF               	movlw	255
  8855   005676  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8856   005678  6E08               	movwf	(??___xxtofl+3)^0,c
  8857   00567A  5005               	movf	??___xxtofl^0,w,c
  8858   00567C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8859   00567E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8860   005680  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8861   005682  A4D8               	btfss	status,2,c
  8862   005684  EF46  F02B         	goto	u9281
  8863   005688  EF48  F02B         	goto	u9280
  8864   00568C                     u9281:
  8865   00568C  EF25  F02B         	goto	l7158
  8866   005690                     u9280:
  8867   005690  EF50  F02B         	goto	l7166
  8868   005694                     l7164:
  8869   005694  060A               	decf	___xxtofl@exp^0,f,c
  8870   005696  90D8               	bcf	status,0,c
  8871   005698  360B               	rlcf	___xxtofl@arg^0,f,c
  8872   00569A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8873   00569C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8874   00569E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8875   0056A0                     l7166:
  8876   0056A0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8877   0056A2  EF55  F02B         	goto	u9291
  8878   0056A6  EF57  F02B         	goto	u9290
  8879   0056AA                     u9291:
  8880   0056AA  EF5F  F02B         	goto	l942
  8881   0056AE                     u9290:
  8882   0056AE  0E02               	movlw	2
  8883   0056B0  600A               	cpfslt	___xxtofl@exp^0,c
  8884   0056B2  EF5D  F02B         	goto	u9301
  8885   0056B6  EF5F  F02B         	goto	u9300
  8886   0056BA                     u9301:
  8887   0056BA  EF4A  F02B         	goto	l7164
  8888   0056BE                     u9300:
  8889   0056BE                     l942:
  8890   0056BE  B00A               	btfsc	___xxtofl@exp^0,0,c
  8891   0056C0  EF64  F02B         	goto	u9311
  8892   0056C4  EF66  F02B         	goto	u9310
  8893   0056C8                     u9311:
  8894   0056C8  EF67  F02B         	goto	l7172
  8895   0056CC                     u9310:
  8896   0056CC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8897   0056CE                     l7172:
  8898   0056CE  90D8               	bcf	status,0,c
  8899   0056D0  320A               	rrcf	___xxtofl@exp^0,f,c
  8900   0056D2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8901   0056D6  6A06               	clrf	(??___xxtofl+1)^0,c
  8902   0056D8  6A07               	clrf	(??___xxtofl+2)^0,c
  8903   0056DA  6A08               	clrf	(??___xxtofl+3)^0,c
  8904   0056DC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8905   0056E0  6A07               	clrf	(??___xxtofl+2)^0,c
  8906   0056E2  6A06               	clrf	(??___xxtofl+1)^0,c
  8907   0056E4  6A05               	clrf	??___xxtofl^0,c
  8908   0056E6  5005               	movf	??___xxtofl^0,w,c
  8909   0056E8  120B               	iorwf	___xxtofl@arg^0,f,c
  8910   0056EA  5006               	movf	(??___xxtofl+1)^0,w,c
  8911   0056EC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8912   0056EE  5007               	movf	(??___xxtofl+2)^0,w,c
  8913   0056F0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8914   0056F2  5008               	movf	(??___xxtofl+3)^0,w,c
  8915   0056F4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8916   0056F6  5009               	movf	___xxtofl@sign^0,w,c
  8917   0056F8  B4D8               	btfsc	status,2,c
  8918   0056FA  EF81  F02B         	goto	u9321
  8919   0056FE  EF83  F02B         	goto	u9320
  8920   005702                     u9321:
  8921   005702  EF8B  F02B         	goto	l7182
  8922   005706                     u9320:
  8923   005706  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8924   005708  EF8A  F02B         	goto	u9330
  8925   00570C  EF88  F02B         	goto	u9331
  8926   005710                     u9331:
  8927   005710  EF8B  F02B         	goto	l7182
  8928   005714                     u9330:
  8929   005714  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8930   005716                     l7182:
  8931   005716  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8932   00571A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8933   00571E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8934   005722  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8935   005726                     l931:
  8936   005726  0012               	return		;funcret
  8937   005728                     __end_of___xxtofl:
  8938                           	callstack 0
  8939                           
  8940 ;; *************** function _Handle_Shutdown_Events *****************
  8941 ;; Defined at:
  8942 ;;		line 269 in file "newmain.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;		None
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;		None
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  1    wreg      void 
  8949 ;; Registers used:
  8950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8956 ;;      Params:         0       0       0       0       0       0       0       0       0
  8957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8960 ;;Total ram usage:        0 bytes
  8961 ;; Hardware stack levels used: 1
  8962 ;; Hardware stack levels required when called: 10
  8963 ;; This function calls:
  8964 ;;		_Send_History_Event
  8965 ;; This function is called by:
  8966 ;;		_main
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text14
  8971   0069EE                     __ptext14:
  8972                           	callstack 0
  8973   0069EE                     _Handle_Shutdown_Events:
  8974                           	callstack 20
  8975   0069EE                     
  8976                           ;newmain.c: 270:     static bool prev_shutdown = 0;;newmain.c: 273:     if(shutdown_syst
      +                          em && !prev_shutdown) {
  8977   0069EE  0103               	movlb	3	; () banked
  8978   0069F0  5153               	movf	_shutdown_system& (0+255),w,b
  8979   0069F2  B4D8               	btfsc	status,2,c
  8980   0069F4  EFFE  F034         	goto	u10531
  8981   0069F8  EF00  F035         	goto	u10530
  8982   0069FC                     u10531:
  8983   0069FC  EF13  F035         	goto	l7978
  8984   006A00                     u10530:
  8985   006A00                     
  8986                           ; BSR set to: 3
  8987   006A00  5151               	movf	Handle_Shutdown_Events@prev_shutdown& (0+255),w,b
  8988   006A02  A4D8               	btfss	status,2,c
  8989   006A04  EF06  F035         	goto	u10541
  8990   006A08  EF08  F035         	goto	u10540
  8991   006A0C                     u10541:
  8992   006A0C  EF13  F035         	goto	l7978
  8993   006A10                     u10540:
  8994   006A10                     
  8995                           ; BSR set to: 3
  8996                           ;newmain.c: 274:         Send_History_Event("shutdown", "");
  8997   006A10  0EE0               	movlw	low STR_12
  8998   006A12  0100               	movlb	0	; () banked
  8999   006A14  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9000   006A16  0E7F               	movlw	high STR_12
  9001   006A18  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9002   006A1A  0E61               	movlw	low (STR_16+29)
  9003   006A1C  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9004   006A1E  0E7F               	movlw	high (STR_16+29)
  9005   006A20  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9006   006A22  EC69  F034         	call	_Send_History_Event	;wreg free
  9007   006A26                     l7978:
  9008                           
  9009                           ;newmain.c: 278:     if(!shutdown_system && prev_shutdown) {
  9010   006A26  0103               	movlb	3	; () banked
  9011   006A28  5153               	movf	_shutdown_system& (0+255),w,b
  9012   006A2A  A4D8               	btfss	status,2,c
  9013   006A2C  EF1A  F035         	goto	u10551
  9014   006A30  EF1C  F035         	goto	u10550
  9015   006A34                     u10551:
  9016   006A34  EF2F  F035         	goto	l7984
  9017   006A38                     u10550:
  9018   006A38                     
  9019                           ; BSR set to: 3
  9020   006A38  5151               	movf	Handle_Shutdown_Events@prev_shutdown& (0+255),w,b
  9021   006A3A  B4D8               	btfsc	status,2,c
  9022   006A3C  EF22  F035         	goto	u10561
  9023   006A40  EF24  F035         	goto	u10560
  9024   006A44                     u10561:
  9025   006A44  EF2F  F035         	goto	l7984
  9026   006A48                     u10560:
  9027   006A48                     
  9028                           ; BSR set to: 3
  9029                           ;newmain.c: 279:         Send_History_Event("resume", "");
  9030   006A48  0EF0               	movlw	low STR_14
  9031   006A4A  0100               	movlb	0	; () banked
  9032   006A4C  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9033   006A4E  0E7F               	movlw	high STR_14
  9034   006A50  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9035   006A52  0E61               	movlw	low (STR_16+29)
  9036   006A54  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9037   006A56  0E7F               	movlw	high (STR_16+29)
  9038   006A58  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9039   006A5A  EC69  F034         	call	_Send_History_Event	;wreg free
  9040   006A5E                     l7984:
  9041                           
  9042                           ;newmain.c: 282:     prev_shutdown = shutdown_system;
  9043   006A5E  C353  F351         	movff	_shutdown_system,Handle_Shutdown_Events@prev_shutdown
  9044   006A62  0012               	return		;funcret
  9045   006A64                     __end_of_Handle_Shutdown_Events:
  9046                           	callstack 0
  9047                           
  9048 ;; *************** function _Handle_Fire_Events *****************
  9049 ;; Defined at:
  9050 ;;		line 202 in file "newmain.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;		None
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;  end_data      150    0[BANK2 ] unsigned char [150]
  9055 ;;  water_used      4  138[BANK0 ] float 
  9056 ;;  duration        4  134[BANK0 ] unsigned long 
  9057 ;;  start_data    100  150[BANK2 ] unsigned char [100]
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      void 
  9060 ;; Registers used:
  9061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9067 ;;      Params:         0       0       0       0       0       0       0       0       0
  9068 ;;      Locals:         0       8       0     250       0       0       0       0       0
  9069 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9070 ;;      Totals:         0      10       0     250       0       0       0       0       0
  9071 ;;Total ram usage:      260 bytes
  9072 ;; Hardware stack levels used: 1
  9073 ;; Hardware stack levels required when called: 10
  9074 ;; This function calls:
  9075 ;;		_Send_History_Event
  9076 ;;		___flge
  9077 ;;		___flsub
  9078 ;;		___lldiv
  9079 ;;		_sprintf
  9080 ;;		_strcpy
  9081 ;; This function is called by:
  9082 ;;		_main
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086                           	psect	text15
  9087   004EA4                     __ptext15:
  9088                           	callstack 0
  9089   004EA4                     _Handle_Fire_Events:
  9090                           	callstack 20
  9091   004EA4                     
  9092                           ;newmain.c: 204:     if(fire_alarm && !prev_fire_alarm) {
  9093   004EA4  0103               	movlb	3	; () banked
  9094   004EA6  5156               	movf	_fire_alarm& (0+255),w,b
  9095   004EA8  B4D8               	btfsc	status,2,c
  9096   004EAA  EF59  F027         	goto	u10421
  9097   004EAE  EF5B  F027         	goto	u10420
  9098   004EB2                     u10421:
  9099   004EB2  EF04  F028         	goto	l7930
  9100   004EB6                     u10420:
  9101   004EB6                     
  9102                           ; BSR set to: 3
  9103   004EB6  5155               	movf	_prev_fire_alarm& (0+255),w,b
  9104   004EB8  A4D8               	btfss	status,2,c
  9105   004EBA  EF61  F027         	goto	u10431
  9106   004EBE  EF63  F027         	goto	u10430
  9107   004EC2                     u10431:
  9108   004EC2  EF04  F028         	goto	l7930
  9109   004EC6                     u10430:
  9110   004EC6                     
  9111                           ; BSR set to: 3
  9112                           ;newmain.c: 205:         fire_start_time = system_millis;
  9113   004EC6  C2FA  F328         	movff	_system_millis,_fire_start_time
  9114   004ECA  C2FB  F329         	movff	_system_millis+1,_fire_start_time+1
  9115   004ECE  C2FC  F32A         	movff	_system_millis+2,_fire_start_time+2
  9116   004ED2  C2FD  F32B         	movff	_system_millis+3,_fire_start_time+3
  9117                           
  9118                           ;newmain.c: 206:         fire_start_temp = temperature;
  9119   004ED6  C344  F324         	movff	_temperature,_fire_start_temp
  9120   004EDA  C345  F325         	movff	_temperature+1,_fire_start_temp+1
  9121   004EDE  C346  F326         	movff	_temperature+2,_fire_start_temp+2
  9122   004EE2  C347  F327         	movff	_temperature+3,_fire_start_temp+3
  9123                           
  9124                           ;newmain.c: 207:         fire_start_flame = flame_intensity;
  9125   004EE6  C340  F320         	movff	_flame_intensity,_fire_start_flame
  9126   004EEA  C341  F321         	movff	_flame_intensity+1,_fire_start_flame+1
  9127   004EEE  C342  F322         	movff	_flame_intensity+2,_fire_start_flame+2
  9128   004EF2  C343  F323         	movff	_flame_intensity+3,_fire_start_flame+3
  9129                           
  9130                           ;newmain.c: 208:         fire_start_co = co_ppm;
  9131   004EF6  C338  F31C         	movff	_co_ppm,_fire_start_co
  9132   004EFA  C339  F31D         	movff	_co_ppm+1,_fire_start_co+1
  9133   004EFE  C33A  F31E         	movff	_co_ppm+2,_fire_start_co+2
  9134   004F02  C33B  F31F         	movff	_co_ppm+3,_fire_start_co+3
  9135                           
  9136                           ;newmain.c: 209:         fire_start_flow = total_flow;
  9137   004F06  C330  F318         	movff	_total_flow,_fire_start_flow
  9138   004F0A  C331  F319         	movff	_total_flow+1,_fire_start_flow+1
  9139   004F0E  C332  F31A         	movff	_total_flow+2,_fire_start_flow+2
  9140   004F12  C333  F31B         	movff	_total_flow+3,_fire_start_flow+3
  9141   004F16                     
  9142                           ; BSR set to: 3
  9143                           ;newmain.c: 212:         if(flame_detected) {
  9144   004F16  5159               	movf	_flame_detected& (0+255),w,b
  9145   004F18  B4D8               	btfsc	status,2,c
  9146   004F1A  EF91  F027         	goto	u10441
  9147   004F1E  EF93  F027         	goto	u10440
  9148   004F22                     u10441:
  9149   004F22  EF9F  F027         	goto	l7918
  9150   004F26                     u10440:
  9151   004F26                     
  9152                           ; BSR set to: 3
  9153                           ;newmain.c: 213:             strcpy(fire_trigger_sensor, "flame_sensor");
  9154   004F26  0EAA               	movlw	low _fire_trigger_sensor
  9155   004F28  6E01               	movwf	strcpy@dest^0,c
  9156   004F2A  0E03               	movlw	high _fire_trigger_sensor
  9157   004F2C  6E02               	movwf	(strcpy@dest+1)^0,c
  9158   004F2E  0EA1               	movlw	low STR_1
  9159   004F30  6E03               	movwf	strcpy@src^0,c
  9160   004F32  0E7F               	movlw	high STR_1
  9161   004F34  6E04               	movwf	(strcpy@src+1)^0,c
  9162   004F36  EC87  F036         	call	_strcpy	;wreg free
  9163                           
  9164                           ;newmain.c: 214:         } else if(temperature >= 40.0) {
  9165   004F3A  EFEA  F027         	goto	l7926
  9166   004F3E                     l7918:
  9167                           
  9168                           ; BSR set to: 3
  9169   004F3E  C344  F060         	movff	_temperature,___flge@ff1
  9170   004F42  C345  F061         	movff	_temperature+1,___flge@ff1+1
  9171   004F46  C346  F062         	movff	_temperature+2,___flge@ff1+2
  9172   004F4A  C347  F063         	movff	_temperature+3,___flge@ff1+3
  9173   004F4E  0E00               	movlw	0
  9174   004F50  0100               	movlb	0	; () banked
  9175   004F52  6F64               	movwf	___flge@ff2& (0+255),b
  9176   004F54  0E00               	movlw	0
  9177   004F56  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9178   004F58  0E20               	movlw	32
  9179   004F5A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9180   004F5C  0E42               	movlw	66
  9181   004F5E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9182   004F60  EC56  F02F         	call	___flge	;wreg free
  9183   004F64  0100               	movlb	0	; () banked
  9184   004F66  A0D8               	btfss	status,0,c
  9185   004F68  EFB8  F027         	goto	u10451
  9186   004F6C  EFBA  F027         	goto	u10450
  9187   004F70                     u10451:
  9188   004F70  EFC6  F027         	goto	l7922
  9189   004F74                     u10450:
  9190   004F74                     
  9191                           ; BSR set to: 0
  9192                           ;newmain.c: 215:             strcpy(fire_trigger_sensor, "temperature_sensor");
  9193   004F74  0EAA               	movlw	low _fire_trigger_sensor
  9194   004F76  6E01               	movwf	strcpy@dest^0,c
  9195   004F78  0E03               	movlw	high _fire_trigger_sensor
  9196   004F7A  6E02               	movwf	(strcpy@dest+1)^0,c
  9197   004F7C  0E7F               	movlw	low STR_2
  9198   004F7E  6E03               	movwf	strcpy@src^0,c
  9199   004F80  0E7F               	movlw	high STR_2
  9200   004F82  6E04               	movwf	(strcpy@src+1)^0,c
  9201   004F84  EC87  F036         	call	_strcpy	;wreg free
  9202                           
  9203                           ;newmain.c: 216:         } else if(co_ppm >= 50.0) {
  9204   004F88  EFEA  F027         	goto	l7926
  9205   004F8C                     l7922:
  9206                           
  9207                           ; BSR set to: 0
  9208   004F8C  C338  F060         	movff	_co_ppm,___flge@ff1
  9209   004F90  C339  F061         	movff	_co_ppm+1,___flge@ff1+1
  9210   004F94  C33A  F062         	movff	_co_ppm+2,___flge@ff1+2
  9211   004F98  C33B  F063         	movff	_co_ppm+3,___flge@ff1+3
  9212   004F9C  0E00               	movlw	0
  9213   004F9E  6F64               	movwf	___flge@ff2& (0+255),b
  9214   004FA0  0E00               	movlw	0
  9215   004FA2  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9216   004FA4  0E48               	movlw	72
  9217   004FA6  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9218   004FA8  0E42               	movlw	66
  9219   004FAA  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9220   004FAC  EC56  F02F         	call	___flge	;wreg free
  9221   004FB0  0100               	movlb	0	; () banked
  9222   004FB2  A0D8               	btfss	status,0,c
  9223   004FB4  EFDE  F027         	goto	u10461
  9224   004FB8  EFE0  F027         	goto	u10460
  9225   004FBC                     u10461:
  9226   004FBC  EFEA  F027         	goto	l7926
  9227   004FC0                     u10460:
  9228   004FC0                     
  9229                           ; BSR set to: 0
  9230                           ;newmain.c: 217:             strcpy(fire_trigger_sensor, "co_sensor");
  9231   004FC0  0EAA               	movlw	low _fire_trigger_sensor
  9232   004FC2  6E01               	movwf	strcpy@dest^0,c
  9233   004FC4  0E03               	movlw	high _fire_trigger_sensor
  9234   004FC6  6E02               	movwf	(strcpy@dest+1)^0,c
  9235   004FC8  0EC4               	movlw	low STR_3
  9236   004FCA  6E03               	movwf	strcpy@src^0,c
  9237   004FCC  0E7F               	movlw	high STR_3
  9238   004FCE  6E04               	movwf	(strcpy@src+1)^0,c
  9239   004FD0  EC87  F036         	call	_strcpy	;wreg free
  9240   004FD4                     l7926:
  9241                           
  9242                           ;newmain.c: 221:         char start_data[100];;newmain.c: 222:         sprintf(start_dat
      +                          a, ",\"sensor\":\"%s\"", fire_trigger_sensor);
  9243   004FD4  0E96               	movlw	low Handle_Fire_Events@start_data
  9244   004FD6  0100               	movlb	0	; () banked
  9245   004FD8  6FB0               	movwf	sprintf@s& (0+255),b
  9246   004FDA  0E02               	movlw	high Handle_Fire_Events@start_data
  9247   004FDC  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9248   004FDE  0E92               	movlw	low STR_4
  9249   004FE0  6FB2               	movwf	sprintf@fmt& (0+255),b
  9250   004FE2  0E7F               	movlw	high STR_4
  9251   004FE4  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9252   004FE6  0EAA               	movlw	low _fire_trigger_sensor
  9253   004FE8  6FB4               	movwf	(?_sprintf+4)& (0+255),b
  9254   004FEA  0E03               	movlw	high _fire_trigger_sensor
  9255   004FEC  6FB5               	movwf	(?_sprintf+5)& (0+255),b
  9256   004FEE  EC24  F036         	call	_sprintf	;wreg free
  9257   004FF2                     
  9258                           ;newmain.c: 223:         Send_History_Event("fire_start", start_data);
  9259   004FF2  0EAE               	movlw	low STR_5
  9260   004FF4  0100               	movlb	0	; () banked
  9261   004FF6  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9262   004FF8  0E7F               	movlw	high STR_5
  9263   004FFA  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9264   004FFC  0E96               	movlw	low Handle_Fire_Events@start_data
  9265   004FFE  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9266   005000  0E02               	movlw	high Handle_Fire_Events@start_data
  9267   005002  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9268   005004  EC69  F034         	call	_Send_History_Event	;wreg free
  9269   005008                     l7930:
  9270                           
  9271                           ;newmain.c: 227:     if(!fire_alarm && prev_fire_alarm) {
  9272   005008  0103               	movlb	3	; () banked
  9273   00500A  5156               	movf	_fire_alarm& (0+255),w,b
  9274   00500C  A4D8               	btfss	status,2,c
  9275   00500E  EF0B  F028         	goto	u10471
  9276   005012  EF0D  F028         	goto	u10470
  9277   005016                     u10471:
  9278   005016  EF94  F028         	goto	l7946
  9279   00501A                     u10470:
  9280   00501A                     
  9281                           ; BSR set to: 3
  9282   00501A  5155               	movf	_prev_fire_alarm& (0+255),w,b
  9283   00501C  B4D8               	btfsc	status,2,c
  9284   00501E  EF13  F028         	goto	u10481
  9285   005022  EF15  F028         	goto	u10480
  9286   005026                     u10481:
  9287   005026  EF94  F028         	goto	l7946
  9288   00502A                     u10480:
  9289   00502A                     
  9290                           ; BSR set to: 3
  9291                           ;newmain.c: 228:         unsigned long duration = (system_millis - fire_start_time) / 10
      +                          00;
  9292   00502A  5128               	movf	_fire_start_time& (0+255),w,b
  9293   00502C  0102               	movlb	2	; () banked
  9294   00502E  5DFA               	subwf	_system_millis& (0+255),w,b
  9295   005030  6E01               	movwf	___lldiv@dividend^0,c
  9296   005032  0103               	movlb	3	; () banked
  9297   005034  5129               	movf	(_fire_start_time+1)& (0+255),w,b
  9298   005036  0102               	movlb	2	; () banked
  9299   005038  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  9300   00503A  6E02               	movwf	(___lldiv@dividend+1)^0,c
  9301   00503C  0103               	movlb	3	; () banked
  9302   00503E  512A               	movf	(_fire_start_time+2)& (0+255),w,b
  9303   005040  0102               	movlb	2	; () banked
  9304   005042  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  9305   005044  6E03               	movwf	(___lldiv@dividend+2)^0,c
  9306   005046  0103               	movlb	3	; () banked
  9307   005048  512B               	movf	(_fire_start_time+3)& (0+255),w,b
  9308   00504A  0102               	movlb	2	; () banked
  9309   00504C  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  9310   00504E  6E04               	movwf	(___lldiv@dividend+3)^0,c
  9311   005050  0EE8               	movlw	232
  9312   005052  6E05               	movwf	___lldiv@divisor^0,c
  9313   005054  0E03               	movlw	3
  9314   005056  6E06               	movwf	(___lldiv@divisor+1)^0,c
  9315   005058  0E00               	movlw	0
  9316   00505A  6E07               	movwf	(___lldiv@divisor+2)^0,c
  9317   00505C  0E00               	movlw	0
  9318   00505E  6E08               	movwf	(___lldiv@divisor+3)^0,c
  9319   005060  EC17  F034         	call	___lldiv	;wreg free
  9320   005064  C001  F0E6         	movff	?___lldiv,Handle_Fire_Events@duration
  9321   005068  C002  F0E7         	movff	?___lldiv+1,Handle_Fire_Events@duration+1
  9322   00506C  C003  F0E8         	movff	?___lldiv+2,Handle_Fire_Events@duration+2
  9323   005070  C004  F0E9         	movff	?___lldiv+3,Handle_Fire_Events@duration+3
  9324                           
  9325                           ;newmain.c: 229:         float water_used = total_flow - fire_start_flow;
  9326   005074  C330  F051         	movff	_total_flow,___flsub@b
  9327   005078  C331  F052         	movff	_total_flow+1,___flsub@b+1
  9328   00507C  C332  F053         	movff	_total_flow+2,___flsub@b+2
  9329   005080  C333  F054         	movff	_total_flow+3,___flsub@b+3
  9330   005084  C318  F055         	movff	_fire_start_flow,___flsub@a
  9331   005088  C319  F056         	movff	_fire_start_flow+1,___flsub@a+1
  9332   00508C  C31A  F057         	movff	_fire_start_flow+2,___flsub@a+2
  9333   005090  C31B  F058         	movff	_fire_start_flow+3,___flsub@a+3
  9334   005094  EC01  F036         	call	___flsub	;wreg free
  9335   005098  C051  F0EA         	movff	?___flsub,Handle_Fire_Events@water_used
  9336   00509C  C052  F0EB         	movff	?___flsub+1,Handle_Fire_Events@water_used+1
  9337   0050A0  C053  F0EC         	movff	?___flsub+2,Handle_Fire_Events@water_used+2
  9338   0050A4  C054  F0ED         	movff	?___flsub+3,Handle_Fire_Events@water_used+3
  9339   0050A8                     
  9340                           ;newmain.c: 231:         char end_data[150];;newmain.c: 232:         sprintf(end_data, "
      +                          ,\"duration\":%lu,\"water\":%.2f", duration, water_used);
  9341   0050A8  0E00               	movlw	low Handle_Fire_Events@end_data
  9342   0050AA  0100               	movlb	0	; () banked
  9343   0050AC  6FB0               	movwf	sprintf@s& (0+255),b
  9344   0050AE  0E02               	movlw	high Handle_Fire_Events@end_data
  9345   0050B0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9346   0050B2  0E62               	movlw	low STR_6
  9347   0050B4  6FB2               	movwf	sprintf@fmt& (0+255),b
  9348   0050B6  0E7F               	movlw	high STR_6
  9349   0050B8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9350   0050BA  C0E6  F0B4         	movff	Handle_Fire_Events@duration,?_sprintf+4
  9351   0050BE  C0E7  F0B5         	movff	Handle_Fire_Events@duration+1,?_sprintf+5
  9352   0050C2  C0E8  F0B6         	movff	Handle_Fire_Events@duration+2,?_sprintf+6
  9353   0050C6  C0E9  F0B7         	movff	Handle_Fire_Events@duration+3,?_sprintf+7
  9354   0050CA  C0EA  F0B8         	movff	Handle_Fire_Events@water_used,?_sprintf+8
  9355   0050CE  C0EB  F0B9         	movff	Handle_Fire_Events@water_used+1,?_sprintf+9
  9356   0050D2  C0EC  F0BA         	movff	Handle_Fire_Events@water_used+2,?_sprintf+10
  9357   0050D6  C0ED  F0BB         	movff	Handle_Fire_Events@water_used+3,?_sprintf+11
  9358   0050DA  EC24  F036         	call	_sprintf	;wreg free
  9359   0050DE                     
  9360                           ;newmain.c: 233:         Send_History_Event("fire_end", end_data);
  9361   0050DE  0ECE               	movlw	low STR_7
  9362   0050E0  0100               	movlb	0	; () banked
  9363   0050E2  6FE0               	movwf	Send_History_Event@event_type& (0+255),b
  9364   0050E4  0E7F               	movlw	high STR_7
  9365   0050E6  6FE1               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9366   0050E8  0E00               	movlw	low Handle_Fire_Events@end_data
  9367   0050EA  6FE2               	movwf	Send_History_Event@extra_data& (0+255),b
  9368   0050EC  0E02               	movlw	high Handle_Fire_Events@end_data
  9369   0050EE  6FE3               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9370   0050F0  EC69  F034         	call	_Send_History_Event	;wreg free
  9371   0050F4                     
  9372                           ;newmain.c: 236:         _delay((unsigned long)((5000)*(8000000/4000.0)));
  9373   0050F4  0E33               	movlw	51
  9374   0050F6  0100               	movlb	0	; () banked
  9375   0050F8  6FE5               	movwf	(??_Handle_Fire_Events+1)& (0+255),b
  9376   0050FA  0EBB               	movlw	187
  9377   0050FC  6FE4               	movwf	??_Handle_Fire_Events& (0+255),b
  9378   0050FE  0EDF               	movlw	223
  9379   005100                     u10777:
  9380   005100  2EE8               	decfsz	wreg,f,c
  9381   005102  D7FE               	bra	u10777
  9382   005104  2FE4               	decfsz	??_Handle_Fire_Events& (0+255),f,b
  9383   005106  D7FC               	bra	u10777
  9384   005108  2FE5               	decfsz	(??_Handle_Fire_Events+1)& (0+255),f,b
  9385   00510A  D7FA               	bra	u10777
  9386   00510C  D000               	nop2	
  9387   00510E                     
  9388                           ;newmain.c: 237:         total_flow = 0.0;
  9389   00510E  0E00               	movlw	0
  9390   005110  0103               	movlb	3	; () banked
  9391   005112  6F30               	movwf	_total_flow& (0+255),b
  9392   005114  0E00               	movlw	0
  9393   005116  6F31               	movwf	(_total_flow+1)& (0+255),b
  9394   005118  0E00               	movlw	0
  9395   00511A  6F32               	movwf	(_total_flow+2)& (0+255),b
  9396   00511C  0E00               	movlw	0
  9397   00511E  6F33               	movwf	(_total_flow+3)& (0+255),b
  9398   005120                     
  9399                           ; BSR set to: 3
  9400                           ;newmain.c: 238:         pulse_count = 0;
  9401   005120  0E00               	movlw	0
  9402   005122  6F4F               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  9403   005124  0E00               	movlw	0
  9404   005126  6F4E               	movwf	_pulse_count& (0+255),b	;volatile
  9405   005128                     l7946:
  9406                           
  9407                           ; BSR set to: 3
  9408                           ;newmain.c: 241:     prev_fire_alarm = fire_alarm;
  9409   005128  C356  F355         	movff	_fire_alarm,_prev_fire_alarm
  9410   00512C                     
  9411                           ; BSR set to: 3
  9412   00512C  0012               	return		;funcret
  9413   00512E                     __end_of_Handle_Fire_Events:
  9414                           	callstack 0
  9415                           
  9416 ;; *************** function _Send_History_Event *****************
  9417 ;; Defined at:
  9418 ;;		line 285 in file "newmain.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;  event_type      2  128[BANK0 ] PTR const unsigned char 
  9421 ;;		 -> STR_14(7), STR_12(9), STR_11(9), STR_8(11), 
  9422 ;;		 -> STR_7(9), STR_5(11), 
  9423 ;;  extra_data      2  130[BANK0 ] PTR const unsigned char 
  9424 ;;		 -> STR_15(1), STR_13(1), Handle_Test_Events@test_data(50), STR_9(1), 
  9425 ;;		 -> Handle_Fire_Events@end_data(150), Handle_Fire_Events@start_data(100), 
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;  i               2  200[BANK1 ] int 
  9428 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  1    wreg      void 
  9431 ;; Registers used:
  9432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9438 ;;      Params:         0       4       0       0       0       0       0       0       0
  9439 ;;      Locals:         0       0     202       0       0       0       0       0       0
  9440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9441 ;;      Totals:         0       4     202       0       0       0       0       0       0
  9442 ;;Total ram usage:      206 bytes
  9443 ;; Hardware stack levels used: 1
  9444 ;; Hardware stack levels required when called: 9
  9445 ;; This function calls:
  9446 ;;		_sprintf
  9447 ;; This function is called by:
  9448 ;;		_Handle_Fire_Events
  9449 ;;		_Handle_Test_Events
  9450 ;;		_Handle_Shutdown_Events
  9451 ;; This function uses a non-reentrant model
  9452 ;;
  9453                           
  9454                           	psect	text16
  9455   0068D2                     __ptext16:
  9456                           	callstack 0
  9457   0068D2                     _Send_History_Event:
  9458                           	callstack 20
  9459   0068D2                     
  9460                           ;newmain.c: 286:     char buffer[200];;newmain.c: 287:     sprintf(buffer, "{\"event\":\
      +                          "%s\",\"time\":%lu%s}\r\n",
  9461   0068D2  0E00               	movlw	low Send_History_Event@buffer
  9462   0068D4  0100               	movlb	0	; () banked
  9463   0068D6  6FB0               	movwf	sprintf@s& (0+255),b
  9464   0068D8  0E01               	movlw	high Send_History_Event@buffer
  9465   0068DA  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9466   0068DC  0E44               	movlw	low STR_16
  9467   0068DE  6FB2               	movwf	sprintf@fmt& (0+255),b
  9468   0068E0  0E7F               	movlw	high STR_16
  9469   0068E2  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9470   0068E4  C0E0  F0B4         	movff	Send_History_Event@event_type,?_sprintf+4
  9471   0068E8  C0E1  F0B5         	movff	Send_History_Event@event_type+1,?_sprintf+5
  9472   0068EC  C2FA  F0B6         	movff	_system_millis,?_sprintf+6
  9473   0068F0  C2FB  F0B7         	movff	_system_millis+1,?_sprintf+7
  9474   0068F4  C2FC  F0B8         	movff	_system_millis+2,?_sprintf+8
  9475   0068F8  C2FD  F0B9         	movff	_system_millis+3,?_sprintf+9
  9476   0068FC  C0E2  F0BA         	movff	Send_History_Event@extra_data,?_sprintf+10
  9477   006900  C0E3  F0BB         	movff	Send_History_Event@extra_data+1,?_sprintf+11
  9478   006904  EC24  F036         	call	_sprintf	;wreg free
  9479   006908                     l203:
  9480   006908  A2AC               	btfss	172,1,c	;volatile
  9481   00690A  EF89  F034         	goto	u9561
  9482   00690E  EF8B  F034         	goto	u9560
  9483   006912                     u9561:
  9484   006912  EF84  F034         	goto	l203
  9485   006916                     u9560:
  9486   006916                     
  9487                           ;newmain.c: 291:     for(int i = 0; buffer[i]; i++) {
  9488   006916  0E00               	movlw	0
  9489   006918  0101               	movlb	1	; () banked
  9490   00691A  6FC9               	movwf	(Send_History_Event@i+1)& (0+255),b
  9491   00691C  0E00               	movlw	0
  9492   00691E  6FC8               	movwf	Send_History_Event@i& (0+255),b
  9493   006920  EFA4  F034         	goto	l7312
  9494   006924                     l7308:
  9495                           
  9496                           ; BSR set to: 1
  9497                           ;newmain.c: 292:         TXREG = buffer[i];
  9498   006924  0E00               	movlw	low Send_History_Event@buffer
  9499   006926  25C8               	addwf	Send_History_Event@i& (0+255),w,b
  9500   006928  6ED9               	movwf	fsr2l,c
  9501   00692A  0E01               	movlw	high Send_History_Event@buffer
  9502   00692C  21C9               	addwfc	(Send_History_Event@i+1)& (0+255),w,b
  9503   00692E  6EDA               	movwf	fsr2h,c
  9504   006930  50DF               	movf	indf2,w,c
  9505   006932  6EAD               	movwf	173,c	;volatile
  9506   006934                     l208:
  9507   006934  A2AC               	btfss	172,1,c	;volatile
  9508   006936  EF9F  F034         	goto	u9571
  9509   00693A  EFA1  F034         	goto	u9570
  9510   00693E                     u9571:
  9511   00693E  EF9A  F034         	goto	l208
  9512   006942                     u9570:
  9513   006942                     
  9514                           ;newmain.c: 294:     }
  9515   006942  0101               	movlb	1	; () banked
  9516   006944  4BC8               	infsnz	Send_History_Event@i& (0+255),f,b
  9517   006946  2BC9               	incf	(Send_History_Event@i+1)& (0+255),f,b
  9518   006948                     l7312:
  9519                           
  9520                           ; BSR set to: 1
  9521   006948  0E00               	movlw	low Send_History_Event@buffer
  9522   00694A  25C8               	addwf	Send_History_Event@i& (0+255),w,b
  9523   00694C  6ED9               	movwf	fsr2l,c
  9524   00694E  0E01               	movlw	high Send_History_Event@buffer
  9525   006950  21C9               	addwfc	(Send_History_Event@i+1)& (0+255),w,b
  9526   006952  6EDA               	movwf	fsr2h,c
  9527   006954  50DF               	movf	indf2,w,c
  9528   006956  A4D8               	btfss	status,2,c
  9529   006958  EFB0  F034         	goto	u9581
  9530   00695C  EFB2  F034         	goto	u9580
  9531   006960                     u9581:
  9532   006960  EF92  F034         	goto	l7308
  9533   006964                     u9580:
  9534   006964                     
  9535                           ; BSR set to: 1
  9536   006964  0012               	return		;funcret
  9537   006966                     __end_of_Send_History_Event:
  9538                           	callstack 0
  9539                           
  9540 ;; *************** function _sprintf *****************
  9541 ;; Defined at:
  9542 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;  s               2   80[BANK0 ] PTR unsigned char 
  9545 ;;		 -> Send_Data@buffer(200), Send_History_Event@buffer(200), Handle_Test_Events@test_data(50), Handle_Fire_Events@end_
      +data(150), 
  9546 ;;		 -> Handle_Fire_Events@start_data(100), 
  9547 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  9548 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9549 ;;		 -> STR_4(15), 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  f              11  117[BANK0 ] struct _IO_FILE
  9552 ;;  ret             2    0        int 
  9553 ;;  ap              1  116[BANK0 ] PTR void [1]
  9554 ;;		 -> ?_sprintf(2), 
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  2   80[BANK0 ] int 
  9557 ;; Registers used:
  9558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9564 ;;      Params:         0      36       0       0       0       0       0       0       0
  9565 ;;      Locals:         0      12       0       0       0       0       0       0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9567 ;;      Totals:         0      48       0       0       0       0       0       0       0
  9568 ;;Total ram usage:       48 bytes
  9569 ;; Hardware stack levels used: 1
  9570 ;; Hardware stack levels required when called: 8
  9571 ;; This function calls:
  9572 ;;		_vfprintf
  9573 ;; This function is called by:
  9574 ;;		_Handle_Fire_Events
  9575 ;;		_Handle_Test_Events
  9576 ;;		_Send_History_Event
  9577 ;;		_Send_Data
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text17
  9582   006C48                     __ptext17:
  9583                           	callstack 0
  9584   006C48                     _sprintf:
  9585                           	callstack 21
  9586   006C48  0EB4               	movlw	low (?_sprintf+4)
  9587   006C4A  0100               	movlb	0	; () banked
  9588   006C4C  6FD4               	movwf	sprintf@ap& (0+255),b
  9589   006C4E  C0B0  F0D5         	movff	sprintf@s,sprintf@f
  9590   006C52  C0B1  F0D6         	movff	sprintf@s+1,sprintf@f+1
  9591   006C56                     
  9592                           ; BSR set to: 0
  9593   006C56  0E00               	movlw	0
  9594   006C58  6FD8               	movwf	(sprintf@f+3)& (0+255),b
  9595   006C5A  0E00               	movlw	0
  9596   006C5C  6FD7               	movwf	(sprintf@f+2)& (0+255),b
  9597   006C5E                     
  9598                           ; BSR set to: 0
  9599   006C5E  0E00               	movlw	0
  9600   006C60  6FDF               	movwf	(sprintf@f+10)& (0+255),b
  9601   006C62  0E00               	movlw	0
  9602   006C64  6FDE               	movwf	(sprintf@f+9)& (0+255),b
  9603   006C66                     
  9604                           ; BSR set to: 0
  9605   006C66  0ED5               	movlw	low sprintf@f
  9606   006C68  6FAA               	movwf	vfprintf@fp& (0+255),b
  9607   006C6A  C0B2  F0AB         	movff	sprintf@fmt,vfprintf@fmt
  9608   006C6E  C0B3  F0AC         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9609   006C72  0ED4               	movlw	low sprintf@ap
  9610   006C74  6FAD               	movwf	vfprintf@ap& (0+255),b
  9611   006C76  ECDD  F035         	call	_vfprintf	;wreg free
  9612   006C7A  0100               	movlb	0	; () banked
  9613   006C7C  51D7               	movf	(sprintf@f+2)& (0+255),w,b
  9614   006C7E  25B0               	addwf	sprintf@s& (0+255),w,b
  9615   006C80  6ED9               	movwf	fsr2l,c
  9616   006C82  51D8               	movf	(sprintf@f+3)& (0+255),w,b
  9617   006C84  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  9618   006C86  6EDA               	movwf	fsr2h,c
  9619   006C88  6ADF               	clrf	indf2,c
  9620   006C8A                     
  9621                           ; BSR set to: 0
  9622   006C8A  0012               	return		;funcret
  9623   006C8C                     __end_of_sprintf:
  9624                           	callstack 0
  9625                           
  9626 ;; *************** function _vfprintf *****************
  9627 ;; Defined at:
  9628 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;  fp              1   74[BANK0 ] PTR struct _IO_FILE
  9631 ;;		 -> sprintf@f(11), 
  9632 ;;  fmt             2   75[BANK0 ] PTR const unsigned char 
  9633 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9634 ;;		 -> STR_4(15), 
  9635 ;;  ap              1   77[BANK0 ] PTR PTR void 
  9636 ;;		 -> sprintf@ap(1), 
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  9639 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9640 ;;		 -> STR_4(15), 
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  2   74[BANK0 ] int 
  9643 ;; Registers used:
  9644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9650 ;;      Params:         0       4       0       0       0       0       0       0       0
  9651 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9653 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9654 ;;Total ram usage:        6 bytes
  9655 ;; Hardware stack levels used: 1
  9656 ;; Hardware stack levels required when called: 7
  9657 ;; This function calls:
  9658 ;;		_vfpfcnvrt
  9659 ;; This function is called by:
  9660 ;;		_sprintf
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664                           	psect	text18
  9665   006BBA                     __ptext18:
  9666                           	callstack 0
  9667   006BBA                     _vfprintf:
  9668                           	callstack 21
  9669   006BBA                     
  9670                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  9671   006BBA  C0AB  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  9672   006BBE  C0AC  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9673                           
  9674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9675   006BC2  EFED  F035         	goto	l7122
  9676   006BC6                     l7120:
  9677                           
  9678                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9679   006BC6  C0AA  F09C         	movff	vfprintf@fp,vfpfcnvrt@fp
  9680   006BCA  0EAE               	movlw	low vfprintf@cfmt
  9681   006BCC  0100               	movlb	0	; () banked
  9682   006BCE  6F9D               	movwf	vfpfcnvrt@fmt& (0+255),b
  9683   006BD0  C0AD  F09E         	movff	vfprintf@ap,vfpfcnvrt@ap
  9684   006BD4  6B9F               	clrf	(vfpfcnvrt@ap+1)& (0+255),b
  9685   006BD6  ECE4  F01A         	call	_vfpfcnvrt	;wreg free
  9686   006BDA                     l7122:
  9687                           
  9688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9689   006BDA  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  9690   006BDE  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9691   006BE2                     	if	0	;tblptru may be non-zero
  9692   006BE2                     	endif
  9693   006BE2                     	if	0	;tblptru may be non-zero
  9694   006BE2                     	endif
  9695   006BE2  0008               	tblrd		*
  9696   006BE4  50F5               	movf	tablat,w,c
  9697   006BE6  0900               	iorlw	0
  9698   006BE8  A4D8               	btfss	status,2,c
  9699   006BEA  EFF9  F035         	goto	u9231
  9700   006BEE  EFFB  F035         	goto	u9230
  9701   006BF2                     u9231:
  9702   006BF2  EFE3  F035         	goto	l7120
  9703   006BF6                     u9230:
  9704   006BF6                     
  9705                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  9706   006BF6  0E00               	movlw	0
  9707   006BF8  0100               	movlb	0	; () banked
  9708   006BFA  6FAB               	movwf	(?_vfprintf+1)& (0+255),b
  9709   006BFC  0E00               	movlw	0
  9710   006BFE  6FAA               	movwf	?_vfprintf& (0+255),b
  9711   006C00                     
  9712                           ; BSR set to: 0
  9713   006C00  0012               	return		;funcret
  9714   006C02                     __end_of_vfprintf:
  9715                           	callstack 0
  9716                           
  9717 ;; *************** function _vfpfcnvrt *****************
  9718 ;; Defined at:
  9719 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  fp              1   60[BANK0 ] PTR struct _IO_FILE
  9722 ;;		 -> sprintf@f(11), 
  9723 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  9724 ;;		 -> vfprintf@cfmt(2), 
  9725 ;;  ap              2   62[BANK0 ] PTR PTR void 
  9726 ;;		 -> sprintf@ap(1), 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  convarg         4   67[BANK0 ] struct .
  9729 ;;  cp              2   72[BANK0 ] PTR unsigned char 
  9730 ;;		 -> STR_17(115), STR_16(30), STR_10(14), STR_6(29), 
  9731 ;;		 -> STR_4(15), 
  9732 ;;  c               1   71[BANK0 ] unsigned char 
  9733 ;;  done            1   66[BANK0 ] _Bool 
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  1    wreg      void 
  9736 ;; Registers used:
  9737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9743 ;;      Params:         0       4       0       0       0       0       0       0       0
  9744 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9745 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9746 ;;      Totals:         0      14       0       0       0       0       0       0       0
  9747 ;;Total ram usage:       14 bytes
  9748 ;; Hardware stack levels used: 1
  9749 ;; Hardware stack levels required when called: 6
  9750 ;; This function calls:
  9751 ;;		_dtoa
  9752 ;;		_efgtoa
  9753 ;;		_fputc
  9754 ;;		_read_prec_or_width
  9755 ;;		_stoa
  9756 ;;		_utoa
  9757 ;; This function is called by:
  9758 ;;		_vfprintf
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762                           	psect	text19
  9763   0035C8                     __ptext19:
  9764                           	callstack 0
  9765   0035C8                     _vfpfcnvrt:
  9766                           	callstack 21
  9767   0035C8                     
  9768                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  9769   0035C8  0100               	movlb	0	; () banked
  9770   0035CA  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9771   0035CC  6ED9               	movwf	fsr2l,c
  9772   0035CE  6ADA               	clrf	fsr2h,c
  9773   0035D0  CFDE FFF6          	movff	postinc2,tblptrl
  9774   0035D4  CFDD FFF7          	movff	postdec2,tblptrh
  9775   0035D8                     	if	0	;tblptru may be non-zero
  9776   0035D8                     	endif
  9777   0035D8                     	if	0	;tblptru may be non-zero
  9778   0035D8                     	endif
  9779   0035D8  0008               	tblrd		*
  9780   0035DA  50F5               	movf	tablat,w,c
  9781   0035DC  0A25               	xorlw	37
  9782   0035DE  A4D8               	btfss	status,2,c
  9783   0035E0  EFF4  F01A         	goto	u9121
  9784   0035E4  EFF6  F01A         	goto	u9120
  9785   0035E8                     u9121:
  9786   0035E8  EF59  F01D         	goto	l7112
  9787   0035EC                     u9120:
  9788   0035EC                     
  9789                           ; BSR set to: 0
  9790                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  9791   0035EC  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9792   0035EE  6ED9               	movwf	fsr2l,c
  9793   0035F0  6ADA               	clrf	fsr2h,c
  9794   0035F2  2ADE               	incf	postinc2,f,c
  9795   0035F4  0E00               	movlw	0
  9796   0035F6  22DD               	addwfc	postdec2,f,c
  9797   0035F8                     
  9798                           ; BSR set to: 0
  9799                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  9800   0035F8  0E00               	movlw	0
  9801   0035FA  0103               	movlb	3	; () banked
  9802   0035FC  6F4B               	movwf	(_width+1)& (0+255),b
  9803   0035FE  0E00               	movlw	0
  9804   003600  6F4A               	movwf	_width& (0+255),b
  9805   003602  C34A  F350         	movff	_width,_flags
  9806   003606                     
  9807                           ; BSR set to: 3
  9808                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  9809   003606  0102               	movlb	2	; () banked
  9810   003608  69FE               	setf	_prec& (0+255),b
  9811   00360A  69FF               	setf	(_prec+1)& (0+255),b
  9812   00360C                     
  9813                           ; BSR set to: 2
  9814                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  9815   00360C  0100               	movlb	0	; () banked
  9816   00360E  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9817   003610  6ED9               	movwf	fsr2l,c
  9818   003612  6ADA               	clrf	fsr2h,c
  9819   003614  CFDE FFF6          	movff	postinc2,tblptrl
  9820   003618  CFDD FFF7          	movff	postdec2,tblptrh
  9821   00361C                     	if	0	;tblptru may be non-zero
  9822   00361C                     	endif
  9823   00361C                     	if	0	;tblptru may be non-zero
  9824   00361C                     	endif
  9825   00361C  0008               	tblrd		*
  9826   00361E  50F5               	movf	tablat,w,c
  9827   003620  0A2E               	xorlw	46
  9828   003622  A4D8               	btfss	status,2,c
  9829   003624  EF16  F01B         	goto	u9131
  9830   003628  EF18  F01B         	goto	u9130
  9831   00362C                     u9131:
  9832   00362C  EF28  F01B         	goto	l7004
  9833   003630                     u9130:
  9834   003630                     
  9835                           ; BSR set to: 0
  9836                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  9837   003630  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9838   003632  6ED9               	movwf	fsr2l,c
  9839   003634  6ADA               	clrf	fsr2h,c
  9840   003636  2ADE               	incf	postinc2,f,c
  9841   003638  0E00               	movlw	0
  9842   00363A  22DD               	addwfc	postdec2,f,c
  9843   00363C                     
  9844                           ; BSR set to: 0
  9845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  9846   00363C  C09D  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  9847   003640  C09E  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  9848   003644  EC6C  F033         	call	_read_prec_or_width	;wreg free
  9849   003648  C001  F2FE         	movff	?_read_prec_or_width,_prec
  9850   00364C  C002  F2FF         	movff	?_read_prec_or_width+1,_prec+1
  9851   003650                     l7004:
  9852                           
  9853                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  9854   003650  0100               	movlb	0	; () banked
  9855   003652  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9856   003654  6ED9               	movwf	fsr2l,c
  9857   003656  6ADA               	clrf	fsr2h,c
  9858   003658  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
  9859   00365C  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
  9860   003660                     
  9861                           ; BSR set to: 0
  9862                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  9863   003660  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9864   003664  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9865   003668                     	if	0	;tblptru may be non-zero
  9866   003668                     	endif
  9867   003668                     	if	0	;tblptru may be non-zero
  9868   003668                     	endif
  9869   003668  0008               	tblrd		*
  9870   00366A  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
  9871                           
  9872                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  9873   00366E  EF44  F01B         	goto	l7014
  9874   003672                     l7008:
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  9878   003672  4BA8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  9879   003674  2BA9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  9880                           
  9881                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1316:     break;
  9882   003676  EF57  F01B         	goto	l7016
  9883   00367A                     l7010:
  9884                           
  9885                           ; BSR set to: 0
  9886                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  9887   00367A  0E69               	movlw	105
  9888   00367C  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
  9889                           
  9890                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1351:     break;
  9891   00367E  EF57  F01B         	goto	l7016
  9892   003682                     l1097:
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  9896   003682  6BA7               	clrf	vfpfcnvrt@c& (0+255),b
  9897                           
  9898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1354:     break;
  9899   003684  EF57  F01B         	goto	l7016
  9900   003688                     l7014:
  9901                           
  9902                           ; BSR set to: 0
  9903   003688  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
  9904                           
  9905                           ; Switch size 1, requested type "simple"
  9906                           ; Number of cases is 4, Range of values is 100 to 117
  9907                           ; switch strategies available:
  9908                           ; Name         Instructions Cycles
  9909                           ; simple_byte           13     7 (average)
  9910                           ;	Chosen strategy is simple_byte
  9911   00368A  0A64               	xorlw	100	; case 100
  9912   00368C  B4D8               	btfsc	status,2,c
  9913   00368E  EF3D  F01B         	goto	l7010
  9914   003692  0A0D               	xorlw	13	; case 105
  9915   003694  B4D8               	btfsc	status,2,c
  9916   003696  EF3D  F01B         	goto	l7010
  9917   00369A  0A05               	xorlw	5	; case 108
  9918   00369C  B4D8               	btfsc	status,2,c
  9919   00369E  EF39  F01B         	goto	l7008
  9920   0036A2  0A19               	xorlw	25	; case 117
  9921   0036A4  B4D8               	btfsc	status,2,c
  9922   0036A6  EF3D  F01B         	goto	l7010
  9923   0036AA  EF41  F01B         	goto	l1097
  9924   0036AE                     l7016:
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  9928   0036AE  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9929   0036B2  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9930   0036B6                     	if	0	;tblptru may be non-zero
  9931   0036B6                     	endif
  9932   0036B6                     	if	0	;tblptru may be non-zero
  9933   0036B6                     	endif
  9934   0036B6  0008               	tblrd		*
  9935   0036B8  50F5               	movf	tablat,w,c
  9936   0036BA  0A64               	xorlw	100
  9937   0036BC  B4D8               	btfsc	status,2,c
  9938   0036BE  EF63  F01B         	goto	u9141
  9939   0036C2  EF65  F01B         	goto	u9140
  9940   0036C6                     u9141:
  9941   0036C6  EF9C  F01B         	goto	l7026
  9942   0036CA                     u9140:
  9943   0036CA                     
  9944                           ; BSR set to: 0
  9945   0036CA  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9946   0036CE  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9947   0036D2                     	if	0	;tblptru may be non-zero
  9948   0036D2                     	endif
  9949   0036D2                     	if	0	;tblptru may be non-zero
  9950   0036D2                     	endif
  9951   0036D2  0008               	tblrd		*
  9952   0036D4  50F5               	movf	tablat,w,c
  9953   0036D6  0A69               	xorlw	105
  9954   0036D8  A4D8               	btfss	status,2,c
  9955   0036DA  EF71  F01B         	goto	u9151
  9956   0036DE  EF73  F01B         	goto	u9150
  9957   0036E2                     u9151:
  9958   0036E2  EFC2  F01B         	goto	l7034
  9959   0036E6                     u9150:
  9960   0036E6  EF9C  F01B         	goto	l7026
  9961   0036EA                     l7020:
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  9965   0036EA  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9966   0036EE  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9967   0036F2  50DF               	movf	indf2,w,c
  9968   0036F4  2ADF               	incf	indf2,f,c
  9969   0036F6  2ADF               	incf	indf2,f,c
  9970   0036F8  6ED9               	movwf	fsr2l,c
  9971   0036FA  6ADA               	clrf	fsr2h,c
  9972   0036FC  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  9973   003700  CFDD F0A4          	movff	postdec2,vfpfcnvrt@convarg+1
  9974   003704  0E00               	movlw	0
  9975   003706  BFA4               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  9976   003708  0EFF               	movlw	-1
  9977   00370A  6FA5               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  9978   00370C  6FA6               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  9979                           
  9980                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1366:      break;
  9981   00370E  EFA7  F01B         	goto	l7028
  9982   003712                     l7022:
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  9986   003712  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9987   003716  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9988   00371A  0E04               	movlw	4
  9989   00371C  26DF               	addwf	indf2,f,c
  9990   00371E  5CDF               	subwf	indf2,w,c
  9991   003720  6ED9               	movwf	fsr2l,c
  9992   003722  6ADA               	clrf	fsr2h,c
  9993   003724  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  9994   003728  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
  9995   00372C  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
  9996   003730  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
  9997                           
  9998                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1380:      break;
  9999   003734  EFA7  F01B         	goto	l7028
 10000   003738                     l7026:
 10001                           
 10002                           ; BSR set to: 0
 10003   003738  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10004                           
 10005                           ; Switch size 1, requested type "simple"
 10006                           ; Number of cases is 2, Range of values is 105 to 108
 10007                           ; switch strategies available:
 10008                           ; Name         Instructions Cycles
 10009                           ; simple_byte            7     4 (average)
 10010                           ;	Chosen strategy is simple_byte
 10011   00373A  0A69               	xorlw	105	; case 105
 10012   00373C  B4D8               	btfsc	status,2,c
 10013   00373E  EF75  F01B         	goto	l7020
 10014   003742  0A05               	xorlw	5	; case 108
 10015   003744  B4D8               	btfsc	status,2,c
 10016   003746  EF89  F01B         	goto	l7022
 10017   00374A  EFA7  F01B         	goto	l7028
 10018   00374E                     l7028:
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10022   00374E  0E01               	movlw	1
 10023   003750  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10024   003752  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10025   003754  0E00               	movlw	0
 10026   003756  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10027   003758  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10028   00375A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10029   00375C  6ED9               	movwf	fsr2l,c
 10030   00375E  6ADA               	clrf	fsr2h,c
 10031   003760  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10032   003764  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10033   003768                     
 10034                           ; BSR set to: 0
 10035                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 10036   003768  C09C  F017         	movff	vfpfcnvrt@fp,dtoa@fp
 10037   00376C  C0A3  F018         	movff	vfpfcnvrt@convarg,dtoa@d
 10038   003770  C0A4  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 10039   003774  C0A5  F01A         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 10040   003778  C0A6  F01B         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 10041   00377C  EC94  F02B         	call	_dtoa	;wreg free
 10042   003780  EF6A  F01D         	goto	l1105
 10043   003784                     l7034:
 10044                           
 10045                           ; BSR set to: 0
 10046   003784  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10047   003788  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10048   00378C                     	if	0	;tblptru may be non-zero
 10049   00378C                     	endif
 10050   00378C                     	if	0	;tblptru may be non-zero
 10051   00378C                     	endif
 10052   00378C  0008               	tblrd		*
 10053   00378E  50F5               	movf	tablat,w,c
 10054   003790  0A75               	xorlw	117
 10055   003792  A4D8               	btfss	status,2,c
 10056   003794  EFCE  F01B         	goto	u9161
 10057   003798  EFD0  F01B         	goto	u9160
 10058   00379C                     u9161:
 10059   00379C  EF2E  F01C         	goto	l1106
 10060   0037A0                     u9160:
 10061   0037A0  EFFA  F01B         	goto	l7042
 10062   0037A4                     l7036:
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 10066   0037A4  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10067   0037A8  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10068   0037AC  50DF               	movf	indf2,w,c
 10069   0037AE  2ADF               	incf	indf2,f,c
 10070   0037B0  2ADF               	incf	indf2,f,c
 10071   0037B2  6ED9               	movwf	fsr2l,c
 10072   0037B4  6ADA               	clrf	fsr2h,c
 10073   0037B6  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10074   0037BA  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10075   0037BE  C0A0  F0A3         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
 10076   0037C2  C0A1  F0A4         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
 10077   0037C6  6BA5               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 10078   0037C8  6BA6               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 10079                           
 10080                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1457:      break;
 10081   0037CA  EF05  F01C         	goto	l7044
 10082   0037CE                     l7038:
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 10086   0037CE  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10087   0037D2  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10088   0037D6  0E04               	movlw	4
 10089   0037D8  26DF               	addwf	indf2,f,c
 10090   0037DA  5CDF               	subwf	indf2,w,c
 10091   0037DC  6ED9               	movwf	fsr2l,c
 10092   0037DE  6ADA               	clrf	fsr2h,c
 10093   0037E0  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10094   0037E4  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10095   0037E8  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10096   0037EC  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10097                           
 10098                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1471:      break;
 10099   0037F0  EF05  F01C         	goto	l7044
 10100   0037F4                     l7042:
 10101                           
 10102                           ; BSR set to: 0
 10103   0037F4  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10104                           
 10105                           ; Switch size 1, requested type "simple"
 10106                           ; Number of cases is 2, Range of values is 105 to 108
 10107                           ; switch strategies available:
 10108                           ; Name         Instructions Cycles
 10109                           ; simple_byte            7     4 (average)
 10110                           ;	Chosen strategy is simple_byte
 10111   0037F6  0A69               	xorlw	105	; case 105
 10112   0037F8  B4D8               	btfsc	status,2,c
 10113   0037FA  EFD2  F01B         	goto	l7036
 10114   0037FE  0A05               	xorlw	5	; case 108
 10115   003800  B4D8               	btfsc	status,2,c
 10116   003802  EFE7  F01B         	goto	l7038
 10117   003806  EF05  F01C         	goto	l7044
 10118   00380A                     l7044:
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 10122   00380A  0E01               	movlw	1
 10123   00380C  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10124   00380E  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10125   003810  0E00               	movlw	0
 10126   003812  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10127   003814  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10128   003816  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10129   003818  6ED9               	movwf	fsr2l,c
 10130   00381A  6ADA               	clrf	fsr2h,c
 10131   00381C  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10132   003820  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10133                           
 10134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 10135   003824  EF22  F01C         	goto	l7052
 10136   003828                     l7046:
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 10140   003828  C09C  F017         	movff	vfpfcnvrt@fp,utoa@fp
 10141   00382C  C0A3  F018         	movff	vfpfcnvrt@convarg,utoa@d
 10142   003830  C0A4  F019         	movff	vfpfcnvrt@convarg+1,utoa@d+1
 10143   003834  C0A5  F01A         	movff	vfpfcnvrt@convarg+2,utoa@d+2
 10144   003838  C0A6  F01B         	movff	vfpfcnvrt@convarg+3,utoa@d+3
 10145   00383C  EC45  F02E         	call	_utoa	;wreg free
 10146   003840  EF6A  F01D         	goto	l1105
 10147   003844                     l7052:
 10148                           
 10149                           ; BSR set to: 0
 10150   003844  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10151   003848  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10152   00384C                     	if	0	;tblptru may be non-zero
 10153   00384C                     	endif
 10154   00384C                     	if	0	;tblptru may be non-zero
 10155   00384C                     	endif
 10156   00384C  0008               	tblrd		*
 10157   00384E  50F5               	movf	tablat,w,c
 10158                           
 10159                           ; Switch size 1, requested type "simple"
 10160                           ; Number of cases is 1, Range of values is 117 to 117
 10161                           ; switch strategies available:
 10162                           ; Name         Instructions Cycles
 10163                           ; simple_byte            4     3 (average)
 10164                           ;	Chosen strategy is simple_byte
 10165   003850  0A75               	xorlw	117	; case 117
 10166   003852  B4D8               	btfsc	status,2,c
 10167   003854  EF14  F01C         	goto	l7046
 10168   003858  EF2E  F01C         	goto	l1106
 10169   00385C                     l1106:
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 10173   00385C  6BA2               	clrf	vfpfcnvrt@done& (0+255),b
 10174   00385E                     
 10175                           ; BSR set to: 0
 10176                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 10177   00385E  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10178   003860  6ED9               	movwf	fsr2l,c
 10179   003862  6ADA               	clrf	fsr2h,c
 10180   003864  CFDE FFF6          	movff	postinc2,tblptrl
 10181   003868  CFDD FFF7          	movff	postdec2,tblptrh
 10182   00386C                     	if	0	;tblptru may be non-zero
 10183   00386C                     	endif
 10184   00386C                     	if	0	;tblptru may be non-zero
 10185   00386C                     	endif
 10186   00386C  0008               	tblrd		*
 10187   00386E  50F5               	movf	tablat,w,c
 10188   003870  0A73               	xorlw	115
 10189   003872  A4D8               	btfss	status,2,c
 10190   003874  EF3E  F01C         	goto	u9171
 10191   003878  EF40  F01C         	goto	u9170
 10192   00387C                     u9171:
 10193   00387C  EF4A  F01C         	goto	l7060
 10194   003880                     u9170:
 10195   003880                     
 10196                           ; BSR set to: 0
 10197                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 10198   003880  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10199   003882  6ED9               	movwf	fsr2l,c
 10200   003884  6ADA               	clrf	fsr2h,c
 10201   003886  2ADE               	incf	postinc2,f,c
 10202   003888  0E00               	movlw	0
 10203   00388A  22DD               	addwfc	postdec2,f,c
 10204   00388C                     l7058:
 10205                           
 10206                           ; BSR set to: 0
 10207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 10208   00388C  0E01               	movlw	1
 10209   00388E  6FA2               	movwf	vfpfcnvrt@done& (0+255),b
 10210                           
 10211                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1660:   }
 10212   003890  EF96  F01C         	goto	l7070
 10213   003894                     l7060:
 10214                           
 10215                           ; BSR set to: 0
 10216   003894  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10217   003896  6ED9               	movwf	fsr2l,c
 10218   003898  6ADA               	clrf	fsr2h,c
 10219   00389A  CFDE FFF6          	movff	postinc2,tblptrl
 10220   00389E  CFDD FFF7          	movff	postdec2,tblptrh
 10221   0038A2                     	if	0	;tblptru may be non-zero
 10222   0038A2                     	endif
 10223   0038A2                     	if	0	;tblptru may be non-zero
 10224   0038A2                     	endif
 10225   0038A2  0008               	tblrd		*
 10226   0038A4  50F5               	movf	tablat,w,c
 10227   0038A6  0A6C               	xorlw	108
 10228   0038A8  A4D8               	btfss	status,2,c
 10229   0038AA  EF59  F01C         	goto	u9181
 10230   0038AE  EF5B  F01C         	goto	u9180
 10231   0038B2                     u9181:
 10232   0038B2  EF96  F01C         	goto	l7070
 10233   0038B6                     u9180:
 10234   0038B6                     
 10235                           ; BSR set to: 0
 10236   0038B6  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10237   0038B8  6ED9               	movwf	fsr2l,c
 10238   0038BA  6ADA               	clrf	fsr2h,c
 10239   0038BC  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10240   0038C0  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10241   0038C4  0E01               	movlw	1
 10242   0038C6  27A0               	addwf	??_vfpfcnvrt& (0+255),f,b
 10243   0038C8  0E00               	movlw	0
 10244   0038CA  23A1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10245   0038CC  C0A0  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10246   0038D0  C0A1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10247   0038D4                     	if	0	;tblptru may be non-zero
 10248   0038D4                     	endif
 10249   0038D4                     	if	0	;tblptru may be non-zero
 10250   0038D4                     	endif
 10251   0038D4  0008               	tblrd		*
 10252   0038D6  50F5               	movf	tablat,w,c
 10253   0038D8  0A6C               	xorlw	108
 10254   0038DA  A4D8               	btfss	status,2,c
 10255   0038DC  EF72  F01C         	goto	u9191
 10256   0038E0  EF74  F01C         	goto	u9190
 10257   0038E4                     u9191:
 10258   0038E4  EF96  F01C         	goto	l7070
 10259   0038E8                     u9190:
 10260   0038E8                     
 10261                           ; BSR set to: 0
 10262   0038E8  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10263   0038EA  6ED9               	movwf	fsr2l,c
 10264   0038EC  6ADA               	clrf	fsr2h,c
 10265   0038EE  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10266   0038F2  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10267   0038F6  0E02               	movlw	2
 10268   0038F8  27A0               	addwf	??_vfpfcnvrt& (0+255),f,b
 10269   0038FA  0E00               	movlw	0
 10270   0038FC  23A1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10271   0038FE  C0A0  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10272   003902  C0A1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10273   003906                     	if	0	;tblptru may be non-zero
 10274   003906                     	endif
 10275   003906                     	if	0	;tblptru may be non-zero
 10276   003906                     	endif
 10277   003906  0008               	tblrd		*
 10278   003908  50F5               	movf	tablat,w,c
 10279   00390A  0A73               	xorlw	115
 10280   00390C  A4D8               	btfss	status,2,c
 10281   00390E  EF8B  F01C         	goto	u9201
 10282   003912  EF8D  F01C         	goto	u9200
 10283   003916                     u9201:
 10284   003916  EF96  F01C         	goto	l7070
 10285   00391A                     u9200:
 10286   00391A                     
 10287                           ; BSR set to: 0
 10288                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 10289   00391A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10290   00391C  6ED9               	movwf	fsr2l,c
 10291   00391E  6ADA               	clrf	fsr2h,c
 10292   003920  0E03               	movlw	3
 10293   003922  26DE               	addwf	postinc2,f,c
 10294   003924  0E00               	movlw	0
 10295   003926  22DD               	addwfc	postdec2,f,c
 10296   003928  EF46  F01C         	goto	l7058
 10297   00392C                     l7070:
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 10301   00392C  51A2               	movf	vfpfcnvrt@done& (0+255),w,b
 10302   00392E  B4D8               	btfsc	status,2,c
 10303   003930  EF9C  F01C         	goto	u9211
 10304   003934  EF9E  F01C         	goto	u9210
 10305   003938                     u9211:
 10306   003938  EFB1  F01C         	goto	l7076
 10307   00393C                     u9210:
 10308   00393C                     
 10309                           ; BSR set to: 0
 10310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 10311   00393C  C09C  F009         	movff	vfpfcnvrt@fp,stoa@fp
 10312   003940  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10313   003944  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10314   003948  0E02               	movlw	2
 10315   00394A  26DF               	addwf	indf2,f,c
 10316   00394C  5CDF               	subwf	indf2,w,c
 10317   00394E  6ED9               	movwf	fsr2l,c
 10318   003950  6ADA               	clrf	fsr2h,c
 10319   003952  CFDE F00A          	movff	postinc2,stoa@s
 10320   003956  CFDE F00B          	movff	postinc2,stoa@s+1
 10321   00395A  EC5C  F030         	call	_stoa	;wreg free
 10322   00395E  EF6A  F01D         	goto	l1105
 10323   003962                     l7076:
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 10327   003962  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10328   003964  6ED9               	movwf	fsr2l,c
 10329   003966  6ADA               	clrf	fsr2h,c
 10330   003968  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
 10331   00396C  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
 10332   003970                     
 10333                           ; BSR set to: 0
 10334                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 10335   003970  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10336   003974  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10337   003978                     	if	0	;tblptru may be non-zero
 10338   003978                     	endif
 10339   003978                     	if	0	;tblptru may be non-zero
 10340   003978                     	endif
 10341   003978  0008               	tblrd		*
 10342   00397A  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
 10343                           
 10344                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 10345   00397E  EFCC  F01C         	goto	l7086
 10346   003982                     l7080:
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 10350   003982  4BA8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 10351   003984  2BA9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 10352                           
 10353                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
 10354   003986  EFDB  F01C         	goto	l7088
 10355   00398A                     l7082:
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 10359   00398A  0E6C               	movlw	108
 10360   00398C  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
 10361                           
 10362                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
 10363   00398E  EFDB  F01C         	goto	l7088
 10364   003992                     l1125:
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 10368   003992  6BA7               	clrf	vfpfcnvrt@c& (0+255),b
 10369                           
 10370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
 10371   003994  EFDB  F01C         	goto	l7088
 10372   003998                     l7086:
 10373                           
 10374                           ; BSR set to: 0
 10375   003998  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10376                           
 10377                           ; Switch size 1, requested type "simple"
 10378                           ; Number of cases is 3, Range of values is 76 to 108
 10379                           ; switch strategies available:
 10380                           ; Name         Instructions Cycles
 10381                           ; simple_byte           10     6 (average)
 10382                           ;	Chosen strategy is simple_byte
 10383   00399A  0A4C               	xorlw	76	; case 76
 10384   00399C  B4D8               	btfsc	status,2,c
 10385   00399E  EFC1  F01C         	goto	l7080
 10386   0039A2  0A2A               	xorlw	42	; case 102
 10387   0039A4  B4D8               	btfsc	status,2,c
 10388   0039A6  EFC5  F01C         	goto	l7082
 10389   0039AA  0A0A               	xorlw	10	; case 108
 10390   0039AC  B4D8               	btfsc	status,2,c
 10391   0039AE  EFC1  F01C         	goto	l7080
 10392   0039B2  EFC9  F01C         	goto	l1125
 10393   0039B6                     l7088:
 10394                           
 10395                           ; BSR set to: 0
 10396   0039B6  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10397   0039BA  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10398   0039BE                     	if	0	;tblptru may be non-zero
 10399   0039BE                     	endif
 10400   0039BE                     	if	0	;tblptru may be non-zero
 10401   0039BE                     	endif
 10402   0039BE  0008               	tblrd		*
 10403   0039C0  50F5               	movf	tablat,w,c
 10404   0039C2  0A66               	xorlw	102
 10405   0039C4  A4D8               	btfss	status,2,c
 10406   0039C6  EFE7  F01C         	goto	u9221
 10407   0039CA  EFE9  F01C         	goto	u9220
 10408   0039CE                     u9221:
 10409   0039CE  EF50  F01D         	goto	l7108
 10410   0039D2                     u9220:
 10411   0039D2  EF15  F01D         	goto	l7096
 10412   0039D6                     l7090:
 10413                           
 10414                           ; BSR set to: 0
 10415                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10416   0039D6  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10417   0039DA  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10418   0039DE  CFDF F0A0          	movff	indf2,??_vfpfcnvrt
 10419   0039E2  0E04               	movlw	4
 10420   0039E4  26DF               	addwf	indf2,f,c
 10421   0039E6  51A0               	movf	??_vfpfcnvrt& (0+255),w,b
 10422   0039E8  6ED9               	movwf	fsr2l,c
 10423   0039EA  6ADA               	clrf	fsr2h,c
 10424   0039EC  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10425   0039F0  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10426   0039F4  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10427   0039F8  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10428                           
 10429                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
 10430   0039FC  EF20  F01D         	goto	l7098
 10431   003A00                     l7092:
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 10435   003A00  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10436   003A04  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10437   003A08  CFDF F0A0          	movff	indf2,??_vfpfcnvrt
 10438   003A0C  0E04               	movlw	4
 10439   003A0E  26DF               	addwf	indf2,f,c
 10440   003A10  51A0               	movf	??_vfpfcnvrt& (0+255),w,b
 10441   003A12  6ED9               	movwf	fsr2l,c
 10442   003A14  6ADA               	clrf	fsr2h,c
 10443   003A16  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10444   003A1A  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10445   003A1E  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10446   003A22  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10447                           
 10448                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
 10449   003A26  EF20  F01D         	goto	l7098
 10450   003A2A                     l7096:
 10451                           
 10452                           ; BSR set to: 0
 10453   003A2A  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10454                           
 10455                           ; Switch size 1, requested type "simple"
 10456                           ; Number of cases is 2, Range of values is 76 to 108
 10457                           ; switch strategies available:
 10458                           ; Name         Instructions Cycles
 10459                           ; simple_byte            7     4 (average)
 10460                           ;	Chosen strategy is simple_byte
 10461   003A2C  0A4C               	xorlw	76	; case 76
 10462   003A2E  B4D8               	btfsc	status,2,c
 10463   003A30  EF00  F01D         	goto	l7092
 10464   003A34  0A20               	xorlw	32	; case 108
 10465   003A36  B4D8               	btfsc	status,2,c
 10466   003A38  EFEB  F01C         	goto	l7090
 10467   003A3C  EF20  F01D         	goto	l7098
 10468   003A40                     l7098:
 10469                           
 10470                           ; BSR set to: 0
 10471                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 10472   003A40  0E01               	movlw	1
 10473   003A42  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10474   003A44  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10475   003A46  0E00               	movlw	0
 10476   003A48  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10477   003A4A  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10478   003A4C  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10479   003A4E  6ED9               	movwf	fsr2l,c
 10480   003A50  6ADA               	clrf	fsr2h,c
 10481   003A52  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10482   003A56  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10483                           
 10484                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 10485   003A5A  EF44  F01D         	goto	l7106
 10486   003A5E                     l7100:
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 10490   003A5E  C09C  F068         	movff	vfpfcnvrt@fp,efgtoa@fp
 10491   003A62  C0A3  F069         	movff	vfpfcnvrt@convarg,efgtoa@f
 10492   003A66  C0A4  F06A         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 10493   003A6A  C0A5  F06B         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 10494   003A6E  C0A6  F06C         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 10495   003A72  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10496   003A76  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10497   003A7A                     	if	0	;tblptru may be non-zero
 10498   003A7A                     	endif
 10499   003A7A                     	if	0	;tblptru may be non-zero
 10500   003A7A                     	endif
 10501   003A7A  0008               	tblrd		*
 10502   003A7C  CFF5 F06D          	movff	tablat,efgtoa@c
 10503   003A80  EC64  F012         	call	_efgtoa	;wreg free
 10504   003A84  EF6A  F01D         	goto	l1105
 10505   003A88                     l7106:
 10506                           
 10507                           ; BSR set to: 0
 10508   003A88  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10509   003A8C  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10510   003A90                     	if	0	;tblptru may be non-zero
 10511   003A90                     	endif
 10512   003A90                     	if	0	;tblptru may be non-zero
 10513   003A90                     	endif
 10514   003A90  0008               	tblrd		*
 10515   003A92  50F5               	movf	tablat,w,c
 10516                           
 10517                           ; Switch size 1, requested type "simple"
 10518                           ; Number of cases is 1, Range of values is 102 to 102
 10519                           ; switch strategies available:
 10520                           ; Name         Instructions Cycles
 10521                           ; simple_byte            4     3 (average)
 10522                           ;	Chosen strategy is simple_byte
 10523   003A94  0A66               	xorlw	102	; case 102
 10524   003A96  B4D8               	btfsc	status,2,c
 10525   003A98  EF2F  F01D         	goto	l7100
 10526   003A9C  EF50  F01D         	goto	l7108
 10527   003AA0                     l7108:
 10528                           
 10529                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 10530   003AA0  0100               	movlb	0	; () banked
 10531   003AA2  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10532   003AA4  6ED9               	movwf	fsr2l,c
 10533   003AA6  6ADA               	clrf	fsr2h,c
 10534   003AA8  2ADE               	incf	postinc2,f,c
 10535   003AAA  0E00               	movlw	0
 10536   003AAC  22DD               	addwfc	postdec2,f,c
 10537   003AAE  EF6A  F01D         	goto	l1105
 10538   003AB2                     l7112:
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 10542   003AB2  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10543   003AB4  6ED9               	movwf	fsr2l,c
 10544   003AB6  6ADA               	clrf	fsr2h,c
 10545   003AB8  CFDE FFF6          	movff	postinc2,tblptrl
 10546   003ABC  CFDD FFF7          	movff	postdec2,tblptrh
 10547   003AC0                     	if	0	;tblptru may be non-zero
 10548   003AC0                     	endif
 10549   003AC0                     	if	0	;tblptru may be non-zero
 10550   003AC0                     	endif
 10551   003AC0  0008               	tblrd		*
 10552   003AC2  50F5               	movf	tablat,w,c
 10553   003AC4  6E01               	movwf	fputc@c^0,c
 10554   003AC6  6A02               	clrf	(fputc@c+1)^0,c
 10555   003AC8  C09C  F003         	movff	vfpfcnvrt@fp,fputc@fp
 10556   003ACC  ECB8  F032         	call	_fputc	;wreg free
 10557   003AD0  EF50  F01D         	goto	l7108
 10558   003AD4                     l1105:
 10559   003AD4  0012               	return		;funcret
 10560   003AD6                     __end_of_vfpfcnvrt:
 10561                           	callstack 0
 10562                           
 10563 ;; *************** function _utoa *****************
 10564 ;; Defined at:
 10565 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 10568 ;;		 -> sprintf@f(11), 
 10569 ;;  d               4   23[COMRAM] unsigned long 
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;  i               2   31[COMRAM] int 
 10572 ;;  p               2   29[COMRAM] int 
 10573 ;;  w               2   27[COMRAM] int 
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      void 
 10576 ;; Registers used:
 10577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10583 ;;      Params:         5       0       0       0       0       0       0       0       0
 10584 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10585 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10586 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10587 ;;Total ram usage:       11 bytes
 10588 ;; Hardware stack levels used: 1
 10589 ;; Hardware stack levels required when called: 5
 10590 ;; This function calls:
 10591 ;;		___lldiv
 10592 ;;		___llmod
 10593 ;;		_pad
 10594 ;; This function is called by:
 10595 ;;		_vfpfcnvrt
 10596 ;; This function uses a non-reentrant model
 10597 ;;
 10598                           
 10599                           	psect	text20
 10600   005C8A                     __ptext20:
 10601                           	callstack 0
 10602   005C8A                     _utoa:
 10603                           	callstack 21
 10604   005C8A                     
 10605                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
 10606   005C8A  0102               	movlb	2	; () banked
 10607   005C8C  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 10608   005C8E  EF4D  F02E         	goto	u9060
 10609   005C92  EF4B  F02E         	goto	u9061
 10610   005C96                     u9061:
 10611   005C96  EF53  F02E         	goto	l1070
 10612   005C9A                     u9060:
 10613   005C9A                     
 10614                           ; BSR set to: 2
 10615   005C9A  0E00               	movlw	0
 10616   005C9C  6E1F               	movwf	(utoa@p+1)^0,c
 10617   005C9E  0E01               	movlw	1
 10618   005CA0  6E1E               	movwf	utoa@p^0,c
 10619   005CA2  EF57  F02E         	goto	l1072
 10620   005CA6                     l1070:
 10621                           
 10622                           ; BSR set to: 2
 10623   005CA6  C2FE  F01E         	movff	_prec,utoa@p
 10624   005CAA  C2FF  F01F         	movff	_prec+1,utoa@p+1
 10625   005CAE                     l1072:
 10626                           
 10627                           ; BSR set to: 2
 10628                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 10629   005CAE  C34A  F01C         	movff	_width,utoa@w
 10630   005CB2  C34B  F01D         	movff	_width+1,utoa@w+1
 10631   005CB6                     
 10632                           ; BSR set to: 2
 10633                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 10634   005CB6  0E00               	movlw	0
 10635   005CB8  6E21               	movwf	(utoa@i+1)^0,c
 10636   005CBA  0E4F               	movlw	79
 10637   005CBC  6E20               	movwf	utoa@i^0,c
 10638   005CBE                     
 10639                           ; BSR set to: 2
 10640                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 10641   005CBE  0103               	movlb	3	; () banked
 10642   005CC0  6BA9               	clrf	(_dbuf+79)& (0+255),b
 10643                           
 10644                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10645   005CC2  EFA1  F02E         	goto	l6966
 10646   005CC6                     l6956:
 10647                           
 10648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 10649   005CC6  0620               	decf	utoa@i^0,f,c
 10650   005CC8  A0D8               	btfss	status,0,c
 10651   005CCA  0621               	decf	(utoa@i+1)^0,f,c
 10652   005CCC                     
 10653                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 10654   005CCC  0E5A               	movlw	low _dbuf
 10655   005CCE  2420               	addwf	utoa@i^0,w,c
 10656   005CD0  6ED9               	movwf	fsr2l,c
 10657   005CD2  0E03               	movlw	high _dbuf
 10658   005CD4  2021               	addwfc	(utoa@i+1)^0,w,c
 10659   005CD6  6EDA               	movwf	fsr2h,c
 10660   005CD8  C018  F001         	movff	utoa@d,___llmod@dividend
 10661   005CDC  C019  F002         	movff	utoa@d+1,___llmod@dividend+1
 10662   005CE0  C01A  F003         	movff	utoa@d+2,___llmod@dividend+2
 10663   005CE4  C01B  F004         	movff	utoa@d+3,___llmod@dividend+3
 10664   005CE8  0E0A               	movlw	10
 10665   005CEA  6E05               	movwf	___llmod@divisor^0,c
 10666   005CEC  0E00               	movlw	0
 10667   005CEE  6E06               	movwf	(___llmod@divisor+1)^0,c
 10668   005CF0  0E00               	movlw	0
 10669   005CF2  6E07               	movwf	(___llmod@divisor+2)^0,c
 10670   005CF4  0E00               	movlw	0
 10671   005CF6  6E08               	movwf	(___llmod@divisor+3)^0,c
 10672   005CF8  ECB3  F034         	call	___llmod	;wreg free
 10673   005CFC  5001               	movf	?___llmod^0,w,c
 10674   005CFE  0F30               	addlw	48
 10675   005D00  6EDF               	movwf	indf2,c
 10676   005D02                     
 10677                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
 10678   005D02  061E               	decf	utoa@p^0,f,c
 10679   005D04  A0D8               	btfss	status,0,c
 10680   005D06  061F               	decf	(utoa@p+1)^0,f,c
 10681   005D08                     
 10682                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 10683   005D08  061C               	decf	utoa@w^0,f,c
 10684   005D0A  A0D8               	btfss	status,0,c
 10685   005D0C  061D               	decf	(utoa@w+1)^0,f,c
 10686   005D0E                     
 10687                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 10688   005D0E  C018  F001         	movff	utoa@d,___lldiv@dividend
 10689   005D12  C019  F002         	movff	utoa@d+1,___lldiv@dividend+1
 10690   005D16  C01A  F003         	movff	utoa@d+2,___lldiv@dividend+2
 10691   005D1A  C01B  F004         	movff	utoa@d+3,___lldiv@dividend+3
 10692   005D1E  0E0A               	movlw	10
 10693   005D20  6E05               	movwf	___lldiv@divisor^0,c
 10694   005D22  0E00               	movlw	0
 10695   005D24  6E06               	movwf	(___lldiv@divisor+1)^0,c
 10696   005D26  0E00               	movlw	0
 10697   005D28  6E07               	movwf	(___lldiv@divisor+2)^0,c
 10698   005D2A  0E00               	movlw	0
 10699   005D2C  6E08               	movwf	(___lldiv@divisor+3)^0,c
 10700   005D2E  EC17  F034         	call	___lldiv	;wreg free
 10701   005D32  C001  F018         	movff	?___lldiv,utoa@d
 10702   005D36  C002  F019         	movff	?___lldiv+1,utoa@d+1
 10703   005D3A  C003  F01A         	movff	?___lldiv+2,utoa@d+2
 10704   005D3E  C004  F01B         	movff	?___lldiv+3,utoa@d+3
 10705   005D42                     l6966:
 10706                           
 10707                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10708   005D42  5020               	movf	utoa@i^0,w,c
 10709   005D44  1021               	iorwf	(utoa@i+1)^0,w,c
 10710   005D46  B4D8               	btfsc	status,2,c
 10711   005D48  EFA8  F02E         	goto	u9071
 10712   005D4C  EFAA  F02E         	goto	u9070
 10713   005D50                     u9071:
 10714   005D50  EFC2  F02E         	goto	l6972
 10715   005D54                     u9070:
 10716   005D54  5018               	movf	utoa@d^0,w,c
 10717   005D56  1019               	iorwf	(utoa@d+1)^0,w,c
 10718   005D58  101A               	iorwf	(utoa@d+2)^0,w,c
 10719   005D5A  101B               	iorwf	(utoa@d+3)^0,w,c
 10720   005D5C  A4D8               	btfss	status,2,c
 10721   005D5E  EFB3  F02E         	goto	u9081
 10722   005D62  EFB5  F02E         	goto	u9080
 10723   005D66                     u9081:
 10724   005D66  EF63  F02E         	goto	l6956
 10725   005D6A                     u9080:
 10726   005D6A  BE1F               	btfsc	(utoa@p+1)^0,7,c
 10727   005D6C  EFC2  F02E         	goto	u9090
 10728   005D70  501F               	movf	(utoa@p+1)^0,w,c
 10729   005D72  E106               	bnz	u9091
 10730   005D74  041E               	decf	utoa@p^0,w,c
 10731   005D76  B0D8               	btfsc	status,0,c
 10732   005D78  EFC0  F02E         	goto	u9091
 10733   005D7C  EFC2  F02E         	goto	u9090
 10734   005D80                     u9091:
 10735   005D80  EF63  F02E         	goto	l6956
 10736   005D84                     u9090:
 10737   005D84                     l6972:
 10738                           
 10739                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 10740   005D84  C017  F00F         	movff	utoa@fp,pad@fp
 10741   005D88  0E5A               	movlw	low _dbuf
 10742   005D8A  2420               	addwf	utoa@i^0,w,c
 10743   005D8C  6E10               	movwf	pad@buf^0,c
 10744   005D8E  0E03               	movlw	high _dbuf
 10745   005D90  2021               	addwfc	(utoa@i+1)^0,w,c
 10746   005D92  6E11               	movwf	(pad@buf+1)^0,c
 10747   005D94  C01C  F012         	movff	utoa@w,pad@p
 10748   005D98  C01D  F013         	movff	utoa@w+1,pad@p+1
 10749   005D9C  EC32  F035         	call	_pad	;wreg free
 10750   005DA0  0012               	return		;funcret
 10751   005DA2                     __end_of_utoa:
 10752                           	callstack 0
 10753                           
 10754 ;; *************** function ___llmod *****************
 10755 ;; Defined at:
 10756 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\llmod.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;  dividend        4    0[COMRAM] unsigned long 
 10759 ;;  divisor         4    4[COMRAM] unsigned long 
 10760 ;; Auto vars:     Size  Location     Type
 10761 ;;  counter         1    8[COMRAM] unsigned char 
 10762 ;; Return value:  Size  Location     Type
 10763 ;;                  4    0[COMRAM] unsigned long 
 10764 ;; Registers used:
 10765 ;;		wreg, status,2, status,0
 10766 ;; Tracked objects:
 10767 ;;		On entry : 0/0
 10768 ;;		On exit  : 0/0
 10769 ;;		Unchanged: 0/0
 10770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10771 ;;      Params:         8       0       0       0       0       0       0       0       0
 10772 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10773 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10774 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10775 ;;Total ram usage:        9 bytes
 10776 ;; Hardware stack levels used: 1
 10777 ;; Hardware stack levels required when called: 1
 10778 ;; This function calls:
 10779 ;;		Nothing
 10780 ;; This function is called by:
 10781 ;;		_utoa
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           	psect	text21
 10786   006966                     __ptext21:
 10787                           	callstack 0
 10788   006966                     ___llmod:
 10789                           	callstack 24
 10790   006966  5005               	movf	___llmod@divisor^0,w,c
 10791   006968  1006               	iorwf	(___llmod@divisor+1)^0,w,c
 10792   00696A  1007               	iorwf	(___llmod@divisor+2)^0,w,c
 10793   00696C  1008               	iorwf	(___llmod@divisor+3)^0,w,c
 10794   00696E  B4D8               	btfsc	status,2,c
 10795   006970  EFBC  F034         	goto	u8331
 10796   006974  EFBE  F034         	goto	u8330
 10797   006978                     u8331:
 10798   006978  EFEE  F034         	goto	l693
 10799   00697C                     u8330:
 10800   00697C  0E01               	movlw	1
 10801   00697E  6E09               	movwf	___llmod@counter^0,c
 10802   006980  EFC8  F034         	goto	l6566
 10803   006984                     l6564:
 10804   006984  90D8               	bcf	status,0,c
 10805   006986  3605               	rlcf	___llmod@divisor^0,f,c
 10806   006988  3606               	rlcf	(___llmod@divisor+1)^0,f,c
 10807   00698A  3607               	rlcf	(___llmod@divisor+2)^0,f,c
 10808   00698C  3608               	rlcf	(___llmod@divisor+3)^0,f,c
 10809   00698E  2A09               	incf	___llmod@counter^0,f,c
 10810   006990                     l6566:
 10811   006990  AE08               	btfss	(___llmod@divisor+3)^0,7,c
 10812   006992  EFCD  F034         	goto	u8341
 10813   006996  EFCF  F034         	goto	u8340
 10814   00699A                     u8341:
 10815   00699A  EFC2  F034         	goto	l6564
 10816   00699E                     u8340:
 10817   00699E                     l6568:
 10818   00699E  5005               	movf	___llmod@divisor^0,w,c
 10819   0069A0  5C01               	subwf	___llmod@dividend^0,w,c
 10820   0069A2  5006               	movf	(___llmod@divisor+1)^0,w,c
 10821   0069A4  5802               	subwfb	(___llmod@dividend+1)^0,w,c
 10822   0069A6  5007               	movf	(___llmod@divisor+2)^0,w,c
 10823   0069A8  5803               	subwfb	(___llmod@dividend+2)^0,w,c
 10824   0069AA  5008               	movf	(___llmod@divisor+3)^0,w,c
 10825   0069AC  5804               	subwfb	(___llmod@dividend+3)^0,w,c
 10826   0069AE  A0D8               	btfss	status,0,c
 10827   0069B0  EFDC  F034         	goto	u8351
 10828   0069B4  EFDE  F034         	goto	u8350
 10829   0069B8                     u8351:
 10830   0069B8  EFE6  F034         	goto	l6572
 10831   0069BC                     u8350:
 10832   0069BC  5005               	movf	___llmod@divisor^0,w,c
 10833   0069BE  5E01               	subwf	___llmod@dividend^0,f,c
 10834   0069C0  5006               	movf	(___llmod@divisor+1)^0,w,c
 10835   0069C2  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
 10836   0069C4  5007               	movf	(___llmod@divisor+2)^0,w,c
 10837   0069C6  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
 10838   0069C8  5008               	movf	(___llmod@divisor+3)^0,w,c
 10839   0069CA  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
 10840   0069CC                     l6572:
 10841   0069CC  90D8               	bcf	status,0,c
 10842   0069CE  3208               	rrcf	(___llmod@divisor+3)^0,f,c
 10843   0069D0  3207               	rrcf	(___llmod@divisor+2)^0,f,c
 10844   0069D2  3206               	rrcf	(___llmod@divisor+1)^0,f,c
 10845   0069D4  3205               	rrcf	___llmod@divisor^0,f,c
 10846   0069D6  2E09               	decfsz	___llmod@counter^0,f,c
 10847   0069D8  EFCF  F034         	goto	l6568
 10848   0069DC                     l693:
 10849   0069DC  C001  F001         	movff	___llmod@dividend,?___llmod
 10850   0069E0  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 10851   0069E4  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 10852   0069E8  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 10853   0069EC  0012               	return		;funcret
 10854   0069EE                     __end_of___llmod:
 10855                           	callstack 0
 10856                           
 10857 ;; *************** function ___lldiv *****************
 10858 ;; Defined at:
 10859 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;  dividend        4    0[COMRAM] unsigned long 
 10862 ;;  divisor         4    4[COMRAM] unsigned long 
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;  quotient        4    8[COMRAM] unsigned long 
 10865 ;;  counter         1   12[COMRAM] unsigned char 
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  4    0[COMRAM] unsigned long 
 10868 ;; Registers used:
 10869 ;;		wreg, status,2, status,0
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10875 ;;      Params:         8       0       0       0       0       0       0       0       0
 10876 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10877 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10878 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10879 ;;Total ram usage:       13 bytes
 10880 ;; Hardware stack levels used: 1
 10881 ;; Hardware stack levels required when called: 1
 10882 ;; This function calls:
 10883 ;;		Nothing
 10884 ;; This function is called by:
 10885 ;;		_Handle_Fire_Events
 10886 ;;		_utoa
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890                           	psect	text22
 10891   00682E                     __ptext22:
 10892                           	callstack 0
 10893   00682E                     ___lldiv:
 10894                           	callstack 24
 10895   00682E  0E00               	movlw	0
 10896   006830  6E09               	movwf	___lldiv@quotient^0,c
 10897   006832  0E00               	movlw	0
 10898   006834  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 10899   006836  0E00               	movlw	0
 10900   006838  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 10901   00683A  0E00               	movlw	0
 10902   00683C  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 10903   00683E  5005               	movf	___lldiv@divisor^0,w,c
 10904   006840  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 10905   006842  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 10906   006844  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 10907   006846  B4D8               	btfsc	status,2,c
 10908   006848  EF28  F034         	goto	u7601
 10909   00684C  EF2A  F034         	goto	u7600
 10910   006850                     u7601:
 10911   006850  EF60  F034         	goto	l300
 10912   006854                     u7600:
 10913   006854  0E01               	movlw	1
 10914   006856  6E0D               	movwf	___lldiv@counter^0,c
 10915   006858  EF34  F034         	goto	l6106
 10916   00685C                     l6104:
 10917   00685C  90D8               	bcf	status,0,c
 10918   00685E  3605               	rlcf	___lldiv@divisor^0,f,c
 10919   006860  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 10920   006862  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 10921   006864  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 10922   006866  2A0D               	incf	___lldiv@counter^0,f,c
 10923   006868                     l6106:
 10924   006868  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 10925   00686A  EF39  F034         	goto	u7611
 10926   00686E  EF3B  F034         	goto	u7610
 10927   006872                     u7611:
 10928   006872  EF2E  F034         	goto	l6104
 10929   006876                     u7610:
 10930   006876                     l6108:
 10931   006876  90D8               	bcf	status,0,c
 10932   006878  3609               	rlcf	___lldiv@quotient^0,f,c
 10933   00687A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 10934   00687C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 10935   00687E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 10936   006880  5005               	movf	___lldiv@divisor^0,w,c
 10937   006882  5C01               	subwf	___lldiv@dividend^0,w,c
 10938   006884  5006               	movf	(___lldiv@divisor+1)^0,w,c
 10939   006886  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 10940   006888  5007               	movf	(___lldiv@divisor+2)^0,w,c
 10941   00688A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 10942   00688C  5008               	movf	(___lldiv@divisor+3)^0,w,c
 10943   00688E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 10944   006890  A0D8               	btfss	status,0,c
 10945   006892  EF4D  F034         	goto	u7621
 10946   006896  EF4F  F034         	goto	u7620
 10947   00689A                     u7621:
 10948   00689A  EF58  F034         	goto	l6116
 10949   00689E                     u7620:
 10950   00689E  5005               	movf	___lldiv@divisor^0,w,c
 10951   0068A0  5E01               	subwf	___lldiv@dividend^0,f,c
 10952   0068A2  5006               	movf	(___lldiv@divisor+1)^0,w,c
 10953   0068A4  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 10954   0068A6  5007               	movf	(___lldiv@divisor+2)^0,w,c
 10955   0068A8  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 10956   0068AA  5008               	movf	(___lldiv@divisor+3)^0,w,c
 10957   0068AC  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 10958   0068AE  8009               	bsf	___lldiv@quotient^0,0,c
 10959   0068B0                     l6116:
 10960   0068B0  90D8               	bcf	status,0,c
 10961   0068B2  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 10962   0068B4  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 10963   0068B6  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 10964   0068B8  3205               	rrcf	___lldiv@divisor^0,f,c
 10965   0068BA  2E0D               	decfsz	___lldiv@counter^0,f,c
 10966   0068BC  EF3B  F034         	goto	l6108
 10967   0068C0                     l300:
 10968   0068C0  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10969   0068C4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10970   0068C8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10971   0068CC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10972   0068D0  0012               	return		;funcret
 10973   0068D2                     __end_of___lldiv:
 10974                           	callstack 0
 10975                           
 10976 ;; *************** function _stoa *****************
 10977 ;; Defined at:
 10978 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
 10981 ;;		 -> sprintf@f(11), 
 10982 ;;  s               2    9[COMRAM] PTR unsigned char 
 10983 ;;		 -> ?_sprintf(2), STR_15(1), STR_14(7), STR_13(1), 
 10984 ;;		 -> STR_12(9), STR_11(9), Handle_Test_Events@test_data(50), STR_9(1), 
 10985 ;;		 -> STR_8(11), STR_7(9), Handle_Fire_Events@end_data(150), STR_5(11), 
 10986 ;;		 -> Handle_Fire_Events@start_data(100), fire_trigger_sensor(20), 
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;  l               2   17[COMRAM] int 
 10989 ;;  cp              2   15[COMRAM] PTR unsigned char 
 10990 ;;		 -> STR_24(7), ?_sprintf(2), STR_15(1), STR_14(7), 
 10991 ;;		 -> STR_13(1), STR_12(9), STR_11(9), Handle_Test_Events@test_data(50), 
 10992 ;;		 -> STR_9(1), STR_8(11), STR_7(9), Handle_Fire_Events@end_data(150), 
 10993 ;;		 -> STR_5(11), Handle_Fire_Events@start_data(100), fire_trigger_sensor(20), 
 10994 ;;  p               2   13[COMRAM] int 
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  1    wreg      void 
 10997 ;; Registers used:
 10998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11004 ;;      Params:         3       0       0       0       0       0       0       0       0
 11005 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11006 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11007 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11008 ;;Total ram usage:       11 bytes
 11009 ;; Hardware stack levels used: 1
 11010 ;; Hardware stack levels required when called: 3
 11011 ;; This function calls:
 11012 ;;		_fputc
 11013 ;; This function is called by:
 11014 ;;		_vfpfcnvrt
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           	psect	text23
 11019   0060B8                     __ptext23:
 11020                           	callstack 0
 11021   0060B8                     _stoa:
 11022                           	callstack 23
 11023   0060B8                     
 11024                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 951
      +                          :     cp = s;
 11025   0060B8  C00A  F010         	movff	stoa@s,stoa@cp
 11026   0060BC  C00B  F011         	movff	stoa@s+1,stoa@cp+1
 11027                           
 11028                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 11029   0060C0  5010               	movf	stoa@cp^0,w,c
 11030   0060C2  1011               	iorwf	(stoa@cp+1)^0,w,c
 11031   0060C4  A4D8               	btfss	status,2,c
 11032   0060C6  EF67  F030         	goto	u8991
 11033   0060CA  EF69  F030         	goto	u8990
 11034   0060CE                     u8991:
 11035   0060CE  EF6D  F030         	goto	l6930
 11036   0060D2                     u8990:
 11037   0060D2                     
 11038                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 11039   0060D2  0EE9               	movlw	low STR_24
 11040   0060D4  6E10               	movwf	stoa@cp^0,c
 11041   0060D6  0E7F               	movlw	high STR_24
 11042   0060D8  6E11               	movwf	(stoa@cp+1)^0,c
 11043   0060DA                     l6930:
 11044                           
 11045                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 11046   0060DA  0E00               	movlw	0
 11047   0060DC  6E13               	movwf	(stoa@l+1)^0,c
 11048   0060DE  0E00               	movlw	0
 11049   0060E0  6E12               	movwf	stoa@l^0,c
 11050   0060E2  EF75  F030         	goto	l6934
 11051   0060E6                     l6932:
 11052   0060E6  4A12               	infsnz	stoa@l^0,f,c
 11053   0060E8  2A13               	incf	(stoa@l+1)^0,f,c
 11054   0060EA                     l6934:
 11055   0060EA  5012               	movf	stoa@l^0,w,c
 11056   0060EC  2410               	addwf	stoa@cp^0,w,c
 11057   0060EE  6E0C               	movwf	??_stoa^0,c
 11058   0060F0  5013               	movf	(stoa@l+1)^0,w,c
 11059   0060F2  2011               	addwfc	(stoa@cp+1)^0,w,c
 11060   0060F4  6E0D               	movwf	(??_stoa+1)^0,c
 11061   0060F6  C00C  FFF6         	movff	??_stoa,tblptrl
 11062   0060FA  C00D  FFF7         	movff	??_stoa+1,tblptrh
 11063   0060FE  6AF8               	clrf	tblptru,c
 11064   006100  0E07               	movlw	(high __ramtop+-1)
 11065   006102  64F7               	cpfsgt	tblptrh,c
 11066   006104  D003               	bra	u9007
 11067   006106  0008               	tblrd		*
 11068   006108  50F5               	movf	tablat,w,c
 11069   00610A  D005               	bra	u9000
 11070   00610C                     u9007:
 11071   00610C  CFF6 FFE1          	movff	tblptrl,fsr1l
 11072   006110  CFF7 FFE2          	movff	tblptrh,fsr1h
 11073   006114  50E7               	movf	indf1,w,c
 11074   006116                     u9000:
 11075   006116  0900               	iorlw	0
 11076   006118  A4D8               	btfss	status,2,c
 11077   00611A  EF91  F030         	goto	u9011
 11078   00611E  EF93  F030         	goto	u9010
 11079   006122                     u9011:
 11080   006122  EF73  F030         	goto	l6932
 11081   006126                     u9010:
 11082   006126                     
 11083                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 11084   006126  0102               	movlb	2	; () banked
 11085   006128  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 11086   00612A  EF99  F030         	goto	u9021
 11087   00612E  EF9B  F030         	goto	u9020
 11088   006132                     u9021:
 11089   006132  EFAE  F030         	goto	l1062
 11090   006136                     u9020:
 11091   006136                     
 11092                           ; BSR set to: 2
 11093   006136  5012               	movf	stoa@l^0,w,c
 11094   006138  5DFE               	subwf	_prec& (0+255),w,b
 11095   00613A  51FF               	movf	(_prec+1)& (0+255),w,b
 11096   00613C  0A80               	xorlw	128
 11097   00613E  6E0C               	movwf	??_stoa^0,c
 11098   006140  5013               	movf	(stoa@l+1)^0,w,c
 11099   006142  0A80               	xorlw	128
 11100   006144  580C               	subwfb	??_stoa^0,w,c
 11101   006146  B0D8               	btfsc	status,0,c
 11102   006148  EFA8  F030         	goto	u9031
 11103   00614C  EFAA  F030         	goto	u9030
 11104   006150                     u9031:
 11105   006150  EFAE  F030         	goto	l1062
 11106   006154                     u9030:
 11107   006154                     
 11108                           ; BSR set to: 2
 11109                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 11110   006154  C2FE  F012         	movff	_prec,stoa@l
 11111   006158  C2FF  F013         	movff	_prec+1,stoa@l+1
 11112   00615C                     l1062:
 11113                           
 11114                           ; BSR set to: 2
 11115                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 965:     p = l;
 11116   00615C  C012  F00E         	movff	stoa@l,stoa@p
 11117   006160  C013  F00F         	movff	stoa@l+1,stoa@p+1
 11118                           
 11119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11120   006164  EFCE  F030         	goto	l6946
 11121   006168                     l6942:
 11122                           
 11123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 11124   006168  C010  FFF6         	movff	stoa@cp,tblptrl
 11125   00616C  C011  FFF7         	movff	stoa@cp+1,tblptrh
 11126   006170  6AF8               	clrf	tblptru,c
 11127   006172  0E07               	movlw	(high __ramtop+-1)
 11128   006174  64F7               	cpfsgt	tblptrh,c
 11129   006176  D003               	bra	u9047
 11130   006178  0008               	tblrd		*
 11131   00617A  50F5               	movf	tablat,w,c
 11132   00617C  D005               	bra	u9040
 11133   00617E                     u9047:
 11134   00617E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11135   006182  CFF7 FFE2          	movff	tblptrh,fsr1h
 11136   006186  50E7               	movf	indf1,w,c
 11137   006188                     u9040:
 11138   006188  6E0C               	movwf	??_stoa^0,c
 11139   00618A  500C               	movf	??_stoa^0,w,c
 11140   00618C  6E01               	movwf	fputc@c^0,c
 11141   00618E  6A02               	clrf	(fputc@c+1)^0,c
 11142   006190  C009  F003         	movff	stoa@fp,fputc@fp
 11143   006194  ECB8  F032         	call	_fputc	;wreg free
 11144   006198                     
 11145                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 11146   006198  4A10               	infsnz	stoa@cp^0,f,c
 11147   00619A  2A11               	incf	(stoa@cp+1)^0,f,c
 11148   00619C                     l6946:
 11149                           
 11150                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11151   00619C  060E               	decf	stoa@p^0,f,c
 11152   00619E  A0D8               	btfss	status,0,c
 11153   0061A0  060F               	decf	(stoa@p+1)^0,f,c
 11154   0061A2  280E               	incf	stoa@p^0,w,c
 11155   0061A4  E106               	bnz	u9051
 11156   0061A6  280F               	incf	(stoa@p+1)^0,w,c
 11157   0061A8  A4D8               	btfss	status,2,c
 11158   0061AA  EFD9  F030         	goto	u9051
 11159   0061AE  EFDB  F030         	goto	u9050
 11160   0061B2                     u9051:
 11161   0061B2  EFB4  F030         	goto	l6942
 11162   0061B6                     u9050:
 11163   0061B6  0012               	return		;funcret
 11164   0061B8                     __end_of_stoa:
 11165                           	callstack 0
 11166                           
 11167 ;; *************** function _read_prec_or_width *****************
 11168 ;; Defined at:
 11169 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
 11172 ;;		 -> vfprintf@cfmt(2), 
 11173 ;;  ap              1    1[COMRAM] PTR PTR void [1]
 11174 ;;		 -> sprintf@ap(1), 
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;  c               1    4[COMRAM] unsigned char 
 11177 ;;  n               2    5[COMRAM] int 
 11178 ;; Return value:  Size  Location     Type
 11179 ;;                  2    0[COMRAM] int 
 11180 ;; Registers used:
 11181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11182 ;; Tracked objects:
 11183 ;;		On entry : 0/0
 11184 ;;		On exit  : 0/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11187 ;;      Params:         2       0       0       0       0       0       0       0       0
 11188 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11189 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11190 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11191 ;;Total ram usage:        7 bytes
 11192 ;; Hardware stack levels used: 1
 11193 ;; Hardware stack levels required when called: 1
 11194 ;; This function calls:
 11195 ;;		Nothing
 11196 ;; This function is called by:
 11197 ;;		_vfpfcnvrt
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           	psect	text24
 11202   0066D8                     __ptext24:
 11203                           	callstack 0
 11204   0066D8                     _read_prec_or_width:
 11205                           	callstack 25
 11206   0066D8                     
 11207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11208   0066D8  0E00               	movlw	0
 11209   0066DA  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11210   0066DC  0E00               	movlw	0
 11211   0066DE  6E06               	movwf	read_prec_or_width@n^0,c
 11212   0066E0                     
 11213                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11214   0066E0  5001               	movf	read_prec_or_width@fmt^0,w,c
 11215   0066E2  6ED9               	movwf	fsr2l,c
 11216   0066E4  6ADA               	clrf	fsr2h,c
 11217   0066E6  CFDE FFF6          	movff	postinc2,tblptrl
 11218   0066EA  CFDD FFF7          	movff	postdec2,tblptrh
 11219   0066EE                     	if	0	;tblptru may be non-zero
 11220   0066EE                     	endif
 11221   0066EE                     	if	0	;tblptru may be non-zero
 11222   0066EE                     	endif
 11223   0066EE  0008               	tblrd		*
 11224   0066F0  50F5               	movf	tablat,w,c
 11225   0066F2  0A2A               	xorlw	42
 11226   0066F4  A4D8               	btfss	status,2,c
 11227   0066F6  EF7F  F033         	goto	u9101
 11228   0066FA  EF81  F033         	goto	u9100
 11229   0066FE                     u9101:
 11230   0066FE  EFAA  F033         	goto	l6988
 11231   006702                     u9100:
 11232   006702                     
 11233                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11234   006702  5001               	movf	read_prec_or_width@fmt^0,w,c
 11235   006704  6ED9               	movwf	fsr2l,c
 11236   006706  6ADA               	clrf	fsr2h,c
 11237   006708  2ADE               	incf	postinc2,f,c
 11238   00670A  0E00               	movlw	0
 11239   00670C  22DD               	addwfc	postdec2,f,c
 11240   00670E                     
 11241                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11242   00670E  5002               	movf	read_prec_or_width@ap^0,w,c
 11243   006710  6ED9               	movwf	fsr2l,c
 11244   006712  6ADA               	clrf	fsr2h,c
 11245   006714  0E02               	movlw	2
 11246   006716  26DF               	addwf	indf2,f,c
 11247   006718  5CDF               	subwf	indf2,w,c
 11248   00671A  6ED9               	movwf	fsr2l,c
 11249   00671C  6ADA               	clrf	fsr2h,c
 11250   00671E  CFDE F006          	movff	postinc2,read_prec_or_width@n
 11251   006722  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
 11252                           
 11253                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11254   006726  EFBD  F033         	goto	l1082
 11255   00672A                     l6984:
 11256                           
 11257                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11258   00672A  0E0A               	movlw	10
 11259   00672C  0206               	mulwf	read_prec_or_width@n^0,c
 11260   00672E  CFF3 F003          	movff	prodl,??_read_prec_or_width
 11261   006732  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
 11262   006736  0207               	mulwf	(read_prec_or_width@n+1)^0,c
 11263   006738  50F3               	movf	prodl,w,c
 11264   00673A  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
 11265   00673C  5005               	movf	read_prec_or_width@c^0,w,c
 11266   00673E  2403               	addwf	??_read_prec_or_width^0,w,c
 11267   006740  6E06               	movwf	read_prec_or_width@n^0,c
 11268   006742  0E00               	movlw	0
 11269   006744  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
 11270   006746  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11271   006748                     
 11272                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11273   006748  5001               	movf	read_prec_or_width@fmt^0,w,c
 11274   00674A  6ED9               	movwf	fsr2l,c
 11275   00674C  6ADA               	clrf	fsr2h,c
 11276   00674E  2ADE               	incf	postinc2,f,c
 11277   006750  0E00               	movlw	0
 11278   006752  22DD               	addwfc	postdec2,f,c
 11279   006754                     l6988:
 11280                           
 11281                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11282   006754  5001               	movf	read_prec_or_width@fmt^0,w,c
 11283   006756  6ED9               	movwf	fsr2l,c
 11284   006758  6ADA               	clrf	fsr2h,c
 11285   00675A  CFDE FFF6          	movff	postinc2,tblptrl
 11286   00675E  CFDD FFF7          	movff	postdec2,tblptrh
 11287   006762                     	if	0	;tblptru may be non-zero
 11288   006762                     	endif
 11289   006762                     	if	0	;tblptru may be non-zero
 11290   006762                     	endif
 11291   006762  0008               	tblrd		*
 11292   006764  50F5               	movf	tablat,w,c
 11293   006766  0FD0               	addlw	208
 11294   006768  6E05               	movwf	read_prec_or_width@c^0,c
 11295   00676A  0E09               	movlw	9
 11296   00676C  6405               	cpfsgt	read_prec_or_width@c^0,c
 11297   00676E  EFBB  F033         	goto	u9111
 11298   006772  EFBD  F033         	goto	u9110
 11299   006776                     u9111:
 11300   006776  EF95  F033         	goto	l6984
 11301   00677A                     u9110:
 11302   00677A                     l1082:
 11303                           
 11304                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11305   00677A  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
 11306   00677E  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 11307   006782  0012               	return		;funcret
 11308   006784                     __end_of_read_prec_or_width:
 11309                           	callstack 0
 11310                           
 11311 ;; *************** function _efgtoa *****************
 11312 ;; Defined at:
 11313 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 11316 ;;		 -> sprintf@f(11), 
 11317 ;;  f               4    9[BANK0 ] PTR struct _IO_FILE
 11318 ;;  c               1   13[BANK0 ] unsigned char 
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;  u               4   56[BANK0 ] struct flui
 11321 ;;  g               4   50[BANK0 ] struct flui
 11322 ;;  l               4   45[BANK0 ] struct flui
 11323 ;;  h               4   41[BANK0 ] struct flui
 11324 ;;  ou              4   35[BANK0 ] struct flui
 11325 ;;  n               2   54[BANK0 ] int 
 11326 ;;  i               2   39[BANK0 ] int 
 11327 ;;  w               2   33[BANK0 ] int 
 11328 ;;  e               2   31[BANK0 ] int 
 11329 ;;  m               2   29[BANK0 ] int 
 11330 ;;  d               2   27[BANK0 ] int 
 11331 ;;  t               2   20[BANK0 ] int 
 11332 ;;  p               2   18[BANK0 ] int 
 11333 ;;  ne              2   16[BANK0 ] int 
 11334 ;;  sign            1   49[BANK0 ] unsigned char 
 11335 ;;  nmode           1   26[BANK0 ] unsigned char 
 11336 ;;  mode            1   25[BANK0 ] unsigned char 
 11337 ;;  pp              1   24[BANK0 ] unsigned char 
 11338 ;;  esign           1    0        unsigned char 
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  1    wreg      void 
 11341 ;; Registers used:
 11342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11348 ;;      Params:         0       6       0       0       0       0       0       0       0
 11349 ;;      Locals:         0      44       0       0       0       0       0       0       0
 11350 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11351 ;;      Totals:         0      52       0       0       0       0       0       0       0
 11352 ;;Total ram usage:       52 bytes
 11353 ;; Hardware stack levels used: 1
 11354 ;; Hardware stack levels required when called: 5
 11355 ;; This function calls:
 11356 ;;		___fladd
 11357 ;;		___fldiv
 11358 ;;		___fleq
 11359 ;;		___flge
 11360 ;;		___flmul
 11361 ;;		___flneg
 11362 ;;		___flsub
 11363 ;;		___fltol
 11364 ;;		___fpclassifyf
 11365 ;;		_floorf
 11366 ;;		_labs
 11367 ;;		_memcpy
 11368 ;;		_pad
 11369 ;;		_strcpy
 11370 ;; This function is called by:
 11371 ;;		_vfpfcnvrt
 11372 ;; This function uses a non-reentrant model
 11373 ;;
 11374                           
 11375                           	psect	text25
 11376   0024C8                     __ptext25:
 11377                           	callstack 0
 11378   0024C8                     _efgtoa:
 11379                           	callstack 21
 11380   0024C8                     
 11381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 11382   0024C8  0100               	movlb	0	; () banked
 11383   0024CA  6B91               	clrf	efgtoa@sign& (0+255),b
 11384                           
 11385                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 11386   0024CC  C069  F092         	movff	efgtoa@f,efgtoa@g
 11387   0024D0  C06A  F093         	movff	efgtoa@f+1,efgtoa@g+1
 11388   0024D4  C06B  F094         	movff	efgtoa@f+2,efgtoa@g+2
 11389   0024D8  C06C  F095         	movff	efgtoa@f+3,efgtoa@g+3
 11390   0024DC                     
 11391                           ; BSR set to: 0
 11392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 11393   0024DC  BF95               	btfsc	(efgtoa@g+3)& (0+255),7,b
 11394   0024DE  EF75  F012         	goto	u8670
 11395   0024E2  EF73  F012         	goto	u8671
 11396   0024E6                     u8671:
 11397   0024E6  EF89  F012         	goto	l6714
 11398   0024EA                     u8670:
 11399   0024EA                     
 11400                           ; BSR set to: 0
 11401                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 11402   0024EA  0E01               	movlw	1
 11403   0024EC  6F91               	movwf	efgtoa@sign& (0+255),b
 11404   0024EE                     
 11405                           ; BSR set to: 0
 11406                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 11407   0024EE  C092  F001         	movff	efgtoa@g,___flneg@f1
 11408   0024F2  C093  F002         	movff	efgtoa@g+1,___flneg@f1+1
 11409   0024F6  C094  F003         	movff	efgtoa@g+2,___flneg@f1+2
 11410   0024FA  C095  F004         	movff	efgtoa@g+3,___flneg@f1+3
 11411   0024FE  ECA3  F036         	call	___flneg	;wreg free
 11412   002502  C001  F092         	movff	?___flneg,efgtoa@g
 11413   002506  C002  F093         	movff	?___flneg+1,efgtoa@g+1
 11414   00250A  C003  F094         	movff	?___flneg+2,efgtoa@g+2
 11415   00250E  C004  F095         	movff	?___flneg+3,efgtoa@g+3
 11416   002512                     l6714:
 11417                           
 11418                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 11419   002512  0E00               	movlw	0
 11420   002514  0100               	movlb	0	; () banked
 11421   002516  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11422   002518  0E00               	movlw	0
 11423   00251A  6F96               	movwf	efgtoa@n& (0+255),b
 11424   00251C                     
 11425                           ; BSR set to: 0
 11426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 11427   00251C  C34A  F081         	movff	_width,efgtoa@w
 11428   002520  C34B  F082         	movff	_width+1,efgtoa@w+1
 11429   002524                     
 11430                           ; BSR set to: 0
 11431                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
 11432   002524  5191               	movf	efgtoa@sign& (0+255),w,b
 11433   002526  B4D8               	btfsc	status,2,c
 11434   002528  EF98  F012         	goto	u8681
 11435   00252C  EF9A  F012         	goto	u8680
 11436   002530                     u8681:
 11437   002530  EFAE  F012         	goto	l6728
 11438   002534                     u8680:
 11439   002534                     
 11440                           ; BSR set to: 0
 11441                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 11442   002534  5191               	movf	efgtoa@sign& (0+255),w,b
 11443   002536  A4D8               	btfss	status,2,c
 11444   002538  EFA0  F012         	goto	u8691
 11445   00253C  EFA2  F012         	goto	u8690
 11446   002540                     u8691:
 11447   002540  EFA8  F012         	goto	l6724
 11448   002544                     u8690:
 11449   002544                     
 11450                           ; BSR set to: 0
 11451   002544  0E00               	movlw	0
 11452   002546  6F77               	movwf	(_efgtoa$1375+1)& (0+255),b
 11453   002548  0E2B               	movlw	43
 11454   00254A  6F76               	movwf	_efgtoa$1375& (0+255),b
 11455   00254C  EFAC  F012         	goto	l6726
 11456   002550                     l6724:
 11457                           
 11458                           ; BSR set to: 0
 11459   002550  0E00               	movlw	0
 11460   002552  6F77               	movwf	(_efgtoa$1375+1)& (0+255),b
 11461   002554  0E2D               	movlw	45
 11462   002556  6F76               	movwf	_efgtoa$1375& (0+255),b
 11463   002558                     l6726:
 11464                           
 11465                           ; BSR set to: 0
 11466   002558  C076  F091         	movff	_efgtoa$1375,efgtoa@sign
 11467   00255C                     l6728:
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 11471   00255C  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
 11472   002560  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11473   002564  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11474   002568  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11475   00256C  ECDC  F030         	call	___fpclassifyf	;wreg free
 11476   002570  0401               	decf	?___fpclassifyf^0,w,c
 11477   002572  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11478   002574  A4D8               	btfss	status,2,c
 11479   002576  EFBF  F012         	goto	u8701
 11480   00257A  EFC1  F012         	goto	u8700
 11481   00257E                     u8701:
 11482   00257E  EFF2  F012         	goto	l6746
 11483   002582                     u8700:
 11484   002582                     
 11485                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 11486   002582  0100               	movlb	0	; () banked
 11487   002584  5191               	movf	efgtoa@sign& (0+255),w,b
 11488   002586  B4D8               	btfsc	status,2,c
 11489   002588  EFC8  F012         	goto	u8711
 11490   00258C  EFCA  F012         	goto	u8710
 11491   002590                     u8711:
 11492   002590  EFD3  F012         	goto	l6738
 11493   002594                     u8710:
 11494   002594                     
 11495                           ; BSR set to: 0
 11496                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 11497   002594  C091  F35A         	movff	efgtoa@sign,_dbuf
 11498   002598                     
 11499                           ; BSR set to: 0
 11500                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
 11501   002598  0781               	decf	efgtoa@w& (0+255),f,b
 11502   00259A  A0D8               	btfss	status,0,c
 11503   00259C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 11504   00259E                     
 11505                           ; BSR set to: 0
 11506                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 11507   00259E  0E00               	movlw	0
 11508   0025A0  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11509   0025A2  0E01               	movlw	1
 11510   0025A4  6F96               	movwf	efgtoa@n& (0+255),b
 11511   0025A6                     l6738:
 11512                           
 11513                           ; BSR set to: 0
 11514                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 11515   0025A6  0E5A               	movlw	low _dbuf
 11516   0025A8  2596               	addwf	efgtoa@n& (0+255),w,b
 11517   0025AA  6E01               	movwf	strcpy@dest^0,c
 11518   0025AC  0E03               	movlw	high _dbuf
 11519   0025AE  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11520   0025B0  6E02               	movwf	(strcpy@dest+1)^0,c
 11521   0025B2  0EF7               	movlw	low STR_18
 11522   0025B4  6E03               	movwf	strcpy@src^0,c
 11523   0025B6  0E7F               	movlw	high STR_18
 11524   0025B8  6E04               	movwf	(strcpy@src+1)^0,c
 11525   0025BA  EC87  F036         	call	_strcpy	;wreg free
 11526   0025BE                     l6740:
 11527                           
 11528                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 11529   0025BE  0100               	movlb	0	; () banked
 11530   0025C0  0EFD               	movlw	253
 11531   0025C2  2781               	addwf	efgtoa@w& (0+255),f,b
 11532   0025C4  0EFF               	movlw	255
 11533   0025C6  2382               	addwfc	(efgtoa@w+1)& (0+255),f,b
 11534   0025C8                     
 11535                           ; BSR set to: 0
 11536                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 11537   0025C8  C068  F00F         	movff	efgtoa@fp,pad@fp
 11538   0025CC  0E5A               	movlw	low _dbuf
 11539   0025CE  6E10               	movwf	pad@buf^0,c
 11540   0025D0  0E03               	movlw	high _dbuf
 11541   0025D2  6E11               	movwf	(pad@buf+1)^0,c
 11542   0025D4  C081  F012         	movff	efgtoa@w,pad@p
 11543   0025D8  C082  F013         	movff	efgtoa@w+1,pad@p+1
 11544   0025DC  EC32  F035         	call	_pad	;wreg free
 11545   0025E0  EF5B  F017         	goto	l1013
 11546   0025E4                     l6746:
 11547                           
 11548                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 11549   0025E4  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
 11550   0025E8  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11551   0025EC  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11552   0025F0  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11553   0025F4  ECDC  F030         	call	___fpclassifyf	;wreg free
 11554   0025F8  5001               	movf	?___fpclassifyf^0,w,c
 11555   0025FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11556   0025FC  A4D8               	btfss	status,2,c
 11557   0025FE  EF03  F013         	goto	u8721
 11558   002602  EF05  F013         	goto	u8720
 11559   002606                     u8721:
 11560   002606  EF25  F013         	goto	l6764
 11561   00260A                     u8720:
 11562   00260A                     
 11563                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 11564   00260A  0100               	movlb	0	; () banked
 11565   00260C  5191               	movf	efgtoa@sign& (0+255),w,b
 11566   00260E  B4D8               	btfsc	status,2,c
 11567   002610  EF0C  F013         	goto	u8731
 11568   002614  EF0E  F013         	goto	u8730
 11569   002618                     u8731:
 11570   002618  EF17  F013         	goto	l6756
 11571   00261C                     u8730:
 11572   00261C                     
 11573                           ; BSR set to: 0
 11574                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 11575   00261C  C091  F35A         	movff	efgtoa@sign,_dbuf
 11576   002620                     
 11577                           ; BSR set to: 0
 11578                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
 11579   002620  0781               	decf	efgtoa@w& (0+255),f,b
 11580   002622  A0D8               	btfss	status,0,c
 11581   002624  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 11582   002626                     
 11583                           ; BSR set to: 0
 11584                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 11585   002626  0E00               	movlw	0
 11586   002628  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11587   00262A  0E01               	movlw	1
 11588   00262C  6F96               	movwf	efgtoa@n& (0+255),b
 11589   00262E                     l6756:
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 11593   00262E  0E5A               	movlw	low _dbuf
 11594   002630  2596               	addwf	efgtoa@n& (0+255),w,b
 11595   002632  6E01               	movwf	strcpy@dest^0,c
 11596   002634  0E03               	movlw	high _dbuf
 11597   002636  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11598   002638  6E02               	movwf	(strcpy@dest+1)^0,c
 11599   00263A  0EFB               	movlw	low STR_21
 11600   00263C  6E03               	movwf	strcpy@src^0,c
 11601   00263E  0E7F               	movlw	high STR_21
 11602   002640  6E04               	movwf	(strcpy@src+1)^0,c
 11603   002642  EC87  F036         	call	_strcpy	;wreg free
 11604   002646  EFDF  F012         	goto	l6740
 11605   00264A                     l6764:
 11606                           
 11607                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 11608   00264A  0E00               	movlw	0
 11609   00264C  0100               	movlb	0	; () banked
 11610   00264E  6F98               	movwf	efgtoa@u& (0+255),b
 11611   002650  0E00               	movlw	0
 11612   002652  6F99               	movwf	(efgtoa@u+1)& (0+255),b
 11613   002654  0E80               	movlw	128
 11614   002656  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
 11615   002658  0E3F               	movlw	63
 11616   00265A  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
 11617                           
 11618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 11619   00265C  0E00               	movlw	0
 11620   00265E  6F80               	movwf	(efgtoa@e+1)& (0+255),b
 11621   002660  0E00               	movlw	0
 11622   002662  6F7F               	movwf	efgtoa@e& (0+255),b
 11623   002664                     
 11624                           ; BSR set to: 0
 11625                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 11626   002664  C092  F001         	movff	efgtoa@g,___fleq@ff1
 11627   002668  C093  F002         	movff	efgtoa@g+1,___fleq@ff1+1
 11628   00266C  C094  F003         	movff	efgtoa@g+2,___fleq@ff1+2
 11629   002670  C095  F004         	movff	efgtoa@g+3,___fleq@ff1+3
 11630   002674  0E00               	movlw	0
 11631   002676  6E05               	movwf	___fleq@ff2^0,c
 11632   002678  0E00               	movlw	0
 11633   00267A  6E06               	movwf	(___fleq@ff2+1)^0,c
 11634   00267C  0E00               	movlw	0
 11635   00267E  6E07               	movwf	(___fleq@ff2+2)^0,c
 11636   002680  0E00               	movlw	0
 11637   002682  6E08               	movwf	(___fleq@ff2+3)^0,c
 11638   002684  ECC2  F033         	call	___fleq	;wreg free
 11639   002688  B0D8               	btfsc	status,0,c
 11640   00268A  EF49  F013         	goto	u8741
 11641   00268E  EF4B  F013         	goto	u8740
 11642   002692                     u8741:
 11643   002692  EF2B  F014         	goto	l1016
 11644   002696                     u8740:
 11645   002696  EF58  F013         	goto	l6772
 11646   00269A                     l1018:
 11647                           
 11648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 11649   00269A  C083  F098         	movff	efgtoa@ou,efgtoa@u
 11650   00269E  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
 11651   0026A2  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
 11652   0026A6  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
 11653   0026AA                     
 11654                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
 11655   0026AA  0100               	movlb	0	; () banked
 11656   0026AC  4B7F               	infsnz	efgtoa@e& (0+255),f,b
 11657   0026AE  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
 11658   0026B0                     l6772:
 11659                           
 11660                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 11661   0026B0  C098  F00F         	movff	efgtoa@u,___flmul@b
 11662   0026B4  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 11663   0026B8  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 11664   0026BC  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 11665   0026C0  0E00               	movlw	0
 11666   0026C2  6E13               	movwf	___flmul@a^0,c
 11667   0026C4  0E00               	movlw	0
 11668   0026C6  6E14               	movwf	(___flmul@a+1)^0,c
 11669   0026C8  0E20               	movlw	32
 11670   0026CA  6E15               	movwf	(___flmul@a+2)^0,c
 11671   0026CC  0E41               	movlw	65
 11672   0026CE  6E16               	movwf	(___flmul@a+3)^0,c
 11673   0026D0  ECC6  F01F         	call	___flmul	;wreg free
 11674   0026D4  C00F  F083         	movff	?___flmul,efgtoa@ou
 11675   0026D8  C010  F084         	movff	?___flmul+1,efgtoa@ou+1
 11676   0026DC  C011  F085         	movff	?___flmul+2,efgtoa@ou+2
 11677   0026E0  C012  F086         	movff	?___flmul+3,efgtoa@ou+3
 11678   0026E4  0100               	movlb	0	; () banked
 11679   0026E6  5183               	movf	efgtoa@ou& (0+255),w,b
 11680   0026E8  5D92               	subwf	efgtoa@g& (0+255),w,b
 11681   0026EA  6E01               	movwf	labs@a^0,c
 11682   0026EC  5184               	movf	(efgtoa@ou+1)& (0+255),w,b
 11683   0026EE  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11684   0026F0  6E02               	movwf	(labs@a+1)^0,c
 11685   0026F2  5185               	movf	(efgtoa@ou+2)& (0+255),w,b
 11686   0026F4  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11687   0026F6  6E03               	movwf	(labs@a+2)^0,c
 11688   0026F8  5186               	movf	(efgtoa@ou+3)& (0+255),w,b
 11689   0026FA  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11690   0026FC  6E04               	movwf	(labs@a+3)^0,c
 11691   0026FE  EC65  F035         	call	_labs	;wreg free
 11692   002702  BE04               	btfsc	(?_labs+3)^0,7,c
 11693   002704  EF8F  F013         	goto	u8751
 11694   002708  5004               	movf	(?_labs+3)^0,w,c
 11695   00270A  1003               	iorwf	(?_labs+2)^0,w,c
 11696   00270C  1002               	iorwf	(?_labs+1)^0,w,c
 11697   00270E  E109               	bnz	u8750
 11698   002710  0E02               	movlw	2
 11699   002712  5C01               	subwf	?_labs^0,w,c
 11700   002714  A0D8               	btfss	status,0,c
 11701   002716  EF8F  F013         	goto	u8751
 11702   00271A  EF91  F013         	goto	u8750
 11703   00271E                     u8751:
 11704   00271E  EF4D  F013         	goto	l1018
 11705   002722                     u8750:
 11706   002722  C083  F060         	movff	efgtoa@ou,___flge@ff1
 11707   002726  C084  F061         	movff	efgtoa@ou+1,___flge@ff1+1
 11708   00272A  C085  F062         	movff	efgtoa@ou+2,___flge@ff1+2
 11709   00272E  C086  F063         	movff	efgtoa@ou+3,___flge@ff1+3
 11710   002732  C092  F064         	movff	efgtoa@g,___flge@ff2
 11711   002736  C093  F065         	movff	efgtoa@g+1,___flge@ff2+1
 11712   00273A  C094  F066         	movff	efgtoa@g+2,___flge@ff2+2
 11713   00273E  C095  F067         	movff	efgtoa@g+3,___flge@ff2+3
 11714   002742  EC56  F02F         	call	___flge	;wreg free
 11715   002746  0100               	movlb	0	; () banked
 11716   002748  A0D8               	btfss	status,0,c
 11717   00274A  EFA9  F013         	goto	u8761
 11718   00274E  EFAB  F013         	goto	u8760
 11719   002752                     u8761:
 11720   002752  EF4D  F013         	goto	l1018
 11721   002756                     u8760:
 11722   002756                     
 11723                           ; BSR set to: 0
 11724                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 11725   002756  5198               	movf	efgtoa@u& (0+255),w,b
 11726   002758  5D92               	subwf	efgtoa@g& (0+255),w,b
 11727   00275A  6E01               	movwf	labs@a^0,c
 11728   00275C  5199               	movf	(efgtoa@u+1)& (0+255),w,b
 11729   00275E  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11730   002760  6E02               	movwf	(labs@a+1)^0,c
 11731   002762  519A               	movf	(efgtoa@u+2)& (0+255),w,b
 11732   002764  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11733   002766  6E03               	movwf	(labs@a+2)^0,c
 11734   002768  519B               	movf	(efgtoa@u+3)& (0+255),w,b
 11735   00276A  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11736   00276C  6E04               	movwf	(labs@a+3)^0,c
 11737   00276E  EC65  F035         	call	_labs	;wreg free
 11738   002772  BE04               	btfsc	(?_labs+3)^0,7,c
 11739   002774  EFC9  F013         	goto	u8770
 11740   002778  5004               	movf	(?_labs+3)^0,w,c
 11741   00277A  1003               	iorwf	(?_labs+2)^0,w,c
 11742   00277C  1002               	iorwf	(?_labs+1)^0,w,c
 11743   00277E  E107               	bnz	u8771
 11744   002780  0E02               	movlw	2
 11745   002782  5C01               	subwf	?_labs^0,w,c
 11746   002784  B0D8               	btfsc	status,0,c
 11747   002786  EFC7  F013         	goto	u8771
 11748   00278A  EFC9  F013         	goto	u8770
 11749   00278E                     u8771:
 11750   00278E  EF11  F014         	goto	l6790
 11751   002792                     u8770:
 11752   002792                     l6780:
 11753                           
 11754                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
 11755   002792  C098  F092         	movff	efgtoa@u,efgtoa@g
 11756   002796  C099  F093         	movff	efgtoa@u+1,efgtoa@g+1
 11757   00279A  C09A  F094         	movff	efgtoa@u+2,efgtoa@g+2
 11758   00279E  C09B  F095         	movff	efgtoa@u+3,efgtoa@g+3
 11759                           
 11760                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
 11761   0027A2  EF2B  F014         	goto	l1016
 11762   0027A6                     l6782:
 11763                           
 11764                           ; BSR set to: 0
 11765                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 11766   0027A6  C098  F028         	movff	efgtoa@u,___fldiv@b
 11767   0027AA  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 11768   0027AE  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 11769   0027B2  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 11770   0027B6  0E00               	movlw	0
 11771   0027B8  6E2C               	movwf	___fldiv@a^0,c
 11772   0027BA  0E00               	movlw	0
 11773   0027BC  6E2D               	movwf	(___fldiv@a+1)^0,c
 11774   0027BE  0E20               	movlw	32
 11775   0027C0  6E2E               	movwf	(___fldiv@a+2)^0,c
 11776   0027C2  0E41               	movlw	65
 11777   0027C4  6E2F               	movwf	(___fldiv@a+3)^0,c
 11778   0027C6  ECC8  F023         	call	___fldiv	;wreg free
 11779   0027CA  C028  F098         	movff	?___fldiv,efgtoa@u
 11780   0027CE  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 11781   0027D2  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 11782   0027D6  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 11783   0027DA                     
 11784                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
 11785   0027DA  0100               	movlb	0	; () banked
 11786   0027DC  077F               	decf	efgtoa@e& (0+255),f,b
 11787   0027DE  A0D8               	btfss	status,0,c
 11788   0027E0  0780               	decf	(efgtoa@e+1)& (0+255),f,b
 11789   0027E2                     
 11790                           ; BSR set to: 0
 11791                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 11792   0027E2  5198               	movf	efgtoa@u& (0+255),w,b
 11793   0027E4  5D92               	subwf	efgtoa@g& (0+255),w,b
 11794   0027E6  6E01               	movwf	labs@a^0,c
 11795   0027E8  5199               	movf	(efgtoa@u+1)& (0+255),w,b
 11796   0027EA  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11797   0027EC  6E02               	movwf	(labs@a+1)^0,c
 11798   0027EE  519A               	movf	(efgtoa@u+2)& (0+255),w,b
 11799   0027F0  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11800   0027F2  6E03               	movwf	(labs@a+2)^0,c
 11801   0027F4  519B               	movf	(efgtoa@u+3)& (0+255),w,b
 11802   0027F6  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11803   0027F8  6E04               	movwf	(labs@a+3)^0,c
 11804   0027FA  EC65  F035         	call	_labs	;wreg free
 11805   0027FE  BE04               	btfsc	(?_labs+3)^0,7,c
 11806   002800  EF0F  F014         	goto	u8780
 11807   002804  5004               	movf	(?_labs+3)^0,w,c
 11808   002806  1003               	iorwf	(?_labs+2)^0,w,c
 11809   002808  1002               	iorwf	(?_labs+1)^0,w,c
 11810   00280A  E107               	bnz	u8781
 11811   00280C  0E02               	movlw	2
 11812   00280E  5C01               	subwf	?_labs^0,w,c
 11813   002810  B0D8               	btfsc	status,0,c
 11814   002812  EF0D  F014         	goto	u8781
 11815   002816  EF0F  F014         	goto	u8780
 11816   00281A                     u8781:
 11817   00281A  EF11  F014         	goto	l6790
 11818   00281E                     u8780:
 11819   00281E  EFC9  F013         	goto	l6780
 11820   002822                     l6790:
 11821                           
 11822                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 11823   002822  C092  F060         	movff	efgtoa@g,___flge@ff1
 11824   002826  C093  F061         	movff	efgtoa@g+1,___flge@ff1+1
 11825   00282A  C094  F062         	movff	efgtoa@g+2,___flge@ff1+2
 11826   00282E  C095  F063         	movff	efgtoa@g+3,___flge@ff1+3
 11827   002832  C098  F064         	movff	efgtoa@u,___flge@ff2
 11828   002836  C099  F065         	movff	efgtoa@u+1,___flge@ff2+1
 11829   00283A  C09A  F066         	movff	efgtoa@u+2,___flge@ff2+2
 11830   00283E  C09B  F067         	movff	efgtoa@u+3,___flge@ff2+3
 11831   002842  EC56  F02F         	call	___flge	;wreg free
 11832   002846  0100               	movlb	0	; () banked
 11833   002848  A0D8               	btfss	status,0,c
 11834   00284A  EF29  F014         	goto	u8791
 11835   00284E  EF2B  F014         	goto	u8790
 11836   002852                     u8791:
 11837   002852  EFD3  F013         	goto	l6782
 11838   002856                     u8790:
 11839   002856                     l1016:
 11840                           
 11841                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 11842   002856  C06D  F079         	movff	efgtoa@c,efgtoa@mode
 11843                           
 11844                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 11845   00285A  C079  F07A         	movff	efgtoa@mode,efgtoa@nmode
 11846   00285E                     
 11847                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 11848   00285E  0102               	movlb	2	; () banked
 11849   002860  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 11850   002862  EF35  F014         	goto	u8801
 11851   002866  EF37  F014         	goto	u8800
 11852   00286A                     u8801:
 11853   00286A  EF3D  F014         	goto	l6796
 11854   00286E                     u8800:
 11855   00286E                     
 11856                           ; BSR set to: 2
 11857   00286E  C2FE  F072         	movff	_prec,efgtoa@p
 11858   002872  C2FF  F073         	movff	_prec+1,efgtoa@p+1
 11859   002876  EF42  F014         	goto	l6798
 11860   00287A                     l6796:
 11861                           
 11862                           ; BSR set to: 2
 11863   00287A  0E00               	movlw	0
 11864   00287C  0100               	movlb	0	; () banked
 11865   00287E  6F73               	movwf	(efgtoa@p+1)& (0+255),b
 11866   002880  0E06               	movlw	6
 11867   002882  6F72               	movwf	efgtoa@p& (0+255),b
 11868   002884                     l6798:
 11869                           
 11870                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 11871   002884  C072  F07D         	movff	efgtoa@p,efgtoa@m
 11872   002888  C073  F07E         	movff	efgtoa@p+1,efgtoa@m+1
 11873   00288C                     
 11874                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 11875   00288C  0100               	movlb	0	; () banked
 11876   00288E  4B7D               	infsnz	efgtoa@m& (0+255),f,b
 11877   002890  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
 11878   002892                     
 11879                           ; BSR set to: 0
 11880                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 11881   002892  0E66               	movlw	102
 11882   002894  197A               	xorwf	efgtoa@nmode& (0+255),w,b
 11883   002896  A4D8               	btfss	status,2,c
 11884   002898  EF50  F014         	goto	u8811
 11885   00289C  EF52  F014         	goto	u8810
 11886   0028A0                     u8811:
 11887   0028A0  EF72  F014         	goto	l6812
 11888   0028A4                     u8810:
 11889   0028A4                     
 11890                           ; BSR set to: 0
 11891                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 11892   0028A4  BF80               	btfsc	(efgtoa@e+1)& (0+255),7,b
 11893   0028A6  EF59  F014         	goto	u8820
 11894   0028AA  EF57  F014         	goto	u8821
 11895   0028AE                     u8821:
 11896   0028AE  EF65  F014         	goto	l6808
 11897   0028B2                     u8820:
 11898   0028B2                     
 11899                           ; BSR set to: 0
 11900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 11901   0028B2  0E00               	movlw	0
 11902   0028B4  6F98               	movwf	efgtoa@u& (0+255),b
 11903   0028B6  0E00               	movlw	0
 11904   0028B8  6F99               	movwf	(efgtoa@u+1)& (0+255),b
 11905   0028BA  0E80               	movlw	128
 11906   0028BC  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
 11907   0028BE  0E3F               	movlw	63
 11908   0028C0  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
 11909                           
 11910                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 11911   0028C2  0E00               	movlw	0
 11912   0028C4  6F80               	movwf	(efgtoa@e+1)& (0+255),b
 11913   0028C6  0E00               	movlw	0
 11914   0028C8  6F7F               	movwf	efgtoa@e& (0+255),b
 11915   0028CA                     l6808:
 11916                           
 11917                           ; BSR set to: 0
 11918                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 11919   0028CA  0E67               	movlw	103
 11920   0028CC  1979               	xorwf	efgtoa@mode& (0+255),w,b
 11921   0028CE  B4D8               	btfsc	status,2,c
 11922   0028D0  EF6C  F014         	goto	u8831
 11923   0028D4  EF6E  F014         	goto	u8830
 11924   0028D8                     u8831:
 11925   0028D8  EF72  F014         	goto	l6812
 11926   0028DC                     u8830:
 11927   0028DC                     
 11928                           ; BSR set to: 0
 11929                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 11930   0028DC  517F               	movf	efgtoa@e& (0+255),w,b
 11931   0028DE  277D               	addwf	efgtoa@m& (0+255),f,b
 11932   0028E0  5180               	movf	(efgtoa@e+1)& (0+255),w,b
 11933   0028E2  237E               	addwfc	(efgtoa@m+1)& (0+255),f,b
 11934   0028E4                     l6812:
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 11938   0028E4  0E00               	movlw	0
 11939   0028E6  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 11940   0028E8  0E00               	movlw	0
 11941   0028EA  6F87               	movwf	efgtoa@i& (0+255),b
 11942   0028EC                     
 11943                           ; BSR set to: 0
 11944                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 11945   0028EC  C092  F089         	movff	efgtoa@g,efgtoa@h
 11946   0028F0  C093  F08A         	movff	efgtoa@g+1,efgtoa@h+1
 11947   0028F4  C094  F08B         	movff	efgtoa@g+2,efgtoa@h+2
 11948   0028F8  C095  F08C         	movff	efgtoa@g+3,efgtoa@h+3
 11949   0028FC                     
 11950                           ; BSR set to: 0
 11951                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 11952   0028FC  C098  F083         	movff	efgtoa@u,efgtoa@ou
 11953   002900  C099  F084         	movff	efgtoa@u+1,efgtoa@ou+1
 11954   002904  C09A  F085         	movff	efgtoa@u+2,efgtoa@ou+2
 11955   002908  C09B  F086         	movff	efgtoa@u+3,efgtoa@ou+3
 11956                           
 11957                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 11958   00290C  EF03  F015         	goto	l6826
 11959   002910                     l6818:
 11960                           
 11961                           ; BSR set to: 0
 11962                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 11963   002910  C089  F028         	movff	efgtoa@h,___fldiv@b
 11964   002914  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
 11965   002918  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
 11966   00291C  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
 11967   002920  C098  F02C         	movff	efgtoa@u,___fldiv@a
 11968   002924  C099  F02D         	movff	efgtoa@u+1,___fldiv@a+1
 11969   002928  C09A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
 11970   00292C  C09B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
 11971   002930  ECC8  F023         	call	___fldiv	;wreg free
 11972   002934  C028  F041         	movff	?___fldiv,floorf@x
 11973   002938  C029  F042         	movff	?___fldiv+1,floorf@x+1
 11974   00293C  C02A  F043         	movff	?___fldiv+2,floorf@x+2
 11975   002940  C02B  F044         	movff	?___fldiv+3,floorf@x+3
 11976   002944  ECB1  F029         	call	_floorf	;wreg free
 11977   002948  C041  F08D         	movff	?_floorf,efgtoa@l
 11978   00294C  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
 11979   002950  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
 11980   002954  C044  F090         	movff	?_floorf+3,efgtoa@l+3
 11981                           
 11982                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 11983   002958  C08D  F001         	movff	efgtoa@l,___fltol@f1
 11984   00295C  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 11985   002960  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 11986   002964  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 11987   002968  ECD9  F02F         	call	___fltol	;wreg free
 11988   00296C  C001  F07B         	movff	?___fltol,efgtoa@d
 11989   002970  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
 11990   002974                     
 11991                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 11992   002974  C089  F051         	movff	efgtoa@h,___flsub@b
 11993   002978  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
 11994   00297C  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
 11995   002980  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
 11996   002984  C08D  F013         	movff	efgtoa@l,___flmul@a
 11997   002988  C08E  F014         	movff	efgtoa@l+1,___flmul@a+1
 11998   00298C  C08F  F015         	movff	efgtoa@l+2,___flmul@a+2
 11999   002990  C090  F016         	movff	efgtoa@l+3,___flmul@a+3
 12000   002994  C098  F00F         	movff	efgtoa@u,___flmul@b
 12001   002998  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12002   00299C  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12003   0029A0  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12004   0029A4  ECC6  F01F         	call	___flmul	;wreg free
 12005   0029A8  C00F  F055         	movff	?___flmul,___flsub@a
 12006   0029AC  C010  F056         	movff	?___flmul+1,___flsub@a+1
 12007   0029B0  C011  F057         	movff	?___flmul+2,___flsub@a+2
 12008   0029B4  C012  F058         	movff	?___flmul+3,___flsub@a+3
 12009   0029B8  EC01  F036         	call	___flsub	;wreg free
 12010   0029BC  C051  F089         	movff	?___flsub,efgtoa@h
 12011   0029C0  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
 12012   0029C4  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
 12013   0029C8  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
 12014   0029CC                     
 12015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 12016   0029CC  C098  F028         	movff	efgtoa@u,___fldiv@b
 12017   0029D0  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 12018   0029D4  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 12019   0029D8  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 12020   0029DC  0E00               	movlw	0
 12021   0029DE  6E2C               	movwf	___fldiv@a^0,c
 12022   0029E0  0E00               	movlw	0
 12023   0029E2  6E2D               	movwf	(___fldiv@a+1)^0,c
 12024   0029E4  0E20               	movlw	32
 12025   0029E6  6E2E               	movwf	(___fldiv@a+2)^0,c
 12026   0029E8  0E41               	movlw	65
 12027   0029EA  6E2F               	movwf	(___fldiv@a+3)^0,c
 12028   0029EC  ECC8  F023         	call	___fldiv	;wreg free
 12029   0029F0  C028  F098         	movff	?___fldiv,efgtoa@u
 12030   0029F4  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 12031   0029F8  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 12032   0029FC  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 12033   002A00                     
 12034                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 12035   002A00  0100               	movlb	0	; () banked
 12036   002A02  4B87               	infsnz	efgtoa@i& (0+255),f,b
 12037   002A04  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
 12038   002A06                     l6826:
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12042   002A06  517D               	movf	efgtoa@m& (0+255),w,b
 12043   002A08  5D87               	subwf	efgtoa@i& (0+255),w,b
 12044   002A0A  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12045   002A0C  0A80               	xorlw	128
 12046   002A0E  6F6E               	movwf	??_efgtoa& (0+255),b
 12047   002A10  517E               	movf	(efgtoa@m+1)& (0+255),w,b
 12048   002A12  0A80               	xorlw	128
 12049   002A14  596E               	subwfb	??_efgtoa& (0+255),w,b
 12050   002A16  A0D8               	btfss	status,0,c
 12051   002A18  EF10  F015         	goto	u8841
 12052   002A1C  EF12  F015         	goto	u8840
 12053   002A20                     u8841:
 12054   002A20  EF88  F014         	goto	l6818
 12055   002A24                     u8840:
 12056   002A24                     
 12057                           ; BSR set to: 0
 12058                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 12059   002A24  C098  F00F         	movff	efgtoa@u,___flmul@b
 12060   002A28  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12061   002A2C  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12062   002A30  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12063   002A34  0E00               	movlw	0
 12064   002A36  6E13               	movwf	___flmul@a^0,c
 12065   002A38  0E00               	movlw	0
 12066   002A3A  6E14               	movwf	(___flmul@a+1)^0,c
 12067   002A3C  0EA0               	movlw	160
 12068   002A3E  6E15               	movwf	(___flmul@a+2)^0,c
 12069   002A40  0E40               	movlw	64
 12070   002A42  6E16               	movwf	(___flmul@a+3)^0,c
 12071   002A44  ECC6  F01F         	call	___flmul	;wreg free
 12072   002A48  C00F  F08D         	movff	?___flmul,efgtoa@l
 12073   002A4C  C010  F08E         	movff	?___flmul+1,efgtoa@l+1
 12074   002A50  C011  F08F         	movff	?___flmul+2,efgtoa@l+2
 12075   002A54  C012  F090         	movff	?___flmul+3,efgtoa@l+3
 12076   002A58                     
 12077                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 12078   002A58  C089  F060         	movff	efgtoa@h,___flge@ff1
 12079   002A5C  C08A  F061         	movff	efgtoa@h+1,___flge@ff1+1
 12080   002A60  C08B  F062         	movff	efgtoa@h+2,___flge@ff1+2
 12081   002A64  C08C  F063         	movff	efgtoa@h+3,___flge@ff1+3
 12082   002A68  C08D  F064         	movff	efgtoa@l,___flge@ff2
 12083   002A6C  C08E  F065         	movff	efgtoa@l+1,___flge@ff2+1
 12084   002A70  C08F  F066         	movff	efgtoa@l+2,___flge@ff2+2
 12085   002A74  C090  F067         	movff	efgtoa@l+3,___flge@ff2+3
 12086   002A78  EC56  F02F         	call	___flge	;wreg free
 12087   002A7C  0100               	movlb	0	; () banked
 12088   002A7E  B0D8               	btfsc	status,0,c
 12089   002A80  EF44  F015         	goto	u8851
 12090   002A84  EF46  F015         	goto	u8850
 12091   002A88                     u8851:
 12092   002A88  EF50  F015         	goto	l6834
 12093   002A8C                     u8850:
 12094   002A8C                     
 12095                           ; BSR set to: 0
 12096                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 12097   002A8C  0E00               	movlw	0
 12098   002A8E  6F8D               	movwf	efgtoa@l& (0+255),b
 12099   002A90  0E00               	movlw	0
 12100   002A92  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
 12101   002A94  0E00               	movlw	0
 12102   002A96  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
 12103   002A98  0E00               	movlw	0
 12104   002A9A  6F90               	movwf	(efgtoa@l+3)& (0+255),b
 12105                           
 12106                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 12107   002A9C  EF79  F015         	goto	l6840
 12108   002AA0                     l6834:
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 12112   002AA0  C089  F001         	movff	efgtoa@h,___fleq@ff1
 12113   002AA4  C08A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
 12114   002AA8  C08B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
 12115   002AAC  C08C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
 12116   002AB0  C08D  F005         	movff	efgtoa@l,___fleq@ff2
 12117   002AB4  C08E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
 12118   002AB8  C08F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
 12119   002ABC  C090  F008         	movff	efgtoa@l+3,___fleq@ff2+3
 12120   002AC0  ECC2  F033         	call	___fleq	;wreg free
 12121   002AC4  A0D8               	btfss	status,0,c
 12122   002AC6  EF67  F015         	goto	u8861
 12123   002ACA  EF69  F015         	goto	u8860
 12124   002ACE                     u8861:
 12125   002ACE  EF79  F015         	goto	l6840
 12126   002AD2                     u8860:
 12127   002AD2  0100               	movlb	0	; () banked
 12128   002AD4  B17B               	btfsc	efgtoa@d& (0+255),0,b
 12129   002AD6  EF6F  F015         	goto	u8871
 12130   002ADA  EF71  F015         	goto	u8870
 12131   002ADE                     u8871:
 12132   002ADE  EF79  F015         	goto	l6840
 12133   002AE2                     u8870:
 12134   002AE2                     
 12135                           ; BSR set to: 0
 12136                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 12137   002AE2  0E00               	movlw	0
 12138   002AE4  6F8D               	movwf	efgtoa@l& (0+255),b
 12139   002AE6  0E00               	movlw	0
 12140   002AE8  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
 12141   002AEA  0E00               	movlw	0
 12142   002AEC  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
 12143   002AEE  0E00               	movlw	0
 12144   002AF0  6F90               	movwf	(efgtoa@l+3)& (0+255),b
 12145   002AF2                     l6840:
 12146                           
 12147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 12148   002AF2  C092  F041         	movff	efgtoa@g,___fladd@b
 12149   002AF6  C093  F042         	movff	efgtoa@g+1,___fladd@b+1
 12150   002AFA  C094  F043         	movff	efgtoa@g+2,___fladd@b+2
 12151   002AFE  C095  F044         	movff	efgtoa@g+3,___fladd@b+3
 12152   002B02  C08D  F045         	movff	efgtoa@l,___fladd@a
 12153   002B06  C08E  F046         	movff	efgtoa@l+1,___fladd@a+1
 12154   002B0A  C08F  F047         	movff	efgtoa@l+2,___fladd@a+2
 12155   002B0E  C090  F048         	movff	efgtoa@l+3,___fladd@a+3
 12156   002B12  EC6B  F01D         	call	___fladd	;wreg free
 12157   002B16  C041  F089         	movff	?___fladd,efgtoa@h
 12158   002B1A  C042  F08A         	movff	?___fladd+1,efgtoa@h+1
 12159   002B1E  C043  F08B         	movff	?___fladd+2,efgtoa@h+2
 12160   002B22  C044  F08C         	movff	?___fladd+3,efgtoa@h+3
 12161   002B26                     
 12162                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 12163   002B26  C089  F060         	movff	efgtoa@h,___flge@ff1
 12164   002B2A  C08A  F061         	movff	efgtoa@h+1,___flge@ff1+1
 12165   002B2E  C08B  F062         	movff	efgtoa@h+2,___flge@ff1+2
 12166   002B32  C08C  F063         	movff	efgtoa@h+3,___flge@ff1+3
 12167   002B36  0E00               	movlw	0
 12168   002B38  6E13               	movwf	___flmul@a^0,c
 12169   002B3A  0E00               	movlw	0
 12170   002B3C  6E14               	movwf	(___flmul@a+1)^0,c
 12171   002B3E  0E20               	movlw	32
 12172   002B40  6E15               	movwf	(___flmul@a+2)^0,c
 12173   002B42  0E41               	movlw	65
 12174   002B44  6E16               	movwf	(___flmul@a+3)^0,c
 12175   002B46  C083  F00F         	movff	efgtoa@ou,___flmul@b
 12176   002B4A  C084  F010         	movff	efgtoa@ou+1,___flmul@b+1
 12177   002B4E  C085  F011         	movff	efgtoa@ou+2,___flmul@b+2
 12178   002B52  C086  F012         	movff	efgtoa@ou+3,___flmul@b+3
 12179   002B56  ECC6  F01F         	call	___flmul	;wreg free
 12180   002B5A  C00F  F064         	movff	?___flmul,___flge@ff2
 12181   002B5E  C010  F065         	movff	?___flmul+1,___flge@ff2+1
 12182   002B62  C011  F066         	movff	?___flmul+2,___flge@ff2+2
 12183   002B66  C012  F067         	movff	?___flmul+3,___flge@ff2+3
 12184   002B6A  EC56  F02F         	call	___flge	;wreg free
 12185   002B6E  0100               	movlb	0	; () banked
 12186   002B70  A0D8               	btfss	status,0,c
 12187   002B72  EFBD  F015         	goto	u8881
 12188   002B76  EFBF  F015         	goto	u8880
 12189   002B7A                     u8881:
 12190   002B7A  EFE7  F015         	goto	l6852
 12191   002B7E                     u8880:
 12192   002B7E                     
 12193                           ; BSR set to: 0
 12194                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 12195   002B7E  4B7F               	infsnz	efgtoa@e& (0+255),f,b
 12196   002B80  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
 12197   002B82                     
 12198                           ; BSR set to: 0
 12199                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 12200   002B82  C083  F00F         	movff	efgtoa@ou,___flmul@b
 12201   002B86  C084  F010         	movff	efgtoa@ou+1,___flmul@b+1
 12202   002B8A  C085  F011         	movff	efgtoa@ou+2,___flmul@b+2
 12203   002B8E  C086  F012         	movff	efgtoa@ou+3,___flmul@b+3
 12204   002B92  0E00               	movlw	0
 12205   002B94  6E13               	movwf	___flmul@a^0,c
 12206   002B96  0E00               	movlw	0
 12207   002B98  6E14               	movwf	(___flmul@a+1)^0,c
 12208   002B9A  0E20               	movlw	32
 12209   002B9C  6E15               	movwf	(___flmul@a+2)^0,c
 12210   002B9E  0E41               	movlw	65
 12211   002BA0  6E16               	movwf	(___flmul@a+3)^0,c
 12212   002BA2  ECC6  F01F         	call	___flmul	;wreg free
 12213   002BA6  C00F  F083         	movff	?___flmul,efgtoa@ou
 12214   002BAA  C010  F084         	movff	?___flmul+1,efgtoa@ou+1
 12215   002BAE  C011  F085         	movff	?___flmul+2,efgtoa@ou+2
 12216   002BB2  C012  F086         	movff	?___flmul+3,efgtoa@ou+3
 12217   002BB6                     
 12218                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 12219   002BB6  0E66               	movlw	102
 12220   002BB8  0100               	movlb	0	; () banked
 12221   002BBA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
 12222   002BBC  A4D8               	btfss	status,2,c
 12223   002BBE  EFE3  F015         	goto	u8891
 12224   002BC2  EFE5  F015         	goto	u8890
 12225   002BC6                     u8891:
 12226   002BC6  EFE7  F015         	goto	l6852
 12227   002BCA                     u8890:
 12228   002BCA                     
 12229                           ; BSR set to: 0
 12230                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 12231   002BCA  4B7D               	infsnz	efgtoa@m& (0+255),f,b
 12232   002BCC  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
 12233   002BCE                     l6852:
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 12237   002BCE  C083  F098         	movff	efgtoa@ou,efgtoa@u
 12238   002BD2  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
 12239   002BD6  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
 12240   002BDA  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
 12241   002BDE                     
 12242                           ; BSR set to: 0
 12243                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 12244   002BDE  C07F  F070         	movff	efgtoa@e,efgtoa@ne
 12245   002BE2  C080  F071         	movff	efgtoa@e+1,efgtoa@ne+1
 12246   002BE6                     
 12247                           ; BSR set to: 0
 12248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 12249   002BE6  6B78               	clrf	efgtoa@pp& (0+255),b
 12250   002BE8                     
 12251                           ; BSR set to: 0
 12252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 12253   002BE8  0E00               	movlw	0
 12254   002BEA  6F75               	movwf	(efgtoa@t+1)& (0+255),b
 12255   002BEC  0E00               	movlw	0
 12256   002BEE  6F74               	movwf	efgtoa@t& (0+255),b
 12257   002BF0                     
 12258                           ; BSR set to: 0
 12259                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 12260   002BF0  0E00               	movlw	0
 12261   002BF2  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 12262   002BF4  0E00               	movlw	0
 12263   002BF6  6F87               	movwf	efgtoa@i& (0+255),b
 12264                           
 12265                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12266   002BF8  EFE3  F016         	goto	l6902
 12267   002BFC                     l6862:
 12268                           
 12269                           ; BSR set to: 0
 12270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 12271   002BFC  C089  F028         	movff	efgtoa@h,___fldiv@b
 12272   002C00  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
 12273   002C04  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
 12274   002C08  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
 12275   002C0C  C098  F02C         	movff	efgtoa@u,___fldiv@a
 12276   002C10  C099  F02D         	movff	efgtoa@u+1,___fldiv@a+1
 12277   002C14  C09A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
 12278   002C18  C09B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
 12279   002C1C  ECC8  F023         	call	___fldiv	;wreg free
 12280   002C20  C028  F041         	movff	?___fldiv,floorf@x
 12281   002C24  C029  F042         	movff	?___fldiv+1,floorf@x+1
 12282   002C28  C02A  F043         	movff	?___fldiv+2,floorf@x+2
 12283   002C2C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
 12284   002C30  ECB1  F029         	call	_floorf	;wreg free
 12285   002C34  C041  F08D         	movff	?_floorf,efgtoa@l
 12286   002C38  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
 12287   002C3C  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
 12288   002C40  C044  F090         	movff	?_floorf+3,efgtoa@l+3
 12289                           
 12290                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 12291   002C44  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12292   002C48  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12293   002C4C  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12294   002C50  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12295   002C54  ECD9  F02F         	call	___fltol	;wreg free
 12296   002C58  BE02               	btfsc	(?___fltol+1)^0,7,c
 12297   002C5A  EF3A  F016         	goto	u8900
 12298   002C5E  5002               	movf	(?___fltol+1)^0,w,c
 12299   002C60  E107               	bnz	u8901
 12300   002C62  0E0A               	movlw	10
 12301   002C64  5C01               	subwf	?___fltol^0,w,c
 12302   002C66  B0D8               	btfsc	status,0,c
 12303   002C68  EF38  F016         	goto	u8901
 12304   002C6C  EF3A  F016         	goto	u8900
 12305   002C70                     u8901:
 12306   002C70  EF4A  F016         	goto	l6866
 12307   002C74                     u8900:
 12308   002C74  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12309   002C78  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12310   002C7C  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12311   002C80  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12312   002C84  ECD9  F02F         	call	___fltol	;wreg free
 12313   002C88  C001  F07B         	movff	?___fltol,efgtoa@d
 12314   002C8C  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
 12315   002C90  EF4F  F016         	goto	l1046
 12316   002C94                     l6866:
 12317   002C94  0E00               	movlw	0
 12318   002C96  0100               	movlb	0	; () banked
 12319   002C98  6F7C               	movwf	(efgtoa@d+1)& (0+255),b
 12320   002C9A  0E09               	movlw	9
 12321   002C9C  6F7B               	movwf	efgtoa@d& (0+255),b
 12322   002C9E                     l1046:
 12323                           
 12324                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 12325   002C9E  0100               	movlb	0	; () banked
 12326   002CA0  5178               	movf	efgtoa@pp& (0+255),w,b
 12327   002CA2  A4D8               	btfss	status,2,c
 12328   002CA4  EF56  F016         	goto	u8911
 12329   002CA8  EF58  F016         	goto	u8910
 12330   002CAC                     u8911:
 12331   002CAC  EF80  F016         	goto	l6886
 12332   002CB0                     u8910:
 12333   002CB0                     
 12334                           ; BSR set to: 0
 12335   002CB0  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 12336   002CB2  EF5F  F016         	goto	u8920
 12337   002CB6  EF5D  F016         	goto	u8921
 12338   002CBA                     u8921:
 12339   002CBA  EF80  F016         	goto	l6886
 12340   002CBE                     u8920:
 12341   002CBE                     
 12342                           ; BSR set to: 0
 12343                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 12344   002CBE  0E5A               	movlw	low _dbuf
 12345   002CC0  2596               	addwf	efgtoa@n& (0+255),w,b
 12346   002CC2  6ED9               	movwf	fsr2l,c
 12347   002CC4  0E03               	movlw	high _dbuf
 12348   002CC6  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12349   002CC8  6EDA               	movwf	fsr2h,c
 12350   002CCA  0E2E               	movlw	46
 12351   002CCC  6EDF               	movwf	indf2,c
 12352   002CCE                     
 12353                           ; BSR set to: 0
 12354   002CCE  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12355   002CD0  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12356   002CD2                     
 12357                           ; BSR set to: 0
 12358                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 12359   002CD2  0781               	decf	efgtoa@w& (0+255),f,b
 12360   002CD4  A0D8               	btfss	status,0,c
 12361   002CD6  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12362   002CD8                     
 12363                           ; BSR set to: 0
 12364                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 12365   002CD8  0E01               	movlw	1
 12366   002CDA  6F78               	movwf	efgtoa@pp& (0+255),b
 12367   002CDC  EF80  F016         	goto	l6886
 12368   002CE0                     l6878:
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 12372   002CE0  0E5A               	movlw	low _dbuf
 12373   002CE2  2596               	addwf	efgtoa@n& (0+255),w,b
 12374   002CE4  6ED9               	movwf	fsr2l,c
 12375   002CE6  0E03               	movlw	high _dbuf
 12376   002CE8  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12377   002CEA  6EDA               	movwf	fsr2h,c
 12378   002CEC  0E30               	movlw	48
 12379   002CEE  6EDF               	movwf	indf2,c
 12380   002CF0                     
 12381                           ; BSR set to: 0
 12382   002CF0  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12383   002CF2  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12384   002CF4                     
 12385                           ; BSR set to: 0
 12386                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 12387   002CF4  0781               	decf	efgtoa@w& (0+255),f,b
 12388   002CF6  A0D8               	btfss	status,0,c
 12389   002CF8  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12390   002CFA                     
 12391                           ; BSR set to: 0
 12392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 12393   002CFA  0774               	decf	efgtoa@t& (0+255),f,b
 12394   002CFC  A0D8               	btfss	status,0,c
 12395   002CFE  0775               	decf	(efgtoa@t+1)& (0+255),f,b
 12396   002D00                     l6886:
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 12400   002D00  5174               	movf	efgtoa@t& (0+255),w,b
 12401   002D02  1175               	iorwf	(efgtoa@t+1)& (0+255),w,b
 12402   002D04  A4D8               	btfss	status,2,c
 12403   002D06  EF87  F016         	goto	u8931
 12404   002D0A  EF89  F016         	goto	u8930
 12405   002D0E                     u8931:
 12406   002D0E  EF70  F016         	goto	l6878
 12407   002D12                     u8930:
 12408   002D12                     
 12409                           ; BSR set to: 0
 12410                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 12411   002D12  0E5A               	movlw	low _dbuf
 12412   002D14  2596               	addwf	efgtoa@n& (0+255),w,b
 12413   002D16  6ED9               	movwf	fsr2l,c
 12414   002D18  0E03               	movlw	high _dbuf
 12415   002D1A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12416   002D1C  6EDA               	movwf	fsr2h,c
 12417   002D1E  517B               	movf	efgtoa@d& (0+255),w,b
 12418   002D20  0F30               	addlw	48
 12419   002D22  6EDF               	movwf	indf2,c
 12420   002D24                     
 12421                           ; BSR set to: 0
 12422   002D24  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12423   002D26  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12424   002D28                     
 12425                           ; BSR set to: 0
 12426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 12427   002D28  0781               	decf	efgtoa@w& (0+255),f,b
 12428   002D2A  A0D8               	btfss	status,0,c
 12429   002D2C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12430   002D2E                     
 12431                           ; BSR set to: 0
 12432                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 12433   002D2E  C089  F051         	movff	efgtoa@h,___flsub@b
 12434   002D32  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
 12435   002D36  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
 12436   002D3A  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
 12437   002D3E  C08D  F013         	movff	efgtoa@l,___flmul@a
 12438   002D42  C08E  F014         	movff	efgtoa@l+1,___flmul@a+1
 12439   002D46  C08F  F015         	movff	efgtoa@l+2,___flmul@a+2
 12440   002D4A  C090  F016         	movff	efgtoa@l+3,___flmul@a+3
 12441   002D4E  C098  F00F         	movff	efgtoa@u,___flmul@b
 12442   002D52  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12443   002D56  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12444   002D5A  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12445   002D5E  ECC6  F01F         	call	___flmul	;wreg free
 12446   002D62  C00F  F055         	movff	?___flmul,___flsub@a
 12447   002D66  C010  F056         	movff	?___flmul+1,___flsub@a+1
 12448   002D6A  C011  F057         	movff	?___flmul+2,___flsub@a+2
 12449   002D6E  C012  F058         	movff	?___flmul+3,___flsub@a+3
 12450   002D72  EC01  F036         	call	___flsub	;wreg free
 12451   002D76  C051  F089         	movff	?___flsub,efgtoa@h
 12452   002D7A  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
 12453   002D7E  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
 12454   002D82  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
 12455   002D86                     
 12456                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 12457   002D86  C098  F028         	movff	efgtoa@u,___fldiv@b
 12458   002D8A  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 12459   002D8E  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 12460   002D92  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 12461   002D96  0E00               	movlw	0
 12462   002D98  6E2C               	movwf	___fldiv@a^0,c
 12463   002D9A  0E00               	movlw	0
 12464   002D9C  6E2D               	movwf	(___fldiv@a+1)^0,c
 12465   002D9E  0E20               	movlw	32
 12466   002DA0  6E2E               	movwf	(___fldiv@a+2)^0,c
 12467   002DA2  0E41               	movlw	65
 12468   002DA4  6E2F               	movwf	(___fldiv@a+3)^0,c
 12469   002DA6  ECC8  F023         	call	___fldiv	;wreg free
 12470   002DAA  C028  F098         	movff	?___fldiv,efgtoa@u
 12471   002DAE  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 12472   002DB2  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 12473   002DB6  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 12474   002DBA                     
 12475                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 12476   002DBA  0100               	movlb	0	; () banked
 12477   002DBC  0770               	decf	efgtoa@ne& (0+255),f,b
 12478   002DBE  A0D8               	btfss	status,0,c
 12479   002DC0  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
 12480   002DC2                     
 12481                           ; BSR set to: 0
 12482                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 12483   002DC2  4B87               	infsnz	efgtoa@i& (0+255),f,b
 12484   002DC4  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
 12485   002DC6                     l6902:
 12486                           
 12487                           ; BSR set to: 0
 12488                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12489   002DC6  517D               	movf	efgtoa@m& (0+255),w,b
 12490   002DC8  5D87               	subwf	efgtoa@i& (0+255),w,b
 12491   002DCA  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12492   002DCC  0A80               	xorlw	128
 12493   002DCE  6F6E               	movwf	??_efgtoa& (0+255),b
 12494   002DD0  517E               	movf	(efgtoa@m+1)& (0+255),w,b
 12495   002DD2  0A80               	xorlw	128
 12496   002DD4  596E               	subwfb	??_efgtoa& (0+255),w,b
 12497   002DD6  B0D8               	btfsc	status,0,c
 12498   002DD8  EFF0  F016         	goto	u8941
 12499   002DDC  EFF2  F016         	goto	u8940
 12500   002DE0                     u8941:
 12501   002DE0  EF00  F017         	goto	l6906
 12502   002DE4                     u8940:
 12503   002DE4                     
 12504                           ; BSR set to: 0
 12505   002DE4  BF97               	btfsc	(efgtoa@n+1)& (0+255),7,b
 12506   002DE6  EFFE  F016         	goto	u8951
 12507   002DEA  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12508   002DEC  E109               	bnz	u8950
 12509   002DEE  0E4B               	movlw	75
 12510   002DF0  5D96               	subwf	efgtoa@n& (0+255),w,b
 12511   002DF2  A0D8               	btfss	status,0,c
 12512   002DF4  EFFE  F016         	goto	u8951
 12513   002DF8  EF00  F017         	goto	u8950
 12514   002DFC                     u8951:
 12515   002DFC  EFFE  F015         	goto	l6862
 12516   002E00                     u8950:
 12517   002E00                     l6906:
 12518                           
 12519                           ; BSR set to: 0
 12520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 12521   002E00  0E00               	movlw	0
 12522   002E02  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 12523   002E04  0E4F               	movlw	79
 12524   002E06  6F87               	movwf	efgtoa@i& (0+255),b
 12525   002E08                     
 12526                           ; BSR set to: 0
 12527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 12528   002E08  0E5A               	movlw	low _dbuf
 12529   002E0A  2587               	addwf	efgtoa@i& (0+255),w,b
 12530   002E0C  6ED9               	movwf	fsr2l,c
 12531   002E0E  0E03               	movlw	high _dbuf
 12532   002E10  2188               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12533   002E12  6EDA               	movwf	fsr2h,c
 12534   002E14  6ADF               	clrf	indf2,c
 12535   002E16                     
 12536                           ; BSR set to: 0
 12537                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 12538   002E16  0E5A               	movlw	low _dbuf
 12539   002E18  6F6E               	movwf	??_efgtoa& (0+255),b
 12540   002E1A  0E03               	movlw	high _dbuf
 12541   002E1C  6F6F               	movwf	(??_efgtoa+1)& (0+255),b
 12542   002E1E  5196               	movf	efgtoa@n& (0+255),w,b
 12543   002E20  5F6E               	subwf	??_efgtoa& (0+255),f,b
 12544   002E22  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12545   002E24  5B6F               	subwfb	(??_efgtoa+1)& (0+255),f,b
 12546   002E26  5187               	movf	efgtoa@i& (0+255),w,b
 12547   002E28  256E               	addwf	??_efgtoa& (0+255),w,b
 12548   002E2A  6E01               	movwf	memcpy@d1^0,c
 12549   002E2C  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12550   002E2E  216F               	addwfc	(??_efgtoa+1)& (0+255),w,b
 12551   002E30  6E02               	movwf	(memcpy@d1+1)^0,c
 12552   002E32  0E5A               	movlw	low _dbuf
 12553   002E34  6E03               	movwf	memcpy@s1^0,c
 12554   002E36  0E03               	movlw	high _dbuf
 12555   002E38  6E04               	movwf	(memcpy@s1+1)^0,c
 12556   002E3A  C096  F005         	movff	efgtoa@n,memcpy@n
 12557   002E3E  C097  F006         	movff	efgtoa@n+1,memcpy@n+1
 12558   002E42  EC90  F035         	call	_memcpy	;wreg free
 12559   002E46                     
 12560                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 12561   002E46  0100               	movlb	0	; () banked
 12562   002E48  5196               	movf	efgtoa@n& (0+255),w,b
 12563   002E4A  5D87               	subwf	efgtoa@i& (0+255),w,b
 12564   002E4C  6F96               	movwf	efgtoa@n& (0+255),b
 12565   002E4E  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12566   002E50  5988               	subwfb	(efgtoa@i+1)& (0+255),w,b
 12567   002E52  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 12568   002E54                     
 12569                           ; BSR set to: 0
 12570                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 12571   002E54  5191               	movf	efgtoa@sign& (0+255),w,b
 12572   002E56  A4D8               	btfss	status,2,c
 12573   002E58  EF30  F017         	goto	u8961
 12574   002E5C  EF33  F017         	goto	u8960
 12575   002E60                     u8961:
 12576   002E60  0E01               	movlw	1
 12577   002E62  EF34  F017         	goto	u8970
 12578   002E66                     u8960:
 12579   002E66  0E00               	movlw	0
 12580   002E68                     u8970:
 12581   002E68  6F87               	movwf	efgtoa@i& (0+255),b
 12582   002E6A  6B88               	clrf	(efgtoa@i+1)& (0+255),b
 12583   002E6C                     
 12584                           ; BSR set to: 0
 12585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 12586   002E6C  5191               	movf	efgtoa@sign& (0+255),w,b
 12587   002E6E  B4D8               	btfsc	status,2,c
 12588   002E70  EF3C  F017         	goto	u8981
 12589   002E74  EF3E  F017         	goto	u8980
 12590   002E78                     u8981:
 12591   002E78  EF49  F017         	goto	l6920
 12592   002E7C                     u8980:
 12593   002E7C                     
 12594                           ; BSR set to: 0
 12595                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 12596   002E7C  0796               	decf	efgtoa@n& (0+255),f,b
 12597   002E7E  A0D8               	btfss	status,0,c
 12598   002E80  0797               	decf	(efgtoa@n+1)& (0+255),f,b
 12599   002E82  0E5A               	movlw	low _dbuf
 12600   002E84  2596               	addwf	efgtoa@n& (0+255),w,b
 12601   002E86  6ED9               	movwf	fsr2l,c
 12602   002E88  0E03               	movlw	high _dbuf
 12603   002E8A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12604   002E8C  6EDA               	movwf	fsr2h,c
 12605   002E8E  C091  FFDF         	movff	efgtoa@sign,indf2
 12606   002E92                     l6920:
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 12610   002E92  5187               	movf	efgtoa@i& (0+255),w,b
 12611   002E94  5F81               	subwf	efgtoa@w& (0+255),f,b
 12612   002E96  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12613   002E98  5B82               	subwfb	(efgtoa@w+1)& (0+255),f,b
 12614   002E9A                     
 12615                           ; BSR set to: 0
 12616                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 12617   002E9A  C068  F00F         	movff	efgtoa@fp,pad@fp
 12618   002E9E  0E5A               	movlw	low _dbuf
 12619   002EA0  2596               	addwf	efgtoa@n& (0+255),w,b
 12620   002EA2  6E10               	movwf	pad@buf^0,c
 12621   002EA4  0E03               	movlw	high _dbuf
 12622   002EA6  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12623   002EA8  6E11               	movwf	(pad@buf+1)^0,c
 12624   002EAA  C081  F012         	movff	efgtoa@w,pad@p
 12625   002EAE  C082  F013         	movff	efgtoa@w+1,pad@p+1
 12626   002EB2  EC32  F035         	call	_pad	;wreg free
 12627   002EB6                     l1013:
 12628   002EB6  0012               	return		;funcret
 12629   002EB8                     __end_of_efgtoa:
 12630                           	callstack 0
 12631                           
 12632 ;; *************** function _strcpy *****************
 12633 ;; Defined at:
 12634 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 12635 ;; Parameters:    Size  Location     Type
 12636 ;;  dest            2    0[COMRAM] PTR unsigned char 
 12637 ;;		 -> dbuf(80), fire_trigger_sensor(20), 
 12638 ;;  src             2    2[COMRAM] PTR const unsigned char 
 12639 ;;		 -> STR_21(4), STR_18(4), STR_3(10), STR_2(19), 
 12640 ;;		 -> STR_1(13), 
 12641 ;; Auto vars:     Size  Location     Type
 12642 ;;  d               2    4[COMRAM] PTR unsigned char 
 12643 ;;		 -> dbuf(80), fire_trigger_sensor(20), 
 12644 ;; Return value:  Size  Location     Type
 12645 ;;                  2    0[COMRAM] PTR unsigned char 
 12646 ;; Registers used:
 12647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12648 ;; Tracked objects:
 12649 ;;		On entry : 0/0
 12650 ;;		On exit  : 0/0
 12651 ;;		Unchanged: 0/0
 12652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12653 ;;      Params:         4       0       0       0       0       0       0       0       0
 12654 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12655 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12656 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12657 ;;Total ram usage:        6 bytes
 12658 ;; Hardware stack levels used: 1
 12659 ;; Hardware stack levels required when called: 1
 12660 ;; This function calls:
 12661 ;;		Nothing
 12662 ;; This function is called by:
 12663 ;;		_Handle_Fire_Events
 12664 ;;		_efgtoa
 12665 ;; This function uses a non-reentrant model
 12666 ;;
 12667                           
 12668                           	psect	text26
 12669   006D0E                     __ptext26:
 12670                           	callstack 0
 12671   006D0E                     _strcpy:
 12672                           	callstack 24
 12673   006D0E  C001  F005         	movff	strcpy@dest,strcpy@d
 12674   006D12  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
 12675   006D16                     l6096:
 12676   006D16  C003  FFF6         	movff	strcpy@src,tblptrl
 12677   006D1A  C004  FFF7         	movff	strcpy@src+1,tblptrh
 12678   006D1E  4A03               	infsnz	strcpy@src^0,f,c
 12679   006D20  2A04               	incf	(strcpy@src+1)^0,f,c
 12680   006D22                     	if	0	;tblptru may be non-zero
 12681   006D22                     	endif
 12682   006D22                     	if	0	;tblptru may be non-zero
 12683   006D22                     	endif
 12684   006D22  C005  FFD9         	movff	strcpy@d,fsr2l
 12685   006D26  C006  FFDA         	movff	strcpy@d+1,fsr2h
 12686   006D2A  4A05               	infsnz	strcpy@d^0,f,c
 12687   006D2C  2A06               	incf	(strcpy@d+1)^0,f,c
 12688   006D2E  0008               	tblrd		*
 12689   006D30  CFF5 FFDF          	movff	tablat,indf2
 12690   006D34  50DF               	movf	indf2,w,c
 12691   006D36  A4D8               	btfss	status,2,c
 12692   006D38  EFA0  F036         	goto	u7591
 12693   006D3C  EFA2  F036         	goto	u7590
 12694   006D40                     u7591:
 12695   006D40  EF8B  F036         	goto	l6096
 12696   006D44                     u7590:
 12697   006D44  0012               	return		;funcret
 12698   006D46                     __end_of_strcpy:
 12699                           	callstack 0
 12700                           
 12701 ;; *************** function _memcpy *****************
 12702 ;; Defined at:
 12703 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 12704 ;; Parameters:    Size  Location     Type
 12705 ;;  d1              2    0[COMRAM] PTR void 
 12706 ;;		 -> dbuf(80), 
 12707 ;;  s1              2    2[COMRAM] PTR const void 
 12708 ;;		 -> dbuf(80), 
 12709 ;;  n               2    4[COMRAM] unsigned int 
 12710 ;; Auto vars:     Size  Location     Type
 12711 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12712 ;;		 -> dbuf(80), 
 12713 ;;  d               2    7[COMRAM] PTR unsigned char 
 12714 ;;		 -> dbuf(80), 
 12715 ;;  tmp             1    6[COMRAM] unsigned char 
 12716 ;; Return value:  Size  Location     Type
 12717 ;;                  2    0[COMRAM] PTR void 
 12718 ;; Registers used:
 12719 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12720 ;; Tracked objects:
 12721 ;;		On entry : 0/0
 12722 ;;		On exit  : 0/0
 12723 ;;		Unchanged: 0/0
 12724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12725 ;;      Params:         6       0       0       0       0       0       0       0       0
 12726 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12727 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12728 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12729 ;;Total ram usage:       11 bytes
 12730 ;; Hardware stack levels used: 1
 12731 ;; Hardware stack levels required when called: 1
 12732 ;; This function calls:
 12733 ;;		Nothing
 12734 ;; This function is called by:
 12735 ;;		_efgtoa
 12736 ;; This function uses a non-reentrant model
 12737 ;;
 12738                           
 12739                           	psect	text27
 12740   006B20                     __ptext27:
 12741                           	callstack 0
 12742   006B20                     _memcpy:
 12743                           	callstack 24
 12744   006B20  C003  F00A         	movff	memcpy@s1,memcpy@s
 12745   006B24  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
 12746   006B28  C001  F008         	movff	memcpy@d1,memcpy@d
 12747   006B2C  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
 12748   006B30  EFAA  F035         	goto	l6660
 12749   006B34                     l6652:
 12750   006B34  C00A  FFD9         	movff	memcpy@s,fsr2l
 12751   006B38  C00B  FFDA         	movff	memcpy@s+1,fsr2h
 12752   006B3C  50DF               	movf	indf2,w,c
 12753   006B3E  6E07               	movwf	memcpy@tmp^0,c
 12754   006B40  4A0A               	infsnz	memcpy@s^0,f,c
 12755   006B42  2A0B               	incf	(memcpy@s+1)^0,f,c
 12756   006B44  C008  FFD9         	movff	memcpy@d,fsr2l
 12757   006B48  C009  FFDA         	movff	memcpy@d+1,fsr2h
 12758   006B4C  C007  FFDF         	movff	memcpy@tmp,indf2
 12759   006B50  4A08               	infsnz	memcpy@d^0,f,c
 12760   006B52  2A09               	incf	(memcpy@d+1)^0,f,c
 12761   006B54                     l6660:
 12762   006B54  0605               	decf	memcpy@n^0,f,c
 12763   006B56  A0D8               	btfss	status,0,c
 12764   006B58  0606               	decf	(memcpy@n+1)^0,f,c
 12765   006B5A  2805               	incf	memcpy@n^0,w,c
 12766   006B5C  E106               	bnz	u8571
 12767   006B5E  2806               	incf	(memcpy@n+1)^0,w,c
 12768   006B60  A4D8               	btfss	status,2,c
 12769   006B62  EFB5  F035         	goto	u8571
 12770   006B66  EFB7  F035         	goto	u8570
 12771   006B6A                     u8571:
 12772   006B6A  EF9A  F035         	goto	l6652
 12773   006B6E                     u8570:
 12774   006B6E  0012               	return		;funcret
 12775   006B70                     __end_of_memcpy:
 12776                           	callstack 0
 12777                           
 12778 ;; *************** function _labs *****************
 12779 ;; Defined at:
 12780 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;  a               4    0[COMRAM] long 
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;		None
 12785 ;; Return value:  Size  Location     Type
 12786 ;;                  4    0[COMRAM] long 
 12787 ;; Registers used:
 12788 ;;		wreg, status,2, status,0
 12789 ;; Tracked objects:
 12790 ;;		On entry : 0/0
 12791 ;;		On exit  : 0/0
 12792 ;;		Unchanged: 0/0
 12793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12794 ;;      Params:         4       0       0       0       0       0       0       0       0
 12795 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12796 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12797 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12798 ;;Total ram usage:        8 bytes
 12799 ;; Hardware stack levels used: 1
 12800 ;; Hardware stack levels required when called: 1
 12801 ;; This function calls:
 12802 ;;		Nothing
 12803 ;; This function is called by:
 12804 ;;		_efgtoa
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           	psect	text28
 12809   006ACA                     __ptext28:
 12810                           	callstack 0
 12811   006ACA                     _labs:
 12812                           	callstack 24
 12813   006ACA  BE04               	btfsc	(labs@a+3)^0,7,c
 12814   006ACC  EF6A  F035         	goto	u8461
 12815   006AD0  EF6C  F035         	goto	u8460
 12816   006AD4                     u8461:
 12817   006AD4  EF76  F035         	goto	l6618
 12818   006AD8                     u8460:
 12819   006AD8  C001  F001         	movff	labs@a,?_labs
 12820   006ADC  C002  F002         	movff	labs@a+1,?_labs+1
 12821   006AE0  C003  F003         	movff	labs@a+2,?_labs+2
 12822   006AE4  C004  F004         	movff	labs@a+3,?_labs+3
 12823   006AE8  EF8F  F035         	goto	l1179
 12824   006AEC                     l6618:
 12825   006AEC  C001  F005         	movff	labs@a,??_labs
 12826   006AF0  C002  F006         	movff	labs@a+1,??_labs+1
 12827   006AF4  C003  F007         	movff	labs@a+2,??_labs+2
 12828   006AF8  C004  F008         	movff	labs@a+3,??_labs+3
 12829   006AFC  1E05               	comf	??_labs^0,f,c
 12830   006AFE  1E06               	comf	(??_labs+1)^0,f,c
 12831   006B00  1E07               	comf	(??_labs+2)^0,f,c
 12832   006B02  1E08               	comf	(??_labs+3)^0,f,c
 12833   006B04  2A05               	incf	??_labs^0,f,c
 12834   006B06  0E00               	movlw	0
 12835   006B08  2206               	addwfc	(??_labs+1)^0,f,c
 12836   006B0A  2207               	addwfc	(??_labs+2)^0,f,c
 12837   006B0C  2208               	addwfc	(??_labs+3)^0,f,c
 12838   006B0E  C005  F001         	movff	??_labs,?_labs
 12839   006B12  C006  F002         	movff	??_labs+1,?_labs+1
 12840   006B16  C007  F003         	movff	??_labs+2,?_labs+2
 12841   006B1A  C008  F004         	movff	??_labs+3,?_labs+3
 12842   006B1E                     l1179:
 12843   006B1E  0012               	return		;funcret
 12844   006B20                     __end_of_labs:
 12845                           	callstack 0
 12846                           
 12847 ;; *************** function _floorf *****************
 12848 ;; Defined at:
 12849 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
 12850 ;; Parameters:    Size  Location     Type
 12851 ;;  x               4   64[COMRAM] float 
 12852 ;; Auto vars:     Size  Location     Type
 12853 ;;  u               4   80[COMRAM] struct .
 12854 ;;  m               4   74[COMRAM] unsigned long 
 12855 ;;  e               2   78[COMRAM] int 
 12856 ;; Return value:  Size  Location     Type
 12857 ;;                  4   64[COMRAM] float 
 12858 ;; Registers used:
 12859 ;;		wreg, status,2, status,0
 12860 ;; Tracked objects:
 12861 ;;		On entry : 0/0
 12862 ;;		On exit  : 0/0
 12863 ;;		Unchanged: 0/0
 12864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12865 ;;      Params:         4       0       0       0       0       0       0       0       0
 12866 ;;      Locals:        10       0       0       0       0       0       0       0       0
 12867 ;;      Temps:          6       0       0       0       0       0       0       0       0
 12868 ;;      Totals:        20       0       0       0       0       0       0       0       0
 12869 ;;Total ram usage:       20 bytes
 12870 ;; Hardware stack levels used: 1
 12871 ;; Hardware stack levels required when called: 1
 12872 ;; This function calls:
 12873 ;;		Nothing
 12874 ;; This function is called by:
 12875 ;;		_efgtoa
 12876 ;; This function uses a non-reentrant model
 12877 ;;
 12878                           
 12879                           	psect	text29
 12880   005362                     __ptext29:
 12881                           	callstack 0
 12882   005362                     _floorf:
 12883                           	callstack 24
 12884   005362  C300  F051         	movff	floorf@F521,floorf@u
 12885   005366  C301  F052         	movff	floorf@F521+1,floorf@u+1
 12886   00536A  C302  F053         	movff	floorf@F521+2,floorf@u+2
 12887   00536E  C303  F054         	movff	floorf@F521+3,floorf@u+3
 12888   005372  C041  F051         	movff	floorf@x,floorf@u
 12889   005376  C042  F052         	movff	floorf@x+1,floorf@u+1
 12890   00537A  C043  F053         	movff	floorf@x+2,floorf@u+2
 12891   00537E  C044  F054         	movff	floorf@x+3,floorf@u+3
 12892   005382  0E81               	movlw	129
 12893   005384  6E45               	movwf	??_floorf^0,c
 12894   005386  0EFF               	movlw	255
 12895   005388  6E46               	movwf	(??_floorf+1)^0,c
 12896   00538A  C051  F047         	movff	floorf@u,??_floorf+2
 12897   00538E  C052  F048         	movff	floorf@u+1,??_floorf+3
 12898   005392  C053  F049         	movff	floorf@u+2,??_floorf+4
 12899   005396  C054  F04A         	movff	floorf@u+3,??_floorf+5
 12900   00539A  0E18               	movlw	24
 12901   00539C  EFD5  F029         	goto	u8470
 12902   0053A0                     u8475:
 12903   0053A0  90D8               	bcf	status,0,c
 12904   0053A2  324A               	rrcf	(??_floorf+5)^0,f,c
 12905   0053A4  3249               	rrcf	(??_floorf+4)^0,f,c
 12906   0053A6  3248               	rrcf	(??_floorf+3)^0,f,c
 12907   0053A8  3247               	rrcf	(??_floorf+2)^0,f,c
 12908   0053AA                     u8470:
 12909   0053AA  2EE8               	decfsz	wreg,f,c
 12910   0053AC  EFD0  F029         	goto	u8475
 12911   0053B0  5047               	movf	(??_floorf+2)^0,w,c
 12912   0053B2  2445               	addwf	??_floorf^0,w,c
 12913   0053B4  6E4F               	movwf	floorf@e^0,c
 12914   0053B6  0E00               	movlw	0
 12915   0053B8  2046               	addwfc	(??_floorf+1)^0,w,c
 12916   0053BA  6E50               	movwf	(floorf@e+1)^0,c
 12917   0053BC  BE50               	btfsc	(floorf@e+1)^0,7,c
 12918   0053BE  EFEA  F029         	goto	u8481
 12919   0053C2  5050               	movf	(floorf@e+1)^0,w,c
 12920   0053C4  E109               	bnz	u8480
 12921   0053C6  0E17               	movlw	23
 12922   0053C8  5C4F               	subwf	floorf@e^0,w,c
 12923   0053CA  A0D8               	btfss	status,0,c
 12924   0053CC  EFEA  F029         	goto	u8481
 12925   0053D0  EFEC  F029         	goto	u8480
 12926   0053D4                     u8481:
 12927   0053D4  EFF6  F029         	goto	l6628
 12928   0053D8                     u8480:
 12929   0053D8                     l6626:
 12930   0053D8  C041  F041         	movff	floorf@x,?_floorf
 12931   0053DC  C042  F042         	movff	floorf@x+1,?_floorf+1
 12932   0053E0  C043  F043         	movff	floorf@x+2,?_floorf+2
 12933   0053E4  C044  F044         	movff	floorf@x+3,?_floorf+3
 12934   0053E8  EFB9  F02A         	goto	l1165
 12935   0053EC                     l6628:
 12936   0053EC  BE50               	btfsc	(floorf@e+1)^0,7,c
 12937   0053EE  EFFB  F029         	goto	u8491
 12938   0053F2  EFFD  F029         	goto	u8490
 12939   0053F6                     u8491:
 12940   0053F6  EF6D  F02A         	goto	l6638
 12941   0053FA                     u8490:
 12942   0053FA  C04F  F045         	movff	floorf@e,??_floorf
 12943   0053FE  0EFF               	movlw	255
 12944   005400  6E46               	movwf	(??_floorf+1)^0,c
 12945   005402  0EFF               	movlw	255
 12946   005404  6E47               	movwf	(??_floorf+2)^0,c
 12947   005406  0E7F               	movlw	127
 12948   005408  6E48               	movwf	(??_floorf+3)^0,c
 12949   00540A  0E00               	movlw	0
 12950   00540C  6E49               	movwf	(??_floorf+4)^0,c
 12951   00540E                     u8505:
 12952   00540E  6645               	tstfsz	??_floorf^0,c
 12953   005410  EF0C  F02A         	goto	u8506
 12954   005414  EF14  F02A         	goto	u8507
 12955   005418                     u8506:
 12956   005418  3449               	rlcf	(??_floorf+4)^0,w,c
 12957   00541A  3249               	rrcf	(??_floorf+4)^0,f,c
 12958   00541C  3248               	rrcf	(??_floorf+3)^0,f,c
 12959   00541E  3247               	rrcf	(??_floorf+2)^0,f,c
 12960   005420  3246               	rrcf	(??_floorf+1)^0,f,c
 12961   005422  2E45               	decfsz	??_floorf^0,f,c
 12962   005424  EF07  F02A         	goto	u8505
 12963   005428                     u8507:
 12964   005428  C046  F04B         	movff	??_floorf+1,floorf@m
 12965   00542C  C047  F04C         	movff	??_floorf+2,floorf@m+1
 12966   005430  C048  F04D         	movff	??_floorf+3,floorf@m+2
 12967   005434  C049  F04E         	movff	??_floorf+4,floorf@m+3
 12968   005438  504B               	movf	floorf@m^0,w,c
 12969   00543A  1451               	andwf	floorf@u^0,w,c
 12970   00543C  6E45               	movwf	??_floorf^0,c
 12971   00543E  504C               	movf	(floorf@m+1)^0,w,c
 12972   005440  1452               	andwf	(floorf@u+1)^0,w,c
 12973   005442  6E46               	movwf	(??_floorf+1)^0,c
 12974   005444  504D               	movf	(floorf@m+2)^0,w,c
 12975   005446  1453               	andwf	(floorf@u+2)^0,w,c
 12976   005448  6E47               	movwf	(??_floorf+2)^0,c
 12977   00544A  504E               	movf	(floorf@m+3)^0,w,c
 12978   00544C  1454               	andwf	(floorf@u+3)^0,w,c
 12979   00544E  6E48               	movwf	(??_floorf+3)^0,c
 12980   005450  5045               	movf	??_floorf^0,w,c
 12981   005452  1046               	iorwf	(??_floorf+1)^0,w,c
 12982   005454  1047               	iorwf	(??_floorf+2)^0,w,c
 12983   005456  1048               	iorwf	(??_floorf+3)^0,w,c
 12984   005458  A4D8               	btfss	status,2,c
 12985   00545A  EF31  F02A         	goto	u8511
 12986   00545E  EF33  F02A         	goto	u8510
 12987   005462                     u8511:
 12988   005462  EF35  F02A         	goto	l6634
 12989   005466                     u8510:
 12990   005466  EFEC  F029         	goto	l6626
 12991   00546A                     l6634:
 12992   00546A  C051  F045         	movff	floorf@u,??_floorf
 12993   00546E  C052  F046         	movff	floorf@u+1,??_floorf+1
 12994   005472  C053  F047         	movff	floorf@u+2,??_floorf+2
 12995   005476  C054  F048         	movff	floorf@u+3,??_floorf+3
 12996   00547A  0E20               	movlw	32
 12997   00547C  EF45  F02A         	goto	u8520
 12998   005480                     u8525:
 12999   005480  90D8               	bcf	status,0,c
 13000   005482  3248               	rrcf	(??_floorf+3)^0,f,c
 13001   005484  3247               	rrcf	(??_floorf+2)^0,f,c
 13002   005486  3246               	rrcf	(??_floorf+1)^0,f,c
 13003   005488  3245               	rrcf	??_floorf^0,f,c
 13004   00548A                     u8520:
 13005   00548A  2EE8               	decfsz	wreg,f,c
 13006   00548C  EF40  F02A         	goto	u8525
 13007   005490  5045               	movf	??_floorf^0,w,c
 13008   005492  1046               	iorwf	(??_floorf+1)^0,w,c
 13009   005494  1047               	iorwf	(??_floorf+2)^0,w,c
 13010   005496  1048               	iorwf	(??_floorf+3)^0,w,c
 13011   005498  B4D8               	btfsc	status,2,c
 13012   00549A  EF51  F02A         	goto	u8531
 13013   00549E  EF53  F02A         	goto	u8530
 13014   0054A2                     u8531:
 13015   0054A2  EF5B  F02A         	goto	l1168
 13016   0054A6                     u8530:
 13017   0054A6  504B               	movf	floorf@m^0,w,c
 13018   0054A8  2651               	addwf	floorf@u^0,f,c
 13019   0054AA  504C               	movf	(floorf@m+1)^0,w,c
 13020   0054AC  2252               	addwfc	(floorf@u+1)^0,f,c
 13021   0054AE  504D               	movf	(floorf@m+2)^0,w,c
 13022   0054B0  2253               	addwfc	(floorf@u+2)^0,f,c
 13023   0054B2  504E               	movf	(floorf@m+3)^0,w,c
 13024   0054B4  2254               	addwfc	(floorf@u+3)^0,f,c
 13025   0054B6                     l1168:
 13026   0054B6  1C4B               	comf	floorf@m^0,w,c
 13027   0054B8  6E45               	movwf	??_floorf^0,c
 13028   0054BA  1C4C               	comf	(floorf@m+1)^0,w,c
 13029   0054BC  6E46               	movwf	(??_floorf+1)^0,c
 13030   0054BE  1C4D               	comf	(floorf@m+2)^0,w,c
 13031   0054C0  6E47               	movwf	(??_floorf+2)^0,c
 13032   0054C2  1C4E               	comf	(floorf@m+3)^0,w,c
 13033   0054C4  6E48               	movwf	(??_floorf+3)^0,c
 13034   0054C6  5045               	movf	??_floorf^0,w,c
 13035   0054C8  1651               	andwf	floorf@u^0,f,c
 13036   0054CA  5046               	movf	(??_floorf+1)^0,w,c
 13037   0054CC  1652               	andwf	(floorf@u+1)^0,f,c
 13038   0054CE  5047               	movf	(??_floorf+2)^0,w,c
 13039   0054D0  1653               	andwf	(floorf@u+2)^0,f,c
 13040   0054D2  5048               	movf	(??_floorf+3)^0,w,c
 13041   0054D4  1654               	andwf	(floorf@u+3)^0,f,c
 13042   0054D6  EFB1  F02A         	goto	l6646
 13043   0054DA                     l6638:
 13044   0054DA  C051  F045         	movff	floorf@u,??_floorf
 13045   0054DE  C052  F046         	movff	floorf@u+1,??_floorf+1
 13046   0054E2  C053  F047         	movff	floorf@u+2,??_floorf+2
 13047   0054E6  C054  F048         	movff	floorf@u+3,??_floorf+3
 13048   0054EA  0E20               	movlw	32
 13049   0054EC  EF7D  F02A         	goto	u8540
 13050   0054F0                     u8545:
 13051   0054F0  90D8               	bcf	status,0,c
 13052   0054F2  3248               	rrcf	(??_floorf+3)^0,f,c
 13053   0054F4  3247               	rrcf	(??_floorf+2)^0,f,c
 13054   0054F6  3246               	rrcf	(??_floorf+1)^0,f,c
 13055   0054F8  3245               	rrcf	??_floorf^0,f,c
 13056   0054FA                     u8540:
 13057   0054FA  2EE8               	decfsz	wreg,f,c
 13058   0054FC  EF78  F02A         	goto	u8545
 13059   005500  5045               	movf	??_floorf^0,w,c
 13060   005502  1046               	iorwf	(??_floorf+1)^0,w,c
 13061   005504  1047               	iorwf	(??_floorf+2)^0,w,c
 13062   005506  1048               	iorwf	(??_floorf+3)^0,w,c
 13063   005508  A4D8               	btfss	status,2,c
 13064   00550A  EF89  F02A         	goto	u8551
 13065   00550E  EF8B  F02A         	goto	u8550
 13066   005512                     u8551:
 13067   005512  EF95  F02A         	goto	l6642
 13068   005516                     u8550:
 13069   005516  0E00               	movlw	0
 13070   005518  6E51               	movwf	floorf@u^0,c
 13071   00551A  0E00               	movlw	0
 13072   00551C  6E52               	movwf	(floorf@u+1)^0,c
 13073   00551E  0E00               	movlw	0
 13074   005520  6E53               	movwf	(floorf@u+2)^0,c
 13075   005522  0E00               	movlw	0
 13076   005524  6E54               	movwf	(floorf@u+3)^0,c
 13077   005526  EFB1  F02A         	goto	l6646
 13078   00552A                     l6642:
 13079   00552A  90D8               	bcf	status,0,c
 13080   00552C  3451               	rlcf	floorf@u^0,w,c
 13081   00552E  6E45               	movwf	??_floorf^0,c
 13082   005530  3452               	rlcf	(floorf@u+1)^0,w,c
 13083   005532  6E46               	movwf	(??_floorf+1)^0,c
 13084   005534  3453               	rlcf	(floorf@u+2)^0,w,c
 13085   005536  6E47               	movwf	(??_floorf+2)^0,c
 13086   005538  3454               	rlcf	(floorf@u+3)^0,w,c
 13087   00553A  6E48               	movwf	(??_floorf+3)^0,c
 13088   00553C  5045               	movf	??_floorf^0,w,c
 13089   00553E  1046               	iorwf	(??_floorf+1)^0,w,c
 13090   005540  1047               	iorwf	(??_floorf+2)^0,w,c
 13091   005542  1048               	iorwf	(??_floorf+3)^0,w,c
 13092   005544  B4D8               	btfsc	status,2,c
 13093   005546  EFA7  F02A         	goto	u8561
 13094   00554A  EFA9  F02A         	goto	u8560
 13095   00554E                     u8561:
 13096   00554E  EFB1  F02A         	goto	l6646
 13097   005552                     u8560:
 13098   005552  0E00               	movlw	0
 13099   005554  6E51               	movwf	floorf@u^0,c
 13100   005556  0E00               	movlw	0
 13101   005558  6E52               	movwf	(floorf@u+1)^0,c
 13102   00555A  0E80               	movlw	128
 13103   00555C  6E53               	movwf	(floorf@u+2)^0,c
 13104   00555E  0EBF               	movlw	191
 13105   005560  6E54               	movwf	(floorf@u+3)^0,c
 13106   005562                     l6646:
 13107   005562  C051  F041         	movff	floorf@u,?_floorf
 13108   005566  C052  F042         	movff	floorf@u+1,?_floorf+1
 13109   00556A  C053  F043         	movff	floorf@u+2,?_floorf+2
 13110   00556E  C054  F044         	movff	floorf@u+3,?_floorf+3
 13111   005572                     l1165:
 13112   005572  0012               	return		;funcret
 13113   005574                     __end_of_floorf:
 13114                           	callstack 0
 13115                           
 13116 ;; *************** function ___fpclassifyf *****************
 13117 ;; Defined at:
 13118 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
 13119 ;; Parameters:    Size  Location     Type
 13120 ;;  x               4    0[COMRAM] float 
 13121 ;; Auto vars:     Size  Location     Type
 13122 ;;  u               4   10[COMRAM] struct .
 13123 ;;  e               2    8[COMRAM] int 
 13124 ;; Return value:  Size  Location     Type
 13125 ;;                  2    0[COMRAM] int 
 13126 ;; Registers used:
 13127 ;;		wreg, status,2, status,0
 13128 ;; Tracked objects:
 13129 ;;		On entry : 0/0
 13130 ;;		On exit  : 0/0
 13131 ;;		Unchanged: 0/0
 13132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13133 ;;      Params:         4       0       0       0       0       0       0       0       0
 13134 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13135 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13136 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13137 ;;Total ram usage:       14 bytes
 13138 ;; Hardware stack levels used: 1
 13139 ;; Hardware stack levels required when called: 1
 13140 ;; This function calls:
 13141 ;;		Nothing
 13142 ;; This function is called by:
 13143 ;;		_efgtoa
 13144 ;; This function uses a non-reentrant model
 13145 ;;
 13146                           
 13147                           	psect	text30
 13148   0061B8                     __ptext30:
 13149                           	callstack 0
 13150   0061B8                     ___fpclassifyf:
 13151                           	callstack 24
 13152   0061B8  C304  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 13153   0061BC  C305  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 13154   0061C0  C306  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 13155   0061C4  C307  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 13156   0061C8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 13157   0061CC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 13158   0061D0  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 13159   0061D4  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 13160   0061D8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13161   0061DC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13162   0061E0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13163   0061E4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13164   0061E8  0E18               	movlw	24
 13165   0061EA  EFFC  F030         	goto	u8390
 13166   0061EE                     u8395:
 13167   0061EE  90D8               	bcf	status,0,c
 13168   0061F0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 13169   0061F2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 13170   0061F4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 13171   0061F6  3205               	rrcf	??___fpclassifyf^0,f,c
 13172   0061F8                     u8390:
 13173   0061F8  2EE8               	decfsz	wreg,f,c
 13174   0061FA  EFF7  F030         	goto	u8395
 13175   0061FE  5005               	movf	??___fpclassifyf^0,w,c
 13176   006200  6E09               	movwf	___fpclassifyf@e^0,c
 13177   006202  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 13178   006204  5009               	movf	___fpclassifyf@e^0,w,c
 13179   006206  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13180   006208  A4D8               	btfss	status,2,c
 13181   00620A  EF09  F031         	goto	u8401
 13182   00620E  EF0B  F031         	goto	u8400
 13183   006212                     u8401:
 13184   006212  EF2B  F031         	goto	l6604
 13185   006216                     u8400:
 13186   006216  90D8               	bcf	status,0,c
 13187   006218  340B               	rlcf	___fpclassifyf@u^0,w,c
 13188   00621A  6E05               	movwf	??___fpclassifyf^0,c
 13189   00621C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 13190   00621E  6E06               	movwf	(??___fpclassifyf+1)^0,c
 13191   006220  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 13192   006222  6E07               	movwf	(??___fpclassifyf+2)^0,c
 13193   006224  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 13194   006226  6E08               	movwf	(??___fpclassifyf+3)^0,c
 13195   006228  5005               	movf	??___fpclassifyf^0,w,c
 13196   00622A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13197   00622C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13198   00622E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13199   006230  A4D8               	btfss	status,2,c
 13200   006232  EF1D  F031         	goto	u8411
 13201   006236  EF1F  F031         	goto	u8410
 13202   00623A                     u8411:
 13203   00623A  EF25  F031         	goto	l6600
 13204   00623E                     u8410:
 13205   00623E  0E00               	movlw	0
 13206   006240  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13207   006242  0E02               	movlw	2
 13208   006244  6E01               	movwf	?___fpclassifyf^0,c
 13209   006246  EF5A  F031         	goto	l1151
 13210   00624A                     l6600:
 13211   00624A  0E00               	movlw	0
 13212   00624C  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13213   00624E  0E03               	movlw	3
 13214   006250  6E01               	movwf	?___fpclassifyf^0,c
 13215   006252  EF5A  F031         	goto	l1151
 13216   006256                     l6604:
 13217   006256  2809               	incf	___fpclassifyf@e^0,w,c
 13218   006258  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13219   00625A  A4D8               	btfss	status,2,c
 13220   00625C  EF32  F031         	goto	u8421
 13221   006260  EF34  F031         	goto	u8420
 13222   006264                     u8421:
 13223   006264  EF56  F031         	goto	l6610
 13224   006268                     u8420:
 13225   006268  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13226   00626C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13227   006270  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13228   006274  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13229   006278  0E09               	movlw	9
 13230   00627A                     u8435:
 13231   00627A  90D8               	bcf	status,0,c
 13232   00627C  3605               	rlcf	??___fpclassifyf^0,f,c
 13233   00627E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 13234   006280  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 13235   006282  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 13236   006284  2EE8               	decfsz	wreg,f,c
 13237   006286  EF3D  F031         	goto	u8435
 13238   00628A  5005               	movf	??___fpclassifyf^0,w,c
 13239   00628C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13240   00628E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13241   006290  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13242   006292  B4D8               	btfsc	status,2,c
 13243   006294  EF4E  F031         	goto	u8441
 13244   006298  EF51  F031         	goto	u8440
 13245   00629C                     u8441:
 13246   00629C  0E01               	movlw	1
 13247   00629E  EF52  F031         	goto	u8450
 13248   0062A2                     u8440:
 13249   0062A2  0E00               	movlw	0
 13250   0062A4                     u8450:
 13251   0062A4  6E01               	movwf	?___fpclassifyf^0,c
 13252   0062A6  6A02               	clrf	(?___fpclassifyf+1)^0,c
 13253   0062A8  EF5A  F031         	goto	l1151
 13254   0062AC                     l6610:
 13255   0062AC  0E00               	movlw	0
 13256   0062AE  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13257   0062B0  0E04               	movlw	4
 13258   0062B2  6E01               	movwf	?___fpclassifyf^0,c
 13259   0062B4                     l1151:
 13260   0062B4  0012               	return		;funcret
 13261   0062B6                     __end_of___fpclassifyf:
 13262                           	callstack 0
 13263                           
 13264 ;; *************** function ___flsub *****************
 13265 ;; Defined at:
 13266 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13267 ;; Parameters:    Size  Location     Type
 13268 ;;  b               4   80[COMRAM] int 
 13269 ;;  a               4   84[COMRAM] int 
 13270 ;; Auto vars:     Size  Location     Type
 13271 ;;		None
 13272 ;; Return value:  Size  Location     Type
 13273 ;;                  4   80[COMRAM] int 
 13274 ;; Registers used:
 13275 ;;		wreg, status,2, status,0, cstack
 13276 ;; Tracked objects:
 13277 ;;		On entry : 0/0
 13278 ;;		On exit  : 0/0
 13279 ;;		Unchanged: 0/0
 13280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13281 ;;      Params:         8       0       0       0       0       0       0       0       0
 13282 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13283 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13284 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13285 ;;Total ram usage:        8 bytes
 13286 ;; Hardware stack levels used: 1
 13287 ;; Hardware stack levels required when called: 2
 13288 ;; This function calls:
 13289 ;;		___fladd
 13290 ;; This function is called by:
 13291 ;;		_main
 13292 ;;		_Handle_Fire_Events
 13293 ;;		_Handle_Test_Events
 13294 ;;		_Read_Sensors
 13295 ;;		_efgtoa
 13296 ;;		_powf
 13297 ;; This function uses a non-reentrant model
 13298 ;;
 13299                           
 13300                           	psect	text31
 13301   006C02                     __ptext31:
 13302                           	callstack 0
 13303   006C02                     ___flsub:
 13304                           	callstack 28
 13305   006C02  0E00               	movlw	0
 13306   006C04  1A55               	xorwf	___flsub@a^0,f,c
 13307   006C06  0E00               	movlw	0
 13308   006C08  1A56               	xorwf	(___flsub@a+1)^0,f,c
 13309   006C0A  0E00               	movlw	0
 13310   006C0C  1A57               	xorwf	(___flsub@a+2)^0,f,c
 13311   006C0E  0E80               	movlw	128
 13312   006C10  1A58               	xorwf	(___flsub@a+3)^0,f,c
 13313   006C12  C051  F041         	movff	___flsub@b,___fladd@b
 13314   006C16  C052  F042         	movff	___flsub@b+1,___fladd@b+1
 13315   006C1A  C053  F043         	movff	___flsub@b+2,___fladd@b+2
 13316   006C1E  C054  F044         	movff	___flsub@b+3,___fladd@b+3
 13317   006C22  C055  F045         	movff	___flsub@a,___fladd@a
 13318   006C26  C056  F046         	movff	___flsub@a+1,___fladd@a+1
 13319   006C2A  C057  F047         	movff	___flsub@a+2,___fladd@a+2
 13320   006C2E  C058  F048         	movff	___flsub@a+3,___fladd@a+3
 13321   006C32  EC6B  F01D         	call	___fladd	;wreg free
 13322   006C36  C041  F051         	movff	?___fladd,?___flsub
 13323   006C3A  C042  F052         	movff	?___fladd+1,?___flsub+1
 13324   006C3E  C043  F053         	movff	?___fladd+2,?___flsub+2
 13325   006C42  C044  F054         	movff	?___fladd+3,?___flsub+3
 13326   006C46  0012               	return		;funcret
 13327   006C48                     __end_of___flsub:
 13328                           	callstack 0
 13329                           
 13330 ;; *************** function ___fladd *****************
 13331 ;; Defined at:
 13332 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;  b               4   64[COMRAM] int 
 13335 ;;  a               4   68[COMRAM] int 
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;  grs             1   79[COMRAM] unsigned char 
 13338 ;;  bexp            1   78[COMRAM] unsigned char 
 13339 ;;  aexp            1   77[COMRAM] unsigned char 
 13340 ;;  signs           1   76[COMRAM] unsigned char 
 13341 ;; Return value:  Size  Location     Type
 13342 ;;                  4   64[COMRAM] unsigned char 
 13343 ;; Registers used:
 13344 ;;		wreg, status,2, status,0
 13345 ;; Tracked objects:
 13346 ;;		On entry : 0/0
 13347 ;;		On exit  : 0/0
 13348 ;;		Unchanged: 0/0
 13349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13350 ;;      Params:         8       0       0       0       0       0       0       0       0
 13351 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13352 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13353 ;;      Totals:        16       0       0       0       0       0       0       0       0
 13354 ;;Total ram usage:       16 bytes
 13355 ;; Hardware stack levels used: 1
 13356 ;; Hardware stack levels required when called: 1
 13357 ;; This function calls:
 13358 ;;		Nothing
 13359 ;; This function is called by:
 13360 ;;		_main
 13361 ;;		_Read_Sensors
 13362 ;;		_Apply_Filter
 13363 ;;		___flsub
 13364 ;;		_efgtoa
 13365 ;;		_powf
 13366 ;; This function uses a non-reentrant model
 13367 ;;
 13368                           
 13369                           	psect	text32
 13370   003AD6                     __ptext32:
 13371                           	callstack 0
 13372   003AD6                     ___fladd:
 13373                           	callstack 28
 13374   003AD6  5044               	movf	(___fladd@b+3)^0,w,c
 13375   003AD8  0B80               	andlw	128
 13376   003ADA  6E4D               	movwf	___fladd@signs^0,c
 13377   003ADC  5044               	movf	(___fladd@b+3)^0,w,c
 13378   003ADE  2444               	addwf	(___fladd@b+3)^0,w,c
 13379   003AE0  6E4F               	movwf	___fladd@bexp^0,c
 13380   003AE2  AE43               	btfss	(___fladd@b+2)^0,7,c
 13381   003AE4  EF76  F01D         	goto	u7191
 13382   003AE8  EF78  F01D         	goto	u7190
 13383   003AEC                     u7191:
 13384   003AEC  EF79  F01D         	goto	l5898
 13385   003AF0                     u7190:
 13386   003AF0  804F               	bsf	___fladd@bexp^0,0,c
 13387   003AF2                     l5898:
 13388   003AF2  504F               	movf	___fladd@bexp^0,w,c
 13389   003AF4  B4D8               	btfsc	status,2,c
 13390   003AF6  EF7F  F01D         	goto	u7201
 13391   003AFA  EF81  F01D         	goto	u7200
 13392   003AFE                     u7201:
 13393   003AFE  EF95  F01D         	goto	l5908
 13394   003B02                     u7200:
 13395   003B02  284F               	incf	___fladd@bexp^0,w,c
 13396   003B04  A4D8               	btfss	status,2,c
 13397   003B06  EF87  F01D         	goto	u7211
 13398   003B0A  EF89  F01D         	goto	u7210
 13399   003B0E                     u7211:
 13400   003B0E  EF91  F01D         	goto	l5904
 13401   003B12                     u7210:
 13402   003B12  0E00               	movlw	0
 13403   003B14  6E41               	movwf	___fladd@b^0,c
 13404   003B16  0E00               	movlw	0
 13405   003B18  6E42               	movwf	(___fladd@b+1)^0,c
 13406   003B1A  0E00               	movlw	0
 13407   003B1C  6E43               	movwf	(___fladd@b+2)^0,c
 13408   003B1E  0E00               	movlw	0
 13409   003B20  6E44               	movwf	(___fladd@b+3)^0,c
 13410   003B22                     l5904:
 13411   003B22  8E43               	bsf	(___fladd@b+2)^0,7,c
 13412   003B24  6A44               	clrf	(___fladd@b+3)^0,c
 13413   003B26  EF9D  F01D         	goto	l5910
 13414   003B2A                     l5908:
 13415   003B2A  0E00               	movlw	0
 13416   003B2C  6E41               	movwf	___fladd@b^0,c
 13417   003B2E  0E00               	movlw	0
 13418   003B30  6E42               	movwf	(___fladd@b+1)^0,c
 13419   003B32  0E00               	movlw	0
 13420   003B34  6E43               	movwf	(___fladd@b+2)^0,c
 13421   003B36  0E00               	movlw	0
 13422   003B38  6E44               	movwf	(___fladd@b+3)^0,c
 13423   003B3A                     l5910:
 13424   003B3A  5048               	movf	(___fladd@a+3)^0,w,c
 13425   003B3C  0B80               	andlw	128
 13426   003B3E  6E4E               	movwf	___fladd@aexp^0,c
 13427   003B40  504D               	movf	___fladd@signs^0,w,c
 13428   003B42  184E               	xorwf	___fladd@aexp^0,w,c
 13429   003B44  B4D8               	btfsc	status,2,c
 13430   003B46  EFA7  F01D         	goto	u7221
 13431   003B4A  EFA9  F01D         	goto	u7220
 13432   003B4E                     u7221:
 13433   003B4E  EFAA  F01D         	goto	l5916
 13434   003B52                     u7220:
 13435   003B52  8C4D               	bsf	___fladd@signs^0,6,c
 13436   003B54                     l5916:
 13437   003B54  5048               	movf	(___fladd@a+3)^0,w,c
 13438   003B56  2448               	addwf	(___fladd@a+3)^0,w,c
 13439   003B58  6E4E               	movwf	___fladd@aexp^0,c
 13440   003B5A  AE47               	btfss	(___fladd@a+2)^0,7,c
 13441   003B5C  EFB2  F01D         	goto	u7231
 13442   003B60  EFB4  F01D         	goto	u7230
 13443   003B64                     u7231:
 13444   003B64  EFB5  F01D         	goto	l5922
 13445   003B68                     u7230:
 13446   003B68  804E               	bsf	___fladd@aexp^0,0,c
 13447   003B6A                     l5922:
 13448   003B6A  504E               	movf	___fladd@aexp^0,w,c
 13449   003B6C  B4D8               	btfsc	status,2,c
 13450   003B6E  EFBB  F01D         	goto	u7241
 13451   003B72  EFBD  F01D         	goto	u7240
 13452   003B76                     u7241:
 13453   003B76  EFD1  F01D         	goto	l5932
 13454   003B7A                     u7240:
 13455   003B7A  284E               	incf	___fladd@aexp^0,w,c
 13456   003B7C  A4D8               	btfss	status,2,c
 13457   003B7E  EFC3  F01D         	goto	u7251
 13458   003B82  EFC5  F01D         	goto	u7250
 13459   003B86                     u7251:
 13460   003B86  EFCD  F01D         	goto	l5928
 13461   003B8A                     u7250:
 13462   003B8A  0E00               	movlw	0
 13463   003B8C  6E45               	movwf	___fladd@a^0,c
 13464   003B8E  0E00               	movlw	0
 13465   003B90  6E46               	movwf	(___fladd@a+1)^0,c
 13466   003B92  0E00               	movlw	0
 13467   003B94  6E47               	movwf	(___fladd@a+2)^0,c
 13468   003B96  0E00               	movlw	0
 13469   003B98  6E48               	movwf	(___fladd@a+3)^0,c
 13470   003B9A                     l5928:
 13471   003B9A  8E47               	bsf	(___fladd@a+2)^0,7,c
 13472   003B9C  6A48               	clrf	(___fladd@a+3)^0,c
 13473   003B9E  EFD9  F01D         	goto	l5934
 13474   003BA2                     l5932:
 13475   003BA2  0E00               	movlw	0
 13476   003BA4  6E45               	movwf	___fladd@a^0,c
 13477   003BA6  0E00               	movlw	0
 13478   003BA8  6E46               	movwf	(___fladd@a+1)^0,c
 13479   003BAA  0E00               	movlw	0
 13480   003BAC  6E47               	movwf	(___fladd@a+2)^0,c
 13481   003BAE  0E00               	movlw	0
 13482   003BB0  6E48               	movwf	(___fladd@a+3)^0,c
 13483   003BB2                     l5934:
 13484   003BB2  504F               	movf	___fladd@bexp^0,w,c
 13485   003BB4  5C4E               	subwf	___fladd@aexp^0,w,c
 13486   003BB6  B0D8               	btfsc	status,0,c
 13487   003BB8  EFE0  F01D         	goto	u7261
 13488   003BBC  EFE2  F01D         	goto	u7260
 13489   003BC0                     u7261:
 13490   003BC0  EF09  F01E         	goto	l5970
 13491   003BC4                     u7260:
 13492   003BC4  AC4D               	btfss	___fladd@signs^0,6,c
 13493   003BC6  EFE7  F01D         	goto	u7271
 13494   003BCA  EFE9  F01D         	goto	u7270
 13495   003BCE                     u7271:
 13496   003BCE  EFEB  F01D         	goto	l5940
 13497   003BD2                     u7270:
 13498   003BD2  0E80               	movlw	128
 13499   003BD4  1A4D               	xorwf	___fladd@signs^0,f,c
 13500   003BD6                     l5940:
 13501   003BD6  C04F  F050         	movff	___fladd@bexp,___fladd@grs
 13502   003BDA  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
 13503   003BDE  C050  F04E         	movff	___fladd@grs,___fladd@aexp
 13504   003BE2  C041  F050         	movff	___fladd@b,___fladd@grs
 13505   003BE6  C045  F041         	movff	___fladd@a,___fladd@b
 13506   003BEA  C050  F045         	movff	___fladd@grs,___fladd@a
 13507   003BEE  C042  F050         	movff	___fladd@b+1,___fladd@grs
 13508   003BF2  C046  F042         	movff	___fladd@a+1,___fladd@b+1
 13509   003BF6  C050  F046         	movff	___fladd@grs,___fladd@a+1
 13510   003BFA  C043  F050         	movff	___fladd@b+2,___fladd@grs
 13511   003BFE  C047  F043         	movff	___fladd@a+2,___fladd@b+2
 13512   003C02  C050  F047         	movff	___fladd@grs,___fladd@a+2
 13513   003C06  C044  F050         	movff	___fladd@b+3,___fladd@grs
 13514   003C0A  C048  F044         	movff	___fladd@a+3,___fladd@b+3
 13515   003C0E  C050  F048         	movff	___fladd@grs,___fladd@a+3
 13516   003C12                     l5970:
 13517   003C12  6A50               	clrf	___fladd@grs^0,c
 13518   003C14  504F               	movf	___fladd@bexp^0,w,c
 13519   003C16  C04E  F049         	movff	___fladd@aexp,??___fladd
 13520   003C1A  6A4A               	clrf	(??___fladd+1)^0,c
 13521   003C1C  5E49               	subwf	??___fladd^0,f,c
 13522   003C1E  0E00               	movlw	0
 13523   003C20  5A4A               	subwfb	(??___fladd+1)^0,f,c
 13524   003C22  BE4A               	btfsc	(??___fladd+1)^0,7,c
 13525   003C24  EF1D  F01E         	goto	u7281
 13526   003C28  504A               	movf	(??___fladd+1)^0,w,c
 13527   003C2A  E109               	bnz	u7280
 13528   003C2C  0E1A               	movlw	26
 13529   003C2E  5C49               	subwf	??___fladd^0,w,c
 13530   003C30  A0D8               	btfss	status,0,c
 13531   003C32  EF1D  F01E         	goto	u7281
 13532   003C36  EF1F  F01E         	goto	u7280
 13533   003C3A                     u7281:
 13534   003C3A  EF56  F01E         	goto	l802
 13535   003C3E                     u7280:
 13536   003C3E  5041               	movf	___fladd@b^0,w,c
 13537   003C40  1042               	iorwf	(___fladd@b+1)^0,w,c
 13538   003C42  1043               	iorwf	(___fladd@b+2)^0,w,c
 13539   003C44  1044               	iorwf	(___fladd@b+3)^0,w,c
 13540   003C46  A4D8               	btfss	status,2,c
 13541   003C48  EF28  F01E         	goto	u7291
 13542   003C4C  EF2B  F01E         	goto	u7290
 13543   003C50                     u7291:
 13544   003C50  0E01               	movlw	1
 13545   003C52  EF2C  F01E         	goto	u7300
 13546   003C56                     u7290:
 13547   003C56  0E00               	movlw	0
 13548   003C58                     u7300:
 13549   003C58  6E50               	movwf	___fladd@grs^0,c
 13550   003C5A  0E00               	movlw	0
 13551   003C5C  6E41               	movwf	___fladd@b^0,c
 13552   003C5E  0E00               	movlw	0
 13553   003C60  6E42               	movwf	(___fladd@b+1)^0,c
 13554   003C62  0E00               	movlw	0
 13555   003C64  6E43               	movwf	(___fladd@b+2)^0,c
 13556   003C66  0E00               	movlw	0
 13557   003C68  6E44               	movwf	(___fladd@b+3)^0,c
 13558   003C6A  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
 13559   003C6E  EF5F  F01E         	goto	l801
 13560   003C72                     l803:
 13561   003C72  A050               	btfss	___fladd@grs^0,0,c
 13562   003C74  EF3E  F01E         	goto	u7311
 13563   003C78  EF40  F01E         	goto	u7310
 13564   003C7C                     u7311:
 13565   003C7C  EF46  F01E         	goto	l5980
 13566   003C80                     u7310:
 13567   003C80  90D8               	bcf	status,0,c
 13568   003C82  3050               	rrcf	___fladd@grs^0,w,c
 13569   003C84  0901               	iorlw	1
 13570   003C86  6E50               	movwf	___fladd@grs^0,c
 13571   003C88  EF48  F01E         	goto	l5982
 13572   003C8C                     l5980:
 13573   003C8C  90D8               	bcf	status,0,c
 13574   003C8E  3250               	rrcf	___fladd@grs^0,f,c
 13575   003C90                     l5982:
 13576   003C90  A041               	btfss	___fladd@b^0,0,c
 13577   003C92  EF4D  F01E         	goto	u7321
 13578   003C96  EF4F  F01E         	goto	u7320
 13579   003C9A                     u7321:
 13580   003C9A  EF50  F01E         	goto	l5986
 13581   003C9E                     u7320:
 13582   003C9E  8E50               	bsf	___fladd@grs^0,7,c
 13583   003CA0                     l5986:
 13584   003CA0  3444               	rlcf	(___fladd@b+3)^0,w,c
 13585   003CA2  3244               	rrcf	(___fladd@b+3)^0,f,c
 13586   003CA4  3243               	rrcf	(___fladd@b+2)^0,f,c
 13587   003CA6  3242               	rrcf	(___fladd@b+1)^0,f,c
 13588   003CA8  3241               	rrcf	___fladd@b^0,f,c
 13589   003CAA  2A4F               	incf	___fladd@bexp^0,f,c
 13590   003CAC                     l802:
 13591   003CAC  504E               	movf	___fladd@aexp^0,w,c
 13592   003CAE  5C4F               	subwf	___fladd@bexp^0,w,c
 13593   003CB0  A0D8               	btfss	status,0,c
 13594   003CB2  EF5D  F01E         	goto	u7331
 13595   003CB6  EF5F  F01E         	goto	u7330
 13596   003CBA                     u7331:
 13597   003CBA  EF39  F01E         	goto	l803
 13598   003CBE                     u7330:
 13599   003CBE                     l801:
 13600   003CBE  BC4D               	btfsc	___fladd@signs^0,6,c
 13601   003CC0  EF64  F01E         	goto	u7341
 13602   003CC4  EF66  F01E         	goto	u7340
 13603   003CC8                     u7341:
 13604   003CC8  EFA6  F01E         	goto	l6014
 13605   003CCC                     u7340:
 13606   003CCC  504F               	movf	___fladd@bexp^0,w,c
 13607   003CCE  A4D8               	btfss	status,2,c
 13608   003CD0  EF6C  F01E         	goto	u7351
 13609   003CD4  EF6E  F01E         	goto	u7350
 13610   003CD8                     u7351:
 13611   003CD8  EF78  F01E         	goto	l5996
 13612   003CDC                     u7350:
 13613   003CDC  0E00               	movlw	0
 13614   003CDE  6E41               	movwf	?___fladd^0,c
 13615   003CE0  0E00               	movlw	0
 13616   003CE2  6E42               	movwf	(?___fladd+1)^0,c
 13617   003CE4  0E00               	movlw	0
 13618   003CE6  6E43               	movwf	(?___fladd+2)^0,c
 13619   003CE8  0E00               	movlw	0
 13620   003CEA  6E44               	movwf	(?___fladd+3)^0,c
 13621   003CEC  EFC5  F01F         	goto	l810
 13622   003CF0                     l5996:
 13623   003CF0  5045               	movf	___fladd@a^0,w,c
 13624   003CF2  2641               	addwf	___fladd@b^0,f,c
 13625   003CF4  5046               	movf	(___fladd@a+1)^0,w,c
 13626   003CF6  2242               	addwfc	(___fladd@b+1)^0,f,c
 13627   003CF8  5047               	movf	(___fladd@a+2)^0,w,c
 13628   003CFA  2243               	addwfc	(___fladd@b+2)^0,f,c
 13629   003CFC  5048               	movf	(___fladd@a+3)^0,w,c
 13630   003CFE  2244               	addwfc	(___fladd@b+3)^0,f,c
 13631   003D00  A044               	btfss	(___fladd@b+3)^0,0,c
 13632   003D02  EF85  F01E         	goto	u7361
 13633   003D06  EF87  F01E         	goto	u7360
 13634   003D0A                     u7361:
 13635   003D0A  EF33  F01F         	goto	l815
 13636   003D0E                     u7360:
 13637   003D0E  A050               	btfss	___fladd@grs^0,0,c
 13638   003D10  EF8C  F01E         	goto	u7371
 13639   003D14  EF8E  F01E         	goto	u7370
 13640   003D18                     u7371:
 13641   003D18  EF94  F01E         	goto	l6004
 13642   003D1C                     u7370:
 13643   003D1C  90D8               	bcf	status,0,c
 13644   003D1E  3050               	rrcf	___fladd@grs^0,w,c
 13645   003D20  0901               	iorlw	1
 13646   003D22  6E50               	movwf	___fladd@grs^0,c
 13647   003D24  EF96  F01E         	goto	l6006
 13648   003D28                     l6004:
 13649   003D28  90D8               	bcf	status,0,c
 13650   003D2A  3250               	rrcf	___fladd@grs^0,f,c
 13651   003D2C                     l6006:
 13652   003D2C  A041               	btfss	___fladd@b^0,0,c
 13653   003D2E  EF9B  F01E         	goto	u7381
 13654   003D32  EF9D  F01E         	goto	u7380
 13655   003D36                     u7381:
 13656   003D36  EF9E  F01E         	goto	l6010
 13657   003D3A                     u7380:
 13658   003D3A  8E50               	bsf	___fladd@grs^0,7,c
 13659   003D3C                     l6010:
 13660   003D3C  3444               	rlcf	(___fladd@b+3)^0,w,c
 13661   003D3E  3244               	rrcf	(___fladd@b+3)^0,f,c
 13662   003D40  3243               	rrcf	(___fladd@b+2)^0,f,c
 13663   003D42  3242               	rrcf	(___fladd@b+1)^0,f,c
 13664   003D44  3241               	rrcf	___fladd@b^0,f,c
 13665   003D46  2A4F               	incf	___fladd@bexp^0,f,c
 13666   003D48  EF33  F01F         	goto	l815
 13667   003D4C                     l6014:
 13668   003D4C  5045               	movf	___fladd@a^0,w,c
 13669   003D4E  5C41               	subwf	___fladd@b^0,w,c
 13670   003D50  5046               	movf	(___fladd@a+1)^0,w,c
 13671   003D52  5842               	subwfb	(___fladd@b+1)^0,w,c
 13672   003D54  5047               	movf	(___fladd@a+2)^0,w,c
 13673   003D56  5843               	subwfb	(___fladd@b+2)^0,w,c
 13674   003D58  5044               	movf	(___fladd@b+3)^0,w,c
 13675   003D5A  0A80               	xorlw	128
 13676   003D5C  6E49               	movwf	??___fladd^0,c
 13677   003D5E  5048               	movf	(___fladd@a+3)^0,w,c
 13678   003D60  0A80               	xorlw	128
 13679   003D62  5849               	subwfb	??___fladd^0,w,c
 13680   003D64  B0D8               	btfsc	status,0,c
 13681   003D66  EFB7  F01E         	goto	u7391
 13682   003D6A  EFB9  F01E         	goto	u7390
 13683   003D6E                     u7391:
 13684   003D6E  EFE4  F01E         	goto	l6024
 13685   003D72                     u7390:
 13686   003D72  5041               	movf	___fladd@b^0,w,c
 13687   003D74  5C45               	subwf	___fladd@a^0,w,c
 13688   003D76  6E49               	movwf	??___fladd^0,c
 13689   003D78  5042               	movf	(___fladd@b+1)^0,w,c
 13690   003D7A  5846               	subwfb	(___fladd@a+1)^0,w,c
 13691   003D7C  6E4A               	movwf	(??___fladd+1)^0,c
 13692   003D7E  5043               	movf	(___fladd@b+2)^0,w,c
 13693   003D80  5847               	subwfb	(___fladd@a+2)^0,w,c
 13694   003D82  6E4B               	movwf	(??___fladd+2)^0,c
 13695   003D84  5044               	movf	(___fladd@b+3)^0,w,c
 13696   003D86  5848               	subwfb	(___fladd@a+3)^0,w,c
 13697   003D88  6E4C               	movwf	(??___fladd+3)^0,c
 13698   003D8A  0EFF               	movlw	255
 13699   003D8C  2449               	addwf	??___fladd^0,w,c
 13700   003D8E  6E41               	movwf	___fladd@b^0,c
 13701   003D90  0EFF               	movlw	255
 13702   003D92  204A               	addwfc	(??___fladd+1)^0,w,c
 13703   003D94  6E42               	movwf	(___fladd@b+1)^0,c
 13704   003D96  0EFF               	movlw	255
 13705   003D98  204B               	addwfc	(??___fladd+2)^0,w,c
 13706   003D9A  6E43               	movwf	(___fladd@b+2)^0,c
 13707   003D9C  0EFF               	movlw	255
 13708   003D9E  204C               	addwfc	(??___fladd+3)^0,w,c
 13709   003DA0  6E44               	movwf	(___fladd@b+3)^0,c
 13710   003DA2  0E80               	movlw	128
 13711   003DA4  1A4D               	xorwf	___fladd@signs^0,f,c
 13712   003DA6  6C50               	negf	___fladd@grs^0,c
 13713   003DA8  5050               	movf	___fladd@grs^0,w,c
 13714   003DAA  A4D8               	btfss	status,2,c
 13715   003DAC  EFDA  F01E         	goto	u7401
 13716   003DB0  EFDC  F01E         	goto	u7400
 13717   003DB4                     u7401:
 13718   003DB4  EFEC  F01E         	goto	l818
 13719   003DB8                     u7400:
 13720   003DB8  0E01               	movlw	1
 13721   003DBA  2641               	addwf	___fladd@b^0,f,c
 13722   003DBC  0E00               	movlw	0
 13723   003DBE  2242               	addwfc	(___fladd@b+1)^0,f,c
 13724   003DC0  2243               	addwfc	(___fladd@b+2)^0,f,c
 13725   003DC2  2244               	addwfc	(___fladd@b+3)^0,f,c
 13726   003DC4  EFEC  F01E         	goto	l818
 13727   003DC8                     l6024:
 13728   003DC8  5045               	movf	___fladd@a^0,w,c
 13729   003DCA  5E41               	subwf	___fladd@b^0,f,c
 13730   003DCC  5046               	movf	(___fladd@a+1)^0,w,c
 13731   003DCE  5A42               	subwfb	(___fladd@b+1)^0,f,c
 13732   003DD0  5047               	movf	(___fladd@a+2)^0,w,c
 13733   003DD2  5A43               	subwfb	(___fladd@b+2)^0,f,c
 13734   003DD4  5048               	movf	(___fladd@a+3)^0,w,c
 13735   003DD6  5A44               	subwfb	(___fladd@b+3)^0,f,c
 13736   003DD8                     l818:
 13737   003DD8  5041               	movf	___fladd@b^0,w,c
 13738   003DDA  1042               	iorwf	(___fladd@b+1)^0,w,c
 13739   003DDC  1043               	iorwf	(___fladd@b+2)^0,w,c
 13740   003DDE  1044               	iorwf	(___fladd@b+3)^0,w,c
 13741   003DE0  A4D8               	btfss	status,2,c
 13742   003DE2  EFF5  F01E         	goto	u7411
 13743   003DE6  EFF7  F01E         	goto	u7410
 13744   003DEA                     u7411:
 13745   003DEA  EF2C  F01F         	goto	l6048
 13746   003DEE                     u7410:
 13747   003DEE  5050               	movf	___fladd@grs^0,w,c
 13748   003DF0  A4D8               	btfss	status,2,c
 13749   003DF2  EFFD  F01E         	goto	u7421
 13750   003DF6  EFFF  F01E         	goto	u7420
 13751   003DFA                     u7421:
 13752   003DFA  EF2C  F01F         	goto	l6048
 13753   003DFE                     u7420:
 13754   003DFE  0E00               	movlw	0
 13755   003E00  6E41               	movwf	?___fladd^0,c
 13756   003E02  0E00               	movlw	0
 13757   003E04  6E42               	movwf	(?___fladd+1)^0,c
 13758   003E06  0E00               	movlw	0
 13759   003E08  6E43               	movwf	(?___fladd+2)^0,c
 13760   003E0A  0E00               	movlw	0
 13761   003E0C  6E44               	movwf	(?___fladd+3)^0,c
 13762   003E0E  EFC5  F01F         	goto	l810
 13763   003E12                     l6032:
 13764   003E12  90D8               	bcf	status,0,c
 13765   003E14  3641               	rlcf	___fladd@b^0,f,c
 13766   003E16  3642               	rlcf	(___fladd@b+1)^0,f,c
 13767   003E18  3643               	rlcf	(___fladd@b+2)^0,f,c
 13768   003E1A  3644               	rlcf	(___fladd@b+3)^0,f,c
 13769   003E1C  AE50               	btfss	___fladd@grs^0,7,c
 13770   003E1E  EF13  F01F         	goto	u7431
 13771   003E22  EF15  F01F         	goto	u7430
 13772   003E26                     u7431:
 13773   003E26  EF16  F01F         	goto	l6038
 13774   003E2A                     u7430:
 13775   003E2A  8041               	bsf	___fladd@b^0,0,c
 13776   003E2C                     l6038:
 13777   003E2C  A050               	btfss	___fladd@grs^0,0,c
 13778   003E2E  EF1B  F01F         	goto	u7441
 13779   003E32  EF1D  F01F         	goto	u7440
 13780   003E36                     u7441:
 13781   003E36  EF21  F01F         	goto	l6042
 13782   003E3A                     u7440:
 13783   003E3A  80D8               	bsf	status,0,c
 13784   003E3C  3650               	rlcf	___fladd@grs^0,f,c
 13785   003E3E  EF23  F01F         	goto	l6044
 13786   003E42                     l6042:
 13787   003E42  90D8               	bcf	status,0,c
 13788   003E44  3650               	rlcf	___fladd@grs^0,f,c
 13789   003E46                     l6044:
 13790   003E46  504F               	movf	___fladd@bexp^0,w,c
 13791   003E48  B4D8               	btfsc	status,2,c
 13792   003E4A  EF29  F01F         	goto	u7451
 13793   003E4E  EF2B  F01F         	goto	u7450
 13794   003E52                     u7451:
 13795   003E52  EF2C  F01F         	goto	l6048
 13796   003E56                     u7450:
 13797   003E56  064F               	decf	___fladd@bexp^0,f,c
 13798   003E58                     l6048:
 13799   003E58  AE43               	btfss	(___fladd@b+2)^0,7,c
 13800   003E5A  EF31  F01F         	goto	u7461
 13801   003E5E  EF33  F01F         	goto	u7460
 13802   003E62                     u7461:
 13803   003E62  EF09  F01F         	goto	l6032
 13804   003E66                     u7460:
 13805   003E66                     l815:
 13806   003E66  6A4E               	clrf	___fladd@aexp^0,c
 13807   003E68  AE50               	btfss	___fladd@grs^0,7,c
 13808   003E6A  EF39  F01F         	goto	u7471
 13809   003E6E  EF3B  F01F         	goto	u7470
 13810   003E72                     u7471:
 13811   003E72  EF53  F01F         	goto	l827
 13812   003E76                     u7470:
 13813   003E76  C050  F049         	movff	___fladd@grs,??___fladd
 13814   003E7A  0E7F               	movlw	127
 13815   003E7C  1649               	andwf	??___fladd^0,f,c
 13816   003E7E  B4D8               	btfsc	status,2,c
 13817   003E80  EF44  F01F         	goto	u7481
 13818   003E84  EF46  F01F         	goto	u7480
 13819   003E88                     u7481:
 13820   003E88  EF4A  F01F         	goto	l828
 13821   003E8C                     u7480:
 13822   003E8C                     l6052:
 13823   003E8C  0E01               	movlw	1
 13824   003E8E  6E4E               	movwf	___fladd@aexp^0,c
 13825   003E90  EF53  F01F         	goto	l827
 13826   003E94                     l828:
 13827   003E94  A041               	btfss	___fladd@b^0,0,c
 13828   003E96  EF4F  F01F         	goto	u7491
 13829   003E9A  EF51  F01F         	goto	u7490
 13830   003E9E                     u7491:
 13831   003E9E  EF53  F01F         	goto	l827
 13832   003EA2                     u7490:
 13833   003EA2  EF46  F01F         	goto	l6052
 13834   003EA6                     l827:
 13835   003EA6  504E               	movf	___fladd@aexp^0,w,c
 13836   003EA8  B4D8               	btfsc	status,2,c
 13837   003EAA  EF59  F01F         	goto	u7501
 13838   003EAE  EF5B  F01F         	goto	u7500
 13839   003EB2                     u7501:
 13840   003EB2  EF86  F01F         	goto	l6064
 13841   003EB6                     u7500:
 13842   003EB6  0E01               	movlw	1
 13843   003EB8  2641               	addwf	___fladd@b^0,f,c
 13844   003EBA  0E00               	movlw	0
 13845   003EBC  2242               	addwfc	(___fladd@b+1)^0,f,c
 13846   003EBE  2243               	addwfc	(___fladd@b+2)^0,f,c
 13847   003EC0  2244               	addwfc	(___fladd@b+3)^0,f,c
 13848   003EC2  A044               	btfss	(___fladd@b+3)^0,0,c
 13849   003EC4  EF66  F01F         	goto	u7511
 13850   003EC8  EF68  F01F         	goto	u7510
 13851   003ECC                     u7511:
 13852   003ECC  EF86  F01F         	goto	l6064
 13853   003ED0                     u7510:
 13854   003ED0  C041  F049         	movff	___fladd@b,??___fladd
 13855   003ED4  C042  F04A         	movff	___fladd@b+1,??___fladd+1
 13856   003ED8  C043  F04B         	movff	___fladd@b+2,??___fladd+2
 13857   003EDC  C044  F04C         	movff	___fladd@b+3,??___fladd+3
 13858   003EE0  344C               	rlcf	(??___fladd+3)^0,w,c
 13859   003EE2  324C               	rrcf	(??___fladd+3)^0,f,c
 13860   003EE4  324B               	rrcf	(??___fladd+2)^0,f,c
 13861   003EE6  324A               	rrcf	(??___fladd+1)^0,f,c
 13862   003EE8  3249               	rrcf	??___fladd^0,f,c
 13863   003EEA  C049  F041         	movff	??___fladd,___fladd@b
 13864   003EEE  C04A  F042         	movff	??___fladd+1,___fladd@b+1
 13865   003EF2  C04B  F043         	movff	??___fladd+2,___fladd@b+2
 13866   003EF6  C04C  F044         	movff	??___fladd+3,___fladd@b+3
 13867   003EFA  284F               	incf	___fladd@bexp^0,w,c
 13868   003EFC  B4D8               	btfsc	status,2,c
 13869   003EFE  EF83  F01F         	goto	u7521
 13870   003F02  EF85  F01F         	goto	u7520
 13871   003F06                     u7521:
 13872   003F06  EF86  F01F         	goto	l6064
 13873   003F0A                     u7520:
 13874   003F0A  2A4F               	incf	___fladd@bexp^0,f,c
 13875   003F0C                     l6064:
 13876   003F0C  284F               	incf	___fladd@bexp^0,w,c
 13877   003F0E  B4D8               	btfsc	status,2,c
 13878   003F10  EF8C  F01F         	goto	u7531
 13879   003F14  EF8E  F01F         	goto	u7530
 13880   003F18                     u7531:
 13881   003F18  EF96  F01F         	goto	l6068
 13882   003F1C                     u7530:
 13883   003F1C  504F               	movf	___fladd@bexp^0,w,c
 13884   003F1E  A4D8               	btfss	status,2,c
 13885   003F20  EF94  F01F         	goto	u7541
 13886   003F24  EF96  F01F         	goto	u7540
 13887   003F28                     u7541:
 13888   003F28  EFA7  F01F         	goto	l834
 13889   003F2C                     u7540:
 13890   003F2C                     l6068:
 13891   003F2C  0E00               	movlw	0
 13892   003F2E  6E41               	movwf	___fladd@b^0,c
 13893   003F30  0E00               	movlw	0
 13894   003F32  6E42               	movwf	(___fladd@b+1)^0,c
 13895   003F34  0E00               	movlw	0
 13896   003F36  6E43               	movwf	(___fladd@b+2)^0,c
 13897   003F38  0E00               	movlw	0
 13898   003F3A  6E44               	movwf	(___fladd@b+3)^0,c
 13899   003F3C  504F               	movf	___fladd@bexp^0,w,c
 13900   003F3E  A4D8               	btfss	status,2,c
 13901   003F40  EFA4  F01F         	goto	u7551
 13902   003F44  EFA6  F01F         	goto	u7550
 13903   003F48                     u7551:
 13904   003F48  EFA7  F01F         	goto	l834
 13905   003F4C                     u7550:
 13906   003F4C  6A4D               	clrf	___fladd@signs^0,c
 13907   003F4E                     l834:
 13908   003F4E  A04F               	btfss	___fladd@bexp^0,0,c
 13909   003F50  EFAC  F01F         	goto	u7561
 13910   003F54  EFAE  F01F         	goto	u7560
 13911   003F58                     u7561:
 13912   003F58  EFB1  F01F         	goto	l6074
 13913   003F5C                     u7560:
 13914   003F5C  8E43               	bsf	(___fladd@b+2)^0,7,c
 13915   003F5E  EFB2  F01F         	goto	l6076
 13916   003F62                     l6074:
 13917   003F62  9E43               	bcf	(___fladd@b+2)^0,7,c
 13918   003F64                     l6076:
 13919   003F64  90D8               	bcf	status,0,c
 13920   003F66  304F               	rrcf	___fladd@bexp^0,w,c
 13921   003F68  6E44               	movwf	(___fladd@b+3)^0,c
 13922   003F6A  AE4D               	btfss	___fladd@signs^0,7,c
 13923   003F6C  EFBA  F01F         	goto	u7571
 13924   003F70  EFBC  F01F         	goto	u7570
 13925   003F74                     u7571:
 13926   003F74  EFBD  F01F         	goto	l6082
 13927   003F78                     u7570:
 13928   003F78  8E44               	bsf	(___fladd@b+3)^0,7,c
 13929   003F7A                     l6082:
 13930   003F7A  C041  F041         	movff	___fladd@b,?___fladd
 13931   003F7E  C042  F042         	movff	___fladd@b+1,?___fladd+1
 13932   003F82  C043  F043         	movff	___fladd@b+2,?___fladd+2
 13933   003F86  C044  F044         	movff	___fladd@b+3,?___fladd+3
 13934   003F8A                     l810:
 13935   003F8A  0012               	return		;funcret
 13936   003F8C                     __end_of___fladd:
 13937                           	callstack 0
 13938                           
 13939 ;; *************** function ___flneg *****************
 13940 ;; Defined at:
 13941 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 13942 ;; Parameters:    Size  Location     Type
 13943 ;;  f1              4    0[COMRAM] unsigned char 
 13944 ;; Auto vars:     Size  Location     Type
 13945 ;;		None
 13946 ;; Return value:  Size  Location     Type
 13947 ;;                  4    0[COMRAM] unsigned char 
 13948 ;; Registers used:
 13949 ;;		wreg, status,2, status,0
 13950 ;; Tracked objects:
 13951 ;;		On entry : 0/0
 13952 ;;		On exit  : 0/0
 13953 ;;		Unchanged: 0/0
 13954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13955 ;;      Params:         4       0       0       0       0       0       0       0       0
 13956 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13957 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13958 ;;      Totals:         4       0       0       0       0       0       0       0       0
 13959 ;;Total ram usage:        4 bytes
 13960 ;; Hardware stack levels used: 1
 13961 ;; Hardware stack levels required when called: 1
 13962 ;; This function calls:
 13963 ;;		Nothing
 13964 ;; This function is called by:
 13965 ;;		_efgtoa
 13966 ;;		_powf
 13967 ;; This function uses a non-reentrant model
 13968 ;;
 13969                           
 13970                           	psect	text33
 13971   006D46                     __ptext33:
 13972                           	callstack 0
 13973   006D46                     ___flneg:
 13974                           	callstack 24
 13975   006D46  5001               	movf	___flneg@f1^0,w,c
 13976   006D48  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13977   006D4A  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13978   006D4C  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13979   006D4E  B4D8               	btfsc	status,2,c
 13980   006D50  EFAC  F036         	goto	u8251
 13981   006D54  EFAE  F036         	goto	u8250
 13982   006D58                     u8251:
 13983   006D58  EFB6  F036         	goto	l6512
 13984   006D5C                     u8250:
 13985   006D5C  0E00               	movlw	0
 13986   006D5E  1A01               	xorwf	___flneg@f1^0,f,c
 13987   006D60  0E00               	movlw	0
 13988   006D62  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13989   006D64  0E00               	movlw	0
 13990   006D66  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13991   006D68  0E80               	movlw	128
 13992   006D6A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13993   006D6C                     l6512:
 13994   006D6C  C001  F001         	movff	___flneg@f1,?___flneg
 13995   006D70  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13996   006D74  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13997   006D78  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 13998   006D7C  0012               	return		;funcret
 13999   006D7E                     __end_of___flneg:
 14000                           	callstack 0
 14001                           
 14002 ;; *************** function ___flmul *****************
 14003 ;; Defined at:
 14004 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 14005 ;; Parameters:    Size  Location     Type
 14006 ;;  b               4   14[COMRAM] unsigned char 
 14007 ;;  a               4   18[COMRAM] unsigned char 
 14008 ;; Auto vars:     Size  Location     Type
 14009 ;;  prod            4   33[COMRAM] struct .
 14010 ;;  grs             4   28[COMRAM] unsigned long 
 14011 ;;  temp            2   37[COMRAM] struct .
 14012 ;;  bexp            1   32[COMRAM] unsigned char 
 14013 ;;  aexp            1   27[COMRAM] unsigned char 
 14014 ;;  sign            1   26[COMRAM] unsigned char 
 14015 ;; Return value:  Size  Location     Type
 14016 ;;                  4   14[COMRAM] unsigned char 
 14017 ;; Registers used:
 14018 ;;		wreg, status,2, status,0, prodl, prodh
 14019 ;; Tracked objects:
 14020 ;;		On entry : 0/0
 14021 ;;		On exit  : 0/0
 14022 ;;		Unchanged: 0/0
 14023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14024 ;;      Params:         8       0       0       0       0       0       0       0       0
 14025 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14026 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14027 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14028 ;;Total ram usage:       25 bytes
 14029 ;; Hardware stack levels used: 1
 14030 ;; Hardware stack levels required when called: 1
 14031 ;; This function calls:
 14032 ;;		Nothing
 14033 ;; This function is called by:
 14034 ;;		_main
 14035 ;;		_Read_Sensors
 14036 ;;		_efgtoa
 14037 ;;		_powf
 14038 ;;		_scalbnf
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           	psect	text34
 14043   003F8C                     __ptext34:
 14044                           	callstack 0
 14045   003F8C                     ___flmul:
 14046                           	callstack 29
 14047   003F8C  5012               	movf	(___flmul@b+3)^0,w,c
 14048   003F8E  0B80               	andlw	128
 14049   003F90  6E1B               	movwf	___flmul@sign^0,c
 14050   003F92  5012               	movf	(___flmul@b+3)^0,w,c
 14051   003F94  2412               	addwf	(___flmul@b+3)^0,w,c
 14052   003F96  6E21               	movwf	___flmul@bexp^0,c
 14053   003F98  AE11               	btfss	(___flmul@b+2)^0,7,c
 14054   003F9A  EFD1  F01F         	goto	u7981
 14055   003F9E  EFD3  F01F         	goto	u7980
 14056   003FA2                     u7981:
 14057   003FA2  EFD4  F01F         	goto	l6342
 14058   003FA6                     u7980:
 14059   003FA6  8021               	bsf	___flmul@bexp^0,0,c
 14060   003FA8                     l6342:
 14061   003FA8  5021               	movf	___flmul@bexp^0,w,c
 14062   003FAA  B4D8               	btfsc	status,2,c
 14063   003FAC  EFDA  F01F         	goto	u7991
 14064   003FB0  EFDC  F01F         	goto	u7990
 14065   003FB4                     u7991:
 14066   003FB4  EFEF  F01F         	goto	l6350
 14067   003FB8                     u7990:
 14068   003FB8  2821               	incf	___flmul@bexp^0,w,c
 14069   003FBA  A4D8               	btfss	status,2,c
 14070   003FBC  EFE2  F01F         	goto	u8001
 14071   003FC0  EFE4  F01F         	goto	u8000
 14072   003FC4                     u8001:
 14073   003FC4  EFEC  F01F         	goto	l6348
 14074   003FC8                     u8000:
 14075   003FC8  0E00               	movlw	0
 14076   003FCA  6E0F               	movwf	___flmul@b^0,c
 14077   003FCC  0E00               	movlw	0
 14078   003FCE  6E10               	movwf	(___flmul@b+1)^0,c
 14079   003FD0  0E00               	movlw	0
 14080   003FD2  6E11               	movwf	(___flmul@b+2)^0,c
 14081   003FD4  0E00               	movlw	0
 14082   003FD6  6E12               	movwf	(___flmul@b+3)^0,c
 14083   003FD8                     l6348:
 14084   003FD8  8E11               	bsf	(___flmul@b+2)^0,7,c
 14085   003FDA  EFF7  F01F         	goto	l6352
 14086   003FDE                     l6350:
 14087   003FDE  0E00               	movlw	0
 14088   003FE0  6E0F               	movwf	___flmul@b^0,c
 14089   003FE2  0E00               	movlw	0
 14090   003FE4  6E10               	movwf	(___flmul@b+1)^0,c
 14091   003FE6  0E00               	movlw	0
 14092   003FE8  6E11               	movwf	(___flmul@b+2)^0,c
 14093   003FEA  0E00               	movlw	0
 14094   003FEC  6E12               	movwf	(___flmul@b+3)^0,c
 14095   003FEE                     l6352:
 14096   003FEE  5016               	movf	(___flmul@a+3)^0,w,c
 14097   003FF0  0B80               	andlw	128
 14098   003FF2  1A1B               	xorwf	___flmul@sign^0,f,c
 14099   003FF4  5016               	movf	(___flmul@a+3)^0,w,c
 14100   003FF6  2416               	addwf	(___flmul@a+3)^0,w,c
 14101   003FF8  6E1C               	movwf	___flmul@aexp^0,c
 14102   003FFA  AE15               	btfss	(___flmul@a+2)^0,7,c
 14103   003FFC  EF02  F020         	goto	u8011
 14104   004000  EF04  F020         	goto	u8010
 14105   004004                     u8011:
 14106   004004  EF05  F020         	goto	l6360
 14107   004008                     u8010:
 14108   004008  801C               	bsf	___flmul@aexp^0,0,c
 14109   00400A                     l6360:
 14110   00400A  501C               	movf	___flmul@aexp^0,w,c
 14111   00400C  B4D8               	btfsc	status,2,c
 14112   00400E  EF0B  F020         	goto	u8021
 14113   004012  EF0D  F020         	goto	u8020
 14114   004016                     u8021:
 14115   004016  EF20  F020         	goto	l6368
 14116   00401A                     u8020:
 14117   00401A  281C               	incf	___flmul@aexp^0,w,c
 14118   00401C  A4D8               	btfss	status,2,c
 14119   00401E  EF13  F020         	goto	u8031
 14120   004022  EF15  F020         	goto	u8030
 14121   004026                     u8031:
 14122   004026  EF1D  F020         	goto	l6366
 14123   00402A                     u8030:
 14124   00402A  0E00               	movlw	0
 14125   00402C  6E13               	movwf	___flmul@a^0,c
 14126   00402E  0E00               	movlw	0
 14127   004030  6E14               	movwf	(___flmul@a+1)^0,c
 14128   004032  0E00               	movlw	0
 14129   004034  6E15               	movwf	(___flmul@a+2)^0,c
 14130   004036  0E00               	movlw	0
 14131   004038  6E16               	movwf	(___flmul@a+3)^0,c
 14132   00403A                     l6366:
 14133   00403A  8E15               	bsf	(___flmul@a+2)^0,7,c
 14134   00403C  EF28  F020         	goto	l887
 14135   004040                     l6368:
 14136   004040  0E00               	movlw	0
 14137   004042  6E13               	movwf	___flmul@a^0,c
 14138   004044  0E00               	movlw	0
 14139   004046  6E14               	movwf	(___flmul@a+1)^0,c
 14140   004048  0E00               	movlw	0
 14141   00404A  6E15               	movwf	(___flmul@a+2)^0,c
 14142   00404C  0E00               	movlw	0
 14143   00404E  6E16               	movwf	(___flmul@a+3)^0,c
 14144   004050                     l887:
 14145   004050  501C               	movf	___flmul@aexp^0,w,c
 14146   004052  B4D8               	btfsc	status,2,c
 14147   004054  EF2E  F020         	goto	u8041
 14148   004058  EF30  F020         	goto	u8040
 14149   00405C                     u8041:
 14150   00405C  EF38  F020         	goto	l6372
 14151   004060                     u8040:
 14152   004060  5021               	movf	___flmul@bexp^0,w,c
 14153   004062  A4D8               	btfss	status,2,c
 14154   004064  EF36  F020         	goto	u8051
 14155   004068  EF38  F020         	goto	u8050
 14156   00406C                     u8051:
 14157   00406C  EF42  F020         	goto	l6376
 14158   004070                     u8050:
 14159   004070                     l6372:
 14160   004070  0E00               	movlw	0
 14161   004072  6E0F               	movwf	?___flmul^0,c
 14162   004074  0E00               	movlw	0
 14163   004076  6E10               	movwf	(?___flmul+1)^0,c
 14164   004078  0E00               	movlw	0
 14165   00407A  6E11               	movwf	(?___flmul+2)^0,c
 14166   00407C  0E00               	movlw	0
 14167   00407E  6E12               	movwf	(?___flmul+3)^0,c
 14168   004080  EFD8  F021         	goto	l891
 14169   004084                     l6376:
 14170   004084  5015               	movf	(___flmul@a+2)^0,w,c
 14171   004086  020F               	mulwf	___flmul@b^0,c
 14172   004088  CFF3 F026          	movff	prodl,___flmul@temp
 14173   00408C  CFF4 F027          	movff	prodh,___flmul@temp+1
 14174   004090  5026               	movf	___flmul@temp^0,w,c
 14175   004092  6E1D               	movwf	___flmul@grs^0,c
 14176   004094  6A1E               	clrf	(___flmul@grs+1)^0,c
 14177   004096  6A1F               	clrf	(___flmul@grs+2)^0,c
 14178   004098  6A20               	clrf	(___flmul@grs+3)^0,c
 14179   00409A  5027               	movf	(___flmul@temp+1)^0,w,c
 14180   00409C  6E22               	movwf	___flmul@prod^0,c
 14181   00409E  6A23               	clrf	(___flmul@prod+1)^0,c
 14182   0040A0  6A24               	clrf	(___flmul@prod+2)^0,c
 14183   0040A2  6A25               	clrf	(___flmul@prod+3)^0,c
 14184   0040A4  5014               	movf	(___flmul@a+1)^0,w,c
 14185   0040A6  0210               	mulwf	(___flmul@b+1)^0,c
 14186   0040A8  CFF3 F026          	movff	prodl,___flmul@temp
 14187   0040AC  CFF4 F027          	movff	prodh,___flmul@temp+1
 14188   0040B0  5026               	movf	___flmul@temp^0,w,c
 14189   0040B2  261D               	addwf	___flmul@grs^0,f,c
 14190   0040B4  0E00               	movlw	0
 14191   0040B6  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14192   0040B8  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14193   0040BA  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14194   0040BC  5027               	movf	(___flmul@temp+1)^0,w,c
 14195   0040BE  2622               	addwf	___flmul@prod^0,f,c
 14196   0040C0  0E00               	movlw	0
 14197   0040C2  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14198   0040C4  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14199   0040C6  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14200   0040C8  5013               	movf	___flmul@a^0,w,c
 14201   0040CA  0211               	mulwf	(___flmul@b+2)^0,c
 14202   0040CC  CFF3 F026          	movff	prodl,___flmul@temp
 14203   0040D0  CFF4 F027          	movff	prodh,___flmul@temp+1
 14204   0040D4  5026               	movf	___flmul@temp^0,w,c
 14205   0040D6  261D               	addwf	___flmul@grs^0,f,c
 14206   0040D8  0E00               	movlw	0
 14207   0040DA  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14208   0040DC  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14209   0040DE  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14210   0040E0  5027               	movf	(___flmul@temp+1)^0,w,c
 14211   0040E2  2622               	addwf	___flmul@prod^0,f,c
 14212   0040E4  0E00               	movlw	0
 14213   0040E6  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14214   0040E8  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14215   0040EA  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14216   0040EC  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14217   0040F0  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14218   0040F4  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14219   0040F8  6A1D               	clrf	___flmul@grs^0,c
 14220   0040FA  5013               	movf	___flmul@a^0,w,c
 14221   0040FC  0210               	mulwf	(___flmul@b+1)^0,c
 14222   0040FE  CFF3 F026          	movff	prodl,___flmul@temp
 14223   004102  CFF4 F027          	movff	prodh,___flmul@temp+1
 14224   004106  5026               	movf	___flmul@temp^0,w,c
 14225   004108  261D               	addwf	___flmul@grs^0,f,c
 14226   00410A  5027               	movf	(___flmul@temp+1)^0,w,c
 14227   00410C  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14228   00410E  0E00               	movlw	0
 14229   004110  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14230   004112  0E00               	movlw	0
 14231   004114  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14232   004116  5014               	movf	(___flmul@a+1)^0,w,c
 14233   004118  020F               	mulwf	___flmul@b^0,c
 14234   00411A  CFF3 F026          	movff	prodl,___flmul@temp
 14235   00411E  CFF4 F027          	movff	prodh,___flmul@temp+1
 14236   004122  5026               	movf	___flmul@temp^0,w,c
 14237   004124  261D               	addwf	___flmul@grs^0,f,c
 14238   004126  5027               	movf	(___flmul@temp+1)^0,w,c
 14239   004128  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14240   00412A  0E00               	movlw	0
 14241   00412C  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14242   00412E  0E00               	movlw	0
 14243   004130  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14244   004132  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14245   004136  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14246   00413A  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14247   00413E  6A1D               	clrf	___flmul@grs^0,c
 14248   004140  5013               	movf	___flmul@a^0,w,c
 14249   004142  020F               	mulwf	___flmul@b^0,c
 14250   004144  CFF3 F026          	movff	prodl,___flmul@temp
 14251   004148  CFF4 F027          	movff	prodh,___flmul@temp+1
 14252   00414C  5026               	movf	___flmul@temp^0,w,c
 14253   00414E  261D               	addwf	___flmul@grs^0,f,c
 14254   004150  5027               	movf	(___flmul@temp+1)^0,w,c
 14255   004152  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14256   004154  0E00               	movlw	0
 14257   004156  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14258   004158  0E00               	movlw	0
 14259   00415A  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14260   00415C  5015               	movf	(___flmul@a+2)^0,w,c
 14261   00415E  0210               	mulwf	(___flmul@b+1)^0,c
 14262   004160  CFF3 F026          	movff	prodl,___flmul@temp
 14263   004164  CFF4 F027          	movff	prodh,___flmul@temp+1
 14264   004168  5026               	movf	___flmul@temp^0,w,c
 14265   00416A  2622               	addwf	___flmul@prod^0,f,c
 14266   00416C  5027               	movf	(___flmul@temp+1)^0,w,c
 14267   00416E  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14268   004170  0E00               	movlw	0
 14269   004172  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14270   004174  0E00               	movlw	0
 14271   004176  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14272   004178  5014               	movf	(___flmul@a+1)^0,w,c
 14273   00417A  0211               	mulwf	(___flmul@b+2)^0,c
 14274   00417C  CFF3 F026          	movff	prodl,___flmul@temp
 14275   004180  CFF4 F027          	movff	prodh,___flmul@temp+1
 14276   004184  5026               	movf	___flmul@temp^0,w,c
 14277   004186  2622               	addwf	___flmul@prod^0,f,c
 14278   004188  5027               	movf	(___flmul@temp+1)^0,w,c
 14279   00418A  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14280   00418C  0E00               	movlw	0
 14281   00418E  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14282   004190  0E00               	movlw	0
 14283   004192  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14284   004194  5015               	movf	(___flmul@a+2)^0,w,c
 14285   004196  0211               	mulwf	(___flmul@b+2)^0,c
 14286   004198  CFF3 F026          	movff	prodl,___flmul@temp
 14287   00419C  CFF4 F027          	movff	prodh,___flmul@temp+1
 14288   0041A0  5026               	movf	___flmul@temp^0,w,c
 14289   0041A2  6E17               	movwf	??___flmul^0,c
 14290   0041A4  5027               	movf	(___flmul@temp+1)^0,w,c
 14291   0041A6  6E18               	movwf	(??___flmul+1)^0,c
 14292   0041A8  6A19               	clrf	(??___flmul+2)^0,c
 14293   0041AA  6A1A               	clrf	(??___flmul+3)^0,c
 14294   0041AC  C019  F01A         	movff	??___flmul+2,??___flmul+3
 14295   0041B0  C018  F019         	movff	??___flmul+1,??___flmul+2
 14296   0041B4  C017  F018         	movff	??___flmul,??___flmul+1
 14297   0041B8  6A17               	clrf	??___flmul^0,c
 14298   0041BA  5017               	movf	??___flmul^0,w,c
 14299   0041BC  2622               	addwf	___flmul@prod^0,f,c
 14300   0041BE  5018               	movf	(??___flmul+1)^0,w,c
 14301   0041C0  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14302   0041C2  5019               	movf	(??___flmul+2)^0,w,c
 14303   0041C4  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14304   0041C6  501A               	movf	(??___flmul+3)^0,w,c
 14305   0041C8  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14306   0041CA  C01D  F017         	movff	___flmul@grs,??___flmul
 14307   0041CE  C01E  F018         	movff	___flmul@grs+1,??___flmul+1
 14308   0041D2  C01F  F019         	movff	___flmul@grs+2,??___flmul+2
 14309   0041D6  C020  F01A         	movff	___flmul@grs+3,??___flmul+3
 14310   0041DA  0E19               	movlw	25
 14311   0041DC  EFF5  F020         	goto	u8060
 14312   0041E0                     u8065:
 14313   0041E0  90D8               	bcf	status,0,c
 14314   0041E2  321A               	rrcf	(??___flmul+3)^0,f,c
 14315   0041E4  3219               	rrcf	(??___flmul+2)^0,f,c
 14316   0041E6  3218               	rrcf	(??___flmul+1)^0,f,c
 14317   0041E8  3217               	rrcf	??___flmul^0,f,c
 14318   0041EA                     u8060:
 14319   0041EA  2EE8               	decfsz	wreg,f,c
 14320   0041EC  EFF0  F020         	goto	u8065
 14321   0041F0  5017               	movf	??___flmul^0,w,c
 14322   0041F2  2622               	addwf	___flmul@prod^0,f,c
 14323   0041F4  5018               	movf	(??___flmul+1)^0,w,c
 14324   0041F6  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14325   0041F8  5019               	movf	(??___flmul+2)^0,w,c
 14326   0041FA  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14327   0041FC  501A               	movf	(??___flmul+3)^0,w,c
 14328   0041FE  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14329   004200  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14330   004204  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14331   004208  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14332   00420C  6A1D               	clrf	___flmul@grs^0,c
 14333   00420E  501C               	movf	___flmul@aexp^0,w,c
 14334   004210  C021  F017         	movff	___flmul@bexp,??___flmul
 14335   004214  6A18               	clrf	(??___flmul+1)^0,c
 14336   004216  2617               	addwf	??___flmul^0,f,c
 14337   004218  0E00               	movlw	0
 14338   00421A  2218               	addwfc	(??___flmul+1)^0,f,c
 14339   00421C  0E82               	movlw	130
 14340   00421E  2417               	addwf	??___flmul^0,w,c
 14341   004220  6E26               	movwf	___flmul@temp^0,c
 14342   004222  0EFF               	movlw	255
 14343   004224  2018               	addwfc	(??___flmul+1)^0,w,c
 14344   004226  6E27               	movwf	(___flmul@temp+1)^0,c
 14345   004228  EF2B  F021         	goto	l6424
 14346   00422C                     l6418:
 14347   00422C  90D8               	bcf	status,0,c
 14348   00422E  3622               	rlcf	___flmul@prod^0,f,c
 14349   004230  3623               	rlcf	(___flmul@prod+1)^0,f,c
 14350   004232  3624               	rlcf	(___flmul@prod+2)^0,f,c
 14351   004234  3625               	rlcf	(___flmul@prod+3)^0,f,c
 14352   004236  AE20               	btfss	(___flmul@grs+3)^0,7,c
 14353   004238  EF20  F021         	goto	u8071
 14354   00423C  EF22  F021         	goto	u8070
 14355   004240                     u8071:
 14356   004240  EF23  F021         	goto	l894
 14357   004244                     u8070:
 14358   004244  8022               	bsf	___flmul@prod^0,0,c
 14359   004246                     l894:
 14360   004246  90D8               	bcf	status,0,c
 14361   004248  361D               	rlcf	___flmul@grs^0,f,c
 14362   00424A  361E               	rlcf	(___flmul@grs+1)^0,f,c
 14363   00424C  361F               	rlcf	(___flmul@grs+2)^0,f,c
 14364   00424E  3620               	rlcf	(___flmul@grs+3)^0,f,c
 14365   004250  0626               	decf	___flmul@temp^0,f,c
 14366   004252  A0D8               	btfss	status,0,c
 14367   004254  0627               	decf	(___flmul@temp+1)^0,f,c
 14368   004256                     l6424:
 14369   004256  AE24               	btfss	(___flmul@prod+2)^0,7,c
 14370   004258  EF30  F021         	goto	u8081
 14371   00425C  EF32  F021         	goto	u8080
 14372   004260                     u8081:
 14373   004260  EF16  F021         	goto	l6418
 14374   004264                     u8080:
 14375   004264  6A1C               	clrf	___flmul@aexp^0,c
 14376   004266  AE20               	btfss	(___flmul@grs+3)^0,7,c
 14377   004268  EF38  F021         	goto	u8091
 14378   00426C  EF3A  F021         	goto	u8090
 14379   004270                     u8091:
 14380   004270  EF5E  F021         	goto	l896
 14381   004274                     u8090:
 14382   004274  0EFF               	movlw	255
 14383   004276  141D               	andwf	___flmul@grs^0,w,c
 14384   004278  6E17               	movwf	??___flmul^0,c
 14385   00427A  0EFF               	movlw	255
 14386   00427C  141E               	andwf	(___flmul@grs+1)^0,w,c
 14387   00427E  6E18               	movwf	(??___flmul+1)^0,c
 14388   004280  0EFF               	movlw	255
 14389   004282  141F               	andwf	(___flmul@grs+2)^0,w,c
 14390   004284  6E19               	movwf	(??___flmul+2)^0,c
 14391   004286  0E7F               	movlw	127
 14392   004288  1420               	andwf	(___flmul@grs+3)^0,w,c
 14393   00428A  6E1A               	movwf	(??___flmul+3)^0,c
 14394   00428C  5017               	movf	??___flmul^0,w,c
 14395   00428E  1018               	iorwf	(??___flmul+1)^0,w,c
 14396   004290  1019               	iorwf	(??___flmul+2)^0,w,c
 14397   004292  101A               	iorwf	(??___flmul+3)^0,w,c
 14398   004294  B4D8               	btfsc	status,2,c
 14399   004296  EF4F  F021         	goto	u8101
 14400   00429A  EF51  F021         	goto	u8100
 14401   00429E                     u8101:
 14402   00429E  EF55  F021         	goto	l897
 14403   0042A2                     u8100:
 14404   0042A2                     l6428:
 14405   0042A2  0E01               	movlw	1
 14406   0042A4  6E1C               	movwf	___flmul@aexp^0,c
 14407   0042A6  EF5E  F021         	goto	l896
 14408   0042AA                     l897:
 14409   0042AA  A022               	btfss	___flmul@prod^0,0,c
 14410   0042AC  EF5A  F021         	goto	u8111
 14411   0042B0  EF5C  F021         	goto	u8110
 14412   0042B4                     u8111:
 14413   0042B4  EF5E  F021         	goto	l896
 14414   0042B8                     u8110:
 14415   0042B8  EF51  F021         	goto	l6428
 14416   0042BC                     l896:
 14417   0042BC  501C               	movf	___flmul@aexp^0,w,c
 14418   0042BE  B4D8               	btfsc	status,2,c
 14419   0042C0  EF64  F021         	goto	u8121
 14420   0042C4  EF66  F021         	goto	u8120
 14421   0042C8                     u8121:
 14422   0042C8  EF8A  F021         	goto	l6440
 14423   0042CC                     u8120:
 14424   0042CC  0E01               	movlw	1
 14425   0042CE  2622               	addwf	___flmul@prod^0,f,c
 14426   0042D0  0E00               	movlw	0
 14427   0042D2  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14428   0042D4  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14429   0042D6  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14430   0042D8  A025               	btfss	(___flmul@prod+3)^0,0,c
 14431   0042DA  EF71  F021         	goto	u8131
 14432   0042DE  EF73  F021         	goto	u8130
 14433   0042E2                     u8131:
 14434   0042E2  EF8A  F021         	goto	l6440
 14435   0042E6                     u8130:
 14436   0042E6  C022  F017         	movff	___flmul@prod,??___flmul
 14437   0042EA  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 14438   0042EE  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 14439   0042F2  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 14440   0042F6  341A               	rlcf	(??___flmul+3)^0,w,c
 14441   0042F8  321A               	rrcf	(??___flmul+3)^0,f,c
 14442   0042FA  3219               	rrcf	(??___flmul+2)^0,f,c
 14443   0042FC  3218               	rrcf	(??___flmul+1)^0,f,c
 14444   0042FE  3217               	rrcf	??___flmul^0,f,c
 14445   004300  C017  F022         	movff	??___flmul,___flmul@prod
 14446   004304  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 14447   004308  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 14448   00430C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 14449   004310  4A26               	infsnz	___flmul@temp^0,f,c
 14450   004312  2A27               	incf	(___flmul@temp+1)^0,f,c
 14451   004314                     l6440:
 14452   004314  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 14453   004316  EF95  F021         	goto	u8141
 14454   00431A  5027               	movf	(___flmul@temp+1)^0,w,c
 14455   00431C  E108               	bnz	u8140
 14456   00431E  2826               	incf	___flmul@temp^0,w,c
 14457   004320  A0D8               	btfss	status,0,c
 14458   004322  EF95  F021         	goto	u8141
 14459   004326  EF97  F021         	goto	u8140
 14460   00432A                     u8141:
 14461   00432A  EFA1  F021         	goto	l6444
 14462   00432E                     u8140:
 14463   00432E  0E00               	movlw	0
 14464   004330  6E22               	movwf	___flmul@prod^0,c
 14465   004332  0E00               	movlw	0
 14466   004334  6E23               	movwf	(___flmul@prod+1)^0,c
 14467   004336  0E80               	movlw	128
 14468   004338  6E24               	movwf	(___flmul@prod+2)^0,c
 14469   00433A  0E7F               	movlw	127
 14470   00433C  6E25               	movwf	(___flmul@prod+3)^0,c
 14471   00433E  EFCE  F021         	goto	l6458
 14472   004342                     l6444:
 14473   004342  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 14474   004344  EFAE  F021         	goto	u8150
 14475   004348  5027               	movf	(___flmul@temp+1)^0,w,c
 14476   00434A  E106               	bnz	u8151
 14477   00434C  0426               	decf	___flmul@temp^0,w,c
 14478   00434E  B0D8               	btfsc	status,0,c
 14479   004350  EFAC  F021         	goto	u8151
 14480   004354  EFAE  F021         	goto	u8150
 14481   004358                     u8151:
 14482   004358  EFB9  F021         	goto	l904
 14483   00435C                     u8150:
 14484   00435C  0E00               	movlw	0
 14485   00435E  6E22               	movwf	___flmul@prod^0,c
 14486   004360  0E00               	movlw	0
 14487   004362  6E23               	movwf	(___flmul@prod+1)^0,c
 14488   004364  0E00               	movlw	0
 14489   004366  6E24               	movwf	(___flmul@prod+2)^0,c
 14490   004368  0E00               	movlw	0
 14491   00436A  6E25               	movwf	(___flmul@prod+3)^0,c
 14492   00436C  6A1B               	clrf	___flmul@sign^0,c
 14493   00436E  EFCE  F021         	goto	l6458
 14494   004372                     l904:
 14495   004372  C026  F021         	movff	___flmul@temp,___flmul@bexp
 14496   004376  0EFF               	movlw	255
 14497   004378  1622               	andwf	___flmul@prod^0,f,c
 14498   00437A  0EFF               	movlw	255
 14499   00437C  1623               	andwf	(___flmul@prod+1)^0,f,c
 14500   00437E  0E7F               	movlw	127
 14501   004380  1624               	andwf	(___flmul@prod+2)^0,f,c
 14502   004382  0E00               	movlw	0
 14503   004384  1625               	andwf	(___flmul@prod+3)^0,f,c
 14504   004386  A021               	btfss	___flmul@bexp^0,0,c
 14505   004388  EFC8  F021         	goto	u8161
 14506   00438C  EFCA  F021         	goto	u8160
 14507   004390                     u8161:
 14508   004390  EFCB  F021         	goto	l6456
 14509   004394                     u8160:
 14510   004394  8E24               	bsf	(___flmul@prod+2)^0,7,c
 14511   004396                     l6456:
 14512   004396  90D8               	bcf	status,0,c
 14513   004398  3021               	rrcf	___flmul@bexp^0,w,c
 14514   00439A  6E25               	movwf	(___flmul@prod+3)^0,c
 14515   00439C                     l6458:
 14516   00439C  501B               	movf	___flmul@sign^0,w,c
 14517   00439E  1225               	iorwf	(___flmul@prod+3)^0,f,c
 14518   0043A0  C022  F00F         	movff	___flmul@prod,?___flmul
 14519   0043A4  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 14520   0043A8  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 14521   0043AC  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 14522   0043B0                     l891:
 14523   0043B0  0012               	return		;funcret
 14524   0043B2                     __end_of___flmul:
 14525                           	callstack 0
 14526                           
 14527 ;; *************** function ___flge *****************
 14528 ;; Defined at:
 14529 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 14530 ;; Parameters:    Size  Location     Type
 14531 ;;  ff1             4    0[BANK0 ] unsigned char 
 14532 ;;  ff2             4    4[BANK0 ] unsigned char 
 14533 ;; Auto vars:     Size  Location     Type
 14534 ;;		None
 14535 ;; Return value:  Size  Location     Type
 14536 ;;		None               void
 14537 ;; Registers used:
 14538 ;;		wreg, status,2, status,0
 14539 ;; Tracked objects:
 14540 ;;		On entry : 0/0
 14541 ;;		On exit  : 0/0
 14542 ;;		Unchanged: 0/0
 14543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14544 ;;      Params:         0       8       0       0       0       0       0       0       0
 14545 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14546 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14547 ;;      Totals:         4       8       0       0       0       0       0       0       0
 14548 ;;Total ram usage:       12 bytes
 14549 ;; Hardware stack levels used: 1
 14550 ;; Hardware stack levels required when called: 1
 14551 ;; This function calls:
 14552 ;;		Nothing
 14553 ;; This function is called by:
 14554 ;;		_Handle_Fire_Events
 14555 ;;		_Read_Sensors
 14556 ;;		_Update_Actuators
 14557 ;;		_efgtoa
 14558 ;;		_powf
 14559 ;; This function uses a non-reentrant model
 14560 ;;
 14561                           
 14562                           	psect	text35
 14563   005EAC                     __ptext35:
 14564                           	callstack 0
 14565   005EAC                     ___flge:
 14566                           	callstack 28
 14567   005EAC  0E00               	movlw	0
 14568   005EAE  0100               	movlb	0	; () banked
 14569   005EB0  1560               	andwf	___flge@ff1& (0+255),w,b
 14570   005EB2  6E59               	movwf	??___flge^0,c
 14571   005EB4  0E00               	movlw	0
 14572   005EB6  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
 14573   005EB8  6E5A               	movwf	(??___flge+1)^0,c
 14574   005EBA  0E80               	movlw	128
 14575   005EBC  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
 14576   005EBE  6E5B               	movwf	(??___flge+2)^0,c
 14577   005EC0  0E7F               	movlw	127
 14578   005EC2  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
 14579   005EC4  6E5C               	movwf	(??___flge+3)^0,c
 14580   005EC6  5059               	movf	??___flge^0,w,c
 14581   005EC8  105A               	iorwf	(??___flge+1)^0,w,c
 14582   005ECA  105B               	iorwf	(??___flge+2)^0,w,c
 14583   005ECC  105C               	iorwf	(??___flge+3)^0,w,c
 14584   005ECE  A4D8               	btfss	status,2,c
 14585   005ED0  EF6C  F02F         	goto	u8201
 14586   005ED4  EF6E  F02F         	goto	u8200
 14587   005ED8                     u8201:
 14588   005ED8  EF76  F02F         	goto	l6490
 14589   005EDC                     u8200:
 14590   005EDC                     
 14591                           ; BSR set to: 0
 14592   005EDC  0E00               	movlw	0
 14593   005EDE  6F60               	movwf	___flge@ff1& (0+255),b
 14594   005EE0  0E00               	movlw	0
 14595   005EE2  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 14596   005EE4  0E00               	movlw	0
 14597   005EE6  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 14598   005EE8  0E00               	movlw	0
 14599   005EEA  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 14600   005EEC                     l6490:
 14601                           
 14602                           ; BSR set to: 0
 14603   005EEC  0E00               	movlw	0
 14604   005EEE  1564               	andwf	___flge@ff2& (0+255),w,b
 14605   005EF0  6E59               	movwf	??___flge^0,c
 14606   005EF2  0E00               	movlw	0
 14607   005EF4  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
 14608   005EF6  6E5A               	movwf	(??___flge+1)^0,c
 14609   005EF8  0E80               	movlw	128
 14610   005EFA  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
 14611   005EFC  6E5B               	movwf	(??___flge+2)^0,c
 14612   005EFE  0E7F               	movlw	127
 14613   005F00  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
 14614   005F02  6E5C               	movwf	(??___flge+3)^0,c
 14615   005F04  5059               	movf	??___flge^0,w,c
 14616   005F06  105A               	iorwf	(??___flge+1)^0,w,c
 14617   005F08  105B               	iorwf	(??___flge+2)^0,w,c
 14618   005F0A  105C               	iorwf	(??___flge+3)^0,w,c
 14619   005F0C  A4D8               	btfss	status,2,c
 14620   005F0E  EF8B  F02F         	goto	u8211
 14621   005F12  EF8D  F02F         	goto	u8210
 14622   005F16                     u8211:
 14623   005F16  EF95  F02F         	goto	l6494
 14624   005F1A                     u8210:
 14625   005F1A                     
 14626                           ; BSR set to: 0
 14627   005F1A  0E00               	movlw	0
 14628   005F1C  6F64               	movwf	___flge@ff2& (0+255),b
 14629   005F1E  0E00               	movlw	0
 14630   005F20  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 14631   005F22  0E00               	movlw	0
 14632   005F24  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 14633   005F26  0E00               	movlw	0
 14634   005F28  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 14635   005F2A                     l6494:
 14636                           
 14637                           ; BSR set to: 0
 14638   005F2A  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
 14639   005F2C  EF9A  F02F         	goto	u8221
 14640   005F30  EF9C  F02F         	goto	u8220
 14641   005F34                     u8221:
 14642   005F34  EFA5  F02F         	goto	l6498
 14643   005F38                     u8220:
 14644   005F38                     
 14645                           ; BSR set to: 0
 14646   005F38  6D60               	negf	___flge@ff1& (0+255),b
 14647   005F3A  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
 14648   005F3C  B0D8               	btfsc	status,0,c
 14649   005F3E  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
 14650   005F40  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
 14651   005F42  B0D8               	btfsc	status,0,c
 14652   005F44  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
 14653   005F46  0E80               	movlw	128
 14654   005F48  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
 14655   005F4A                     l6498:
 14656                           
 14657                           ; BSR set to: 0
 14658   005F4A  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
 14659   005F4C  EFAA  F02F         	goto	u8231
 14660   005F50  EFAC  F02F         	goto	u8230
 14661   005F54                     u8231:
 14662   005F54  EFB5  F02F         	goto	l538
 14663   005F58                     u8230:
 14664   005F58                     
 14665                           ; BSR set to: 0
 14666   005F58  6D64               	negf	___flge@ff2& (0+255),b
 14667   005F5A  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
 14668   005F5C  B0D8               	btfsc	status,0,c
 14669   005F5E  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
 14670   005F60  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
 14671   005F62  B0D8               	btfsc	status,0,c
 14672   005F64  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
 14673   005F66  0E80               	movlw	128
 14674   005F68  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
 14675   005F6A                     l538:
 14676                           
 14677                           ; BSR set to: 0
 14678   005F6A  0E00               	movlw	0
 14679   005F6C  1B60               	xorwf	___flge@ff1& (0+255),f,b
 14680   005F6E  0E00               	movlw	0
 14681   005F70  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
 14682   005F72  0E00               	movlw	0
 14683   005F74  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
 14684   005F76  0E80               	movlw	128
 14685   005F78  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
 14686   005F7A  0E00               	movlw	0
 14687   005F7C  1B64               	xorwf	___flge@ff2& (0+255),f,b
 14688   005F7E  0E00               	movlw	0
 14689   005F80  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
 14690   005F82  0E00               	movlw	0
 14691   005F84  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
 14692   005F86  0E80               	movlw	128
 14693   005F88  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
 14694   005F8A  5164               	movf	___flge@ff2& (0+255),w,b
 14695   005F8C  5D60               	subwf	___flge@ff1& (0+255),w,b
 14696   005F8E  5165               	movf	(___flge@ff2+1)& (0+255),w,b
 14697   005F90  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
 14698   005F92  5166               	movf	(___flge@ff2+2)& (0+255),w,b
 14699   005F94  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
 14700   005F96  5167               	movf	(___flge@ff2+3)& (0+255),w,b
 14701   005F98  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
 14702   005F9A  B0D8               	btfsc	status,0,c
 14703   005F9C  EFD2  F02F         	goto	u8241
 14704   005FA0  EFD4  F02F         	goto	u8240
 14705   005FA4                     u8241:
 14706   005FA4  EFD7  F02F         	goto	l6504
 14707   005FA8                     u8240:
 14708   005FA8                     
 14709                           ; BSR set to: 0
 14710   005FA8  90D8               	bcf	status,0,c
 14711   005FAA  EFD8  F02F         	goto	l543
 14712   005FAE                     l6504:
 14713                           
 14714                           ; BSR set to: 0
 14715   005FAE  80D8               	bsf	status,0,c
 14716   005FB0                     l543:
 14717                           
 14718                           ; BSR set to: 0
 14719   005FB0  0012               	return		;funcret
 14720   005FB2                     __end_of___flge:
 14721                           	callstack 0
 14722                           
 14723 ;; *************** function ___fleq *****************
 14724 ;; Defined at:
 14725 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 14726 ;; Parameters:    Size  Location     Type
 14727 ;;  ff1             4    0[COMRAM] unsigned char 
 14728 ;;  ff2             4    4[COMRAM] unsigned char 
 14729 ;; Auto vars:     Size  Location     Type
 14730 ;;		None
 14731 ;; Return value:  Size  Location     Type
 14732 ;;		None               void
 14733 ;; Registers used:
 14734 ;;		wreg, status,2, status,0
 14735 ;; Tracked objects:
 14736 ;;		On entry : 0/0
 14737 ;;		On exit  : 0/0
 14738 ;;		Unchanged: 0/0
 14739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14740 ;;      Params:         8       0       0       0       0       0       0       0       0
 14741 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14742 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14743 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14744 ;;Total ram usage:       12 bytes
 14745 ;; Hardware stack levels used: 1
 14746 ;; Hardware stack levels required when called: 1
 14747 ;; This function calls:
 14748 ;;		Nothing
 14749 ;; This function is called by:
 14750 ;;		_efgtoa
 14751 ;; This function uses a non-reentrant model
 14752 ;;
 14753                           
 14754                           	psect	text36
 14755   006784                     __ptext36:
 14756                           	callstack 0
 14757   006784                     ___fleq:
 14758                           	callstack 24
 14759   006784  0E00               	movlw	0
 14760   006786  1401               	andwf	___fleq@ff1^0,w,c
 14761   006788  6E09               	movwf	??___fleq^0,c
 14762   00678A  0E00               	movlw	0
 14763   00678C  1402               	andwf	(___fleq@ff1+1)^0,w,c
 14764   00678E  6E0A               	movwf	(??___fleq+1)^0,c
 14765   006790  0E80               	movlw	128
 14766   006792  1403               	andwf	(___fleq@ff1+2)^0,w,c
 14767   006794  6E0B               	movwf	(??___fleq+2)^0,c
 14768   006796  0E7F               	movlw	127
 14769   006798  1404               	andwf	(___fleq@ff1+3)^0,w,c
 14770   00679A  6E0C               	movwf	(??___fleq+3)^0,c
 14771   00679C  5009               	movf	??___fleq^0,w,c
 14772   00679E  100A               	iorwf	(??___fleq+1)^0,w,c
 14773   0067A0  100B               	iorwf	(??___fleq+2)^0,w,c
 14774   0067A2  100C               	iorwf	(??___fleq+3)^0,w,c
 14775   0067A4  A4D8               	btfss	status,2,c
 14776   0067A6  EFD7  F033         	goto	u8171
 14777   0067AA  EFD9  F033         	goto	u8170
 14778   0067AE                     u8171:
 14779   0067AE  EFE1  F033         	goto	l6474
 14780   0067B2                     u8170:
 14781   0067B2  0E00               	movlw	0
 14782   0067B4  6E01               	movwf	___fleq@ff1^0,c
 14783   0067B6  0E00               	movlw	0
 14784   0067B8  6E02               	movwf	(___fleq@ff1+1)^0,c
 14785   0067BA  0E00               	movlw	0
 14786   0067BC  6E03               	movwf	(___fleq@ff1+2)^0,c
 14787   0067BE  0E00               	movlw	0
 14788   0067C0  6E04               	movwf	(___fleq@ff1+3)^0,c
 14789   0067C2                     l6474:
 14790   0067C2  0E00               	movlw	0
 14791   0067C4  1405               	andwf	___fleq@ff2^0,w,c
 14792   0067C6  6E09               	movwf	??___fleq^0,c
 14793   0067C8  0E00               	movlw	0
 14794   0067CA  1406               	andwf	(___fleq@ff2+1)^0,w,c
 14795   0067CC  6E0A               	movwf	(??___fleq+1)^0,c
 14796   0067CE  0E80               	movlw	128
 14797   0067D0  1407               	andwf	(___fleq@ff2+2)^0,w,c
 14798   0067D2  6E0B               	movwf	(??___fleq+2)^0,c
 14799   0067D4  0E7F               	movlw	127
 14800   0067D6  1408               	andwf	(___fleq@ff2+3)^0,w,c
 14801   0067D8  6E0C               	movwf	(??___fleq+3)^0,c
 14802   0067DA  5009               	movf	??___fleq^0,w,c
 14803   0067DC  100A               	iorwf	(??___fleq+1)^0,w,c
 14804   0067DE  100B               	iorwf	(??___fleq+2)^0,w,c
 14805   0067E0  100C               	iorwf	(??___fleq+3)^0,w,c
 14806   0067E2  A4D8               	btfss	status,2,c
 14807   0067E4  EFF6  F033         	goto	u8181
 14808   0067E8  EFF8  F033         	goto	u8180
 14809   0067EC                     u8181:
 14810   0067EC  EF00  F034         	goto	l6478
 14811   0067F0                     u8180:
 14812   0067F0  0E00               	movlw	0
 14813   0067F2  6E05               	movwf	___fleq@ff2^0,c
 14814   0067F4  0E00               	movlw	0
 14815   0067F6  6E06               	movwf	(___fleq@ff2+1)^0,c
 14816   0067F8  0E00               	movlw	0
 14817   0067FA  6E07               	movwf	(___fleq@ff2+2)^0,c
 14818   0067FC  0E00               	movlw	0
 14819   0067FE  6E08               	movwf	(___fleq@ff2+3)^0,c
 14820   006800                     l6478:
 14821   006800  5005               	movf	___fleq@ff2^0,w,c
 14822   006802  1801               	xorwf	___fleq@ff1^0,w,c
 14823   006804  E10F               	bnz	u8190
 14824   006806  5006               	movf	(___fleq@ff2+1)^0,w,c
 14825   006808  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 14826   00680A  E10C               	bnz	u8190
 14827   00680C  5007               	movf	(___fleq@ff2+2)^0,w,c
 14828   00680E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 14829   006810  E109               	bnz	u8190
 14830   006812  5008               	movf	(___fleq@ff2+3)^0,w,c
 14831   006814  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 14832   006816  B4D8               	btfsc	status,2,c
 14833   006818  EF10  F034         	goto	u8191
 14834   00681C  EF12  F034         	goto	u8190
 14835   006820                     u8191:
 14836   006820  EF15  F034         	goto	l6482
 14837   006824                     u8190:
 14838   006824  90D8               	bcf	status,0,c
 14839   006826  EF16  F034         	goto	l532
 14840   00682A                     l6482:
 14841   00682A  80D8               	bsf	status,0,c
 14842   00682C                     l532:
 14843   00682C  0012               	return		;funcret
 14844   00682E                     __end_of___fleq:
 14845                           	callstack 0
 14846                           
 14847 ;; *************** function ___fldiv *****************
 14848 ;; Defined at:
 14849 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;  b               4   39[COMRAM] unsigned char 
 14852 ;;  a               4   43[COMRAM] unsigned char 
 14853 ;; Auto vars:     Size  Location     Type
 14854 ;;  grs             4   58[COMRAM] unsigned long 
 14855 ;;  rem             4   51[COMRAM] unsigned long 
 14856 ;;  new_exp         2   56[COMRAM] short 
 14857 ;;  aexp            1   63[COMRAM] unsigned char 
 14858 ;;  bexp            1   62[COMRAM] unsigned char 
 14859 ;;  sign            1   55[COMRAM] unsigned char 
 14860 ;; Return value:  Size  Location     Type
 14861 ;;                  4   39[COMRAM] unsigned char 
 14862 ;; Registers used:
 14863 ;;		wreg, status,2, status,0
 14864 ;; Tracked objects:
 14865 ;;		On entry : 0/0
 14866 ;;		On exit  : 0/0
 14867 ;;		Unchanged: 0/0
 14868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14869 ;;      Params:         8       0       0       0       0       0       0       0       0
 14870 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14871 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14872 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14873 ;;Total ram usage:       25 bytes
 14874 ;; Hardware stack levels used: 1
 14875 ;; Hardware stack levels required when called: 1
 14876 ;; This function calls:
 14877 ;;		Nothing
 14878 ;; This function is called by:
 14879 ;;		_main
 14880 ;;		_Read_Sensors
 14881 ;;		_Apply_Filter
 14882 ;;		_efgtoa
 14883 ;;		_powf
 14884 ;; This function uses a non-reentrant model
 14885 ;;
 14886                           
 14887                           	psect	text37
 14888   004790                     __ptext37:
 14889                           	callstack 0
 14890   004790                     ___fldiv:
 14891                           	callstack 29
 14892   004790  502B               	movf	(___fldiv@b+3)^0,w,c
 14893   004792  0B80               	andlw	128
 14894   004794  6E38               	movwf	___fldiv@sign^0,c
 14895   004796  502B               	movf	(___fldiv@b+3)^0,w,c
 14896   004798  242B               	addwf	(___fldiv@b+3)^0,w,c
 14897   00479A  6E3F               	movwf	___fldiv@bexp^0,c
 14898   00479C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 14899   00479E  EFD3  F023         	goto	u7751
 14900   0047A2  EFD5  F023         	goto	u7750
 14901   0047A6                     u7751:
 14902   0047A6  EFD6  F023         	goto	l6206
 14903   0047AA                     u7750:
 14904   0047AA  803F               	bsf	___fldiv@bexp^0,0,c
 14905   0047AC                     l6206:
 14906   0047AC  503F               	movf	___fldiv@bexp^0,w,c
 14907   0047AE  B4D8               	btfsc	status,2,c
 14908   0047B0  EFDC  F023         	goto	u7761
 14909   0047B4  EFDE  F023         	goto	u7760
 14910   0047B8                     u7761:
 14911   0047B8  EFF2  F023         	goto	l6216
 14912   0047BC                     u7760:
 14913   0047BC  283F               	incf	___fldiv@bexp^0,w,c
 14914   0047BE  A4D8               	btfss	status,2,c
 14915   0047C0  EFE4  F023         	goto	u7771
 14916   0047C4  EFE6  F023         	goto	u7770
 14917   0047C8                     u7771:
 14918   0047C8  EFEE  F023         	goto	l6212
 14919   0047CC                     u7770:
 14920   0047CC  0E00               	movlw	0
 14921   0047CE  6E28               	movwf	___fldiv@b^0,c
 14922   0047D0  0E00               	movlw	0
 14923   0047D2  6E29               	movwf	(___fldiv@b+1)^0,c
 14924   0047D4  0E00               	movlw	0
 14925   0047D6  6E2A               	movwf	(___fldiv@b+2)^0,c
 14926   0047D8  0E00               	movlw	0
 14927   0047DA  6E2B               	movwf	(___fldiv@b+3)^0,c
 14928   0047DC                     l6212:
 14929   0047DC  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 14930   0047DE  6A2B               	clrf	(___fldiv@b+3)^0,c
 14931   0047E0  EFFA  F023         	goto	l6218
 14932   0047E4                     l6216:
 14933   0047E4  0E00               	movlw	0
 14934   0047E6  6E28               	movwf	___fldiv@b^0,c
 14935   0047E8  0E00               	movlw	0
 14936   0047EA  6E29               	movwf	(___fldiv@b+1)^0,c
 14937   0047EC  0E00               	movlw	0
 14938   0047EE  6E2A               	movwf	(___fldiv@b+2)^0,c
 14939   0047F0  0E00               	movlw	0
 14940   0047F2  6E2B               	movwf	(___fldiv@b+3)^0,c
 14941   0047F4                     l6218:
 14942   0047F4  502F               	movf	(___fldiv@a+3)^0,w,c
 14943   0047F6  0B80               	andlw	128
 14944   0047F8  1A38               	xorwf	___fldiv@sign^0,f,c
 14945   0047FA  502F               	movf	(___fldiv@a+3)^0,w,c
 14946   0047FC  242F               	addwf	(___fldiv@a+3)^0,w,c
 14947   0047FE  6E40               	movwf	___fldiv@aexp^0,c
 14948   004800  AE2E               	btfss	(___fldiv@a+2)^0,7,c
 14949   004802  EF05  F024         	goto	u7781
 14950   004806  EF07  F024         	goto	u7780
 14951   00480A                     u7781:
 14952   00480A  EF08  F024         	goto	l6226
 14953   00480E                     u7780:
 14954   00480E  8040               	bsf	___fldiv@aexp^0,0,c
 14955   004810                     l6226:
 14956   004810  5040               	movf	___fldiv@aexp^0,w,c
 14957   004812  B4D8               	btfsc	status,2,c
 14958   004814  EF0E  F024         	goto	u7791
 14959   004818  EF10  F024         	goto	u7790
 14960   00481C                     u7791:
 14961   00481C  EF24  F024         	goto	l6236
 14962   004820                     u7790:
 14963   004820  2840               	incf	___fldiv@aexp^0,w,c
 14964   004822  A4D8               	btfss	status,2,c
 14965   004824  EF16  F024         	goto	u7801
 14966   004828  EF18  F024         	goto	u7800
 14967   00482C                     u7801:
 14968   00482C  EF20  F024         	goto	l6232
 14969   004830                     u7800:
 14970   004830  0E00               	movlw	0
 14971   004832  6E2C               	movwf	___fldiv@a^0,c
 14972   004834  0E00               	movlw	0
 14973   004836  6E2D               	movwf	(___fldiv@a+1)^0,c
 14974   004838  0E00               	movlw	0
 14975   00483A  6E2E               	movwf	(___fldiv@a+2)^0,c
 14976   00483C  0E00               	movlw	0
 14977   00483E  6E2F               	movwf	(___fldiv@a+3)^0,c
 14978   004840                     l6232:
 14979   004840  8E2E               	bsf	(___fldiv@a+2)^0,7,c
 14980   004842  6A2F               	clrf	(___fldiv@a+3)^0,c
 14981   004844  EF2C  F024         	goto	l6238
 14982   004848                     l6236:
 14983   004848  0E00               	movlw	0
 14984   00484A  6E2C               	movwf	___fldiv@a^0,c
 14985   00484C  0E00               	movlw	0
 14986   00484E  6E2D               	movwf	(___fldiv@a+1)^0,c
 14987   004850  0E00               	movlw	0
 14988   004852  6E2E               	movwf	(___fldiv@a+2)^0,c
 14989   004854  0E00               	movlw	0
 14990   004856  6E2F               	movwf	(___fldiv@a+3)^0,c
 14991   004858                     l6238:
 14992   004858  502C               	movf	___fldiv@a^0,w,c
 14993   00485A  102D               	iorwf	(___fldiv@a+1)^0,w,c
 14994   00485C  102E               	iorwf	(___fldiv@a+2)^0,w,c
 14995   00485E  102F               	iorwf	(___fldiv@a+3)^0,w,c
 14996   004860  A4D8               	btfss	status,2,c
 14997   004862  EF35  F024         	goto	u7811
 14998   004866  EF37  F024         	goto	u7810
 14999   00486A                     u7811:
 15000   00486A  EF4F  F024         	goto	l6250
 15001   00486E                     u7810:
 15002   00486E  0E00               	movlw	0
 15003   004870  6E28               	movwf	___fldiv@b^0,c
 15004   004872  0E00               	movlw	0
 15005   004874  6E29               	movwf	(___fldiv@b+1)^0,c
 15006   004876  0E00               	movlw	0
 15007   004878  6E2A               	movwf	(___fldiv@b+2)^0,c
 15008   00487A  0E00               	movlw	0
 15009   00487C  6E2B               	movwf	(___fldiv@b+3)^0,c
 15010   00487E  0E80               	movlw	128
 15011   004880  122A               	iorwf	(___fldiv@b+2)^0,f,c
 15012   004882  0E7F               	movlw	127
 15013   004884  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15014   004886                     l6244:
 15015   004886  5038               	movf	___fldiv@sign^0,w,c
 15016   004888  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15017   00488A  C028  F028         	movff	___fldiv@b,?___fldiv
 15018   00488E  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
 15019   004892  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
 15020   004896  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
 15021   00489A  EF8F  F025         	goto	l855
 15022   00489E                     l6250:
 15023   00489E  503F               	movf	___fldiv@bexp^0,w,c
 15024   0048A0  A4D8               	btfss	status,2,c
 15025   0048A2  EF55  F024         	goto	u7821
 15026   0048A6  EF57  F024         	goto	u7820
 15027   0048AA                     u7821:
 15028   0048AA  EF61  F024         	goto	l6258
 15029   0048AE                     u7820:
 15030   0048AE  0E00               	movlw	0
 15031   0048B0  6E28               	movwf	?___fldiv^0,c
 15032   0048B2  0E00               	movlw	0
 15033   0048B4  6E29               	movwf	(?___fldiv+1)^0,c
 15034   0048B6  0E00               	movlw	0
 15035   0048B8  6E2A               	movwf	(?___fldiv+2)^0,c
 15036   0048BA  0E00               	movlw	0
 15037   0048BC  6E2B               	movwf	(?___fldiv+3)^0,c
 15038   0048BE  EF8F  F025         	goto	l855
 15039   0048C2                     l6258:
 15040   0048C2  5040               	movf	___fldiv@aexp^0,w,c
 15041   0048C4  C03F  F030         	movff	___fldiv@bexp,??___fldiv
 15042   0048C8  6A31               	clrf	(??___fldiv+1)^0,c
 15043   0048CA  5E30               	subwf	??___fldiv^0,f,c
 15044   0048CC  0E00               	movlw	0
 15045   0048CE  5A31               	subwfb	(??___fldiv+1)^0,f,c
 15046   0048D0  0E7F               	movlw	127
 15047   0048D2  2430               	addwf	??___fldiv^0,w,c
 15048   0048D4  6E39               	movwf	___fldiv@new_exp^0,c
 15049   0048D6  0E00               	movlw	0
 15050   0048D8  2031               	addwfc	(??___fldiv+1)^0,w,c
 15051   0048DA  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15052   0048DC  C028  F034         	movff	___fldiv@b,___fldiv@rem
 15053   0048E0  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
 15054   0048E4  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
 15055   0048E8  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
 15056   0048EC  0E00               	movlw	0
 15057   0048EE  6E28               	movwf	___fldiv@b^0,c
 15058   0048F0  0E00               	movlw	0
 15059   0048F2  6E29               	movwf	(___fldiv@b+1)^0,c
 15060   0048F4  0E00               	movlw	0
 15061   0048F6  6E2A               	movwf	(___fldiv@b+2)^0,c
 15062   0048F8  0E00               	movlw	0
 15063   0048FA  6E2B               	movwf	(___fldiv@b+3)^0,c
 15064   0048FC  0E00               	movlw	0
 15065   0048FE  6E3B               	movwf	___fldiv@grs^0,c
 15066   004900  0E00               	movlw	0
 15067   004902  6E3C               	movwf	(___fldiv@grs+1)^0,c
 15068   004904  0E00               	movlw	0
 15069   004906  6E3D               	movwf	(___fldiv@grs+2)^0,c
 15070   004908  0E00               	movlw	0
 15071   00490A  6E3E               	movwf	(___fldiv@grs+3)^0,c
 15072   00490C  6A40               	clrf	___fldiv@aexp^0,c
 15073   00490E  EFC1  F024         	goto	l857
 15074   004912                     l6268:
 15075   004912  5040               	movf	___fldiv@aexp^0,w,c
 15076   004914  B4D8               	btfsc	status,2,c
 15077   004916  EF8F  F024         	goto	u7831
 15078   00491A  EF91  F024         	goto	u7830
 15079   00491E                     u7831:
 15080   00491E  EFA8  F024         	goto	l6276
 15081   004922                     u7830:
 15082   004922  90D8               	bcf	status,0,c
 15083   004924  3634               	rlcf	___fldiv@rem^0,f,c
 15084   004926  3635               	rlcf	(___fldiv@rem+1)^0,f,c
 15085   004928  3636               	rlcf	(___fldiv@rem+2)^0,f,c
 15086   00492A  3637               	rlcf	(___fldiv@rem+3)^0,f,c
 15087   00492C  90D8               	bcf	status,0,c
 15088   00492E  3628               	rlcf	___fldiv@b^0,f,c
 15089   004930  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15090   004932  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15091   004934  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15092   004936  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15093   004938  EFA0  F024         	goto	u7841
 15094   00493C  EFA2  F024         	goto	u7840
 15095   004940                     u7841:
 15096   004940  EFA3  F024         	goto	l860
 15097   004944                     u7840:
 15098   004944  8028               	bsf	___fldiv@b^0,0,c
 15099   004946                     l860:
 15100   004946  90D8               	bcf	status,0,c
 15101   004948  363B               	rlcf	___fldiv@grs^0,f,c
 15102   00494A  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15103   00494C  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15104   00494E  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15105   004950                     l6276:
 15106   004950  502C               	movf	___fldiv@a^0,w,c
 15107   004952  5C34               	subwf	___fldiv@rem^0,w,c
 15108   004954  502D               	movf	(___fldiv@a+1)^0,w,c
 15109   004956  5835               	subwfb	(___fldiv@rem+1)^0,w,c
 15110   004958  502E               	movf	(___fldiv@a+2)^0,w,c
 15111   00495A  5836               	subwfb	(___fldiv@rem+2)^0,w,c
 15112   00495C  502F               	movf	(___fldiv@a+3)^0,w,c
 15113   00495E  5837               	subwfb	(___fldiv@rem+3)^0,w,c
 15114   004960  A0D8               	btfss	status,0,c
 15115   004962  EFB5  F024         	goto	u7851
 15116   004966  EFB7  F024         	goto	u7850
 15117   00496A                     u7851:
 15118   00496A  EFC0  F024         	goto	l6282
 15119   00496E                     u7850:
 15120   00496E  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
 15121   004970  502C               	movf	___fldiv@a^0,w,c
 15122   004972  5E34               	subwf	___fldiv@rem^0,f,c
 15123   004974  502D               	movf	(___fldiv@a+1)^0,w,c
 15124   004976  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
 15125   004978  502E               	movf	(___fldiv@a+2)^0,w,c
 15126   00497A  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
 15127   00497C  502F               	movf	(___fldiv@a+3)^0,w,c
 15128   00497E  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
 15129   004980                     l6282:
 15130   004980  2A40               	incf	___fldiv@aexp^0,f,c
 15131   004982                     l857:
 15132   004982  0E19               	movlw	25
 15133   004984  6440               	cpfsgt	___fldiv@aexp^0,c
 15134   004986  EFC7  F024         	goto	u7861
 15135   00498A  EFC9  F024         	goto	u7860
 15136   00498E                     u7861:
 15137   00498E  EF89  F024         	goto	l6268
 15138   004992                     u7860:
 15139   004992  5034               	movf	___fldiv@rem^0,w,c
 15140   004994  1035               	iorwf	(___fldiv@rem+1)^0,w,c
 15141   004996  1036               	iorwf	(___fldiv@rem+2)^0,w,c
 15142   004998  1037               	iorwf	(___fldiv@rem+3)^0,w,c
 15143   00499A  B4D8               	btfsc	status,2,c
 15144   00499C  EFD2  F024         	goto	u7871
 15145   0049A0  EFD4  F024         	goto	u7870
 15146   0049A4                     u7871:
 15147   0049A4  EFEC  F024         	goto	l6294
 15148   0049A8                     u7870:
 15149   0049A8  803B               	bsf	___fldiv@grs^0,0,c
 15150   0049AA  EFEC  F024         	goto	l6294
 15151   0049AE                     l6288:
 15152   0049AE  90D8               	bcf	status,0,c
 15153   0049B0  3628               	rlcf	___fldiv@b^0,f,c
 15154   0049B2  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15155   0049B4  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15156   0049B6  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15157   0049B8  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15158   0049BA  EFE1  F024         	goto	u7881
 15159   0049BE  EFE3  F024         	goto	u7880
 15160   0049C2                     u7881:
 15161   0049C2  EFE4  F024         	goto	l866
 15162   0049C6                     u7880:
 15163   0049C6  8028               	bsf	___fldiv@b^0,0,c
 15164   0049C8                     l866:
 15165   0049C8  90D8               	bcf	status,0,c
 15166   0049CA  363B               	rlcf	___fldiv@grs^0,f,c
 15167   0049CC  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15168   0049CE  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15169   0049D0  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15170   0049D2  0639               	decf	___fldiv@new_exp^0,f,c
 15171   0049D4  A0D8               	btfss	status,0,c
 15172   0049D6  063A               	decf	(___fldiv@new_exp+1)^0,f,c
 15173   0049D8                     l6294:
 15174   0049D8  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 15175   0049DA  EFF1  F024         	goto	u7891
 15176   0049DE  EFF3  F024         	goto	u7890
 15177   0049E2                     u7891:
 15178   0049E2  EFD7  F024         	goto	l6288
 15179   0049E6                     u7890:
 15180   0049E6  6A40               	clrf	___fldiv@aexp^0,c
 15181   0049E8  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15182   0049EA  EFF9  F024         	goto	u7901
 15183   0049EE  EFFB  F024         	goto	u7900
 15184   0049F2                     u7901:
 15185   0049F2  EF1F  F025         	goto	l868
 15186   0049F6                     u7900:
 15187   0049F6  0EFF               	movlw	255
 15188   0049F8  143B               	andwf	___fldiv@grs^0,w,c
 15189   0049FA  6E30               	movwf	??___fldiv^0,c
 15190   0049FC  0EFF               	movlw	255
 15191   0049FE  143C               	andwf	(___fldiv@grs+1)^0,w,c
 15192   004A00  6E31               	movwf	(??___fldiv+1)^0,c
 15193   004A02  0EFF               	movlw	255
 15194   004A04  143D               	andwf	(___fldiv@grs+2)^0,w,c
 15195   004A06  6E32               	movwf	(??___fldiv+2)^0,c
 15196   004A08  0E7F               	movlw	127
 15197   004A0A  143E               	andwf	(___fldiv@grs+3)^0,w,c
 15198   004A0C  6E33               	movwf	(??___fldiv+3)^0,c
 15199   004A0E  5030               	movf	??___fldiv^0,w,c
 15200   004A10  1031               	iorwf	(??___fldiv+1)^0,w,c
 15201   004A12  1032               	iorwf	(??___fldiv+2)^0,w,c
 15202   004A14  1033               	iorwf	(??___fldiv+3)^0,w,c
 15203   004A16  B4D8               	btfsc	status,2,c
 15204   004A18  EF10  F025         	goto	u7911
 15205   004A1C  EF12  F025         	goto	u7910
 15206   004A20                     u7911:
 15207   004A20  EF16  F025         	goto	l869
 15208   004A24                     u7910:
 15209   004A24                     l6298:
 15210   004A24  0E01               	movlw	1
 15211   004A26  6E40               	movwf	___fldiv@aexp^0,c
 15212   004A28  EF1F  F025         	goto	l868
 15213   004A2C                     l869:
 15214   004A2C  A028               	btfss	___fldiv@b^0,0,c
 15215   004A2E  EF1B  F025         	goto	u7921
 15216   004A32  EF1D  F025         	goto	u7920
 15217   004A36                     u7921:
 15218   004A36  EF1F  F025         	goto	l868
 15219   004A3A                     u7920:
 15220   004A3A  EF12  F025         	goto	l6298
 15221   004A3E                     l868:
 15222   004A3E  5040               	movf	___fldiv@aexp^0,w,c
 15223   004A40  B4D8               	btfsc	status,2,c
 15224   004A42  EF25  F025         	goto	u7931
 15225   004A46  EF27  F025         	goto	u7930
 15226   004A4A                     u7931:
 15227   004A4A  EF4B  F025         	goto	l6310
 15228   004A4E                     u7930:
 15229   004A4E  0E01               	movlw	1
 15230   004A50  2628               	addwf	___fldiv@b^0,f,c
 15231   004A52  0E00               	movlw	0
 15232   004A54  2229               	addwfc	(___fldiv@b+1)^0,f,c
 15233   004A56  222A               	addwfc	(___fldiv@b+2)^0,f,c
 15234   004A58  222B               	addwfc	(___fldiv@b+3)^0,f,c
 15235   004A5A  A02B               	btfss	(___fldiv@b+3)^0,0,c
 15236   004A5C  EF32  F025         	goto	u7941
 15237   004A60  EF34  F025         	goto	u7940
 15238   004A64                     u7941:
 15239   004A64  EF4B  F025         	goto	l6310
 15240   004A68                     u7940:
 15241   004A68  C028  F030         	movff	___fldiv@b,??___fldiv
 15242   004A6C  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
 15243   004A70  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
 15244   004A74  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
 15245   004A78  3433               	rlcf	(??___fldiv+3)^0,w,c
 15246   004A7A  3233               	rrcf	(??___fldiv+3)^0,f,c
 15247   004A7C  3232               	rrcf	(??___fldiv+2)^0,f,c
 15248   004A7E  3231               	rrcf	(??___fldiv+1)^0,f,c
 15249   004A80  3230               	rrcf	??___fldiv^0,f,c
 15250   004A82  C030  F028         	movff	??___fldiv,___fldiv@b
 15251   004A86  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
 15252   004A8A  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
 15253   004A8E  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
 15254   004A92  4A39               	infsnz	___fldiv@new_exp^0,f,c
 15255   004A94  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
 15256   004A96                     l6310:
 15257   004A96  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15258   004A98  EF56  F025         	goto	u7951
 15259   004A9C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15260   004A9E  E108               	bnz	u7950
 15261   004AA0  2839               	incf	___fldiv@new_exp^0,w,c
 15262   004AA2  A0D8               	btfss	status,0,c
 15263   004AA4  EF56  F025         	goto	u7951
 15264   004AA8  EF58  F025         	goto	u7950
 15265   004AAC                     u7951:
 15266   004AAC  EF63  F025         	goto	l6314
 15267   004AB0                     u7950:
 15268   004AB0  0E00               	movlw	0
 15269   004AB2  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15270   004AB4  6839               	setf	___fldiv@new_exp^0,c
 15271   004AB6  0E00               	movlw	0
 15272   004AB8  6E28               	movwf	___fldiv@b^0,c
 15273   004ABA  0E00               	movlw	0
 15274   004ABC  6E29               	movwf	(___fldiv@b+1)^0,c
 15275   004ABE  0E00               	movlw	0
 15276   004AC0  6E2A               	movwf	(___fldiv@b+2)^0,c
 15277   004AC2  0E00               	movlw	0
 15278   004AC4  6E2B               	movwf	(___fldiv@b+3)^0,c
 15279   004AC6                     l6314:
 15280   004AC6  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15281   004AC8  EF70  F025         	goto	u7960
 15282   004ACC  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15283   004ACE  E106               	bnz	u7961
 15284   004AD0  0439               	decf	___fldiv@new_exp^0,w,c
 15285   004AD2  B0D8               	btfsc	status,0,c
 15286   004AD4  EF6E  F025         	goto	u7961
 15287   004AD8  EF70  F025         	goto	u7960
 15288   004ADC                     u7961:
 15289   004ADC  EF7D  F025         	goto	l6320
 15290   004AE0                     u7960:
 15291   004AE0  0E00               	movlw	0
 15292   004AE2  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15293   004AE4  0E00               	movlw	0
 15294   004AE6  6E39               	movwf	___fldiv@new_exp^0,c
 15295   004AE8  0E00               	movlw	0
 15296   004AEA  6E28               	movwf	___fldiv@b^0,c
 15297   004AEC  0E00               	movlw	0
 15298   004AEE  6E29               	movwf	(___fldiv@b+1)^0,c
 15299   004AF0  0E00               	movlw	0
 15300   004AF2  6E2A               	movwf	(___fldiv@b+2)^0,c
 15301   004AF4  0E00               	movlw	0
 15302   004AF6  6E2B               	movwf	(___fldiv@b+3)^0,c
 15303   004AF8  6A38               	clrf	___fldiv@sign^0,c
 15304   004AFA                     l6320:
 15305   004AFA  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
 15306   004AFE  A03F               	btfss	___fldiv@bexp^0,0,c
 15307   004B00  EF84  F025         	goto	u7971
 15308   004B04  EF86  F025         	goto	u7970
 15309   004B08                     u7971:
 15310   004B08  EF89  F025         	goto	l6326
 15311   004B0C                     u7970:
 15312   004B0C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 15313   004B0E  EF8A  F025         	goto	l6328
 15314   004B12                     l6326:
 15315   004B12  9E2A               	bcf	(___fldiv@b+2)^0,7,c
 15316   004B14                     l6328:
 15317   004B14  90D8               	bcf	status,0,c
 15318   004B16  303F               	rrcf	___fldiv@bexp^0,w,c
 15319   004B18  6E2B               	movwf	(___fldiv@b+3)^0,c
 15320   004B1A  EF43  F024         	goto	l6244
 15321   004B1E                     l855:
 15322   004B1E  0012               	return		;funcret
 15323   004B20                     __end_of___fldiv:
 15324                           	callstack 0
 15325                           
 15326 ;; *************** function _dtoa *****************
 15327 ;; Defined at:
 15328 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 15329 ;; Parameters:    Size  Location     Type
 15330 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 15331 ;;		 -> sprintf@f(11), 
 15332 ;;  d               4   23[COMRAM] long 
 15333 ;; Auto vars:     Size  Location     Type
 15334 ;;  i               2   34[COMRAM] int 
 15335 ;;  p               2   31[COMRAM] int 
 15336 ;;  w               2   29[COMRAM] int 
 15337 ;;  s               1   33[COMRAM] unsigned char 
 15338 ;; Return value:  Size  Location     Type
 15339 ;;                  1    wreg      void 
 15340 ;; Registers used:
 15341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15342 ;; Tracked objects:
 15343 ;;		On entry : 0/0
 15344 ;;		On exit  : 0/0
 15345 ;;		Unchanged: 0/0
 15346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15347 ;;      Params:         5       0       0       0       0       0       0       0       0
 15348 ;;      Locals:         9       0       0       0       0       0       0       0       0
 15349 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15350 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15351 ;;Total ram usage:       14 bytes
 15352 ;; Hardware stack levels used: 1
 15353 ;; Hardware stack levels required when called: 5
 15354 ;; This function calls:
 15355 ;;		___aldiv
 15356 ;;		___almod
 15357 ;;		_abs
 15358 ;;		_pad
 15359 ;; This function is called by:
 15360 ;;		_vfpfcnvrt
 15361 ;; This function uses a non-reentrant model
 15362 ;;
 15363                           
 15364                           	psect	text38
 15365   005728                     __ptext38:
 15366                           	callstack 0
 15367   005728                     _dtoa:
 15368                           	callstack 21
 15369   005728                     
 15370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 15371   005728  BE1B               	btfsc	(dtoa@d+3)^0,7,c
 15372   00572A  EF99  F02B         	goto	u8581
 15373   00572E  EF9C  F02B         	goto	u8580
 15374   005732                     u8581:
 15375   005732  0E01               	movlw	1
 15376   005734  EF9D  F02B         	goto	u8590
 15377   005738                     u8580:
 15378   005738  0E00               	movlw	0
 15379   00573A                     u8590:
 15380   00573A  6E22               	movwf	dtoa@s^0,c
 15381                           
 15382                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 15383   00573C  0102               	movlb	2	; () banked
 15384   00573E  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 15385   005740  EFA6  F02B         	goto	u8600
 15386   005744  EFA4  F02B         	goto	u8601
 15387   005748                     u8601:
 15388   005748  EFAC  F02B         	goto	l988
 15389   00574C                     u8600:
 15390   00574C                     
 15391                           ; BSR set to: 2
 15392   00574C  0E00               	movlw	0
 15393   00574E  6E21               	movwf	(dtoa@p+1)^0,c
 15394   005750  0E01               	movlw	1
 15395   005752  6E20               	movwf	dtoa@p^0,c
 15396   005754  EFB0  F02B         	goto	l990
 15397   005758                     l988:
 15398                           
 15399                           ; BSR set to: 2
 15400   005758  C2FE  F020         	movff	_prec,dtoa@p
 15401   00575C  C2FF  F021         	movff	_prec+1,dtoa@p+1
 15402   005760                     l990:
 15403                           
 15404                           ; BSR set to: 2
 15405                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 15406   005760  C34A  F01E         	movff	_width,dtoa@w
 15407   005764  C34B  F01F         	movff	_width+1,dtoa@w+1
 15408   005768                     
 15409                           ; BSR set to: 2
 15410                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 15411   005768  5022               	movf	dtoa@s^0,w,c
 15412   00576A  B4D8               	btfsc	status,2,c
 15413   00576C  EFBA  F02B         	goto	u8611
 15414   005770  EFBC  F02B         	goto	u8610
 15415   005774                     u8611:
 15416   005774  EFD3  F02B         	goto	l991
 15417   005778                     u8610:
 15418   005778                     
 15419                           ; BSR set to: 2
 15420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 15421   005778  061E               	decf	dtoa@w^0,f,c
 15422   00577A  A0D8               	btfss	status,0,c
 15423   00577C  061F               	decf	(dtoa@w+1)^0,f,c
 15424   00577E                     
 15425                           ; BSR set to: 2
 15426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 15427   00577E  5022               	movf	dtoa@s^0,w,c
 15428   005780  A4D8               	btfss	status,2,c
 15429   005782  EFC5  F02B         	goto	u8621
 15430   005786  EFC7  F02B         	goto	u8620
 15431   00578A                     u8621:
 15432   00578A  EFCD  F02B         	goto	l6674
 15433   00578E                     u8620:
 15434   00578E                     
 15435                           ; BSR set to: 2
 15436   00578E  0E00               	movlw	0
 15437   005790  6E1D               	movwf	(_dtoa$1344+1)^0,c
 15438   005792  0E2B               	movlw	43
 15439   005794  6E1C               	movwf	_dtoa$1344^0,c
 15440   005796  EFD1  F02B         	goto	l6676
 15441   00579A                     l6674:
 15442                           
 15443                           ; BSR set to: 2
 15444   00579A  0E00               	movlw	0
 15445   00579C  6E1D               	movwf	(_dtoa$1344+1)^0,c
 15446   00579E  0E2D               	movlw	45
 15447   0057A0  6E1C               	movwf	_dtoa$1344^0,c
 15448   0057A2                     l6676:
 15449                           
 15450                           ; BSR set to: 2
 15451   0057A2  C01C  F022         	movff	_dtoa$1344,dtoa@s
 15452   0057A6                     l991:
 15453                           
 15454                           ; BSR set to: 2
 15455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 15456   0057A6  0E00               	movlw	0
 15457   0057A8  6E24               	movwf	(dtoa@i+1)^0,c
 15458   0057AA  0E4F               	movlw	79
 15459   0057AC  6E23               	movwf	dtoa@i^0,c
 15460   0057AE                     
 15461                           ; BSR set to: 2
 15462                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 15463   0057AE  0103               	movlb	3	; () banked
 15464   0057B0  6BA9               	clrf	(_dbuf+79)& (0+255),b
 15465                           
 15466                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 15467   0057B2  EF1F  F02C         	goto	l6690
 15468   0057B6                     l6680:
 15469                           
 15470                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 15471   0057B6  0623               	decf	dtoa@i^0,f,c
 15472   0057B8  A0D8               	btfss	status,0,c
 15473   0057BA  0624               	decf	(dtoa@i+1)^0,f,c
 15474   0057BC                     
 15475                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 15476   0057BC  0E5A               	movlw	low _dbuf
 15477   0057BE  2423               	addwf	dtoa@i^0,w,c
 15478   0057C0  6ED9               	movwf	fsr2l,c
 15479   0057C2  0E03               	movlw	high _dbuf
 15480   0057C4  2024               	addwfc	(dtoa@i+1)^0,w,c
 15481   0057C6  6EDA               	movwf	fsr2h,c
 15482   0057C8  C018  F001         	movff	dtoa@d,___almod@dividend
 15483   0057CC  C019  F002         	movff	dtoa@d+1,___almod@dividend+1
 15484   0057D0  C01A  F003         	movff	dtoa@d+2,___almod@dividend+2
 15485   0057D4  C01B  F004         	movff	dtoa@d+3,___almod@dividend+3
 15486   0057D8  0E0A               	movlw	10
 15487   0057DA  6E05               	movwf	___almod@divisor^0,c
 15488   0057DC  0E00               	movlw	0
 15489   0057DE  6E06               	movwf	(___almod@divisor+1)^0,c
 15490   0057E0  0E00               	movlw	0
 15491   0057E2  6E07               	movwf	(___almod@divisor+2)^0,c
 15492   0057E4  0E00               	movlw	0
 15493   0057E6  6E08               	movwf	(___almod@divisor+3)^0,c
 15494   0057E8  EC5B  F031         	call	___almod	;wreg free
 15495   0057EC  C001  F00B         	movff	?___almod,abs@a
 15496   0057F0  C002  F00C         	movff	?___almod+1,abs@a+1
 15497   0057F4  ECBF  F036         	call	_abs	;wreg free
 15498   0057F8  500B               	movf	?_abs^0,w,c
 15499   0057FA  0F30               	addlw	48
 15500   0057FC  6EDF               	movwf	indf2,c
 15501   0057FE                     
 15502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
 15503   0057FE  0620               	decf	dtoa@p^0,f,c
 15504   005800  A0D8               	btfss	status,0,c
 15505   005802  0621               	decf	(dtoa@p+1)^0,f,c
 15506   005804                     
 15507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 15508   005804  061E               	decf	dtoa@w^0,f,c
 15509   005806  A0D8               	btfss	status,0,c
 15510   005808  061F               	decf	(dtoa@w+1)^0,f,c
 15511   00580A                     
 15512                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 15513   00580A  C018  F001         	movff	dtoa@d,___aldiv@dividend
 15514   00580E  C019  F002         	movff	dtoa@d+1,___aldiv@dividend+1
 15515   005812  C01A  F003         	movff	dtoa@d+2,___aldiv@dividend+2
 15516   005816  C01B  F004         	movff	dtoa@d+3,___aldiv@dividend+3
 15517   00581A  0E0A               	movlw	10
 15518   00581C  6E05               	movwf	___aldiv@divisor^0,c
 15519   00581E  0E00               	movlw	0
 15520   005820  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15521   005822  0E00               	movlw	0
 15522   005824  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15523   005826  0E00               	movlw	0
 15524   005828  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15525   00582A  ECD1  F02E         	call	___aldiv	;wreg free
 15526   00582E  C001  F018         	movff	?___aldiv,dtoa@d
 15527   005832  C002  F019         	movff	?___aldiv+1,dtoa@d+1
 15528   005836  C003  F01A         	movff	?___aldiv+2,dtoa@d+2
 15529   00583A  C004  F01B         	movff	?___aldiv+3,dtoa@d+3
 15530   00583E                     l6690:
 15531                           
 15532                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 15533   00583E  BE24               	btfsc	(dtoa@i+1)^0,7,c
 15534   005840  EF2A  F02C         	goto	u8631
 15535   005844  5024               	movf	(dtoa@i+1)^0,w,c
 15536   005846  E108               	bnz	u8630
 15537   005848  0423               	decf	dtoa@i^0,w,c
 15538   00584A  A0D8               	btfss	status,0,c
 15539   00584C  EF2A  F02C         	goto	u8631
 15540   005850  EF2C  F02C         	goto	u8630
 15541   005854                     u8631:
 15542   005854  EF44  F02C         	goto	l6696
 15543   005858                     u8630:
 15544   005858  5018               	movf	dtoa@d^0,w,c
 15545   00585A  1019               	iorwf	(dtoa@d+1)^0,w,c
 15546   00585C  101A               	iorwf	(dtoa@d+2)^0,w,c
 15547   00585E  101B               	iorwf	(dtoa@d+3)^0,w,c
 15548   005860  A4D8               	btfss	status,2,c
 15549   005862  EF35  F02C         	goto	u8641
 15550   005866  EF37  F02C         	goto	u8640
 15551   00586A                     u8641:
 15552   00586A  EFDB  F02B         	goto	l6680
 15553   00586E                     u8640:
 15554   00586E  BE21               	btfsc	(dtoa@p+1)^0,7,c
 15555   005870  EF44  F02C         	goto	u8650
 15556   005874  5021               	movf	(dtoa@p+1)^0,w,c
 15557   005876  E106               	bnz	u8651
 15558   005878  0420               	decf	dtoa@p^0,w,c
 15559   00587A  B0D8               	btfsc	status,0,c
 15560   00587C  EF42  F02C         	goto	u8651
 15561   005880  EF44  F02C         	goto	u8650
 15562   005884                     u8651:
 15563   005884  EFDB  F02B         	goto	l6680
 15564   005888                     u8650:
 15565   005888                     l6696:
 15566                           
 15567                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 15568   005888  5022               	movf	dtoa@s^0,w,c
 15569   00588A  B4D8               	btfsc	status,2,c
 15570   00588C  EF4A  F02C         	goto	u8661
 15571   005890  EF4C  F02C         	goto	u8660
 15572   005894                     u8661:
 15573   005894  EF57  F02C         	goto	l6702
 15574   005898                     u8660:
 15575   005898                     
 15576                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 15577   005898  0623               	decf	dtoa@i^0,f,c
 15578   00589A  A0D8               	btfss	status,0,c
 15579   00589C  0624               	decf	(dtoa@i+1)^0,f,c
 15580   00589E                     
 15581                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 15582   00589E  0E5A               	movlw	low _dbuf
 15583   0058A0  2423               	addwf	dtoa@i^0,w,c
 15584   0058A2  6ED9               	movwf	fsr2l,c
 15585   0058A4  0E03               	movlw	high _dbuf
 15586   0058A6  2024               	addwfc	(dtoa@i+1)^0,w,c
 15587   0058A8  6EDA               	movwf	fsr2h,c
 15588   0058AA  C022  FFDF         	movff	dtoa@s,indf2
 15589   0058AE                     l6702:
 15590                           
 15591                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 15592   0058AE  C017  F00F         	movff	dtoa@fp,pad@fp
 15593   0058B2  0E5A               	movlw	low _dbuf
 15594   0058B4  2423               	addwf	dtoa@i^0,w,c
 15595   0058B6  6E10               	movwf	pad@buf^0,c
 15596   0058B8  0E03               	movlw	high _dbuf
 15597   0058BA  2024               	addwfc	(dtoa@i+1)^0,w,c
 15598   0058BC  6E11               	movwf	(pad@buf+1)^0,c
 15599   0058BE  C01E  F012         	movff	dtoa@w,pad@p
 15600   0058C2  C01F  F013         	movff	dtoa@w+1,pad@p+1
 15601   0058C6  EC32  F035         	call	_pad	;wreg free
 15602   0058CA  0012               	return		;funcret
 15603   0058CC                     __end_of_dtoa:
 15604                           	callstack 0
 15605                           
 15606 ;; *************** function _pad *****************
 15607 ;; Defined at:
 15608 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 15609 ;; Parameters:    Size  Location     Type
 15610 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
 15611 ;;		 -> sprintf@f(11), 
 15612 ;;  buf             2   15[COMRAM] PTR unsigned char 
 15613 ;;		 -> dbuf(80), 
 15614 ;;  p               2   17[COMRAM] int 
 15615 ;; Auto vars:     Size  Location     Type
 15616 ;;  i               2   20[COMRAM] int 
 15617 ;; Return value:  Size  Location     Type
 15618 ;;                  1    wreg      void 
 15619 ;; Registers used:
 15620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15621 ;; Tracked objects:
 15622 ;;		On entry : 0/0
 15623 ;;		On exit  : 0/0
 15624 ;;		Unchanged: 0/0
 15625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15626 ;;      Params:         5       0       0       0       0       0       0       0       0
 15627 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15628 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15629 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15630 ;;Total ram usage:        8 bytes
 15631 ;; Hardware stack levels used: 1
 15632 ;; Hardware stack levels required when called: 4
 15633 ;; This function calls:
 15634 ;;		_fputc
 15635 ;;		_fputs
 15636 ;; This function is called by:
 15637 ;;		_dtoa
 15638 ;;		_efgtoa
 15639 ;;		_utoa
 15640 ;; This function uses a non-reentrant model
 15641 ;;
 15642                           
 15643                           	psect	text39
 15644   006A64                     __ptext39:
 15645                           	callstack 0
 15646   006A64                     _pad:
 15647                           	callstack 21
 15648   006A64                     
 15649                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 15650   006A64  BE13               	btfsc	(pad@p+1)^0,7,c
 15651   006A66  EF39  F035         	goto	u8360
 15652   006A6A  EF37  F035         	goto	u8361
 15653   006A6E                     u8361:
 15654   006A6E  EF3D  F035         	goto	l980
 15655   006A72                     u8360:
 15656   006A72                     
 15657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 15658   006A72  0E00               	movlw	0
 15659   006A74  6E13               	movwf	(pad@p+1)^0,c
 15660   006A76  0E00               	movlw	0
 15661   006A78  6E12               	movwf	pad@p^0,c
 15662   006A7A                     l980:
 15663                           
 15664                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 15665   006A7A  0E00               	movlw	0
 15666   006A7C  6E16               	movwf	(pad@i+1)^0,c
 15667   006A7E  0E00               	movlw	0
 15668   006A80  6E15               	movwf	pad@i^0,c
 15669                           
 15670                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 15671   006A82  EF4D  F035         	goto	l6584
 15672   006A86                     l6580:
 15673                           
 15674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 15675   006A86  0E00               	movlw	0
 15676   006A88  6E02               	movwf	(fputc@c+1)^0,c
 15677   006A8A  0E20               	movlw	32
 15678   006A8C  6E01               	movwf	fputc@c^0,c
 15679   006A8E  C00F  F003         	movff	pad@fp,fputc@fp
 15680   006A92  ECB8  F032         	call	_fputc	;wreg free
 15681   006A96                     
 15682                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 15683   006A96  4A15               	infsnz	pad@i^0,f,c
 15684   006A98  2A16               	incf	(pad@i+1)^0,f,c
 15685   006A9A                     l6584:
 15686                           
 15687                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 15688   006A9A  5012               	movf	pad@p^0,w,c
 15689   006A9C  5C15               	subwf	pad@i^0,w,c
 15690   006A9E  5016               	movf	(pad@i+1)^0,w,c
 15691   006AA0  0A80               	xorlw	128
 15692   006AA2  6E14               	movwf	??_pad^0,c
 15693   006AA4  5013               	movf	(pad@p+1)^0,w,c
 15694   006AA6  0A80               	xorlw	128
 15695   006AA8  5814               	subwfb	??_pad^0,w,c
 15696   006AAA  A0D8               	btfss	status,0,c
 15697   006AAC  EF5A  F035         	goto	u8371
 15698   006AB0  EF5C  F035         	goto	u8370
 15699   006AB4                     u8371:
 15700   006AB4  EF43  F035         	goto	l6580
 15701   006AB8                     u8370:
 15702   006AB8                     
 15703                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 15704   006AB8  C010  F009         	movff	pad@buf,fputs@s
 15705   006ABC  C011  F00A         	movff	pad@buf+1,fputs@s+1
 15706   006AC0  C00F  F00B         	movff	pad@fp,fputs@fp
 15707   006AC4  EC67  F036         	call	_fputs	;wreg free
 15708   006AC8  0012               	return		;funcret
 15709   006ACA                     __end_of_pad:
 15710                           	callstack 0
 15711                           
 15712 ;; *************** function _fputs *****************
 15713 ;; Defined at:
 15714 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 15715 ;; Parameters:    Size  Location     Type
 15716 ;;  s               2    8[COMRAM] PTR const unsigned char 
 15717 ;;		 -> dbuf(80), 
 15718 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
 15719 ;;		 -> sprintf@f(11), 
 15720 ;; Auto vars:     Size  Location     Type
 15721 ;;  i               2   12[COMRAM] int 
 15722 ;;  c               1   11[COMRAM] unsigned char 
 15723 ;; Return value:  Size  Location     Type
 15724 ;;                  2    8[COMRAM] int 
 15725 ;; Registers used:
 15726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15727 ;; Tracked objects:
 15728 ;;		On entry : 0/0
 15729 ;;		On exit  : 0/0
 15730 ;;		Unchanged: 0/0
 15731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15732 ;;      Params:         3       0       0       0       0       0       0       0       0
 15733 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15734 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15735 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15736 ;;Total ram usage:        6 bytes
 15737 ;; Hardware stack levels used: 1
 15738 ;; Hardware stack levels required when called: 3
 15739 ;; This function calls:
 15740 ;;		_fputc
 15741 ;; This function is called by:
 15742 ;;		_pad
 15743 ;; This function uses a non-reentrant model
 15744 ;;
 15745                           
 15746                           	psect	text40
 15747   006CCE                     __ptext40:
 15748                           	callstack 0
 15749   006CCE                     _fputs:
 15750                           	callstack 21
 15751   006CCE  0E00               	movlw	0
 15752   006CD0  6E0E               	movwf	(fputs@i+1)^0,c
 15753   006CD2  0E00               	movlw	0
 15754   006CD4  6E0D               	movwf	fputs@i^0,c
 15755   006CD6  EF76  F036         	goto	l6092
 15756   006CDA                     l6088:
 15757   006CDA  C00C  F001         	movff	fputs@c,fputc@c
 15758   006CDE  6A02               	clrf	(fputc@c+1)^0,c
 15759   006CE0  C00B  F003         	movff	fputs@fp,fputc@fp
 15760   006CE4  ECB8  F032         	call	_fputc	;wreg free
 15761   006CE8  4A0D               	infsnz	fputs@i^0,f,c
 15762   006CEA  2A0E               	incf	(fputs@i+1)^0,f,c
 15763   006CEC                     l6092:
 15764   006CEC  500D               	movf	fputs@i^0,w,c
 15765   006CEE  2409               	addwf	fputs@s^0,w,c
 15766   006CF0  6ED9               	movwf	fsr2l,c
 15767   006CF2  500E               	movf	(fputs@i+1)^0,w,c
 15768   006CF4  200A               	addwfc	(fputs@s+1)^0,w,c
 15769   006CF6  6EDA               	movwf	fsr2h,c
 15770   006CF8  50DF               	movf	indf2,w,c
 15771   006CFA  6E0C               	movwf	fputs@c^0,c
 15772   006CFC  500C               	movf	fputs@c^0,w,c
 15773   006CFE  A4D8               	btfss	status,2,c
 15774   006D00  EF84  F036         	goto	u7581
 15775   006D04  EF86  F036         	goto	u7580
 15776   006D08                     u7581:
 15777   006D08  EF6D  F036         	goto	l6088
 15778   006D0C                     u7580:
 15779   006D0C  0012               	return		;funcret
 15780   006D0E                     __end_of_fputs:
 15781                           	callstack 0
 15782                           
 15783 ;; *************** function _fputc *****************
 15784 ;; Defined at:
 15785 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 15786 ;; Parameters:    Size  Location     Type
 15787 ;;  c               2    0[COMRAM] int 
 15788 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
 15789 ;;		 -> sprintf@f(11), 
 15790 ;; Auto vars:     Size  Location     Type
 15791 ;;		None
 15792 ;; Return value:  Size  Location     Type
 15793 ;;                  2    0[COMRAM] int 
 15794 ;; Registers used:
 15795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15796 ;; Tracked objects:
 15797 ;;		On entry : 0/0
 15798 ;;		On exit  : 0/0
 15799 ;;		Unchanged: 0/0
 15800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15801 ;;      Params:         3       0       0       0       0       0       0       0       0
 15802 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15803 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15804 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15805 ;;Total ram usage:        8 bytes
 15806 ;; Hardware stack levels used: 1
 15807 ;; Hardware stack levels required when called: 2
 15808 ;; This function calls:
 15809 ;;		_putch
 15810 ;; This function is called by:
 15811 ;;		_pad
 15812 ;;		_stoa
 15813 ;;		_vfpfcnvrt
 15814 ;;		_fputs
 15815 ;; This function uses a non-reentrant model
 15816 ;;
 15817                           
 15818                           	psect	text41
 15819   006570                     __ptext41:
 15820                           	callstack 0
 15821   006570                     _fputc:
 15822                           	callstack 21
 15823   006570  5003               	movf	fputc@fp^0,w,c
 15824   006572  B4D8               	btfsc	status,2,c
 15825   006574  EFBE  F032         	goto	u7151
 15826   006578  EFC0  F032         	goto	u7150
 15827   00657C                     u7151:
 15828   00657C  EFC8  F032         	goto	l5882
 15829   006580                     u7150:
 15830   006580  5003               	movf	fputc@fp^0,w,c
 15831   006582  A4D8               	btfss	status,2,c
 15832   006584  EFC6  F032         	goto	u7161
 15833   006588  EFC8  F032         	goto	u7160
 15834   00658C                     u7161:
 15835   00658C  EFCD  F032         	goto	l5884
 15836   006590                     u7160:
 15837   006590                     l5882:
 15838   006590  5001               	movf	fputc@c^0,w,c
 15839   006592  EC0E  F037         	call	_putch
 15840   006596  EF14  F033         	goto	l1197
 15841   00659A                     l5884:
 15842   00659A  5003               	movf	fputc@fp^0,w,c
 15843   00659C  6ED9               	movwf	fsr2l,c
 15844   00659E  6ADA               	clrf	fsr2h,c
 15845   0065A0  0E09               	movlw	9
 15846   0065A2  26D9               	addwf	fsr2l,f,c
 15847   0065A4  50DE               	movf	postinc2,w,c
 15848   0065A6  10DE               	iorwf	postinc2,w,c
 15849   0065A8  B4D8               	btfsc	status,2,c
 15850   0065AA  EFD9  F032         	goto	u7171
 15851   0065AE  EFDB  F032         	goto	u7170
 15852   0065B2                     u7171:
 15853   0065B2  EFF4  F032         	goto	l5888
 15854   0065B6                     u7170:
 15855   0065B6  5003               	movf	fputc@fp^0,w,c
 15856   0065B8  6ED9               	movwf	fsr2l,c
 15857   0065BA  6ADA               	clrf	fsr2h,c
 15858   0065BC  0E09               	movlw	9
 15859   0065BE  26D9               	addwf	fsr2l,f,c
 15860   0065C0  5003               	movf	fputc@fp^0,w,c
 15861   0065C2  6EE1               	movwf	fsr1l,c
 15862   0065C4  6AE2               	clrf	fsr1h,c
 15863   0065C6  0E02               	movlw	2
 15864   0065C8  26E1               	addwf	fsr1l,f,c
 15865   0065CA  50DE               	movf	postinc2,w,c
 15866   0065CC  5CE6               	subwf	postinc1,w,c
 15867   0065CE  50E6               	movf	postinc1,w,c
 15868   0065D0  0A80               	xorlw	128
 15869   0065D2  6E08               	movwf	(??_fputc+4)^0,c
 15870   0065D4  50DE               	movf	postinc2,w,c
 15871   0065D6  0A80               	xorlw	128
 15872   0065D8  5808               	subwfb	(??_fputc+4)^0,w,c
 15873   0065DA  B0D8               	btfsc	status,0,c
 15874   0065DC  EFF2  F032         	goto	u7181
 15875   0065E0  EFF4  F032         	goto	u7180
 15876   0065E4                     u7181:
 15877   0065E4  EF14  F033         	goto	l1197
 15878   0065E8                     u7180:
 15879   0065E8                     l5888:
 15880   0065E8  5003               	movf	fputc@fp^0,w,c
 15881   0065EA  6ED9               	movwf	fsr2l,c
 15882   0065EC  6ADA               	clrf	fsr2h,c
 15883   0065EE  0E02               	movlw	2
 15884   0065F0  26D9               	addwf	fsr2l,f,c
 15885   0065F2  CFDE F004          	movff	postinc2,??_fputc
 15886   0065F6  CFDD F005          	movff	postdec2,??_fputc+1
 15887   0065FA  5003               	movf	fputc@fp^0,w,c
 15888   0065FC  6ED9               	movwf	fsr2l,c
 15889   0065FE  6ADA               	clrf	fsr2h,c
 15890   006600  CFDE F006          	movff	postinc2,??_fputc+2
 15891   006604  CFDD F007          	movff	postdec2,??_fputc+3
 15892   006608  5004               	movf	??_fputc^0,w,c
 15893   00660A  2406               	addwf	(??_fputc+2)^0,w,c
 15894   00660C  6ED9               	movwf	fsr2l,c
 15895   00660E  5005               	movf	(??_fputc+1)^0,w,c
 15896   006610  2007               	addwfc	(??_fputc+3)^0,w,c
 15897   006612  6EDA               	movwf	fsr2h,c
 15898   006614  C001  FFDF         	movff	fputc@c,indf2
 15899   006618  5003               	movf	fputc@fp^0,w,c
 15900   00661A  6ED9               	movwf	fsr2l,c
 15901   00661C  6ADA               	clrf	fsr2h,c
 15902   00661E  0E02               	movlw	2
 15903   006620  26D9               	addwf	fsr2l,f,c
 15904   006622  2ADE               	incf	postinc2,f,c
 15905   006624  0E00               	movlw	0
 15906   006626  22DD               	addwfc	postdec2,f,c
 15907   006628                     l1197:
 15908   006628  0012               	return		;funcret
 15909   00662A                     __end_of_fputc:
 15910                           	callstack 0
 15911                           
 15912 ;; *************** function _putch *****************
 15913 ;; Defined at:
 15914 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 15915 ;; Parameters:    Size  Location     Type
 15916 ;;  c               1    wreg     unsigned char 
 15917 ;; Auto vars:     Size  Location     Type
 15918 ;;  c               1    0[COMRAM] unsigned char 
 15919 ;; Return value:  Size  Location     Type
 15920 ;;                  1    wreg      void 
 15921 ;; Registers used:
 15922 ;;		wreg
 15923 ;; Tracked objects:
 15924 ;;		On entry : 0/0
 15925 ;;		On exit  : 0/0
 15926 ;;		Unchanged: 0/0
 15927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15928 ;;      Params:         0       0       0       0       0       0       0       0       0
 15929 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15930 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15931 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15932 ;;Total ram usage:        0 bytes
 15933 ;; Hardware stack levels used: 1
 15934 ;; Hardware stack levels required when called: 1
 15935 ;; This function calls:
 15936 ;;		Nothing
 15937 ;; This function is called by:
 15938 ;;		_fputc
 15939 ;; This function uses a non-reentrant model
 15940 ;;
 15941                           
 15942                           	psect	text42
 15943   006E1C                     __ptext42:
 15944                           	callstack 0
 15945   006E1C                     _putch:
 15946                           	callstack 21
 15947   006E1C  0012               	return		;funcret
 15948   006E1E                     __end_of_putch:
 15949                           	callstack 0
 15950                           
 15951 ;; *************** function _abs *****************
 15952 ;; Defined at:
 15953 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 15954 ;; Parameters:    Size  Location     Type
 15955 ;;  a               2   10[COMRAM] int 
 15956 ;; Auto vars:     Size  Location     Type
 15957 ;;		None
 15958 ;; Return value:  Size  Location     Type
 15959 ;;                  2   10[COMRAM] int 
 15960 ;; Registers used:
 15961 ;;		wreg, status,2, status,0
 15962 ;; Tracked objects:
 15963 ;;		On entry : 0/0
 15964 ;;		On exit  : 0/0
 15965 ;;		Unchanged: 0/0
 15966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15967 ;;      Params:         2       0       0       0       0       0       0       0       0
 15968 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15969 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15970 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15971 ;;Total ram usage:        4 bytes
 15972 ;; Hardware stack levels used: 1
 15973 ;; Hardware stack levels required when called: 1
 15974 ;; This function calls:
 15975 ;;		Nothing
 15976 ;; This function is called by:
 15977 ;;		_dtoa
 15978 ;; This function uses a non-reentrant model
 15979 ;;
 15980                           
 15981                           	psect	text43
 15982   006D7E                     __ptext43:
 15983                           	callstack 0
 15984   006D7E                     _abs:
 15985                           	callstack 24
 15986   006D7E  BE0C               	btfsc	(abs@a+1)^0,7,c
 15987   006D80  EFC4  F036         	goto	u8381
 15988   006D84  EFC6  F036         	goto	u8380
 15989   006D88                     u8381:
 15990   006D88  EFCC  F036         	goto	l1156
 15991   006D8C                     u8380:
 15992   006D8C  C00B  F00B         	movff	abs@a,?_abs
 15993   006D90  C00C  F00C         	movff	abs@a+1,?_abs+1
 15994   006D94  EFD8  F036         	goto	l1159
 15995   006D98                     l1156:
 15996   006D98  C00B  F00D         	movff	abs@a,??_abs
 15997   006D9C  C00C  F00E         	movff	abs@a+1,??_abs+1
 15998   006DA0  1E0D               	comf	??_abs^0,f,c
 15999   006DA2  1E0E               	comf	(??_abs+1)^0,f,c
 16000   006DA4  4A0D               	infsnz	??_abs^0,f,c
 16001   006DA6  2A0E               	incf	(??_abs+1)^0,f,c
 16002   006DA8  C00D  F00B         	movff	??_abs,?_abs
 16003   006DAC  C00E  F00C         	movff	??_abs+1,?_abs+1
 16004   006DB0                     l1159:
 16005   006DB0  0012               	return		;funcret
 16006   006DB2                     __end_of_abs:
 16007                           	callstack 0
 16008                           
 16009 ;; *************** function ___almod *****************
 16010 ;; Defined at:
 16011 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
 16012 ;; Parameters:    Size  Location     Type
 16013 ;;  dividend        4    0[COMRAM] long 
 16014 ;;  divisor         4    4[COMRAM] long 
 16015 ;; Auto vars:     Size  Location     Type
 16016 ;;  sign            1    9[COMRAM] unsigned char 
 16017 ;;  counter         1    8[COMRAM] unsigned char 
 16018 ;; Return value:  Size  Location     Type
 16019 ;;                  4    0[COMRAM] long 
 16020 ;; Registers used:
 16021 ;;		wreg, status,2, status,0
 16022 ;; Tracked objects:
 16023 ;;		On entry : 0/0
 16024 ;;		On exit  : 0/0
 16025 ;;		Unchanged: 0/0
 16026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16027 ;;      Params:         8       0       0       0       0       0       0       0       0
 16028 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16029 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16030 ;;      Totals:        10       0       0       0       0       0       0       0       0
 16031 ;;Total ram usage:       10 bytes
 16032 ;; Hardware stack levels used: 1
 16033 ;; Hardware stack levels required when called: 1
 16034 ;; This function calls:
 16035 ;;		Nothing
 16036 ;; This function is called by:
 16037 ;;		_dtoa
 16038 ;; This function uses a non-reentrant model
 16039 ;;
 16040                           
 16041                           	psect	text44
 16042   0062B6                     __ptext44:
 16043                           	callstack 0
 16044   0062B6                     ___almod:
 16045                           	callstack 24
 16046   0062B6  6A0A               	clrf	___almod@sign^0,c
 16047   0062B8  BE04               	btfsc	(___almod@dividend+3)^0,7,c
 16048   0062BA  EF63  F031         	goto	u7690
 16049   0062BE  EF61  F031         	goto	u7691
 16050   0062C2                     u7691:
 16051   0062C2  EF6D  F031         	goto	l6172
 16052   0062C6                     u7690:
 16053   0062C6  1E04               	comf	(___almod@dividend+3)^0,f,c
 16054   0062C8  1E03               	comf	(___almod@dividend+2)^0,f,c
 16055   0062CA  1E02               	comf	(___almod@dividend+1)^0,f,c
 16056   0062CC  6C01               	negf	___almod@dividend^0,c
 16057   0062CE  0E00               	movlw	0
 16058   0062D0  2202               	addwfc	(___almod@dividend+1)^0,f,c
 16059   0062D2  2203               	addwfc	(___almod@dividend+2)^0,f,c
 16060   0062D4  2204               	addwfc	(___almod@dividend+3)^0,f,c
 16061   0062D6  0E01               	movlw	1
 16062   0062D8  6E0A               	movwf	___almod@sign^0,c
 16063   0062DA                     l6172:
 16064   0062DA  BE08               	btfsc	(___almod@divisor+3)^0,7,c
 16065   0062DC  EF74  F031         	goto	u7700
 16066   0062E0  EF72  F031         	goto	u7701
 16067   0062E4                     u7701:
 16068   0062E4  EF7C  F031         	goto	l6176
 16069   0062E8                     u7700:
 16070   0062E8  1E08               	comf	(___almod@divisor+3)^0,f,c
 16071   0062EA  1E07               	comf	(___almod@divisor+2)^0,f,c
 16072   0062EC  1E06               	comf	(___almod@divisor+1)^0,f,c
 16073   0062EE  6C05               	negf	___almod@divisor^0,c
 16074   0062F0  0E00               	movlw	0
 16075   0062F2  2206               	addwfc	(___almod@divisor+1)^0,f,c
 16076   0062F4  2207               	addwfc	(___almod@divisor+2)^0,f,c
 16077   0062F6  2208               	addwfc	(___almod@divisor+3)^0,f,c
 16078   0062F8                     l6176:
 16079   0062F8  5005               	movf	___almod@divisor^0,w,c
 16080   0062FA  1006               	iorwf	(___almod@divisor+1)^0,w,c
 16081   0062FC  1007               	iorwf	(___almod@divisor+2)^0,w,c
 16082   0062FE  1008               	iorwf	(___almod@divisor+3)^0,w,c
 16083   006300  B4D8               	btfsc	status,2,c
 16084   006302  EF85  F031         	goto	u7711
 16085   006306  EF87  F031         	goto	u7710
 16086   00630A                     u7711:
 16087   00630A  EFB7  F031         	goto	l6192
 16088   00630E                     u7710:
 16089   00630E  0E01               	movlw	1
 16090   006310  6E09               	movwf	___almod@counter^0,c
 16091   006312  EF91  F031         	goto	l6182
 16092   006316                     l6180:
 16093   006316  90D8               	bcf	status,0,c
 16094   006318  3605               	rlcf	___almod@divisor^0,f,c
 16095   00631A  3606               	rlcf	(___almod@divisor+1)^0,f,c
 16096   00631C  3607               	rlcf	(___almod@divisor+2)^0,f,c
 16097   00631E  3608               	rlcf	(___almod@divisor+3)^0,f,c
 16098   006320  2A09               	incf	___almod@counter^0,f,c
 16099   006322                     l6182:
 16100   006322  AE08               	btfss	(___almod@divisor+3)^0,7,c
 16101   006324  EF96  F031         	goto	u7721
 16102   006328  EF98  F031         	goto	u7720
 16103   00632C                     u7721:
 16104   00632C  EF8B  F031         	goto	l6180
 16105   006330                     u7720:
 16106   006330                     l6184:
 16107   006330  5005               	movf	___almod@divisor^0,w,c
 16108   006332  5C01               	subwf	___almod@dividend^0,w,c
 16109   006334  5006               	movf	(___almod@divisor+1)^0,w,c
 16110   006336  5802               	subwfb	(___almod@dividend+1)^0,w,c
 16111   006338  5007               	movf	(___almod@divisor+2)^0,w,c
 16112   00633A  5803               	subwfb	(___almod@dividend+2)^0,w,c
 16113   00633C  5008               	movf	(___almod@divisor+3)^0,w,c
 16114   00633E  5804               	subwfb	(___almod@dividend+3)^0,w,c
 16115   006340  A0D8               	btfss	status,0,c
 16116   006342  EFA5  F031         	goto	u7731
 16117   006346  EFA7  F031         	goto	u7730
 16118   00634A                     u7731:
 16119   00634A  EFAF  F031         	goto	l6188
 16120   00634E                     u7730:
 16121   00634E  5005               	movf	___almod@divisor^0,w,c
 16122   006350  5E01               	subwf	___almod@dividend^0,f,c
 16123   006352  5006               	movf	(___almod@divisor+1)^0,w,c
 16124   006354  5A02               	subwfb	(___almod@dividend+1)^0,f,c
 16125   006356  5007               	movf	(___almod@divisor+2)^0,w,c
 16126   006358  5A03               	subwfb	(___almod@dividend+2)^0,f,c
 16127   00635A  5008               	movf	(___almod@divisor+3)^0,w,c
 16128   00635C  5A04               	subwfb	(___almod@dividend+3)^0,f,c
 16129   00635E                     l6188:
 16130   00635E  90D8               	bcf	status,0,c
 16131   006360  3208               	rrcf	(___almod@divisor+3)^0,f,c
 16132   006362  3207               	rrcf	(___almod@divisor+2)^0,f,c
 16133   006364  3206               	rrcf	(___almod@divisor+1)^0,f,c
 16134   006366  3205               	rrcf	___almod@divisor^0,f,c
 16135   006368  2E09               	decfsz	___almod@counter^0,f,c
 16136   00636A  EF98  F031         	goto	l6184
 16137   00636E                     l6192:
 16138   00636E  500A               	movf	___almod@sign^0,w,c
 16139   006370  B4D8               	btfsc	status,2,c
 16140   006372  EFBD  F031         	goto	u7741
 16141   006376  EFBF  F031         	goto	u7740
 16142   00637A                     u7741:
 16143   00637A  EFC7  F031         	goto	l6196
 16144   00637E                     u7740:
 16145   00637E  1E04               	comf	(___almod@dividend+3)^0,f,c
 16146   006380  1E03               	comf	(___almod@dividend+2)^0,f,c
 16147   006382  1E02               	comf	(___almod@dividend+1)^0,f,c
 16148   006384  6C01               	negf	___almod@dividend^0,c
 16149   006386  0E00               	movlw	0
 16150   006388  2202               	addwfc	(___almod@dividend+1)^0,f,c
 16151   00638A  2203               	addwfc	(___almod@dividend+2)^0,f,c
 16152   00638C  2204               	addwfc	(___almod@dividend+3)^0,f,c
 16153   00638E                     l6196:
 16154   00638E  C001  F001         	movff	___almod@dividend,?___almod
 16155   006392  C002  F002         	movff	___almod@dividend+1,?___almod+1
 16156   006396  C003  F003         	movff	___almod@dividend+2,?___almod+2
 16157   00639A  C004  F004         	movff	___almod@dividend+3,?___almod+3
 16158   00639E  0012               	return		;funcret
 16159   0063A0                     __end_of___almod:
 16160                           	callstack 0
 16161                           
 16162 ;; *************** function ___aldiv *****************
 16163 ;; Defined at:
 16164 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
 16165 ;; Parameters:    Size  Location     Type
 16166 ;;  dividend        4    0[COMRAM] long 
 16167 ;;  divisor         4    4[COMRAM] long 
 16168 ;; Auto vars:     Size  Location     Type
 16169 ;;  quotient        4   10[COMRAM] long 
 16170 ;;  sign            1    9[COMRAM] unsigned char 
 16171 ;;  counter         1    8[COMRAM] unsigned char 
 16172 ;; Return value:  Size  Location     Type
 16173 ;;                  4    0[COMRAM] long 
 16174 ;; Registers used:
 16175 ;;		wreg, status,2, status,0
 16176 ;; Tracked objects:
 16177 ;;		On entry : 0/0
 16178 ;;		On exit  : 0/0
 16179 ;;		Unchanged: 0/0
 16180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16181 ;;      Params:         8       0       0       0       0       0       0       0       0
 16182 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16183 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16184 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16185 ;;Total ram usage:       14 bytes
 16186 ;; Hardware stack levels used: 1
 16187 ;; Hardware stack levels required when called: 1
 16188 ;; This function calls:
 16189 ;;		Nothing
 16190 ;; This function is called by:
 16191 ;;		_dtoa
 16192 ;; This function uses a non-reentrant model
 16193 ;;
 16194                           
 16195                           	psect	text45
 16196   005DA2                     __ptext45:
 16197                           	callstack 0
 16198   005DA2                     ___aldiv:
 16199                           	callstack 24
 16200   005DA2  6A0A               	clrf	___aldiv@sign^0,c
 16201   005DA4  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 16202   005DA6  EFD9  F02E         	goto	u7630
 16203   005DAA  EFD7  F02E         	goto	u7631
 16204   005DAE                     u7631:
 16205   005DAE  EFE3  F02E         	goto	l6128
 16206   005DB2                     u7630:
 16207   005DB2  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 16208   005DB4  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 16209   005DB6  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 16210   005DB8  6C05               	negf	___aldiv@divisor^0,c
 16211   005DBA  0E00               	movlw	0
 16212   005DBC  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 16213   005DBE  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 16214   005DC0  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 16215   005DC2  0E01               	movlw	1
 16216   005DC4  6E0A               	movwf	___aldiv@sign^0,c
 16217   005DC6                     l6128:
 16218   005DC6  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 16219   005DC8  EFEA  F02E         	goto	u7640
 16220   005DCC  EFE8  F02E         	goto	u7641
 16221   005DD0                     u7641:
 16222   005DD0  EFF4  F02E         	goto	l6134
 16223   005DD4                     u7640:
 16224   005DD4  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 16225   005DD6  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 16226   005DD8  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 16227   005DDA  6C01               	negf	___aldiv@dividend^0,c
 16228   005DDC  0E00               	movlw	0
 16229   005DDE  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 16230   005DE0  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 16231   005DE2  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 16232   005DE4  0E01               	movlw	1
 16233   005DE6  1A0A               	xorwf	___aldiv@sign^0,f,c
 16234   005DE8                     l6134:
 16235   005DE8  0E00               	movlw	0
 16236   005DEA  6E0B               	movwf	___aldiv@quotient^0,c
 16237   005DEC  0E00               	movlw	0
 16238   005DEE  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 16239   005DF0  0E00               	movlw	0
 16240   005DF2  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 16241   005DF4  0E00               	movlw	0
 16242   005DF6  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 16243   005DF8  5005               	movf	___aldiv@divisor^0,w,c
 16244   005DFA  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 16245   005DFC  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 16246   005DFE  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 16247   005E00  B4D8               	btfsc	status,2,c
 16248   005E02  EF05  F02F         	goto	u7651
 16249   005E06  EF07  F02F         	goto	u7650
 16250   005E0A                     u7651:
 16251   005E0A  EF3D  F02F         	goto	l6156
 16252   005E0E                     u7650:
 16253   005E0E  0E01               	movlw	1
 16254   005E10  6E09               	movwf	___aldiv@counter^0,c
 16255   005E12  EF11  F02F         	goto	l6142
 16256   005E16                     l6140:
 16257   005E16  90D8               	bcf	status,0,c
 16258   005E18  3605               	rlcf	___aldiv@divisor^0,f,c
 16259   005E1A  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 16260   005E1C  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 16261   005E1E  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 16262   005E20  2A09               	incf	___aldiv@counter^0,f,c
 16263   005E22                     l6142:
 16264   005E22  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 16265   005E24  EF16  F02F         	goto	u7661
 16266   005E28  EF18  F02F         	goto	u7660
 16267   005E2C                     u7661:
 16268   005E2C  EF0B  F02F         	goto	l6140
 16269   005E30                     u7660:
 16270   005E30                     l6144:
 16271   005E30  90D8               	bcf	status,0,c
 16272   005E32  360B               	rlcf	___aldiv@quotient^0,f,c
 16273   005E34  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 16274   005E36  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 16275   005E38  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 16276   005E3A  5005               	movf	___aldiv@divisor^0,w,c
 16277   005E3C  5C01               	subwf	___aldiv@dividend^0,w,c
 16278   005E3E  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16279   005E40  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 16280   005E42  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16281   005E44  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 16282   005E46  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16283   005E48  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 16284   005E4A  A0D8               	btfss	status,0,c
 16285   005E4C  EF2A  F02F         	goto	u7671
 16286   005E50  EF2C  F02F         	goto	u7670
 16287   005E54                     u7671:
 16288   005E54  EF35  F02F         	goto	l6152
 16289   005E58                     u7670:
 16290   005E58  5005               	movf	___aldiv@divisor^0,w,c
 16291   005E5A  5E01               	subwf	___aldiv@dividend^0,f,c
 16292   005E5C  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16293   005E5E  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 16294   005E60  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16295   005E62  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 16296   005E64  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16297   005E66  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 16298   005E68  800B               	bsf	___aldiv@quotient^0,0,c
 16299   005E6A                     l6152:
 16300   005E6A  90D8               	bcf	status,0,c
 16301   005E6C  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 16302   005E6E  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 16303   005E70  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 16304   005E72  3205               	rrcf	___aldiv@divisor^0,f,c
 16305   005E74  2E09               	decfsz	___aldiv@counter^0,f,c
 16306   005E76  EF18  F02F         	goto	l6144
 16307   005E7A                     l6156:
 16308   005E7A  500A               	movf	___aldiv@sign^0,w,c
 16309   005E7C  B4D8               	btfsc	status,2,c
 16310   005E7E  EF43  F02F         	goto	u7681
 16311   005E82  EF45  F02F         	goto	u7680
 16312   005E86                     u7681:
 16313   005E86  EF4D  F02F         	goto	l6160
 16314   005E8A                     u7680:
 16315   005E8A  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 16316   005E8C  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 16317   005E8E  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 16318   005E90  6C0B               	negf	___aldiv@quotient^0,c
 16319   005E92  0E00               	movlw	0
 16320   005E94  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 16321   005E96  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 16322   005E98  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 16323   005E9A                     l6160:
 16324   005E9A  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 16325   005E9E  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 16326   005EA2  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 16327   005EA6  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 16328   005EAA  0012               	return		;funcret
 16329   005EAC                     __end_of___aldiv:
 16330                           	callstack 0
 16331                           
 16332 ;; *************** function _Handle_Commands *****************
 16333 ;; Defined at:
 16334 ;;		line 158 in file "newmain.c"
 16335 ;; Parameters:    Size  Location     Type
 16336 ;;		None
 16337 ;; Auto vars:     Size  Location     Type
 16338 ;;  cmd             1   14[COMRAM] unsigned char 
 16339 ;; Return value:  Size  Location     Type
 16340 ;;                  1    wreg      void 
 16341 ;; Registers used:
 16342 ;;		wreg, status,2, status,0, cstack
 16343 ;; Tracked objects:
 16344 ;;		On entry : 0/0
 16345 ;;		On exit  : 0/0
 16346 ;;		Unchanged: 0/0
 16347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16348 ;;      Params:         0       0       0       0       0       0       0       0       0
 16349 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16350 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16351 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16352 ;;Total ram usage:        5 bytes
 16353 ;; Hardware stack levels used: 1
 16354 ;; Hardware stack levels required when called: 2
 16355 ;; This function calls:
 16356 ;;		___fltol
 16357 ;; This function is called by:
 16358 ;;		_main
 16359 ;; This function uses a non-reentrant model
 16360 ;;
 16361                           
 16362                           	psect	text46
 16363   0058CC                     __ptext46:
 16364                           	callstack 0
 16365   0058CC                     _Handle_Commands:
 16366                           	callstack 28
 16367   0058CC                     
 16368                           ;newmain.c: 159:     if(PIR1bits.RCIF) {
 16369   0058CC  AA9E               	btfss	158,5,c	;volatile
 16370   0058CE  EF6B  F02C         	goto	u10181
 16371   0058D2  EF6D  F02C         	goto	u10180
 16372   0058D6                     u10181:
 16373   0058D6  EFAF  F02C         	goto	l7794
 16374   0058DA                     u10180:
 16375   0058DA                     
 16376                           ;newmain.c: 160:         char cmd = RCREG;
 16377   0058DA  CFAE F00F          	movff	4014,Handle_Commands@cmd	;volatile
 16378                           
 16379                           ;newmain.c: 161:         switch(cmd) {
 16380   0058DE  EFA0  F02C         	goto	l7792
 16381   0058E2                     l7780:
 16382                           
 16383                           ;newmain.c: 163:                 if(!trigger_test) {
 16384   0058E2  505E               	movf	_trigger_test^0,w,c
 16385   0058E4  A4D8               	btfss	status,2,c
 16386   0058E6  EF77  F02C         	goto	u10191
 16387   0058EA  EF79  F02C         	goto	u10190
 16388   0058EE                     u10191:
 16389   0058EE  EFAF  F02C         	goto	l7794
 16390   0058F2                     u10190:
 16391   0058F2                     
 16392                           ;newmain.c: 164:                     trigger_test = 1;
 16393   0058F2  0E01               	movlw	1
 16394   0058F4  6E5E               	movwf	_trigger_test^0,c
 16395   0058F6                     
 16396                           ;newmain.c: 165:                     test_start_time = system_millis;
 16397   0058F6  C2FA  F32C         	movff	_system_millis,_test_start_time
 16398   0058FA  C2FB  F32D         	movff	_system_millis+1,_test_start_time+1
 16399   0058FE  C2FC  F32E         	movff	_system_millis+2,_test_start_time+2
 16400   005902  C2FD  F32F         	movff	_system_millis+3,_test_start_time+3
 16401   005906                     
 16402                           ;newmain.c: 166:                     test_start_flow = total_flow;
 16403   005906  C330  F001         	movff	_total_flow,___fltol@f1
 16404   00590A  C331  F002         	movff	_total_flow+1,___fltol@f1+1
 16405   00590E  C332  F003         	movff	_total_flow+2,___fltol@f1+2
 16406   005912  C333  F004         	movff	_total_flow+3,___fltol@f1+3
 16407   005916  ECD9  F02F         	call	___fltol	;wreg free
 16408   00591A  C001  F314         	movff	?___fltol,_test_start_flow
 16409   00591E  C002  F315         	movff	?___fltol+1,_test_start_flow+1
 16410   005922  C003  F316         	movff	?___fltol+2,_test_start_flow+2
 16411   005926  C004  F317         	movff	?___fltol+3,_test_start_flow+3
 16412   00592A  EFAF  F02C         	goto	l7794
 16413   00592E                     l7788:
 16414                           
 16415                           ;newmain.c: 170:                 shutdown_system = 1;
 16416   00592E  0E01               	movlw	1
 16417   005930  0103               	movlb	3	; () banked
 16418   005932  6F53               	movwf	_shutdown_system& (0+255),b
 16419                           
 16420                           ;newmain.c: 171:                 break;
 16421   005934  EFAF  F02C         	goto	l7794
 16422   005938                     l170:
 16423                           
 16424                           ;newmain.c: 173:                 shutdown_system = 0;
 16425   005938  0103               	movlb	3	; () banked
 16426   00593A  6B53               	clrf	_shutdown_system& (0+255),b
 16427                           
 16428                           ;newmain.c: 174:                 break;
 16429   00593C  EFAF  F02C         	goto	l7794
 16430   005940                     l7792:
 16431   005940  500F               	movf	Handle_Commands@cmd^0,w,c
 16432                           
 16433                           ; Switch size 1, requested type "simple"
 16434                           ; Number of cases is 3, Range of values is 82 to 84
 16435                           ; switch strategies available:
 16436                           ; Name         Instructions Cycles
 16437                           ; simple_byte           10     6 (average)
 16438                           ;	Chosen strategy is simple_byte
 16439   005942  0A52               	xorlw	82	; case 82
 16440   005944  B4D8               	btfsc	status,2,c
 16441   005946  EF9C  F02C         	goto	l170
 16442   00594A  0A01               	xorlw	1	; case 83
 16443   00594C  B4D8               	btfsc	status,2,c
 16444   00594E  EF97  F02C         	goto	l7788
 16445   005952  0A07               	xorlw	7	; case 84
 16446   005954  B4D8               	btfsc	status,2,c
 16447   005956  EF71  F02C         	goto	l7780
 16448   00595A  EFAF  F02C         	goto	l7794
 16449   00595E                     l7794:
 16450                           
 16451                           ;newmain.c: 179:     if(trigger_test) {
 16452   00595E  505E               	movf	_trigger_test^0,w,c
 16453   005960  B4D8               	btfsc	status,2,c
 16454   005962  EFB5  F02C         	goto	u10201
 16455   005966  EFB7  F02C         	goto	u10200
 16456   00596A                     u10201:
 16457   00596A  EF1F  F02D         	goto	l176
 16458   00596E                     u10200:
 16459   00596E                     
 16460                           ;newmain.c: 180:         PORTBbits.RB0 = 1;
 16461   00596E  8081               	bsf	129,0,c	;volatile
 16462   005970                     
 16463                           ;newmain.c: 181:         pump_active = 1;
 16464   005970  0E01               	movlw	1
 16465   005972  0103               	movlb	3	; () banked
 16466   005974  6F58               	movwf	_pump_active& (0+255),b
 16467   005976                     
 16468                           ; BSR set to: 3
 16469                           ;newmain.c: 184:         static unsigned long last_blink = 0;;newmain.c: 185:         if
      +                          (system_millis - last_blink >= 500) {
 16470   005976  5110               	movf	Handle_Commands@last_blink& (0+255),w,b
 16471   005978  0102               	movlb	2	; () banked
 16472   00597A  5DFA               	subwf	_system_millis& (0+255),w,b
 16473   00597C  6E0B               	movwf	??_Handle_Commands^0,c
 16474   00597E  0103               	movlb	3	; () banked
 16475   005980  5111               	movf	(Handle_Commands@last_blink+1)& (0+255),w,b
 16476   005982  0102               	movlb	2	; () banked
 16477   005984  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
 16478   005986  6E0C               	movwf	(??_Handle_Commands+1)^0,c
 16479   005988  0103               	movlb	3	; () banked
 16480   00598A  5112               	movf	(Handle_Commands@last_blink+2)& (0+255),w,b
 16481   00598C  0102               	movlb	2	; () banked
 16482   00598E  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
 16483   005990  6E0D               	movwf	(??_Handle_Commands+2)^0,c
 16484   005992  0103               	movlb	3	; () banked
 16485   005994  5113               	movf	(Handle_Commands@last_blink+3)& (0+255),w,b
 16486   005996  0102               	movlb	2	; () banked
 16487   005998  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
 16488   00599A  6E0E               	movwf	(??_Handle_Commands+3)^0,c
 16489   00599C  500E               	movf	(??_Handle_Commands+3)^0,w,c
 16490   00599E  100D               	iorwf	(??_Handle_Commands+2)^0,w,c
 16491   0059A0  E10B               	bnz	u10210
 16492   0059A2  0EF4               	movlw	244
 16493   0059A4  5C0B               	subwf	??_Handle_Commands^0,w,c
 16494   0059A6  0E01               	movlw	1
 16495   0059A8  580C               	subwfb	(??_Handle_Commands+1)^0,w,c
 16496   0059AA  A0D8               	btfss	status,0,c
 16497   0059AC  EFDA  F02C         	goto	u10211
 16498   0059B0  EFDC  F02C         	goto	u10210
 16499   0059B4                     u10211:
 16500   0059B4  EFF5  F02C         	goto	l7806
 16501   0059B8                     u10210:
 16502   0059B8                     
 16503                           ; BSR set to: 2
 16504                           ;newmain.c: 186:             PORTBbits.RB5 = !PORTBbits.RB5;
 16505   0059B8  AA81               	btfss	129,5,c	;volatile
 16506   0059BA  EFE1  F02C         	goto	u10221
 16507   0059BE  EFE5  F02C         	goto	u10220
 16508   0059C2                     u10221:
 16509   0059C2  6A0B               	clrf	??_Handle_Commands^0,c
 16510   0059C4  2A0B               	incf	??_Handle_Commands^0,f,c
 16511   0059C6  EFE6  F02C         	goto	u10238
 16512   0059CA                     u10220:
 16513   0059CA  6A0B               	clrf	??_Handle_Commands^0,c
 16514   0059CC                     u10238:
 16515   0059CC  3A0B               	swapf	??_Handle_Commands^0,f,c
 16516   0059CE  460B               	rlncf	??_Handle_Commands^0,f,c
 16517   0059D0  5081               	movf	129,w,c	;volatile
 16518   0059D2  180B               	xorwf	??_Handle_Commands^0,w,c
 16519   0059D4  0BDF               	andlw	-33
 16520   0059D6  180B               	xorwf	??_Handle_Commands^0,w,c
 16521   0059D8  6E81               	movwf	129,c	;volatile
 16522   0059DA                     
 16523                           ;newmain.c: 187:             last_blink = system_millis;
 16524   0059DA  C2FA  F310         	movff	_system_millis,Handle_Commands@last_blink
 16525   0059DE  C2FB  F311         	movff	_system_millis+1,Handle_Commands@last_blink+1
 16526   0059E2  C2FC  F312         	movff	_system_millis+2,Handle_Commands@last_blink+2
 16527   0059E6  C2FD  F313         	movff	_system_millis+3,Handle_Commands@last_blink+3
 16528   0059EA                     l7806:
 16529                           
 16530                           ;newmain.c: 189:         alarm_active = 1;
 16531   0059EA  0E01               	movlw	1
 16532   0059EC  0103               	movlb	3	; () banked
 16533   0059EE  6F57               	movwf	_alarm_active& (0+255),b
 16534   0059F0                     
 16535                           ; BSR set to: 3
 16536                           ;newmain.c: 192:         if((system_millis - test_start_time) >= TEST_DURATION) {
 16537   0059F0  512C               	movf	_test_start_time& (0+255),w,b
 16538   0059F2  0102               	movlb	2	; () banked
 16539   0059F4  5DFA               	subwf	_system_millis& (0+255),w,b
 16540   0059F6  6E0B               	movwf	??_Handle_Commands^0,c
 16541   0059F8  0103               	movlb	3	; () banked
 16542   0059FA  512D               	movf	(_test_start_time+1)& (0+255),w,b
 16543   0059FC  0102               	movlb	2	; () banked
 16544   0059FE  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
 16545   005A00  6E0C               	movwf	(??_Handle_Commands+1)^0,c
 16546   005A02  0103               	movlb	3	; () banked
 16547   005A04  512E               	movf	(_test_start_time+2)& (0+255),w,b
 16548   005A06  0102               	movlb	2	; () banked
 16549   005A08  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
 16550   005A0A  6E0D               	movwf	(??_Handle_Commands+2)^0,c
 16551   005A0C  0103               	movlb	3	; () banked
 16552   005A0E  512F               	movf	(_test_start_time+3)& (0+255),w,b
 16553   005A10  0102               	movlb	2	; () banked
 16554   005A12  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
 16555   005A14  6E0E               	movwf	(??_Handle_Commands+3)^0,c
 16556   005A16  500E               	movf	(??_Handle_Commands+3)^0,w,c
 16557   005A18  100D               	iorwf	(??_Handle_Commands+2)^0,w,c
 16558   005A1A  E10B               	bnz	u10240
 16559   005A1C  0E10               	movlw	16
 16560   005A1E  5C0B               	subwf	??_Handle_Commands^0,w,c
 16561   005A20  0E27               	movlw	39
 16562   005A22  580C               	subwfb	(??_Handle_Commands+1)^0,w,c
 16563   005A24  A0D8               	btfss	status,0,c
 16564   005A26  EF17  F02D         	goto	u10241
 16565   005A2A  EF19  F02D         	goto	u10240
 16566   005A2E                     u10241:
 16567   005A2E  EF1F  F02D         	goto	l176
 16568   005A32                     u10240:
 16569   005A32                     
 16570                           ; BSR set to: 2
 16571                           ;newmain.c: 193:             trigger_test = 0;
 16572   005A32  6A5E               	clrf	_trigger_test^0,c
 16573                           
 16574                           ;newmain.c: 194:             PORTBbits.RB0 = 0;
 16575   005A34  9081               	bcf	129,0,c	;volatile
 16576                           
 16577                           ;newmain.c: 195:             PORTBbits.RB5 = 1;
 16578   005A36  8A81               	bsf	129,5,c	;volatile
 16579                           
 16580                           ;newmain.c: 196:             pump_active = 0;
 16581   005A38  0103               	movlb	3	; () banked
 16582   005A3A  6B58               	clrf	_pump_active& (0+255),b
 16583                           
 16584                           ;newmain.c: 197:             alarm_active = 0;
 16585   005A3C  6B57               	clrf	_alarm_active& (0+255),b
 16586   005A3E                     l176:
 16587   005A3E  0012               	return		;funcret
 16588   005A40                     __end_of_Handle_Commands:
 16589                           	callstack 0
 16590                           
 16591 ;; *************** function ___fltol *****************
 16592 ;; Defined at:
 16593 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 16594 ;; Parameters:    Size  Location     Type
 16595 ;;  f1              4    0[COMRAM] void 
 16596 ;; Auto vars:     Size  Location     Type
 16597 ;;  exp1            1    9[COMRAM] unsigned char 
 16598 ;;  sign1           1    8[COMRAM] unsigned char 
 16599 ;; Return value:  Size  Location     Type
 16600 ;;                  4    0[COMRAM] long 
 16601 ;; Registers used:
 16602 ;;		wreg, status,2, status,0
 16603 ;; Tracked objects:
 16604 ;;		On entry : 0/0
 16605 ;;		On exit  : 0/0
 16606 ;;		Unchanged: 0/0
 16607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16608 ;;      Params:         4       0       0       0       0       0       0       0       0
 16609 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16610 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16611 ;;      Totals:        10       0       0       0       0       0       0       0       0
 16612 ;;Total ram usage:       10 bytes
 16613 ;; Hardware stack levels used: 1
 16614 ;; Hardware stack levels required when called: 1
 16615 ;; This function calls:
 16616 ;;		Nothing
 16617 ;; This function is called by:
 16618 ;;		_Handle_Commands
 16619 ;;		_efgtoa
 16620 ;; This function uses a non-reentrant model
 16621 ;;
 16622                           
 16623                           	psect	text47
 16624   005FB2                     __ptext47:
 16625                           	callstack 0
 16626   005FB2                     ___fltol:
 16627                           	callstack 24
 16628   005FB2  3403               	rlcf	(___fltol@f1+2)^0,w,c
 16629   005FB4  3404               	rlcf	(___fltol@f1+3)^0,w,c
 16630   005FB6  6E0A               	movwf	___fltol@exp1^0,c
 16631   005FB8  500A               	movf	___fltol@exp1^0,w,c
 16632   005FBA  A4D8               	btfss	status,2,c
 16633   005FBC  EFE2  F02F         	goto	u8261
 16634   005FC0  EFE4  F02F         	goto	u8260
 16635   005FC4                     u8261:
 16636   005FC4  EFEE  F02F         	goto	l6522
 16637   005FC8                     u8260:
 16638   005FC8                     l6518:
 16639   005FC8  0E00               	movlw	0
 16640   005FCA  6E01               	movwf	?___fltol^0,c
 16641   005FCC  0E00               	movlw	0
 16642   005FCE  6E02               	movwf	(?___fltol+1)^0,c
 16643   005FD0  0E00               	movlw	0
 16644   005FD2  6E03               	movwf	(?___fltol+2)^0,c
 16645   005FD4  0E00               	movlw	0
 16646   005FD6  6E04               	movwf	(?___fltol+3)^0,c
 16647   005FD8  EF5B  F030         	goto	l570
 16648   005FDC                     l6522:
 16649   005FDC  C001  F005         	movff	___fltol@f1,??___fltol
 16650   005FE0  C002  F006         	movff	___fltol@f1+1,??___fltol+1
 16651   005FE4  C003  F007         	movff	___fltol@f1+2,??___fltol+2
 16652   005FE8  C004  F008         	movff	___fltol@f1+3,??___fltol+3
 16653   005FEC  0E20               	movlw	32
 16654   005FEE  EFFE  F02F         	goto	u8270
 16655   005FF2                     u8275:
 16656   005FF2  90D8               	bcf	status,0,c
 16657   005FF4  3208               	rrcf	(??___fltol+3)^0,f,c
 16658   005FF6  3207               	rrcf	(??___fltol+2)^0,f,c
 16659   005FF8  3206               	rrcf	(??___fltol+1)^0,f,c
 16660   005FFA  3205               	rrcf	??___fltol^0,f,c
 16661   005FFC                     u8270:
 16662   005FFC  2EE8               	decfsz	wreg,f,c
 16663   005FFE  EFF9  F02F         	goto	u8275
 16664   006002  5005               	movf	??___fltol^0,w,c
 16665   006004  6E09               	movwf	___fltol@sign1^0,c
 16666   006006  8E03               	bsf	(___fltol@f1+2)^0,7,c
 16667   006008  0EFF               	movlw	255
 16668   00600A  1601               	andwf	___fltol@f1^0,f,c
 16669   00600C  0EFF               	movlw	255
 16670   00600E  1602               	andwf	(___fltol@f1+1)^0,f,c
 16671   006010  0EFF               	movlw	255
 16672   006012  1603               	andwf	(___fltol@f1+2)^0,f,c
 16673   006014  0E00               	movlw	0
 16674   006016  1604               	andwf	(___fltol@f1+3)^0,f,c
 16675   006018  0E96               	movlw	150
 16676   00601A  5E0A               	subwf	___fltol@exp1^0,f,c
 16677   00601C  BE0A               	btfsc	___fltol@exp1^0,7,c
 16678   00601E  EF15  F030         	goto	u8280
 16679   006022  EF13  F030         	goto	u8281
 16680   006026                     u8281:
 16681   006026  EF2B  F030         	goto	l6542
 16682   00602A                     u8280:
 16683   00602A  500A               	movf	___fltol@exp1^0,w,c
 16684   00602C  0A80               	xorlw	128
 16685   00602E  0F97               	addlw	151
 16686   006030  B0D8               	btfsc	status,0,c
 16687   006032  EF1D  F030         	goto	u8291
 16688   006036  EF1F  F030         	goto	u8290
 16689   00603A                     u8291:
 16690   00603A  EF21  F030         	goto	l6538
 16691   00603E                     u8290:
 16692   00603E  EFE4  F02F         	goto	l6518
 16693   006042                     l6538:
 16694   006042  90D8               	bcf	status,0,c
 16695   006044  3204               	rrcf	(___fltol@f1+3)^0,f,c
 16696   006046  3203               	rrcf	(___fltol@f1+2)^0,f,c
 16697   006048  3202               	rrcf	(___fltol@f1+1)^0,f,c
 16698   00604A  3201               	rrcf	___fltol@f1^0,f,c
 16699   00604C  3E0A               	incfsz	___fltol@exp1^0,f,c
 16700   00604E  EF21  F030         	goto	l6538
 16701   006052  EF43  F030         	goto	l6552
 16702   006056                     l6542:
 16703   006056  0E1F               	movlw	31
 16704   006058  640A               	cpfsgt	___fltol@exp1^0,c
 16705   00605A  EF31  F030         	goto	u8301
 16706   00605E  EF33  F030         	goto	u8300
 16707   006062                     u8301:
 16708   006062  EF3B  F030         	goto	l6550
 16709   006066                     u8300:
 16710   006066  EFE4  F02F         	goto	l6518
 16711   00606A                     l6548:
 16712   00606A  90D8               	bcf	status,0,c
 16713   00606C  3601               	rlcf	___fltol@f1^0,f,c
 16714   00606E  3602               	rlcf	(___fltol@f1+1)^0,f,c
 16715   006070  3603               	rlcf	(___fltol@f1+2)^0,f,c
 16716   006072  3604               	rlcf	(___fltol@f1+3)^0,f,c
 16717   006074  060A               	decf	___fltol@exp1^0,f,c
 16718   006076                     l6550:
 16719   006076  500A               	movf	___fltol@exp1^0,w,c
 16720   006078  A4D8               	btfss	status,2,c
 16721   00607A  EF41  F030         	goto	u8311
 16722   00607E  EF43  F030         	goto	u8310
 16723   006082                     u8311:
 16724   006082  EF35  F030         	goto	l6548
 16725   006086                     u8310:
 16726   006086                     l6552:
 16727   006086  5009               	movf	___fltol@sign1^0,w,c
 16728   006088  B4D8               	btfsc	status,2,c
 16729   00608A  EF49  F030         	goto	u8321
 16730   00608E  EF4B  F030         	goto	u8320
 16731   006092                     u8321:
 16732   006092  EF53  F030         	goto	l6556
 16733   006096                     u8320:
 16734   006096  1E04               	comf	(___fltol@f1+3)^0,f,c
 16735   006098  1E03               	comf	(___fltol@f1+2)^0,f,c
 16736   00609A  1E02               	comf	(___fltol@f1+1)^0,f,c
 16737   00609C  6C01               	negf	___fltol@f1^0,c
 16738   00609E  0E00               	movlw	0
 16739   0060A0  2202               	addwfc	(___fltol@f1+1)^0,f,c
 16740   0060A2  2203               	addwfc	(___fltol@f1+2)^0,f,c
 16741   0060A4  2204               	addwfc	(___fltol@f1+3)^0,f,c
 16742   0060A6                     l6556:
 16743   0060A6  C001  F001         	movff	___fltol@f1,?___fltol
 16744   0060AA  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 16745   0060AE  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 16746   0060B2  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 16747   0060B6                     l570:
 16748   0060B6  0012               	return		;funcret
 16749   0060B8                     __end_of___fltol:
 16750                           	callstack 0
 16751                           
 16752 ;; *************** function _ADC_Init *****************
 16753 ;; Defined at:
 16754 ;;		line 402 in file "newmain.c"
 16755 ;; Parameters:    Size  Location     Type
 16756 ;;		None
 16757 ;; Auto vars:     Size  Location     Type
 16758 ;;		None
 16759 ;; Return value:  Size  Location     Type
 16760 ;;                  1    wreg      void 
 16761 ;; Registers used:
 16762 ;;		wreg, status,2
 16763 ;; Tracked objects:
 16764 ;;		On entry : 0/0
 16765 ;;		On exit  : 0/0
 16766 ;;		Unchanged: 0/0
 16767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16768 ;;      Params:         0       0       0       0       0       0       0       0       0
 16769 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16770 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16771 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16772 ;;Total ram usage:        0 bytes
 16773 ;; Hardware stack levels used: 1
 16774 ;; Hardware stack levels required when called: 1
 16775 ;; This function calls:
 16776 ;;		Nothing
 16777 ;; This function is called by:
 16778 ;;		_main
 16779 ;; This function uses a non-reentrant model
 16780 ;;
 16781                           
 16782                           	psect	text48
 16783   006DFA                     __ptext48:
 16784                           	callstack 0
 16785   006DFA                     _ADC_Init:
 16786                           	callstack 29
 16787   006DFA                     
 16788                           ;newmain.c: 403:     TRISA0 = TRISA1 = TRISA2 = 1;
 16789   006DFA  8492               	bsf	3986,2,c	;volatile
 16790   006DFC  8292               	bsf	3986,1,c	;volatile
 16791   006DFE  8092               	bsf	3986,0,c	;volatile
 16792                           
 16793                           ;newmain.c: 404:     ADCON0bits.ADON = 1;
 16794   006E00  80C2               	bsf	194,0,c	;volatile
 16795   006E02                     
 16796                           ;newmain.c: 405:     ADCON1 = 0x0C;
 16797   006E02  0E0C               	movlw	12
 16798   006E04  6EC1               	movwf	193,c	;volatile
 16799                           
 16800                           ;newmain.c: 406:     ADCON2 = 0xBE;
 16801   006E06  0EBE               	movlw	190
 16802   006E08  6EC0               	movwf	192,c	;volatile
 16803   006E0A  0012               	return		;funcret
 16804   006E0C                     __end_of_ADC_Init:
 16805                           	callstack 0
 16806                           
 16807 ;; *************** function _HighISR *****************
 16808 ;; Defined at:
 16809 ;;		line 91 in file "newmain.c"
 16810 ;; Parameters:    Size  Location     Type
 16811 ;;		None
 16812 ;; Auto vars:     Size  Location     Type
 16813 ;;		None
 16814 ;; Return value:  Size  Location     Type
 16815 ;;                  1    wreg      void 
 16816 ;; Registers used:
 16817 ;;		status,2, status,0
 16818 ;; Tracked objects:
 16819 ;;		On entry : 0/0
 16820 ;;		On exit  : 0/0
 16821 ;;		Unchanged: 0/0
 16822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16823 ;;      Params:         0       0       0       0       0       0       0       0       0
 16824 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16825 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16826 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16827 ;;Total ram usage:        0 bytes
 16828 ;; Hardware stack levels used: 1
 16829 ;; This function calls:
 16830 ;;		Nothing
 16831 ;; This function is called by:
 16832 ;;		Interrupt level 2
 16833 ;; This function uses a non-reentrant model
 16834 ;;
 16835                           
 16836                           	psect	intcode
 16837   000008                     __pintcode:
 16838                           	callstack 0
 16839   000008                     _HighISR:
 16840                           	callstack 20
 16841                           
 16842                           ;incstack = 0
 16843   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16844   00000A  EDD9  F036         	call	int_func,f	;refresh shadow registers
 16845                           
 16846                           	psect	intcode_body
 16847   006DB2                     __pintcode_body:
 16848                           	callstack 20
 16849   006DB2                     int_func:
 16850                           	callstack 20
 16851   006DB2  0006               	pop		; remove dummy address from shadow register refresh
 16852   006DB4                     
 16853                           ;newmain.c: 92:     if (INTCON3bits.INT1IF) {
 16854   006DB4  A0F0               	btfss	240,0,c	;volatile
 16855   006DB6  EFDF  F036         	goto	i2u709_41
 16856   006DBA  EFE1  F036         	goto	i2u709_40
 16857   006DBE                     i2u709_41:
 16858   006DBE  EFE5  F036         	goto	i2l146
 16859   006DC2                     i2u709_40:
 16860   006DC2                     
 16861                           ;newmain.c: 93:         pulse_count++;
 16862   006DC2  0103               	movlb	3	; () banked
 16863   006DC4  4B4E               	infsnz	_pulse_count& (0+255),f,b	;volatile
 16864   006DC6  2B4F               	incf	(_pulse_count+1)& (0+255),f,b	;volatile
 16865   006DC8                     
 16866                           ; BSR set to: 3
 16867                           ;newmain.c: 94:         INTCON3bits.INT1IF = 0;
 16868   006DC8  90F0               	bcf	240,0,c	;volatile
 16869   006DCA                     i2l146:
 16870   006DCA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16871   006DCC  0011               	retfie		f
 16872   006DCE                     __end_of_HighISR:
 16873                           	callstack 0
 16874                           
 16875                           	psect	rparam
 16876   000001                     ___rparam_used  equ	1
 16877   000000                     ___param_bank   equ	0
 16878   000000                     __Lparam        equ	__Lrparam
 16879   000000                     __Hparam        equ	__Hrparam
 16880                           
 16881                           	psect	temp
 16882   00005F                     btemp:
 16883                           	callstack 0
 16884   00005F                     	ds	1
 16885   00005F                     int$flags       set	btemp
 16886   000060                     wtemp8          set	btemp+1
 16887   000060                     ttemp5          set	btemp+1
 16888   000063                     ttemp6          set	btemp+4
 16889   000067                     ttemp7          set	btemp+8
 16890                           
 16891                           	psect	idloc
 16892                           
 16893                           ;Config register IDLOC0 @ 0x200000
 16894                           ;	unspecified, using default values
 16895   200000                     	org	2097152
 16896   200000  FF                 	db	255
 16897                           
 16898                           ;Config register IDLOC1 @ 0x200001
 16899                           ;	unspecified, using default values
 16900   200001                     	org	2097153
 16901   200001  FF                 	db	255
 16902                           
 16903                           ;Config register IDLOC2 @ 0x200002
 16904                           ;	unspecified, using default values
 16905   200002                     	org	2097154
 16906   200002  FF                 	db	255
 16907                           
 16908                           ;Config register IDLOC3 @ 0x200003
 16909                           ;	unspecified, using default values
 16910   200003                     	org	2097155
 16911   200003  FF                 	db	255
 16912                           
 16913                           ;Config register IDLOC4 @ 0x200004
 16914                           ;	unspecified, using default values
 16915   200004                     	org	2097156
 16916   200004  FF                 	db	255
 16917                           
 16918                           ;Config register IDLOC5 @ 0x200005
 16919                           ;	unspecified, using default values
 16920   200005                     	org	2097157
 16921   200005  FF                 	db	255
 16922                           
 16923                           ;Config register IDLOC6 @ 0x200006
 16924                           ;	unspecified, using default values
 16925   200006                     	org	2097158
 16926   200006  FF                 	db	255
 16927                           
 16928                           ;Config register IDLOC7 @ 0x200007
 16929                           ;	unspecified, using default values
 16930   200007                     	org	2097159
 16931   200007  FF                 	db	255
 16932                           
 16933                           	psect	config
 16934                           
 16935                           ;Config register CONFIG1L @ 0x300000
 16936                           ;	unspecified, using default values
 16937                           ;	PLL Prescaler Selection bits
 16938                           ;	PLLDIV = 0x0, unprogrammed default
 16939                           ;	System Clock Postscaler Selection bits
 16940                           ;	CPUDIV = 0x0, unprogrammed default
 16941                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 16942                           ;	USBDIV = 0x0, unprogrammed default
 16943   300000                     	org	3145728
 16944   300000  00                 	db	0
 16945                           
 16946                           ;Config register CONFIG1H @ 0x300001
 16947                           ;	Oscillator Selection bits
 16948                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
 16949                           ;	Fail-Safe Clock Monitor Enable bit
 16950                           ;	FCMEN = 0x0, unprogrammed default
 16951                           ;	Internal/External Oscillator Switchover bit
 16952                           ;	IESO = 0x0, unprogrammed default
 16953   300001                     	org	3145729
 16954   300001  08                 	db	8
 16955                           
 16956                           ;Config register CONFIG2L @ 0x300002
 16957                           ;	Power-up Timer Enable bit
 16958                           ;	PWRT = ON, PWRT enabled
 16959                           ;	Brown-out Reset Enable bits
 16960                           ;	BOR = 0x3, unprogrammed default
 16961                           ;	Brown-out Reset Voltage bits
 16962                           ;	BORV = 0x3, unprogrammed default
 16963                           ;	USB Voltage Regulator Enable bit
 16964                           ;	VREGEN = 0x0, unprogrammed default
 16965   300002                     	org	3145730
 16966   300002  1E                 	db	30
 16967                           
 16968                           ;Config register CONFIG2H @ 0x300003
 16969                           ;	Watchdog Timer Enable bit
 16970                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16971                           ;	Watchdog Timer Postscale Select bits
 16972                           ;	WDTPS = 0xF, unprogrammed default
 16973   300003                     	org	3145731
 16974   300003  1E                 	db	30
 16975                           
 16976                           ; Padding undefined space
 16977   300004                     	org	3145732
 16978   300004  FF                 	db	255
 16979                           
 16980                           ;Config register CONFIG3H @ 0x300005
 16981                           ;	CCP2 MUX bit
 16982                           ;	CCP2MX = 0x1, unprogrammed default
 16983                           ;	PORTB A/D Enable bit
 16984                           ;	PBADEN = 0x1, unprogrammed default
 16985                           ;	Low-Power Timer 1 Oscillator Enable bit
 16986                           ;	LPT1OSC = 0x0, unprogrammed default
 16987                           ;	MCLR Pin Enable bit
 16988                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 16989   300005                     	org	3145733
 16990   300005  83                 	db	131
 16991                           
 16992                           ;Config register CONFIG4L @ 0x300006
 16993                           ;	Stack Full/Underflow Reset Enable bit
 16994                           ;	STVREN = 0x1, unprogrammed default
 16995                           ;	Single-Supply ICSP Enable bit
 16996                           ;	LVP = OFF, Single-Supply ICSP disabled
 16997                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 16998                           ;	ICPRT = 0x0, unprogrammed default
 16999                           ;	Extended Instruction Set Enable bit
 17000                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17001                           ;	Background Debugger Enable bit
 17002                           ;	DEBUG = 0x1, unprogrammed default
 17003   300006                     	org	3145734
 17004   300006  81                 	db	129
 17005                           
 17006                           ; Padding undefined space
 17007   300007                     	org	3145735
 17008   300007  FF                 	db	255
 17009                           
 17010                           ;Config register CONFIG5L @ 0x300008
 17011                           ;	unspecified, using default values
 17012                           ;	Code Protection bit
 17013                           ;	CP0 = 0x1, unprogrammed default
 17014                           ;	Code Protection bit
 17015                           ;	CP1 = 0x1, unprogrammed default
 17016                           ;	Code Protection bit
 17017                           ;	CP2 = 0x1, unprogrammed default
 17018                           ;	Code Protection bit
 17019                           ;	CP3 = 0x1, unprogrammed default
 17020   300008                     	org	3145736
 17021   300008  0F                 	db	15
 17022                           
 17023                           ;Config register CONFIG5H @ 0x300009
 17024                           ;	unspecified, using default values
 17025                           ;	Boot Block Code Protection bit
 17026                           ;	CPB = 0x1, unprogrammed default
 17027                           ;	Data EEPROM Code Protection bit
 17028                           ;	CPD = 0x1, unprogrammed default
 17029   300009                     	org	3145737
 17030   300009  C0                 	db	192
 17031                           
 17032                           ;Config register CONFIG6L @ 0x30000A
 17033                           ;	unspecified, using default values
 17034                           ;	Write Protection bit
 17035                           ;	WRT0 = 0x1, unprogrammed default
 17036                           ;	Write Protection bit
 17037                           ;	WRT1 = 0x1, unprogrammed default
 17038                           ;	Write Protection bit
 17039                           ;	WRT2 = 0x1, unprogrammed default
 17040                           ;	Write Protection bit
 17041                           ;	WRT3 = 0x1, unprogrammed default
 17042   30000A                     	org	3145738
 17043   30000A  0F                 	db	15
 17044                           
 17045                           ;Config register CONFIG6H @ 0x30000B
 17046                           ;	unspecified, using default values
 17047                           ;	Configuration Register Write Protection bit
 17048                           ;	WRTC = 0x1, unprogrammed default
 17049                           ;	Boot Block Write Protection bit
 17050                           ;	WRTB = 0x1, unprogrammed default
 17051                           ;	Data EEPROM Write Protection bit
 17052                           ;	WRTD = 0x1, unprogrammed default
 17053   30000B                     	org	3145739
 17054   30000B  E0                 	db	224
 17055                           
 17056                           ;Config register CONFIG7L @ 0x30000C
 17057                           ;	unspecified, using default values
 17058                           ;	Table Read Protection bit
 17059                           ;	EBTR0 = 0x1, unprogrammed default
 17060                           ;	Table Read Protection bit
 17061                           ;	EBTR1 = 0x1, unprogrammed default
 17062                           ;	Table Read Protection bit
 17063                           ;	EBTR2 = 0x1, unprogrammed default
 17064                           ;	Table Read Protection bit
 17065                           ;	EBTR3 = 0x1, unprogrammed default
 17066   30000C                     	org	3145740
 17067   30000C  0F                 	db	15
 17068                           
 17069                           ;Config register CONFIG7H @ 0x30000D
 17070                           ;	unspecified, using default values
 17071                           ;	Boot Block Table Read Protection bit
 17072                           ;	EBTRB = 0x1, unprogrammed default
 17073   30000D                     	org	3145741
 17074   30000D  40                 	db	64
 17075                           tosu	equ	0xFFF
 17076                           tosh	equ	0xFFE
 17077                           tosl	equ	0xFFD
 17078                           stkptr	equ	0xFFC
 17079                           pclatu	equ	0xFFB
 17080                           pclath	equ	0xFFA
 17081                           pcl	equ	0xFF9
 17082                           tblptru	equ	0xFF8
 17083                           tblptrh	equ	0xFF7
 17084                           tblptrl	equ	0xFF6
 17085                           tablat	equ	0xFF5
 17086                           prodh	equ	0xFF4
 17087                           prodl	equ	0xFF3
 17088                           indf0	equ	0xFEF
 17089                           postinc0	equ	0xFEE
 17090                           postdec0	equ	0xFED
 17091                           preinc0	equ	0xFEC
 17092                           plusw0	equ	0xFEB
 17093                           fsr0h	equ	0xFEA
 17094                           fsr0l	equ	0xFE9
 17095                           wreg	equ	0xFE8
 17096                           indf1	equ	0xFE7
 17097                           postinc1	equ	0xFE6
 17098                           postdec1	equ	0xFE5
 17099                           preinc1	equ	0xFE4
 17100                           plusw1	equ	0xFE3
 17101                           fsr1h	equ	0xFE2
 17102                           fsr1l	equ	0xFE1
 17103                           bsr	equ	0xFE0
 17104                           indf2	equ	0xFDF
 17105                           postinc2	equ	0xFDE
 17106                           postdec2	equ	0xFDD
 17107                           preinc2	equ	0xFDC
 17108                           plusw2	equ	0xFDB
 17109                           fsr2h	equ	0xFDA
 17110                           fsr2l	equ	0xFD9
 17111                           status	equ	0xFD8

Data Sizes:
    Strings     302
    Constant    116
    Data        24
    BSS         217
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     144
    BANK1           256    256     256
    BANK2           256    250     256
    BANK3           256     18     252
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Apply_Filter@samples	PTR float  size(2) Largest target is 20
		 -> co_samples(BANK3[20]), temp_samples(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1239$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    S1239$source	PTR const unsigned char  size(2) Largest target is 0

    Send_History_Event@event_type	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[9]), STR_12(CODE[9]), STR_14(CODE[7]), STR_5(CODE[11]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), 

    Send_History_Event@extra_data	PTR const unsigned char  size(2) Largest target is 150
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), STR_13(CODE[1]), 
		 -> STR_15(CODE[1]), STR_9(CODE[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[200]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 150
		 -> fire_trigger_sensor(BANK3[20]), Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), 
		 -> ?_sprintf(BANK0[2]), STR_11(CODE[9]), STR_12(CODE[9]), STR_13(CODE[1]), 
		 -> STR_14(CODE[7]), STR_15(CODE[1]), STR_24(CODE[7]), STR_5(CODE[11]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), STR_9(CODE[1]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 150
		 -> fire_trigger_sensor(BANK3[20]), Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), 
		 -> ?_sprintf(BANK0[2]), STR_11(CODE[9]), STR_12(CODE[9]), STR_13(CODE[1]), 
		 -> STR_14(CODE[7]), STR_15(CODE[1]), STR_5(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[11]), STR_9(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[13]), STR_18(CODE[4]), STR_2(CODE[19]), STR_21(CODE[4]), 
		 -> STR_3(CODE[10]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 115
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[115]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _main->_Update_Actuators
    _Update_Actuators->___flge
    _Read_Sensors->___flge
    _powf->___flge
    _scalbnf->___flmul
    _Apply_Filter->___fladd
    _Handle_Fire_Events->___flge
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flsub
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod
    _Handle_Commands->___fltol

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Handle_Fire_Events
    _Update_Actuators->___flge
    _Send_Data->_sprintf
    _Read_Sensors->_powf
    _powf->___flge
    _Handle_Test_Events->_Send_History_Event
    _Handle_Shutdown_Events->_Send_History_Event
    _Handle_Fire_Events->_Send_History_Event
    _Send_History_Event->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Handle_Test_Events
    _Read_Sensors->_powf
    _Handle_Test_Events->_Send_History_Event
    _Handle_Shutdown_Events->_Send_History_Event
    _Handle_Fire_Events->_Send_History_Event

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Handle_Fire_Events

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0  219393
                                            142 BANK0      2     2      0
                                              0 BANK3     18    18      0
                           _ADC_Init
                           _ADC_Read
                    _Handle_Commands
                 _Handle_Fire_Events
             _Handle_Shutdown_Events
                 _Handle_Test_Events
                     _Interrupt_Init
                       _Read_Sensors
                          _Send_Data
                          _UART_Init
                   _Update_Actuators
                            ___awmod
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     439
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Update_Actuators                                     5     5      0     393
                                             92 COMRAM     1     1      0
                                              8 BANK0      4     4      0
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send_Data                                          202   202      0   25781
                                              0 BANK1    202   202      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Read_Sensors                                        52    52      0   43001
                                             25 BANK0     52    52      0
                           _ADC_Read
                       _Apply_Filter
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   25063
                                              8 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               41    37      4    1070
                                              0 COMRAM    37    33      4
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    3081
                                             39 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _Apply_Filter                                        14     8      6    5293
                                             80 COMRAM     8     2      6
                                              0 BANK0      6     6      0
                            ___fladd
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Test_Events                                  56    56      0   55602
                                            132 BANK0      2     2      0
                                            202 BANK1     54    54      0
                 _Send_History_Event
                            ___flsub
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     532
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Handle_Shutdown_Events                               0     0      0   25879
                 _Send_History_Event
 ---------------------------------------------------------------------------------
 (1) _Handle_Fire_Events                                 260   260      0   55926
                                            132 BANK0     10    10      0
                                              0 BANK2    250   250      0
                 _Send_History_Event
                             ___flge
                            ___flsub
                            ___lldiv
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Send_History_Event                                 206   202      4   25879
                                            128 BANK0      4     0      4
                                              0 BANK1    202   202      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             50    14     36   25602
                                             80 BANK0     48    12     36
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4   25224
                                             74 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   24958
                                             60 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                11     6      5    1899
                                             22 COMRAM    11     6      5
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     238
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     253
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _stoa                                                11     8      3     647
                                              8 COMRAM    11     8      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     266
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   17467
                                              8 BANK0     52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     133
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     217
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     102
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     495
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     201
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    3475
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3188
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      74
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2571
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     356
                                             88 COMRAM     4     4      0
                                              0 BANK0      8     0      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     142
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1833
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                14     9      5    2629
                                             22 COMRAM    14     9      5
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    1068
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3     487
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     341
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      96
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     439
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     451
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Handle_Commands                                      5     5      0     383
                                             10 COMRAM     5     5      0
                            ___fltol
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     349
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Handle_Commands
     ___fltol
   _Handle_Fire_Events
     _Send_History_Event
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aldiv
               ___almod
               _abs
                 ___almod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _efgtoa
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                 ___xxtofl (ARG)
               ___fldiv
               ___fleq
               ___flge
                 ___fladd (ARG)
                 ___flmul (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___fldiv (ARG)
                   ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul
               ___flneg
               ___flsub
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
               _strcpy
             _fputc
             _read_prec_or_width
             _stoa
               _fputc
             _utoa
               ___lldiv
               ___llmod
               _pad
     ___flge
     ___flsub
     ___lldiv
     _sprintf
     _strcpy
   _Handle_Shutdown_Events
     _Send_History_Event
   _Handle_Test_Events
     _Send_History_Event
     ___flsub
     ___xxtofl
     _sprintf
   _Interrupt_Init
   _Read_Sensors
     _ADC_Read
     _Apply_Filter
       ___fladd
       ___fldiv
     ___fladd
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___xxtofl
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
   _Send_Data
     _sprintf
   _UART_Init
   _Update_Actuators
     ___flge
   ___awmod
   ___fladd
   ___fldiv
   ___flmul
   ___flsub
   ___xxtofl

 _HighISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256     18     252     98.4%
BITBANK2           256      0       0      0.0%
BANK2              256    250     256    100.0%
BITBANK1           256      0       0      0.0%
BANK1              256    256     256    100.0%
BITBANK0           160      0       0      0.0%
BANK0              160    144     144     90.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     93      94    100.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    1000      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jul 07 16:20:01 2025

                   ??_Interrupt_Init 0001                         ___fldiv@aexp 0040  
                       ___fldiv@bexp 003F                          _pump_active 0358  
                       ___fldiv@sign 0038                    _Read_Sensors$1834 0089  
                  _Read_Sensors$1835 008D                    _Read_Sensors$1836 0091  
                                 _L1 7EB9                                   _L2 7EB5  
                                 _L3 7EB1                                   _L4 7EAD  
                                 _L5 7EA9                                   _L6 7EA5  
                                 _P1 7EA1                                   _P2 7E9D  
                                 _P3 7E99                                   _P4 7E95  
                                 _P5 7E91                                   _bp 7E6D  
                                 _cp 7E7D                          _pulse_count 034E  
                                l200 6A62                                  l203 6908  
                                l300 68C0                                  l212 6964  
                                l208 6934                                  l216 30EC  
                                l233 656E                                  l170 5938  
                                l307 68D0                                  l251 6456  
                                l243 5B6E                                  l228 35C6  
                                l261 6CA8                                  l237 5AC2  
                                l246 642A                                  l270 6DF8  
                                l238 5B66                                  l255 6486  
                                l176 5A3E                                  l352 5EAA  
                                l264 6CCC                                  l193 5C88  
                                l258 6E0A                                  l186 512C  
                                l267 6E1A                                  l532 682C  
                                l700 69EC                                  l365 639E  
                                l517 66D6                                  l543 5FB0  
                                l801 3CBE                                  l570 60B6  
                                l538 5F6A                                  l810 3F8A  
                                l802 3CAC                                  l547 6D7C  
                                l803 3C72                                  l815 3E66  
                                l904 4372                                  l834 3F4E  
                                l818 3DD8                                  l827 3EA6  
                                l843 6C46                                  l931 5726  
                                l860 4946                                  l828 3E94  
                                l693 69DC                                  l942 56BE  
                                l855 4B1E                                  l951 6C8A  
                                l935 5662                                  l928 55CA  
                                l857 4982                                  l866 49C8  
                                l867 49E6                                  l891 43B0  
                                l980 6A7A                                  l868 4A3E  
                                l869 4A2C                                  l990 5760  
                                l894 4246                                  l991 57A6  
                                l895 4264                                  l887 4050  
                                l984 6AC8                                  l896 42BC  
                                l897 42AA                                  l988 5758  
                                _lg2 7E8D                                  _abs 6D7E  
                                _pad 6A64                                  _ovt 7E81  
                       ___awmod@sign 0006                                  wreg 0FE8  
         __end_of_Handle_Test_Events 5C8A                         ___flmul@aexp 001C  
                       ___flmul@bexp 0021                         ___flmul@sign 001B  
                       ___flmul@temp 0026                         ___flmul@prod 0022  
                       ___fltol@exp1 000A                                 l1002 58CA  
                               l1013 2EB6                                 l1016 2856  
                               l1105 3AD4                                 l1018 269A  
                               l1106 385C                                 ?_abs 000B  
                               l1205 6D0C                                 l1125 3992  
                               l1141 6C00                                 l1046 2C9E  
                               l1062 615C                                 l1070 5CA6  
                               l1151 62B4                                 l1072 5CAE  
                               l1082 677A                                 l1066 61B6  
                               l1331 248A                                 l1156 6D98  
                               l1165 5572                                 l1086 6782  
                               l1078 5DA0                                 l1270 02F4  
                               l1159 6DB0                                 l1168 54B6  
                               l1280 038A                                 l1185 6B6E  
                               l1097 3682                                 l1361 4596  
                               l1265 24C6                                 l1338 6E1C  
                               l1370 4726                                 l1290 044C  
                               l1179 6B1E                                 l1348 5360  
                               l1197 6628                                 l1365 45F4  
                               l1357 478E                                 l1294 04FE  
                               l1376 6D44                                 l1368 46B8  
                               l1298 055C                                 l6000 3D0E  
                               l6010 3D3C                                 l6002 3D1C  
                               l6020 3DA8                                 l6012 3D46  
                               l6004 3D28                                 l6100 683E  
                               l6022 3DB8                                 l6006 3D2C  
                               l6014 3D4C                                 l6110 6880  
                               l6102 6854                                 l6120 5DA2  
                               l6200 4790                                 l6040 3E3A  
                               l6032 3E12                                 l6016 3D72  
                               l6024 3DC8                                 l6008 3D3A  
                               l6112 689E                                 l6104 685C  
                               l7000 3630                                 l6130 5DD4  
                               l6122 5DA4                                 l6210 47CC  
                               l6202 479C                                 l6050 3E76  
                               l6042 3E42                                 l6034 3E1C  
                               l6026 3DEE                                 l6018 3DA6  
                               l6114 68AE                                 l6106 6868  
                               l7010 367A                                 l7002 363C  
                               l6140 5E16                                 l6132 5DE4  
                               l6124 5DB2                                 l6220 47FA  
                               l6212 47DC                                 l6204 47AA  
                               l6060 3ED0                                 l6052 3E8C  
                               l6044 3E46                                 l6036 3E2A  
                               l6028 3DFE                                 l6116 68B0  
                               l6108 6876                                 l7100 3A5E  
                               l7020 36EA                                 l7004 3650  
                               l6150 5E68                                 l6142 5E22  
                               l6134 5DE8                                 l6126 5DC2  
                               l6302 4A4E                                 l6310 4A96  
                               l6230 4830                                 l6222 4800  
                               l6214 47DE                                 l6206 47AC  
                               l6070 3F4C                                 l6062 3F0A  
                               l6046 3E56                                 l6038 3E2C  
                               l6118 68BA                                 l7030 3768  
                               l7022 3712                                 l7014 3688  
                               l7006 3660                                 ?_pad 000F  
                               l6160 5E9A                                 l6152 5E6A  
                               l6144 5E30                                 l6136 5DF8  
                               l6128 5DC6                                 l6320 4AFA  
                               l6312 4AB0                                 l6304 4A5A  
                               l6240 486E                                 l6232 4840  
                               l6224 480E                                 l6208 47BC  
                               l6216 47E4                                 l6400 4132  
                               l6080 3F78                                 l6072 3F5C  
                               l6056 3EB6                                 l6064 3F0C  
                               l6048 3E58                                 l7016 36AE  
                               l7008 3672                                 l7112 3AB2  
                               l7120 6BC6                                 l7200 4456  
                               l8000 663A                                 l6154 5E74  
                               l6146 5E3A                                 l6138 5E0E  
                               l6170 62D6                                 l6090 6CE8  
                               l6322 4AFE                                 l6314 4AC6  
                               l6306 4A68                                 l6242 487E  
                               l6250 489E                                 l6234 4842  
                               l6226 4810                                 l6218 47F4  
                               l6410 41A0                                 l6402 414C  
                               l6082 3F7A                                 l6074 3F62  
                               l6066 3F1C                                 l6058 3EC2  
                               l7106 3A88                                 l7042 37F4  
                               l7034 3784                                 l7018 36CA  
                               l7026 3738                                 l7122 6BDA  
                               l7130 6C56                                 l7210 44C4  
                               l7202 4474                                 l8010 666E  
                               l8002 6642                                 l6148 5E58  
                               l6156 5E7A                                 l6180 6316  
                               l6172 62DA                                 l6164 62B6  
                               l6092 6CEC                                 l6324 4B0C  
                               l6316 4AE0                                 l6308 4A92  
                               l6260 48DC                                 l6252 48AE  
                               l6244 4886                                 l6228 4820  
                               l6236 4848                                 l6500 5F58  
                               l6420 4236                                 l6412 41CA  
                               l6404 415C                                 l6340 3FA6  
                               l6076 3F64                                 l6068 3F2C  
                               l7108 3AA0                                 l7060 3894  
                               l7052 3844                                 l7044 380A  
                               l7036 37A4                                 l7028 374E  
                               l7124 6BF6                                 l7132 6C5E  
                               l7140 5576                                 l7300 6CB6  
                               l7220 454A                                 l7204 44A2  
                               l8020 66AA                                 l8012 6676  
                               l8004 6646                                 l8100 4E2A  
                               l6158 5E8A                                 l6190 6368  
                               l6182 6322                                 l6174 62E8  
                               l6166 62B8                                 l6086 6CCE  
                               l6326 4B12                                 l6318 4AF8  
                               l6270 4922                                 l6262 48EC  
                               l6254 48AE                                 l6246 488A  
                               l6238 4858                                 l6502 5FA8  
                               l6422 4244                                 l6414 4200  
                               l6406 4178                                 l6350 3FDE  
                               l6342 3FA8                                 l6510 6D5C  
                               l6078 3F6A                                 l6094 6D0E  
                               l7062 38B6                                 l7070 392C  
                               l7054 385E                                 l7046 3828  
                               l7038 37CE                                 l7118 6BBA  
                               l7134 6C66                                 l7310 6942  
                               l7142 5586                                 l7230 45E4  
                               l7222 4554                                 l8022 66B0  
                               l8014 667E                                 l8006 6654  
                               l8110 4E52                                 l8102 4E2E  
                               l6184 6330                                 l6192 636E  
                               l6176 62F8                                 l6168 62C6  
                               l6088 6CDA                                 l6328 4B14  
                               l6280 4970                                 l6272 4936  
                               l6264 48FC                                 l6504 5FAE  
                               l6432 42CC                                 l6440 4314  
                               l6424 4256                                 l6416 420E  
                               l6408 4184                                 l6360 400A  
                               l6352 3FEE                                 l6344 3FB8  
                               l6336 3F8C                                 l6512 6D6C  
                               l6600 624A                                 l6096 6D16  
                               l7080 3982                                 l7072 393C  
                               l7064 38E8                                 l7056 3880  
                               l7136 6C7A                                 l7128 6C48  
                               l7312 6948                                 l7304 68D2  
                               l7160 564C                                 l7152 5604  
                               l7144 5594                                 l7240 46C8  
                               l7232 460E                                 l7224 4560  
                               l7208 44B6                                 l7216 44E2  
                               l7400 0460                                 l8016 668C  
                               l8024 66B6                                 l8008 665C  
                               l8112 4E56                                 l8104 4E32  
                               l8040 4B2E                                 l8032 4B20  
                               l6530 601C                                 l6522 5FDC  
                               l6194 637E                                 l6186 634E  
                               l6178 630E                                 l6290 49B8  
                               l6282 4980                                 l6274 4944  
                               l6266 490C                                 l6258 48C2  
                               l6450 4376                                 l6442 432E  
                               l6434 42D8                                 l6426 4274  
                               l6418 422C                                 l6370 4060  
                               l6362 401A                                 l6354 3FF4  
                               l6346 3FC8                                 l6338 3F98  
                               l6610 62AC                                 l6098 682E  
                               l7090 39D6                                 l7082 398A  
                               l7066 391A                                 l7058 388C  
                               l7306 6916                                 l7170 56CC  
                               l7162 5658                                 l7154 560C  
                               l7146 55DA                                 l7330 653A  
                               l7314 6488                                 l7242 46D2  
                               l7234 462E                                 l7226 456E  
                               l7218 4536                                 l7410 04D6  
                               l7402 0478                                 l8026 66C6  
                               l8018 66A2                                 l8114 4E60  
                               l8106 4E36                                 l8042 4B48  
                               l8034 4B28                                 l6540 604C  
                               l6532 602A                                 l6524 6006  
                               l6516 5FB2                                 l6196 638E  
                               l6188 635E                                 l6700 589E  
                               l6292 49C6                                 l6284 4992  
                               l6276 4950                                 l6268 4912  
                               l6460 43A0                                 l6452 4386  
                               l6444 4342                                 l6436 42E6  
                               l6428 42A2                                 l6380 409A  
                               l6372 4070                                 l6364 402A  
                               l6356 3FFA                                 l6348 3FD8  
                               l6508 6D46                                 l5900 3B02  
                               l6604 6256                                 l7092 3A00  
                               l7076 3962                                 l7308 6924  
                               l7180 5714                                 l7172 56CE  
                               l7164 5694                                 l7156 5618  
                               l7148 55F0                                 l7324 64CC  
                               l7316 64B2                                 l7260 5196  
                               l7252 512E                                 l7244 46E8  
                               l7236 4642                                 l7228 45D6  
                               l7500 0954                                 l7420 056C  
                               l8028 66CE                                 l8116 4E64  
                               l8108 4E3A                                 l8060 4C14  
                               l8044 4B4C                                 l8036 4B2A  
                               l6550 6076                                 l6542 6056  
                               l6526 6008                                 l6518 5FC8  
                               l6702 58AE                                 l6286 49A8  
                               l6294 49D8                                 l6278 496E  
                               l6470 6784                                 l6454 4394  
                               l6446 435C                                 l6438 4310  
                               l6390 40EC                                 l6382 40B0  
                               l6366 403A                                 l6358 4008  
                               l5910 3B3A                                 l5902 3B12  
                               l6606 6268                                 l6630 53FA  
                               l6622 5362                                 l6614 6ACA  
                               l6710 24EA                                 l7086 3998  
                               l7078 3970                                 l7182 5716  
                               l7174 56D2                                 l7166 56A0  
                               l7158 564A                                 l7326 6518  
                               l7318 64C4                                 l7262 51B2  
                               l7270 5216                                 l7254 513E  
                               l7246 46FE                                 l7238 4680  
                               l7190 43F6                                 l7502 0A04  
                               l7510 0A9A                                 l7430 0642  
                               l7422 057A                                 l7414 050E  
                               l7406 04B0                                 l7350 00E4  
                               l7342 0090                                 l7334 0012  
                               l8118 4E82                                 l8062 4C1A  
                               l8054 4B5E                                 l8046 4B50  
                               l8038 4B2C                                 l6552 6086  
                               l6528 6018                                 l6296 49F6  
                               l6288 49AE                                 l6480 6824  
                               l6472 67B2                                 l6456 4396  
                               l6448 436C                                 l6392 40FA  
                               l6384 40BC                                 l6376 4084  
                               l6368 4040                                 l5920 3B68  
                               l5912 3B40                                 l5904 3B22  
                               l6464 6C02                                 l6640 5516  
                               l6624 5382                                 l6616 6AD8  
                               l6800 288C                                 l6720 2534  
                               l6712 24EE                                 l6560 6966  
                               l7096 3A2A                                 l7088 39B6  
                               l7176 56F6                                 l7168 56AE  
                               l7328 651E                                 l7280 52BE  
                               l7272 5232                                 l7264 51E6  
                               l7256 515A                                 l7192 4424  
                               l7600 13EE                                 l7520 0B1C  
                               l7512 0AAA                                 l7504 0A14  
                               l7440 06A2                                 l7432 065A  
                               l7424 05AE                                 l7416 052A  
                               l7408 04C8                                 l7360 015C  
                               l7352 0106                                 l7344 00AC  
                               l7336 0032                                 l8080 4D78  
                               l8072 4C74                                 l8064 4C36  
                               l8056 4B6C                                 l8048 4B54  
                               l6554 6096                                 l6538 6042  
                               l6298 4A24                                 l6482 682A  
                               l6474 67C2                                 l6490 5EEC  
                               l6458 439C                                 l6394 4106  
                               l6386 40D4                                 l6378 4090  
                               l5930 3B9C                                 l5922 3B6A  
                               l5914 3B52                                 l5906 3B24  
                               l6466 6C12                                 l6642 552A  
                               l6634 546A                                 l6626 53D8  
                               l6618 6AEC                                 l6650 6B20  
                               l6810 28DC                                 l6802 2892  
                               l6730 2582                                 l6722 2544  
                               l6714 2512                                 l6706 24C8  
                               l6570 69BC                                 l6562 697C  
                               l7098 3A40                                 l7178 5706  
                               l7290 5350                                 l7282 52C6  
                               l7274 5266                                 l7266 51EE  
                               l7258 518E                                 l7194 4432  
                               l7186 43B2                                 l7610 1516  
                               l7602 1422                                 l7522 0B84  
                               l7514 0AC6                                 l7506 0A2E  
                               l7450 06CA                                 l7442 06B0  
                               l7426 05BE                                 l7434 067E  
                               l7418 0540                                 l7370 0312  
                               l7362 0178                                 l7338 007A  
                               l8090 4DF2                                 l8082 4D92  
                               l8074 4C82                                 l8066 4C6A  
                               l8058 4BFA                                 l6556 60A6  
                               l6548 606A                                 l6580 6A86  
                               l6476 67F0                                 l6492 5F1A  
                               l6396 4116                                 l6388 40E0  
                               l5940 3BD6                                 l5924 3B7A  
                               l5932 3BA2                                 l5916 3B54  
                               l5908 3B2A                                 l6644 5552  
                               l6636 54A6                                 l6628 53EC  
                               l6652 6B34                                 l6660 6B54  
                               l6900 2DC2                                 l6820 2974  
                               l6804 28A4                                 l6812 28E4  
                               l6740 25BE                                 l6732 2594  
                               l6724 2550                                 l6716 251C  
                               l6708 24DC                                 l6572 69CC  
                               l6564 6984                                 l7284 52E2  
                               l7276 526E                                 l7268 520A  
                               l7196 4442                                 l7188 43C2  
                               l7700 1E7E                                 l7620 16A6  
                               l7612 1530                                 l7604 1456  
                               l7540 0C50                                 l7532 0BEC  
                               l7524 0B9C                                 l7516 0AFA  
                               l7508 0A62                                 l7460 0744  
                               l7452 06E0                                 l7428 0622  
                               l7380 0366                                 l7372 032E  
                               l7364 018C                                 l7356 013E  
                               l7348 00C2                                 l8092 4E00  
                               l8084 4D98                                 l8076 4CEC  
                               l6590 6D8C                                 l6582 6A96  
                               l6670 577E                                 l6662 5728  
                               l6478 6800                                 l6494 5F2A  
                               l6486 5EAC                                 l6398 4122  
                               l5950 3BEA                                 l5942 3BDA  
                               l5934 3BB2                                 l5926 3B8A  
                               l5918 3B5A                                 l6646 5562  
                               l6638 54DA                                 l6654 6B40  
                               l6910 2E16                                 l6902 2DC6  
                               l6830 2A58                                 l6822 29CC  
                               l6814 28EC                                 l6806 28B2  
                               l6750 261C                                 l6742 25C8  
                               l6734 2598                                 l6726 2558  
                               l6718 2524                                 l6574 69D6  
                               l6566 6990                                 l7294 6C8E  
                               l7278 528A                                 l7286 52EA  
                               l7710 1F68                                 l7702 1E8E  
                               l7630 17BC                                 l7622 16CC  
                               l7614 1564                                 l7606 14D2  
                               l7550 0D84                                 l7542 0CAE  
                               l7534 0C10                                 l7526 0BAC  
                               l7518 0B0C                                 l7454 06F0  
                               l7438 0692                                 l7390 03D4  
                               l7382 0374                                 l7366 01A8  
                               l7358 014E                                 l8094 4E04  
                               l8086 4DB4                                 l8078 4D44  
                               l7800 5976                                 l5880 6580  
                               l6584 6A9A                                 l6576 6A64  
                               l6680 57B6                                 l6672 578E  
                               l6664 574C                                 l6496 5F38  
                               l6488 5EDC                                 l5960 3BFE  
                               l5952 3BEE                                 l5944 3BDE  
                               l5936 3BC4                                 l5928 3B9A  
                               l6592 61B8                                 l6656 6B44  
                               l6920 2E92                                 l6912 2E46  
                               l6904 2DE4                                 l6840 2AF2  
                               l6832 2A8C                                 l6824 2A00  
                               l6816 28FC                                 l6808 28CA  
                               l6752 2620                                 l6736 259E  
                               l6728 255C                                 l6568 699E  
                               l7296 6CA0                                 l7288 531C  
                               l7720 2090                                 l7712 1FC0  
                               l7704 1EA8                                 l7640 18E0  
                               l7632 17F0                                 l7624 175E  
                               l7616 1598                                 l7608 1506  
                               l7560 0EFC                                 l7552 0D9E  
                               l7544 0D30                                 l7536 0C24  
                               l7528 0BC4                                 l7472 0778  
                               l7456 0712                                 l7368 02A6  
                               l8096 4E16                                 l8088 4DE8  
                               l7810 5A32                                 l7802 59B8  
                               l5882 6590                                 l6586 6AB8  
                               l6578 6A72                                 l6682 57BC  
                               l6690 583E                                 l6674 579A  
                               l6666 5768                                 l6498 5F4A  
                               l5962 3C02                                 l5954 3BF2  
                               l5946 3BE2                                 l5938 3BD2  
                               l5970 3C12                                 l6594 61D8  
                               l6658 6B50                                 l6922 2E9A  
                               l6914 2E54                                 l6906 2E00  
                               l6850 2BCA                                 l6842 2B26  
                               l6834 2AA0                                 l6818 2910  
                               l6826 2A06                                 l6770 26AA  
                               l6754 2626                                 l6738 25A6  
                               l6746 25E4                                 l6930 60DA  
                               l7298 6CA6                                 l7730 2248  
                               l7722 20E8                                 l7714 1FF4  
                               l7706 1EDC                                 l7650 1A08  
                               l7642 1938                                 l7634 184E  
                               l7626 1792                                 l7618 15CC  
                               l7570 106C                                 l7562 0F54  
                               l7554 0DF8                                 l7546 0D64  
                               l7538 0C40                                 l7490 0808  
                               l7474 079C                                 l7458 0736  
                               l7386 039E                                 l7378 0344  
                               l7394 03EA                                 l8098 4E1A  
                               l7804 59DA                                 l6588 6D7E  
                               l5884 659A                                 l6692 5858  
                               l6684 57FE                                 l6676 57A2  
                               l6668 5778                                 l5980 3C8C  
                               l5972 3C3E                                 l5964 3C06  
                               l5956 3BF6                                 l5948 3BE6  
                               l5892 3AD6                                 l6596 6216  
                               l6916 2E6C                                 l6908 2E08  
                               l6860 2BF0                                 l6844 2B7E  
                               l6852 2BCE                                 l6836 2AD2  
                               l6828 2A24                                 l6780 2792  
                               l6772 26B0                                 l6756 262E  
                               l6748 260A                                 l6764 264A  
                               l6940 6154                                 l6932 60E6  
                               l7740 23B8                                 l7732 22C4  
                               l7724 2140                                 l7716 2028  
                               l7708 1F10                                 l7660 1A30  
                               l7644 1990                                 l7636 1882  
                               l7628 17A2                                 l7580 1200  
                               l7572 10C4                                 l7564 0FAC  
                               l7556 0E6A                                 l7548 0D74  
                               l7492 0860                                 l7484 07BE  
                               l7468 0762                                 l7396 0406  
                               l7388 03AC                                 l7820 2F90  
                               l7812 2EB8                                 l7900 5ADE  
                               l7806 59EA                                 l5886 65B6  
                               l5878 6570                                 l6694 586E  
                               l6686 5804                                 l6678 57AE  
                               l5990 3CCC                                 l5982 3C90  
                               l5974 3C5A                                 l5966 3C0A  
                               l5958 3BFA                                 l5894 3AE2  
                               l6598 623E                                 l6918 2E7C  
                               l6870 2CBE                                 l6862 2BFC  
                               l6854 2BDE                                 l6846 2B82  
                               l6838 2AE2                                 l6782 27A6  
                               l6790 2822                                 l6774 26E4  
                               l6766 2664                                 l6942 6168  
                               l6934 60EA                                 l6926 60B8  
                               l6950 5C9A                                 l7910 4EB6  
                               l7750 24B2                                 l7742 23C8  
                               l7734 231C                                 l7726 2198  
                               l7718 205C                                 l7662 1A48  
                               l7670 1AC8                                 l7646 19C4  
                               l7590 1328                                 l7582 1234  
                               l7574 111C                                 l7566 0FE0  
                               l7558 0EC8                                 l7638 18B6  
                               l7494 0894                                 l7398 0414  
                               l7830 30A4                                 l7822 2F9E  
                               l7814 2EC6                                 l7902 5B28  
                               l7808 59F0                                 l5888 65E8  
                               l6696 5888                                 l6688 580A  
                               l5992 3CDC                                 l5984 3C9E  
                               l5976 3C6A                                 l5968 3C0E  
                               l5896 3AF0                                 l6880 2CF0  
                               l6872 2CCE                                 l6864 2C74  
                               l6856 2BE6                                 l6848 2BB6  
                               l6792 285E                                 l6784 27DA  
                               l6776 2722                                 l6944 6198  
                               l6936 6126                                 l6928 60D2  
                               l6960 5D02                                 l6952 5CB6  
                               l7920 4F74                                 l7912 4EC6  
                               l7744 240A                                 l7736 2350  
                               l7728 21F0                                 l7680 1B42  
                               l7672 1B10                                 l7648 19F8  
                               l7592 135C                                 l7584 128C  
                               l7576 1174                                 l7568 1014  
                               l7496 08EC                                 l7488 07D4  
                               l7840 3150                                 l7832 30DA  
                               l7824 3008                                 l7816 2F30  
                               l7760 6DEE                                 l7904 5B4C  
                               l7770 6DFA                                 l6698 5898  
                               l5986 3CA0                                 l5978 3C80  
                               l5898 3AF2                                 l6890 2D24  
                               l6882 2CF4                                 l6874 2CD2  
                               l6866 2C94                                 l6858 2BE8  
                               l6794 286E                                 l6786 27E2  
                               l6778 2756                                 l6946 619C  
                               l6938 6136                                 l6970 5D6A  
                               l6962 5D08                                 l6954 5CBE  
                               l7922 4F8C                                 l7914 4F16  
                               l7930 5008                                 l7746 245A  
                               l7738 2384                                 l7690 1C30  
                               l7682 1B9A                                 l7594 136C  
                               l7586 12C0                                 l7578 11CC  
                               l7498 0920                                 l7850 32B2  
                               l7842 3186                                 l7834 30FE  
                               l7826 3084                                 l7818 2F64  
                               l7762 6DF0                                 l7906 5B5C  
                               l7772 6E02                                 l7780 58E2  
                               l5996 3CF0                                 l5988 3CAA  
                               l6892 2D28                                 l6884 2CFA  
                               l6876 2CD8                                 l6868 2CB0  
                               l6796 287A                                 l6980 6702  
                               l6972 5D84                                 l6964 5D0E  
                               l6956 5CC6                                 l6948 5C8A  
                               l7940 50F4                                 l7932 501A  
                               l7924 4FC0                                 l7916 4F26  
                               l7908 4EA4                                 l7748 249A  
                               l7692 1C52                                 l7596 1386  
                               l7588 12F4                                 l7860 3394  
                               l7852 32E6                                 l7844 318A  
                               l7836 3134                                 l7828 3094  
                               l7764 6DF2                                 l7756 6DE6  
                               l7782 58F2                                 l5998 3D00  
                               l6894 2D2E                                 l6878 2CE0  
                               l6886 2D00                                 l6798 2884  
                               l6982 670E                                 l6958 5CCC  
                               l6966 5D42                                 l6990 35C8  
                               l7942 510E                                 l7934 502A  
                               l7926 4FD4                                 l7918 4F3E  
                               l7950 5B80                                 l7774 6E0C  
                               l7694 1E06                                 l7678 1B24  
                               l7686 1BAE                                 l7598 13BA  
                               l7870 3450                                 l7862 33C8  
                               l7854 331A                                 l7846 3198  
                               l7838 313E                                 l7766 6DF4  
                               l7758 6DEA                                 l7784 58F6  
                               l7792 5940                                 l7776 58CC  
                               l6896 2D86                                 l6888 2D12  
                               l6984 672A                                 l6976 66D8  
                               l6968 5D54                                 l6992 35EC  
                               l7944 5120                                 l7936 50A8  
                               l7928 4FF2                                 l7960 5C14  
                               l7952 5B92                                 l7696 1E16  
                               l7688 1C20                                 l7880 3556  
                               l7872 3460                                 l7864 33FC  
                               l7856 334E                                 l7848 3202  
                               l7768 6DF6                                 l7786 5906  
                               l7778 58DA                                 l7794 595E  
                               l6898 2DBA                                 l6986 6748  
                               l6978 66E0                                 l6994 35F8  
                               l7938 50DE                                 l7946 5128  
                               l7962 5C3A                                 l7970 5C84  
                               l7954 5BA8                                 l7698 1E4A  
                               l7882 35AE                                 l7874 348C  
                               l7866 340C                                 l7858 3360  
                               l7890 5A8C                                 l7796 596E  
                               l7788 592E                                 l6988 6754  
                               l6996 3606                                 l7980 6A38  
                               l7972 69EE                                 l7964 5C50  
                               l7956 5BB8                                 l7948 5B70  
                               l7884 35B6                                 l7876 34D8  
                               l7868 341C                                 l7892 5AC0  
                               l7798 5970                                 l6998 360C  
                               l7982 6A48                                 l7974 6A00  
                               l7966 5C6A                                 l7958 5BCA  
                               l7878 34EC                                 l7990 6446  
                               l7894 5AC6                                 l7886 5A40  
                               l7984 6A5E                                 l7976 6A10  
                               l7968 5C7C                                 l7992 6464  
                               l7896 5AD8                                 l7888 5A56  
                    Send_Data@buffer 0100                                 l7978 6A26  
                               l7994 646A                                 l7986 63A0  
                               l7898 5ADA                                 l7988 6438  
                               l7996 662A                                 l7998 662C  
                               STR_1 7FA1                                 STR_2 7F7F  
                               STR_3 7FC4                                 STR_4 7F92  
                               STR_5 7FAE                                 STR_6 7F62  
                               STR_7 7FCE                                 STR_8 7FB9  
                               STR_9 7F61                                 u8000 3FC8  
                               u7200 3B02                                 u8001 3FC4  
                               u7201 3AFE                                 u8010 4008  
                               u7210 3B12                                 u8011 4004  
                               u7211 3B0E                                 u8100 42A2  
                               u8020 401A                                 u7300 3C58  
                               u7220 3B52                                 u8101 429E  
                               u8021 4016                                 u7221 3B4E  
                               u7150 6580                                 u8110 42B8  
                               u8030 402A                                 u7310 3C80  
                               u7230 3B68                                 u7151 657C  
                               u8111 42B4                                 u8031 4026  
                               u7311 3C7C                                 u7231 3B64  
                               u7160 6590                                 u8200 5EDC  
                               u8120 42CC                                 u8040 4060  
                               u7400 3DB8                                 u7320 3C9E  
                               u7240 3B7A                                 u9000 6116  
                               u7161 658C                                 u8201 5ED8  
                               u8121 42C8                                 u8041 405C  
                               u7401 3DB4                                 u7321 3C9A  
                               u7241 3B76                                 u7170 65B6  
                               u8210 5F1A                                 u8130 42E6  
                               u8050 4070                                 u7410 3DEE  
                               u7330 3CBE                                 u7250 3B8A  
                               u9010 6126                                 u7171 65B2  
                               u8211 5F16                                 u8131 42E2  
                               u8051 406C                                 u7411 3DEA  
                               u7331 3CBA                                 u7251 3B86  
                               u9011 6122                                 u8300 6066  
                               u7180 65E8                                 u8220 5F38  
                               u8140 432E                                 u8060 41EA  
                               u7500 3EB6                                 u7420 3DFE  
                               u7340 3CCC                                 u7260 3BC4  
                               u9100 6702                                 u9020 6136  
                               u8301 6062                                 u7181 65E4  
                               u8221 5F34                                 u8141 432A  
                               u7501 3EB2                                 u7421 3DFA  
                               u7341 3CC8                                 u7261 3BC0  
                               u9101 66FE                                 u9021 6132  
                               u8310 6086                                 u8230 5F58  
                               u8150 435C                                 u8070 4244  
                               u7510 3ED0                                 u7430 3E2A  
                               u7350 3CDC                                 u7270 3BD2  
                               u7190 3AF0                                 u9110 677A  
                               u9030 6154                                 u8311 6082  
                               u8231 5F54                                 u8151 4358  
                               u8071 4240                                 u7511 3ECC  
                               u7431 3E26                                 u7351 3CD8  
                               u7271 3BCE                                 u7191 3AEC  
                               u9111 6776                                 u9031 6150  
                               u9007 610C                                 u8320 6096  
                               u8240 5FA8                                 u8160 4394  
                               u8080 4264                                 u7520 3F0A  
                               u7440 3E3A                                 u7360 3D0E  
                               u7280 3C3E                                 u8400 6216  
                               u9040 6188                                 u7600 6854  
                               u9200 391A                                 u9120 35EC  
                               u8321 6092                                 u8241 5FA4  
                               u8161 4390                                 u8081 4260  
                               u8065 41E0                                 u7521 3F06  
                               u7441 3E36                                 u7361 3D0A  
                               u7281 3C3A                                 u8401 6212  
                               u7601 6850                                 u9201 3916  
                               u9121 35E8                                 u8170 67B2  
                               u8090 4274                                 u8250 6D5C  
                               u7530 3F1C                                 u7450 3E56  
                               u7370 3D1C                                 u7290 3C56  
                               u8410 623E                                 u9050 61B6  
                               u7610 6876                                 u8330 697C  
                               u9210 393C                                 u9130 3630  
                               u8171 67AE                                 u8091 4270  
                               u8251 6D58                                 u7531 3F18  
                               u7451 3E52                                 u7371 3D18  
                               u7291 3C50                                 u8411 623A  
                               u9051 61B2                                 u7611 6872  
                               u8331 6978                                 u9211 3938  
                               u9131 362C                                 u8260 5FC8  
                               u7700 62E8                                 u8180 67F0  
                               u7540 3F2C                                 u7460 3E66  
                               u7380 3D3A                                 u8420 6268  
                               u7620 689E                                 u8340 699E  
                               u9060 5C9A                                 u9220 39D2  
                               u9140 36CA                                 u9300 56BE  
                               u8261 5FC4                                 u7701 62E4  
                               u8181 67EC                                 u7541 3F28  
                               u7461 3E62                                 u7381 3D36  
                               u8421 6264                                 u7621 689A  
                               u8341 699A                                 u9061 5C96  
                               u9221 39CE                                 u9141 36C6  
                               u9301 56BA                                 u8270 5FFC  
                               u7630 5DB2                                 u7710 630E  
                               u8190 6824                                 u7550 3F4C  
                               u7470 3E76                                 u7390 3D72  
                               u8510 5466                                 u8350 69BC  
                               u9070 5D54                                 u9150 36E6  
                               u9230 6BF6                                 u9310 56CC  
                               u7631 5DAE                                 u7711 630A  
                               u8191 6820                                 u7551 3F48  
                               u7471 3E72                                 u7391 3D6E  
                               u8511 5462                                 u9047 617E  
                               u8351 69B8                                 u9071 5D50  
                               u9151 36E2                                 u9231 6BF2  
                               u9311 56C8                                 u8280 602A  
                               u7640 5DD4                                 u7720 6330  
                               u8360 6A72                                 u8600 574C  
                               u7800 4830                                 u7560 3F5C  
                               u7480 3E8C                                 u8440 62A2  
                               u8520 548A                                 u9080 5D6A  
                               u9160 37A0                                 u9320 5706  
                               u9240 5586                                 u8281 6026  
                               u7641 5DD0                                 u7721 632C  
                               u8361 6A6E                                 u8601 5748  
                               u7801 482C                                 u7561 3F58  
                               u7481 3E88                                 u8441 629C  
                               u8505 540E                                 u9081 5D66  
                               u9161 379C                                 u9321 5702  
                               u9241 5582                                 u8290 603E  
                               u7650 5E0E                                 u7730 634E  
                               u8370 6AB8                                 u8610 5778  
                               u7810 486E                                 u7570 3F78  
                               u7490 3EA2                                 u8450 62A4  
                               u8530 54A6                                 u8506 5418  
                               u9090 5D84                                 u9170 3880  
                               u9330 5714                                 u9250 5594  
                               u9410 4536                                 u8291 603A  
                               u8275 5FF2                                 u7651 5E0A  
                               u7731 634A                                 u8371 6AB4  
                               u8611 5774                                 u7811 486A  
                               u7571 3F74                                 u7491 3E9E  
                               u8435 627A                                 u8531 54A2  
                               u8507 5428                                 u9091 5D80  
                               u9171 387C                                 u9331 5710  
                               u9251 5590                                 u9411 4532  
                               u7660 5E30                                 u7740 637E  
                               u8380 6D8C                                 u7580 6D0C  
                               u8620 578E                                 u7900 49F6  
                               u7820 48AE                                 u8540 54FA  
                               u8460 6AD8                                 u8700 2582  
                               u9180 38B6                                 u9260 55F0  
                               u9500 520A                                 u9420 456E  
                               u9340 43F6                                 u7661 5E2C  
                               u7741 637A                                 u8381 6D88  
                               u7581 6D08                                 u8621 578A  
                               u7901 49F2                                 u7821 48AA  
                               u8525 5480                                 u8461 6AD4  
                               u8701 257E                                 u9181 38B2  
                               u9261 55EC                                 u9501 5206  
                               u9421 456A                                 u9405 44F6  
                               u9341 43F2                                 u7670 5E58  
                               u8630 5858                                 u7910 4A24  
                               u7830 4922                                 u7750 47AA  
                               u8390 61F8                                 u8550 5516  
                               u8470 53AA                                 u7590 6D44  
                               u8710 2594                                 u9190 38E8  
                               u9270 5646                                 u9510 5232  
                               u9430 45E4                                 u9406 4500  
                               u9350 4424                                 u7671 5E54  
                               u8631 5854                                 u7911 4A20  
                               u7831 491E                                 u7751 47A6  
                               u8551 5512                                 u7591 6D40  
                               u8711 2590                                 u9191 38E4  
                               u9271 5642                                 u9511 522E  
                               u9431 45E0                                 u9407 4510  
                               u9351 4420                                 u7680 5E8A  
                               u8640 586E                                 u7920 4A3A  
                               u7840 4944                                 u7760 47BC  
                               u8560 5552                                 u8480 53D8  
                               u8800 286E                                 u8720 260A  
                               u9280 5690                                 u9520 528A  
                               u9440 4680                                 u9360 4432  
                               u9600 007A                                 u7681 5E86  
                               u8641 586A                                 u7921 4A36  
                               u7841 4940                                 u7761 47B8  
                               u8561 554E                                 u8545 54F0  
                               u8481 53D4                                 u8801 286A  
                               u8721 2606                                 u9281 568C  
                               u9521 5286                                 u9441 467C  
                               u9361 442E                                 u9601 0076  
                               u7690 62C6                                 u8650 5888  
                               u7930 4A4E                                 u7850 496E  
                               u7770 47CC                                 u8490 53FA  
                               u8570 6B6E                                 u8810 28A4  
                               u8730 261C                                 u9290 56AE  
                               u9530 52E2                                 u9450 46E8  
                               u9370 4474                                 u9610 00AC  
                               u7691 62C2                                 u8651 5884  
                               u7931 4A4A                                 u7851 496A  
                               u7771 47C8                                 u8395 61EE  
                               u8491 53F6                                 u8475 53A0  
                               u8571 6B6A                                 u8811 28A0  
                               u8731 2618                                 u9291 56AA  
                               u9531 52DE                                 u9451 46E4  
                               u9371 4470                                 u9611 00A8  
                               u8660 5898                                 u8580 5738  
                               u7940 4A68                                 u7860 4992  
                               u7780 480E                                 u8900 2C74  
                               u8820 28B2                                 u8740 2696  
                               u9460 46FE                                 u9380 44A2  
                               u9700 02A6                                 u9620 00E4  
                               u8661 5894                                 u8581 5732  
                               u7941 4A64                                 u7861 498E  
                               u7781 480A                                 u8901 2C70  
                               u8821 28AE                                 u8741 2692  
                               u9461 46FA                                 u9381 449E  
                               u9701 02A2                                 u9621 00E0  
                               u8590 573A                                 u7950 4AB0  
                               u7870 49A8                                 u7790 4820  
                               u8910 2CB0                                 u8830 28DC  
                               u8750 2722                                 u8670 24EA  
                               u9550 6CB6                                 u9390 44C4  
                               u9710 0312                                 u9630 0106  
                               u7951 4AAC                                 u7871 49A4  
                               u7791 481C                                 u8911 2CAC  
                               u8831 28D8                                 u8751 271E  
                               u8671 24E6                                 u9551 6CB2  
                               u9391 44C0                                 u9711 030E  
                               u9631 0102                                 u7960 4AE0  
                               u7880 49C6                                 u8920 2CBE  
                               u8840 2A24                                 u8760 2756  
                               u8680 2534                                 u9560 6916  
                               u9480 515A                                 u9800 04D6  
                               u9720 032E                                 u9640 015C  
                               u7961 4ADC                                 u7881 49C2  
                               u8921 2CBA                                 u8841 2A20  
                               u8761 2752                                 u8681 2530  
                               u9561 6912                                 u9545 52FC  
                               u9481 5156                                 u9801 04D2  
                               u9721 032A                                 u9641 0158  
                               u7970 4B0C                                 u7890 49E6  
                               u8930 2D12                                 u8850 2A8C  
                               u8770 2792                                 u8690 2544  
                               u9570 6942                                 u9490 51B2  
                               u9810 052A                                 u9730 0366  
                               u9650 0178                                 u7971 4B08  
                               u7891 49E2                                 u8931 2D0E  
                               u8851 2A88                                 u8771 278E  
                               u8691 2540                                 u9571 693E  
                               u9491 51AE                                 u9475 476A  
                               u9811 0526                                 u9731 0362  
                               u9651 0174                                 u7980 3FA6  
                               u8940 2DE4                                 u8860 2AD2  
                               u8780 281E                                 u9580 6964  
                               u9900 06E0                                 u9820 0540  
                               u9740 0374                                 u9660 01A8  
                               u7981 3FA2                                 u8941 2DE0  
                               u8861 2ACE                                 u8781 281A  
                               u9581 6960                                 u9901 06DC  
                               u9821 053C                                 u9741 0370  
                               u9661 01A4                                 u7990 3FB8  
                               u8950 2E00                                 u8870 2AE2  
                               u8790 2856                                 u9590 653A  
                               u9910 0712                                 u9830 055C  
                               u9750 03AC                                 u7991 3FB4  
                               u8951 2DFC                                 u8871 2ADE  
                               u8791 2852                                 u9591 6536  
                               u9911 070E                                 u9831 0558  
                               u9751 03A8                                 u8960 2E66  
                               u8880 2B7E                                 u9920 0736  
                               u9840 057A                                 u9760 0406  
                               u8961 2E60                                 u8881 2B7A  
                               u9921 0732                                 u9841 0576  
                               u9761 0402                                 u8970 2E68  
                               u8890 2BCA                                 u9930 0744  
                               u9850 05BE                                 u9770 0414  
                               u9690 026C                                 u8891 2BC6  
                               u9931 0740                                 u9851 05BA  
                               u9771 0410                                 u9675 01BE  
                               u8980 2E7C                                 u9940 079C  
                               u9860 0622                                 u9780 0478  
                               u9676 01C8                                 u8981 2E78  
                               u9941 0798                                 u9861 061E  
                               u9781 0474                                 u9685 0218  
                               u9677 01D8                                 u8990 60D2  
                               u9950 07BA                                 u9870 065A  
                               u9790 04C8                                 u9686 0222  
                               u8991 60CE                                 u9951 07B6  
                               u9871 0656                                 u9791 04C4  
                               u9695 0262                                 u9687 0232  
                               u9960 0AC6                                 u9880 06B0  
                               u9961 0AC2                                 u9881 06AC  
                               u9890 06C6                                 u9891 06C2  
                               u9980 0BE8                                 u9981 0BE4  
                               u9990 0C10                                 u9991 0C0C  
                               u9975 0B32                                 u9976 0B3C  
                               u9977 0B4C                       Read_Sensors@Rs 00A5  
                               abs@a 000B                                 _dbuf 035A  
                               _cp_h 7ECD                                 _cp_l 7EC9  
                               _dp_h 7E65                                 _dp_l 7E5D  
                               _labs 6ACA                                 _main 4B20  
                               _dtoa 5728                         _trigger_test 005E  
                               _prec 02FE                                 _powf 0012  
                               pad@i 0015                                 pad@p 0012  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf1 0FE7                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               _stoa 60B8                                 btemp 005F  
                               _utoa 5C8A                     __end_of_ADC_Init 6E0C  
                   __end_of_ADC_Read 6CCE                        ___fpclassifyf 61B8  
                               prodh 0FF4                                 prodl 0FF3  
                               start 000E                      ___fldiv@new_exp 0039  
                        main@voltage 03F4                 Read_Sensors@raw_temp 007D  
                    __end_of_HighISR 6DCE                 Read_Sensors@temp_adc 0095  
                       ___param_bank 0000            Handle_Commands@last_blink 0310  
                              ??_abs 000D                Read_Sensors@flame_adc 0097  
                              ??_pad 0014                    ?_Update_Actuators 0001  
                 ??_Update_Actuators 0068                   _Handle_Fire_Events 4EA4  
                      ___fltol@sign1 0009                      __end_of___aldiv 5EAC  
                              ?_labs 0001                      __end_of___almod 63A0  
                    __end_of___fladd 3F8C                                ?_main 0001  
                              ?_dtoa 0017                      __end_of___fldiv 4B20  
                    __end_of___flneg 6D7E                                STR_10 7F71  
                              STR_11 7FD7                                STR_12 7FE0  
                              STR_13 7F61                                STR_21 7FFB  
                              STR_14 7FF0                                STR_15 7F61  
                              STR_24 7FE9                                STR_16 7F44  
                              STR_17 7ED1                                STR_18 7FF7  
                    __end_of___awmod 66D8                      __end_of___flmul 43B2  
                              ?_powf 0068                      __end_of___flsub 6C48  
                    __end_of___fltol 60B8                                ?_stoa 0009  
                              u10010 1A2C                      __end_of___lldiv 68D2  
                              u10011 1A28                                u10020 1A48  
                              u10021 1A44                                u10005 0E0A  
                              u10030 1AC4                                u10031 1AC0  
                              ?_utoa 0017                                u10200 596E  
                              u10040 1B10                                u10201 596A  
                              u10105 1CD6                                u10041 1B0C  
                              u10210 59B8                                u10130 1E06  
                              u10106 1CE0                                u10050 1B42  
                              u10211 59B4                                u10131 1E02  
                              u10115 1D2E                                u10107 1CF0  
                              u10051 1B3E                                u10220 59CA  
                              u10116 1D38                                u10060 1B9A  
                              u10300 3186                                u10221 59C2  
                              u10125 1DCC                                u10117 1D48  
                              u10061 1B96                                u10301 3182  
                              u10126 1DD6                                u10310 3394  
                              u10127 1DE6                                u10311 3390  
                              u10240 5A32                                u10160 245A  
                              u10080 1C52                                u10320 340C  
                              u10400 5B3A                                u10241 5A2E  
                              u10161 2456                                u10145 23DA  
                              u10081 1C4E                                u10321 3408  
                              u10401 5B32                                u10170 24B2  
                              u10330 3450                                u10250 3094  
                              u10171 24AE                                u10155 2420  
                              u10075 1BDE                                u10331 344C  
                              u10251 3090                                u10180 58DA  
                              u10420 4EB6                                u10500 5B92  
                              u10156 242A                                u10076 1BE8  
                              u10340 34D8                                u10260 30DA  
                              u10181 58D6                                u10421 4EB2  
                              u10501 5B8E                                u10157 243A  
                              u10077 1BF8                                u10341 34D4  
                              u10261 30D6                                u10238 59CC  
                              u10190 58F2                                u10430 4EC6  
                              u10510 5BB8                                u10270 30FE  
                              u10350 5A56                                u10191 58EE  
                              u10431 4EC2                                u10511 5BB4  
                              u10095 1C6C                                u10271 30FA  
                              u10351 5A52                                u10440 4F26  
                              u10520 5BCA                                u10096 1C76  
                              u10280 3134                                u10360 5A8C  
                              u10600 663A                                u10441 4F22  
                              u10521 5BC6                                u10097 1C86  
                              u10281 3130                                u10361 5A88  
                              u10601 6636                                u10450 4F74  
                              u10530 6A00                                u10290 3150  
                              u10418 5B3E                                u10370 5AC0  
                              u10610 6654                                u10451 4F70  
                              u10531 69FC                                u10291 314C  
                              u10371 5ABC                                u10611 6650  
                              u10460 4FC0                                u10540 6A10  
                              u10380 5AD8                                u10620 666E  
                              u10700 4E52                                u10461 4FBC  
                              u10541 6A0C                                u10381 5AD4  
                              u10621 666A                                u10701 4E4E  
                              u10470 501A                                u10550 6A38  
                              u10390 5B28                                u10630 668C  
                              u10471 5016                                u10551 6A34  
                              u10391 5B24                                u10631 6688  
                              u10480 502A                                u10560 6A48  
                              u10640 66A2                      __end_of___llmod 69EE  
                              u10481 5026                                u10561 6A44  
                              u10641 669E                                u10490 5B80  
                              u10570 6438                                u10650 66C6  
                              u10491 5B7C                                u10571 6434  
                              u10651 66C2                                u10580 6464  
                              u10660 4C36                                u10581 6460  
                              u10661 4C32                                u10717 4B3A  
                              u10590 6486                                u10670 4DB4  
                              u10591 6482                                u10671 4DB0  
                              u10727 4C06                                u10680 4E16  
                              u10681 4E12                                u10737 4D84  
                              u10690 4E2A                                u10747 4E8E  
                              u10691 4E26                                u10757 6CA2  
                              u10767 5C5C                                u10777 5100  
                              i2l146 6DCA                                _RCREG 0FAE  
                       vfpfcnvrt@fmt 009D                                _SPBRG 0FAF  
                              _PORTB 0F81                                _TRISB 0F93  
                              _TXREG 0FAD                        ?_Read_Sensors 0001  
                ?_Handle_Fire_Events 0001                                _lg2_h 7E89  
                              _lg2_l 7E85                                _flags 0350  
                read_prec_or_width@c 0005                                _errno 0348  
                read_prec_or_width@n 0006                                _ivln2 7E79  
                              _fputc 6570                                _fputs 6CCE  
                    __end_of_ivln2_h 7EC9                      __end_of_ivln2_l 7E79  
                              _two24 7EBD                      __end_of_scalbnf 5362  
                              labs@a 0001                                pad@fp 000F  
                              _width 034A                                _putch 6E1C  
                              main@i 03F8                                dtoa@d 0018  
                              dtoa@i 0023                                dtoa@p 0020  
                              _sqrtf 43B2                                dtoa@s 0022  
                              dtoa@w 001E                                tablat 0FF5  
                              powf@i 0128                                powf@j 01A8  
                              powf@k 01A4                                powf@n 0188  
                              powf@r 0150                                powf@s 0160  
                              powf@t 01B0                                powf@u 017C  
                              powf@v 0180                                powf@w 0144  
                              powf@x 0068                                powf@y 006C  
                              powf@z 01B4                                stoa@l 0012  
                              stoa@p 000E                                stoa@s 000A  
                              ttemp5 0060                                ttemp6 0063  
                              ttemp7 0067                                utoa@d 0018  
                              utoa@i 0020                                utoa@p 001E  
                              utoa@w 001C                                status 0FD8  
                              wtemp8 0060                      __end_of_sprintf 6C8C  
                     ?___fpclassifyf 0001                        main@adc_value 03EE  
                         Send_Data@i 01C8                      _shutdown_system 0353  
               ??_Handle_Fire_Events 00E4                      __initialization 6B70  
                       __end_of_cp_h 7ED1                         __end_of_cp_l 7ECD  
                       __end_of_dp_h 7E6D                         __end_of_dp_l 7E65  
                       __end_of_labs 6B20                         __end_of_main 4EA4  
                       __end_of_dtoa 58CC                         __end_of_powf 24C8  
                       __end_of_stoa 61B8                         __end_of_utoa 5DA2  
            ?_Handle_Shutdown_Events 0001                    ??_Handle_Commands 000B  
               _Update_Actuators$751 005D                 __end_of_Apply_Filter 6570  
                             ??_labs 0005                               ??_main 00EE  
                             ??_dtoa 001C                               ??_powf 0070  
                             ??_stoa 000C                               ??_utoa 001C  
                      __activetblptr 0002                       ??_Read_Sensors 0079  
         __end_of_read_prec_or_width 6784                               _ADCON1 0FC1  
                             _ADCON2 0FC0                               ?_fputc 0001  
                   ___llmod@dividend 0001                               ?_fputs 0009  
                             _ADRESH 0FC4                               _ADRESL 0FC3  
                             ?_putch 0001                               ?_sqrtf 0001  
                             i2l5784 6DB4                               i2l5786 6DC2  
                             i2l5788 6DC8                               _MQ2_Ro 03D2  
                             _OSCCON 0FD3                        vfpfcnvrt@done 00A2  
                          ??_HighISR 0001                               _TRISA0 7C90  
                             _TRISA1 7C91                               _TRISA2 7C92  
                             _TRISC6 7CA6                               _TRISC7 7CA7  
       Handle_Fire_Events@water_used 00EA                     __end_of___xxtofl 5728  
                       vfprintf@cfmt 00AE       __end_of_Handle_Shutdown_Events 6A64  
                  __end_of_UART_Init 6DFA         Send_History_Event@event_type 00E0  
                             ___flge 5EAC                               ___fleq 6784  
       Handle_Fire_Events@start_data 0296                            ??___aldiv 0009  
                          ??___almod 0009                            ??___fladd 0049  
             Read_Sensors@last_pulse 034C                            ??___fldiv 0030  
                          ??___flneg 0005                            ??___awmod 0005  
                          ??___flmul 0017                            ??___flsub 0059  
                          ??___fltol 0005                            ??___lldiv 0009  
                          ??___llmod 0009                               _efgtoa 24C8  
                             _co_ppm 0338                      ADC_Read@channel 0005  
                             _floorf 5362                               _memcpy 6B20  
               read_prec_or_width@ap 0002                               clear_0 6B96  
         Handle_Fire_Events@end_data 0200                      ___awmod@divisor 0003  
                             isa$std 0001                      ___awmod@counter 0005  
                             pad@buf 0010                               dtoa@fp 0017  
                             _strcpy 6D0E                      Apply_Filter@sum 0060  
                             fputc@c 0001                               fputs@c 000C  
                             fputs@i 000D                               fputs@s 0009  
                          ??_scalbnf 002E                      ___fpclassifyf@e 0009  
           Send_History_Event@buffer 0100                            ?_ADC_Init 0001  
                    ___fpclassifyf@u 000B                            ?_ADC_Read 0001  
                    ___fpclassifyf@x 0001                         __mediumconst 7E5C  
         Handle_Fire_Events@duration 00E6                Apply_Filter@new_value 0051  
                             powf@s2 0190                               powf@t1 018C  
                             powf@t2 011C                               tblptrh 0FF7  
                             tblptrl 0FF6                               powf@y1 012C  
                             tblptru 0FF8         Send_History_Event@extra_data 00E2  
                             powf@ax 0178                               powf@is 0198  
                             powf@hx 0168                               powf@hy 0184  
                             powf@ix 01AC                               powf@iy 0194  
                             powf@sn 0164                               stoa@cp 0010  
                             stoa@fp 0009                               putch@c 0001  
                   __end_of_vfprintf 6C02                               utoa@fp 0017  
                             sqrtf@i 000E                               sqrtf@m 001A  
                             sqrtf@q 0012                               sqrtf@r 001E  
                             sqrtf@s 000A                               sqrtf@t 0016  
                             sqrtf@x 0001                            ??_sprintf 005D  
                         ___flge@ff1 0060                      ??___fpclassifyf 0005  
                         ___flge@ff2 0064                         ___xxtofl@arg 000B  
                       ___xxtofl@exp 000A                         ___xxtofl@val 0001  
                         ___fleq@ff1 0001                           ___fleq@ff2 0005  
                         __accesstop 0060              __end_of__initialization 6BAC  
              __end_of_TEST_DURATION 7EC5                           ___flneg@f1 0001  
Handle_Shutdown_Events@prev_shutdown 0351                        ___rparam_used 0001  
                         ___fltol@f1 0001              Read_Sensors@mq2_voltage 009D  
                     __pcstackCOMRAM 0001                         __pidataBANK3 6DCE  
                      __end_of_lg2_h 7E8D                        __end_of_lg2_l 7E89  
                      __end_of_ivln2 7E7D                        __end_of_fputc 662A  
                      __end_of_fputs 6D0E                        __end_of_two24 7EC1  
                      __end_of_putch 6E1E                        __end_of_sqrtf 4790  
                         __end_of_L1 7EBD                           __end_of_L2 7EB9  
                         __end_of_L3 7EB5                           __end_of_L4 7EB1  
                         __end_of_L5 7EAD                           __end_of_L6 7EA9  
                         __end_of_P1 7EA5                           __end_of_P2 7EA1  
                         __end_of_P3 7E9D                           __end_of_P4 7E99  
                         __end_of_P5 7E95                           __end_of_bp 7E75  
                         __end_of_cp 7E81                         _alarm_active 0357  
                         ??_ADC_Init 0001                           ??_ADC_Read 0003  
                _fire_trigger_sensor 03AA                    __end_of_Send_Data 6488  
                            ??_fputc 0004                              ??_fputs 000C  
                            ??_putch 0001                              ??_sqrtf 0005  
                         __pbssBANK2 02FA                           __pbssBANK3 0300  
                 _Handle_Test_Events 5B70                 __end_of_Read_Sensors 35C8  
                            ?___flge 0060                              ?___fleq 0001  
                ?_Handle_Test_Events 0001                              ?_efgtoa 0068  
                            ?_floorf 0041                              ?_memcpy 0001  
                         _co_samples 03BE                  Send_History_Event@i 01C8  
                            ?_strcpy 0001                            ?___xxtofl 0001  
                         _fire_alarm 0356                 ??_Handle_Test_Events 00E4  
                       _Apply_Filter 6488                              _HighISR 0008  
                    _Handle_Commands 58CC                      _flame_intensity 0340  
                            __Hparam 0000                              __Lparam 0000  
                            ___aldiv 5DA2                              ___almod 62B6  
                            ___fladd 3AD6                              ___fldiv 4790  
                            ___flneg 6D46                              ___awmod 662A  
                            ___flmul 3F8C                              ___flsub 6C02  
                            ___fltol 5FB2                              ___lldiv 682E  
                            ___llmod 6966                            ?_vfprintf 00AA  
                            __pcinit 6B70                              __ramtop 0800  
                            __ptext0 4B20                              __ptext1 662A  
                            __ptext2 5A40                              __ptext3 6DE6  
                            __ptext4 63A0                              __ptext5 2EB8  
                            __ptext6 0012                              __ptext7 43B2  
                            __ptext8 512E                              __ptext9 6488  
              read_prec_or_width@fmt 0001                              _ivln2_h 7EC5  
                            _ivln2_l 7E75                           ??___xxtofl 0005  
                            _scalbnf 512E                     ___awmod@dividend 0001  
         Read_Sensors@last_flow_time 030C                     ___aldiv@dividend 0001  
                            efgtoa@c 006D                              efgtoa@d 007B  
                            efgtoa@e 007F                              efgtoa@f 0069  
                    _prev_fire_alarm 0355                              efgtoa@g 0092  
                            efgtoa@h 0089                              efgtoa@i 0087  
                            efgtoa@l 008D                              efgtoa@m 007D  
                            efgtoa@n 0096                              efgtoa@p 0072  
                            efgtoa@t 0074                              efgtoa@u 0098  
                            efgtoa@w 0081                              _sprintf 6C48  
                     __pintcode_body 6DB2                 end_of_initialization 6BAC  
                            floorf@e 004F                              floorf@m 004B  
                            floorf@u 0051                              floorf@x 0041  
                            memcpy@d 0008                              memcpy@n 0005  
                            memcpy@s 000A                              fputc@fp 0003  
                      __Lmediumconst 7E5C                              int_func 6DB2  
                            fputs@fp 000B                   _read_prec_or_width 66D8  
                    ___lldiv@divisor 0005                      ___lldiv@counter 000D  
                            powf@p_h 01A0                              powf@p_l 016C  
                            powf@s_h 0174                              powf@t_h 0170  
                            powf@s_l 0130                              powf@t_l 0134  
                            powf@z_h 0120                              powf@z_l 0124  
                  __end_of_vfpfcnvrt 3AD6                           efgtoa@mode 0079  
                         efgtoa@sign 0091                            _RCSTAbits 0FAB  
                   ___aldiv@quotient 000B                              postdec1 0FE5  
                            postdec2 0FDD                  ?_read_prec_or_width 0001  
                            postinc0 0FEE                              postinc1 0FE6  
                            postinc2 0FDE                     vfpfcnvrt@convarg 00A3  
         __end_of_Send_History_Event 6966                           ??_vfprintf 005D  
                            sqrtf@ix 0022                              strcpy@d 0005  
                          _UART_Init 6DE6                            _PORTBbits 0F81  
                        ___fladd@grs 0050                        ___xxtofl@sign 0009  
                          _TRISBbits 0F93                 ??_read_prec_or_width 0003  
                        ___fldiv@grs 003B                          ___fldiv@rem 0034  
            __end_of_Handle_Commands 5A40                  Read_Sensors@mq2_adc 0099  
                        ___flmul@grs 001D                           _total_flow 0330  
                          _TXSTAbits 0FAC              Read_Sensors@temp_factor 0085  
                     __end_of___flge 5FB2                       __end_of___fleq 682E  
                        vfpfcnvrt@ap 009E                          vfpfcnvrt@cp 00A8  
                        vfpfcnvrt@fp 009C                           ?_UART_Init 0001  
                      _system_millis 02FA                       __end_of_efgtoa 2EB8  
                     __end_of_floorf 5574                       __end_of_memcpy 6B70  
                         floorf@F521 0300                  Apply_Filter@samples 0055  
                     __end_of_strcpy 6D46                  start_initialization 6B70  
                       _Read_Sensors 2EB8                          __end_of_lg2 7E91  
                        __end_of_abs 6DB2                          __end_of_pad 6ACA  
                        __end_of_ovt 7E85                     _Update_Actuators 5A40  
            Read_Sensors@rs_ro_ratio 00A1                            _Send_Data 63A0  
              __end_of___fpclassifyf 62B6                      ___llmod@divisor 0005  
                    ___llmod@counter 0009                          vfprintf@fmt 00AB  
                           ??___flge 0059                             ??___fleq 0009  
                           ??_efgtoa 006E                          __pdataBANK3 03D2  
                           ??_floorf 0045                             ??_memcpy 0007  
                           ??_strcpy 0005                            ___fladd@a 0045  
                          ___fladd@b 0041                       _Interrupt_Init 6E0C  
                          ___fldiv@a 002C                            ___fldiv@b 0028  
                          ___flmul@a 0013                            ___flmul@b 000F  
                        __pbssCOMRAM 005E                            ___flsub@a 0055  
                          ___flsub@b 0051                        __pcstackBANK0 0060  
                      __pcstackBANK1 0100                        __pcstackBANK2 0200  
                      __pcstackBANK3 03EA                     ?_Handle_Commands 0001  
                           ?_HighISR 0001                           ?_Send_Data 0001  
           ??_Handle_Shutdown_Events 005D                          _efgtoa$1375 0076  
                          _main$1833 03EA                            _dtoa$1344 001C  
                 _flame_base_voltage 033C                            __pintcode 0008  
                      __pmediumconst 7E5C                             ?___aldiv 0001  
                           ?___almod 0001                             ?___fladd 0041  
                           ?___fldiv 0028                             ?___flneg 0001  
                           ?___awmod 0001                             ?___flmul 000F  
                           ?___flsub 0051                             ?___fltol 0001  
                           ?___lldiv 0001                       _flame_detected 0359  
                           ?___llmod 0001                          ??_UART_Init 0001  
             __end_of_Interrupt_Init 6E1C                     ___almod@dividend 0001  
                        __smallconst 7E5C                             ?_scalbnf 0028  
                           _ADC_Init 6DFA                             _ADC_Read 6C8C  
                          _flow_rate 0334                             ?_sprintf 00B0  
                    main@cycle_count 03F2                      ___aldiv@divisor 0005  
                          _powf$1840 019C                            _powf$1841 0138  
                          _powf$1850 0114                            _powf$1842 0100  
                          _powf$1851 0118                            _powf$1843 0104  
                          _powf$1844 015C                            _powf$1837 0148  
                          _powf$1845 013C                            _powf$1838 0158  
                          _powf$1846 0140                            _powf$1839 014C  
                          _powf$1847 0108                            _powf$1848 010C  
                          _powf$1849 0110                      ___aldiv@counter 0009  
                      _TEST_DURATION 7EC1                             _PIR1bits 0F9E  
                           i2u709_40 6DC2                             i2u709_41 6DBE  
                           _RCONbits 0FD0                           powf@yisint 0154  
                          _vfpfcnvrt 35C8                      ?_Interrupt_Init 0001  
                         _ADCON0bits 0FC2                            main@i_676 03FA  
                 Read_Sensors@raw_co 00A9                   _Send_History_Event 68D2  
                 Read_Sensors@pulses 009B                           vfpfcnvrt@c 00A7  
                        _INTCON2bits 0FF1                          _INTCON3bits 0FF0  
                          copy_data0 6B84                      _test_start_flow 0314  
                ?_Send_History_Event 00E0                      _test_start_time 032C  
                        ??_Send_Data 005D           __end_of_Handle_Fire_Events 512E  
                           __Hrparam 0000                            memcpy@tmp 0007  
                         vfprintf@ap 00AD                             __Lrparam 0000  
                         vfprintf@fp 00AA                        Apply_Filter@i 0064  
                       _sample_index 0354             __end_of_Update_Actuators 5B70  
                         ?_vfpfcnvrt 009C                 ??_Send_History_Event 005D  
                 ___fpclassifyf@F465 0304                           sprintf@fmt 00B2  
                           ___xxtofl 5574            Read_Sensors@flame_voltage 0081  
                           __ptext10 6C8C                             __ptext11 6E0C  
                           __ptext20 5C8A                             __ptext12 5B70  
                           __ptext21 6966                             __ptext13 5574  
                           __ptext30 61B8                             __ptext22 682E  
                           __ptext14 69EE                             __ptext31 6C02  
                           __ptext23 60B8                             __ptext15 4EA4  
                           __ptext40 6CCE                             __ptext32 3AD6  
                           __ptext24 66D8                             __ptext16 68D2  
                           __ptext41 6570                             __ptext33 6D46  
                           __ptext25 24C8                             __ptext17 6C48  
                           __ptext42 6E1C                             __ptext34 3F8C  
                           __ptext26 6D0E                             __ptext18 6BBA  
                           __ptext43 6D7E                             __ptext35 5EAC  
                           __ptext27 6B20                             __ptext19 35C8  
                           __ptext44 62B6                             __ptext36 6784  
                           __ptext28 6ACA                             __ptext45 5DA2  
                           __ptext37 4790                             __ptext29 5362  
                           __ptext46 58CC                             __ptext38 5728  
                           __ptext47 5FB2                             __ptext39 6A64  
                           __ptext48 6DFA                   Handle_Commands@cmd 000F  
                    ___almod@divisor 0005                      ___almod@counter 0009  
                         strcpy@dest 0001                             efgtoa@fp 0068  
                           efgtoa@ne 0070                             efgtoa@pp 0078  
                           efgtoa@ou 0083         Handle_Test_Events@water_used 01FC  
                           isa$xinst 0000                             int$flags 005F  
                           _vfprintf 6BBA               _Handle_Shutdown_Events 69EE  
                         _INTCONbits 0FF2                         _temp_samples 03D6  
                           memcpy@d1 0001                             memcpy@s1 0003  
                           scalbnf@n 002C                             scalbnf@u 0032  
                           scalbnf@x 0028                             scalbnf@y 0036  
                   _fire_start_flame 0320                             intlevel2 0000  
                          sprintf@ap 00D4                        ?_Apply_Filter 0051  
                   ___lldiv@dividend 0001                            strcpy@src 0003  
        Handle_Test_Events@prev_test 0352          Handle_Test_Events@test_data 01CA  
                        efgtoa@nmode 007A                          ??_vfpfcnvrt 00A0  
         Update_Actuators@last_blink 0308                      _fire_start_flow 0318  
                        _temperature 0344                             sprintf@f 00D5  
                           sprintf@s 00B0                      _fire_start_temp 0324  
                    _fire_start_time 0328                    main@adc_value_677 03F0  
                   ___lldiv@quotient 0009                         ___aldiv@sign 000A  
                      ___fladd@signs 004D                       ??_Apply_Filter 0057  
                       ___almod@sign 000A                         ___fladd@aexp 004E  
                       ___fladd@bexp 004F                        _fire_start_co 031C  
