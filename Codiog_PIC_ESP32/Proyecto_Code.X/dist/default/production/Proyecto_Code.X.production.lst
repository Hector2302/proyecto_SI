

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Jul 06 23:57:51 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK3,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    37                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    38                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    39                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    45                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=3
    49                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    50                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=2
    52                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=1
    57                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=1
    58                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=3
    59                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    60                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=3
    61                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=3
    62                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=2
    63                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=2
    64                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1,group=2
    66                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Version 2.20
    76                           ; Generated 12/02/2020 GMT
    77                           ; 
    78                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4550 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000FE0                     bsr             equ	4064
   110   000FE9                     fsr0            equ	4073
   111   000FEA                     fsr0h           equ	4074
   112   000FE9                     fsr0l           equ	4073
   113   000FE1                     fsr1            equ	4065
   114   000FE2                     fsr1h           equ	4066
   115   000FE1                     fsr1l           equ	4065
   116   000FD9                     fsr2            equ	4057
   117   000FDA                     fsr2h           equ	4058
   118   000FD9                     fsr2l           equ	4057
   119   000FEF                     indf0           equ	4079
   120   000FE7                     indf1           equ	4071
   121   000FDF                     indf2           equ	4063
   122   000FF2                     intcon          equ	4082
   123   000000                     nvmcon          equ	0
   124   000FF9                     pcl             equ	4089
   125   000FFA                     pclath          equ	4090
   126   000FFB                     pclatu          equ	4091
   127   000FEB                     plusw0          equ	4075
   128   000FE3                     plusw1          equ	4067
   129   000FDB                     plusw2          equ	4059
   130   000FED                     postdec0        equ	4077
   131   000FE5                     postdec1        equ	4069
   132   000FDD                     postdec2        equ	4061
   133   000FEE                     postinc0        equ	4078
   134   000FE6                     postinc1        equ	4070
   135   000FDE                     postinc2        equ	4062
   136   000FEC                     preinc0         equ	4076
   137   000FE4                     preinc1         equ	4068
   138   000FDC                     preinc2         equ	4060
   139   000FF3                     prod            equ	4083
   140   000FF4                     prodh           equ	4084
   141   000FF3                     prodl           equ	4083
   142   000FD8                     status          equ	4056
   143   000FF5                     tablat          equ	4085
   144   000FF6                     tblptr          equ	4086
   145   000FF7                     tblptrh         equ	4087
   146   000FF6                     tblptrl         equ	4086
   147   000FF8                     tblptru         equ	4088
   148   000FFD                     tosl            equ	4093
   149   000FE8                     wreg            equ	4072
   150   000F62                     SPPDATA         equ	3938	;# 
   151   000F63                     SPPCFG          equ	3939	;# 
   152   000F64                     SPPEPS          equ	3940	;# 
   153   000F65                     SPPCON          equ	3941	;# 
   154   000F66                     UFRM            equ	3942	;# 
   155   000F66                     UFRML           equ	3942	;# 
   156   000F67                     UFRMH           equ	3943	;# 
   157   000F68                     UIR             equ	3944	;# 
   158   000F69                     UIE             equ	3945	;# 
   159   000F6A                     UEIR            equ	3946	;# 
   160   000F6B                     UEIE            equ	3947	;# 
   161   000F6C                     USTAT           equ	3948	;# 
   162   000F6D                     UCON            equ	3949	;# 
   163   000F6E                     UADDR           equ	3950	;# 
   164   000F6F                     UCFG            equ	3951	;# 
   165   000F70                     UEP0            equ	3952	;# 
   166   000F71                     UEP1            equ	3953	;# 
   167   000F72                     UEP2            equ	3954	;# 
   168   000F73                     UEP3            equ	3955	;# 
   169   000F74                     UEP4            equ	3956	;# 
   170   000F75                     UEP5            equ	3957	;# 
   171   000F76                     UEP6            equ	3958	;# 
   172   000F77                     UEP7            equ	3959	;# 
   173   000F78                     UEP8            equ	3960	;# 
   174   000F79                     UEP9            equ	3961	;# 
   175   000F7A                     UEP10           equ	3962	;# 
   176   000F7B                     UEP11           equ	3963	;# 
   177   000F7C                     UEP12           equ	3964	;# 
   178   000F7D                     UEP13           equ	3965	;# 
   179   000F7E                     UEP14           equ	3966	;# 
   180   000F7F                     UEP15           equ	3967	;# 
   181   000F80                     PORTA           equ	3968	;# 
   182   000F81                     PORTB           equ	3969	;# 
   183   000F82                     PORTC           equ	3970	;# 
   184   000F83                     PORTD           equ	3971	;# 
   185   000F84                     PORTE           equ	3972	;# 
   186   000F89                     LATA            equ	3977	;# 
   187   000F8A                     LATB            equ	3978	;# 
   188   000F8B                     LATC            equ	3979	;# 
   189   000F8C                     LATD            equ	3980	;# 
   190   000F8D                     LATE            equ	3981	;# 
   191   000F92                     TRISA           equ	3986	;# 
   192   000F92                     DDRA            equ	3986	;# 
   193   000F93                     TRISB           equ	3987	;# 
   194   000F93                     DDRB            equ	3987	;# 
   195   000F94                     TRISC           equ	3988	;# 
   196   000F94                     DDRC            equ	3988	;# 
   197   000F95                     TRISD           equ	3989	;# 
   198   000F95                     DDRD            equ	3989	;# 
   199   000F96                     TRISE           equ	3990	;# 
   200   000F96                     DDRE            equ	3990	;# 
   201   000F9B                     OSCTUNE         equ	3995	;# 
   202   000F9D                     PIE1            equ	3997	;# 
   203   000F9E                     PIR1            equ	3998	;# 
   204   000F9F                     IPR1            equ	3999	;# 
   205   000FA0                     PIE2            equ	4000	;# 
   206   000FA1                     PIR2            equ	4001	;# 
   207   000FA2                     IPR2            equ	4002	;# 
   208   000FA6                     EECON1          equ	4006	;# 
   209   000FA7                     EECON2          equ	4007	;# 
   210   000FA8                     EEDATA          equ	4008	;# 
   211   000FA9                     EEADR           equ	4009	;# 
   212   000FAB                     RCSTA           equ	4011	;# 
   213   000FAB                     RCSTA1          equ	4011	;# 
   214   000FAC                     TXSTA           equ	4012	;# 
   215   000FAC                     TXSTA1          equ	4012	;# 
   216   000FAD                     TXREG           equ	4013	;# 
   217   000FAD                     TXREG1          equ	4013	;# 
   218   000FAE                     RCREG           equ	4014	;# 
   219   000FAE                     RCREG1          equ	4014	;# 
   220   000FAF                     SPBRG           equ	4015	;# 
   221   000FAF                     SPBRG1          equ	4015	;# 
   222   000FB0                     SPBRGH          equ	4016	;# 
   223   000FB1                     T3CON           equ	4017	;# 
   224   000FB2                     TMR3            equ	4018	;# 
   225   000FB2                     TMR3L           equ	4018	;# 
   226   000FB3                     TMR3H           equ	4019	;# 
   227   000FB4                     CMCON           equ	4020	;# 
   228   000FB5                     CVRCON          equ	4021	;# 
   229   000FB6                     ECCP1AS         equ	4022	;# 
   230   000FB6                     CCP1AS          equ	4022	;# 
   231   000FB7                     ECCP1DEL        equ	4023	;# 
   232   000FB7                     CCP1DEL         equ	4023	;# 
   233   000FB8                     BAUDCON         equ	4024	;# 
   234   000FB8                     BAUDCTL         equ	4024	;# 
   235   000FBA                     CCP2CON         equ	4026	;# 
   236   000FBB                     CCPR2           equ	4027	;# 
   237   000FBB                     CCPR2L          equ	4027	;# 
   238   000FBC                     CCPR2H          equ	4028	;# 
   239   000FBD                     CCP1CON         equ	4029	;# 
   240   000FBD                     ECCP1CON        equ	4029	;# 
   241   000FBE                     CCPR1           equ	4030	;# 
   242   000FBE                     CCPR1L          equ	4030	;# 
   243   000FBF                     CCPR1H          equ	4031	;# 
   244   000FC0                     ADCON2          equ	4032	;# 
   245   000FC1                     ADCON1          equ	4033	;# 
   246   000FC2                     ADCON0          equ	4034	;# 
   247   000FC3                     ADRES           equ	4035	;# 
   248   000FC3                     ADRESL          equ	4035	;# 
   249   000FC4                     ADRESH          equ	4036	;# 
   250   000FC5                     SSPCON2         equ	4037	;# 
   251   000FC6                     SSPCON1         equ	4038	;# 
   252   000FC7                     SSPSTAT         equ	4039	;# 
   253   000FC8                     SSPADD          equ	4040	;# 
   254   000FC9                     SSPBUF          equ	4041	;# 
   255   000FCA                     T2CON           equ	4042	;# 
   256   000FCB                     PR2             equ	4043	;# 
   257   000FCB                     MEMCON          equ	4043	;# 
   258   000FCC                     TMR2            equ	4044	;# 
   259   000FCD                     T1CON           equ	4045	;# 
   260   000FCE                     TMR1            equ	4046	;# 
   261   000FCE                     TMR1L           equ	4046	;# 
   262   000FCF                     TMR1H           equ	4047	;# 
   263   000FD0                     RCON            equ	4048	;# 
   264   000FD1                     WDTCON          equ	4049	;# 
   265   000FD2                     HLVDCON         equ	4050	;# 
   266   000FD2                     LVDCON          equ	4050	;# 
   267   000FD3                     OSCCON          equ	4051	;# 
   268   000FD5                     T0CON           equ	4053	;# 
   269   000FD6                     TMR0            equ	4054	;# 
   270   000FD6                     TMR0L           equ	4054	;# 
   271   000FD7                     TMR0H           equ	4055	;# 
   272   000FD8                     STATUS          equ	4056	;# 
   273   000FD9                     FSR2            equ	4057	;# 
   274   000FD9                     FSR2L           equ	4057	;# 
   275   000FDA                     FSR2H           equ	4058	;# 
   276   000FDB                     PLUSW2          equ	4059	;# 
   277   000FDC                     PREINC2         equ	4060	;# 
   278   000FDD                     POSTDEC2        equ	4061	;# 
   279   000FDE                     POSTINC2        equ	4062	;# 
   280   000FDF                     INDF2           equ	4063	;# 
   281   000FE0                     BSR             equ	4064	;# 
   282   000FE1                     FSR1            equ	4065	;# 
   283   000FE1                     FSR1L           equ	4065	;# 
   284   000FE2                     FSR1H           equ	4066	;# 
   285   000FE3                     PLUSW1          equ	4067	;# 
   286   000FE4                     PREINC1         equ	4068	;# 
   287   000FE5                     POSTDEC1        equ	4069	;# 
   288   000FE6                     POSTINC1        equ	4070	;# 
   289   000FE7                     INDF1           equ	4071	;# 
   290   000FE8                     WREG            equ	4072	;# 
   291   000FE9                     FSR0            equ	4073	;# 
   292   000FE9                     FSR0L           equ	4073	;# 
   293   000FEA                     FSR0H           equ	4074	;# 
   294   000FEB                     PLUSW0          equ	4075	;# 
   295   000FEC                     PREINC0         equ	4076	;# 
   296   000FED                     POSTDEC0        equ	4077	;# 
   297   000FEE                     POSTINC0        equ	4078	;# 
   298   000FEF                     INDF0           equ	4079	;# 
   299   000FF0                     INTCON3         equ	4080	;# 
   300   000FF1                     INTCON2         equ	4081	;# 
   301   000FF2                     INTCON          equ	4082	;# 
   302   000FF3                     PROD            equ	4083	;# 
   303   000FF3                     PRODL           equ	4083	;# 
   304   000FF4                     PRODH           equ	4084	;# 
   305   000FF5                     TABLAT          equ	4085	;# 
   306   000FF6                     TBLPTR          equ	4086	;# 
   307   000FF6                     TBLPTRL         equ	4086	;# 
   308   000FF7                     TBLPTRH         equ	4087	;# 
   309   000FF8                     TBLPTRU         equ	4088	;# 
   310   000FF9                     PCLAT           equ	4089	;# 
   311   000FF9                     PC              equ	4089	;# 
   312   000FF9                     PCL             equ	4089	;# 
   313   000FFA                     PCLATH          equ	4090	;# 
   314   000FFB                     PCLATU          equ	4091	;# 
   315   000FFC                     STKPTR          equ	4092	;# 
   316   000FFD                     TOS             equ	4093	;# 
   317   000FFD                     TOSL            equ	4093	;# 
   318   000FFE                     TOSH            equ	4094	;# 
   319   000FFF                     TOSU            equ	4095	;# 
   320                           
   321                           	psect	idataBANK3
   322   006DD4                     __pidataBANK3:
   323                           	callstack 0
   324                           
   325                           ;initializer for _MQ2_Ro
   326   006DD4  0000               	dw	0
   327   006DD6  4120               	dw	16672
   328                           
   329                           ;initializer for _temp_samples
   330   006DD8  0000               	dw	0
   331   006DDA  41C8               	dw	16840
   332   006DDC  0000               	dw	0
   333   006DDE  41C8               	dw	16840
   334   006DE0  0000               	dw	0
   335   006DE2  41C8               	dw	16840
   336   006DE4  0000               	dw	0
   337   006DE6  41C8               	dw	16840
   338   006DE8  0000               	dw	0
   339   006DEA  41C8               	dw	16840
   340                           
   341                           	psect	mediumconst
   342   007E64                     __pmediumconst:
   343                           	callstack 0
   344   007E64  00                 	db	0
   345   007E65                     _dp_l:
   346                           	callstack 0
   347   007E65  0000               	dw	0
   348   007E67  0000               	dw	0
   349   007E69  CFDC               	dw	53212
   350   007E6B  35D1               	dw	13777
   351   007E6D                     __end_of_dp_l:
   352                           	callstack 0
   353   007E6D                     _dp_h:
   354                           	callstack 0
   355   007E6D  0000               	dw	0
   356   007E6F  0000               	dw	0
   357   007E71  C000               	dw	49152
   358   007E73  3F15               	dw	16149
   359   007E75                     __end_of_dp_h:
   360                           	callstack 0
   361   007E75                     _bp:
   362                           	callstack 0
   363   007E75  0000               	dw	0
   364   007E77  3F80               	dw	16256
   365   007E79  0000               	dw	0
   366   007E7B  3FC0               	dw	16320
   367   007E7D                     __end_of_bp:
   368                           	callstack 0
   369   007E7D  A570               	dw	42352
   370   007E7F  36EC               	dw	14060
   371   007E81                     __end_of_ivln2_l:
   372                           	callstack 0
   373   007E81  AA3B               	dw	43579
   374   007E83  3FB8               	dw	16312
   375   007E85                     __end_of_ivln2:
   376                           	callstack 0
   377   007E85  384F               	dw	14415
   378   007E87  3F76               	dw	16246
   379   007E89                     __end_of_cp:
   380                           	callstack 0
   381   007E89  AA3C               	dw	43580
   382   007E8B  3338               	dw	13112
   383   007E8D                     __end_of_ovt:
   384                           	callstack 0
   385   007E8D  BE8C               	dw	48780
   386   007E8F  35BF               	dw	13759
   387   007E91                     __end_of_lg2_l:
   388                           	callstack 0
   389   007E91  7200               	dw	29184
   390   007E93  3F31               	dw	16177
   391   007E95                     __end_of_lg2_h:
   392                           	callstack 0
   393   007E95  7218               	dw	29208
   394   007E97  3F31               	dw	16177
   395   007E99                     __end_of_lg2:
   396                           	callstack 0
   397   007E99  BB4C               	dw	47948
   398   007E9B  3331               	dw	13105
   399   007E9D                     __end_of_P5:
   400                           	callstack 0
   401   007E9D  EA0E               	dw	59918
   402   007E9F  B5DD               	dw	46557
   403   007EA1                     __end_of_P4:
   404                           	callstack 0
   405   007EA1  B355               	dw	45909
   406   007EA3  388A               	dw	14474
   407   007EA5                     __end_of_P3:
   408                           	callstack 0
   409   007EA5  0B61               	dw	2913
   410   007EA7  BB36               	dw	47926
   411   007EA9                     __end_of_P2:
   412                           	callstack 0
   413   007EA9  AAAB               	dw	43691
   414   007EAB  3E2A               	dw	15914
   415   007EAD                     __end_of_P1:
   416                           	callstack 0
   417   007EAD  F142               	dw	61762
   418   007EAF  3E53               	dw	15955
   419   007EB1                     __end_of_L6:
   420                           	callstack 0
   421   007EB1  3255               	dw	12885
   422   007EB3  3E6C               	dw	15980
   423   007EB5                     __end_of_L5:
   424                           	callstack 0
   425   007EB5  A305               	dw	41733
   426   007EB7  3E8B               	dw	16011
   427   007EB9                     __end_of_L4:
   428                           	callstack 0
   429   007EB9  AAAB               	dw	43691
   430   007EBB  3EAA               	dw	16042
   431   007EBD                     __end_of_L3:
   432                           	callstack 0
   433   007EBD  6DB7               	dw	28087
   434   007EBF  3EDB               	dw	16091
   435   007EC1                     __end_of_L2:
   436                           	callstack 0
   437   007EC1  999A               	dw	39322
   438   007EC3  3F19               	dw	16153
   439   007EC5                     __end_of_L1:
   440                           	callstack 0
   441   007EC5  0000               	dw	0
   442   007EC7  4B80               	dw	19328
   443   007EC9                     __end_of_two24:
   444                           	callstack 0
   445   007EC9  2710               	dw	10000
   446   007ECB  0000               	dw	0
   447   007ECD                     __end_of_TEST_DURATION:
   448                           	callstack 0
   449   007ECD  AA00               	dw	43520
   450   007ECF  3FB8               	dw	16312
   451   007ED1                     __end_of_ivln2_h:
   452                           	callstack 0
   453   007ED1  23C6               	dw	9158
   454   007ED3  B8F6               	dw	47350
   455   007ED5                     __end_of_cp_l:
   456                           	callstack 0
   457   007ED5  4000               	dw	16384
   458   007ED7  3F76               	dw	16246
   459   007ED9                     __end_of_cp_h:
   460                           	callstack 0
   461   007CA7                     _TRISC7         set	31911
   462   007CA6                     _TRISC6         set	31910
   463   007C92                     _TRISA2         set	31890
   464   007C91                     _TRISA1         set	31889
   465   007C90                     _TRISA0         set	31888
   466   000FAB                     _RCSTAbits      set	4011
   467   000FAF                     _SPBRG          set	4015
   468   000FF2                     _INTCONbits     set	4082
   469   000FD0                     _RCONbits       set	4048
   470   000FF1                     _INTCON2bits    set	4081
   471   000F93                     _TRISBbits      set	3987
   472   000FC3                     _ADRESL         set	4035
   473   000FC4                     _ADRESH         set	4036
   474   000FC0                     _ADCON2         set	4032
   475   000FC1                     _ADCON1         set	4033
   476   000FC2                     _ADCON0bits     set	4034
   477   000FAD                     _TXREG          set	4013
   478   000FAC                     _TXSTAbits      set	4012
   479   000FAE                     _RCREG          set	4014
   480   000F9E                     _PIR1bits       set	3998
   481   000F81                     _PORTBbits      set	3969
   482   000F81                     _PORTB          set	3969
   483   000F93                     _TRISB          set	3987
   484   000FD3                     _OSCCON         set	4051
   485   000FF0                     _INTCON3bits    set	4080
   486   007ED9                     STR_17:
   487   007ED9  7B                 	db	123
   488   007EDA  22                 	db	34
   489   007EDB  74                 	db	116	;'t'
   490   007EDC  22                 	db	34
   491   007EDD  3A                 	db	58	;':'
   492   007EDE  25                 	db	37
   493   007EDF  2E                 	db	46
   494   007EE0  31                 	db	49	;'1'
   495   007EE1  66                 	db	102	;'f'
   496   007EE2  2C                 	db	44
   497   007EE3  22                 	db	34
   498   007EE4  66                 	db	102	;'f'
   499   007EE5  64                 	db	100	;'d'
   500   007EE6  22                 	db	34
   501   007EE7  3A                 	db	58	;':'
   502   007EE8  25                 	db	37
   503   007EE9  64                 	db	100	;'d'
   504   007EEA  2C                 	db	44
   505   007EEB  22                 	db	34
   506   007EEC  66                 	db	102	;'f'
   507   007EED  69                 	db	105	;'i'
   508   007EEE  22                 	db	34
   509   007EEF  3A                 	db	58	;':'
   510   007EF0  25                 	db	37
   511   007EF1  2E                 	db	46
   512   007EF2  31                 	db	49	;'1'
   513   007EF3  66                 	db	102	;'f'
   514   007EF4  2C                 	db	44
   515   007EF5  22                 	db	34
   516   007EF6  63                 	db	99	;'c'
   517   007EF7  6F                 	db	111	;'o'
   518   007EF8  22                 	db	34
   519   007EF9  3A                 	db	58	;':'
   520   007EFA  25                 	db	37
   521   007EFB  2E                 	db	46
   522   007EFC  31                 	db	49	;'1'
   523   007EFD  66                 	db	102	;'f'
   524   007EFE  2C                 	db	44
   525   007EFF  22                 	db	34
   526   007F00  66                 	db	102	;'f'
   527   007F01  72                 	db	114	;'r'
   528   007F02  22                 	db	34
   529   007F03  3A                 	db	58	;':'
   530   007F04  25                 	db	37
   531   007F05  2E                 	db	46
   532   007F06  32                 	db	50	;'2'
   533   007F07  66                 	db	102	;'f'
   534   007F08  2C                 	db	44
   535   007F09  22                 	db	34
   536   007F0A  74                 	db	116	;'t'
   537   007F0B  66                 	db	102	;'f'
   538   007F0C  22                 	db	34
   539   007F0D  3A                 	db	58	;':'
   540   007F0E  25                 	db	37
   541   007F0F  2E                 	db	46
   542   007F10  32                 	db	50	;'2'
   543   007F11  66                 	db	102	;'f'
   544   007F12  2C                 	db	44
   545   007F13  22                 	db	34
   546   007F14  70                 	db	112	;'p'
   547   007F15  22                 	db	34
   548   007F16  3A                 	db	58	;':'
   549   007F17  25                 	db	37
   550   007F18  64                 	db	100	;'d'
   551   007F19  2C                 	db	44
   552   007F1A  22                 	db	34
   553   007F1B  61                 	db	97	;'a'
   554   007F1C  22                 	db	34
   555   007F1D  3A                 	db	58	;':'
   556   007F1E  25                 	db	37
   557   007F1F  64                 	db	100	;'d'
   558   007F20  2C                 	db	44
   559   007F21  22                 	db	34
   560   007F22  63                 	db	99	;'c'
   561   007F23  6D                 	db	109	;'m'
   562   007F24  64                 	db	100	;'d'
   563   007F25  22                 	db	34
   564   007F26  3A                 	db	58	;':'
   565   007F27  7B                 	db	123
   566   007F28  22                 	db	34
   567   007F29  74                 	db	116	;'t'
   568   007F2A  65                 	db	101	;'e'
   569   007F2B  73                 	db	115	;'s'
   570   007F2C  74                 	db	116	;'t'
   571   007F2D  22                 	db	34
   572   007F2E  3A                 	db	58	;':'
   573   007F2F  25                 	db	37
   574   007F30  64                 	db	100	;'d'
   575   007F31  2C                 	db	44
   576   007F32  22                 	db	34
   577   007F33  73                 	db	115	;'s'
   578   007F34  68                 	db	104	;'h'
   579   007F35  75                 	db	117	;'u'
   580   007F36  74                 	db	116	;'t'
   581   007F37  64                 	db	100	;'d'
   582   007F38  6F                 	db	111	;'o'
   583   007F39  77                 	db	119	;'w'
   584   007F3A  6E                 	db	110	;'n'
   585   007F3B  22                 	db	34
   586   007F3C  3A                 	db	58	;':'
   587   007F3D  25                 	db	37
   588   007F3E  64                 	db	100	;'d'
   589   007F3F  7D                 	db	125
   590   007F40  7D                 	db	125
   591   007F41  0D                 	db	13
   592   007F42  0A                 	db	10
   593   007F43  00                 	db	0
   594   007F44                     STR_16:
   595   007F44  7B                 	db	123
   596   007F45  22                 	db	34
   597   007F46  65                 	db	101	;'e'
   598   007F47  76                 	db	118	;'v'
   599   007F48  65                 	db	101	;'e'
   600   007F49  6E                 	db	110	;'n'
   601   007F4A  74                 	db	116	;'t'
   602   007F4B  22                 	db	34
   603   007F4C  3A                 	db	58	;':'
   604   007F4D  22                 	db	34
   605   007F4E  25                 	db	37
   606   007F4F  73                 	db	115	;'s'
   607   007F50  22                 	db	34
   608   007F51  2C                 	db	44
   609   007F52  22                 	db	34
   610   007F53  74                 	db	116	;'t'
   611   007F54  69                 	db	105	;'i'
   612   007F55  6D                 	db	109	;'m'
   613   007F56  65                 	db	101	;'e'
   614   007F57  22                 	db	34
   615   007F58  3A                 	db	58	;':'
   616   007F59  25                 	db	37
   617   007F5A  6C                 	db	108	;'l'
   618   007F5B  75                 	db	117	;'u'
   619   007F5C  25                 	db	37
   620   007F5D  73                 	db	115	;'s'
   621   007F5E  7D                 	db	125
   622   007F5F  0D                 	db	13
   623   007F60  0A                 	db	10
   624   007F61  00                 	db	0
   625   007F62                     STR_6:
   626   007F62  2C                 	db	44
   627   007F63  22                 	db	34
   628   007F64  64                 	db	100	;'d'
   629   007F65  75                 	db	117	;'u'
   630   007F66  72                 	db	114	;'r'
   631   007F67  61                 	db	97	;'a'
   632   007F68  74                 	db	116	;'t'
   633   007F69  69                 	db	105	;'i'
   634   007F6A  6F                 	db	111	;'o'
   635   007F6B  6E                 	db	110	;'n'
   636   007F6C  22                 	db	34
   637   007F6D  3A                 	db	58	;':'
   638   007F6E  25                 	db	37
   639   007F6F  6C                 	db	108	;'l'
   640   007F70  75                 	db	117	;'u'
   641   007F71  2C                 	db	44
   642   007F72  22                 	db	34
   643   007F73  77                 	db	119	;'w'
   644   007F74  61                 	db	97	;'a'
   645   007F75  74                 	db	116	;'t'
   646   007F76  65                 	db	101	;'e'
   647   007F77  72                 	db	114	;'r'
   648   007F78  22                 	db	34
   649   007F79  3A                 	db	58	;':'
   650   007F7A  25                 	db	37
   651   007F7B  2E                 	db	46
   652   007F7C  32                 	db	50	;'2'
   653   007F7D  66                 	db	102	;'f'
   654   007F7E  00                 	db	0
   655   007F7F                     STR_2:
   656   007F7F  74                 	db	116	;'t'
   657   007F80  65                 	db	101	;'e'
   658   007F81  6D                 	db	109	;'m'
   659   007F82  70                 	db	112	;'p'
   660   007F83  65                 	db	101	;'e'
   661   007F84  72                 	db	114	;'r'
   662   007F85  61                 	db	97	;'a'
   663   007F86  74                 	db	116	;'t'
   664   007F87  75                 	db	117	;'u'
   665   007F88  72                 	db	114	;'r'
   666   007F89  65                 	db	101	;'e'
   667   007F8A  5F                 	db	95	;'_'
   668   007F8B  73                 	db	115	;'s'
   669   007F8C  65                 	db	101	;'e'
   670   007F8D  6E                 	db	110	;'n'
   671   007F8E  73                 	db	115	;'s'
   672   007F8F  6F                 	db	111	;'o'
   673   007F90  72                 	db	114	;'r'
   674   007F91  00                 	db	0
   675   007F92                     STR_4:
   676   007F92  2C                 	db	44
   677   007F93  22                 	db	34
   678   007F94  73                 	db	115	;'s'
   679   007F95  65                 	db	101	;'e'
   680   007F96  6E                 	db	110	;'n'
   681   007F97  73                 	db	115	;'s'
   682   007F98  6F                 	db	111	;'o'
   683   007F99  72                 	db	114	;'r'
   684   007F9A  22                 	db	34
   685   007F9B  3A                 	db	58	;':'
   686   007F9C  22                 	db	34
   687   007F9D  25                 	db	37
   688   007F9E  73                 	db	115	;'s'
   689   007F9F  22                 	db	34
   690   007FA0  00                 	db	0
   691   007FA1                     STR_1:
   692   007FA1  66                 	db	102	;'f'
   693   007FA2  6C                 	db	108	;'l'
   694   007FA3  61                 	db	97	;'a'
   695   007FA4  6D                 	db	109	;'m'
   696   007FA5  65                 	db	101	;'e'
   697   007FA6  5F                 	db	95	;'_'
   698   007FA7  73                 	db	115	;'s'
   699   007FA8  65                 	db	101	;'e'
   700   007FA9  6E                 	db	110	;'n'
   701   007FAA  73                 	db	115	;'s'
   702   007FAB  6F                 	db	111	;'o'
   703   007FAC  72                 	db	114	;'r'
   704   007FAD  00                 	db	0
   705   007FAE                     STR_5:
   706   007FAE  66                 	db	102	;'f'
   707   007FAF  69                 	db	105	;'i'
   708   007FB0  72                 	db	114	;'r'
   709   007FB1  65                 	db	101	;'e'
   710   007FB2  5F                 	db	95	;'_'
   711   007FB3  73                 	db	115	;'s'
   712   007FB4  74                 	db	116	;'t'
   713   007FB5  61                 	db	97	;'a'
   714   007FB6  72                 	db	114	;'r'
   715   007FB7  74                 	db	116	;'t'
   716   007FB8  00                 	db	0
   717   007FB9                     STR_8:
   718   007FB9  74                 	db	116	;'t'
   719   007FBA  65                 	db	101	;'e'
   720   007FBB  73                 	db	115	;'s'
   721   007FBC  74                 	db	116	;'t'
   722   007FBD  5F                 	db	95	;'_'
   723   007FBE  73                 	db	115	;'s'
   724   007FBF  74                 	db	116	;'t'
   725   007FC0  61                 	db	97	;'a'
   726   007FC1  72                 	db	114	;'r'
   727   007FC2  74                 	db	116	;'t'
   728   007FC3  00                 	db	0
   729   007FC4                     STR_3:
   730   007FC4  63                 	db	99	;'c'
   731   007FC5  6F                 	db	111	;'o'
   732   007FC6  5F                 	db	95	;'_'
   733   007FC7  73                 	db	115	;'s'
   734   007FC8  65                 	db	101	;'e'
   735   007FC9  6E                 	db	110	;'n'
   736   007FCA  73                 	db	115	;'s'
   737   007FCB  6F                 	db	111	;'o'
   738   007FCC  72                 	db	114	;'r'
   739   007FCD  00                 	db	0
   740   007FCE                     STR_7:
   741   007FCE  66                 	db	102	;'f'
   742   007FCF  69                 	db	105	;'i'
   743   007FD0  72                 	db	114	;'r'
   744   007FD1  65                 	db	101	;'e'
   745   007FD2  5F                 	db	95	;'_'
   746   007FD3  65                 	db	101	;'e'
   747   007FD4  6E                 	db	110	;'n'
   748   007FD5  64                 	db	100	;'d'
   749   007FD6  00                 	db	0
   750   007FD7                     STR_11:
   751   007FD7  74                 	db	116	;'t'
   752   007FD8  65                 	db	101	;'e'
   753   007FD9  73                 	db	115	;'s'
   754   007FDA  74                 	db	116	;'t'
   755   007FDB  5F                 	db	95	;'_'
   756   007FDC  65                 	db	101	;'e'
   757   007FDD  6E                 	db	110	;'n'
   758   007FDE  64                 	db	100	;'d'
   759   007FDF  00                 	db	0
   760   007FE0                     STR_12:
   761   007FE0  73                 	db	115	;'s'
   762   007FE1  68                 	db	104	;'h'
   763   007FE2  75                 	db	117	;'u'
   764   007FE3  74                 	db	116	;'t'
   765   007FE4  64                 	db	100	;'d'
   766   007FE5  6F                 	db	111	;'o'
   767   007FE6  77                 	db	119	;'w'
   768   007FE7  6E                 	db	110	;'n'
   769   007FE8  00                 	db	0
   770   007FE9                     STR_24:
   771   007FE9  28                 	db	40
   772   007FEA  6E                 	db	110	;'n'
   773   007FEB  75                 	db	117	;'u'
   774   007FEC  6C                 	db	108	;'l'
   775   007FED  6C                 	db	108	;'l'
   776   007FEE  29                 	db	41
   777   007FEF  00                 	db	0
   778   007FF0                     STR_14:
   779   007FF0  72                 	db	114	;'r'
   780   007FF1  65                 	db	101	;'e'
   781   007FF2  73                 	db	115	;'s'
   782   007FF3  75                 	db	117	;'u'
   783   007FF4  6D                 	db	109	;'m'
   784   007FF5  65                 	db	101	;'e'
   785   007FF6  00                 	db	0
   786   007FF7                     STR_18:
   787   007FF7  69                 	db	105	;'i'
   788   007FF8  6E                 	db	110	;'n'
   789   007FF9  66                 	db	102	;'f'
   790   007FFA  00                 	db	0
   791   007FFB                     STR_21:
   792   007FFB  6E                 	db	110	;'n'
   793   007FFC  61                 	db	97	;'a'
   794   007FFD  6E                 	db	110	;'n'
   795   007FFE  00                 	db	0
   796   007FFB                     STR_22          equ	STR_21
   797   007FFB                     STR_23          equ	STR_21
   798   007FF7                     STR_19          equ	STR_18
   799   007FF7                     STR_20          equ	STR_18
   800   007F71                     STR_10          equ	STR_6+15
   801   007F61                     STR_9           equ	STR_16+29
   802   007F61                     STR_13          equ	STR_16+29
   803   007F61                     STR_15          equ	STR_16+29
   804   007FFF  00                 	db	0	; dummy byte at the end
   805   007E64                     __smallconst    set	__pmediumconst
   806   007E64                     __mediumconst   set	__pmediumconst
   807   000002                     __activetblptr  equ	2
   808                           
   809                           ; #config settings
   810                           
   811                           	psect	cinit
   812   006B20                     __pcinit:
   813                           	callstack 0
   814   006B20                     start_initialization:
   815                           	callstack 0
   816   006B20                     __initialization:
   817                           	callstack 0
   818                           
   819                           ; Initialize objects allocated to BANK3 (24 bytes)
   820                           ; load TBLPTR registers with __pidataBANK3
   821   006B20  0ED4               	movlw	low __pidataBANK3
   822   006B22  6EF6               	movwf	tblptrl,c
   823   006B24  0E6D               	movlw	high __pidataBANK3
   824   006B26  6EF7               	movwf	tblptrh,c
   825   006B28  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   826   006B2A  6EF8               	movwf	tblptru,c
   827   006B2C  EE03  F0D0         	lfsr	0,__pdataBANK3
   828   006B30  EE10 F018          	lfsr	1,24
   829   006B34                     copy_data0:
   830   006B34  0009               	tblrd		*+
   831   006B36  CFF5 FFEE          	movff	tablat,postinc0
   832   006B3A  50E5               	movf	postdec1,w,c
   833   006B3C  50E1               	movf	fsr1l,w,c
   834   006B3E  E1FA               	bnz	copy_data0
   835                           
   836                           ; Clear objects allocated to BANK3 (208 bytes)
   837   006B40  EE03  F000         	lfsr	0,__pbssBANK3
   838   006B44  0ED0               	movlw	208
   839   006B46                     clear_0:
   840   006B46  6AEE               	clrf	postinc0,c
   841   006B48  06E8               	decf	wreg,f,c
   842   006B4A  E1FD               	bnz	clear_0
   843                           
   844                           ; Clear objects allocated to BANK2 (6 bytes)
   845   006B4C  0102               	movlb	2
   846   006B4E  6BFF               	clrf	(__pbssBANK2+5)& (0+255),b
   847   006B50  6BFE               	clrf	(__pbssBANK2+4)& (0+255),b
   848   006B52  6BFD               	clrf	(__pbssBANK2+3)& (0+255),b
   849   006B54  6BFC               	clrf	(__pbssBANK2+2)& (0+255),b
   850   006B56  6BFB               	clrf	(__pbssBANK2+1)& (0+255),b
   851   006B58  6BFA               	clrf	__pbssBANK2& (0+255),b
   852                           
   853                           ; Clear objects allocated to BANK0 (2 bytes)
   854   006B5A  0100               	movlb	0
   855   006B5C  6BEF               	clrf	(__pbssBANK0+1)& (0+255),b
   856   006B5E  6BEE               	clrf	__pbssBANK0& (0+255),b
   857                           
   858                           ; Clear objects allocated to COMRAM (1 bytes)
   859   006B60  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   860   006B62                     end_of_initialization:
   861                           	callstack 0
   862   006B62                     __end_of__initialization:
   863                           	callstack 0
   864   006B62  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   865   006B64  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   866   006B66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   867   006B68  6EF8               	movwf	tblptru,c
   868   006B6A  0100               	movlb	0
   869   006B6C  EF8C  F025         	goto	_main	;jump to C main() function
   870                           
   871                           	psect	bssCOMRAM
   872   00005E                     __pbssCOMRAM:
   873                           	callstack 0
   874   00005E                     _flame_detected:
   875                           	callstack 0
   876   00005E                     	ds	1
   877                           
   878                           	psect	bssBANK0
   879   0000EE                     __pbssBANK0:
   880                           	callstack 0
   881   0000EE                     _trigger_test:
   882                           	callstack 0
   883   0000EE                     	ds	1
   884   0000EF                     _shutdown_system:
   885                           	callstack 0
   886   0000EF                     	ds	1
   887                           
   888                           	psect	bssBANK2
   889   0002FA                     __pbssBANK2:
   890                           	callstack 0
   891   0002FA                     _system_millis:
   892                           	callstack 0
   893   0002FA                     	ds	4
   894   0002FE                     _prec:
   895                           	callstack 0
   896   0002FE                     	ds	2
   897                           
   898                           	psect	bssBANK3
   899   000300                     __pbssBANK3:
   900                           	callstack 0
   901   000300                     floorf@F521:
   902                           	callstack 0
   903   000300                     	ds	4
   904   000304                     ___fpclassifyf@F465:
   905                           	callstack 0
   906   000304                     	ds	4
   907   000308                     Update_Actuators@last_blink:
   908                           	callstack 0
   909   000308                     	ds	4
   910   00030C                     Read_Sensors@last_flow_time:
   911                           	callstack 0
   912   00030C                     	ds	4
   913   000310                     Handle_Commands@last_blink:
   914                           	callstack 0
   915   000310                     	ds	4
   916   000314                     _test_start_flow:
   917                           	callstack 0
   918   000314                     	ds	4
   919   000318                     _fire_start_flow:
   920                           	callstack 0
   921   000318                     	ds	4
   922   00031C                     _fire_start_co:
   923                           	callstack 0
   924   00031C                     	ds	4
   925   000320                     _fire_start_flame:
   926                           	callstack 0
   927   000320                     	ds	4
   928   000324                     _fire_start_temp:
   929                           	callstack 0
   930   000324                     	ds	4
   931   000328                     _fire_start_time:
   932                           	callstack 0
   933   000328                     	ds	4
   934   00032C                     _test_start_time:
   935                           	callstack 0
   936   00032C                     	ds	4
   937   000330                     _total_flow:
   938                           	callstack 0
   939   000330                     	ds	4
   940   000334                     _flow_rate:
   941                           	callstack 0
   942   000334                     	ds	4
   943   000338                     _co_ppm:
   944                           	callstack 0
   945   000338                     	ds	4
   946   00033C                     _flame_base_voltage:
   947                           	callstack 0
   948   00033C                     	ds	4
   949   000340                     _flame_intensity:
   950                           	callstack 0
   951   000340                     	ds	4
   952   000344                     _temperature:
   953                           	callstack 0
   954   000344                     	ds	4
   955   000348                     _errno:
   956                           	callstack 0
   957   000348                     	ds	2
   958   00034A                     _width:
   959                           	callstack 0
   960   00034A                     	ds	2
   961   00034C                     Read_Sensors@last_pulse:
   962                           	callstack 0
   963   00034C                     	ds	2
   964   00034E                     _pulse_count:
   965                           	callstack 0
   966   00034E                     	ds	2
   967   000350                     _flags:
   968                           	callstack 0
   969   000350                     	ds	1
   970   000351                     Handle_Shutdown_Events@prev_shutdown:
   971                           	callstack 0
   972   000351                     	ds	1
   973   000352                     Handle_Test_Events@prev_test:
   974                           	callstack 0
   975   000352                     	ds	1
   976   000353                     _sample_index:
   977                           	callstack 0
   978   000353                     	ds	1
   979   000354                     _prev_fire_alarm:
   980                           	callstack 0
   981   000354                     	ds	1
   982   000355                     _fire_alarm:
   983                           	callstack 0
   984   000355                     	ds	1
   985   000356                     _alarm_active:
   986                           	callstack 0
   987   000356                     	ds	1
   988   000357                     _pump_active:
   989                           	callstack 0
   990   000357                     	ds	1
   991   000358                     _dbuf:
   992                           	callstack 0
   993   000358                     	ds	80
   994   0003A8                     _fire_trigger_sensor:
   995                           	callstack 0
   996   0003A8                     	ds	20
   997   0003BC                     _co_samples:
   998                           	callstack 0
   999   0003BC                     	ds	20
  1000                           
  1001                           	psect	dataBANK3
  1002   0003D0                     __pdataBANK3:
  1003                           	callstack 0
  1004   0003D0                     _MQ2_Ro:
  1005                           	callstack 0
  1006   0003D0                     	ds	4
  1007   0003D4                     _temp_samples:
  1008                           	callstack 0
  1009   0003D4                     	ds	20
  1010                           
  1011                           	psect	cstackBANK3
  1012   0003E8                     __pcstackBANK3:
  1013                           	callstack 0
  1014   0003E8                     _main$1833:
  1015                           	callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x0
  1018   0003E8                     	ds	4
  1019   0003EC                     main@adc_value:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x4
  1023   0003EC                     	ds	2
  1024   0003EE                     main@adc_value_677:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x6
  1028   0003EE                     	ds	2
  1029   0003F0                     main@cycle_count:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x8
  1033   0003F0                     	ds	2
  1034   0003F2                     main@voltage:
  1035                           	callstack 0
  1036                           
  1037                           ; 4 bytes @ 0xA
  1038   0003F2                     	ds	4
  1039   0003F6                     main@i:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0xE
  1043   0003F6                     	ds	2
  1044   0003F8                     main@i_676:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x10
  1048   0003F8                     	ds	2
  1049                           
  1050                           	psect	cstackBANK2
  1051   000200                     __pcstackBANK2:
  1052                           	callstack 0
  1053   000200                     Handle_Fire_Events@end_data:
  1054                           	callstack 0
  1055                           
  1056                           ; 150 bytes @ 0x0
  1057   000200                     	ds	150
  1058   000296                     Handle_Fire_Events@start_data:
  1059                           	callstack 0
  1060                           
  1061                           ; 100 bytes @ 0x96
  1062   000296                     	ds	100
  1063                           
  1064                           	psect	cstackBANK1
  1065   000100                     __pcstackBANK1:
  1066                           	callstack 0
  1067   000100                     _powf$1842:
  1068                           	callstack 0
  1069   000100                     Send_Data@buffer:
  1070                           	callstack 0
  1071   000100                     Send_History_Event@buffer:
  1072                           	callstack 0
  1073                           
  1074                           ; 200 bytes @ 0x0
  1075   000100                     	ds	4
  1076   000104                     _powf$1843:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x4
  1080   000104                     	ds	4
  1081   000108                     _powf$1847:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x8
  1085   000108                     	ds	4
  1086   00010C                     _powf$1848:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0xC
  1090   00010C                     	ds	4
  1091   000110                     _powf$1849:
  1092                           	callstack 0
  1093                           
  1094                           ; 4 bytes @ 0x10
  1095   000110                     	ds	4
  1096   000114                     _powf$1850:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x14
  1100   000114                     	ds	4
  1101   000118                     _powf$1851:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x18
  1105   000118                     	ds	4
  1106   00011C                     powf@t2:
  1107                           	callstack 0
  1108                           
  1109                           ; 4 bytes @ 0x1C
  1110   00011C                     	ds	4
  1111   000120                     powf@z_h:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x20
  1115   000120                     	ds	4
  1116   000124                     powf@z_l:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x24
  1120   000124                     	ds	4
  1121   000128                     powf@i:
  1122                           	callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x28
  1125   000128                     	ds	4
  1126   00012C                     powf@y1:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x2C
  1130   00012C                     	ds	4
  1131   000130                     powf@s_l:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x30
  1135   000130                     	ds	4
  1136   000134                     powf@t_l:
  1137                           	callstack 0
  1138                           
  1139                           ; 4 bytes @ 0x34
  1140   000134                     	ds	4
  1141   000138                     _powf$1841:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x38
  1145   000138                     	ds	4
  1146   00013C                     _powf$1845:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x3C
  1150   00013C                     	ds	4
  1151   000140                     _powf$1846:
  1152                           	callstack 0
  1153                           
  1154                           ; 4 bytes @ 0x40
  1155   000140                     	ds	4
  1156   000144                     powf@w:
  1157                           	callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x44
  1160   000144                     	ds	4
  1161   000148                     _powf$1837:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x48
  1165   000148                     	ds	4
  1166   00014C                     _powf$1839:
  1167                           	callstack 0
  1168                           
  1169                           ; 4 bytes @ 0x4C
  1170   00014C                     	ds	4
  1171   000150                     powf@r:
  1172                           	callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x50
  1175   000150                     	ds	4
  1176   000154                     powf@yisint:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x54
  1180   000154                     	ds	4
  1181   000158                     _powf$1838:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x58
  1185   000158                     	ds	4
  1186   00015C                     _powf$1844:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x5C
  1190   00015C                     	ds	4
  1191   000160                     powf@s:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x60
  1195   000160                     	ds	4
  1196   000164                     powf@sn:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x64
  1200   000164                     	ds	4
  1201   000168                     powf@hx:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x68
  1205   000168                     	ds	4
  1206   00016C                     powf@p_l:
  1207                           	callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x6C
  1210   00016C                     	ds	4
  1211   000170                     powf@t_h:
  1212                           	callstack 0
  1213                           
  1214                           ; 4 bytes @ 0x70
  1215   000170                     	ds	4
  1216   000174                     powf@s_h:
  1217                           	callstack 0
  1218                           
  1219                           ; 4 bytes @ 0x74
  1220   000174                     	ds	4
  1221   000178                     powf@ax:
  1222                           	callstack 0
  1223                           
  1224                           ; 4 bytes @ 0x78
  1225   000178                     	ds	4
  1226   00017C                     powf@u:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x7C
  1230   00017C                     	ds	4
  1231   000180                     powf@v:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x80
  1235   000180                     	ds	4
  1236   000184                     powf@hy:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x84
  1240   000184                     	ds	4
  1241   000188                     powf@n:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x88
  1245   000188                     	ds	4
  1246   00018C                     powf@t1:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x8C
  1250   00018C                     	ds	4
  1251   000190                     powf@s2:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x90
  1255   000190                     	ds	4
  1256   000194                     powf@iy:
  1257                           	callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x94
  1260   000194                     	ds	2
  1261   000196                     Send_Data@i:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x96
  1265   000196                     	ds	2
  1266   000198                     powf@is:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x98
  1270   000198                     	ds	4
  1271   00019C                     _powf$1840:
  1272                           	callstack 0
  1273                           
  1274                           ; 4 bytes @ 0x9C
  1275   00019C                     	ds	4
  1276   0001A0                     powf@p_h:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0xA0
  1280   0001A0                     	ds	4
  1281   0001A4                     powf@k:
  1282                           	callstack 0
  1283                           
  1284                           ; 4 bytes @ 0xA4
  1285   0001A4                     	ds	4
  1286   0001A8                     powf@j:
  1287                           	callstack 0
  1288                           
  1289                           ; 4 bytes @ 0xA8
  1290   0001A8                     	ds	4
  1291   0001AC                     powf@ix:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0xAC
  1295   0001AC                     	ds	4
  1296   0001B0                     powf@t:
  1297                           	callstack 0
  1298                           
  1299                           ; 4 bytes @ 0xB0
  1300   0001B0                     	ds	4
  1301   0001B4                     powf@z:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0xB4
  1305   0001B4                     	ds	20
  1306   0001C8                     Send_History_Event@i:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0xC8
  1310   0001C8                     	ds	2
  1311   0001CA                     Handle_Test_Events@test_data:
  1312                           	callstack 0
  1313                           
  1314                           ; 50 bytes @ 0xCA
  1315   0001CA                     	ds	50
  1316   0001FC                     Handle_Test_Events@water_used:
  1317                           	callstack 0
  1318                           
  1319                           ; 4 bytes @ 0xFC
  1320   0001FC                     	ds	4
  1321                           
  1322                           	psect	cstackBANK0
  1323   000060                     __pcstackBANK0:
  1324                           	callstack 0
  1325   000060                     Apply_Filter@sum:
  1326                           	callstack 0
  1327   000060                     ___flge@ff1:
  1328                           	callstack 0
  1329                           
  1330                           ; 4 bytes @ 0x0
  1331   000060                     	ds	4
  1332   000064                     Apply_Filter@i:
  1333                           	callstack 0
  1334   000064                     ___flge@ff2:
  1335                           	callstack 0
  1336                           
  1337                           ; 4 bytes @ 0x4
  1338   000064                     	ds	4
  1339   000068                     ?_powf:
  1340                           	callstack 0
  1341   000068                     efgtoa@fp:
  1342                           	callstack 0
  1343   000068                     powf@x:
  1344                           	callstack 0
  1345   000068                     ??_Update_Actuators:
  1346                           
  1347                           ; 1 bytes @ 0x8
  1348   000068                     	ds	1
  1349   000069                     efgtoa@f:
  1350                           	callstack 0
  1351                           
  1352                           ; 4 bytes @ 0x9
  1353   000069                     	ds	3
  1354   00006C                     powf@y:
  1355                           	callstack 0
  1356                           
  1357                           ; 4 bytes @ 0xC
  1358   00006C                     	ds	1
  1359   00006D                     efgtoa@c:
  1360                           	callstack 0
  1361                           
  1362                           ; 1 bytes @ 0xD
  1363   00006D                     	ds	1
  1364   00006E                     ??_efgtoa:
  1365                           
  1366                           ; 1 bytes @ 0xE
  1367   00006E                     	ds	2
  1368   000070                     efgtoa@ne:
  1369                           	callstack 0
  1370   000070                     ??_powf:
  1371                           
  1372                           ; 1 bytes @ 0x10
  1373   000070                     	ds	2
  1374   000072                     efgtoa@p:
  1375                           	callstack 0
  1376                           
  1377                           ; 2 bytes @ 0x12
  1378   000072                     	ds	2
  1379   000074                     efgtoa@t:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x14
  1383   000074                     	ds	2
  1384   000076                     _efgtoa$1375:
  1385                           	callstack 0
  1386                           
  1387                           ; 2 bytes @ 0x16
  1388   000076                     	ds	2
  1389   000078                     efgtoa@pp:
  1390                           	callstack 0
  1391                           
  1392                           ; 1 bytes @ 0x18
  1393   000078                     	ds	1
  1394   000079                     efgtoa@mode:
  1395                           	callstack 0
  1396   000079                     ??_Read_Sensors:
  1397                           
  1398                           ; 1 bytes @ 0x19
  1399   000079                     	ds	1
  1400   00007A                     efgtoa@nmode:
  1401                           	callstack 0
  1402                           
  1403                           ; 1 bytes @ 0x1A
  1404   00007A                     	ds	1
  1405   00007B                     efgtoa@d:
  1406                           	callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x1B
  1409   00007B                     	ds	2
  1410   00007D                     efgtoa@m:
  1411                           	callstack 0
  1412   00007D                     Read_Sensors@raw_temp:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x1D
  1416   00007D                     	ds	2
  1417   00007F                     efgtoa@e:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x1F
  1421   00007F                     	ds	2
  1422   000081                     efgtoa@w:
  1423                           	callstack 0
  1424   000081                     Read_Sensors@flame_voltage:
  1425                           	callstack 0
  1426                           
  1427                           ; 4 bytes @ 0x21
  1428   000081                     	ds	2
  1429   000083                     efgtoa@ou:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0x23
  1433   000083                     	ds	2
  1434   000085                     Read_Sensors@temp_factor:
  1435                           	callstack 0
  1436                           
  1437                           ; 4 bytes @ 0x25
  1438   000085                     	ds	2
  1439   000087                     efgtoa@i:
  1440                           	callstack 0
  1441                           
  1442                           ; 2 bytes @ 0x27
  1443   000087                     	ds	2
  1444   000089                     efgtoa@h:
  1445                           	callstack 0
  1446   000089                     _Read_Sensors$1834:
  1447                           	callstack 0
  1448                           
  1449                           ; 4 bytes @ 0x29
  1450   000089                     	ds	4
  1451   00008D                     efgtoa@l:
  1452                           	callstack 0
  1453   00008D                     _Read_Sensors$1835:
  1454                           	callstack 0
  1455                           
  1456                           ; 4 bytes @ 0x2D
  1457   00008D                     	ds	4
  1458   000091                     efgtoa@sign:
  1459                           	callstack 0
  1460   000091                     _Read_Sensors$1836:
  1461                           	callstack 0
  1462                           
  1463                           ; 4 bytes @ 0x31
  1464   000091                     	ds	1
  1465   000092                     efgtoa@g:
  1466                           	callstack 0
  1467                           
  1468                           ; 4 bytes @ 0x32
  1469   000092                     	ds	3
  1470   000095                     Read_Sensors@temp_adc:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x35
  1474   000095                     	ds	1
  1475   000096                     efgtoa@n:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x36
  1479   000096                     	ds	1
  1480   000097                     Read_Sensors@flame_adc:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x37
  1484   000097                     	ds	1
  1485   000098                     efgtoa@u:
  1486                           	callstack 0
  1487                           
  1488                           ; 4 bytes @ 0x38
  1489   000098                     	ds	1
  1490   000099                     Read_Sensors@mq2_adc:
  1491                           	callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x39
  1494   000099                     	ds	2
  1495   00009B                     Read_Sensors@pulses:
  1496                           	callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x3B
  1499   00009B                     	ds	1
  1500   00009C                     vfpfcnvrt@fp:
  1501                           	callstack 0
  1502                           
  1503                           ; 1 bytes @ 0x3C
  1504   00009C                     	ds	1
  1505   00009D                     vfpfcnvrt@fmt:
  1506                           	callstack 0
  1507   00009D                     Read_Sensors@mq2_voltage:
  1508                           	callstack 0
  1509                           
  1510                           ; 4 bytes @ 0x3D
  1511   00009D                     	ds	1
  1512   00009E                     vfpfcnvrt@ap:
  1513                           	callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x3E
  1516   00009E                     	ds	2
  1517   0000A0                     ??_vfpfcnvrt:
  1518                           
  1519                           ; 1 bytes @ 0x40
  1520   0000A0                     	ds	1
  1521   0000A1                     Read_Sensors@rs_ro_ratio:
  1522                           	callstack 0
  1523                           
  1524                           ; 4 bytes @ 0x41
  1525   0000A1                     	ds	1
  1526   0000A2                     vfpfcnvrt@done:
  1527                           	callstack 0
  1528                           
  1529                           ; 1 bytes @ 0x42
  1530   0000A2                     	ds	1
  1531   0000A3                     vfpfcnvrt@convarg:
  1532                           	callstack 0
  1533                           
  1534                           ; 4 bytes @ 0x43
  1535   0000A3                     	ds	2
  1536   0000A5                     Read_Sensors@Rs:
  1537                           	callstack 0
  1538                           
  1539                           ; 4 bytes @ 0x45
  1540   0000A5                     	ds	2
  1541   0000A7                     vfpfcnvrt@c:
  1542                           	callstack 0
  1543                           
  1544                           ; 1 bytes @ 0x47
  1545   0000A7                     	ds	1
  1546   0000A8                     vfpfcnvrt@cp:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0x48
  1550   0000A8                     	ds	1
  1551   0000A9                     Read_Sensors@raw_co:
  1552                           	callstack 0
  1553                           
  1554                           ; 4 bytes @ 0x49
  1555   0000A9                     	ds	1
  1556   0000AA                     ?_vfprintf:
  1557                           	callstack 0
  1558   0000AA                     vfprintf@fp:
  1559                           	callstack 0
  1560                           
  1561                           ; 1 bytes @ 0x4A
  1562   0000AA                     	ds	1
  1563   0000AB                     vfprintf@fmt:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x4B
  1567   0000AB                     	ds	2
  1568   0000AD                     vfprintf@ap:
  1569                           	callstack 0
  1570                           
  1571                           ; 1 bytes @ 0x4D
  1572   0000AD                     	ds	1
  1573   0000AE                     vfprintf@cfmt:
  1574                           	callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x4E
  1577   0000AE                     	ds	2
  1578   0000B0                     ?_sprintf:
  1579                           	callstack 0
  1580   0000B0                     sprintf@s:
  1581                           	callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x50
  1584   0000B0                     	ds	2
  1585   0000B2                     sprintf@fmt:
  1586                           	callstack 0
  1587                           
  1588                           ; 2 bytes @ 0x52
  1589   0000B2                     	ds	32
  1590   0000D2                     sprintf@ap:
  1591                           	callstack 0
  1592                           
  1593                           ; 1 bytes @ 0x72
  1594   0000D2                     	ds	1
  1595   0000D3                     sprintf@f:
  1596                           	callstack 0
  1597                           
  1598                           ; 11 bytes @ 0x73
  1599   0000D3                     	ds	11
  1600   0000DE                     Send_History_Event@event_type:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x7E
  1604   0000DE                     	ds	2
  1605   0000E0                     Send_History_Event@extra_data:
  1606                           	callstack 0
  1607                           
  1608                           ; 2 bytes @ 0x80
  1609   0000E0                     	ds	2
  1610   0000E2                     ??_Handle_Fire_Events:
  1611   0000E2                     ??_Handle_Test_Events:
  1612                           
  1613                           ; 1 bytes @ 0x82
  1614   0000E2                     	ds	2
  1615   0000E4                     Handle_Fire_Events@duration:
  1616                           	callstack 0
  1617                           
  1618                           ; 4 bytes @ 0x84
  1619   0000E4                     	ds	4
  1620   0000E8                     Handle_Fire_Events@water_used:
  1621                           	callstack 0
  1622                           
  1623                           ; 4 bytes @ 0x88
  1624   0000E8                     	ds	4
  1625   0000EC                     ??_main:
  1626                           
  1627                           ; 1 bytes @ 0x8C
  1628   0000EC                     	ds	2
  1629                           
  1630                           	psect	cstackCOMRAM
  1631   000001                     __pcstackCOMRAM:
  1632                           	callstack 0
  1633   000001                     ?_ADC_Read:
  1634                           	callstack 0
  1635   000001                     ?___fpclassifyf:
  1636                           	callstack 0
  1637   000001                     ?___awmod:
  1638                           	callstack 0
  1639   000001                     ?_read_prec_or_width:
  1640                           	callstack 0
  1641   000001                     ?_labs:
  1642                           	callstack 0
  1643   000001                     ?_sqrtf:
  1644                           	callstack 0
  1645   000001                     ?___lldiv:
  1646                           	callstack 0
  1647   000001                     ?___aldiv:
  1648                           	callstack 0
  1649   000001                     ?___almod:
  1650                           	callstack 0
  1651   000001                     ?___flneg:
  1652                           	callstack 0
  1653   000001                     ?___fltol:
  1654                           	callstack 0
  1655   000001                     ?___llmod:
  1656                           	callstack 0
  1657   000001                     ?___xxtofl:
  1658                           	callstack 0
  1659   000001                     read_prec_or_width@fmt:
  1660                           	callstack 0
  1661   000001                     ___awmod@dividend:
  1662                           	callstack 0
  1663   000001                     memcpy@d1:
  1664                           	callstack 0
  1665   000001                     fputc@c:
  1666                           	callstack 0
  1667   000001                     strcpy@dest:
  1668                           	callstack 0
  1669   000001                     ___lldiv@dividend:
  1670                           	callstack 0
  1671   000001                     ___aldiv@dividend:
  1672                           	callstack 0
  1673   000001                     ___almod@dividend:
  1674                           	callstack 0
  1675   000001                     ___fleq@ff1:
  1676                           	callstack 0
  1677   000001                     ___flneg@f1:
  1678                           	callstack 0
  1679   000001                     ___fltol@f1:
  1680                           	callstack 0
  1681   000001                     ___llmod@dividend:
  1682                           	callstack 0
  1683   000001                     ___xxtofl@val:
  1684                           	callstack 0
  1685   000001                     ___fpclassifyf@x:
  1686                           	callstack 0
  1687   000001                     labs@a:
  1688                           	callstack 0
  1689   000001                     sqrtf@x:
  1690                           	callstack 0
  1691   000001                     
  1692                           ; 1 bytes @ 0x0
  1693   000001                     	ds	1
  1694   000002                     read_prec_or_width@ap:
  1695                           	callstack 0
  1696                           
  1697                           ; 1 bytes @ 0x1
  1698   000002                     	ds	1
  1699   000003                     fputc@fp:
  1700                           	callstack 0
  1701   000003                     ___awmod@divisor:
  1702                           	callstack 0
  1703   000003                     memcpy@s1:
  1704                           	callstack 0
  1705   000003                     strcpy@src:
  1706                           	callstack 0
  1707   000003                     ??_ADC_Read:
  1708   000003                     ??_read_prec_or_width:
  1709                           
  1710                           ; 1 bytes @ 0x2
  1711   000003                     	ds	1
  1712   000004                     ??_fputc:
  1713                           
  1714                           ; 1 bytes @ 0x3
  1715   000004                     	ds	1
  1716   000005                     ADC_Read@channel:
  1717                           	callstack 0
  1718   000005                     ___awmod@counter:
  1719                           	callstack 0
  1720   000005                     read_prec_or_width@c:
  1721                           	callstack 0
  1722   000005                     memcpy@n:
  1723                           	callstack 0
  1724   000005                     strcpy@d:
  1725                           	callstack 0
  1726   000005                     ___lldiv@divisor:
  1727                           	callstack 0
  1728   000005                     ___aldiv@divisor:
  1729                           	callstack 0
  1730   000005                     ___almod@divisor:
  1731                           	callstack 0
  1732   000005                     ___fleq@ff2:
  1733                           	callstack 0
  1734   000005                     ___llmod@divisor:
  1735                           	callstack 0
  1736   000005                     ??___fpclassifyf:
  1737   000005                     ??_labs:
  1738   000005                     ??_sqrtf:
  1739   000005                     ??___fltol:
  1740   000005                     ??___xxtofl:
  1741                           
  1742                           ; 1 bytes @ 0x4
  1743   000005                     	ds	1
  1744   000006                     ___awmod@sign:
  1745                           	callstack 0
  1746   000006                     read_prec_or_width@n:
  1747                           	callstack 0
  1748                           
  1749                           ; 2 bytes @ 0x5
  1750   000006                     	ds	1
  1751   000007                     memcpy@tmp:
  1752                           	callstack 0
  1753   000007                     
  1754                           ; 1 bytes @ 0x6
  1755   000007                     	ds	1
  1756   000008                     memcpy@d:
  1757                           	callstack 0
  1758                           
  1759                           ; 2 bytes @ 0x7
  1760   000008                     	ds	1
  1761   000009                     ___aldiv@counter:
  1762                           	callstack 0
  1763   000009                     ___almod@counter:
  1764                           	callstack 0
  1765   000009                     ___fltol@sign1:
  1766                           	callstack 0
  1767   000009                     ___llmod@counter:
  1768                           	callstack 0
  1769   000009                     ___xxtofl@sign:
  1770                           	callstack 0
  1771   000009                     stoa@fp:
  1772                           	callstack 0
  1773   000009                     ___fpclassifyf@e:
  1774                           	callstack 0
  1775   000009                     fputs@s:
  1776                           	callstack 0
  1777   000009                     ___lldiv@quotient:
  1778                           	callstack 0
  1779   000009                     ??___fleq:
  1780   000009                     
  1781                           ; 1 bytes @ 0x8
  1782   000009                     	ds	1
  1783   00000A                     ___aldiv@sign:
  1784                           	callstack 0
  1785   00000A                     ___almod@sign:
  1786                           	callstack 0
  1787   00000A                     ___fltol@exp1:
  1788                           	callstack 0
  1789   00000A                     ___xxtofl@exp:
  1790                           	callstack 0
  1791   00000A                     stoa@s:
  1792                           	callstack 0
  1793   00000A                     memcpy@s:
  1794                           	callstack 0
  1795   00000A                     sqrtf@s:
  1796                           	callstack 0
  1797                           
  1798                           ; 4 bytes @ 0x9
  1799   00000A                     	ds	1
  1800   00000B                     ?_abs:
  1801                           	callstack 0
  1802   00000B                     fputs@fp:
  1803                           	callstack 0
  1804   00000B                     abs@a:
  1805                           	callstack 0
  1806   00000B                     ___aldiv@quotient:
  1807                           	callstack 0
  1808   00000B                     ___xxtofl@arg:
  1809                           	callstack 0
  1810   00000B                     ___fpclassifyf@u:
  1811                           	callstack 0
  1812   00000B                     ??_Handle_Commands:
  1813                           
  1814                           ; 1 bytes @ 0xA
  1815   00000B                     	ds	1
  1816   00000C                     fputs@c:
  1817                           	callstack 0
  1818   00000C                     ??_stoa:
  1819                           
  1820                           ; 1 bytes @ 0xB
  1821   00000C                     	ds	1
  1822   00000D                     ___lldiv@counter:
  1823                           	callstack 0
  1824   00000D                     fputs@i:
  1825                           	callstack 0
  1826   00000D                     ??_abs:
  1827                           
  1828                           ; 1 bytes @ 0xC
  1829   00000D                     	ds	1
  1830   00000E                     stoa@p:
  1831                           	callstack 0
  1832   00000E                     sqrtf@i:
  1833                           	callstack 0
  1834                           
  1835                           ; 4 bytes @ 0xD
  1836   00000E                     	ds	1
  1837   00000F                     ?___flmul:
  1838                           	callstack 0
  1839   00000F                     Handle_Commands@cmd:
  1840                           	callstack 0
  1841   00000F                     pad@fp:
  1842                           	callstack 0
  1843   00000F                     ___flmul@b:
  1844                           	callstack 0
  1845                           
  1846                           ; 4 bytes @ 0xE
  1847   00000F                     	ds	1
  1848   000010                     pad@buf:
  1849                           	callstack 0
  1850   000010                     stoa@cp:
  1851                           	callstack 0
  1852                           
  1853                           ; 2 bytes @ 0xF
  1854   000010                     	ds	2
  1855   000012                     pad@p:
  1856                           	callstack 0
  1857   000012                     stoa@l:
  1858                           	callstack 0
  1859   000012                     sqrtf@q:
  1860                           	callstack 0
  1861                           
  1862                           ; 4 bytes @ 0x11
  1863   000012                     	ds	1
  1864   000013                     ___flmul@a:
  1865                           	callstack 0
  1866                           
  1867                           ; 4 bytes @ 0x12
  1868   000013                     	ds	1
  1869   000014                     ??_pad:
  1870                           
  1871                           ; 1 bytes @ 0x13
  1872   000014                     	ds	1
  1873   000015                     pad@i:
  1874                           	callstack 0
  1875                           
  1876                           ; 2 bytes @ 0x14
  1877   000015                     	ds	1
  1878   000016                     sqrtf@t:
  1879                           	callstack 0
  1880                           
  1881                           ; 4 bytes @ 0x15
  1882   000016                     	ds	1
  1883   000017                     dtoa@fp:
  1884                           	callstack 0
  1885   000017                     utoa@fp:
  1886                           	callstack 0
  1887   000017                     ??___flmul:
  1888                           
  1889                           ; 1 bytes @ 0x16
  1890   000017                     	ds	1
  1891   000018                     dtoa@d:
  1892                           	callstack 0
  1893   000018                     utoa@d:
  1894                           	callstack 0
  1895                           
  1896                           ; 4 bytes @ 0x17
  1897   000018                     	ds	2
  1898   00001A                     sqrtf@m:
  1899                           	callstack 0
  1900                           
  1901                           ; 4 bytes @ 0x19
  1902   00001A                     	ds	1
  1903   00001B                     ___flmul@sign:
  1904                           	callstack 0
  1905                           
  1906                           ; 1 bytes @ 0x1A
  1907   00001B                     	ds	1
  1908   00001C                     ___flmul@aexp:
  1909                           	callstack 0
  1910   00001C                     _dtoa$1344:
  1911                           	callstack 0
  1912   00001C                     utoa@w:
  1913                           	callstack 0
  1914   00001C                     
  1915                           ; 1 bytes @ 0x1B
  1916   00001C                     	ds	1
  1917   00001D                     ___flmul@grs:
  1918                           	callstack 0
  1919                           
  1920                           ; 4 bytes @ 0x1C
  1921   00001D                     	ds	1
  1922   00001E                     dtoa@w:
  1923                           	callstack 0
  1924   00001E                     utoa@p:
  1925                           	callstack 0
  1926   00001E                     sqrtf@r:
  1927                           	callstack 0
  1928                           
  1929                           ; 4 bytes @ 0x1D
  1930   00001E                     	ds	2
  1931   000020                     dtoa@p:
  1932                           	callstack 0
  1933   000020                     utoa@i:
  1934                           	callstack 0
  1935                           
  1936                           ; 2 bytes @ 0x1F
  1937   000020                     	ds	1
  1938   000021                     ___flmul@bexp:
  1939                           	callstack 0
  1940                           
  1941                           ; 1 bytes @ 0x20
  1942   000021                     	ds	1
  1943   000022                     dtoa@s:
  1944                           	callstack 0
  1945   000022                     ___flmul@prod:
  1946                           	callstack 0
  1947   000022                     sqrtf@ix:
  1948                           	callstack 0
  1949                           
  1950                           ; 4 bytes @ 0x21
  1951   000022                     	ds	1
  1952   000023                     dtoa@i:
  1953                           	callstack 0
  1954                           
  1955                           ; 2 bytes @ 0x22
  1956   000023                     	ds	3
  1957   000026                     ___flmul@temp:
  1958                           	callstack 0
  1959                           
  1960                           ; 2 bytes @ 0x25
  1961   000026                     	ds	2
  1962   000028                     ?___fldiv:
  1963                           	callstack 0
  1964   000028                     ?_scalbnf:
  1965                           	callstack 0
  1966   000028                     ___fldiv@b:
  1967                           	callstack 0
  1968   000028                     scalbnf@x:
  1969                           	callstack 0
  1970                           
  1971                           ; 4 bytes @ 0x27
  1972   000028                     	ds	4
  1973   00002C                     scalbnf@n:
  1974                           	callstack 0
  1975   00002C                     ___fldiv@a:
  1976                           	callstack 0
  1977                           
  1978                           ; 4 bytes @ 0x2B
  1979   00002C                     	ds	2
  1980   00002E                     ??_scalbnf:
  1981                           
  1982                           ; 1 bytes @ 0x2D
  1983   00002E                     	ds	2
  1984   000030                     ??___fldiv:
  1985                           
  1986                           ; 1 bytes @ 0x2F
  1987   000030                     	ds	2
  1988   000032                     scalbnf@u:
  1989                           	callstack 0
  1990                           
  1991                           ; 4 bytes @ 0x31
  1992   000032                     	ds	2
  1993   000034                     ___fldiv@rem:
  1994                           	callstack 0
  1995                           
  1996                           ; 4 bytes @ 0x33
  1997   000034                     	ds	2
  1998   000036                     scalbnf@y:
  1999                           	callstack 0
  2000                           
  2001                           ; 4 bytes @ 0x35
  2002   000036                     	ds	2
  2003   000038                     ___fldiv@sign:
  2004                           	callstack 0
  2005                           
  2006                           ; 1 bytes @ 0x37
  2007   000038                     	ds	1
  2008   000039                     ___fldiv@new_exp:
  2009                           	callstack 0
  2010                           
  2011                           ; 2 bytes @ 0x38
  2012   000039                     	ds	2
  2013   00003B                     ___fldiv@grs:
  2014                           	callstack 0
  2015                           
  2016                           ; 4 bytes @ 0x3A
  2017   00003B                     	ds	4
  2018   00003F                     ___fldiv@bexp:
  2019                           	callstack 0
  2020                           
  2021                           ; 1 bytes @ 0x3E
  2022   00003F                     	ds	1
  2023   000040                     ___fldiv@aexp:
  2024                           	callstack 0
  2025                           
  2026                           ; 1 bytes @ 0x3F
  2027   000040                     	ds	1
  2028   000041                     ?___fladd:
  2029                           	callstack 0
  2030   000041                     ?_floorf:
  2031                           	callstack 0
  2032   000041                     ___fladd@b:
  2033                           	callstack 0
  2034   000041                     floorf@x:
  2035                           	callstack 0
  2036                           
  2037                           ; 4 bytes @ 0x40
  2038   000041                     	ds	4
  2039   000045                     ___fladd@a:
  2040                           	callstack 0
  2041   000045                     ??_floorf:
  2042                           
  2043                           ; 1 bytes @ 0x44
  2044   000045                     	ds	4
  2045   000049                     ??___fladd:
  2046                           
  2047                           ; 1 bytes @ 0x48
  2048   000049                     	ds	2
  2049   00004B                     floorf@m:
  2050                           	callstack 0
  2051                           
  2052                           ; 4 bytes @ 0x4A
  2053   00004B                     	ds	2
  2054   00004D                     ___fladd@signs:
  2055                           	callstack 0
  2056                           
  2057                           ; 1 bytes @ 0x4C
  2058   00004D                     	ds	1
  2059   00004E                     ___fladd@aexp:
  2060                           	callstack 0
  2061                           
  2062                           ; 1 bytes @ 0x4D
  2063   00004E                     	ds	1
  2064   00004F                     ___fladd@bexp:
  2065                           	callstack 0
  2066   00004F                     floorf@e:
  2067                           	callstack 0
  2068                           
  2069                           ; 2 bytes @ 0x4E
  2070   00004F                     	ds	1
  2071   000050                     ___fladd@grs:
  2072                           	callstack 0
  2073                           
  2074                           ; 1 bytes @ 0x4F
  2075   000050                     	ds	1
  2076   000051                     ?_Apply_Filter:
  2077                           	callstack 0
  2078   000051                     ?___flsub:
  2079                           	callstack 0
  2080   000051                     Apply_Filter@new_value:
  2081                           	callstack 0
  2082   000051                     ___flsub@b:
  2083                           	callstack 0
  2084   000051                     floorf@u:
  2085                           	callstack 0
  2086                           
  2087                           ; 4 bytes @ 0x50
  2088   000051                     	ds	4
  2089   000055                     Apply_Filter@samples:
  2090                           	callstack 0
  2091   000055                     ___flsub@a:
  2092                           	callstack 0
  2093                           
  2094                           ; 4 bytes @ 0x54
  2095   000055                     	ds	2
  2096   000057                     ??_Apply_Filter:
  2097                           
  2098                           ; 1 bytes @ 0x56
  2099   000057                     	ds	2
  2100   000059                     ??___flge:
  2101                           
  2102                           ; 1 bytes @ 0x58
  2103   000059                     	ds	4
  2104   00005D                     _Update_Actuators$751:
  2105                           	callstack 0
  2106   00005D                     
  2107                           ; 1 bytes @ 0x5C
  2108   00005D                     	ds	1
  2109                           
  2110 ;;
  2111 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2112 ;;
  2113 ;; *************** function _main *****************
  2114 ;; Defined at:
  2115 ;;		line 98 in file "newmain.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  voltage         4   10[BANK3 ] float 
  2120 ;;  adc_value       2    6[BANK3 ] unsigned int 
  2121 ;;  adc_value       2    4[BANK3 ] unsigned int 
  2122 ;;  i               2   16[BANK3 ] int 
  2123 ;;  i               2   14[BANK3 ] int 
  2124 ;;  cycle_count     2    8[BANK3 ] unsigned int 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2134 ;;      Params:         0       0       0       0       0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0      18       0       0       0       0
  2136 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2137 ;;      Totals:         0       2       0       0      18       0       0       0       0
  2138 ;;Total ram usage:       20 bytes
  2139 ;; Hardware stack levels required when called: 11
  2140 ;; This function calls:
  2141 ;;		_ADC_Init
  2142 ;;		_ADC_Read
  2143 ;;		_Handle_Commands
  2144 ;;		_Handle_Fire_Events
  2145 ;;		_Handle_Shutdown_Events
  2146 ;;		_Handle_Test_Events
  2147 ;;		_Interrupt_Init
  2148 ;;		_Read_Sensors
  2149 ;;		_Send_Data
  2150 ;;		_UART_Init
  2151 ;;		_Update_Actuators
  2152 ;;		___awmod
  2153 ;;		___fladd
  2154 ;;		___fldiv
  2155 ;;		___flmul
  2156 ;;		___flsub
  2157 ;;		___xxtofl
  2158 ;; This function is called by:
  2159 ;;		Startup code after reset
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text0
  2164   004B18                     __ptext0:
  2165                           	callstack 0
  2166   004B18                     _main:
  2167                           	callstack 20
  2168   004B18                     
  2169                           ;newmain.c: 100:     OSCCON = 0x70;
  2170   004B18  0E70               	movlw	112
  2171   004B1A  6ED3               	movwf	211,c	;volatile
  2172                           
  2173                           ;newmain.c: 101:     TRISB = 0x02;
  2174   004B1C  0E02               	movlw	2
  2175   004B1E  6E93               	movwf	147,c	;volatile
  2176   004B20                     
  2177                           ;newmain.c: 102:     PORTB = 0x00;
  2178   004B20  6A81               	clrf	129,c	;volatile
  2179   004B22                     
  2180                           ;newmain.c: 103:     PORTBbits.RB5 = 1;
  2181   004B22  8A81               	bsf	129,5,c	;volatile
  2182   004B24                     
  2183                           ;newmain.c: 104:     PORTBbits.RB0 = 0;
  2184   004B24  9081               	bcf	129,0,c	;volatile
  2185   004B26                     
  2186                           ;newmain.c: 106:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  2187   004B26  0E15               	movlw	21
  2188   004B28  0100               	movlb	0	; () banked
  2189   004B2A  6FED               	movwf	(??_main+1)& (0+255),b
  2190   004B2C  0E4B               	movlw	75
  2191   004B2E  6FEC               	movwf	??_main& (0+255),b
  2192   004B30  0EBE               	movlw	190
  2193   004B32                     u10717:
  2194   004B32  2EE8               	decfsz	wreg,f,c
  2195   004B34  D7FE               	bra	u10717
  2196   004B36  2FEC               	decfsz	??_main& (0+255),f,b
  2197   004B38  D7FC               	bra	u10717
  2198   004B3A  2FED               	decfsz	(??_main+1)& (0+255),f,b
  2199   004B3C  D7FA               	bra	u10717
  2200   004B3E  0000               	nop	
  2201   004B40                     
  2202                           ;newmain.c: 107:     UART_Init();
  2203   004B40  ECF6  F036         	call	_UART_Init	;wreg free
  2204   004B44                     
  2205                           ;newmain.c: 108:     ADC_Init();
  2206   004B44  EC00  F037         	call	_ADC_Init	;wreg free
  2207   004B48                     
  2208                           ;newmain.c: 109:     Interrupt_Init();
  2209   004B48  EC09  F037         	call	_Interrupt_Init	;wreg free
  2210   004B4C                     
  2211                           ;newmain.c: 112:     for(int i = 0; i < 50; i++) {
  2212   004B4C  0E00               	movlw	0
  2213   004B4E  0103               	movlb	3	; () banked
  2214   004B50  6FF7               	movwf	(main@i+1)& (0+255),b
  2215   004B52  0E00               	movlw	0
  2216   004B54  6FF6               	movwf	main@i& (0+255),b
  2217   004B56                     l8054:
  2218                           
  2219                           ; BSR set to: 3
  2220                           ;newmain.c: 113:         unsigned int adc_value = ADC_Read(1);
  2221   004B56  0E01               	movlw	1
  2222   004B58  EC49  F036         	call	_ADC_Read
  2223   004B5C  C001  F3EC         	movff	?_ADC_Read,main@adc_value
  2224   004B60  C002  F3ED         	movff	?_ADC_Read+1,main@adc_value+1
  2225   004B64                     
  2226                           ;newmain.c: 114:         flame_base_voltage += (adc_value * 5.0) / 1024.0;
  2227   004B64  C33C  F041         	movff	_flame_base_voltage,___fladd@b
  2228   004B68  C33D  F042         	movff	_flame_base_voltage+1,___fladd@b+1
  2229   004B6C  C33E  F043         	movff	_flame_base_voltage+2,___fladd@b+2
  2230   004B70  C33F  F044         	movff	_flame_base_voltage+3,___fladd@b+3
  2231   004B74  0E00               	movlw	0
  2232   004B76  6E2C               	movwf	___fldiv@a^0,c
  2233   004B78  0E00               	movlw	0
  2234   004B7A  6E2D               	movwf	(___fldiv@a+1)^0,c
  2235   004B7C  0E80               	movlw	128
  2236   004B7E  6E2E               	movwf	(___fldiv@a+2)^0,c
  2237   004B80  0E44               	movlw	68
  2238   004B82  6E2F               	movwf	(___fldiv@a+3)^0,c
  2239   004B84  0E00               	movlw	0
  2240   004B86  6E13               	movwf	___flmul@a^0,c
  2241   004B88  0E00               	movlw	0
  2242   004B8A  6E14               	movwf	(___flmul@a+1)^0,c
  2243   004B8C  0EA0               	movlw	160
  2244   004B8E  6E15               	movwf	(___flmul@a+2)^0,c
  2245   004B90  0E40               	movlw	64
  2246   004B92  6E16               	movwf	(___flmul@a+3)^0,c
  2247   004B94  C3EC  F001         	movff	main@adc_value,___xxtofl@val
  2248   004B98  C3ED  F002         	movff	main@adc_value+1,___xxtofl@val+1
  2249   004B9C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2250   004B9E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2251   004BA0  0E00               	movlw	0
  2252   004BA2  ECB7  F02A         	call	___xxtofl
  2253   004BA6  C001  F00F         	movff	?___xxtofl,___flmul@b
  2254   004BAA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2255   004BAE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2256   004BB2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2257   004BB6  ECC2  F01F         	call	___flmul	;wreg free
  2258   004BBA  C00F  F028         	movff	?___flmul,___fldiv@b
  2259   004BBE  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2260   004BC2  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2261   004BC6  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2262   004BCA  ECC4  F023         	call	___fldiv	;wreg free
  2263   004BCE  C028  F045         	movff	?___fldiv,___fladd@a
  2264   004BD2  C029  F046         	movff	?___fldiv+1,___fladd@a+1
  2265   004BD6  C02A  F047         	movff	?___fldiv+2,___fladd@a+2
  2266   004BDA  C02B  F048         	movff	?___fldiv+3,___fladd@a+3
  2267   004BDE  EC67  F01D         	call	___fladd	;wreg free
  2268   004BE2  C041  F33C         	movff	?___fladd,_flame_base_voltage
  2269   004BE6  C042  F33D         	movff	?___fladd+1,_flame_base_voltage+1
  2270   004BEA  C043  F33E         	movff	?___fladd+2,_flame_base_voltage+2
  2271   004BEE  C044  F33F         	movff	?___fladd+3,_flame_base_voltage+3
  2272   004BF2                     
  2273                           ;newmain.c: 115:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2274   004BF2  0E02               	movlw	2
  2275   004BF4  0100               	movlb	0	; () banked
  2276   004BF6  6FED               	movwf	(??_main+1)& (0+255),b
  2277   004BF8  0E04               	movlw	4
  2278   004BFA  6FEC               	movwf	??_main& (0+255),b
  2279   004BFC  0EBA               	movlw	186
  2280   004BFE                     u10727:
  2281   004BFE  2EE8               	decfsz	wreg,f,c
  2282   004C00  D7FE               	bra	u10727
  2283   004C02  2FEC               	decfsz	??_main& (0+255),f,b
  2284   004C04  D7FC               	bra	u10727
  2285   004C06  2FED               	decfsz	(??_main+1)& (0+255),f,b
  2286   004C08  D7FA               	bra	u10727
  2287   004C0A  0000               	nop	
  2288   004C0C                     
  2289                           ;newmain.c: 116:     }
  2290   004C0C  0103               	movlb	3	; () banked
  2291   004C0E  4BF6               	infsnz	main@i& (0+255),f,b
  2292   004C10  2BF7               	incf	(main@i+1)& (0+255),f,b
  2293   004C12                     
  2294                           ; BSR set to: 3
  2295   004C12  BFF7               	btfsc	(main@i+1)& (0+255),7,b
  2296   004C14  EF15  F026         	goto	u10661
  2297   004C18  51F7               	movf	(main@i+1)& (0+255),w,b
  2298   004C1A  E109               	bnz	u10660
  2299   004C1C  0E32               	movlw	50
  2300   004C1E  5DF6               	subwf	main@i& (0+255),w,b
  2301   004C20  A0D8               	btfss	status,0,c
  2302   004C22  EF15  F026         	goto	u10661
  2303   004C26  EF17  F026         	goto	u10660
  2304   004C2A                     u10661:
  2305   004C2A  EFAB  F025         	goto	l8054
  2306   004C2E                     u10660:
  2307   004C2E                     
  2308                           ; BSR set to: 3
  2309                           ;newmain.c: 117:     flame_base_voltage /= 50.0;
  2310   004C2E  C33C  F028         	movff	_flame_base_voltage,___fldiv@b
  2311   004C32  C33D  F029         	movff	_flame_base_voltage+1,___fldiv@b+1
  2312   004C36  C33E  F02A         	movff	_flame_base_voltage+2,___fldiv@b+2
  2313   004C3A  C33F  F02B         	movff	_flame_base_voltage+3,___fldiv@b+3
  2314   004C3E  0E00               	movlw	0
  2315   004C40  6E2C               	movwf	___fldiv@a^0,c
  2316   004C42  0E00               	movlw	0
  2317   004C44  6E2D               	movwf	(___fldiv@a+1)^0,c
  2318   004C46  0E48               	movlw	72
  2319   004C48  6E2E               	movwf	(___fldiv@a+2)^0,c
  2320   004C4A  0E42               	movlw	66
  2321   004C4C  6E2F               	movwf	(___fldiv@a+3)^0,c
  2322   004C4E  ECC4  F023         	call	___fldiv	;wreg free
  2323   004C52  C028  F33C         	movff	?___fldiv,_flame_base_voltage
  2324   004C56  C029  F33D         	movff	?___fldiv+1,_flame_base_voltage+1
  2325   004C5A  C02A  F33E         	movff	?___fldiv+2,_flame_base_voltage+2
  2326   004C5E  C02B  F33F         	movff	?___fldiv+3,_flame_base_voltage+3
  2327   004C62                     
  2328                           ;newmain.c: 120:     for(int i = 0; i < 50; i++) {
  2329   004C62  0E00               	movlw	0
  2330   004C64  0103               	movlb	3	; () banked
  2331   004C66  6FF9               	movwf	(main@i_676+1)& (0+255),b
  2332   004C68  0E00               	movlw	0
  2333   004C6A  6FF8               	movwf	main@i_676& (0+255),b
  2334   004C6C                     l8072:
  2335                           
  2336                           ; BSR set to: 3
  2337                           ;newmain.c: 121:         unsigned int adc_value = ADC_Read(2);
  2338   004C6C  0E02               	movlw	2
  2339   004C6E  EC49  F036         	call	_ADC_Read
  2340   004C72  C001  F3EE         	movff	?_ADC_Read,main@adc_value_677
  2341   004C76  C002  F3EF         	movff	?_ADC_Read+1,main@adc_value_677+1
  2342   004C7A                     
  2343                           ;newmain.c: 122:         float voltage = (adc_value * 5.0) / 1024.0;
  2344   004C7A  0E00               	movlw	0
  2345   004C7C  6E13               	movwf	___flmul@a^0,c
  2346   004C7E  0E00               	movlw	0
  2347   004C80  6E14               	movwf	(___flmul@a+1)^0,c
  2348   004C82  0EA0               	movlw	160
  2349   004C84  6E15               	movwf	(___flmul@a+2)^0,c
  2350   004C86  0E40               	movlw	64
  2351   004C88  6E16               	movwf	(___flmul@a+3)^0,c
  2352   004C8A  C3EE  F001         	movff	main@adc_value_677,___xxtofl@val
  2353   004C8E  C3EF  F002         	movff	main@adc_value_677+1,___xxtofl@val+1
  2354   004C92  6A03               	clrf	(___xxtofl@val+2)^0,c
  2355   004C94  6A04               	clrf	(___xxtofl@val+3)^0,c
  2356   004C96  0E00               	movlw	0
  2357   004C98  ECB7  F02A         	call	___xxtofl
  2358   004C9C  C001  F00F         	movff	?___xxtofl,___flmul@b
  2359   004CA0  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2360   004CA4  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2361   004CA8  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2362   004CAC  ECC2  F01F         	call	___flmul	;wreg free
  2363   004CB0  C00F  F028         	movff	?___flmul,___fldiv@b
  2364   004CB4  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2365   004CB8  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2366   004CBC  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2367   004CC0  0E00               	movlw	0
  2368   004CC2  6E2C               	movwf	___fldiv@a^0,c
  2369   004CC4  0E00               	movlw	0
  2370   004CC6  6E2D               	movwf	(___fldiv@a+1)^0,c
  2371   004CC8  0E80               	movlw	128
  2372   004CCA  6E2E               	movwf	(___fldiv@a+2)^0,c
  2373   004CCC  0E44               	movlw	68
  2374   004CCE  6E2F               	movwf	(___fldiv@a+3)^0,c
  2375   004CD0  ECC4  F023         	call	___fldiv	;wreg free
  2376   004CD4  C028  F3F2         	movff	?___fldiv,main@voltage
  2377   004CD8  C029  F3F3         	movff	?___fldiv+1,main@voltage+1
  2378   004CDC  C02A  F3F4         	movff	?___fldiv+2,main@voltage+2
  2379   004CE0  C02B  F3F5         	movff	?___fldiv+3,main@voltage+3
  2380   004CE4                     
  2381                           ;newmain.c: 123:         MQ2_Ro += (5.0 - voltage) / voltage;
  2382   004CE4  C3F2  F02C         	movff	main@voltage,___fldiv@a
  2383   004CE8  C3F3  F02D         	movff	main@voltage+1,___fldiv@a+1
  2384   004CEC  C3F4  F02E         	movff	main@voltage+2,___fldiv@a+2
  2385   004CF0  C3F5  F02F         	movff	main@voltage+3,___fldiv@a+3
  2386   004CF4  C3F2  F055         	movff	main@voltage,___flsub@a
  2387   004CF8  C3F3  F056         	movff	main@voltage+1,___flsub@a+1
  2388   004CFC  C3F4  F057         	movff	main@voltage+2,___flsub@a+2
  2389   004D00  C3F5  F058         	movff	main@voltage+3,___flsub@a+3
  2390   004D04  0E00               	movlw	0
  2391   004D06  6E51               	movwf	___flsub@b^0,c
  2392   004D08  0E00               	movlw	0
  2393   004D0A  6E52               	movwf	(___flsub@b+1)^0,c
  2394   004D0C  0EA0               	movlw	160
  2395   004D0E  6E53               	movwf	(___flsub@b+2)^0,c
  2396   004D10  0E40               	movlw	64
  2397   004D12  6E54               	movwf	(___flsub@b+3)^0,c
  2398   004D14  EC04  F036         	call	___flsub	;wreg free
  2399   004D18  C051  F028         	movff	?___flsub,___fldiv@b
  2400   004D1C  C052  F029         	movff	?___flsub+1,___fldiv@b+1
  2401   004D20  C053  F02A         	movff	?___flsub+2,___fldiv@b+2
  2402   004D24  C054  F02B         	movff	?___flsub+3,___fldiv@b+3
  2403   004D28  ECC4  F023         	call	___fldiv	;wreg free
  2404   004D2C  C028  F3E8         	movff	?___fldiv,_main$1833
  2405   004D30  C029  F3E9         	movff	?___fldiv+1,_main$1833+1
  2406   004D34  C02A  F3EA         	movff	?___fldiv+2,_main$1833+2
  2407   004D38  C02B  F3EB         	movff	?___fldiv+3,_main$1833+3
  2408   004D3C                     
  2409                           ;newmain.c: 123:         MQ2_Ro += (5.0 - voltage) / voltage;
  2410   004D3C  C3D0  F041         	movff	_MQ2_Ro,___fladd@b
  2411   004D40  C3D1  F042         	movff	_MQ2_Ro+1,___fladd@b+1
  2412   004D44  C3D2  F043         	movff	_MQ2_Ro+2,___fladd@b+2
  2413   004D48  C3D3  F044         	movff	_MQ2_Ro+3,___fladd@b+3
  2414   004D4C  C3E8  F045         	movff	_main$1833,___fladd@a
  2415   004D50  C3E9  F046         	movff	_main$1833+1,___fladd@a+1
  2416   004D54  C3EA  F047         	movff	_main$1833+2,___fladd@a+2
  2417   004D58  C3EB  F048         	movff	_main$1833+3,___fladd@a+3
  2418   004D5C  EC67  F01D         	call	___fladd	;wreg free
  2419   004D60  C041  F3D0         	movff	?___fladd,_MQ2_Ro
  2420   004D64  C042  F3D1         	movff	?___fladd+1,_MQ2_Ro+1
  2421   004D68  C043  F3D2         	movff	?___fladd+2,_MQ2_Ro+2
  2422   004D6C  C044  F3D3         	movff	?___fladd+3,_MQ2_Ro+3
  2423   004D70                     
  2424                           ;newmain.c: 124:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2425   004D70  0E02               	movlw	2
  2426   004D72  0100               	movlb	0	; () banked
  2427   004D74  6FED               	movwf	(??_main+1)& (0+255),b
  2428   004D76  0E04               	movlw	4
  2429   004D78  6FEC               	movwf	??_main& (0+255),b
  2430   004D7A  0EBA               	movlw	186
  2431   004D7C                     u10737:
  2432   004D7C  2EE8               	decfsz	wreg,f,c
  2433   004D7E  D7FE               	bra	u10737
  2434   004D80  2FEC               	decfsz	??_main& (0+255),f,b
  2435   004D82  D7FC               	bra	u10737
  2436   004D84  2FED               	decfsz	(??_main+1)& (0+255),f,b
  2437   004D86  D7FA               	bra	u10737
  2438   004D88  0000               	nop	
  2439   004D8A                     
  2440                           ;newmain.c: 125:     }
  2441   004D8A  0103               	movlb	3	; () banked
  2442   004D8C  4BF8               	infsnz	main@i_676& (0+255),f,b
  2443   004D8E  2BF9               	incf	(main@i_676+1)& (0+255),f,b
  2444   004D90                     
  2445                           ; BSR set to: 3
  2446   004D90  BFF9               	btfsc	(main@i_676+1)& (0+255),7,b
  2447   004D92  EFD4  F026         	goto	u10671
  2448   004D96  51F9               	movf	(main@i_676+1)& (0+255),w,b
  2449   004D98  E109               	bnz	u10670
  2450   004D9A  0E32               	movlw	50
  2451   004D9C  5DF8               	subwf	main@i_676& (0+255),w,b
  2452   004D9E  A0D8               	btfss	status,0,c
  2453   004DA0  EFD4  F026         	goto	u10671
  2454   004DA4  EFD6  F026         	goto	u10670
  2455   004DA8                     u10671:
  2456   004DA8  EF36  F026         	goto	l8072
  2457   004DAC                     u10670:
  2458   004DAC                     
  2459                           ; BSR set to: 3
  2460                           ;newmain.c: 126:     MQ2_Ro /= 50.0;
  2461   004DAC  C3D0  F028         	movff	_MQ2_Ro,___fldiv@b
  2462   004DB0  C3D1  F029         	movff	_MQ2_Ro+1,___fldiv@b+1
  2463   004DB4  C3D2  F02A         	movff	_MQ2_Ro+2,___fldiv@b+2
  2464   004DB8  C3D3  F02B         	movff	_MQ2_Ro+3,___fldiv@b+3
  2465   004DBC  0E00               	movlw	0
  2466   004DBE  6E2C               	movwf	___fldiv@a^0,c
  2467   004DC0  0E00               	movlw	0
  2468   004DC2  6E2D               	movwf	(___fldiv@a+1)^0,c
  2469   004DC4  0E48               	movlw	72
  2470   004DC6  6E2E               	movwf	(___fldiv@a+2)^0,c
  2471   004DC8  0E42               	movlw	66
  2472   004DCA  6E2F               	movwf	(___fldiv@a+3)^0,c
  2473   004DCC  ECC4  F023         	call	___fldiv	;wreg free
  2474   004DD0  C028  F3D0         	movff	?___fldiv,_MQ2_Ro
  2475   004DD4  C029  F3D1         	movff	?___fldiv+1,_MQ2_Ro+1
  2476   004DD8  C02A  F3D2         	movff	?___fldiv+2,_MQ2_Ro+2
  2477   004DDC  C02B  F3D3         	movff	?___fldiv+3,_MQ2_Ro+3
  2478   004DE0                     
  2479                           ;newmain.c: 128:     unsigned int cycle_count = 0;
  2480   004DE0  0E00               	movlw	0
  2481   004DE2  0103               	movlb	3	; () banked
  2482   004DE4  6FF1               	movwf	(main@cycle_count+1)& (0+255),b
  2483   004DE6  0E00               	movlw	0
  2484   004DE8  6FF0               	movwf	main@cycle_count& (0+255),b
  2485   004DEA                     l8090:
  2486                           
  2487                           ;newmain.c: 131:         system_millis += 250;
  2488   004DEA  0EFA               	movlw	250
  2489   004DEC  0102               	movlb	2	; () banked
  2490   004DEE  27FA               	addwf	_system_millis& (0+255),f,b
  2491   004DF0  0E00               	movlw	0
  2492   004DF2  23FB               	addwfc	(_system_millis+1)& (0+255),f,b
  2493   004DF4  23FC               	addwfc	(_system_millis+2)& (0+255),f,b
  2494   004DF6  23FD               	addwfc	(_system_millis+3)& (0+255),f,b
  2495   004DF8                     
  2496                           ; BSR set to: 2
  2497                           ;newmain.c: 133:         Handle_Commands();
  2498   004DF8  EC63  F02C         	call	_Handle_Commands	;wreg free
  2499   004DFC                     
  2500                           ;newmain.c: 135:         if(!shutdown_system) {
  2501   004DFC  0100               	movlb	0	; () banked
  2502   004DFE  51EF               	movf	_shutdown_system& (0+255),w,b
  2503   004E00  A4D8               	btfss	status,2,c
  2504   004E02  EF05  F027         	goto	u10681
  2505   004E06  EF07  F027         	goto	u10680
  2506   004E0A                     u10681:
  2507   004E0A  EF14  F027         	goto	l8102
  2508   004E0E                     u10680:
  2509   004E0E                     
  2510                           ; BSR set to: 0
  2511                           ;newmain.c: 136:             Read_Sensors();
  2512   004E0E  EC5C  F017         	call	_Read_Sensors	;wreg free
  2513   004E12                     
  2514                           ;newmain.c: 137:             if(!trigger_test) {
  2515   004E12  0100               	movlb	0	; () banked
  2516   004E14  51EE               	movf	_trigger_test& (0+255),w,b
  2517   004E16  A4D8               	btfss	status,2,c
  2518   004E18  EF10  F027         	goto	u10691
  2519   004E1C  EF12  F027         	goto	u10690
  2520   004E20                     u10691:
  2521   004E20  EF14  F027         	goto	l8102
  2522   004E24                     u10690:
  2523   004E24                     
  2524                           ; BSR set to: 0
  2525                           ;newmain.c: 138:                 Update_Actuators();
  2526   004E24  EC20  F02D         	call	_Update_Actuators	;wreg free
  2527   004E28                     l8102:
  2528                           
  2529                           ;newmain.c: 142:         Handle_Fire_Events();
  2530   004E28  EC4F  F027         	call	_Handle_Fire_Events	;wreg free
  2531   004E2C                     
  2532                           ;newmain.c: 143:         Handle_Test_Events();
  2533   004E2C  ECB7  F02D         	call	_Handle_Test_Events	;wreg free
  2534   004E30                     
  2535                           ;newmain.c: 144:         Handle_Shutdown_Events();
  2536   004E30  ECF5  F034         	call	_Handle_Shutdown_Events	;wreg free
  2537   004E34                     
  2538                           ;newmain.c: 147:         if(cycle_count >= 4) {
  2539   004E34  0103               	movlb	3	; () banked
  2540   004E36  51F1               	movf	(main@cycle_count+1)& (0+255),w,b
  2541   004E38  E109               	bnz	u10700
  2542   004E3A  0E04               	movlw	4
  2543   004E3C  5DF0               	subwf	main@cycle_count& (0+255),w,b
  2544   004E3E  A0D8               	btfss	status,0,c
  2545   004E40  EF24  F027         	goto	u10701
  2546   004E44  EF26  F027         	goto	u10700
  2547   004E48                     u10701:
  2548   004E48  EF2D  F027         	goto	l8114
  2549   004E4C                     u10700:
  2550   004E4C                     
  2551                           ; BSR set to: 3
  2552                           ;newmain.c: 148:             Send_Data();
  2553   004E4C  EC45  F032         	call	_Send_Data	;wreg free
  2554   004E50                     
  2555                           ;newmain.c: 149:             cycle_count = 0;
  2556   004E50  0E00               	movlw	0
  2557   004E52  0103               	movlb	3	; () banked
  2558   004E54  6FF1               	movwf	(main@cycle_count+1)& (0+255),b
  2559   004E56  0E00               	movlw	0
  2560   004E58  6FF0               	movwf	main@cycle_count& (0+255),b
  2561   004E5A                     l8114:
  2562                           
  2563                           ; BSR set to: 3
  2564                           ;newmain.c: 152:         cycle_count++;
  2565   004E5A  4BF0               	infsnz	main@cycle_count& (0+255),f,b
  2566   004E5C  2BF1               	incf	(main@cycle_count+1)& (0+255),f,b
  2567   004E5E                     
  2568                           ; BSR set to: 3
  2569                           ;newmain.c: 153:         sample_index = (sample_index + 1) % 5;
  2570   004E5E  0E01               	movlw	1
  2571   004E60  2553               	addwf	_sample_index& (0+255),w,b
  2572   004E62  6E01               	movwf	___awmod@dividend^0,c
  2573   004E64  6A02               	clrf	(___awmod@dividend+1)^0,c
  2574   004E66  0E00               	movlw	0
  2575   004E68  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2576   004E6A  0E00               	movlw	0
  2577   004E6C  6E04               	movwf	(___awmod@divisor+1)^0,c
  2578   004E6E  0E05               	movlw	5
  2579   004E70  6E03               	movwf	___awmod@divisor^0,c
  2580   004E72  EC13  F033         	call	___awmod	;wreg free
  2581   004E76  5001               	movf	?___awmod^0,w,c
  2582   004E78  0103               	movlb	3	; () banked
  2583   004E7A  6F53               	movwf	_sample_index& (0+255),b
  2584   004E7C                     
  2585                           ; BSR set to: 3
  2586                           ;newmain.c: 154:         _delay((unsigned long)((250)*(8000000/4000.0)));
  2587   004E7C  0E03               	movlw	3
  2588   004E7E  0100               	movlb	0	; () banked
  2589   004E80  6FED               	movwf	(??_main+1)& (0+255),b
  2590   004E82  0E8A               	movlw	138
  2591   004E84  6FEC               	movwf	??_main& (0+255),b
  2592   004E86  0E55               	movlw	85
  2593   004E88                     u10747:
  2594   004E88  2EE8               	decfsz	wreg,f,c
  2595   004E8A  D7FE               	bra	u10747
  2596   004E8C  2FEC               	decfsz	??_main& (0+255),f,b
  2597   004E8E  D7FC               	bra	u10747
  2598   004E90  2FED               	decfsz	(??_main+1)& (0+255),f,b
  2599   004E92  D7FA               	bra	u10747
  2600   004E94  D000               	nop2	
  2601   004E96  EFF5  F026         	goto	l8090
  2602   004E9A  EF07  F000         	goto	start
  2603   004E9E                     __end_of_main:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function ___awmod *****************
  2607 ;; Defined at:
  2608 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  dividend        2    0[COMRAM] int 
  2611 ;;  divisor         2    2[COMRAM] int 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  sign            1    5[COMRAM] unsigned char 
  2614 ;;  counter         1    4[COMRAM] unsigned char 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  2    0[COMRAM] int 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2624 ;;      Params:         4       0       0       0       0       0       0       0       0
  2625 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2627 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2628 ;;Total ram usage:        6 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; Hardware stack levels required when called: 1
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_main
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text1
  2639   006626                     __ptext1:
  2640                           	callstack 0
  2641   006626                     ___awmod:
  2642                           	callstack 29
  2643   006626  6A06               	clrf	___awmod@sign^0,c
  2644   006628  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2645   00662A  EF1B  F033         	goto	u10600
  2646   00662E  EF19  F033         	goto	u10601
  2647   006632                     u10601:
  2648   006632  EF21  F033         	goto	l8004
  2649   006636                     u10600:
  2650   006636  6C01               	negf	___awmod@dividend^0,c
  2651   006638  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2652   00663A  B0D8               	btfsc	status,0,c
  2653   00663C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2654   00663E  0E01               	movlw	1
  2655   006640  6E06               	movwf	___awmod@sign^0,c
  2656   006642                     l8004:
  2657   006642  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2658   006644  EF28  F033         	goto	u10610
  2659   006648  EF26  F033         	goto	u10611
  2660   00664C                     u10611:
  2661   00664C  EF2C  F033         	goto	l8008
  2662   006650                     u10610:
  2663   006650  6C03               	negf	___awmod@divisor^0,c
  2664   006652  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2665   006654  B0D8               	btfsc	status,0,c
  2666   006656  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2667   006658                     l8008:
  2668   006658  5003               	movf	___awmod@divisor^0,w,c
  2669   00665A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2670   00665C  B4D8               	btfsc	status,2,c
  2671   00665E  EF33  F033         	goto	u10621
  2672   006662  EF35  F033         	goto	u10620
  2673   006666                     u10621:
  2674   006666  EF59  F033         	goto	l8024
  2675   00666A                     u10620:
  2676   00666A  0E01               	movlw	1
  2677   00666C  6E05               	movwf	___awmod@counter^0,c
  2678   00666E  EF3D  F033         	goto	l8014
  2679   006672                     l8012:
  2680   006672  90D8               	bcf	status,0,c
  2681   006674  3603               	rlcf	___awmod@divisor^0,f,c
  2682   006676  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2683   006678  2A05               	incf	___awmod@counter^0,f,c
  2684   00667A                     l8014:
  2685   00667A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2686   00667C  EF42  F033         	goto	u10631
  2687   006680  EF44  F033         	goto	u10630
  2688   006684                     u10631:
  2689   006684  EF39  F033         	goto	l8012
  2690   006688                     u10630:
  2691   006688                     l8016:
  2692   006688  5003               	movf	___awmod@divisor^0,w,c
  2693   00668A  5C01               	subwf	___awmod@dividend^0,w,c
  2694   00668C  5004               	movf	(___awmod@divisor+1)^0,w,c
  2695   00668E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2696   006690  A0D8               	btfss	status,0,c
  2697   006692  EF4D  F033         	goto	u10641
  2698   006696  EF4F  F033         	goto	u10640
  2699   00669A                     u10641:
  2700   00669A  EF53  F033         	goto	l8020
  2701   00669E                     u10640:
  2702   00669E  5003               	movf	___awmod@divisor^0,w,c
  2703   0066A0  5E01               	subwf	___awmod@dividend^0,f,c
  2704   0066A2  5004               	movf	(___awmod@divisor+1)^0,w,c
  2705   0066A4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2706   0066A6                     l8020:
  2707   0066A6  90D8               	bcf	status,0,c
  2708   0066A8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2709   0066AA  3203               	rrcf	___awmod@divisor^0,f,c
  2710   0066AC  2E05               	decfsz	___awmod@counter^0,f,c
  2711   0066AE  EF44  F033         	goto	l8016
  2712   0066B2                     l8024:
  2713   0066B2  5006               	movf	___awmod@sign^0,w,c
  2714   0066B4  B4D8               	btfsc	status,2,c
  2715   0066B6  EF5F  F033         	goto	u10651
  2716   0066BA  EF61  F033         	goto	u10650
  2717   0066BE                     u10651:
  2718   0066BE  EF65  F033         	goto	l8028
  2719   0066C2                     u10650:
  2720   0066C2  6C01               	negf	___awmod@dividend^0,c
  2721   0066C4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2722   0066C6  B0D8               	btfsc	status,0,c
  2723   0066C8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2724   0066CA                     l8028:
  2725   0066CA  C001  F001         	movff	___awmod@dividend,?___awmod
  2726   0066CE  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2727   0066D2  0012               	return		;funcret
  2728   0066D4                     __end_of___awmod:
  2729                           	callstack 0
  2730                           
  2731 ;; *************** function _Update_Actuators *****************
  2732 ;; Defined at:
  2733 ;;		line 363 in file "newmain.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2747 ;;      Params:         0       0       0       0       0       0       0       0       0
  2748 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2749 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2750 ;;      Totals:         1       4       0       0       0       0       0       0       0
  2751 ;;Total ram usage:        5 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 2
  2754 ;; This function calls:
  2755 ;;		___flge
  2756 ;; This function is called by:
  2757 ;;		_main
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text2
  2762   005A40                     __ptext2:
  2763                           	callstack 0
  2764   005A40                     _Update_Actuators:
  2765                           	callstack 28
  2766   005A40                     
  2767                           ;newmain.c: 365:     fire_alarm = flame_detected ||
  2768   005A40  0E01               	movlw	1
  2769   005A42  6E5D               	movwf	_Update_Actuators$751^0,c
  2770   005A44  505E               	movf	_flame_detected^0,w,c
  2771   005A46  A4D8               	btfss	status,2,c
  2772   005A48  EF28  F02D         	goto	u10351
  2773   005A4C  EF2A  F02D         	goto	u10350
  2774   005A50                     u10351:
  2775   005A50  EF60  F02D         	goto	l237
  2776   005A54                     u10350:
  2777   005A54  C344  F060         	movff	_temperature,___flge@ff1
  2778   005A58  C345  F061         	movff	_temperature+1,___flge@ff1+1
  2779   005A5C  C346  F062         	movff	_temperature+2,___flge@ff1+2
  2780   005A60  C347  F063         	movff	_temperature+3,___flge@ff1+3
  2781   005A64  0E00               	movlw	0
  2782   005A66  0100               	movlb	0	; () banked
  2783   005A68  6F64               	movwf	___flge@ff2& (0+255),b
  2784   005A6A  0E00               	movlw	0
  2785   005A6C  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2786   005A6E  0E20               	movlw	32
  2787   005A70  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2788   005A72  0E42               	movlw	66
  2789   005A74  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2790   005A76  EC57  F02F         	call	___flge	;wreg free
  2791   005A7A  0100               	movlb	0	; () banked
  2792   005A7C  B0D8               	btfsc	status,0,c
  2793   005A7E  EF43  F02D         	goto	u10361
  2794   005A82  EF45  F02D         	goto	u10360
  2795   005A86                     u10361:
  2796   005A86  EF60  F02D         	goto	l237
  2797   005A8A                     u10360:
  2798   005A8A                     
  2799                           ; BSR set to: 0
  2800   005A8A  C338  F060         	movff	_co_ppm,___flge@ff1
  2801   005A8E  C339  F061         	movff	_co_ppm+1,___flge@ff1+1
  2802   005A92  C33A  F062         	movff	_co_ppm+2,___flge@ff1+2
  2803   005A96  C33B  F063         	movff	_co_ppm+3,___flge@ff1+3
  2804   005A9A  0E00               	movlw	0
  2805   005A9C  6F64               	movwf	___flge@ff2& (0+255),b
  2806   005A9E  0E00               	movlw	0
  2807   005AA0  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2808   005AA2  0E48               	movlw	72
  2809   005AA4  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2810   005AA6  0E42               	movlw	66
  2811   005AA8  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2812   005AAA  EC57  F02F         	call	___flge	;wreg free
  2813   005AAE  0100               	movlb	0	; () banked
  2814   005AB0  B0D8               	btfsc	status,0,c
  2815   005AB2  EF5D  F02D         	goto	u10371
  2816   005AB6  EF5F  F02D         	goto	u10370
  2817   005ABA                     u10371:
  2818   005ABA  EF60  F02D         	goto	l237
  2819   005ABE                     u10370:
  2820   005ABE                     
  2821                           ; BSR set to: 0
  2822   005ABE  6A5D               	clrf	_Update_Actuators$751^0,c
  2823   005AC0                     l237:
  2824   005AC0  C05D  F355         	movff	_Update_Actuators$751,_fire_alarm
  2825   005AC4                     
  2826                           ;newmain.c: 369:     if(fire_alarm) {
  2827   005AC4  0103               	movlb	3	; () banked
  2828   005AC6  5155               	movf	_fire_alarm& (0+255),w,b
  2829   005AC8  B4D8               	btfsc	status,2,c
  2830   005ACA  EF69  F02D         	goto	u10381
  2831   005ACE  EF6B  F02D         	goto	u10380
  2832   005AD2                     u10381:
  2833   005AD2  EFB2  F02D         	goto	l238
  2834   005AD6                     u10380:
  2835   005AD6                     
  2836                           ; BSR set to: 3
  2837                           ;newmain.c: 370:         PORTBbits.RB0 = 1;
  2838   005AD6  8081               	bsf	129,0,c	;volatile
  2839   005AD8                     
  2840                           ; BSR set to: 3
  2841                           ;newmain.c: 371:         pump_active = 1;
  2842   005AD8  0E01               	movlw	1
  2843   005ADA  6F57               	movwf	_pump_active& (0+255),b
  2844   005ADC                     
  2845                           ; BSR set to: 3
  2846                           ;newmain.c: 374:         static unsigned long last_blink = 0;;newmain.c: 375:         if
      +                          (system_millis - last_blink >= 500) {
  2847   005ADC  5108               	movf	Update_Actuators@last_blink& (0+255),w,b
  2848   005ADE  0102               	movlb	2	; () banked
  2849   005AE0  5DFA               	subwf	_system_millis& (0+255),w,b
  2850   005AE2  0100               	movlb	0	; () banked
  2851   005AE4  6F68               	movwf	??_Update_Actuators& (0+255),b
  2852   005AE6  0103               	movlb	3	; () banked
  2853   005AE8  5109               	movf	(Update_Actuators@last_blink+1)& (0+255),w,b
  2854   005AEA  0102               	movlb	2	; () banked
  2855   005AEC  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  2856   005AEE  0100               	movlb	0	; () banked
  2857   005AF0  6F69               	movwf	(??_Update_Actuators+1)& (0+255),b
  2858   005AF2  0103               	movlb	3	; () banked
  2859   005AF4  510A               	movf	(Update_Actuators@last_blink+2)& (0+255),w,b
  2860   005AF6  0102               	movlb	2	; () banked
  2861   005AF8  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  2862   005AFA  0100               	movlb	0	; () banked
  2863   005AFC  6F6A               	movwf	(??_Update_Actuators+2)& (0+255),b
  2864   005AFE  0103               	movlb	3	; () banked
  2865   005B00  510B               	movf	(Update_Actuators@last_blink+3)& (0+255),w,b
  2866   005B02  0102               	movlb	2	; () banked
  2867   005B04  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  2868   005B06  0100               	movlb	0	; () banked
  2869   005B08  6F6B               	movwf	(??_Update_Actuators+3)& (0+255),b
  2870   005B0A  516B               	movf	(??_Update_Actuators+3)& (0+255),w,b
  2871   005B0C  116A               	iorwf	(??_Update_Actuators+2)& (0+255),w,b
  2872   005B0E  E10B               	bnz	u10390
  2873   005B10  0EF4               	movlw	244
  2874   005B12  5D68               	subwf	??_Update_Actuators& (0+255),w,b
  2875   005B14  0E01               	movlw	1
  2876   005B16  5969               	subwfb	(??_Update_Actuators+1)& (0+255),w,b
  2877   005B18  A0D8               	btfss	status,0,c
  2878   005B1A  EF91  F02D         	goto	u10391
  2879   005B1E  EF93  F02D         	goto	u10390
  2880   005B22                     u10391:
  2881   005B22  EFAD  F02D         	goto	l7906
  2882   005B26                     u10390:
  2883   005B26                     
  2884                           ; BSR set to: 0
  2885                           ;newmain.c: 376:             PORTBbits.RB5 = !PORTBbits.RB5;
  2886   005B26  AA81               	btfss	129,5,c	;volatile
  2887   005B28  EF98  F02D         	goto	u10401
  2888   005B2C  EF9C  F02D         	goto	u10400
  2889   005B30                     u10401:
  2890   005B30  6B68               	clrf	??_Update_Actuators& (0+255),b
  2891   005B32  2B68               	incf	??_Update_Actuators& (0+255),f,b
  2892   005B34  EF9E  F02D         	goto	u10418
  2893   005B38                     u10400:
  2894   005B38  0100               	movlb	0	; () banked
  2895   005B3A  6B68               	clrf	??_Update_Actuators& (0+255),b
  2896   005B3C                     u10418:
  2897   005B3C  3B68               	swapf	??_Update_Actuators& (0+255),f,b
  2898   005B3E  4768               	rlncf	??_Update_Actuators& (0+255),f,b
  2899   005B40  5081               	movf	129,w,c	;volatile
  2900   005B42  1968               	xorwf	??_Update_Actuators& (0+255),w,b
  2901   005B44  0BDF               	andlw	-33
  2902   005B46  1968               	xorwf	??_Update_Actuators& (0+255),w,b
  2903   005B48  6E81               	movwf	129,c	;volatile
  2904   005B4A                     
  2905                           ; BSR set to: 0
  2906                           ;newmain.c: 377:             last_blink = system_millis;
  2907   005B4A  C2FA  F308         	movff	_system_millis,Update_Actuators@last_blink
  2908   005B4E  C2FB  F309         	movff	_system_millis+1,Update_Actuators@last_blink+1
  2909   005B52  C2FC  F30A         	movff	_system_millis+2,Update_Actuators@last_blink+2
  2910   005B56  C2FD  F30B         	movff	_system_millis+3,Update_Actuators@last_blink+3
  2911   005B5A                     l7906:
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;newmain.c: 379:         alarm_active = 1;
  2915   005B5A  0E01               	movlw	1
  2916   005B5C  0103               	movlb	3	; () banked
  2917   005B5E  6F56               	movwf	_alarm_active& (0+255),b
  2918                           
  2919                           ;newmain.c: 380:     } else {
  2920   005B60  EFB6  F02D         	goto	l243
  2921   005B64                     l238:
  2922                           
  2923                           ; BSR set to: 3
  2924                           ;newmain.c: 381:         PORTBbits.RB0 = 0;
  2925   005B64  9081               	bcf	129,0,c	;volatile
  2926                           
  2927                           ;newmain.c: 382:         pump_active = 0;
  2928   005B66  6B57               	clrf	_pump_active& (0+255),b
  2929                           
  2930                           ;newmain.c: 383:         PORTBbits.RB5 = 1;
  2931   005B68  8A81               	bsf	129,5,c	;volatile
  2932                           
  2933                           ;newmain.c: 384:         alarm_active = 0;
  2934   005B6A  6B56               	clrf	_alarm_active& (0+255),b
  2935   005B6C                     l243:
  2936                           
  2937                           ; BSR set to: 3
  2938   005B6C  0012               	return		;funcret
  2939   005B6E                     __end_of_Update_Actuators:
  2940                           	callstack 0
  2941                           
  2942 ;; *************** function _UART_Init *****************
  2943 ;; Defined at:
  2944 ;;		line 427 in file "newmain.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2958 ;;      Params:         0       0       0       0       0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2961 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2962 ;;Total ram usage:        0 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_main
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text3
  2973   006DEC                     __ptext3:
  2974                           	callstack 0
  2975   006DEC                     _UART_Init:
  2976                           	callstack 29
  2977   006DEC                     
  2978                           ;newmain.c: 428:     TRISC6 = 0;
  2979   006DEC  9C94               	bcf	3988,6,c	;volatile
  2980                           
  2981                           ;newmain.c: 429:     TRISC7 = 1;
  2982   006DEE  8E94               	bsf	3988,7,c	;volatile
  2983   006DF0                     
  2984                           ;newmain.c: 430:     SPBRG = 51;
  2985   006DF0  0E33               	movlw	51
  2986   006DF2  6EAF               	movwf	175,c	;volatile
  2987   006DF4                     
  2988                           ;newmain.c: 431:     TXSTAbits.BRGH = 1;
  2989   006DF4  84AC               	bsf	172,2,c	;volatile
  2990   006DF6                     
  2991                           ;newmain.c: 432:     TXSTAbits.SYNC = 0;
  2992   006DF6  98AC               	bcf	172,4,c	;volatile
  2993   006DF8                     
  2994                           ;newmain.c: 433:     TXSTAbits.TXEN = 1;
  2995   006DF8  8AAC               	bsf	172,5,c	;volatile
  2996   006DFA                     
  2997                           ;newmain.c: 434:     RCSTAbits.SPEN = 1;
  2998   006DFA  8EAB               	bsf	171,7,c	;volatile
  2999   006DFC                     
  3000                           ;newmain.c: 435:     RCSTAbits.CREN = 1;
  3001   006DFC  88AB               	bsf	171,4,c	;volatile
  3002   006DFE  0012               	return		;funcret
  3003   006E00                     __end_of_UART_Init:
  3004                           	callstack 0
  3005                           
  3006 ;; *************** function _Send_Data *****************
  3007 ;; Defined at:
  3008 ;;		line 388 in file "newmain.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  i               2  150[BANK1 ] int 
  3013 ;;  buffer        150    0[BANK1 ] unsigned char [150]
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3023 ;;      Params:         0       0       0       0       0       0       0       0       0
  3024 ;;      Locals:         0       0     152       0       0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3026 ;;      Totals:         0       0     152       0       0       0       0       0       0
  3027 ;;Total ram usage:      152 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 9
  3030 ;; This function calls:
  3031 ;;		_sprintf
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text4
  3038   00648A                     __ptext4:
  3039                           	callstack 0
  3040   00648A                     _Send_Data:
  3041                           	callstack 21
  3042   00648A                     
  3043                           ;newmain.c: 389:     char buffer[150];;newmain.c: 390:     sprintf(buffer,
  3044   00648A  0E00               	movlw	low Send_Data@buffer
  3045   00648C  0100               	movlb	0	; () banked
  3046   00648E  6FB0               	movwf	sprintf@s& (0+255),b
  3047   006490  0E01               	movlw	high Send_Data@buffer
  3048   006492  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3049   006494  0ED9               	movlw	low STR_17
  3050   006496  6FB2               	movwf	sprintf@fmt& (0+255),b
  3051   006498  0E7E               	movlw	high STR_17
  3052   00649A  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3053   00649C  C344  F0B4         	movff	_temperature,?_sprintf+4
  3054   0064A0  C345  F0B5         	movff	_temperature+1,?_sprintf+5
  3055   0064A4  C346  F0B6         	movff	_temperature+2,?_sprintf+6
  3056   0064A8  C347  F0B7         	movff	_temperature+3,?_sprintf+7
  3057   0064AC  C05E  F0B8         	movff	_flame_detected,?_sprintf+8
  3058   0064B0  6BB9               	clrf	(?_sprintf+9)& (0+255),b
  3059   0064B2  C340  F0BA         	movff	_flame_intensity,?_sprintf+10
  3060   0064B6  C341  F0BB         	movff	_flame_intensity+1,?_sprintf+11
  3061   0064BA  C342  F0BC         	movff	_flame_intensity+2,?_sprintf+12
  3062   0064BE  C343  F0BD         	movff	_flame_intensity+3,?_sprintf+13
  3063   0064C2  C338  F0BE         	movff	_co_ppm,?_sprintf+14
  3064   0064C6  C339  F0BF         	movff	_co_ppm+1,?_sprintf+15
  3065   0064CA  C33A  F0C0         	movff	_co_ppm+2,?_sprintf+16
  3066   0064CE  C33B  F0C1         	movff	_co_ppm+3,?_sprintf+17
  3067   0064D2  C334  F0C2         	movff	_flow_rate,?_sprintf+18
  3068   0064D6  C335  F0C3         	movff	_flow_rate+1,?_sprintf+19
  3069   0064DA  C336  F0C4         	movff	_flow_rate+2,?_sprintf+20
  3070   0064DE  C337  F0C5         	movff	_flow_rate+3,?_sprintf+21
  3071   0064E2  C330  F0C6         	movff	_total_flow,?_sprintf+22
  3072   0064E6  C331  F0C7         	movff	_total_flow+1,?_sprintf+23
  3073   0064EA  C332  F0C8         	movff	_total_flow+2,?_sprintf+24
  3074   0064EE  C333  F0C9         	movff	_total_flow+3,?_sprintf+25
  3075   0064F2  C357  F0CA         	movff	_pump_active,?_sprintf+26
  3076   0064F6  6BCB               	clrf	(?_sprintf+27)& (0+255),b
  3077   0064F8  C356  F0CC         	movff	_alarm_active,?_sprintf+28
  3078   0064FC  6BCD               	clrf	(?_sprintf+29)& (0+255),b
  3079   0064FE  C0EE  F0CE         	movff	_trigger_test,?_sprintf+30
  3080   006502  6BCF               	clrf	(?_sprintf+31)& (0+255),b
  3081   006504  C0EF  F0D0         	movff	_shutdown_system,?_sprintf+32
  3082   006508  6BD1               	clrf	(?_sprintf+33)& (0+255),b
  3083   00650A  EC27  F036         	call	_sprintf	;wreg free
  3084   00650E                     l246:
  3085   00650E  A2AC               	btfss	172,1,c	;volatile
  3086   006510  EF8C  F032         	goto	u10571
  3087   006514  EF8E  F032         	goto	u10570
  3088   006518                     u10571:
  3089   006518  EF87  F032         	goto	l246
  3090   00651C                     u10570:
  3091   00651C                     
  3092                           ;newmain.c: 396:     for(int i = 0; buffer[i]; i++) {
  3093   00651C  0E00               	movlw	0
  3094   00651E  0101               	movlb	1	; () banked
  3095   006520  6F97               	movwf	(Send_Data@i+1)& (0+255),b
  3096   006522  0E00               	movlw	0
  3097   006524  6F96               	movwf	Send_Data@i& (0+255),b
  3098   006526  EFA7  F032         	goto	l7994
  3099   00652A                     l7990:
  3100                           
  3101                           ; BSR set to: 1
  3102                           ;newmain.c: 397:         TXREG = buffer[i];
  3103   00652A  0E00               	movlw	low Send_Data@buffer
  3104   00652C  2596               	addwf	Send_Data@i& (0+255),w,b
  3105   00652E  6ED9               	movwf	fsr2l,c
  3106   006530  0E01               	movlw	high Send_Data@buffer
  3107   006532  2197               	addwfc	(Send_Data@i+1)& (0+255),w,b
  3108   006534  6EDA               	movwf	fsr2h,c
  3109   006536  50DF               	movf	indf2,w,c
  3110   006538  6EAD               	movwf	173,c	;volatile
  3111   00653A                     l251:
  3112   00653A  A2AC               	btfss	172,1,c	;volatile
  3113   00653C  EFA2  F032         	goto	u10581
  3114   006540  EFA4  F032         	goto	u10580
  3115   006544                     u10581:
  3116   006544  EF9D  F032         	goto	l251
  3117   006548                     u10580:
  3118   006548                     
  3119                           ;newmain.c: 399:     }
  3120   006548  0101               	movlb	1	; () banked
  3121   00654A  4B96               	infsnz	Send_Data@i& (0+255),f,b
  3122   00654C  2B97               	incf	(Send_Data@i+1)& (0+255),f,b
  3123   00654E                     l7994:
  3124                           
  3125                           ; BSR set to: 1
  3126   00654E  0E00               	movlw	low Send_Data@buffer
  3127   006550  2596               	addwf	Send_Data@i& (0+255),w,b
  3128   006552  6ED9               	movwf	fsr2l,c
  3129   006554  0E01               	movlw	high Send_Data@buffer
  3130   006556  2197               	addwfc	(Send_Data@i+1)& (0+255),w,b
  3131   006558  6EDA               	movwf	fsr2h,c
  3132   00655A  50DF               	movf	indf2,w,c
  3133   00655C  A4D8               	btfss	status,2,c
  3134   00655E  EFB3  F032         	goto	u10591
  3135   006562  EFB5  F032         	goto	u10590
  3136   006566                     u10591:
  3137   006566  EF95  F032         	goto	l7990
  3138   00656A                     u10590:
  3139   00656A                     
  3140                           ; BSR set to: 1
  3141   00656A  0012               	return		;funcret
  3142   00656C                     __end_of_Send_Data:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function _Read_Sensors *****************
  3146 ;; Defined at:
  3147 ;;		line 297 in file "newmain.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  pulses          2   59[BANK0 ] unsigned int 
  3152 ;;  raw_co          4   73[BANK0 ] float 
  3153 ;;  Rs              4   69[BANK0 ] float 
  3154 ;;  rs_ro_ratio     4   65[BANK0 ] float 
  3155 ;;  mq2_voltage     4   61[BANK0 ] float 
  3156 ;;  temp_factor     4   37[BANK0 ] float 
  3157 ;;  flame_voltag    4   33[BANK0 ] float 
  3158 ;;  raw_temp        4   29[BANK0 ] float 
  3159 ;;  mq2_adc         2   57[BANK0 ] unsigned int 
  3160 ;;  flame_adc       2   55[BANK0 ] unsigned int 
  3161 ;;  temp_adc        2   53[BANK0 ] unsigned int 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0
  3172 ;;      Locals:         0      48       0       0       0       0       0       0       0
  3173 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3174 ;;      Totals:         0      52       0       0       0       0       0       0       0
  3175 ;;Total ram usage:       52 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 4
  3178 ;; This function calls:
  3179 ;;		_ADC_Read
  3180 ;;		_Apply_Filter
  3181 ;;		___fladd
  3182 ;;		___fldiv
  3183 ;;		___flge
  3184 ;;		___flmul
  3185 ;;		___flsub
  3186 ;;		___xxtofl
  3187 ;;		_powf
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text5
  3194   002EB8                     __ptext5:
  3195                           	callstack 0
  3196   002EB8                     _Read_Sensors:
  3197                           	callstack 26
  3198   002EB8                     
  3199                           ;newmain.c: 299:     unsigned int temp_adc = ADC_Read(0);
  3200   002EB8  0E00               	movlw	0
  3201   002EBA  EC49  F036         	call	_ADC_Read
  3202   002EBE  C001  F095         	movff	?_ADC_Read,Read_Sensors@temp_adc
  3203   002EC2  C002  F096         	movff	?_ADC_Read+1,Read_Sensors@temp_adc+1
  3204   002EC6                     
  3205                           ;newmain.c: 300:     float raw_temp = (temp_adc * 5.0 / 1024.0) / 0.01;
  3206   002EC6  0E00               	movlw	0
  3207   002EC8  6E2C               	movwf	___fldiv@a^0,c
  3208   002ECA  0E00               	movlw	0
  3209   002ECC  6E2D               	movwf	(___fldiv@a+1)^0,c
  3210   002ECE  0E80               	movlw	128
  3211   002ED0  6E2E               	movwf	(___fldiv@a+2)^0,c
  3212   002ED2  0E44               	movlw	68
  3213   002ED4  6E2F               	movwf	(___fldiv@a+3)^0,c
  3214   002ED6  0E00               	movlw	0
  3215   002ED8  6E13               	movwf	___flmul@a^0,c
  3216   002EDA  0E00               	movlw	0
  3217   002EDC  6E14               	movwf	(___flmul@a+1)^0,c
  3218   002EDE  0EA0               	movlw	160
  3219   002EE0  6E15               	movwf	(___flmul@a+2)^0,c
  3220   002EE2  0E40               	movlw	64
  3221   002EE4  6E16               	movwf	(___flmul@a+3)^0,c
  3222   002EE6  C095  F001         	movff	Read_Sensors@temp_adc,___xxtofl@val
  3223   002EEA  C096  F002         	movff	Read_Sensors@temp_adc+1,___xxtofl@val+1
  3224   002EEE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3225   002EF0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3226   002EF2  0E00               	movlw	0
  3227   002EF4  ECB7  F02A         	call	___xxtofl
  3228   002EF8  C001  F00F         	movff	?___xxtofl,___flmul@b
  3229   002EFC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3230   002F00  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3231   002F04  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3232   002F08  ECC2  F01F         	call	___flmul	;wreg free
  3233   002F0C  C00F  F028         	movff	?___flmul,___fldiv@b
  3234   002F10  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3235   002F14  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3236   002F18  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3237   002F1C  ECC4  F023         	call	___fldiv	;wreg free
  3238   002F20  C028  F089         	movff	?___fldiv,_Read_Sensors$1834
  3239   002F24  C029  F08A         	movff	?___fldiv+1,_Read_Sensors$1834+1
  3240   002F28  C02A  F08B         	movff	?___fldiv+2,_Read_Sensors$1834+2
  3241   002F2C  C02B  F08C         	movff	?___fldiv+3,_Read_Sensors$1834+3
  3242   002F30                     
  3243                           ;newmain.c: 300:     float raw_temp = (temp_adc * 5.0 / 1024.0) / 0.01;
  3244   002F30  C089  F028         	movff	_Read_Sensors$1834,___fldiv@b
  3245   002F34  C08A  F029         	movff	_Read_Sensors$1834+1,___fldiv@b+1
  3246   002F38  C08B  F02A         	movff	_Read_Sensors$1834+2,___fldiv@b+2
  3247   002F3C  C08C  F02B         	movff	_Read_Sensors$1834+3,___fldiv@b+3
  3248   002F40  0E0A               	movlw	10
  3249   002F42  6E2C               	movwf	___fldiv@a^0,c
  3250   002F44  0ED7               	movlw	215
  3251   002F46  6E2D               	movwf	(___fldiv@a+1)^0,c
  3252   002F48  0E23               	movlw	35
  3253   002F4A  6E2E               	movwf	(___fldiv@a+2)^0,c
  3254   002F4C  0E3C               	movlw	60
  3255   002F4E  6E2F               	movwf	(___fldiv@a+3)^0,c
  3256   002F50  ECC4  F023         	call	___fldiv	;wreg free
  3257   002F54  C028  F07D         	movff	?___fldiv,Read_Sensors@raw_temp
  3258   002F58  C029  F07E         	movff	?___fldiv+1,Read_Sensors@raw_temp+1
  3259   002F5C  C02A  F07F         	movff	?___fldiv+2,Read_Sensors@raw_temp+2
  3260   002F60  C02B  F080         	movff	?___fldiv+3,Read_Sensors@raw_temp+3
  3261   002F64                     
  3262                           ;newmain.c: 301:     temperature = Apply_Filter(raw_temp, temp_samples);
  3263   002F64  C07D  F051         	movff	Read_Sensors@raw_temp,Apply_Filter@new_value
  3264   002F68  C07E  F052         	movff	Read_Sensors@raw_temp+1,Apply_Filter@new_value+1
  3265   002F6C  C07F  F053         	movff	Read_Sensors@raw_temp+2,Apply_Filter@new_value+2
  3266   002F70  C080  F054         	movff	Read_Sensors@raw_temp+3,Apply_Filter@new_value+3
  3267   002F74  0ED4               	movlw	low _temp_samples
  3268   002F76  6E55               	movwf	Apply_Filter@samples^0,c
  3269   002F78  0E03               	movlw	high _temp_samples
  3270   002F7A  6E56               	movwf	(Apply_Filter@samples+1)^0,c
  3271   002F7C  ECD1  F031         	call	_Apply_Filter	;wreg free
  3272   002F80  C051  F344         	movff	?_Apply_Filter,_temperature
  3273   002F84  C052  F345         	movff	?_Apply_Filter+1,_temperature+1
  3274   002F88  C053  F346         	movff	?_Apply_Filter+2,_temperature+2
  3275   002F8C  C054  F347         	movff	?_Apply_Filter+3,_temperature+3
  3276   002F90                     
  3277                           ;newmain.c: 304:     unsigned int flame_adc = ADC_Read(1);
  3278   002F90  0E01               	movlw	1
  3279   002F92  EC49  F036         	call	_ADC_Read
  3280   002F96  C001  F097         	movff	?_ADC_Read,Read_Sensors@flame_adc
  3281   002F9A  C002  F098         	movff	?_ADC_Read+1,Read_Sensors@flame_adc+1
  3282   002F9E                     
  3283                           ;newmain.c: 305:     float flame_voltage = (flame_adc * 5.0) / 1024.0;
  3284   002F9E  0E00               	movlw	0
  3285   002FA0  6E13               	movwf	___flmul@a^0,c
  3286   002FA2  0E00               	movlw	0
  3287   002FA4  6E14               	movwf	(___flmul@a+1)^0,c
  3288   002FA6  0EA0               	movlw	160
  3289   002FA8  6E15               	movwf	(___flmul@a+2)^0,c
  3290   002FAA  0E40               	movlw	64
  3291   002FAC  6E16               	movwf	(___flmul@a+3)^0,c
  3292   002FAE  C097  F001         	movff	Read_Sensors@flame_adc,___xxtofl@val
  3293   002FB2  C098  F002         	movff	Read_Sensors@flame_adc+1,___xxtofl@val+1
  3294   002FB6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3295   002FB8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3296   002FBA  0E00               	movlw	0
  3297   002FBC  ECB7  F02A         	call	___xxtofl
  3298   002FC0  C001  F00F         	movff	?___xxtofl,___flmul@b
  3299   002FC4  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3300   002FC8  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3301   002FCC  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3302   002FD0  ECC2  F01F         	call	___flmul	;wreg free
  3303   002FD4  C00F  F028         	movff	?___flmul,___fldiv@b
  3304   002FD8  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3305   002FDC  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3306   002FE0  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3307   002FE4  0E00               	movlw	0
  3308   002FE6  6E2C               	movwf	___fldiv@a^0,c
  3309   002FE8  0E00               	movlw	0
  3310   002FEA  6E2D               	movwf	(___fldiv@a+1)^0,c
  3311   002FEC  0E80               	movlw	128
  3312   002FEE  6E2E               	movwf	(___fldiv@a+2)^0,c
  3313   002FF0  0E44               	movlw	68
  3314   002FF2  6E2F               	movwf	(___fldiv@a+3)^0,c
  3315   002FF4  ECC4  F023         	call	___fldiv	;wreg free
  3316   002FF8  C028  F081         	movff	?___fldiv,Read_Sensors@flame_voltage
  3317   002FFC  C029  F082         	movff	?___fldiv+1,Read_Sensors@flame_voltage+1
  3318   003000  C02A  F083         	movff	?___fldiv+2,Read_Sensors@flame_voltage+2
  3319   003004  C02B  F084         	movff	?___fldiv+3,Read_Sensors@flame_voltage+3
  3320   003008                     
  3321                           ;newmain.c: 306:     flame_intensity = (flame_base_voltage - flame_voltage) * 100.0 / fl
      +                          ame_base_voltage;
  3322   003008  0E00               	movlw	0
  3323   00300A  6E13               	movwf	___flmul@a^0,c
  3324   00300C  0E00               	movlw	0
  3325   00300E  6E14               	movwf	(___flmul@a+1)^0,c
  3326   003010  0EC8               	movlw	200
  3327   003012  6E15               	movwf	(___flmul@a+2)^0,c
  3328   003014  0E42               	movlw	66
  3329   003016  6E16               	movwf	(___flmul@a+3)^0,c
  3330   003018  C081  F055         	movff	Read_Sensors@flame_voltage,___flsub@a
  3331   00301C  C082  F056         	movff	Read_Sensors@flame_voltage+1,___flsub@a+1
  3332   003020  C083  F057         	movff	Read_Sensors@flame_voltage+2,___flsub@a+2
  3333   003024  C084  F058         	movff	Read_Sensors@flame_voltage+3,___flsub@a+3
  3334   003028  C33C  F051         	movff	_flame_base_voltage,___flsub@b
  3335   00302C  C33D  F052         	movff	_flame_base_voltage+1,___flsub@b+1
  3336   003030  C33E  F053         	movff	_flame_base_voltage+2,___flsub@b+2
  3337   003034  C33F  F054         	movff	_flame_base_voltage+3,___flsub@b+3
  3338   003038  EC04  F036         	call	___flsub	;wreg free
  3339   00303C  C051  F00F         	movff	?___flsub,___flmul@b
  3340   003040  C052  F010         	movff	?___flsub+1,___flmul@b+1
  3341   003044  C053  F011         	movff	?___flsub+2,___flmul@b+2
  3342   003048  C054  F012         	movff	?___flsub+3,___flmul@b+3
  3343   00304C  ECC2  F01F         	call	___flmul	;wreg free
  3344   003050  C00F  F028         	movff	?___flmul,___fldiv@b
  3345   003054  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3346   003058  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3347   00305C  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3348   003060  C33C  F02C         	movff	_flame_base_voltage,___fldiv@a
  3349   003064  C33D  F02D         	movff	_flame_base_voltage+1,___fldiv@a+1
  3350   003068  C33E  F02E         	movff	_flame_base_voltage+2,___fldiv@a+2
  3351   00306C  C33F  F02F         	movff	_flame_base_voltage+3,___fldiv@a+3
  3352   003070  ECC4  F023         	call	___fldiv	;wreg free
  3353   003074  C028  F340         	movff	?___fldiv,_flame_intensity
  3354   003078  C029  F341         	movff	?___fldiv+1,_flame_intensity+1
  3355   00307C  C02A  F342         	movff	?___fldiv+2,_flame_intensity+2
  3356   003080  C02B  F343         	movff	?___fldiv+3,_flame_intensity+3
  3357   003084                     
  3358                           ;newmain.c: 308:     if(flame_intensity < 0) flame_intensity = 0;
  3359   003084  0103               	movlb	3	; () banked
  3360   003086  BF43               	btfsc	(_flame_intensity+3)& (0+255),7,b
  3361   003088  EF4A  F018         	goto	u10250
  3362   00308C  EF48  F018         	goto	u10251
  3363   003090                     u10251:
  3364   003090  EF52  F018         	goto	l7830
  3365   003094                     u10250:
  3366   003094                     
  3367                           ; BSR set to: 3
  3368   003094  0E00               	movlw	0
  3369   003096  6F40               	movwf	_flame_intensity& (0+255),b
  3370   003098  0E00               	movlw	0
  3371   00309A  6F41               	movwf	(_flame_intensity+1)& (0+255),b
  3372   00309C  0E00               	movlw	0
  3373   00309E  6F42               	movwf	(_flame_intensity+2)& (0+255),b
  3374   0030A0  0E00               	movlw	0
  3375   0030A2  6F43               	movwf	(_flame_intensity+3)& (0+255),b
  3376   0030A4                     l7830:
  3377                           
  3378                           ; BSR set to: 3
  3379                           ;newmain.c: 309:     if(flame_intensity > 100) flame_intensity = 100;
  3380   0030A4  0E00               	movlw	0
  3381   0030A6  0100               	movlb	0	; () banked
  3382   0030A8  6F60               	movwf	___flge@ff1& (0+255),b
  3383   0030AA  0E00               	movlw	0
  3384   0030AC  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3385   0030AE  0EC8               	movlw	200
  3386   0030B0  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3387   0030B2  0E42               	movlw	66
  3388   0030B4  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3389   0030B6  C340  F064         	movff	_flame_intensity,___flge@ff2
  3390   0030BA  C341  F065         	movff	_flame_intensity+1,___flge@ff2+1
  3391   0030BE  C342  F066         	movff	_flame_intensity+2,___flge@ff2+2
  3392   0030C2  C343  F067         	movff	_flame_intensity+3,___flge@ff2+3
  3393   0030C6  EC57  F02F         	call	___flge	;wreg free
  3394   0030CA  0100               	movlb	0	; () banked
  3395   0030CC  B0D8               	btfsc	status,0,c
  3396   0030CE  EF6B  F018         	goto	u10261
  3397   0030D2  EF6D  F018         	goto	u10260
  3398   0030D6                     u10261:
  3399   0030D6  EF76  F018         	goto	l216
  3400   0030DA                     u10260:
  3401   0030DA                     
  3402                           ; BSR set to: 0
  3403   0030DA  0E00               	movlw	0
  3404   0030DC  0103               	movlb	3	; () banked
  3405   0030DE  6F40               	movwf	_flame_intensity& (0+255),b
  3406   0030E0  0E00               	movlw	0
  3407   0030E2  6F41               	movwf	(_flame_intensity+1)& (0+255),b
  3408   0030E4  0EC8               	movlw	200
  3409   0030E6  6F42               	movwf	(_flame_intensity+2)& (0+255),b
  3410   0030E8  0E42               	movlw	66
  3411   0030EA  6F43               	movwf	(_flame_intensity+3)& (0+255),b
  3412   0030EC                     l216:
  3413                           
  3414                           ;newmain.c: 312:     if(!flame_detected && flame_intensity >= 15.0) {
  3415   0030EC  505E               	movf	_flame_detected^0,w,c
  3416   0030EE  A4D8               	btfss	status,2,c
  3417   0030F0  EF7C  F018         	goto	u10271
  3418   0030F4  EF7E  F018         	goto	u10270
  3419   0030F8                     u10271:
  3420   0030F8  EF9D  F018         	goto	l7838
  3421   0030FC                     u10270:
  3422   0030FC  C340  F060         	movff	_flame_intensity,___flge@ff1
  3423   003100  C341  F061         	movff	_flame_intensity+1,___flge@ff1+1
  3424   003104  C342  F062         	movff	_flame_intensity+2,___flge@ff1+2
  3425   003108  C343  F063         	movff	_flame_intensity+3,___flge@ff1+3
  3426   00310C  0E00               	movlw	0
  3427   00310E  0100               	movlb	0	; () banked
  3428   003110  6F64               	movwf	___flge@ff2& (0+255),b
  3429   003112  0E00               	movlw	0
  3430   003114  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3431   003116  0E70               	movlw	112
  3432   003118  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3433   00311A  0E41               	movlw	65
  3434   00311C  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3435   00311E  EC57  F02F         	call	___flge	;wreg free
  3436   003122  0100               	movlb	0	; () banked
  3437   003124  A0D8               	btfss	status,0,c
  3438   003126  EF97  F018         	goto	u10281
  3439   00312A  EF99  F018         	goto	u10280
  3440   00312E                     u10281:
  3441   00312E  EF9D  F018         	goto	l7838
  3442   003132                     u10280:
  3443   003132                     
  3444                           ; BSR set to: 0
  3445                           ;newmain.c: 313:         flame_detected = 1;
  3446   003132  0E01               	movlw	1
  3447   003134  6E5E               	movwf	_flame_detected^0,c
  3448                           
  3449                           ;newmain.c: 314:     } else if(flame_detected && flame_intensity <= (15.0 - 3.0)) {
  3450   003136  EFC1  F018         	goto	l7844
  3451   00313A                     l7838:
  3452   00313A  505E               	movf	_flame_detected^0,w,c
  3453   00313C  B4D8               	btfsc	status,2,c
  3454   00313E  EFA3  F018         	goto	u10291
  3455   003142  EFA5  F018         	goto	u10290
  3456   003146                     u10291:
  3457   003146  EFC1  F018         	goto	l7844
  3458   00314A                     u10290:
  3459   00314A  0E00               	movlw	0
  3460   00314C  0100               	movlb	0	; () banked
  3461   00314E  6F60               	movwf	___flge@ff1& (0+255),b
  3462   003150  0E00               	movlw	0
  3463   003152  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3464   003154  0E40               	movlw	64
  3465   003156  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3466   003158  0E41               	movlw	65
  3467   00315A  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3468   00315C  C340  F064         	movff	_flame_intensity,___flge@ff2
  3469   003160  C341  F065         	movff	_flame_intensity+1,___flge@ff2+1
  3470   003164  C342  F066         	movff	_flame_intensity+2,___flge@ff2+2
  3471   003168  C343  F067         	movff	_flame_intensity+3,___flge@ff2+3
  3472   00316C  EC57  F02F         	call	___flge	;wreg free
  3473   003170  0100               	movlb	0	; () banked
  3474   003172  A0D8               	btfss	status,0,c
  3475   003174  EFBE  F018         	goto	u10301
  3476   003178  EFC0  F018         	goto	u10300
  3477   00317C                     u10301:
  3478   00317C  EFC1  F018         	goto	l7844
  3479   003180                     u10300:
  3480   003180                     
  3481                           ; BSR set to: 0
  3482                           ;newmain.c: 315:         flame_detected = 0;
  3483   003180  6A5E               	clrf	_flame_detected^0,c
  3484   003182                     l7844:
  3485                           
  3486                           ;newmain.c: 319:     unsigned int mq2_adc = ADC_Read(2);
  3487   003182  0E02               	movlw	2
  3488   003184  EC49  F036         	call	_ADC_Read
  3489   003188  C001  F099         	movff	?_ADC_Read,Read_Sensors@mq2_adc
  3490   00318C  C002  F09A         	movff	?_ADC_Read+1,Read_Sensors@mq2_adc+1
  3491   003190                     
  3492                           ;newmain.c: 320:     float mq2_voltage = (mq2_adc * 5.0) / 1024.0;
  3493   003190  0E00               	movlw	0
  3494   003192  6E13               	movwf	___flmul@a^0,c
  3495   003194  0E00               	movlw	0
  3496   003196  6E14               	movwf	(___flmul@a+1)^0,c
  3497   003198  0EA0               	movlw	160
  3498   00319A  6E15               	movwf	(___flmul@a+2)^0,c
  3499   00319C  0E40               	movlw	64
  3500   00319E  6E16               	movwf	(___flmul@a+3)^0,c
  3501   0031A0  C099  F001         	movff	Read_Sensors@mq2_adc,___xxtofl@val
  3502   0031A4  C09A  F002         	movff	Read_Sensors@mq2_adc+1,___xxtofl@val+1
  3503   0031A8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3504   0031AA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3505   0031AC  0E00               	movlw	0
  3506   0031AE  ECB7  F02A         	call	___xxtofl
  3507   0031B2  C001  F00F         	movff	?___xxtofl,___flmul@b
  3508   0031B6  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3509   0031BA  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3510   0031BE  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3511   0031C2  ECC2  F01F         	call	___flmul	;wreg free
  3512   0031C6  C00F  F028         	movff	?___flmul,___fldiv@b
  3513   0031CA  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3514   0031CE  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3515   0031D2  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3516   0031D6  0E00               	movlw	0
  3517   0031D8  6E2C               	movwf	___fldiv@a^0,c
  3518   0031DA  0E00               	movlw	0
  3519   0031DC  6E2D               	movwf	(___fldiv@a+1)^0,c
  3520   0031DE  0E80               	movlw	128
  3521   0031E0  6E2E               	movwf	(___fldiv@a+2)^0,c
  3522   0031E2  0E44               	movlw	68
  3523   0031E4  6E2F               	movwf	(___fldiv@a+3)^0,c
  3524   0031E6  ECC4  F023         	call	___fldiv	;wreg free
  3525   0031EA  C028  F09D         	movff	?___fldiv,Read_Sensors@mq2_voltage
  3526   0031EE  C029  F09E         	movff	?___fldiv+1,Read_Sensors@mq2_voltage+1
  3527   0031F2  C02A  F09F         	movff	?___fldiv+2,Read_Sensors@mq2_voltage+2
  3528   0031F6  C02B  F0A0         	movff	?___fldiv+3,Read_Sensors@mq2_voltage+3
  3529   0031FA                     
  3530                           ;newmain.c: 321:     float Rs = (5.0 - mq2_voltage) / mq2_voltage;
  3531   0031FA  C09D  F055         	movff	Read_Sensors@mq2_voltage,___flsub@a
  3532   0031FE  C09E  F056         	movff	Read_Sensors@mq2_voltage+1,___flsub@a+1
  3533   003202  C09F  F057         	movff	Read_Sensors@mq2_voltage+2,___flsub@a+2
  3534   003206  C0A0  F058         	movff	Read_Sensors@mq2_voltage+3,___flsub@a+3
  3535   00320A  0E00               	movlw	0
  3536   00320C  6E51               	movwf	___flsub@b^0,c
  3537   00320E  0E00               	movlw	0
  3538   003210  6E52               	movwf	(___flsub@b+1)^0,c
  3539   003212  0EA0               	movlw	160
  3540   003214  6E53               	movwf	(___flsub@b+2)^0,c
  3541   003216  0E40               	movlw	64
  3542   003218  6E54               	movwf	(___flsub@b+3)^0,c
  3543   00321A  EC04  F036         	call	___flsub	;wreg free
  3544   00321E  C051  F028         	movff	?___flsub,___fldiv@b
  3545   003222  C052  F029         	movff	?___flsub+1,___fldiv@b+1
  3546   003226  C053  F02A         	movff	?___flsub+2,___fldiv@b+2
  3547   00322A  C054  F02B         	movff	?___flsub+3,___fldiv@b+3
  3548   00322E  C09D  F02C         	movff	Read_Sensors@mq2_voltage,___fldiv@a
  3549   003232  C09E  F02D         	movff	Read_Sensors@mq2_voltage+1,___fldiv@a+1
  3550   003236  C09F  F02E         	movff	Read_Sensors@mq2_voltage+2,___fldiv@a+2
  3551   00323A  C0A0  F02F         	movff	Read_Sensors@mq2_voltage+3,___fldiv@a+3
  3552   00323E  ECC4  F023         	call	___fldiv	;wreg free
  3553   003242  C028  F0A5         	movff	?___fldiv,Read_Sensors@Rs
  3554   003246  C029  F0A6         	movff	?___fldiv+1,Read_Sensors@Rs+1
  3555   00324A  C02A  F0A7         	movff	?___fldiv+2,Read_Sensors@Rs+2
  3556   00324E  C02B  F0A8         	movff	?___fldiv+3,Read_Sensors@Rs+3
  3557                           
  3558                           ;newmain.c: 324:     float temp_factor = 1.0 + 0.02 * (temperature - 25.0);
  3559   003252  0E0A               	movlw	10
  3560   003254  6E13               	movwf	___flmul@a^0,c
  3561   003256  0ED7               	movlw	215
  3562   003258  6E14               	movwf	(___flmul@a+1)^0,c
  3563   00325A  0EA3               	movlw	163
  3564   00325C  6E15               	movwf	(___flmul@a+2)^0,c
  3565   00325E  0E3C               	movlw	60
  3566   003260  6E16               	movwf	(___flmul@a+3)^0,c
  3567   003262  0E00               	movlw	0
  3568   003264  6E45               	movwf	___fladd@a^0,c
  3569   003266  0E00               	movlw	0
  3570   003268  6E46               	movwf	(___fladd@a+1)^0,c
  3571   00326A  0EC8               	movlw	200
  3572   00326C  6E47               	movwf	(___fladd@a+2)^0,c
  3573   00326E  0EC1               	movlw	193
  3574   003270  6E48               	movwf	(___fladd@a+3)^0,c
  3575   003272  C344  F041         	movff	_temperature,___fladd@b
  3576   003276  C345  F042         	movff	_temperature+1,___fladd@b+1
  3577   00327A  C346  F043         	movff	_temperature+2,___fladd@b+2
  3578   00327E  C347  F044         	movff	_temperature+3,___fladd@b+3
  3579   003282  EC67  F01D         	call	___fladd	;wreg free
  3580   003286  C041  F00F         	movff	?___fladd,___flmul@b
  3581   00328A  C042  F010         	movff	?___fladd+1,___flmul@b+1
  3582   00328E  C043  F011         	movff	?___fladd+2,___flmul@b+2
  3583   003292  C044  F012         	movff	?___fladd+3,___flmul@b+3
  3584   003296  ECC2  F01F         	call	___flmul	;wreg free
  3585   00329A  C00F  F08D         	movff	?___flmul,_Read_Sensors$1835
  3586   00329E  C010  F08E         	movff	?___flmul+1,_Read_Sensors$1835+1
  3587   0032A2  C011  F08F         	movff	?___flmul+2,_Read_Sensors$1835+2
  3588   0032A6  C012  F090         	movff	?___flmul+3,_Read_Sensors$1835+3
  3589   0032AA                     
  3590                           ;newmain.c: 324:     float temp_factor = 1.0 + 0.02 * (temperature - 25.0);
  3591   0032AA  C08D  F041         	movff	_Read_Sensors$1835,___fladd@b
  3592   0032AE  C08E  F042         	movff	_Read_Sensors$1835+1,___fladd@b+1
  3593   0032B2  C08F  F043         	movff	_Read_Sensors$1835+2,___fladd@b+2
  3594   0032B6  C090  F044         	movff	_Read_Sensors$1835+3,___fladd@b+3
  3595   0032BA  0E00               	movlw	0
  3596   0032BC  6E45               	movwf	___fladd@a^0,c
  3597   0032BE  0E00               	movlw	0
  3598   0032C0  6E46               	movwf	(___fladd@a+1)^0,c
  3599   0032C2  0E80               	movlw	128
  3600   0032C4  6E47               	movwf	(___fladd@a+2)^0,c
  3601   0032C6  0E3F               	movlw	63
  3602   0032C8  6E48               	movwf	(___fladd@a+3)^0,c
  3603   0032CA  EC67  F01D         	call	___fladd	;wreg free
  3604   0032CE  C041  F085         	movff	?___fladd,Read_Sensors@temp_factor
  3605   0032D2  C042  F086         	movff	?___fladd+1,Read_Sensors@temp_factor+1
  3606   0032D6  C043  F087         	movff	?___fladd+2,Read_Sensors@temp_factor+2
  3607   0032DA  C044  F088         	movff	?___fladd+3,Read_Sensors@temp_factor+3
  3608   0032DE                     
  3609                           ;newmain.c: 325:     Rs /= temp_factor;
  3610   0032DE  C0A5  F028         	movff	Read_Sensors@Rs,___fldiv@b
  3611   0032E2  C0A6  F029         	movff	Read_Sensors@Rs+1,___fldiv@b+1
  3612   0032E6  C0A7  F02A         	movff	Read_Sensors@Rs+2,___fldiv@b+2
  3613   0032EA  C0A8  F02B         	movff	Read_Sensors@Rs+3,___fldiv@b+3
  3614   0032EE  C085  F02C         	movff	Read_Sensors@temp_factor,___fldiv@a
  3615   0032F2  C086  F02D         	movff	Read_Sensors@temp_factor+1,___fldiv@a+1
  3616   0032F6  C087  F02E         	movff	Read_Sensors@temp_factor+2,___fldiv@a+2
  3617   0032FA  C088  F02F         	movff	Read_Sensors@temp_factor+3,___fldiv@a+3
  3618   0032FE  ECC4  F023         	call	___fldiv	;wreg free
  3619   003302  C028  F0A5         	movff	?___fldiv,Read_Sensors@Rs
  3620   003306  C029  F0A6         	movff	?___fldiv+1,Read_Sensors@Rs+1
  3621   00330A  C02A  F0A7         	movff	?___fldiv+2,Read_Sensors@Rs+2
  3622   00330E  C02B  F0A8         	movff	?___fldiv+3,Read_Sensors@Rs+3
  3623   003312                     
  3624                           ;newmain.c: 327:     float rs_ro_ratio = Rs / MQ2_Ro;
  3625   003312  C0A5  F028         	movff	Read_Sensors@Rs,___fldiv@b
  3626   003316  C0A6  F029         	movff	Read_Sensors@Rs+1,___fldiv@b+1
  3627   00331A  C0A7  F02A         	movff	Read_Sensors@Rs+2,___fldiv@b+2
  3628   00331E  C0A8  F02B         	movff	Read_Sensors@Rs+3,___fldiv@b+3
  3629   003322  C3D0  F02C         	movff	_MQ2_Ro,___fldiv@a
  3630   003326  C3D1  F02D         	movff	_MQ2_Ro+1,___fldiv@a+1
  3631   00332A  C3D2  F02E         	movff	_MQ2_Ro+2,___fldiv@a+2
  3632   00332E  C3D3  F02F         	movff	_MQ2_Ro+3,___fldiv@a+3
  3633   003332  ECC4  F023         	call	___fldiv	;wreg free
  3634   003336  C028  F0A1         	movff	?___fldiv,Read_Sensors@rs_ro_ratio
  3635   00333A  C029  F0A2         	movff	?___fldiv+1,Read_Sensors@rs_ro_ratio+1
  3636   00333E  C02A  F0A3         	movff	?___fldiv+2,Read_Sensors@rs_ro_ratio+2
  3637   003342  C02B  F0A4         	movff	?___fldiv+3,Read_Sensors@rs_ro_ratio+3
  3638   003346                     
  3639                           ;newmain.c: 328:     float raw_co = 0.0;
  3640   003346  0E00               	movlw	0
  3641   003348  0100               	movlb	0	; () banked
  3642   00334A  6FA9               	movwf	Read_Sensors@raw_co& (0+255),b
  3643   00334C  0E00               	movlw	0
  3644   00334E  6FAA               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3645   003350  0E00               	movlw	0
  3646   003352  6FAB               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3647   003354  0E00               	movlw	0
  3648   003356  6FAC               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3649   003358                     
  3650                           ; BSR set to: 0
  3651                           ;newmain.c: 330:     if(rs_ro_ratio > 0.1) {
  3652   003358  0ECD               	movlw	205
  3653   00335A  6F60               	movwf	___flge@ff1& (0+255),b
  3654   00335C  0ECC               	movlw	204
  3655   00335E  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3656   003360  0ECC               	movlw	204
  3657   003362  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3658   003364  0E3D               	movlw	61
  3659   003366  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3660   003368  C0A1  F064         	movff	Read_Sensors@rs_ro_ratio,___flge@ff2
  3661   00336C  C0A2  F065         	movff	Read_Sensors@rs_ro_ratio+1,___flge@ff2+1
  3662   003370  C0A3  F066         	movff	Read_Sensors@rs_ro_ratio+2,___flge@ff2+2
  3663   003374  C0A4  F067         	movff	Read_Sensors@rs_ro_ratio+3,___flge@ff2+3
  3664   003378  EC57  F02F         	call	___flge	;wreg free
  3665   00337C  0100               	movlb	0	; () banked
  3666   00337E  B0D8               	btfsc	status,0,c
  3667   003380  EFC4  F019         	goto	u10311
  3668   003384  EFC6  F019         	goto	u10310
  3669   003388                     u10311:
  3670   003388  EFFA  F019         	goto	l7864
  3671   00338C                     u10310:
  3672   00338C                     
  3673                           ; BSR set to: 0
  3674                           ;newmain.c: 331:         raw_co = 15.0 * powf(rs_ro_ratio,-1.5);
  3675   00338C  0E00               	movlw	0
  3676   00338E  6F6C               	movwf	powf@y& (0+255),b
  3677   003390  0E00               	movlw	0
  3678   003392  6F6D               	movwf	(powf@y+1)& (0+255),b
  3679   003394  0EC0               	movlw	192
  3680   003396  6F6E               	movwf	(powf@y+2)& (0+255),b
  3681   003398  0EBF               	movlw	191
  3682   00339A  6F6F               	movwf	(powf@y+3)& (0+255),b
  3683   00339C  C0A1  F068         	movff	Read_Sensors@rs_ro_ratio,powf@x
  3684   0033A0  C0A2  F069         	movff	Read_Sensors@rs_ro_ratio+1,powf@x+1
  3685   0033A4  C0A3  F06A         	movff	Read_Sensors@rs_ro_ratio+2,powf@x+2
  3686   0033A8  C0A4  F06B         	movff	Read_Sensors@rs_ro_ratio+3,powf@x+3
  3687   0033AC  EC09  F000         	call	_powf	;wreg free
  3688   0033B0  C068  F091         	movff	?_powf,_Read_Sensors$1836
  3689   0033B4  C069  F092         	movff	?_powf+1,_Read_Sensors$1836+1
  3690   0033B8  C06A  F093         	movff	?_powf+2,_Read_Sensors$1836+2
  3691   0033BC  C06B  F094         	movff	?_powf+3,_Read_Sensors$1836+3
  3692   0033C0                     
  3693                           ;newmain.c: 331:         raw_co = 15.0 * powf(rs_ro_ratio,-1.5);
  3694   0033C0  C091  F00F         	movff	_Read_Sensors$1836,___flmul@b
  3695   0033C4  C092  F010         	movff	_Read_Sensors$1836+1,___flmul@b+1
  3696   0033C8  C093  F011         	movff	_Read_Sensors$1836+2,___flmul@b+2
  3697   0033CC  C094  F012         	movff	_Read_Sensors$1836+3,___flmul@b+3
  3698   0033D0  0E00               	movlw	0
  3699   0033D2  6E13               	movwf	___flmul@a^0,c
  3700   0033D4  0E00               	movlw	0
  3701   0033D6  6E14               	movwf	(___flmul@a+1)^0,c
  3702   0033D8  0E70               	movlw	112
  3703   0033DA  6E15               	movwf	(___flmul@a+2)^0,c
  3704   0033DC  0E41               	movlw	65
  3705   0033DE  6E16               	movwf	(___flmul@a+3)^0,c
  3706   0033E0  ECC2  F01F         	call	___flmul	;wreg free
  3707   0033E4  C00F  F0A9         	movff	?___flmul,Read_Sensors@raw_co
  3708   0033E8  C010  F0AA         	movff	?___flmul+1,Read_Sensors@raw_co+1
  3709   0033EC  C011  F0AB         	movff	?___flmul+2,Read_Sensors@raw_co+2
  3710   0033F0  C012  F0AC         	movff	?___flmul+3,Read_Sensors@raw_co+3
  3711   0033F4                     l7864:
  3712                           
  3713                           ;newmain.c: 334:     if(raw_co < 0) raw_co = 0;
  3714   0033F4  0100               	movlb	0	; () banked
  3715   0033F6  BFAC               	btfsc	(Read_Sensors@raw_co+3)& (0+255),7,b
  3716   0033F8  EF02  F01A         	goto	u10320
  3717   0033FC  EF00  F01A         	goto	u10321
  3718   003400                     u10321:
  3719   003400  EF0A  F01A         	goto	l7868
  3720   003404                     u10320:
  3721   003404                     
  3722                           ; BSR set to: 0
  3723   003404  0E00               	movlw	0
  3724   003406  6FA9               	movwf	Read_Sensors@raw_co& (0+255),b
  3725   003408  0E00               	movlw	0
  3726   00340A  6FAA               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3727   00340C  0E00               	movlw	0
  3728   00340E  6FAB               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3729   003410  0E00               	movlw	0
  3730   003412  6FAC               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3731   003414                     l7868:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;newmain.c: 335:     if(raw_co > 1000) raw_co = 1000;
  3735   003414  0E00               	movlw	0
  3736   003416  6F60               	movwf	___flge@ff1& (0+255),b
  3737   003418  0E00               	movlw	0
  3738   00341A  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3739   00341C  0E7A               	movlw	122
  3740   00341E  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3741   003420  0E44               	movlw	68
  3742   003422  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3743   003424  C0A9  F064         	movff	Read_Sensors@raw_co,___flge@ff2
  3744   003428  C0AA  F065         	movff	Read_Sensors@raw_co+1,___flge@ff2+1
  3745   00342C  C0AB  F066         	movff	Read_Sensors@raw_co+2,___flge@ff2+2
  3746   003430  C0AC  F067         	movff	Read_Sensors@raw_co+3,___flge@ff2+3
  3747   003434  EC57  F02F         	call	___flge	;wreg free
  3748   003438  0100               	movlb	0	; () banked
  3749   00343A  B0D8               	btfsc	status,0,c
  3750   00343C  EF22  F01A         	goto	u10331
  3751   003440  EF24  F01A         	goto	u10330
  3752   003444                     u10331:
  3753   003444  EF2C  F01A         	goto	l7872
  3754   003448                     u10330:
  3755   003448                     
  3756                           ; BSR set to: 0
  3757   003448  0E00               	movlw	0
  3758   00344A  6FA9               	movwf	Read_Sensors@raw_co& (0+255),b
  3759   00344C  0E00               	movlw	0
  3760   00344E  6FAA               	movwf	(Read_Sensors@raw_co+1)& (0+255),b
  3761   003450  0E7A               	movlw	122
  3762   003452  6FAB               	movwf	(Read_Sensors@raw_co+2)& (0+255),b
  3763   003454  0E44               	movlw	68
  3764   003456  6FAC               	movwf	(Read_Sensors@raw_co+3)& (0+255),b
  3765   003458                     l7872:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;newmain.c: 337:     co_ppm = Apply_Filter(raw_co, co_samples);
  3769   003458  C0A9  F051         	movff	Read_Sensors@raw_co,Apply_Filter@new_value
  3770   00345C  C0AA  F052         	movff	Read_Sensors@raw_co+1,Apply_Filter@new_value+1
  3771   003460  C0AB  F053         	movff	Read_Sensors@raw_co+2,Apply_Filter@new_value+2
  3772   003464  C0AC  F054         	movff	Read_Sensors@raw_co+3,Apply_Filter@new_value+3
  3773   003468  0EBC               	movlw	low _co_samples
  3774   00346A  6E55               	movwf	Apply_Filter@samples^0,c
  3775   00346C  0E03               	movlw	high _co_samples
  3776   00346E  6E56               	movwf	(Apply_Filter@samples+1)^0,c
  3777   003470  ECD1  F031         	call	_Apply_Filter	;wreg free
  3778   003474  C051  F338         	movff	?_Apply_Filter,_co_ppm
  3779   003478  C052  F339         	movff	?_Apply_Filter+1,_co_ppm+1
  3780   00347C  C053  F33A         	movff	?_Apply_Filter+2,_co_ppm+2
  3781   003480  C054  F33B         	movff	?_Apply_Filter+3,_co_ppm+3
  3782   003484                     
  3783                           ;newmain.c: 340:     static unsigned int last_pulse = 0;;newmain.c: 341:     static unsi
      +                          gned long last_flow_time = 0;;newmain.c: 343:     if(system_millis - last_flow_time >= 1
      +                          000) {
  3784   003484  0103               	movlb	3	; () banked
  3785   003486  510C               	movf	Read_Sensors@last_flow_time& (0+255),w,b
  3786   003488  0102               	movlb	2	; () banked
  3787   00348A  5DFA               	subwf	_system_millis& (0+255),w,b
  3788   00348C  0100               	movlb	0	; () banked
  3789   00348E  6F79               	movwf	??_Read_Sensors& (0+255),b
  3790   003490  0103               	movlb	3	; () banked
  3791   003492  510D               	movf	(Read_Sensors@last_flow_time+1)& (0+255),w,b
  3792   003494  0102               	movlb	2	; () banked
  3793   003496  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  3794   003498  0100               	movlb	0	; () banked
  3795   00349A  6F7A               	movwf	(??_Read_Sensors+1)& (0+255),b
  3796   00349C  0103               	movlb	3	; () banked
  3797   00349E  510E               	movf	(Read_Sensors@last_flow_time+2)& (0+255),w,b
  3798   0034A0  0102               	movlb	2	; () banked
  3799   0034A2  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  3800   0034A4  0100               	movlb	0	; () banked
  3801   0034A6  6F7B               	movwf	(??_Read_Sensors+2)& (0+255),b
  3802   0034A8  0103               	movlb	3	; () banked
  3803   0034AA  510F               	movf	(Read_Sensors@last_flow_time+3)& (0+255),w,b
  3804   0034AC  0102               	movlb	2	; () banked
  3805   0034AE  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  3806   0034B0  0100               	movlb	0	; () banked
  3807   0034B2  6F7C               	movwf	(??_Read_Sensors+3)& (0+255),b
  3808   0034B4  517C               	movf	(??_Read_Sensors+3)& (0+255),w,b
  3809   0034B6  117B               	iorwf	(??_Read_Sensors+2)& (0+255),w,b
  3810   0034B8  E10B               	bnz	u10340
  3811   0034BA  0EE8               	movlw	232
  3812   0034BC  5D79               	subwf	??_Read_Sensors& (0+255),w,b
  3813   0034BE  0E03               	movlw	3
  3814   0034C0  597A               	subwfb	(??_Read_Sensors+1)& (0+255),w,b
  3815   0034C2  A0D8               	btfss	status,0,c
  3816   0034C4  EF66  F01A         	goto	u10341
  3817   0034C8  EF68  F01A         	goto	u10340
  3818   0034CC                     u10341:
  3819   0034CC  EFDF  F01A         	goto	l228
  3820   0034D0                     u10340:
  3821   0034D0                     
  3822                           ; BSR set to: 0
  3823                           ;newmain.c: 344:         unsigned int pulses = pulse_count - last_pulse;
  3824   0034D0  0103               	movlb	3	; () banked
  3825   0034D2  514C               	movf	Read_Sensors@last_pulse& (0+255),w,b
  3826   0034D4  5D4E               	subwf	_pulse_count& (0+255),w,b	;volatile
  3827   0034D6  0100               	movlb	0	; () banked
  3828   0034D8  6F9B               	movwf	Read_Sensors@pulses& (0+255),b
  3829   0034DA  0103               	movlb	3	; () banked
  3830   0034DC  514D               	movf	(Read_Sensors@last_pulse+1)& (0+255),w,b
  3831   0034DE  594F               	subwfb	(_pulse_count+1)& (0+255),w,b	;volatile
  3832   0034E0  0100               	movlb	0	; () banked
  3833   0034E2  6F9C               	movwf	(Read_Sensors@pulses+1)& (0+255),b
  3834   0034E4                     
  3835                           ; BSR set to: 0
  3836                           ;newmain.c: 345:         flow_rate = (pulses / (float)450) * 60.0;
  3837   0034E4  0E00               	movlw	0
  3838   0034E6  6E2C               	movwf	___fldiv@a^0,c
  3839   0034E8  0E00               	movlw	0
  3840   0034EA  6E2D               	movwf	(___fldiv@a+1)^0,c
  3841   0034EC  0EE1               	movlw	225
  3842   0034EE  6E2E               	movwf	(___fldiv@a+2)^0,c
  3843   0034F0  0E43               	movlw	67
  3844   0034F2  6E2F               	movwf	(___fldiv@a+3)^0,c
  3845   0034F4  C09B  F001         	movff	Read_Sensors@pulses,___xxtofl@val
  3846   0034F8  C09C  F002         	movff	Read_Sensors@pulses+1,___xxtofl@val+1
  3847   0034FC  6A03               	clrf	(___xxtofl@val+2)^0,c
  3848   0034FE  6A04               	clrf	(___xxtofl@val+3)^0,c
  3849   003500  0E00               	movlw	0
  3850   003502  ECB7  F02A         	call	___xxtofl
  3851   003506  C001  F028         	movff	?___xxtofl,___fldiv@b
  3852   00350A  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3853   00350E  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3854   003512  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3855   003516  ECC4  F023         	call	___fldiv	;wreg free
  3856   00351A  C028  F00F         	movff	?___fldiv,___flmul@b
  3857   00351E  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3858   003522  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3859   003526  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3860   00352A  0E00               	movlw	0
  3861   00352C  6E13               	movwf	___flmul@a^0,c
  3862   00352E  0E00               	movlw	0
  3863   003530  6E14               	movwf	(___flmul@a+1)^0,c
  3864   003532  0E70               	movlw	112
  3865   003534  6E15               	movwf	(___flmul@a+2)^0,c
  3866   003536  0E42               	movlw	66
  3867   003538  6E16               	movwf	(___flmul@a+3)^0,c
  3868   00353A  ECC2  F01F         	call	___flmul	;wreg free
  3869   00353E  C00F  F334         	movff	?___flmul,_flow_rate
  3870   003542  C010  F335         	movff	?___flmul+1,_flow_rate+1
  3871   003546  C011  F336         	movff	?___flmul+2,_flow_rate+2
  3872   00354A  C012  F337         	movff	?___flmul+3,_flow_rate+3
  3873   00354E                     
  3874                           ;newmain.c: 346:         total_flow += flow_rate / 60.0;
  3875   00354E  C330  F041         	movff	_total_flow,___fladd@b
  3876   003552  C331  F042         	movff	_total_flow+1,___fladd@b+1
  3877   003556  C332  F043         	movff	_total_flow+2,___fladd@b+2
  3878   00355A  C333  F044         	movff	_total_flow+3,___fladd@b+3
  3879   00355E  0E00               	movlw	0
  3880   003560  6E2C               	movwf	___fldiv@a^0,c
  3881   003562  0E00               	movlw	0
  3882   003564  6E2D               	movwf	(___fldiv@a+1)^0,c
  3883   003566  0E70               	movlw	112
  3884   003568  6E2E               	movwf	(___fldiv@a+2)^0,c
  3885   00356A  0E42               	movlw	66
  3886   00356C  6E2F               	movwf	(___fldiv@a+3)^0,c
  3887   00356E  C334  F028         	movff	_flow_rate,___fldiv@b
  3888   003572  C335  F029         	movff	_flow_rate+1,___fldiv@b+1
  3889   003576  C336  F02A         	movff	_flow_rate+2,___fldiv@b+2
  3890   00357A  C337  F02B         	movff	_flow_rate+3,___fldiv@b+3
  3891   00357E  ECC4  F023         	call	___fldiv	;wreg free
  3892   003582  C028  F045         	movff	?___fldiv,___fladd@a
  3893   003586  C029  F046         	movff	?___fldiv+1,___fladd@a+1
  3894   00358A  C02A  F047         	movff	?___fldiv+2,___fladd@a+2
  3895   00358E  C02B  F048         	movff	?___fldiv+3,___fladd@a+3
  3896   003592  EC67  F01D         	call	___fladd	;wreg free
  3897   003596  C041  F330         	movff	?___fladd,_total_flow
  3898   00359A  C042  F331         	movff	?___fladd+1,_total_flow+1
  3899   00359E  C043  F332         	movff	?___fladd+2,_total_flow+2
  3900   0035A2  C044  F333         	movff	?___fladd+3,_total_flow+3
  3901   0035A6                     
  3902                           ;newmain.c: 348:         last_pulse = pulse_count;
  3903   0035A6  C34E  F34C         	movff	_pulse_count,Read_Sensors@last_pulse	;volatile
  3904   0035AA  C34F  F34D         	movff	_pulse_count+1,Read_Sensors@last_pulse+1	;volatile
  3905   0035AE                     
  3906                           ;newmain.c: 349:         last_flow_time = system_millis;
  3907   0035AE  C2FA  F30C         	movff	_system_millis,Read_Sensors@last_flow_time
  3908   0035B2  C2FB  F30D         	movff	_system_millis+1,Read_Sensors@last_flow_time+1
  3909   0035B6  C2FC  F30E         	movff	_system_millis+2,Read_Sensors@last_flow_time+2
  3910   0035BA  C2FD  F30F         	movff	_system_millis+3,Read_Sensors@last_flow_time+3
  3911   0035BE                     l228:
  3912   0035BE  0012               	return		;funcret
  3913   0035C0                     __end_of_Read_Sensors:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function _powf *****************
  3917 ;; Defined at:
  3918 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\powf.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  x               4    8[BANK0 ] float 
  3921 ;;  y               4   12[BANK0 ] float 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  s2              4  144[BANK1 ] float 
  3924 ;;  s_h             4  116[BANK1 ] struct fui
  3925 ;;  t_h             4  112[BANK1 ] struct fui
  3926 ;;  t_l             4   52[BANK1 ] float 
  3927 ;;  s_l             4   48[BANK1 ] float 
  3928 ;;  z               4  180[BANK1 ] struct fui
  3929 ;;  t               4  176[BANK1 ] struct fui
  3930 ;;  ix              4  172[BANK1 ] struct fui
  3931 ;;  j               4  168[BANK1 ] long 
  3932 ;;  k               4  164[BANK1 ] long 
  3933 ;;  p_h             4  160[BANK1 ] struct fui
  3934 ;;  is              4  152[BANK1 ] struct fui
  3935 ;;  iy              4  148[BANK1 ] long 
  3936 ;;  t1              4  140[BANK1 ] struct fui
  3937 ;;  n               4  136[BANK1 ] long 
  3938 ;;  hy              4  132[BANK1 ] struct fui
  3939 ;;  v               4  128[BANK1 ] float 
  3940 ;;  u               4  124[BANK1 ] float 
  3941 ;;  ax              4  120[BANK1 ] struct fui
  3942 ;;  p_l             4  108[BANK1 ] float 
  3943 ;;  hx              4  104[BANK1 ] struct fui
  3944 ;;  sn              4  100[BANK1 ] unsigned long 
  3945 ;;  s               4   96[BANK1 ] float 
  3946 ;;  yisint          4   84[BANK1 ] long 
  3947 ;;  r               4   80[BANK1 ] float 
  3948 ;;  w               4   68[BANK1 ] float 
  3949 ;;  y1              4   44[BANK1 ] struct fui
  3950 ;;  i               4   40[BANK1 ] long 
  3951 ;;  z_l             4   36[BANK1 ] float 
  3952 ;;  z_h             4   32[BANK1 ] float 
  3953 ;;  t2              4   28[BANK1 ] float 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  4    8[BANK0 ] float 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3963 ;;      Params:         0       8       0       0       0       0       0       0       0
  3964 ;;      Locals:         0       0     184       0       0       0       0       0       0
  3965 ;;      Temps:          0       9       0       0       0       0       0       0       0
  3966 ;;      Totals:         0      17     184       0       0       0       0       0       0
  3967 ;;Total ram usage:      201 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 3
  3970 ;; This function calls:
  3971 ;;		___fladd
  3972 ;;		___fldiv
  3973 ;;		___flge
  3974 ;;		___flmul
  3975 ;;		___flneg
  3976 ;;		___flsub
  3977 ;;		___xxtofl
  3978 ;;		_scalbnf
  3979 ;;		_sqrtf
  3980 ;; This function is called by:
  3981 ;;		_Read_Sensors
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text6
  3986   000012                     __ptext6:
  3987                           	callstack 0
  3988   000012                     _powf:
  3989                           	callstack 26
  3990   000012  C068  F168         	movff	powf@x,powf@hx
  3991   000016  C069  F169         	movff	powf@x+1,powf@hx+1
  3992   00001A  C06A  F16A         	movff	powf@x+2,powf@hx+2
  3993   00001E  C06B  F16B         	movff	powf@x+3,powf@hx+3
  3994   000022  C06C  F184         	movff	powf@y,powf@hy
  3995   000026  C06D  F185         	movff	powf@y+1,powf@hy+1
  3996   00002A  C06E  F186         	movff	powf@y+2,powf@hy+2
  3997   00002E  C06F  F187         	movff	powf@y+3,powf@hy+3
  3998   000032  0EFF               	movlw	255
  3999   000034  0101               	movlb	1	; () banked
  4000   000036  1568               	andwf	powf@hx& (0+255),w,b
  4001   000038  6FAC               	movwf	powf@ix& (0+255),b
  4002   00003A  0EFF               	movlw	255
  4003   00003C  1569               	andwf	(powf@hx+1)& (0+255),w,b
  4004   00003E  6FAD               	movwf	(powf@ix+1)& (0+255),b
  4005   000040  0EFF               	movlw	255
  4006   000042  156A               	andwf	(powf@hx+2)& (0+255),w,b
  4007   000044  6FAE               	movwf	(powf@ix+2)& (0+255),b
  4008   000046  0E7F               	movlw	127
  4009   000048  156B               	andwf	(powf@hx+3)& (0+255),w,b
  4010   00004A  6FAF               	movwf	(powf@ix+3)& (0+255),b
  4011   00004C  0EFF               	movlw	255
  4012   00004E  1584               	andwf	powf@hy& (0+255),w,b
  4013   000050  6F94               	movwf	powf@iy& (0+255),b
  4014   000052  0EFF               	movlw	255
  4015   000054  1585               	andwf	(powf@hy+1)& (0+255),w,b
  4016   000056  6F95               	movwf	(powf@iy+1)& (0+255),b
  4017   000058  0EFF               	movlw	255
  4018   00005A  1586               	andwf	(powf@hy+2)& (0+255),w,b
  4019   00005C  6F96               	movwf	(powf@iy+2)& (0+255),b
  4020   00005E  0E7F               	movlw	127
  4021   000060  1587               	andwf	(powf@hy+3)& (0+255),w,b
  4022   000062  6F97               	movwf	(powf@iy+3)& (0+255),b
  4023   000064  5194               	movf	powf@iy& (0+255),w,b
  4024   000066  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4025   000068  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  4026   00006A  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  4027   00006C  A4D8               	btfss	status,2,c
  4028   00006E  EF3B  F000         	goto	u9601
  4029   000072  EF3D  F000         	goto	u9600
  4030   000076                     u9601:
  4031   000076  EF48  F000         	goto	l7342
  4032   00007A                     u9600:
  4033   00007A                     
  4034                           ; BSR set to: 1
  4035   00007A  0E00               	movlw	0
  4036   00007C  0100               	movlb	0	; () banked
  4037   00007E  6F68               	movwf	?_powf& (0+255),b
  4038   000080  0E00               	movlw	0
  4039   000082  6F69               	movwf	(?_powf+1)& (0+255),b
  4040   000084  0E80               	movlw	128
  4041   000086  6F6A               	movwf	(?_powf+2)& (0+255),b
  4042   000088  0E3F               	movlw	63
  4043   00008A  6F6B               	movwf	(?_powf+3)& (0+255),b
  4044   00008C  EF63  F012         	goto	l1265
  4045   000090                     l7342:
  4046                           
  4047                           ; BSR set to: 1
  4048   000090  0E80               	movlw	128
  4049   000092  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  4050   000094  E109               	bnz	u9611
  4051   000096  0E3F               	movlw	63
  4052   000098  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  4053   00009A  1168               	iorwf	powf@hx& (0+255),w,b
  4054   00009C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  4055   00009E  A4D8               	btfss	status,2,c
  4056   0000A0  EF54  F000         	goto	u9611
  4057   0000A4  EF56  F000         	goto	u9610
  4058   0000A8                     u9611:
  4059   0000A8  EF61  F000         	goto	l7348
  4060   0000AC                     u9610:
  4061   0000AC                     
  4062                           ; BSR set to: 1
  4063   0000AC  0E00               	movlw	0
  4064   0000AE  0100               	movlb	0	; () banked
  4065   0000B0  6F68               	movwf	?_powf& (0+255),b
  4066   0000B2  0E00               	movlw	0
  4067   0000B4  6F69               	movwf	(?_powf+1)& (0+255),b
  4068   0000B6  0E80               	movlw	128
  4069   0000B8  6F6A               	movwf	(?_powf+2)& (0+255),b
  4070   0000BA  0E3F               	movlw	63
  4071   0000BC  6F6B               	movwf	(?_powf+3)& (0+255),b
  4072   0000BE  EF63  F012         	goto	l1265
  4073   0000C2                     l7348:
  4074                           
  4075                           ; BSR set to: 1
  4076   0000C2  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4077   0000C4  EF72  F000         	goto	u9620
  4078   0000C8  05AC               	decf	powf@ix& (0+255),w,b
  4079   0000CA  0E00               	movlw	0
  4080   0000CC  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4081   0000CE  0E80               	movlw	128
  4082   0000D0  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4083   0000D2  0E7F               	movlw	127
  4084   0000D4  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4085   0000D6  B0D8               	btfsc	status,0,c
  4086   0000D8  EF70  F000         	goto	u9621
  4087   0000DC  EF72  F000         	goto	u9620
  4088   0000E0                     u9621:
  4089   0000E0  EF83  F000         	goto	l7352
  4090   0000E4                     u9620:
  4091   0000E4                     
  4092                           ; BSR set to: 1
  4093   0000E4  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4094   0000E6  EF81  F000         	goto	u9631
  4095   0000EA  0594               	decf	powf@iy& (0+255),w,b
  4096   0000EC  0E00               	movlw	0
  4097   0000EE  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  4098   0000F0  0E80               	movlw	128
  4099   0000F2  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  4100   0000F4  0E7F               	movlw	127
  4101   0000F6  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4102   0000F8  A0D8               	btfss	status,0,c
  4103   0000FA  EF81  F000         	goto	u9631
  4104   0000FE  EF83  F000         	goto	u9630
  4105   000102                     u9631:
  4106   000102  EF9F  F000         	goto	l7356
  4107   000106                     u9630:
  4108   000106                     l7352:
  4109                           
  4110                           ; BSR set to: 1
  4111   000106  C068  F041         	movff	powf@x,___fladd@b
  4112   00010A  C069  F042         	movff	powf@x+1,___fladd@b+1
  4113   00010E  C06A  F043         	movff	powf@x+2,___fladd@b+2
  4114   000112  C06B  F044         	movff	powf@x+3,___fladd@b+3
  4115   000116  C06C  F045         	movff	powf@y,___fladd@a
  4116   00011A  C06D  F046         	movff	powf@y+1,___fladd@a+1
  4117   00011E  C06E  F047         	movff	powf@y+2,___fladd@a+2
  4118   000122  C06F  F048         	movff	powf@y+3,___fladd@a+3
  4119   000126  EC67  F01D         	call	___fladd	;wreg free
  4120   00012A  C041  F068         	movff	?___fladd,?_powf
  4121   00012E  C042  F069         	movff	?___fladd+1,?_powf+1
  4122   000132  C043  F06A         	movff	?___fladd+2,?_powf+2
  4123   000136  C044  F06B         	movff	?___fladd+3,?_powf+3
  4124   00013A  EF63  F012         	goto	l1265
  4125   00013E                     l7356:
  4126                           
  4127                           ; BSR set to: 1
  4128   00013E  0E00               	movlw	0
  4129   000140  6F54               	movwf	powf@yisint& (0+255),b
  4130   000142  0E00               	movlw	0
  4131   000144  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4132   000146  0E00               	movlw	0
  4133   000148  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4134   00014A  0E00               	movlw	0
  4135   00014C  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4136   00014E                     
  4137                           ; BSR set to: 1
  4138   00014E  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4139   000150  EFAE  F000         	goto	u9640
  4140   000154  EFAC  F000         	goto	u9641
  4141   000158                     u9641:
  4142   000158  EF7A  F001         	goto	l1270
  4143   00015C                     u9640:
  4144   00015C                     
  4145                           ; BSR set to: 1
  4146   00015C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4147   00015E  EFBA  F000         	goto	u9651
  4148   000162  0E80               	movlw	128
  4149   000164  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4150   000166  0E4B               	movlw	75
  4151   000168  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4152   00016A  A0D8               	btfss	status,0,c
  4153   00016C  EFBA  F000         	goto	u9651
  4154   000170  EFBC  F000         	goto	u9650
  4155   000174                     u9651:
  4156   000174  EFC6  F000         	goto	l7364
  4157   000178                     u9650:
  4158   000178                     
  4159                           ; BSR set to: 1
  4160   000178  0E02               	movlw	2
  4161   00017A  6F54               	movwf	powf@yisint& (0+255),b
  4162   00017C  0E00               	movlw	0
  4163   00017E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4164   000180  0E00               	movlw	0
  4165   000182  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4166   000184  0E00               	movlw	0
  4167   000186  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4168   000188  EF7A  F001         	goto	l1270
  4169   00018C                     l7364:
  4170                           
  4171                           ; BSR set to: 1
  4172   00018C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4173   00018E  EFD2  F000         	goto	u9661
  4174   000192  0E80               	movlw	128
  4175   000194  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4176   000196  0E3F               	movlw	63
  4177   000198  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4178   00019A  A0D8               	btfss	status,0,c
  4179   00019C  EFD2  F000         	goto	u9661
  4180   0001A0  EFD4  F000         	goto	u9660
  4181   0001A4                     u9661:
  4182   0001A4  EF7A  F001         	goto	l1270
  4183   0001A8                     u9660:
  4184   0001A8                     
  4185                           ; BSR set to: 1
  4186   0001A8  0E17               	movlw	23
  4187   0001AA  0100               	movlb	0	; () banked
  4188   0001AC  6F70               	movwf	??_powf& (0+255),b
  4189   0001AE  C194  F071         	movff	powf@iy,??_powf+1
  4190   0001B2  C195  F072         	movff	powf@iy+1,??_powf+2
  4191   0001B6  C196  F073         	movff	powf@iy+2,??_powf+3
  4192   0001BA  C197  F074         	movff	powf@iy+3,??_powf+4
  4193   0001BE                     u9675:
  4194   0001BE  6770               	tstfsz	??_powf& (0+255),b
  4195   0001C0  EFE4  F000         	goto	u9676
  4196   0001C4  EFEC  F000         	goto	u9677
  4197   0001C8                     u9676:
  4198   0001C8  3574               	rlcf	(??_powf+4)& (0+255),w,b
  4199   0001CA  3374               	rrcf	(??_powf+4)& (0+255),f,b
  4200   0001CC  3373               	rrcf	(??_powf+3)& (0+255),f,b
  4201   0001CE  3372               	rrcf	(??_powf+2)& (0+255),f,b
  4202   0001D0  3371               	rrcf	(??_powf+1)& (0+255),f,b
  4203   0001D2  2F70               	decfsz	??_powf& (0+255),f,b
  4204   0001D4  EFDF  F000         	goto	u9675
  4205   0001D8                     u9677:
  4206   0001D8  0E81               	movlw	129
  4207   0001DA  0100               	movlb	0	; () banked
  4208   0001DC  2571               	addwf	(??_powf+1)& (0+255),w,b
  4209   0001DE  0101               	movlb	1	; () banked
  4210   0001E0  6FA4               	movwf	powf@k& (0+255),b
  4211   0001E2  0EFF               	movlw	255
  4212   0001E4  0100               	movlb	0	; () banked
  4213   0001E6  2172               	addwfc	(??_powf+2)& (0+255),w,b
  4214   0001E8  0101               	movlb	1	; () banked
  4215   0001EA  6FA5               	movwf	(powf@k+1)& (0+255),b
  4216   0001EC  0EFF               	movlw	255
  4217   0001EE  0100               	movlb	0	; () banked
  4218   0001F0  2173               	addwfc	(??_powf+3)& (0+255),w,b
  4219   0001F2  0101               	movlb	1	; () banked
  4220   0001F4  6FA6               	movwf	(powf@k+2)& (0+255),b
  4221   0001F6  0EFF               	movlw	255
  4222   0001F8  0100               	movlb	0	; () banked
  4223   0001FA  2174               	addwfc	(??_powf+4)& (0+255),w,b
  4224   0001FC  0101               	movlb	1	; () banked
  4225   0001FE  6FA7               	movwf	(powf@k+3)& (0+255),b
  4226   000200  51A4               	movf	powf@k& (0+255),w,b
  4227   000202  0817               	sublw	23
  4228   000204  0100               	movlb	0	; () banked
  4229   000206  6F70               	movwf	??_powf& (0+255),b
  4230   000208  C194  F071         	movff	powf@iy,??_powf+1
  4231   00020C  C195  F072         	movff	powf@iy+1,??_powf+2
  4232   000210  C196  F073         	movff	powf@iy+2,??_powf+3
  4233   000214  C197  F074         	movff	powf@iy+3,??_powf+4
  4234   000218                     u9685:
  4235   000218  6770               	tstfsz	??_powf& (0+255),b
  4236   00021A  EF11  F001         	goto	u9686
  4237   00021E  EF19  F001         	goto	u9687
  4238   000222                     u9686:
  4239   000222  3574               	rlcf	(??_powf+4)& (0+255),w,b
  4240   000224  3374               	rrcf	(??_powf+4)& (0+255),f,b
  4241   000226  3373               	rrcf	(??_powf+3)& (0+255),f,b
  4242   000228  3372               	rrcf	(??_powf+2)& (0+255),f,b
  4243   00022A  3371               	rrcf	(??_powf+1)& (0+255),f,b
  4244   00022C  2F70               	decfsz	??_powf& (0+255),f,b
  4245   00022E  EF0C  F001         	goto	u9685
  4246   000232                     u9687:
  4247   000232  C071  F1A8         	movff	??_powf+1,powf@j
  4248   000236  C072  F1A9         	movff	??_powf+2,powf@j+1
  4249   00023A  C073  F1AA         	movff	??_powf+3,powf@j+2
  4250   00023E  C074  F1AB         	movff	??_powf+4,powf@j+3
  4251   000242  0101               	movlb	1	; () banked
  4252   000244  51A4               	movf	powf@k& (0+255),w,b
  4253   000246  0817               	sublw	23
  4254   000248  0100               	movlb	0	; () banked
  4255   00024A  6F70               	movwf	??_powf& (0+255),b
  4256   00024C  C1A8  F071         	movff	powf@j,??_powf+1
  4257   000250  C1A9  F072         	movff	powf@j+1,??_powf+2
  4258   000254  C1AA  F073         	movff	powf@j+2,??_powf+3
  4259   000258  C1AB  F074         	movff	powf@j+3,??_powf+4
  4260   00025C  2B70               	incf	??_powf& (0+255),f,b
  4261   00025E  EF36  F001         	goto	u9690
  4262   000262                     u9695:
  4263   000262  90D8               	bcf	status,0,c
  4264   000264  3771               	rlcf	(??_powf+1)& (0+255),f,b
  4265   000266  3772               	rlcf	(??_powf+2)& (0+255),f,b
  4266   000268  3773               	rlcf	(??_powf+3)& (0+255),f,b
  4267   00026A  3774               	rlcf	(??_powf+4)& (0+255),f,b
  4268   00026C                     u9690:
  4269   00026C  2F70               	decfsz	??_powf& (0+255),f,b
  4270   00026E  EF31  F001         	goto	u9695
  4271   000272  0101               	movlb	1	; () banked
  4272   000274  5194               	movf	powf@iy& (0+255),w,b
  4273   000276  0100               	movlb	0	; () banked
  4274   000278  1971               	xorwf	(??_powf+1)& (0+255),w,b
  4275   00027A  E113               	bnz	u9701
  4276   00027C  0101               	movlb	1	; () banked
  4277   00027E  5195               	movf	(powf@iy+1)& (0+255),w,b
  4278   000280  0100               	movlb	0	; () banked
  4279   000282  1972               	xorwf	(??_powf+2)& (0+255),w,b
  4280   000284  E10E               	bnz	u9701
  4281   000286  0101               	movlb	1	; () banked
  4282   000288  5196               	movf	(powf@iy+2)& (0+255),w,b
  4283   00028A  0100               	movlb	0	; () banked
  4284   00028C  1973               	xorwf	(??_powf+3)& (0+255),w,b
  4285   00028E  E109               	bnz	u9701
  4286   000290  0101               	movlb	1	; () banked
  4287   000292  5197               	movf	(powf@iy+3)& (0+255),w,b
  4288   000294  0100               	movlb	0	; () banked
  4289   000296  1974               	xorwf	(??_powf+4)& (0+255),w,b
  4290   000298  A4D8               	btfss	status,2,c
  4291   00029A  EF51  F001         	goto	u9701
  4292   00029E  EF53  F001         	goto	u9700
  4293   0002A2                     u9701:
  4294   0002A2  EF7A  F001         	goto	l1270
  4295   0002A6                     u9700:
  4296   0002A6                     
  4297                           ; BSR set to: 0
  4298   0002A6  0E01               	movlw	1
  4299   0002A8  0101               	movlb	1	; () banked
  4300   0002AA  15A8               	andwf	powf@j& (0+255),w,b
  4301   0002AC  0100               	movlb	0	; () banked
  4302   0002AE  6F70               	movwf	??_powf& (0+255),b
  4303   0002B0  0E00               	movlw	0
  4304   0002B2  0101               	movlb	1	; () banked
  4305   0002B4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  4306   0002B6  0100               	movlb	0	; () banked
  4307   0002B8  6F71               	movwf	(??_powf+1)& (0+255),b
  4308   0002BA  0E00               	movlw	0
  4309   0002BC  0101               	movlb	1	; () banked
  4310   0002BE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  4311   0002C0  0100               	movlb	0	; () banked
  4312   0002C2  6F72               	movwf	(??_powf+2)& (0+255),b
  4313   0002C4  0E00               	movlw	0
  4314   0002C6  0101               	movlb	1	; () banked
  4315   0002C8  15AB               	andwf	(powf@j+3)& (0+255),w,b
  4316   0002CA  0100               	movlb	0	; () banked
  4317   0002CC  6F73               	movwf	(??_powf+3)& (0+255),b
  4318   0002CE  5170               	movf	??_powf& (0+255),w,b
  4319   0002D0  0802               	sublw	2
  4320   0002D2  0101               	movlb	1	; () banked
  4321   0002D4  6F54               	movwf	powf@yisint& (0+255),b
  4322   0002D6  0E00               	movlw	0
  4323   0002D8  0100               	movlb	0	; () banked
  4324   0002DA  5571               	subfwb	(??_powf+1)& (0+255),w,b
  4325   0002DC  0101               	movlb	1	; () banked
  4326   0002DE  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4327   0002E0  0E00               	movlw	0
  4328   0002E2  0100               	movlb	0	; () banked
  4329   0002E4  5572               	subfwb	(??_powf+2)& (0+255),w,b
  4330   0002E6  0101               	movlb	1	; () banked
  4331   0002E8  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4332   0002EA  0E00               	movlw	0
  4333   0002EC  0100               	movlb	0	; () banked
  4334   0002EE  5573               	subfwb	(??_powf+3)& (0+255),w,b
  4335   0002F0  0101               	movlb	1	; () banked
  4336   0002F2  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4337   0002F4                     l1270:
  4338   0002F4  0E80               	movlw	128
  4339   0002F6  0101               	movlb	1	; () banked
  4340   0002F8  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4341   0002FA  E109               	bnz	u9711
  4342   0002FC  0E7F               	movlw	127
  4343   0002FE  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4344   000300  1194               	iorwf	powf@iy& (0+255),w,b
  4345   000302  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4346   000304  A4D8               	btfss	status,2,c
  4347   000306  EF87  F001         	goto	u9711
  4348   00030A  EF89  F001         	goto	u9710
  4349   00030E                     u9711:
  4350   00030E  EFF5  F001         	goto	l7394
  4351   000312                     u9710:
  4352   000312                     
  4353                           ; BSR set to: 1
  4354   000312  0E80               	movlw	128
  4355   000314  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4356   000316  E109               	bnz	u9721
  4357   000318  0E3F               	movlw	63
  4358   00031A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4359   00031C  11AC               	iorwf	powf@ix& (0+255),w,b
  4360   00031E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4361   000320  A4D8               	btfss	status,2,c
  4362   000322  EF95  F001         	goto	u9721
  4363   000326  EF97  F001         	goto	u9720
  4364   00032A                     u9721:
  4365   00032A  EFA2  F001         	goto	l7378
  4366   00032E                     u9720:
  4367   00032E                     
  4368                           ; BSR set to: 1
  4369   00032E  0E00               	movlw	0
  4370   000330  0100               	movlb	0	; () banked
  4371   000332  6F68               	movwf	?_powf& (0+255),b
  4372   000334  0E00               	movlw	0
  4373   000336  6F69               	movwf	(?_powf+1)& (0+255),b
  4374   000338  0E80               	movlw	128
  4375   00033A  6F6A               	movwf	(?_powf+2)& (0+255),b
  4376   00033C  0E3F               	movlw	63
  4377   00033E  6F6B               	movwf	(?_powf+3)& (0+255),b
  4378   000340  EF63  F012         	goto	l1265
  4379   000344                     l7378:
  4380                           
  4381                           ; BSR set to: 1
  4382   000344  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4383   000346  EFB1  F001         	goto	u9731
  4384   00034A  05AC               	decf	powf@ix& (0+255),w,b
  4385   00034C  0E00               	movlw	0
  4386   00034E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4387   000350  0E80               	movlw	128
  4388   000352  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4389   000354  0E3F               	movlw	63
  4390   000356  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4391   000358  A0D8               	btfss	status,0,c
  4392   00035A  EFB1  F001         	goto	u9731
  4393   00035E  EFB3  F001         	goto	u9730
  4394   000362                     u9731:
  4395   000362  EFCF  F001         	goto	l7386
  4396   000366                     u9730:
  4397   000366                     
  4398                           ; BSR set to: 1
  4399   000366  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4400   000368  EFBA  F001         	goto	u9740
  4401   00036C  EFB8  F001         	goto	u9741
  4402   000370                     u9741:
  4403   000370  EFC5  F001         	goto	l1280
  4404   000374                     u9740:
  4405   000374                     
  4406                           ; BSR set to: 1
  4407   000374  0E00               	movlw	0
  4408   000376  0100               	movlb	0	; () banked
  4409   000378  6F68               	movwf	?_powf& (0+255),b
  4410   00037A  0E00               	movlw	0
  4411   00037C  6F69               	movwf	(?_powf+1)& (0+255),b
  4412   00037E  0E00               	movlw	0
  4413   000380  6F6A               	movwf	(?_powf+2)& (0+255),b
  4414   000382  0E00               	movlw	0
  4415   000384  6F6B               	movwf	(?_powf+3)& (0+255),b
  4416   000386  EF63  F012         	goto	l1265
  4417   00038A                     l1280:
  4418                           
  4419                           ; BSR set to: 1
  4420   00038A  C06C  F068         	movff	powf@y,?_powf
  4421   00038E  C06D  F069         	movff	powf@y+1,?_powf+1
  4422   000392  C06E  F06A         	movff	powf@y+2,?_powf+2
  4423   000396  C06F  F06B         	movff	powf@y+3,?_powf+3
  4424   00039A  EF63  F012         	goto	l1265
  4425   00039E                     l7386:
  4426                           
  4427                           ; BSR set to: 1
  4428   00039E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4429   0003A0  EFD6  F001         	goto	u9750
  4430   0003A4  EFD4  F001         	goto	u9751
  4431   0003A8                     u9751:
  4432   0003A8  EFEA  F001         	goto	l7390
  4433   0003AC                     u9750:
  4434   0003AC                     
  4435                           ; BSR set to: 1
  4436   0003AC  C06C  F001         	movff	powf@y,___flneg@f1
  4437   0003B0  C06D  F002         	movff	powf@y+1,___flneg@f1+1
  4438   0003B4  C06E  F003         	movff	powf@y+2,___flneg@f1+2
  4439   0003B8  C06F  F004         	movff	powf@y+3,___flneg@f1+3
  4440   0003BC  ECA6  F036         	call	___flneg	;wreg free
  4441   0003C0  C001  F068         	movff	?___flneg,?_powf
  4442   0003C4  C002  F069         	movff	?___flneg+1,?_powf+1
  4443   0003C8  C003  F06A         	movff	?___flneg+2,?_powf+2
  4444   0003CC  C004  F06B         	movff	?___flneg+3,?_powf+3
  4445   0003D0  EF63  F012         	goto	l1265
  4446   0003D4                     l7390:
  4447                           
  4448                           ; BSR set to: 1
  4449   0003D4  0E00               	movlw	0
  4450   0003D6  0100               	movlb	0	; () banked
  4451   0003D8  6F68               	movwf	?_powf& (0+255),b
  4452   0003DA  0E00               	movlw	0
  4453   0003DC  6F69               	movwf	(?_powf+1)& (0+255),b
  4454   0003DE  0E00               	movlw	0
  4455   0003E0  6F6A               	movwf	(?_powf+2)& (0+255),b
  4456   0003E2  0E00               	movlw	0
  4457   0003E4  6F6B               	movwf	(?_powf+3)& (0+255),b
  4458   0003E6  EF63  F012         	goto	l1265
  4459   0003EA                     l7394:
  4460                           
  4461                           ; BSR set to: 1
  4462   0003EA  0E80               	movlw	128
  4463   0003EC  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4464   0003EE  E109               	bnz	u9761
  4465   0003F0  0E3F               	movlw	63
  4466   0003F2  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4467   0003F4  1194               	iorwf	powf@iy& (0+255),w,b
  4468   0003F6  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4469   0003F8  A4D8               	btfss	status,2,c
  4470   0003FA  EF01  F002         	goto	u9761
  4471   0003FE  EF03  F002         	goto	u9760
  4472   000402                     u9761:
  4473   000402  EF30  F002         	goto	l7400
  4474   000406                     u9760:
  4475   000406                     
  4476                           ; BSR set to: 1
  4477   000406  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4478   000408  EF0A  F002         	goto	u9770
  4479   00040C  EF08  F002         	goto	u9771
  4480   000410                     u9771:
  4481   000410  EF26  F002         	goto	l1290
  4482   000414                     u9770:
  4483   000414                     
  4484                           ; BSR set to: 1
  4485   000414  0E00               	movlw	0
  4486   000416  6E28               	movwf	___fldiv@b^0,c
  4487   000418  0E00               	movlw	0
  4488   00041A  6E29               	movwf	(___fldiv@b+1)^0,c
  4489   00041C  0E80               	movlw	128
  4490   00041E  6E2A               	movwf	(___fldiv@b+2)^0,c
  4491   000420  0E3F               	movlw	63
  4492   000422  6E2B               	movwf	(___fldiv@b+3)^0,c
  4493   000424  C068  F02C         	movff	powf@x,___fldiv@a
  4494   000428  C069  F02D         	movff	powf@x+1,___fldiv@a+1
  4495   00042C  C06A  F02E         	movff	powf@x+2,___fldiv@a+2
  4496   000430  C06B  F02F         	movff	powf@x+3,___fldiv@a+3
  4497   000434  ECC4  F023         	call	___fldiv	;wreg free
  4498   000438  C028  F068         	movff	?___fldiv,?_powf
  4499   00043C  C029  F069         	movff	?___fldiv+1,?_powf+1
  4500   000440  C02A  F06A         	movff	?___fldiv+2,?_powf+2
  4501   000444  C02B  F06B         	movff	?___fldiv+3,?_powf+3
  4502   000448  EF63  F012         	goto	l1265
  4503   00044C                     l1290:
  4504                           
  4505                           ; BSR set to: 1
  4506   00044C  C068  F068         	movff	powf@x,?_powf
  4507   000450  C069  F069         	movff	powf@x+1,?_powf+1
  4508   000454  C06A  F06A         	movff	powf@x+2,?_powf+2
  4509   000458  C06B  F06B         	movff	powf@x+3,?_powf+3
  4510   00045C  EF63  F012         	goto	l1265
  4511   000460                     l7400:
  4512                           
  4513                           ; BSR set to: 1
  4514   000460  0E40               	movlw	64
  4515   000462  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4516   000464  1184               	iorwf	powf@hy& (0+255),w,b
  4517   000466  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4518   000468  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4519   00046A  A4D8               	btfss	status,2,c
  4520   00046C  EF3A  F002         	goto	u9781
  4521   000470  EF3C  F002         	goto	u9780
  4522   000474                     u9781:
  4523   000474  EF58  F002         	goto	l7406
  4524   000478                     u9780:
  4525   000478                     
  4526                           ; BSR set to: 1
  4527   000478  C068  F00F         	movff	powf@x,___flmul@b
  4528   00047C  C069  F010         	movff	powf@x+1,___flmul@b+1
  4529   000480  C06A  F011         	movff	powf@x+2,___flmul@b+2
  4530   000484  C06B  F012         	movff	powf@x+3,___flmul@b+3
  4531   000488  C068  F013         	movff	powf@x,___flmul@a
  4532   00048C  C069  F014         	movff	powf@x+1,___flmul@a+1
  4533   000490  C06A  F015         	movff	powf@x+2,___flmul@a+2
  4534   000494  C06B  F016         	movff	powf@x+3,___flmul@a+3
  4535   000498  ECC2  F01F         	call	___flmul	;wreg free
  4536   00049C  C00F  F068         	movff	?___flmul,?_powf
  4537   0004A0  C010  F069         	movff	?___flmul+1,?_powf+1
  4538   0004A4  C011  F06A         	movff	?___flmul+2,?_powf+2
  4539   0004A8  C012  F06B         	movff	?___flmul+3,?_powf+3
  4540   0004AC  EF63  F012         	goto	l1265
  4541   0004B0                     l7406:
  4542                           
  4543                           ; BSR set to: 1
  4544   0004B0  0E3F               	movlw	63
  4545   0004B2  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4546   0004B4  1184               	iorwf	powf@hy& (0+255),w,b
  4547   0004B6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4548   0004B8  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4549   0004BA  A4D8               	btfss	status,2,c
  4550   0004BC  EF62  F002         	goto	u9791
  4551   0004C0  EF64  F002         	goto	u9790
  4552   0004C4                     u9791:
  4553   0004C4  EF7F  F002         	goto	l1294
  4554   0004C8                     u9790:
  4555   0004C8                     
  4556                           ; BSR set to: 1
  4557   0004C8  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4558   0004CA  EF69  F002         	goto	u9801
  4559   0004CE  EF6B  F002         	goto	u9800
  4560   0004D2                     u9801:
  4561   0004D2  EF7F  F002         	goto	l1294
  4562   0004D6                     u9800:
  4563   0004D6                     
  4564                           ; BSR set to: 1
  4565   0004D6  C068  F001         	movff	powf@x,sqrtf@x
  4566   0004DA  C069  F002         	movff	powf@x+1,sqrtf@x+1
  4567   0004DE  C06A  F003         	movff	powf@x+2,sqrtf@x+2
  4568   0004E2  C06B  F004         	movff	powf@x+3,sqrtf@x+3
  4569   0004E6  ECD5  F021         	call	_sqrtf	;wreg free
  4570   0004EA  C001  F068         	movff	?_sqrtf,?_powf
  4571   0004EE  C002  F069         	movff	?_sqrtf+1,?_powf+1
  4572   0004F2  C003  F06A         	movff	?_sqrtf+2,?_powf+2
  4573   0004F6  C004  F06B         	movff	?_sqrtf+3,?_powf+3
  4574   0004FA  EF63  F012         	goto	l1265
  4575   0004FE                     l1294:
  4576                           
  4577                           ; BSR set to: 1
  4578   0004FE  C1AC  F178         	movff	powf@ix,powf@ax
  4579   000502  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  4580   000506  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  4581   00050A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  4582   00050E                     
  4583                           ; BSR set to: 1
  4584   00050E  0E80               	movlw	128
  4585   000510  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4586   000512  E10B               	bnz	u9810
  4587   000514  0E7F               	movlw	127
  4588   000516  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4589   000518  11AC               	iorwf	powf@ix& (0+255),w,b
  4590   00051A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4591   00051C  B4D8               	btfsc	status,2,c
  4592   00051E  EF93  F002         	goto	u9811
  4593   000522  EF95  F002         	goto	u9810
  4594   000526                     u9811:
  4595   000526  EFAE  F002         	goto	l1298
  4596   00052A                     u9810:
  4597   00052A                     
  4598                           ; BSR set to: 1
  4599   00052A  51AC               	movf	powf@ix& (0+255),w,b
  4600   00052C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4601   00052E  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  4602   000530  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  4603   000532  B4D8               	btfsc	status,2,c
  4604   000534  EF9E  F002         	goto	u9821
  4605   000538  EFA0  F002         	goto	u9820
  4606   00053C                     u9821:
  4607   00053C  EFAE  F002         	goto	l1298
  4608   000540                     u9820:
  4609   000540                     
  4610                           ; BSR set to: 1
  4611   000540  0E80               	movlw	128
  4612   000542  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4613   000544  E109               	bnz	u9831
  4614   000546  0E3F               	movlw	63
  4615   000548  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4616   00054A  11AC               	iorwf	powf@ix& (0+255),w,b
  4617   00054C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4618   00054E  A4D8               	btfss	status,2,c
  4619   000550  EFAC  F002         	goto	u9831
  4620   000554  EFAE  F002         	goto	u9830
  4621   000558                     u9831:
  4622   000558  EF49  F003         	goto	l7438
  4623   00055C                     u9830:
  4624   00055C                     l1298:
  4625                           
  4626                           ; BSR set to: 1
  4627   00055C  C178  F1B4         	movff	powf@ax,powf@z
  4628   000560  C179  F1B5         	movff	powf@ax+1,powf@z+1
  4629   000564  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  4630   000568  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  4631   00056C                     
  4632                           ; BSR set to: 1
  4633   00056C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4634   00056E  EFBD  F002         	goto	u9840
  4635   000572  EFBB  F002         	goto	u9841
  4636   000576                     u9841:
  4637   000576  EFD7  F002         	goto	l7424
  4638   00057A                     u9840:
  4639   00057A                     
  4640                           ; BSR set to: 1
  4641   00057A  0E00               	movlw	0
  4642   00057C  6E28               	movwf	___fldiv@b^0,c
  4643   00057E  0E00               	movlw	0
  4644   000580  6E29               	movwf	(___fldiv@b+1)^0,c
  4645   000582  0E80               	movlw	128
  4646   000584  6E2A               	movwf	(___fldiv@b+2)^0,c
  4647   000586  0E3F               	movlw	63
  4648   000588  6E2B               	movwf	(___fldiv@b+3)^0,c
  4649   00058A  C1B4  F02C         	movff	powf@z,___fldiv@a
  4650   00058E  C1B5  F02D         	movff	powf@z+1,___fldiv@a+1
  4651   000592  C1B6  F02E         	movff	powf@z+2,___fldiv@a+2
  4652   000596  C1B7  F02F         	movff	powf@z+3,___fldiv@a+3
  4653   00059A  ECC4  F023         	call	___fldiv	;wreg free
  4654   00059E  C028  F1B4         	movff	?___fldiv,powf@z
  4655   0005A2  C029  F1B5         	movff	?___fldiv+1,powf@z+1
  4656   0005A6  C02A  F1B6         	movff	?___fldiv+2,powf@z+2
  4657   0005AA  C02B  F1B7         	movff	?___fldiv+3,powf@z+3
  4658   0005AE                     l7424:
  4659   0005AE  0101               	movlb	1	; () banked
  4660   0005B0  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4661   0005B2  EFDF  F002         	goto	u9850
  4662   0005B6  EFDD  F002         	goto	u9851
  4663   0005BA                     u9851:
  4664   0005BA  EF3F  F003         	goto	l7434
  4665   0005BE                     u9850:
  4666   0005BE                     
  4667                           ; BSR set to: 1
  4668   0005BE  0E00               	movlw	0
  4669   0005C0  25AC               	addwf	powf@ix& (0+255),w,b
  4670   0005C2  0100               	movlb	0	; () banked
  4671   0005C4  6F70               	movwf	??_powf& (0+255),b
  4672   0005C6  0E00               	movlw	0
  4673   0005C8  0101               	movlb	1	; () banked
  4674   0005CA  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  4675   0005CC  0100               	movlb	0	; () banked
  4676   0005CE  6F71               	movwf	(??_powf+1)& (0+255),b
  4677   0005D0  0E80               	movlw	128
  4678   0005D2  0101               	movlb	1	; () banked
  4679   0005D4  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  4680   0005D6  0100               	movlb	0	; () banked
  4681   0005D8  6F72               	movwf	(??_powf+2)& (0+255),b
  4682   0005DA  0EC0               	movlw	192
  4683   0005DC  0101               	movlb	1	; () banked
  4684   0005DE  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  4685   0005E0  0100               	movlb	0	; () banked
  4686   0005E2  6F73               	movwf	(??_powf+3)& (0+255),b
  4687   0005E4  0101               	movlb	1	; () banked
  4688   0005E6  5154               	movf	powf@yisint& (0+255),w,b
  4689   0005E8  0100               	movlb	0	; () banked
  4690   0005EA  1170               	iorwf	??_powf& (0+255),w,b
  4691   0005EC  6F74               	movwf	(??_powf+4)& (0+255),b
  4692   0005EE  0101               	movlb	1	; () banked
  4693   0005F0  5155               	movf	(powf@yisint+1)& (0+255),w,b
  4694   0005F2  0100               	movlb	0	; () banked
  4695   0005F4  1171               	iorwf	(??_powf+1)& (0+255),w,b
  4696   0005F6  6F75               	movwf	(??_powf+5)& (0+255),b
  4697   0005F8  0101               	movlb	1	; () banked
  4698   0005FA  5156               	movf	(powf@yisint+2)& (0+255),w,b
  4699   0005FC  0100               	movlb	0	; () banked
  4700   0005FE  1172               	iorwf	(??_powf+2)& (0+255),w,b
  4701   000600  6F76               	movwf	(??_powf+6)& (0+255),b
  4702   000602  0101               	movlb	1	; () banked
  4703   000604  5157               	movf	(powf@yisint+3)& (0+255),w,b
  4704   000606  0100               	movlb	0	; () banked
  4705   000608  1173               	iorwf	(??_powf+3)& (0+255),w,b
  4706   00060A  6F77               	movwf	(??_powf+7)& (0+255),b
  4707   00060C  5174               	movf	(??_powf+4)& (0+255),w,b
  4708   00060E  1175               	iorwf	(??_powf+5)& (0+255),w,b
  4709   000610  1176               	iorwf	(??_powf+6)& (0+255),w,b
  4710   000612  1177               	iorwf	(??_powf+7)& (0+255),w,b
  4711   000614  A4D8               	btfss	status,2,c
  4712   000616  EF0F  F003         	goto	u9861
  4713   00061A  EF11  F003         	goto	u9860
  4714   00061E                     u9861:
  4715   00061E  EF21  F003         	goto	l7430
  4716   000622                     u9860:
  4717   000622                     l7428:
  4718   000622  0E00               	movlw	0
  4719   000624  0103               	movlb	3	; () banked
  4720   000626  6F49               	movwf	(_errno+1)& (0+255),b
  4721   000628  0E21               	movlw	33
  4722   00062A  6F48               	movwf	_errno& (0+255),b
  4723   00062C  0EFF               	movlw	255
  4724   00062E  0101               	movlb	1	; () banked
  4725   000630  6FB4               	movwf	powf@z& (0+255),b
  4726   000632  0EFF               	movlw	255
  4727   000634  6FB5               	movwf	(powf@z+1)& (0+255),b
  4728   000636  0EFF               	movlw	255
  4729   000638  6FB6               	movwf	(powf@z+2)& (0+255),b
  4730   00063A  0E7F               	movlw	127
  4731   00063C  6FB7               	movwf	(powf@z+3)& (0+255),b
  4732   00063E  EF3F  F003         	goto	l7434
  4733   000642                     l7430:
  4734                           
  4735                           ; BSR set to: 0
  4736   000642  0101               	movlb	1	; () banked
  4737   000644  0554               	decf	powf@yisint& (0+255),w,b
  4738   000646  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4739   000648  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4740   00064A  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4741   00064C  A4D8               	btfss	status,2,c
  4742   00064E  EF2B  F003         	goto	u9871
  4743   000652  EF2D  F003         	goto	u9870
  4744   000656                     u9871:
  4745   000656  EF3F  F003         	goto	l7434
  4746   00065A                     u9870:
  4747   00065A                     
  4748                           ; BSR set to: 1
  4749   00065A  C1B4  F001         	movff	powf@z,___flneg@f1
  4750   00065E  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  4751   000662  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  4752   000666  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  4753   00066A  ECA6  F036         	call	___flneg	;wreg free
  4754   00066E  C001  F1B4         	movff	?___flneg,powf@z
  4755   000672  C002  F1B5         	movff	?___flneg+1,powf@z+1
  4756   000676  C003  F1B6         	movff	?___flneg+2,powf@z+2
  4757   00067A  C004  F1B7         	movff	?___flneg+3,powf@z+3
  4758   00067E                     l7434:
  4759   00067E  C1B4  F068         	movff	powf@z,?_powf
  4760   000682  C1B5  F069         	movff	powf@z+1,?_powf+1
  4761   000686  C1B6  F06A         	movff	powf@z+2,?_powf+2
  4762   00068A  C1B7  F06B         	movff	powf@z+3,?_powf+3
  4763   00068E  EF63  F012         	goto	l1265
  4764   000692                     l7438:
  4765                           
  4766                           ; BSR set to: 1
  4767   000692  0E00               	movlw	0
  4768   000694  6F64               	movwf	powf@sn& (0+255),b
  4769   000696  0E00               	movlw	0
  4770   000698  6F65               	movwf	(powf@sn+1)& (0+255),b
  4771   00069A  0E00               	movlw	0
  4772   00069C  6F66               	movwf	(powf@sn+2)& (0+255),b
  4773   00069E  0E00               	movlw	0
  4774   0006A0  6F67               	movwf	(powf@sn+3)& (0+255),b
  4775   0006A2                     
  4776                           ; BSR set to: 1
  4777   0006A2  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4778   0006A4  EF58  F003         	goto	u9880
  4779   0006A8  EF56  F003         	goto	u9881
  4780   0006AC                     u9881:
  4781   0006AC  EF78  F003         	goto	l7454
  4782   0006B0                     u9880:
  4783   0006B0                     
  4784                           ; BSR set to: 1
  4785   0006B0  5154               	movf	powf@yisint& (0+255),w,b
  4786   0006B2  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4787   0006B4  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4788   0006B6  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4789   0006B8  A4D8               	btfss	status,2,c
  4790   0006BA  EF61  F003         	goto	u9891
  4791   0006BE  EF63  F003         	goto	u9890
  4792   0006C2                     u9891:
  4793   0006C2  EF65  F003         	goto	l7450
  4794   0006C6                     u9890:
  4795   0006C6  EF11  F003         	goto	l7428
  4796   0006CA                     l7450:
  4797                           
  4798                           ; BSR set to: 1
  4799   0006CA  0554               	decf	powf@yisint& (0+255),w,b
  4800   0006CC  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4801   0006CE  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4802   0006D0  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4803   0006D2  A4D8               	btfss	status,2,c
  4804   0006D4  EF6E  F003         	goto	u9901
  4805   0006D8  EF70  F003         	goto	u9900
  4806   0006DC                     u9901:
  4807   0006DC  EF78  F003         	goto	l7454
  4808   0006E0                     u9900:
  4809   0006E0                     
  4810                           ; BSR set to: 1
  4811   0006E0  0E00               	movlw	0
  4812   0006E2  6F64               	movwf	powf@sn& (0+255),b
  4813   0006E4  0E00               	movlw	0
  4814   0006E6  6F65               	movwf	(powf@sn+1)& (0+255),b
  4815   0006E8  0E00               	movlw	0
  4816   0006EA  6F66               	movwf	(powf@sn+2)& (0+255),b
  4817   0006EC  0E80               	movlw	128
  4818   0006EE  6F67               	movwf	(powf@sn+3)& (0+255),b
  4819   0006F0                     l7454:
  4820                           
  4821                           ; BSR set to: 1
  4822   0006F0  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4823   0006F2  EF87  F003         	goto	u9911
  4824   0006F6  0594               	decf	powf@iy& (0+255),w,b
  4825   0006F8  0E00               	movlw	0
  4826   0006FA  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  4827   0006FC  0E00               	movlw	0
  4828   0006FE  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  4829   000700  0E4D               	movlw	77
  4830   000702  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4831   000704  A0D8               	btfss	status,0,c
  4832   000706  EF87  F003         	goto	u9911
  4833   00070A  EF89  F003         	goto	u9910
  4834   00070E                     u9911:
  4835   00070E  EF4D  F005         	goto	l7510
  4836   000712                     u9910:
  4837   000712                     
  4838                           ; BSR set to: 1
  4839   000712  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4840   000714  EF9B  F003         	goto	u9920
  4841   000718  0EF8               	movlw	248
  4842   00071A  5DAC               	subwf	powf@ix& (0+255),w,b
  4843   00071C  0EFF               	movlw	255
  4844   00071E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4845   000720  0E7F               	movlw	127
  4846   000722  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4847   000724  0E3F               	movlw	63
  4848   000726  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4849   000728  B0D8               	btfsc	status,0,c
  4850   00072A  EF99  F003         	goto	u9921
  4851   00072E  EF9B  F003         	goto	u9920
  4852   000732                     u9921:
  4853   000732  EFBC  F003         	goto	l7472
  4854   000736                     u9920:
  4855   000736                     
  4856                           ; BSR set to: 1
  4857   000736  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4858   000738  EFA2  F003         	goto	u9930
  4859   00073C  EFA0  F003         	goto	u9931
  4860   000740                     u9931:
  4861   000740  EFB1  F003         	goto	l7468
  4862   000744                     u9930:
  4863   000744                     l7460:
  4864   000744  0E00               	movlw	0
  4865   000746  0101               	movlb	1	; () banked
  4866   000748  1164               	iorwf	powf@sn& (0+255),w,b
  4867   00074A  6FB4               	movwf	powf@z& (0+255),b
  4868   00074C  0E00               	movlw	0
  4869   00074E  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  4870   000750  6FB5               	movwf	(powf@z+1)& (0+255),b
  4871   000752  0E80               	movlw	128
  4872   000754  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  4873   000756  6FB6               	movwf	(powf@z+2)& (0+255),b
  4874   000758  0E7F               	movlw	127
  4875   00075A  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  4876   00075C  6FB7               	movwf	(powf@z+3)& (0+255),b
  4877   00075E  EF3F  F003         	goto	l7434
  4878   000762                     l7468:
  4879                           
  4880                           ; BSR set to: 1
  4881   000762  0E00               	movlw	0
  4882   000764  0100               	movlb	0	; () banked
  4883   000766  6F68               	movwf	?_powf& (0+255),b
  4884   000768  0E00               	movlw	0
  4885   00076A  6F69               	movwf	(?_powf+1)& (0+255),b
  4886   00076C  0E00               	movlw	0
  4887   00076E  6F6A               	movwf	(?_powf+2)& (0+255),b
  4888   000770  0E00               	movlw	0
  4889   000772  6F6B               	movwf	(?_powf+3)& (0+255),b
  4890   000774  EF63  F012         	goto	l1265
  4891   000778                     l7472:
  4892                           
  4893                           ; BSR set to: 1
  4894   000778  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4895   00077A  EFCC  F003         	goto	u9941
  4896   00077E  0E08               	movlw	8
  4897   000780  5DAC               	subwf	powf@ix& (0+255),w,b
  4898   000782  0E00               	movlw	0
  4899   000784  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4900   000786  0E80               	movlw	128
  4901   000788  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4902   00078A  0E3F               	movlw	63
  4903   00078C  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4904   00078E  A0D8               	btfss	status,0,c
  4905   000790  EFCC  F003         	goto	u9941
  4906   000794  EFCE  F003         	goto	u9940
  4907   000798                     u9941:
  4908   000798  EFEA  F003         	goto	l7488
  4909   00079C                     u9940:
  4910   00079C                     
  4911                           ; BSR set to: 1
  4912   00079C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4913   00079E  EFDB  F003         	goto	u9951
  4914   0007A2  5187               	movf	(powf@hy+3)& (0+255),w,b
  4915   0007A4  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4916   0007A6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4917   0007A8  E108               	bnz	u9950
  4918   0007AA  0584               	decf	powf@hy& (0+255),w,b
  4919   0007AC  A0D8               	btfss	status,0,c
  4920   0007AE  EFDB  F003         	goto	u9951
  4921   0007B2  EFDD  F003         	goto	u9950
  4922   0007B6                     u9951:
  4923   0007B6  EFDF  F003         	goto	l7484
  4924   0007BA                     u9950:
  4925   0007BA  EFA2  F003         	goto	l7460
  4926   0007BE                     l7484:
  4927                           
  4928                           ; BSR set to: 1
  4929   0007BE  0E00               	movlw	0
  4930   0007C0  0100               	movlb	0	; () banked
  4931   0007C2  6F68               	movwf	?_powf& (0+255),b
  4932   0007C4  0E00               	movlw	0
  4933   0007C6  6F69               	movwf	(?_powf+1)& (0+255),b
  4934   0007C8  0E00               	movlw	0
  4935   0007CA  6F6A               	movwf	(?_powf+2)& (0+255),b
  4936   0007CC  0E00               	movlw	0
  4937   0007CE  6F6B               	movwf	(?_powf+3)& (0+255),b
  4938   0007D0  EF63  F012         	goto	l1265
  4939   0007D4                     l7488:
  4940                           
  4941                           ; BSR set to: 1
  4942   0007D4  C178  F041         	movff	powf@ax,___fladd@b
  4943   0007D8  C179  F042         	movff	powf@ax+1,___fladd@b+1
  4944   0007DC  C17A  F043         	movff	powf@ax+2,___fladd@b+2
  4945   0007E0  C17B  F044         	movff	powf@ax+3,___fladd@b+3
  4946   0007E4  0E00               	movlw	0
  4947   0007E6  6E45               	movwf	___fladd@a^0,c
  4948   0007E8  0E00               	movlw	0
  4949   0007EA  6E46               	movwf	(___fladd@a+1)^0,c
  4950   0007EC  0E80               	movlw	128
  4951   0007EE  6E47               	movwf	(___fladd@a+2)^0,c
  4952   0007F0  0EBF               	movlw	191
  4953   0007F2  6E48               	movwf	(___fladd@a+3)^0,c
  4954   0007F4  EC67  F01D         	call	___fladd	;wreg free
  4955   0007F8  C041  F1B0         	movff	?___fladd,powf@t
  4956   0007FC  C042  F1B1         	movff	?___fladd+1,powf@t+1
  4957   000800  C043  F1B2         	movff	?___fladd+2,powf@t+2
  4958   000804  C044  F1B3         	movff	?___fladd+3,powf@t+3
  4959   000808  0E00               	movlw	0
  4960   00080A  6E13               	movwf	___flmul@a^0,c
  4961   00080C  0E00               	movlw	0
  4962   00080E  6E14               	movwf	(___flmul@a+1)^0,c
  4963   000810  0E80               	movlw	128
  4964   000812  6E15               	movwf	(___flmul@a+2)^0,c
  4965   000814  0E3E               	movlw	62
  4966   000816  6E16               	movwf	(___flmul@a+3)^0,c
  4967   000818  C1B0  F00F         	movff	powf@t,___flmul@b
  4968   00081C  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  4969   000820  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  4970   000824  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  4971   000828  ECC2  F01F         	call	___flmul	;wreg free
  4972   00082C  C00F  F055         	movff	?___flmul,___flsub@a
  4973   000830  C010  F056         	movff	?___flmul+1,___flsub@a+1
  4974   000834  C011  F057         	movff	?___flmul+2,___flsub@a+2
  4975   000838  C012  F058         	movff	?___flmul+3,___flsub@a+3
  4976   00083C  0EAB               	movlw	171
  4977   00083E  6E51               	movwf	___flsub@b^0,c
  4978   000840  0EAA               	movlw	170
  4979   000842  6E52               	movwf	(___flsub@b+1)^0,c
  4980   000844  0EAA               	movlw	170
  4981   000846  6E53               	movwf	(___flsub@b+2)^0,c
  4982   000848  0E3E               	movlw	62
  4983   00084A  6E54               	movwf	(___flsub@b+3)^0,c
  4984   00084C  EC04  F036         	call	___flsub	;wreg free
  4985   000850  C051  F148         	movff	?___flsub,_powf$1837
  4986   000854  C052  F149         	movff	?___flsub+1,_powf$1837+1
  4987   000858  C053  F14A         	movff	?___flsub+2,_powf$1837+2
  4988   00085C  C054  F14B         	movff	?___flsub+3,_powf$1837+3
  4989   000860  C1B0  F013         	movff	powf@t,___flmul@a
  4990   000864  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  4991   000868  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  4992   00086C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  4993   000870  C1B0  F00F         	movff	powf@t,___flmul@b
  4994   000874  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  4995   000878  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  4996   00087C  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  4997   000880  ECC2  F01F         	call	___flmul	;wreg free
  4998   000884  C00F  F158         	movff	?___flmul,_powf$1838
  4999   000888  C010  F159         	movff	?___flmul+1,_powf$1838+1
  5000   00088C  C011  F15A         	movff	?___flmul+2,_powf$1838+2
  5001   000890  C012  F15B         	movff	?___flmul+3,_powf$1838+3
  5002   000894  C1B0  F013         	movff	powf@t,___flmul@a
  5003   000898  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  5004   00089C  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  5005   0008A0  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  5006   0008A4  C148  F00F         	movff	_powf$1837,___flmul@b
  5007   0008A8  C149  F010         	movff	_powf$1837+1,___flmul@b+1
  5008   0008AC  C14A  F011         	movff	_powf$1837+2,___flmul@b+2
  5009   0008B0  C14B  F012         	movff	_powf$1837+3,___flmul@b+3
  5010   0008B4  ECC2  F01F         	call	___flmul	;wreg free
  5011   0008B8  C00F  F055         	movff	?___flmul,___flsub@a
  5012   0008BC  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5013   0008C0  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5014   0008C4  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5015   0008C8  0E00               	movlw	0
  5016   0008CA  6E51               	movwf	___flsub@b^0,c
  5017   0008CC  0E00               	movlw	0
  5018   0008CE  6E52               	movwf	(___flsub@b+1)^0,c
  5019   0008D0  0E00               	movlw	0
  5020   0008D2  6E53               	movwf	(___flsub@b+2)^0,c
  5021   0008D4  0E3F               	movlw	63
  5022   0008D6  6E54               	movwf	(___flsub@b+3)^0,c
  5023   0008D8  EC04  F036         	call	___flsub	;wreg free
  5024   0008DC  C051  F14C         	movff	?___flsub,_powf$1839
  5025   0008E0  C052  F14D         	movff	?___flsub+1,_powf$1839+1
  5026   0008E4  C053  F14E         	movff	?___flsub+2,_powf$1839+2
  5027   0008E8  C054  F14F         	movff	?___flsub+3,_powf$1839+3
  5028   0008EC  C158  F00F         	movff	_powf$1838,___flmul@b
  5029   0008F0  C159  F010         	movff	_powf$1838+1,___flmul@b+1
  5030   0008F4  C15A  F011         	movff	_powf$1838+2,___flmul@b+2
  5031   0008F8  C15B  F012         	movff	_powf$1838+3,___flmul@b+3
  5032   0008FC  C14C  F013         	movff	_powf$1839,___flmul@a
  5033   000900  C14D  F014         	movff	_powf$1839+1,___flmul@a+1
  5034   000904  C14E  F015         	movff	_powf$1839+2,___flmul@a+2
  5035   000908  C14F  F016         	movff	_powf$1839+3,___flmul@a+3
  5036   00090C  ECC2  F01F         	call	___flmul	;wreg free
  5037   000910  C00F  F144         	movff	?___flmul,powf@w
  5038   000914  C010  F145         	movff	?___flmul+1,powf@w+1
  5039   000918  C011  F146         	movff	?___flmul+2,powf@w+2
  5040   00091C  C012  F147         	movff	?___flmul+3,powf@w+3
  5041   000920  C1B0  F00F         	movff	powf@t,___flmul@b
  5042   000924  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5043   000928  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5044   00092C  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5045   000930  0E00               	movlw	0
  5046   000932  6E13               	movwf	___flmul@a^0,c
  5047   000934  0EAA               	movlw	170
  5048   000936  6E14               	movwf	(___flmul@a+1)^0,c
  5049   000938  0EB8               	movlw	184
  5050   00093A  6E15               	movwf	(___flmul@a+2)^0,c
  5051   00093C  0E3F               	movlw	63
  5052   00093E  6E16               	movwf	(___flmul@a+3)^0,c
  5053   000940  ECC2  F01F         	call	___flmul	;wreg free
  5054   000944  C00F  F17C         	movff	?___flmul,powf@u
  5055   000948  C010  F17D         	movff	?___flmul+1,powf@u+1
  5056   00094C  C011  F17E         	movff	?___flmul+2,powf@u+2
  5057   000950  C012  F17F         	movff	?___flmul+3,powf@u+3
  5058   000954  0E70               	movlw	112
  5059   000956  6E13               	movwf	___flmul@a^0,c
  5060   000958  0EA5               	movlw	165
  5061   00095A  6E14               	movwf	(___flmul@a+1)^0,c
  5062   00095C  0EEC               	movlw	236
  5063   00095E  6E15               	movwf	(___flmul@a+2)^0,c
  5064   000960  0E36               	movlw	54
  5065   000962  6E16               	movwf	(___flmul@a+3)^0,c
  5066   000964  C1B0  F00F         	movff	powf@t,___flmul@b
  5067   000968  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  5068   00096C  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  5069   000970  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  5070   000974  ECC2  F01F         	call	___flmul	;wreg free
  5071   000978  C00F  F051         	movff	?___flmul,___flsub@b
  5072   00097C  C010  F052         	movff	?___flmul+1,___flsub@b+1
  5073   000980  C011  F053         	movff	?___flmul+2,___flsub@b+2
  5074   000984  C012  F054         	movff	?___flmul+3,___flsub@b+3
  5075   000988  0E3B               	movlw	59
  5076   00098A  6E13               	movwf	___flmul@a^0,c
  5077   00098C  0EAA               	movlw	170
  5078   00098E  6E14               	movwf	(___flmul@a+1)^0,c
  5079   000990  0EB8               	movlw	184
  5080   000992  6E15               	movwf	(___flmul@a+2)^0,c
  5081   000994  0E3F               	movlw	63
  5082   000996  6E16               	movwf	(___flmul@a+3)^0,c
  5083   000998  C144  F00F         	movff	powf@w,___flmul@b
  5084   00099C  C145  F010         	movff	powf@w+1,___flmul@b+1
  5085   0009A0  C146  F011         	movff	powf@w+2,___flmul@b+2
  5086   0009A4  C147  F012         	movff	powf@w+3,___flmul@b+3
  5087   0009A8  ECC2  F01F         	call	___flmul	;wreg free
  5088   0009AC  C00F  F055         	movff	?___flmul,___flsub@a
  5089   0009B0  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5090   0009B4  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5091   0009B8  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5092   0009BC  EC04  F036         	call	___flsub	;wreg free
  5093   0009C0  C051  F180         	movff	?___flsub,powf@v
  5094   0009C4  C052  F181         	movff	?___flsub+1,powf@v+1
  5095   0009C8  C053  F182         	movff	?___flsub+2,powf@v+2
  5096   0009CC  C054  F183         	movff	?___flsub+3,powf@v+3
  5097   0009D0  C17C  F041         	movff	powf@u,___fladd@b
  5098   0009D4  C17D  F042         	movff	powf@u+1,___fladd@b+1
  5099   0009D8  C17E  F043         	movff	powf@u+2,___fladd@b+2
  5100   0009DC  C17F  F044         	movff	powf@u+3,___fladd@b+3
  5101   0009E0  C180  F045         	movff	powf@v,___fladd@a
  5102   0009E4  C181  F046         	movff	powf@v+1,___fladd@a+1
  5103   0009E8  C182  F047         	movff	powf@v+2,___fladd@a+2
  5104   0009EC  C183  F048         	movff	powf@v+3,___fladd@a+3
  5105   0009F0  EC67  F01D         	call	___fladd	;wreg free
  5106   0009F4  C041  F18C         	movff	?___fladd,powf@t1
  5107   0009F8  C042  F18D         	movff	?___fladd+1,powf@t1+1
  5108   0009FC  C043  F18E         	movff	?___fladd+2,powf@t1+2
  5109   000A00  C044  F18F         	movff	?___fladd+3,powf@t1+3
  5110   000A04  C18C  F198         	movff	powf@t1,powf@is
  5111   000A08  C18D  F199         	movff	powf@t1+1,powf@is+1
  5112   000A0C  C18E  F19A         	movff	powf@t1+2,powf@is+2
  5113   000A10  C18F  F19B         	movff	powf@t1+3,powf@is+3
  5114   000A14  0E00               	movlw	0
  5115   000A16  0101               	movlb	1	; () banked
  5116   000A18  1598               	andwf	powf@is& (0+255),w,b
  5117   000A1A  6F8C               	movwf	powf@t1& (0+255),b
  5118   000A1C  0EF0               	movlw	240
  5119   000A1E  1599               	andwf	(powf@is+1)& (0+255),w,b
  5120   000A20  6F8D               	movwf	(powf@t1+1)& (0+255),b
  5121   000A22  0EFF               	movlw	255
  5122   000A24  159A               	andwf	(powf@is+2)& (0+255),w,b
  5123   000A26  6F8E               	movwf	(powf@t1+2)& (0+255),b
  5124   000A28  0EFF               	movlw	255
  5125   000A2A  159B               	andwf	(powf@is+3)& (0+255),w,b
  5126   000A2C  6F8F               	movwf	(powf@t1+3)& (0+255),b
  5127   000A2E                     
  5128                           ; BSR set to: 1
  5129   000A2E  C17C  F055         	movff	powf@u,___flsub@a
  5130   000A32  C17D  F056         	movff	powf@u+1,___flsub@a+1
  5131   000A36  C17E  F057         	movff	powf@u+2,___flsub@a+2
  5132   000A3A  C17F  F058         	movff	powf@u+3,___flsub@a+3
  5133   000A3E  C18C  F051         	movff	powf@t1,___flsub@b
  5134   000A42  C18D  F052         	movff	powf@t1+1,___flsub@b+1
  5135   000A46  C18E  F053         	movff	powf@t1+2,___flsub@b+2
  5136   000A4A  C18F  F054         	movff	powf@t1+3,___flsub@b+3
  5137   000A4E  EC04  F036         	call	___flsub	;wreg free
  5138   000A52  C051  F19C         	movff	?___flsub,_powf$1840
  5139   000A56  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  5140   000A5A  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  5141   000A5E  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  5142   000A62  C180  F051         	movff	powf@v,___flsub@b
  5143   000A66  C181  F052         	movff	powf@v+1,___flsub@b+1
  5144   000A6A  C182  F053         	movff	powf@v+2,___flsub@b+2
  5145   000A6E  C183  F054         	movff	powf@v+3,___flsub@b+3
  5146   000A72  C19C  F055         	movff	_powf$1840,___flsub@a
  5147   000A76  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  5148   000A7A  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  5149   000A7E  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  5150   000A82  EC04  F036         	call	___flsub	;wreg free
  5151   000A86  C051  F11C         	movff	?___flsub,powf@t2
  5152   000A8A  C052  F11D         	movff	?___flsub+1,powf@t2+1
  5153   000A8E  C053  F11E         	movff	?___flsub+2,powf@t2+2
  5154   000A92  C054  F11F         	movff	?___flsub+3,powf@t2+3
  5155   000A96  EF5B  F00C         	goto	l7638
  5156   000A9A                     l7510:
  5157                           
  5158                           ; BSR set to: 1
  5159   000A9A  0E00               	movlw	0
  5160   000A9C  6F88               	movwf	powf@n& (0+255),b
  5161   000A9E  0E00               	movlw	0
  5162   000AA0  6F89               	movwf	(powf@n+1)& (0+255),b
  5163   000AA2  0E00               	movlw	0
  5164   000AA4  6F8A               	movwf	(powf@n+2)& (0+255),b
  5165   000AA6  0E00               	movlw	0
  5166   000AA8  6F8B               	movwf	(powf@n+3)& (0+255),b
  5167   000AAA                     
  5168                           ; BSR set to: 1
  5169   000AAA  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  5170   000AAC  EF63  F005         	goto	u9960
  5171   000AB0  51AF               	movf	(powf@ix+3)& (0+255),w,b
  5172   000AB2  E107               	bnz	u9961
  5173   000AB4  0E80               	movlw	128
  5174   000AB6  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  5175   000AB8  B0D8               	btfsc	status,0,c
  5176   000ABA  EF61  F005         	goto	u9961
  5177   000ABE  EF63  F005         	goto	u9960
  5178   000AC2                     u9961:
  5179   000AC2  EF8E  F005         	goto	l7520
  5180   000AC6                     u9960:
  5181   000AC6                     
  5182                           ; BSR set to: 1
  5183   000AC6  C178  F00F         	movff	powf@ax,___flmul@b
  5184   000ACA  C179  F010         	movff	powf@ax+1,___flmul@b+1
  5185   000ACE  C17A  F011         	movff	powf@ax+2,___flmul@b+2
  5186   000AD2  C17B  F012         	movff	powf@ax+3,___flmul@b+3
  5187   000AD6  0E00               	movlw	0
  5188   000AD8  6E13               	movwf	___flmul@a^0,c
  5189   000ADA  0E00               	movlw	0
  5190   000ADC  6E14               	movwf	(___flmul@a+1)^0,c
  5191   000ADE  0E80               	movlw	128
  5192   000AE0  6E15               	movwf	(___flmul@a+2)^0,c
  5193   000AE2  0E4B               	movlw	75
  5194   000AE4  6E16               	movwf	(___flmul@a+3)^0,c
  5195   000AE6  ECC2  F01F         	call	___flmul	;wreg free
  5196   000AEA  C00F  F178         	movff	?___flmul,powf@ax
  5197   000AEE  C010  F179         	movff	?___flmul+1,powf@ax+1
  5198   000AF2  C011  F17A         	movff	?___flmul+2,powf@ax+2
  5199   000AF6  C012  F17B         	movff	?___flmul+3,powf@ax+3
  5200   000AFA  0EE8               	movlw	232
  5201   000AFC  0101               	movlb	1	; () banked
  5202   000AFE  2788               	addwf	powf@n& (0+255),f,b
  5203   000B00  0EFF               	movlw	255
  5204   000B02  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5205   000B04  0EFF               	movlw	255
  5206   000B06  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5207   000B08  0EFF               	movlw	255
  5208   000B0A  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5209   000B0C                     
  5210                           ; BSR set to: 1
  5211   000B0C  C178  F1AC         	movff	powf@ax,powf@ix
  5212   000B10  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  5213   000B14  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  5214   000B18  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  5215   000B1C                     l7520:
  5216                           
  5217                           ; BSR set to: 1
  5218   000B1C  0E17               	movlw	23
  5219   000B1E  0100               	movlb	0	; () banked
  5220   000B20  6F70               	movwf	??_powf& (0+255),b
  5221   000B22  C1AC  F071         	movff	powf@ix,??_powf+1
  5222   000B26  C1AD  F072         	movff	powf@ix+1,??_powf+2
  5223   000B2A  C1AE  F073         	movff	powf@ix+2,??_powf+3
  5224   000B2E  C1AF  F074         	movff	powf@ix+3,??_powf+4
  5225   000B32                     u9975:
  5226   000B32  6770               	tstfsz	??_powf& (0+255),b
  5227   000B34  EF9E  F005         	goto	u9976
  5228   000B38  EFA6  F005         	goto	u9977
  5229   000B3C                     u9976:
  5230   000B3C  3574               	rlcf	(??_powf+4)& (0+255),w,b
  5231   000B3E  3374               	rrcf	(??_powf+4)& (0+255),f,b
  5232   000B40  3373               	rrcf	(??_powf+3)& (0+255),f,b
  5233   000B42  3372               	rrcf	(??_powf+2)& (0+255),f,b
  5234   000B44  3371               	rrcf	(??_powf+1)& (0+255),f,b
  5235   000B46  2F70               	decfsz	??_powf& (0+255),f,b
  5236   000B48  EF99  F005         	goto	u9975
  5237   000B4C                     u9977:
  5238   000B4C  0E81               	movlw	129
  5239   000B4E  0100               	movlb	0	; () banked
  5240   000B50  2571               	addwf	(??_powf+1)& (0+255),w,b
  5241   000B52  6F75               	movwf	(??_powf+5)& (0+255),b
  5242   000B54  0EFF               	movlw	255
  5243   000B56  2172               	addwfc	(??_powf+2)& (0+255),w,b
  5244   000B58  6F76               	movwf	(??_powf+6)& (0+255),b
  5245   000B5A  0EFF               	movlw	255
  5246   000B5C  2173               	addwfc	(??_powf+3)& (0+255),w,b
  5247   000B5E  6F77               	movwf	(??_powf+7)& (0+255),b
  5248   000B60  0EFF               	movlw	255
  5249   000B62  2174               	addwfc	(??_powf+4)& (0+255),w,b
  5250   000B64  6F78               	movwf	(??_powf+8)& (0+255),b
  5251   000B66  5175               	movf	(??_powf+5)& (0+255),w,b
  5252   000B68  0101               	movlb	1	; () banked
  5253   000B6A  2788               	addwf	powf@n& (0+255),f,b
  5254   000B6C  0100               	movlb	0	; () banked
  5255   000B6E  5176               	movf	(??_powf+6)& (0+255),w,b
  5256   000B70  0101               	movlb	1	; () banked
  5257   000B72  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5258   000B74  0100               	movlb	0	; () banked
  5259   000B76  5177               	movf	(??_powf+7)& (0+255),w,b
  5260   000B78  0101               	movlb	1	; () banked
  5261   000B7A  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5262   000B7C  0100               	movlb	0	; () banked
  5263   000B7E  5178               	movf	(??_powf+8)& (0+255),w,b
  5264   000B80  0101               	movlb	1	; () banked
  5265   000B82  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5266   000B84                     
  5267                           ; BSR set to: 1
  5268   000B84  0EFF               	movlw	255
  5269   000B86  15AC               	andwf	powf@ix& (0+255),w,b
  5270   000B88  6FA8               	movwf	powf@j& (0+255),b
  5271   000B8A  0EFF               	movlw	255
  5272   000B8C  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  5273   000B8E  6FA9               	movwf	(powf@j+1)& (0+255),b
  5274   000B90  0E7F               	movlw	127
  5275   000B92  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  5276   000B94  6FAA               	movwf	(powf@j+2)& (0+255),b
  5277   000B96  0E00               	movlw	0
  5278   000B98  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  5279   000B9A  6FAB               	movwf	(powf@j+3)& (0+255),b
  5280   000B9C                     
  5281                           ; BSR set to: 1
  5282   000B9C  0E00               	movlw	0
  5283   000B9E  6FA4               	movwf	powf@k& (0+255),b
  5284   000BA0  0E00               	movlw	0
  5285   000BA2  6FA5               	movwf	(powf@k+1)& (0+255),b
  5286   000BA4  0E00               	movlw	0
  5287   000BA6  6FA6               	movwf	(powf@k+2)& (0+255),b
  5288   000BA8  0E00               	movlw	0
  5289   000BAA  6FA7               	movwf	(powf@k+3)& (0+255),b
  5290   000BAC                     
  5291                           ; BSR set to: 1
  5292   000BAC  0E00               	movlw	0
  5293   000BAE  11A8               	iorwf	powf@j& (0+255),w,b
  5294   000BB0  6FAC               	movwf	powf@ix& (0+255),b
  5295   000BB2  0E00               	movlw	0
  5296   000BB4  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  5297   000BB6  6FAD               	movwf	(powf@ix+1)& (0+255),b
  5298   000BB8  0E80               	movlw	128
  5299   000BBA  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  5300   000BBC  6FAE               	movwf	(powf@ix+2)& (0+255),b
  5301   000BBE  0E3F               	movlw	63
  5302   000BC0  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  5303   000BC2  6FAF               	movwf	(powf@ix+3)& (0+255),b
  5304   000BC4                     
  5305                           ; BSR set to: 1
  5306   000BC4  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5307   000BC6  EFF4  F005         	goto	u9980
  5308   000BCA  51AB               	movf	(powf@j+3)& (0+255),w,b
  5309   000BCC  E10B               	bnz	u9981
  5310   000BCE  0E72               	movlw	114
  5311   000BD0  5DA8               	subwf	powf@j& (0+255),w,b
  5312   000BD2  0EC4               	movlw	196
  5313   000BD4  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5314   000BD6  0E1C               	movlw	28
  5315   000BD8  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5316   000BDA  B0D8               	btfsc	status,0,c
  5317   000BDC  EFF2  F005         	goto	u9981
  5318   000BE0  EFF4  F005         	goto	u9980
  5319   000BE4                     u9981:
  5320   000BE4  EFF6  F005         	goto	l7532
  5321   000BE8                     u9980:
  5322   000BE8  EF20  F006         	goto	l7538
  5323   000BEC                     l7532:
  5324                           
  5325                           ; BSR set to: 1
  5326   000BEC  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5327   000BEE  EF08  F006         	goto	u9990
  5328   000BF2  51AB               	movf	(powf@j+3)& (0+255),w,b
  5329   000BF4  E10B               	bnz	u9991
  5330   000BF6  0ED7               	movlw	215
  5331   000BF8  5DA8               	subwf	powf@j& (0+255),w,b
  5332   000BFA  0EB3               	movlw	179
  5333   000BFC  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5334   000BFE  0E5D               	movlw	93
  5335   000C00  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5336   000C02  B0D8               	btfsc	status,0,c
  5337   000C04  EF06  F006         	goto	u9991
  5338   000C08  EF08  F006         	goto	u9990
  5339   000C0C                     u9991:
  5340   000C0C  EF12  F006         	goto	l7536
  5341   000C10                     u9990:
  5342   000C10                     
  5343                           ; BSR set to: 1
  5344   000C10  0E01               	movlw	1
  5345   000C12  6FA4               	movwf	powf@k& (0+255),b
  5346   000C14  0E00               	movlw	0
  5347   000C16  6FA5               	movwf	(powf@k+1)& (0+255),b
  5348   000C18  0E00               	movlw	0
  5349   000C1A  6FA6               	movwf	(powf@k+2)& (0+255),b
  5350   000C1C  0E00               	movlw	0
  5351   000C1E  6FA7               	movwf	(powf@k+3)& (0+255),b
  5352   000C20  EF20  F006         	goto	l7538
  5353   000C24                     l7536:
  5354                           
  5355                           ; BSR set to: 1
  5356   000C24  0E01               	movlw	1
  5357   000C26  2788               	addwf	powf@n& (0+255),f,b
  5358   000C28  0E00               	movlw	0
  5359   000C2A  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5360   000C2C  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5361   000C2E  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5362   000C30  0E00               	movlw	0
  5363   000C32  27AC               	addwf	powf@ix& (0+255),f,b
  5364   000C34  0E00               	movlw	0
  5365   000C36  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  5366   000C38  0E80               	movlw	128
  5367   000C3A  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  5368   000C3C  0EFF               	movlw	255
  5369   000C3E  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  5370   000C40                     l7538:
  5371                           
  5372                           ; BSR set to: 1
  5373   000C40  C1AC  F178         	movff	powf@ix,powf@ax
  5374   000C44  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  5375   000C48  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  5376   000C4C  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  5377   000C50                     
  5378                           ; BSR set to: 1
  5379   000C50  C178  F051         	movff	powf@ax,___flsub@b
  5380   000C54  C179  F052         	movff	powf@ax+1,___flsub@b+1
  5381   000C58  C17A  F053         	movff	powf@ax+2,___flsub@b+2
  5382   000C5C  C17B  F054         	movff	powf@ax+3,___flsub@b+3
  5383   000C60  C1A4  F070         	movff	powf@k,??_powf
  5384   000C64  C1A5  F071         	movff	powf@k+1,??_powf+1
  5385   000C68  0100               	movlb	0	; () banked
  5386   000C6A  90D8               	bcf	status,0,c
  5387   000C6C  3770               	rlcf	??_powf& (0+255),f,b
  5388   000C6E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5389   000C70  90D8               	bcf	status,0,c
  5390   000C72  3770               	rlcf	??_powf& (0+255),f,b
  5391   000C74  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5392   000C76  0E75               	movlw	low _bp
  5393   000C78  2570               	addwf	??_powf& (0+255),w,b
  5394   000C7A  6EF6               	movwf	tblptrl,c
  5395   000C7C  0E7E               	movlw	high _bp
  5396   000C7E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5397   000C80  6EF7               	movwf	tblptrh,c
  5398   000C82                     	if	0	;There are less than 3 active tblptr bytes
  5399   000C82                     	endif
  5400   000C82  0009               	tblrd		*+
  5401   000C84  CFF5 F055          	movff	tablat,___flsub@a
  5402   000C88  0009               	tblrd		*+
  5403   000C8A  CFF5 F056          	movff	tablat,___flsub@a+1
  5404   000C8E  0009               	tblrd		*+
  5405   000C90  CFF5 F057          	movff	tablat,___flsub@a+2
  5406   000C94  000A               	tblrd		*-
  5407   000C96  CFF5 F058          	movff	tablat,___flsub@a+3
  5408   000C9A  EC04  F036         	call	___flsub	;wreg free
  5409   000C9E  C051  F17C         	movff	?___flsub,powf@u
  5410   000CA2  C052  F17D         	movff	?___flsub+1,powf@u+1
  5411   000CA6  C053  F17E         	movff	?___flsub+2,powf@u+2
  5412   000CAA  C054  F17F         	movff	?___flsub+3,powf@u+3
  5413   000CAE  0E00               	movlw	0
  5414   000CB0  6E28               	movwf	___fldiv@b^0,c
  5415   000CB2  0E00               	movlw	0
  5416   000CB4  6E29               	movwf	(___fldiv@b+1)^0,c
  5417   000CB6  0E80               	movlw	128
  5418   000CB8  6E2A               	movwf	(___fldiv@b+2)^0,c
  5419   000CBA  0E3F               	movlw	63
  5420   000CBC  6E2B               	movwf	(___fldiv@b+3)^0,c
  5421   000CBE  C178  F045         	movff	powf@ax,___fladd@a
  5422   000CC2  C179  F046         	movff	powf@ax+1,___fladd@a+1
  5423   000CC6  C17A  F047         	movff	powf@ax+2,___fladd@a+2
  5424   000CCA  C17B  F048         	movff	powf@ax+3,___fladd@a+3
  5425   000CCE  C1A4  F070         	movff	powf@k,??_powf
  5426   000CD2  C1A5  F071         	movff	powf@k+1,??_powf+1
  5427   000CD6  0100               	movlb	0	; () banked
  5428   000CD8  90D8               	bcf	status,0,c
  5429   000CDA  3770               	rlcf	??_powf& (0+255),f,b
  5430   000CDC  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5431   000CDE  90D8               	bcf	status,0,c
  5432   000CE0  3770               	rlcf	??_powf& (0+255),f,b
  5433   000CE2  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5434   000CE4  0E75               	movlw	low _bp
  5435   000CE6  2570               	addwf	??_powf& (0+255),w,b
  5436   000CE8  6EF6               	movwf	tblptrl,c
  5437   000CEA  0E7E               	movlw	high _bp
  5438   000CEC  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5439   000CEE  6EF7               	movwf	tblptrh,c
  5440   000CF0                     	if	0	;There are less than 3 active tblptr bytes
  5441   000CF0                     	endif
  5442   000CF0  0009               	tblrd		*+
  5443   000CF2  CFF5 F041          	movff	tablat,___fladd@b
  5444   000CF6  0009               	tblrd		*+
  5445   000CF8  CFF5 F042          	movff	tablat,___fladd@b+1
  5446   000CFC  0009               	tblrd		*+
  5447   000CFE  CFF5 F043          	movff	tablat,___fladd@b+2
  5448   000D02  000A               	tblrd		*-
  5449   000D04  CFF5 F044          	movff	tablat,___fladd@b+3
  5450   000D08  EC67  F01D         	call	___fladd	;wreg free
  5451   000D0C  C041  F02C         	movff	?___fladd,___fldiv@a
  5452   000D10  C042  F02D         	movff	?___fladd+1,___fldiv@a+1
  5453   000D14  C043  F02E         	movff	?___fladd+2,___fldiv@a+2
  5454   000D18  C044  F02F         	movff	?___fladd+3,___fldiv@a+3
  5455   000D1C  ECC4  F023         	call	___fldiv	;wreg free
  5456   000D20  C028  F180         	movff	?___fldiv,powf@v
  5457   000D24  C029  F181         	movff	?___fldiv+1,powf@v+1
  5458   000D28  C02A  F182         	movff	?___fldiv+2,powf@v+2
  5459   000D2C  C02B  F183         	movff	?___fldiv+3,powf@v+3
  5460   000D30  C17C  F00F         	movff	powf@u,___flmul@b
  5461   000D34  C17D  F010         	movff	powf@u+1,___flmul@b+1
  5462   000D38  C17E  F011         	movff	powf@u+2,___flmul@b+2
  5463   000D3C  C17F  F012         	movff	powf@u+3,___flmul@b+3
  5464   000D40  C180  F013         	movff	powf@v,___flmul@a
  5465   000D44  C181  F014         	movff	powf@v+1,___flmul@a+1
  5466   000D48  C182  F015         	movff	powf@v+2,___flmul@a+2
  5467   000D4C  C183  F016         	movff	powf@v+3,___flmul@a+3
  5468   000D50  ECC2  F01F         	call	___flmul	;wreg free
  5469   000D54  C00F  F160         	movff	?___flmul,powf@s
  5470   000D58  C010  F161         	movff	?___flmul+1,powf@s+1
  5471   000D5C  C011  F162         	movff	?___flmul+2,powf@s+2
  5472   000D60  C012  F163         	movff	?___flmul+3,powf@s+3
  5473   000D64  C160  F174         	movff	powf@s,powf@s_h
  5474   000D68  C161  F175         	movff	powf@s+1,powf@s_h+1
  5475   000D6C  C162  F176         	movff	powf@s+2,powf@s_h+2
  5476   000D70  C163  F177         	movff	powf@s+3,powf@s_h+3
  5477   000D74  C174  F198         	movff	powf@s_h,powf@is
  5478   000D78  C175  F199         	movff	powf@s_h+1,powf@is+1
  5479   000D7C  C176  F19A         	movff	powf@s_h+2,powf@is+2
  5480   000D80  C177  F19B         	movff	powf@s_h+3,powf@is+3
  5481   000D84  0E00               	movlw	0
  5482   000D86  0101               	movlb	1	; () banked
  5483   000D88  1598               	andwf	powf@is& (0+255),w,b
  5484   000D8A  6F74               	movwf	powf@s_h& (0+255),b
  5485   000D8C  0EF0               	movlw	240
  5486   000D8E  1599               	andwf	(powf@is+1)& (0+255),w,b
  5487   000D90  6F75               	movwf	(powf@s_h+1)& (0+255),b
  5488   000D92  0EFF               	movlw	255
  5489   000D94  159A               	andwf	(powf@is+2)& (0+255),w,b
  5490   000D96  6F76               	movwf	(powf@s_h+2)& (0+255),b
  5491   000D98  0EFF               	movlw	255
  5492   000D9A  159B               	andwf	(powf@is+3)& (0+255),w,b
  5493   000D9C  6F77               	movwf	(powf@s_h+3)& (0+255),b
  5494   000D9E                     
  5495                           ; BSR set to: 1
  5496   000D9E  C1AC  F070         	movff	powf@ix,??_powf
  5497   000DA2  C1AD  F071         	movff	powf@ix+1,??_powf+1
  5498   000DA6  C1AE  F072         	movff	powf@ix+2,??_powf+2
  5499   000DAA  C1AF  F073         	movff	powf@ix+3,??_powf+3
  5500   000DAE  0100               	movlb	0	; () banked
  5501   000DB0  3573               	rlcf	(??_powf+3)& (0+255),w,b
  5502   000DB2  3373               	rrcf	(??_powf+3)& (0+255),f,b
  5503   000DB4  3372               	rrcf	(??_powf+2)& (0+255),f,b
  5504   000DB6  3371               	rrcf	(??_powf+1)& (0+255),f,b
  5505   000DB8  3370               	rrcf	??_powf& (0+255),f,b
  5506   000DBA  0E00               	movlw	0
  5507   000DBC  1570               	andwf	??_powf& (0+255),w,b
  5508   000DBE  6F74               	movwf	(??_powf+4)& (0+255),b
  5509   000DC0  0EF0               	movlw	240
  5510   000DC2  1571               	andwf	(??_powf+1)& (0+255),w,b
  5511   000DC4  6F75               	movwf	(??_powf+5)& (0+255),b
  5512   000DC6  0EFF               	movlw	255
  5513   000DC8  1572               	andwf	(??_powf+2)& (0+255),w,b
  5514   000DCA  6F76               	movwf	(??_powf+6)& (0+255),b
  5515   000DCC  0EFF               	movlw	255
  5516   000DCE  1573               	andwf	(??_powf+3)& (0+255),w,b
  5517   000DD0  6F77               	movwf	(??_powf+7)& (0+255),b
  5518   000DD2  0E00               	movlw	0
  5519   000DD4  1174               	iorwf	(??_powf+4)& (0+255),w,b
  5520   000DD6  0101               	movlb	1	; () banked
  5521   000DD8  6F98               	movwf	powf@is& (0+255),b
  5522   000DDA  0E00               	movlw	0
  5523   000DDC  0100               	movlb	0	; () banked
  5524   000DDE  1175               	iorwf	(??_powf+5)& (0+255),w,b
  5525   000DE0  0101               	movlb	1	; () banked
  5526   000DE2  6F99               	movwf	(powf@is+1)& (0+255),b
  5527   000DE4  0E00               	movlw	0
  5528   000DE6  0100               	movlb	0	; () banked
  5529   000DE8  1176               	iorwf	(??_powf+6)& (0+255),w,b
  5530   000DEA  0101               	movlb	1	; () banked
  5531   000DEC  6F9A               	movwf	(powf@is+2)& (0+255),b
  5532   000DEE  0E20               	movlw	32
  5533   000DF0  0100               	movlb	0	; () banked
  5534   000DF2  1177               	iorwf	(??_powf+7)& (0+255),w,b
  5535   000DF4  0101               	movlb	1	; () banked
  5536   000DF6  6F9B               	movwf	(powf@is+3)& (0+255),b
  5537   000DF8                     
  5538                           ; BSR set to: 1
  5539   000DF8  C1A4  F070         	movff	powf@k,??_powf
  5540   000DFC  C1A5  F071         	movff	powf@k+1,??_powf+1
  5541   000E00  C1A6  F072         	movff	powf@k+2,??_powf+2
  5542   000E04  C1A7  F073         	movff	powf@k+3,??_powf+3
  5543   000E08  0E15               	movlw	21
  5544   000E0A                     u10005:
  5545   000E0A  90D8               	bcf	status,0,c
  5546   000E0C  0100               	movlb	0	; () banked
  5547   000E0E  3770               	rlcf	??_powf& (0+255),f,b
  5548   000E10  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5549   000E12  3772               	rlcf	(??_powf+2)& (0+255),f,b
  5550   000E14  3773               	rlcf	(??_powf+3)& (0+255),f,b
  5551   000E16  2EE8               	decfsz	wreg,f,c
  5552   000E18  EF05  F007         	goto	u10005
  5553   000E1C  0101               	movlb	1	; () banked
  5554   000E1E  5198               	movf	powf@is& (0+255),w,b
  5555   000E20  0100               	movlb	0	; () banked
  5556   000E22  2570               	addwf	??_powf& (0+255),w,b
  5557   000E24  6F74               	movwf	(??_powf+4)& (0+255),b
  5558   000E26  0101               	movlb	1	; () banked
  5559   000E28  5199               	movf	(powf@is+1)& (0+255),w,b
  5560   000E2A  0100               	movlb	0	; () banked
  5561   000E2C  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5562   000E2E  6F75               	movwf	(??_powf+5)& (0+255),b
  5563   000E30  0101               	movlb	1	; () banked
  5564   000E32  519A               	movf	(powf@is+2)& (0+255),w,b
  5565   000E34  0100               	movlb	0	; () banked
  5566   000E36  2172               	addwfc	(??_powf+2)& (0+255),w,b
  5567   000E38  6F76               	movwf	(??_powf+6)& (0+255),b
  5568   000E3A  0101               	movlb	1	; () banked
  5569   000E3C  519B               	movf	(powf@is+3)& (0+255),w,b
  5570   000E3E  0100               	movlb	0	; () banked
  5571   000E40  2173               	addwfc	(??_powf+3)& (0+255),w,b
  5572   000E42  6F77               	movwf	(??_powf+7)& (0+255),b
  5573   000E44  0E00               	movlw	0
  5574   000E46  2574               	addwf	(??_powf+4)& (0+255),w,b
  5575   000E48  0101               	movlb	1	; () banked
  5576   000E4A  6F70               	movwf	powf@t_h& (0+255),b
  5577   000E4C  0E00               	movlw	0
  5578   000E4E  0100               	movlb	0	; () banked
  5579   000E50  2175               	addwfc	(??_powf+5)& (0+255),w,b
  5580   000E52  0101               	movlb	1	; () banked
  5581   000E54  6F71               	movwf	(powf@t_h+1)& (0+255),b
  5582   000E56  0E40               	movlw	64
  5583   000E58  0100               	movlb	0	; () banked
  5584   000E5A  2176               	addwfc	(??_powf+6)& (0+255),w,b
  5585   000E5C  0101               	movlb	1	; () banked
  5586   000E5E  6F72               	movwf	(powf@t_h+2)& (0+255),b
  5587   000E60  0E00               	movlw	0
  5588   000E62  0100               	movlb	0	; () banked
  5589   000E64  2177               	addwfc	(??_powf+7)& (0+255),w,b
  5590   000E66  0101               	movlb	1	; () banked
  5591   000E68  6F73               	movwf	(powf@t_h+3)& (0+255),b
  5592   000E6A                     
  5593                           ; BSR set to: 1
  5594   000E6A  C1A4  F070         	movff	powf@k,??_powf
  5595   000E6E  C1A5  F071         	movff	powf@k+1,??_powf+1
  5596   000E72  0100               	movlb	0	; () banked
  5597   000E74  90D8               	bcf	status,0,c
  5598   000E76  3770               	rlcf	??_powf& (0+255),f,b
  5599   000E78  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5600   000E7A  90D8               	bcf	status,0,c
  5601   000E7C  3770               	rlcf	??_powf& (0+255),f,b
  5602   000E7E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  5603   000E80  0E75               	movlw	low _bp
  5604   000E82  2570               	addwf	??_powf& (0+255),w,b
  5605   000E84  6EF6               	movwf	tblptrl,c
  5606   000E86  0E7E               	movlw	high _bp
  5607   000E88  2171               	addwfc	(??_powf+1)& (0+255),w,b
  5608   000E8A  6EF7               	movwf	tblptrh,c
  5609   000E8C                     	if	0	;There are less than 3 active tblptr bytes
  5610   000E8C                     	endif
  5611   000E8C  0009               	tblrd		*+
  5612   000E8E  CFF5 F055          	movff	tablat,___flsub@a
  5613   000E92  0009               	tblrd		*+
  5614   000E94  CFF5 F056          	movff	tablat,___flsub@a+1
  5615   000E98  0009               	tblrd		*+
  5616   000E9A  CFF5 F057          	movff	tablat,___flsub@a+2
  5617   000E9E  000A               	tblrd		*-
  5618   000EA0  CFF5 F058          	movff	tablat,___flsub@a+3
  5619   000EA4  C170  F051         	movff	powf@t_h,___flsub@b
  5620   000EA8  C171  F052         	movff	powf@t_h+1,___flsub@b+1
  5621   000EAC  C172  F053         	movff	powf@t_h+2,___flsub@b+2
  5622   000EB0  C173  F054         	movff	powf@t_h+3,___flsub@b+3
  5623   000EB4  EC04  F036         	call	___flsub	;wreg free
  5624   000EB8  C051  F19C         	movff	?___flsub,_powf$1840
  5625   000EBC  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  5626   000EC0  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  5627   000EC4  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  5628   000EC8  C178  F051         	movff	powf@ax,___flsub@b
  5629   000ECC  C179  F052         	movff	powf@ax+1,___flsub@b+1
  5630   000ED0  C17A  F053         	movff	powf@ax+2,___flsub@b+2
  5631   000ED4  C17B  F054         	movff	powf@ax+3,___flsub@b+3
  5632   000ED8  C19C  F055         	movff	_powf$1840,___flsub@a
  5633   000EDC  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  5634   000EE0  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  5635   000EE4  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  5636   000EE8  EC04  F036         	call	___flsub	;wreg free
  5637   000EEC  C051  F134         	movff	?___flsub,powf@t_l
  5638   000EF0  C052  F135         	movff	?___flsub+1,powf@t_l+1
  5639   000EF4  C053  F136         	movff	?___flsub+2,powf@t_l+2
  5640   000EF8  C054  F137         	movff	?___flsub+3,powf@t_l+3
  5641   000EFC  C170  F013         	movff	powf@t_h,___flmul@a
  5642   000F00  C171  F014         	movff	powf@t_h+1,___flmul@a+1
  5643   000F04  C172  F015         	movff	powf@t_h+2,___flmul@a+2
  5644   000F08  C173  F016         	movff	powf@t_h+3,___flmul@a+3
  5645   000F0C  C174  F00F         	movff	powf@s_h,___flmul@b
  5646   000F10  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5647   000F14  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5648   000F18  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5649   000F1C  ECC2  F01F         	call	___flmul	;wreg free
  5650   000F20  C00F  F055         	movff	?___flmul,___flsub@a
  5651   000F24  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5652   000F28  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5653   000F2C  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5654   000F30  C17C  F051         	movff	powf@u,___flsub@b
  5655   000F34  C17D  F052         	movff	powf@u+1,___flsub@b+1
  5656   000F38  C17E  F053         	movff	powf@u+2,___flsub@b+2
  5657   000F3C  C17F  F054         	movff	powf@u+3,___flsub@b+3
  5658   000F40  EC04  F036         	call	___flsub	;wreg free
  5659   000F44  C051  F19C         	movff	?___flsub,_powf$1840
  5660   000F48  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  5661   000F4C  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  5662   000F50  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  5663   000F54  C134  F013         	movff	powf@t_l,___flmul@a
  5664   000F58  C135  F014         	movff	powf@t_l+1,___flmul@a+1
  5665   000F5C  C136  F015         	movff	powf@t_l+2,___flmul@a+2
  5666   000F60  C137  F016         	movff	powf@t_l+3,___flmul@a+3
  5667   000F64  C174  F00F         	movff	powf@s_h,___flmul@b
  5668   000F68  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5669   000F6C  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5670   000F70  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5671   000F74  ECC2  F01F         	call	___flmul	;wreg free
  5672   000F78  C00F  F055         	movff	?___flmul,___flsub@a
  5673   000F7C  C010  F056         	movff	?___flmul+1,___flsub@a+1
  5674   000F80  C011  F057         	movff	?___flmul+2,___flsub@a+2
  5675   000F84  C012  F058         	movff	?___flmul+3,___flsub@a+3
  5676   000F88  C19C  F051         	movff	_powf$1840,___flsub@b
  5677   000F8C  C19D  F052         	movff	_powf$1840+1,___flsub@b+1
  5678   000F90  C19E  F053         	movff	_powf$1840+2,___flsub@b+2
  5679   000F94  C19F  F054         	movff	_powf$1840+3,___flsub@b+3
  5680   000F98  EC04  F036         	call	___flsub	;wreg free
  5681   000F9C  C051  F158         	movff	?___flsub,_powf$1838
  5682   000FA0  C052  F159         	movff	?___flsub+1,_powf$1838+1
  5683   000FA4  C053  F15A         	movff	?___flsub+2,_powf$1838+2
  5684   000FA8  C054  F15B         	movff	?___flsub+3,_powf$1838+3
  5685   000FAC  C158  F00F         	movff	_powf$1838,___flmul@b
  5686   000FB0  C159  F010         	movff	_powf$1838+1,___flmul@b+1
  5687   000FB4  C15A  F011         	movff	_powf$1838+2,___flmul@b+2
  5688   000FB8  C15B  F012         	movff	_powf$1838+3,___flmul@b+3
  5689   000FBC  C180  F013         	movff	powf@v,___flmul@a
  5690   000FC0  C181  F014         	movff	powf@v+1,___flmul@a+1
  5691   000FC4  C182  F015         	movff	powf@v+2,___flmul@a+2
  5692   000FC8  C183  F016         	movff	powf@v+3,___flmul@a+3
  5693   000FCC  ECC2  F01F         	call	___flmul	;wreg free
  5694   000FD0  C00F  F130         	movff	?___flmul,powf@s_l
  5695   000FD4  C010  F131         	movff	?___flmul+1,powf@s_l+1
  5696   000FD8  C011  F132         	movff	?___flmul+2,powf@s_l+2
  5697   000FDC  C012  F133         	movff	?___flmul+3,powf@s_l+3
  5698   000FE0  C160  F00F         	movff	powf@s,___flmul@b
  5699   000FE4  C161  F010         	movff	powf@s+1,___flmul@b+1
  5700   000FE8  C162  F011         	movff	powf@s+2,___flmul@b+2
  5701   000FEC  C163  F012         	movff	powf@s+3,___flmul@b+3
  5702   000FF0  C160  F013         	movff	powf@s,___flmul@a
  5703   000FF4  C161  F014         	movff	powf@s+1,___flmul@a+1
  5704   000FF8  C162  F015         	movff	powf@s+2,___flmul@a+2
  5705   000FFC  C163  F016         	movff	powf@s+3,___flmul@a+3
  5706   001000  ECC2  F01F         	call	___flmul	;wreg free
  5707   001004  C00F  F190         	movff	?___flmul,powf@s2
  5708   001008  C010  F191         	movff	?___flmul+1,powf@s2+1
  5709   00100C  C011  F192         	movff	?___flmul+2,powf@s2+2
  5710   001010  C012  F193         	movff	?___flmul+3,powf@s2+3
  5711   001014  0E55               	movlw	85
  5712   001016  6E45               	movwf	___fladd@a^0,c
  5713   001018  0E32               	movlw	50
  5714   00101A  6E46               	movwf	(___fladd@a+1)^0,c
  5715   00101C  0E6C               	movlw	108
  5716   00101E  6E47               	movwf	(___fladd@a+2)^0,c
  5717   001020  0E3E               	movlw	62
  5718   001022  6E48               	movwf	(___fladd@a+3)^0,c
  5719   001024  0E42               	movlw	66
  5720   001026  6E13               	movwf	___flmul@a^0,c
  5721   001028  0EF1               	movlw	241
  5722   00102A  6E14               	movwf	(___flmul@a+1)^0,c
  5723   00102C  0E53               	movlw	83
  5724   00102E  6E15               	movwf	(___flmul@a+2)^0,c
  5725   001030  0E3E               	movlw	62
  5726   001032  6E16               	movwf	(___flmul@a+3)^0,c
  5727   001034  C190  F00F         	movff	powf@s2,___flmul@b
  5728   001038  C191  F010         	movff	powf@s2+1,___flmul@b+1
  5729   00103C  C192  F011         	movff	powf@s2+2,___flmul@b+2
  5730   001040  C193  F012         	movff	powf@s2+3,___flmul@b+3
  5731   001044  ECC2  F01F         	call	___flmul	;wreg free
  5732   001048  C00F  F041         	movff	?___flmul,___fladd@b
  5733   00104C  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5734   001050  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5735   001054  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5736   001058  EC67  F01D         	call	___fladd	;wreg free
  5737   00105C  C041  F148         	movff	?___fladd,_powf$1837
  5738   001060  C042  F149         	movff	?___fladd+1,_powf$1837+1
  5739   001064  C043  F14A         	movff	?___fladd+2,_powf$1837+2
  5740   001068  C044  F14B         	movff	?___fladd+3,_powf$1837+3
  5741   00106C  0E05               	movlw	5
  5742   00106E  6E45               	movwf	___fladd@a^0,c
  5743   001070  0EA3               	movlw	163
  5744   001072  6E46               	movwf	(___fladd@a+1)^0,c
  5745   001074  0E8B               	movlw	139
  5746   001076  6E47               	movwf	(___fladd@a+2)^0,c
  5747   001078  0E3E               	movlw	62
  5748   00107A  6E48               	movwf	(___fladd@a+3)^0,c
  5749   00107C  C190  F013         	movff	powf@s2,___flmul@a
  5750   001080  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5751   001084  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5752   001088  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5753   00108C  C148  F00F         	movff	_powf$1837,___flmul@b
  5754   001090  C149  F010         	movff	_powf$1837+1,___flmul@b+1
  5755   001094  C14A  F011         	movff	_powf$1837+2,___flmul@b+2
  5756   001098  C14B  F012         	movff	_powf$1837+3,___flmul@b+3
  5757   00109C  ECC2  F01F         	call	___flmul	;wreg free
  5758   0010A0  C00F  F041         	movff	?___flmul,___fladd@b
  5759   0010A4  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5760   0010A8  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5761   0010AC  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5762   0010B0  EC67  F01D         	call	___fladd	;wreg free
  5763   0010B4  C041  F158         	movff	?___fladd,_powf$1838
  5764   0010B8  C042  F159         	movff	?___fladd+1,_powf$1838+1
  5765   0010BC  C043  F15A         	movff	?___fladd+2,_powf$1838+2
  5766   0010C0  C044  F15B         	movff	?___fladd+3,_powf$1838+3
  5767   0010C4  0EAB               	movlw	171
  5768   0010C6  6E45               	movwf	___fladd@a^0,c
  5769   0010C8  0EAA               	movlw	170
  5770   0010CA  6E46               	movwf	(___fladd@a+1)^0,c
  5771   0010CC  0EAA               	movlw	170
  5772   0010CE  6E47               	movwf	(___fladd@a+2)^0,c
  5773   0010D0  0E3E               	movlw	62
  5774   0010D2  6E48               	movwf	(___fladd@a+3)^0,c
  5775   0010D4  C190  F013         	movff	powf@s2,___flmul@a
  5776   0010D8  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5777   0010DC  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5778   0010E0  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5779   0010E4  C158  F00F         	movff	_powf$1838,___flmul@b
  5780   0010E8  C159  F010         	movff	_powf$1838+1,___flmul@b+1
  5781   0010EC  C15A  F011         	movff	_powf$1838+2,___flmul@b+2
  5782   0010F0  C15B  F012         	movff	_powf$1838+3,___flmul@b+3
  5783   0010F4  ECC2  F01F         	call	___flmul	;wreg free
  5784   0010F8  C00F  F041         	movff	?___flmul,___fladd@b
  5785   0010FC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5786   001100  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5787   001104  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5788   001108  EC67  F01D         	call	___fladd	;wreg free
  5789   00110C  C041  F14C         	movff	?___fladd,_powf$1839
  5790   001110  C042  F14D         	movff	?___fladd+1,_powf$1839+1
  5791   001114  C043  F14E         	movff	?___fladd+2,_powf$1839+2
  5792   001118  C044  F14F         	movff	?___fladd+3,_powf$1839+3
  5793   00111C  0EB7               	movlw	183
  5794   00111E  6E45               	movwf	___fladd@a^0,c
  5795   001120  0E6D               	movlw	109
  5796   001122  6E46               	movwf	(___fladd@a+1)^0,c
  5797   001124  0EDB               	movlw	219
  5798   001126  6E47               	movwf	(___fladd@a+2)^0,c
  5799   001128  0E3E               	movlw	62
  5800   00112A  6E48               	movwf	(___fladd@a+3)^0,c
  5801   00112C  C190  F013         	movff	powf@s2,___flmul@a
  5802   001130  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5803   001134  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5804   001138  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5805   00113C  C14C  F00F         	movff	_powf$1839,___flmul@b
  5806   001140  C14D  F010         	movff	_powf$1839+1,___flmul@b+1
  5807   001144  C14E  F011         	movff	_powf$1839+2,___flmul@b+2
  5808   001148  C14F  F012         	movff	_powf$1839+3,___flmul@b+3
  5809   00114C  ECC2  F01F         	call	___flmul	;wreg free
  5810   001150  C00F  F041         	movff	?___flmul,___fladd@b
  5811   001154  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5812   001158  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5813   00115C  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5814   001160  EC67  F01D         	call	___fladd	;wreg free
  5815   001164  C041  F138         	movff	?___fladd,_powf$1841
  5816   001168  C042  F139         	movff	?___fladd+1,_powf$1841+1
  5817   00116C  C043  F13A         	movff	?___fladd+2,_powf$1841+2
  5818   001170  C044  F13B         	movff	?___fladd+3,_powf$1841+3
  5819   001174  0E9A               	movlw	154
  5820   001176  6E45               	movwf	___fladd@a^0,c
  5821   001178  0E99               	movlw	153
  5822   00117A  6E46               	movwf	(___fladd@a+1)^0,c
  5823   00117C  0E19               	movlw	25
  5824   00117E  6E47               	movwf	(___fladd@a+2)^0,c
  5825   001180  0E3F               	movlw	63
  5826   001182  6E48               	movwf	(___fladd@a+3)^0,c
  5827   001184  C190  F013         	movff	powf@s2,___flmul@a
  5828   001188  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5829   00118C  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5830   001190  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5831   001194  C138  F00F         	movff	_powf$1841,___flmul@b
  5832   001198  C139  F010         	movff	_powf$1841+1,___flmul@b+1
  5833   00119C  C13A  F011         	movff	_powf$1841+2,___flmul@b+2
  5834   0011A0  C13B  F012         	movff	_powf$1841+3,___flmul@b+3
  5835   0011A4  ECC2  F01F         	call	___flmul	;wreg free
  5836   0011A8  C00F  F041         	movff	?___flmul,___fladd@b
  5837   0011AC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  5838   0011B0  C011  F043         	movff	?___flmul+2,___fladd@b+2
  5839   0011B4  C012  F044         	movff	?___flmul+3,___fladd@b+3
  5840   0011B8  EC67  F01D         	call	___fladd	;wreg free
  5841   0011BC  C041  F100         	movff	?___fladd,_powf$1842
  5842   0011C0  C042  F101         	movff	?___fladd+1,_powf$1842+1
  5843   0011C4  C043  F102         	movff	?___fladd+2,_powf$1842+2
  5844   0011C8  C044  F103         	movff	?___fladd+3,_powf$1842+3
  5845   0011CC  C190  F013         	movff	powf@s2,___flmul@a
  5846   0011D0  C191  F014         	movff	powf@s2+1,___flmul@a+1
  5847   0011D4  C192  F015         	movff	powf@s2+2,___flmul@a+2
  5848   0011D8  C193  F016         	movff	powf@s2+3,___flmul@a+3
  5849   0011DC  C190  F00F         	movff	powf@s2,___flmul@b
  5850   0011E0  C191  F010         	movff	powf@s2+1,___flmul@b+1
  5851   0011E4  C192  F011         	movff	powf@s2+2,___flmul@b+2
  5852   0011E8  C193  F012         	movff	powf@s2+3,___flmul@b+3
  5853   0011EC  ECC2  F01F         	call	___flmul	;wreg free
  5854   0011F0  C00F  F104         	movff	?___flmul,_powf$1843
  5855   0011F4  C010  F105         	movff	?___flmul+1,_powf$1843+1
  5856   0011F8  C011  F106         	movff	?___flmul+2,_powf$1843+2
  5857   0011FC  C012  F107         	movff	?___flmul+3,_powf$1843+3
  5858   001200  C100  F00F         	movff	_powf$1842,___flmul@b
  5859   001204  C101  F010         	movff	_powf$1842+1,___flmul@b+1
  5860   001208  C102  F011         	movff	_powf$1842+2,___flmul@b+2
  5861   00120C  C103  F012         	movff	_powf$1842+3,___flmul@b+3
  5862   001210  C104  F013         	movff	_powf$1843,___flmul@a
  5863   001214  C105  F014         	movff	_powf$1843+1,___flmul@a+1
  5864   001218  C106  F015         	movff	_powf$1843+2,___flmul@a+2
  5865   00121C  C107  F016         	movff	_powf$1843+3,___flmul@a+3
  5866   001220  ECC2  F01F         	call	___flmul	;wreg free
  5867   001224  C00F  F150         	movff	?___flmul,powf@r
  5868   001228  C010  F151         	movff	?___flmul+1,powf@r+1
  5869   00122C  C011  F152         	movff	?___flmul+2,powf@r+2
  5870   001230  C012  F153         	movff	?___flmul+3,powf@r+3
  5871   001234  C130  F013         	movff	powf@s_l,___flmul@a
  5872   001238  C131  F014         	movff	powf@s_l+1,___flmul@a+1
  5873   00123C  C132  F015         	movff	powf@s_l+2,___flmul@a+2
  5874   001240  C133  F016         	movff	powf@s_l+3,___flmul@a+3
  5875   001244  C160  F045         	movff	powf@s,___fladd@a
  5876   001248  C161  F046         	movff	powf@s+1,___fladd@a+1
  5877   00124C  C162  F047         	movff	powf@s+2,___fladd@a+2
  5878   001250  C163  F048         	movff	powf@s+3,___fladd@a+3
  5879   001254  C174  F041         	movff	powf@s_h,___fladd@b
  5880   001258  C175  F042         	movff	powf@s_h+1,___fladd@b+1
  5881   00125C  C176  F043         	movff	powf@s_h+2,___fladd@b+2
  5882   001260  C177  F044         	movff	powf@s_h+3,___fladd@b+3
  5883   001264  EC67  F01D         	call	___fladd	;wreg free
  5884   001268  C041  F00F         	movff	?___fladd,___flmul@b
  5885   00126C  C042  F010         	movff	?___fladd+1,___flmul@b+1
  5886   001270  C043  F011         	movff	?___fladd+2,___flmul@b+2
  5887   001274  C044  F012         	movff	?___fladd+3,___flmul@b+3
  5888   001278  ECC2  F01F         	call	___flmul	;wreg free
  5889   00127C  C00F  F15C         	movff	?___flmul,_powf$1844
  5890   001280  C010  F15D         	movff	?___flmul+1,_powf$1844+1
  5891   001284  C011  F15E         	movff	?___flmul+2,_powf$1844+2
  5892   001288  C012  F15F         	movff	?___flmul+3,_powf$1844+3
  5893   00128C  C150  F041         	movff	powf@r,___fladd@b
  5894   001290  C151  F042         	movff	powf@r+1,___fladd@b+1
  5895   001294  C152  F043         	movff	powf@r+2,___fladd@b+2
  5896   001298  C153  F044         	movff	powf@r+3,___fladd@b+3
  5897   00129C  C15C  F045         	movff	_powf$1844,___fladd@a
  5898   0012A0  C15D  F046         	movff	_powf$1844+1,___fladd@a+1
  5899   0012A4  C15E  F047         	movff	_powf$1844+2,___fladd@a+2
  5900   0012A8  C15F  F048         	movff	_powf$1844+3,___fladd@a+3
  5901   0012AC  EC67  F01D         	call	___fladd	;wreg free
  5902   0012B0  C041  F150         	movff	?___fladd,powf@r
  5903   0012B4  C042  F151         	movff	?___fladd+1,powf@r+1
  5904   0012B8  C043  F152         	movff	?___fladd+2,powf@r+2
  5905   0012BC  C044  F153         	movff	?___fladd+3,powf@r+3
  5906   0012C0  C174  F00F         	movff	powf@s_h,___flmul@b
  5907   0012C4  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  5908   0012C8  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  5909   0012CC  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  5910   0012D0  C174  F013         	movff	powf@s_h,___flmul@a
  5911   0012D4  C175  F014         	movff	powf@s_h+1,___flmul@a+1
  5912   0012D8  C176  F015         	movff	powf@s_h+2,___flmul@a+2
  5913   0012DC  C177  F016         	movff	powf@s_h+3,___flmul@a+3
  5914   0012E0  ECC2  F01F         	call	___flmul	;wreg free
  5915   0012E4  C00F  F190         	movff	?___flmul,powf@s2
  5916   0012E8  C010  F191         	movff	?___flmul+1,powf@s2+1
  5917   0012EC  C011  F192         	movff	?___flmul+2,powf@s2+2
  5918   0012F0  C012  F193         	movff	?___flmul+3,powf@s2+3
  5919   0012F4  0E00               	movlw	0
  5920   0012F6  6E45               	movwf	___fladd@a^0,c
  5921   0012F8  0E00               	movlw	0
  5922   0012FA  6E46               	movwf	(___fladd@a+1)^0,c
  5923   0012FC  0E40               	movlw	64
  5924   0012FE  6E47               	movwf	(___fladd@a+2)^0,c
  5925   001300  0E40               	movlw	64
  5926   001302  6E48               	movwf	(___fladd@a+3)^0,c
  5927   001304  C190  F041         	movff	powf@s2,___fladd@b
  5928   001308  C191  F042         	movff	powf@s2+1,___fladd@b+1
  5929   00130C  C192  F043         	movff	powf@s2+2,___fladd@b+2
  5930   001310  C193  F044         	movff	powf@s2+3,___fladd@b+3
  5931   001314  EC67  F01D         	call	___fladd	;wreg free
  5932   001318  C041  F15C         	movff	?___fladd,_powf$1844
  5933   00131C  C042  F15D         	movff	?___fladd+1,_powf$1844+1
  5934   001320  C043  F15E         	movff	?___fladd+2,_powf$1844+2
  5935   001324  C044  F15F         	movff	?___fladd+3,_powf$1844+3
  5936   001328  C15C  F041         	movff	_powf$1844,___fladd@b
  5937   00132C  C15D  F042         	movff	_powf$1844+1,___fladd@b+1
  5938   001330  C15E  F043         	movff	_powf$1844+2,___fladd@b+2
  5939   001334  C15F  F044         	movff	_powf$1844+3,___fladd@b+3
  5940   001338  C150  F045         	movff	powf@r,___fladd@a
  5941   00133C  C151  F046         	movff	powf@r+1,___fladd@a+1
  5942   001340  C152  F047         	movff	powf@r+2,___fladd@a+2
  5943   001344  C153  F048         	movff	powf@r+3,___fladd@a+3
  5944   001348  EC67  F01D         	call	___fladd	;wreg free
  5945   00134C  C041  F170         	movff	?___fladd,powf@t_h
  5946   001350  C042  F171         	movff	?___fladd+1,powf@t_h+1
  5947   001354  C043  F172         	movff	?___fladd+2,powf@t_h+2
  5948   001358  C044  F173         	movff	?___fladd+3,powf@t_h+3
  5949   00135C  C170  F198         	movff	powf@t_h,powf@is
  5950   001360  C171  F199         	movff	powf@t_h+1,powf@is+1
  5951   001364  C172  F19A         	movff	powf@t_h+2,powf@is+2
  5952   001368  C173  F19B         	movff	powf@t_h+3,powf@is+3
  5953   00136C  0E00               	movlw	0
  5954   00136E  0101               	movlb	1	; () banked
  5955   001370  1598               	andwf	powf@is& (0+255),w,b
  5956   001372  6F70               	movwf	powf@t_h& (0+255),b
  5957   001374  0EF0               	movlw	240
  5958   001376  1599               	andwf	(powf@is+1)& (0+255),w,b
  5959   001378  6F71               	movwf	(powf@t_h+1)& (0+255),b
  5960   00137A  0EFF               	movlw	255
  5961   00137C  159A               	andwf	(powf@is+2)& (0+255),w,b
  5962   00137E  6F72               	movwf	(powf@t_h+2)& (0+255),b
  5963   001380  0EFF               	movlw	255
  5964   001382  159B               	andwf	(powf@is+3)& (0+255),w,b
  5965   001384  6F73               	movwf	(powf@t_h+3)& (0+255),b
  5966   001386                     
  5967                           ; BSR set to: 1
  5968   001386  0E00               	movlw	0
  5969   001388  6E45               	movwf	___fladd@a^0,c
  5970   00138A  0E00               	movlw	0
  5971   00138C  6E46               	movwf	(___fladd@a+1)^0,c
  5972   00138E  0E40               	movlw	64
  5973   001390  6E47               	movwf	(___fladd@a+2)^0,c
  5974   001392  0EC0               	movlw	192
  5975   001394  6E48               	movwf	(___fladd@a+3)^0,c
  5976   001396  C170  F041         	movff	powf@t_h,___fladd@b
  5977   00139A  C171  F042         	movff	powf@t_h+1,___fladd@b+1
  5978   00139E  C172  F043         	movff	powf@t_h+2,___fladd@b+2
  5979   0013A2  C173  F044         	movff	powf@t_h+3,___fladd@b+3
  5980   0013A6  EC67  F01D         	call	___fladd	;wreg free
  5981   0013AA  C041  F13C         	movff	?___fladd,_powf$1845
  5982   0013AE  C042  F13D         	movff	?___fladd+1,_powf$1845+1
  5983   0013B2  C043  F13E         	movff	?___fladd+2,_powf$1845+2
  5984   0013B6  C044  F13F         	movff	?___fladd+3,_powf$1845+3
  5985   0013BA  C190  F055         	movff	powf@s2,___flsub@a
  5986   0013BE  C191  F056         	movff	powf@s2+1,___flsub@a+1
  5987   0013C2  C192  F057         	movff	powf@s2+2,___flsub@a+2
  5988   0013C6  C193  F058         	movff	powf@s2+3,___flsub@a+3
  5989   0013CA  C13C  F051         	movff	_powf$1845,___flsub@b
  5990   0013CE  C13D  F052         	movff	_powf$1845+1,___flsub@b+1
  5991   0013D2  C13E  F053         	movff	_powf$1845+2,___flsub@b+2
  5992   0013D6  C13F  F054         	movff	_powf$1845+3,___flsub@b+3
  5993   0013DA  EC04  F036         	call	___flsub	;wreg free
  5994   0013DE  C051  F140         	movff	?___flsub,_powf$1846
  5995   0013E2  C052  F141         	movff	?___flsub+1,_powf$1846+1
  5996   0013E6  C053  F142         	movff	?___flsub+2,_powf$1846+2
  5997   0013EA  C054  F143         	movff	?___flsub+3,_powf$1846+3
  5998   0013EE  C150  F051         	movff	powf@r,___flsub@b
  5999   0013F2  C151  F052         	movff	powf@r+1,___flsub@b+1
  6000   0013F6  C152  F053         	movff	powf@r+2,___flsub@b+2
  6001   0013FA  C153  F054         	movff	powf@r+3,___flsub@b+3
  6002   0013FE  C140  F055         	movff	_powf$1846,___flsub@a
  6003   001402  C141  F056         	movff	_powf$1846+1,___flsub@a+1
  6004   001406  C142  F057         	movff	_powf$1846+2,___flsub@a+2
  6005   00140A  C143  F058         	movff	_powf$1846+3,___flsub@a+3
  6006   00140E  EC04  F036         	call	___flsub	;wreg free
  6007   001412  C051  F134         	movff	?___flsub,powf@t_l
  6008   001416  C052  F135         	movff	?___flsub+1,powf@t_l+1
  6009   00141A  C053  F136         	movff	?___flsub+2,powf@t_l+2
  6010   00141E  C054  F137         	movff	?___flsub+3,powf@t_l+3
  6011   001422  C174  F00F         	movff	powf@s_h,___flmul@b
  6012   001426  C175  F010         	movff	powf@s_h+1,___flmul@b+1
  6013   00142A  C176  F011         	movff	powf@s_h+2,___flmul@b+2
  6014   00142E  C177  F012         	movff	powf@s_h+3,___flmul@b+3
  6015   001432  C170  F013         	movff	powf@t_h,___flmul@a
  6016   001436  C171  F014         	movff	powf@t_h+1,___flmul@a+1
  6017   00143A  C172  F015         	movff	powf@t_h+2,___flmul@a+2
  6018   00143E  C173  F016         	movff	powf@t_h+3,___flmul@a+3
  6019   001442  ECC2  F01F         	call	___flmul	;wreg free
  6020   001446  C00F  F17C         	movff	?___flmul,powf@u
  6021   00144A  C010  F17D         	movff	?___flmul+1,powf@u+1
  6022   00144E  C011  F17E         	movff	?___flmul+2,powf@u+2
  6023   001452  C012  F17F         	movff	?___flmul+3,powf@u+3
  6024   001456  C130  F013         	movff	powf@s_l,___flmul@a
  6025   00145A  C131  F014         	movff	powf@s_l+1,___flmul@a+1
  6026   00145E  C132  F015         	movff	powf@s_l+2,___flmul@a+2
  6027   001462  C133  F016         	movff	powf@s_l+3,___flmul@a+3
  6028   001466  C170  F00F         	movff	powf@t_h,___flmul@b
  6029   00146A  C171  F010         	movff	powf@t_h+1,___flmul@b+1
  6030   00146E  C172  F011         	movff	powf@t_h+2,___flmul@b+2
  6031   001472  C173  F012         	movff	powf@t_h+3,___flmul@b+3
  6032   001476  ECC2  F01F         	call	___flmul	;wreg free
  6033   00147A  C00F  F041         	movff	?___flmul,___fladd@b
  6034   00147E  C010  F042         	movff	?___flmul+1,___fladd@b+1
  6035   001482  C011  F043         	movff	?___flmul+2,___fladd@b+2
  6036   001486  C012  F044         	movff	?___flmul+3,___fladd@b+3
  6037   00148A  C160  F013         	movff	powf@s,___flmul@a
  6038   00148E  C161  F014         	movff	powf@s+1,___flmul@a+1
  6039   001492  C162  F015         	movff	powf@s+2,___flmul@a+2
  6040   001496  C163  F016         	movff	powf@s+3,___flmul@a+3
  6041   00149A  C134  F00F         	movff	powf@t_l,___flmul@b
  6042   00149E  C135  F010         	movff	powf@t_l+1,___flmul@b+1
  6043   0014A2  C136  F011         	movff	powf@t_l+2,___flmul@b+2
  6044   0014A6  C137  F012         	movff	powf@t_l+3,___flmul@b+3
  6045   0014AA  ECC2  F01F         	call	___flmul	;wreg free
  6046   0014AE  C00F  F045         	movff	?___flmul,___fladd@a
  6047   0014B2  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6048   0014B6  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6049   0014BA  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6050   0014BE  EC67  F01D         	call	___fladd	;wreg free
  6051   0014C2  C041  F180         	movff	?___fladd,powf@v
  6052   0014C6  C042  F181         	movff	?___fladd+1,powf@v+1
  6053   0014CA  C043  F182         	movff	?___fladd+2,powf@v+2
  6054   0014CE  C044  F183         	movff	?___fladd+3,powf@v+3
  6055   0014D2  C17C  F041         	movff	powf@u,___fladd@b
  6056   0014D6  C17D  F042         	movff	powf@u+1,___fladd@b+1
  6057   0014DA  C17E  F043         	movff	powf@u+2,___fladd@b+2
  6058   0014DE  C17F  F044         	movff	powf@u+3,___fladd@b+3
  6059   0014E2  C180  F045         	movff	powf@v,___fladd@a
  6060   0014E6  C181  F046         	movff	powf@v+1,___fladd@a+1
  6061   0014EA  C182  F047         	movff	powf@v+2,___fladd@a+2
  6062   0014EE  C183  F048         	movff	powf@v+3,___fladd@a+3
  6063   0014F2  EC67  F01D         	call	___fladd	;wreg free
  6064   0014F6  C041  F1A0         	movff	?___fladd,powf@p_h
  6065   0014FA  C042  F1A1         	movff	?___fladd+1,powf@p_h+1
  6066   0014FE  C043  F1A2         	movff	?___fladd+2,powf@p_h+2
  6067   001502  C044  F1A3         	movff	?___fladd+3,powf@p_h+3
  6068   001506  C1A0  F198         	movff	powf@p_h,powf@is
  6069   00150A  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  6070   00150E  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  6071   001512  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  6072   001516  0E00               	movlw	0
  6073   001518  0101               	movlb	1	; () banked
  6074   00151A  1598               	andwf	powf@is& (0+255),w,b
  6075   00151C  6FA0               	movwf	powf@p_h& (0+255),b
  6076   00151E  0EF0               	movlw	240
  6077   001520  1599               	andwf	(powf@is+1)& (0+255),w,b
  6078   001522  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  6079   001524  0EFF               	movlw	255
  6080   001526  159A               	andwf	(powf@is+2)& (0+255),w,b
  6081   001528  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  6082   00152A  0EFF               	movlw	255
  6083   00152C  159B               	andwf	(powf@is+3)& (0+255),w,b
  6084   00152E  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  6085   001530                     
  6086                           ; BSR set to: 1
  6087   001530  C17C  F055         	movff	powf@u,___flsub@a
  6088   001534  C17D  F056         	movff	powf@u+1,___flsub@a+1
  6089   001538  C17E  F057         	movff	powf@u+2,___flsub@a+2
  6090   00153C  C17F  F058         	movff	powf@u+3,___flsub@a+3
  6091   001540  C1A0  F051         	movff	powf@p_h,___flsub@b
  6092   001544  C1A1  F052         	movff	powf@p_h+1,___flsub@b+1
  6093   001548  C1A2  F053         	movff	powf@p_h+2,___flsub@b+2
  6094   00154C  C1A3  F054         	movff	powf@p_h+3,___flsub@b+3
  6095   001550  EC04  F036         	call	___flsub	;wreg free
  6096   001554  C051  F19C         	movff	?___flsub,_powf$1840
  6097   001558  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  6098   00155C  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  6099   001560  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  6100   001564  C180  F051         	movff	powf@v,___flsub@b
  6101   001568  C181  F052         	movff	powf@v+1,___flsub@b+1
  6102   00156C  C182  F053         	movff	powf@v+2,___flsub@b+2
  6103   001570  C183  F054         	movff	powf@v+3,___flsub@b+3
  6104   001574  C19C  F055         	movff	_powf$1840,___flsub@a
  6105   001578  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  6106   00157C  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  6107   001580  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  6108   001584  EC04  F036         	call	___flsub	;wreg free
  6109   001588  C051  F16C         	movff	?___flsub,powf@p_l
  6110   00158C  C052  F16D         	movff	?___flsub+1,powf@p_l+1
  6111   001590  C053  F16E         	movff	?___flsub+2,powf@p_l+2
  6112   001594  C054  F16F         	movff	?___flsub+3,powf@p_l+3
  6113   001598  C1A0  F00F         	movff	powf@p_h,___flmul@b
  6114   00159C  C1A1  F010         	movff	powf@p_h+1,___flmul@b+1
  6115   0015A0  C1A2  F011         	movff	powf@p_h+2,___flmul@b+2
  6116   0015A4  C1A3  F012         	movff	powf@p_h+3,___flmul@b+3
  6117   0015A8  0E00               	movlw	0
  6118   0015AA  6E13               	movwf	___flmul@a^0,c
  6119   0015AC  0E40               	movlw	64
  6120   0015AE  6E14               	movwf	(___flmul@a+1)^0,c
  6121   0015B0  0E76               	movlw	118
  6122   0015B2  6E15               	movwf	(___flmul@a+2)^0,c
  6123   0015B4  0E3F               	movlw	63
  6124   0015B6  6E16               	movwf	(___flmul@a+3)^0,c
  6125   0015B8  ECC2  F01F         	call	___flmul	;wreg free
  6126   0015BC  C00F  F120         	movff	?___flmul,powf@z_h
  6127   0015C0  C010  F121         	movff	?___flmul+1,powf@z_h+1
  6128   0015C4  C011  F122         	movff	?___flmul+2,powf@z_h+2
  6129   0015C8  C012  F123         	movff	?___flmul+3,powf@z_h+3
  6130   0015CC  0E4F               	movlw	79
  6131   0015CE  6E13               	movwf	___flmul@a^0,c
  6132   0015D0  0E38               	movlw	56
  6133   0015D2  6E14               	movwf	(___flmul@a+1)^0,c
  6134   0015D4  0E76               	movlw	118
  6135   0015D6  6E15               	movwf	(___flmul@a+2)^0,c
  6136   0015D8  0E3F               	movlw	63
  6137   0015DA  6E16               	movwf	(___flmul@a+3)^0,c
  6138   0015DC  C16C  F00F         	movff	powf@p_l,___flmul@b
  6139   0015E0  C16D  F010         	movff	powf@p_l+1,___flmul@b+1
  6140   0015E4  C16E  F011         	movff	powf@p_l+2,___flmul@b+2
  6141   0015E8  C16F  F012         	movff	powf@p_l+3,___flmul@b+3
  6142   0015EC  ECC2  F01F         	call	___flmul	;wreg free
  6143   0015F0  C00F  F045         	movff	?___flmul,___fladd@a
  6144   0015F4  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6145   0015F8  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6146   0015FC  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6147   001600  0EC6               	movlw	198
  6148   001602  6E13               	movwf	___flmul@a^0,c
  6149   001604  0E23               	movlw	35
  6150   001606  6E14               	movwf	(___flmul@a+1)^0,c
  6151   001608  0EF6               	movlw	246
  6152   00160A  6E15               	movwf	(___flmul@a+2)^0,c
  6153   00160C  0EB8               	movlw	184
  6154   00160E  6E16               	movwf	(___flmul@a+3)^0,c
  6155   001610  C1A0  F00F         	movff	powf@p_h,___flmul@b
  6156   001614  C1A1  F010         	movff	powf@p_h+1,___flmul@b+1
  6157   001618  C1A2  F011         	movff	powf@p_h+2,___flmul@b+2
  6158   00161C  C1A3  F012         	movff	powf@p_h+3,___flmul@b+3
  6159   001620  ECC2  F01F         	call	___flmul	;wreg free
  6160   001624  C00F  F041         	movff	?___flmul,___fladd@b
  6161   001628  C010  F042         	movff	?___flmul+1,___fladd@b+1
  6162   00162C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  6163   001630  C012  F044         	movff	?___flmul+3,___fladd@b+3
  6164   001634  EC67  F01D         	call	___fladd	;wreg free
  6165   001638  C041  F15C         	movff	?___fladd,_powf$1844
  6166   00163C  C042  F15D         	movff	?___fladd+1,_powf$1844+1
  6167   001640  C043  F15E         	movff	?___fladd+2,_powf$1844+2
  6168   001644  C044  F15F         	movff	?___fladd+3,_powf$1844+3
  6169   001648  C15C  F041         	movff	_powf$1844,___fladd@b
  6170   00164C  C15D  F042         	movff	_powf$1844+1,___fladd@b+1
  6171   001650  C15E  F043         	movff	_powf$1844+2,___fladd@b+2
  6172   001654  C15F  F044         	movff	_powf$1844+3,___fladd@b+3
  6173   001658  C1A4  F070         	movff	powf@k,??_powf
  6174   00165C  C1A5  F071         	movff	powf@k+1,??_powf+1
  6175   001660  0100               	movlb	0	; () banked
  6176   001662  90D8               	bcf	status,0,c
  6177   001664  3770               	rlcf	??_powf& (0+255),f,b
  6178   001666  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6179   001668  90D8               	bcf	status,0,c
  6180   00166A  3770               	rlcf	??_powf& (0+255),f,b
  6181   00166C  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6182   00166E  0E65               	movlw	low _dp_l
  6183   001670  2570               	addwf	??_powf& (0+255),w,b
  6184   001672  6EF6               	movwf	tblptrl,c
  6185   001674  0E7E               	movlw	high _dp_l
  6186   001676  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6187   001678  6EF7               	movwf	tblptrh,c
  6188   00167A                     	if	0	;There are less than 3 active tblptr bytes
  6189   00167A                     	endif
  6190   00167A  0009               	tblrd		*+
  6191   00167C  CFF5 F045          	movff	tablat,___fladd@a
  6192   001680  0009               	tblrd		*+
  6193   001682  CFF5 F046          	movff	tablat,___fladd@a+1
  6194   001686  0009               	tblrd		*+
  6195   001688  CFF5 F047          	movff	tablat,___fladd@a+2
  6196   00168C  000A               	tblrd		*-
  6197   00168E  CFF5 F048          	movff	tablat,___fladd@a+3
  6198   001692  EC67  F01D         	call	___fladd	;wreg free
  6199   001696  C041  F124         	movff	?___fladd,powf@z_l
  6200   00169A  C042  F125         	movff	?___fladd+1,powf@z_l+1
  6201   00169E  C043  F126         	movff	?___fladd+2,powf@z_l+2
  6202   0016A2  C044  F127         	movff	?___fladd+3,powf@z_l+3
  6203   0016A6  C188  F001         	movff	powf@n,___xxtofl@val
  6204   0016AA  C189  F002         	movff	powf@n+1,___xxtofl@val+1
  6205   0016AE  C18A  F003         	movff	powf@n+2,___xxtofl@val+2
  6206   0016B2  C18B  F004         	movff	powf@n+3,___xxtofl@val+3
  6207   0016B6  0E01               	movlw	1
  6208   0016B8  ECB7  F02A         	call	___xxtofl
  6209   0016BC  C001  F1B0         	movff	?___xxtofl,powf@t
  6210   0016C0  C002  F1B1         	movff	?___xxtofl+1,powf@t+1
  6211   0016C4  C003  F1B2         	movff	?___xxtofl+2,powf@t+2
  6212   0016C8  C004  F1B3         	movff	?___xxtofl+3,powf@t+3
  6213   0016CC  C124  F045         	movff	powf@z_l,___fladd@a
  6214   0016D0  C125  F046         	movff	powf@z_l+1,___fladd@a+1
  6215   0016D4  C126  F047         	movff	powf@z_l+2,___fladd@a+2
  6216   0016D8  C127  F048         	movff	powf@z_l+3,___fladd@a+3
  6217   0016DC  C120  F041         	movff	powf@z_h,___fladd@b
  6218   0016E0  C121  F042         	movff	powf@z_h+1,___fladd@b+1
  6219   0016E4  C122  F043         	movff	powf@z_h+2,___fladd@b+2
  6220   0016E8  C123  F044         	movff	powf@z_h+3,___fladd@b+3
  6221   0016EC  EC67  F01D         	call	___fladd	;wreg free
  6222   0016F0  C041  F15C         	movff	?___fladd,_powf$1844
  6223   0016F4  C042  F15D         	movff	?___fladd+1,_powf$1844+1
  6224   0016F8  C043  F15E         	movff	?___fladd+2,_powf$1844+2
  6225   0016FC  C044  F15F         	movff	?___fladd+3,_powf$1844+3
  6226   001700  C1A4  F070         	movff	powf@k,??_powf
  6227   001704  C1A5  F071         	movff	powf@k+1,??_powf+1
  6228   001708  0100               	movlb	0	; () banked
  6229   00170A  90D8               	bcf	status,0,c
  6230   00170C  3770               	rlcf	??_powf& (0+255),f,b
  6231   00170E  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6232   001710  90D8               	bcf	status,0,c
  6233   001712  3770               	rlcf	??_powf& (0+255),f,b
  6234   001714  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6235   001716  0E6D               	movlw	low _dp_h
  6236   001718  2570               	addwf	??_powf& (0+255),w,b
  6237   00171A  6EF6               	movwf	tblptrl,c
  6238   00171C  0E7E               	movlw	high _dp_h
  6239   00171E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6240   001720  6EF7               	movwf	tblptrh,c
  6241   001722                     	if	0	;There are less than 3 active tblptr bytes
  6242   001722                     	endif
  6243   001722  0009               	tblrd		*+
  6244   001724  CFF5 F045          	movff	tablat,___fladd@a
  6245   001728  0009               	tblrd		*+
  6246   00172A  CFF5 F046          	movff	tablat,___fladd@a+1
  6247   00172E  0009               	tblrd		*+
  6248   001730  CFF5 F047          	movff	tablat,___fladd@a+2
  6249   001734  000A               	tblrd		*-
  6250   001736  CFF5 F048          	movff	tablat,___fladd@a+3
  6251   00173A  C15C  F041         	movff	_powf$1844,___fladd@b
  6252   00173E  C15D  F042         	movff	_powf$1844+1,___fladd@b+1
  6253   001742  C15E  F043         	movff	_powf$1844+2,___fladd@b+2
  6254   001746  C15F  F044         	movff	_powf$1844+3,___fladd@b+3
  6255   00174A  EC67  F01D         	call	___fladd	;wreg free
  6256   00174E  C041  F108         	movff	?___fladd,_powf$1847
  6257   001752  C042  F109         	movff	?___fladd+1,_powf$1847+1
  6258   001756  C043  F10A         	movff	?___fladd+2,_powf$1847+2
  6259   00175A  C044  F10B         	movff	?___fladd+3,_powf$1847+3
  6260   00175E  C108  F041         	movff	_powf$1847,___fladd@b
  6261   001762  C109  F042         	movff	_powf$1847+1,___fladd@b+1
  6262   001766  C10A  F043         	movff	_powf$1847+2,___fladd@b+2
  6263   00176A  C10B  F044         	movff	_powf$1847+3,___fladd@b+3
  6264   00176E  C1B0  F045         	movff	powf@t,___fladd@a
  6265   001772  C1B1  F046         	movff	powf@t+1,___fladd@a+1
  6266   001776  C1B2  F047         	movff	powf@t+2,___fladd@a+2
  6267   00177A  C1B3  F048         	movff	powf@t+3,___fladd@a+3
  6268   00177E  EC67  F01D         	call	___fladd	;wreg free
  6269   001782  C041  F18C         	movff	?___fladd,powf@t1
  6270   001786  C042  F18D         	movff	?___fladd+1,powf@t1+1
  6271   00178A  C043  F18E         	movff	?___fladd+2,powf@t1+2
  6272   00178E  C044  F18F         	movff	?___fladd+3,powf@t1+3
  6273   001792  C18C  F198         	movff	powf@t1,powf@is
  6274   001796  C18D  F199         	movff	powf@t1+1,powf@is+1
  6275   00179A  C18E  F19A         	movff	powf@t1+2,powf@is+2
  6276   00179E  C18F  F19B         	movff	powf@t1+3,powf@is+3
  6277   0017A2  0E00               	movlw	0
  6278   0017A4  0101               	movlb	1	; () banked
  6279   0017A6  1598               	andwf	powf@is& (0+255),w,b
  6280   0017A8  6F8C               	movwf	powf@t1& (0+255),b
  6281   0017AA  0EF0               	movlw	240
  6282   0017AC  1599               	andwf	(powf@is+1)& (0+255),w,b
  6283   0017AE  6F8D               	movwf	(powf@t1+1)& (0+255),b
  6284   0017B0  0EFF               	movlw	255
  6285   0017B2  159A               	andwf	(powf@is+2)& (0+255),w,b
  6286   0017B4  6F8E               	movwf	(powf@t1+2)& (0+255),b
  6287   0017B6  0EFF               	movlw	255
  6288   0017B8  159B               	andwf	(powf@is+3)& (0+255),w,b
  6289   0017BA  6F8F               	movwf	(powf@t1+3)& (0+255),b
  6290   0017BC                     
  6291                           ; BSR set to: 1
  6292   0017BC  C1B0  F055         	movff	powf@t,___flsub@a
  6293   0017C0  C1B1  F056         	movff	powf@t+1,___flsub@a+1
  6294   0017C4  C1B2  F057         	movff	powf@t+2,___flsub@a+2
  6295   0017C8  C1B3  F058         	movff	powf@t+3,___flsub@a+3
  6296   0017CC  C18C  F051         	movff	powf@t1,___flsub@b
  6297   0017D0  C18D  F052         	movff	powf@t1+1,___flsub@b+1
  6298   0017D4  C18E  F053         	movff	powf@t1+2,___flsub@b+2
  6299   0017D8  C18F  F054         	movff	powf@t1+3,___flsub@b+3
  6300   0017DC  EC04  F036         	call	___flsub	;wreg free
  6301   0017E0  C051  F19C         	movff	?___flsub,_powf$1840
  6302   0017E4  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  6303   0017E8  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  6304   0017EC  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  6305   0017F0  C1A4  F070         	movff	powf@k,??_powf
  6306   0017F4  C1A5  F071         	movff	powf@k+1,??_powf+1
  6307   0017F8  0100               	movlb	0	; () banked
  6308   0017FA  90D8               	bcf	status,0,c
  6309   0017FC  3770               	rlcf	??_powf& (0+255),f,b
  6310   0017FE  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6311   001800  90D8               	bcf	status,0,c
  6312   001802  3770               	rlcf	??_powf& (0+255),f,b
  6313   001804  3771               	rlcf	(??_powf+1)& (0+255),f,b
  6314   001806  0E6D               	movlw	low _dp_h
  6315   001808  2570               	addwf	??_powf& (0+255),w,b
  6316   00180A  6EF6               	movwf	tblptrl,c
  6317   00180C  0E7E               	movlw	high _dp_h
  6318   00180E  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6319   001810  6EF7               	movwf	tblptrh,c
  6320   001812                     	if	0	;There are less than 3 active tblptr bytes
  6321   001812                     	endif
  6322   001812  0009               	tblrd		*+
  6323   001814  CFF5 F055          	movff	tablat,___flsub@a
  6324   001818  0009               	tblrd		*+
  6325   00181A  CFF5 F056          	movff	tablat,___flsub@a+1
  6326   00181E  0009               	tblrd		*+
  6327   001820  CFF5 F057          	movff	tablat,___flsub@a+2
  6328   001824  000A               	tblrd		*-
  6329   001826  CFF5 F058          	movff	tablat,___flsub@a+3
  6330   00182A  C19C  F051         	movff	_powf$1840,___flsub@b
  6331   00182E  C19D  F052         	movff	_powf$1840+1,___flsub@b+1
  6332   001832  C19E  F053         	movff	_powf$1840+2,___flsub@b+2
  6333   001836  C19F  F054         	movff	_powf$1840+3,___flsub@b+3
  6334   00183A  EC04  F036         	call	___flsub	;wreg free
  6335   00183E  C051  F140         	movff	?___flsub,_powf$1846
  6336   001842  C052  F141         	movff	?___flsub+1,_powf$1846+1
  6337   001846  C053  F142         	movff	?___flsub+2,_powf$1846+2
  6338   00184A  C054  F143         	movff	?___flsub+3,_powf$1846+3
  6339   00184E  C120  F055         	movff	powf@z_h,___flsub@a
  6340   001852  C121  F056         	movff	powf@z_h+1,___flsub@a+1
  6341   001856  C122  F057         	movff	powf@z_h+2,___flsub@a+2
  6342   00185A  C123  F058         	movff	powf@z_h+3,___flsub@a+3
  6343   00185E  C140  F051         	movff	_powf$1846,___flsub@b
  6344   001862  C141  F052         	movff	_powf$1846+1,___flsub@b+1
  6345   001866  C142  F053         	movff	_powf$1846+2,___flsub@b+2
  6346   00186A  C143  F054         	movff	_powf$1846+3,___flsub@b+3
  6347   00186E  EC04  F036         	call	___flsub	;wreg free
  6348   001872  C051  F10C         	movff	?___flsub,_powf$1848
  6349   001876  C052  F10D         	movff	?___flsub+1,_powf$1848+1
  6350   00187A  C053  F10E         	movff	?___flsub+2,_powf$1848+2
  6351   00187E  C054  F10F         	movff	?___flsub+3,_powf$1848+3
  6352   001882  C124  F051         	movff	powf@z_l,___flsub@b
  6353   001886  C125  F052         	movff	powf@z_l+1,___flsub@b+1
  6354   00188A  C126  F053         	movff	powf@z_l+2,___flsub@b+2
  6355   00188E  C127  F054         	movff	powf@z_l+3,___flsub@b+3
  6356   001892  C10C  F055         	movff	_powf$1848,___flsub@a
  6357   001896  C10D  F056         	movff	_powf$1848+1,___flsub@a+1
  6358   00189A  C10E  F057         	movff	_powf$1848+2,___flsub@a+2
  6359   00189E  C10F  F058         	movff	_powf$1848+3,___flsub@a+3
  6360   0018A2  EC04  F036         	call	___flsub	;wreg free
  6361   0018A6  C051  F11C         	movff	?___flsub,powf@t2
  6362   0018AA  C052  F11D         	movff	?___flsub+1,powf@t2+1
  6363   0018AE  C053  F11E         	movff	?___flsub+2,powf@t2+2
  6364   0018B2  C054  F11F         	movff	?___flsub+3,powf@t2+3
  6365   0018B6                     l7638:
  6366   0018B6  C06C  F198         	movff	powf@y,powf@is
  6367   0018BA  C06D  F199         	movff	powf@y+1,powf@is+1
  6368   0018BE  C06E  F19A         	movff	powf@y+2,powf@is+2
  6369   0018C2  C06F  F19B         	movff	powf@y+3,powf@is+3
  6370   0018C6  0E00               	movlw	0
  6371   0018C8  0101               	movlb	1	; () banked
  6372   0018CA  1598               	andwf	powf@is& (0+255),w,b
  6373   0018CC  6F2C               	movwf	powf@y1& (0+255),b
  6374   0018CE  0EF0               	movlw	240
  6375   0018D0  1599               	andwf	(powf@is+1)& (0+255),w,b
  6376   0018D2  6F2D               	movwf	(powf@y1+1)& (0+255),b
  6377   0018D4  0EFF               	movlw	255
  6378   0018D6  159A               	andwf	(powf@is+2)& (0+255),w,b
  6379   0018D8  6F2E               	movwf	(powf@y1+2)& (0+255),b
  6380   0018DA  0EFF               	movlw	255
  6381   0018DC  159B               	andwf	(powf@is+3)& (0+255),w,b
  6382   0018DE  6F2F               	movwf	(powf@y1+3)& (0+255),b
  6383   0018E0                     
  6384                           ; BSR set to: 1
  6385   0018E0  C18C  F013         	movff	powf@t1,___flmul@a
  6386   0018E4  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  6387   0018E8  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  6388   0018EC  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  6389   0018F0  C12C  F055         	movff	powf@y1,___flsub@a
  6390   0018F4  C12D  F056         	movff	powf@y1+1,___flsub@a+1
  6391   0018F8  C12E  F057         	movff	powf@y1+2,___flsub@a+2
  6392   0018FC  C12F  F058         	movff	powf@y1+3,___flsub@a+3
  6393   001900  C06C  F051         	movff	powf@y,___flsub@b
  6394   001904  C06D  F052         	movff	powf@y+1,___flsub@b+1
  6395   001908  C06E  F053         	movff	powf@y+2,___flsub@b+2
  6396   00190C  C06F  F054         	movff	powf@y+3,___flsub@b+3
  6397   001910  EC04  F036         	call	___flsub	;wreg free
  6398   001914  C051  F00F         	movff	?___flsub,___flmul@b
  6399   001918  C052  F010         	movff	?___flsub+1,___flmul@b+1
  6400   00191C  C053  F011         	movff	?___flsub+2,___flmul@b+2
  6401   001920  C054  F012         	movff	?___flsub+3,___flmul@b+3
  6402   001924  ECC2  F01F         	call	___flmul	;wreg free
  6403   001928  C00F  F110         	movff	?___flmul,_powf$1849
  6404   00192C  C010  F111         	movff	?___flmul+1,_powf$1849+1
  6405   001930  C011  F112         	movff	?___flmul+2,_powf$1849+2
  6406   001934  C012  F113         	movff	?___flmul+3,_powf$1849+3
  6407   001938  C110  F041         	movff	_powf$1849,___fladd@b
  6408   00193C  C111  F042         	movff	_powf$1849+1,___fladd@b+1
  6409   001940  C112  F043         	movff	_powf$1849+2,___fladd@b+2
  6410   001944  C113  F044         	movff	_powf$1849+3,___fladd@b+3
  6411   001948  C11C  F013         	movff	powf@t2,___flmul@a
  6412   00194C  C11D  F014         	movff	powf@t2+1,___flmul@a+1
  6413   001950  C11E  F015         	movff	powf@t2+2,___flmul@a+2
  6414   001954  C11F  F016         	movff	powf@t2+3,___flmul@a+3
  6415   001958  C06C  F00F         	movff	powf@y,___flmul@b
  6416   00195C  C06D  F010         	movff	powf@y+1,___flmul@b+1
  6417   001960  C06E  F011         	movff	powf@y+2,___flmul@b+2
  6418   001964  C06F  F012         	movff	powf@y+3,___flmul@b+3
  6419   001968  ECC2  F01F         	call	___flmul	;wreg free
  6420   00196C  C00F  F045         	movff	?___flmul,___fladd@a
  6421   001970  C010  F046         	movff	?___flmul+1,___fladd@a+1
  6422   001974  C011  F047         	movff	?___flmul+2,___fladd@a+2
  6423   001978  C012  F048         	movff	?___flmul+3,___fladd@a+3
  6424   00197C  EC67  F01D         	call	___fladd	;wreg free
  6425   001980  C041  F16C         	movff	?___fladd,powf@p_l
  6426   001984  C042  F16D         	movff	?___fladd+1,powf@p_l+1
  6427   001988  C043  F16E         	movff	?___fladd+2,powf@p_l+2
  6428   00198C  C044  F16F         	movff	?___fladd+3,powf@p_l+3
  6429   001990  C12C  F00F         	movff	powf@y1,___flmul@b
  6430   001994  C12D  F010         	movff	powf@y1+1,___flmul@b+1
  6431   001998  C12E  F011         	movff	powf@y1+2,___flmul@b+2
  6432   00199C  C12F  F012         	movff	powf@y1+3,___flmul@b+3
  6433   0019A0  C18C  F013         	movff	powf@t1,___flmul@a
  6434   0019A4  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  6435   0019A8  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  6436   0019AC  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  6437   0019B0  ECC2  F01F         	call	___flmul	;wreg free
  6438   0019B4  C00F  F1A0         	movff	?___flmul,powf@p_h
  6439   0019B8  C010  F1A1         	movff	?___flmul+1,powf@p_h+1
  6440   0019BC  C011  F1A2         	movff	?___flmul+2,powf@p_h+2
  6441   0019C0  C012  F1A3         	movff	?___flmul+3,powf@p_h+3
  6442   0019C4  C1A0  F041         	movff	powf@p_h,___fladd@b
  6443   0019C8  C1A1  F042         	movff	powf@p_h+1,___fladd@b+1
  6444   0019CC  C1A2  F043         	movff	powf@p_h+2,___fladd@b+2
  6445   0019D0  C1A3  F044         	movff	powf@p_h+3,___fladd@b+3
  6446   0019D4  C16C  F045         	movff	powf@p_l,___fladd@a
  6447   0019D8  C16D  F046         	movff	powf@p_l+1,___fladd@a+1
  6448   0019DC  C16E  F047         	movff	powf@p_l+2,___fladd@a+2
  6449   0019E0  C16F  F048         	movff	powf@p_l+3,___fladd@a+3
  6450   0019E4  EC67  F01D         	call	___fladd	;wreg free
  6451   0019E8  C041  F1B4         	movff	?___fladd,powf@z
  6452   0019EC  C042  F1B5         	movff	?___fladd+1,powf@z+1
  6453   0019F0  C043  F1B6         	movff	?___fladd+2,powf@z+2
  6454   0019F4  C044  F1B7         	movff	?___fladd+3,powf@z+3
  6455   0019F8  C1B4  F1A8         	movff	powf@z,powf@j
  6456   0019FC  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  6457   001A00  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  6458   001A04  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  6459   001A08  0101               	movlb	1	; () banked
  6460   001A0A  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  6461   001A0C  EF14  F00D         	goto	u10011
  6462   001A10  05A8               	decf	powf@j& (0+255),w,b
  6463   001A12  0E00               	movlw	0
  6464   001A14  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  6465   001A16  0E00               	movlw	0
  6466   001A18  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  6467   001A1A  0E43               	movlw	67
  6468   001A1C  59AB               	subwfb	(powf@j+3)& (0+255),w,b
  6469   001A1E  A0D8               	btfss	status,0,c
  6470   001A20  EF14  F00D         	goto	u10011
  6471   001A24  EF16  F00D         	goto	u10010
  6472   001A28                     u10011:
  6473   001A28  EF18  F00D         	goto	l7660
  6474   001A2C                     u10010:
  6475   001A2C  EFA2  F003         	goto	l7460
  6476   001A30                     l7660:
  6477                           
  6478                           ; BSR set to: 1
  6479   001A30  0E43               	movlw	67
  6480   001A32  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6481   001A34  11A8               	iorwf	powf@j& (0+255),w,b
  6482   001A36  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6483   001A38  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  6484   001A3A  A4D8               	btfss	status,2,c
  6485   001A3C  EF22  F00D         	goto	u10021
  6486   001A40  EF24  F00D         	goto	u10020
  6487   001A44                     u10021:
  6488   001A44  EF64  F00D         	goto	l7670
  6489   001A48                     u10020:
  6490   001A48                     
  6491                           ; BSR set to: 1
  6492   001A48  C1A0  F055         	movff	powf@p_h,___flsub@a
  6493   001A4C  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  6494   001A50  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  6495   001A54  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  6496   001A58  C1B4  F051         	movff	powf@z,___flsub@b
  6497   001A5C  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  6498   001A60  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  6499   001A64  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  6500   001A68  EC04  F036         	call	___flsub	;wreg free
  6501   001A6C  C051  F060         	movff	?___flsub,___flge@ff1
  6502   001A70  C052  F061         	movff	?___flsub+1,___flge@ff1+1
  6503   001A74  C053  F062         	movff	?___flsub+2,___flge@ff1+2
  6504   001A78  C054  F063         	movff	?___flsub+3,___flge@ff1+3
  6505   001A7C  0E3C               	movlw	60
  6506   001A7E  6E45               	movwf	___fladd@a^0,c
  6507   001A80  0EAA               	movlw	170
  6508   001A82  6E46               	movwf	(___fladd@a+1)^0,c
  6509   001A84  0E38               	movlw	56
  6510   001A86  6E47               	movwf	(___fladd@a+2)^0,c
  6511   001A88  0E33               	movlw	51
  6512   001A8A  6E48               	movwf	(___fladd@a+3)^0,c
  6513   001A8C  C16C  F041         	movff	powf@p_l,___fladd@b
  6514   001A90  C16D  F042         	movff	powf@p_l+1,___fladd@b+1
  6515   001A94  C16E  F043         	movff	powf@p_l+2,___fladd@b+2
  6516   001A98  C16F  F044         	movff	powf@p_l+3,___fladd@b+3
  6517   001A9C  EC67  F01D         	call	___fladd	;wreg free
  6518   001AA0  C041  F064         	movff	?___fladd,___flge@ff2
  6519   001AA4  C042  F065         	movff	?___fladd+1,___flge@ff2+1
  6520   001AA8  C043  F066         	movff	?___fladd+2,___flge@ff2+2
  6521   001AAC  C044  F067         	movff	?___fladd+3,___flge@ff2+3
  6522   001AB0  EC57  F02F         	call	___flge	;wreg free
  6523   001AB4  0100               	movlb	0	; () banked
  6524   001AB6  B0D8               	btfsc	status,0,c
  6525   001AB8  EF60  F00D         	goto	u10031
  6526   001ABC  EF62  F00D         	goto	u10030
  6527   001AC0                     u10031:
  6528   001AC0  EFD7  F00D         	goto	l7686
  6529   001AC4                     u10030:
  6530   001AC4  EFA2  F003         	goto	l7460
  6531   001AC8                     l7670:
  6532                           
  6533                           ; BSR set to: 1
  6534   001AC8  0EFF               	movlw	255
  6535   001ACA  15A8               	andwf	powf@j& (0+255),w,b
  6536   001ACC  0100               	movlb	0	; () banked
  6537   001ACE  6F70               	movwf	??_powf& (0+255),b
  6538   001AD0  0EFF               	movlw	255
  6539   001AD2  0101               	movlb	1	; () banked
  6540   001AD4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6541   001AD6  0100               	movlb	0	; () banked
  6542   001AD8  6F71               	movwf	(??_powf+1)& (0+255),b
  6543   001ADA  0EFF               	movlw	255
  6544   001ADC  0101               	movlb	1	; () banked
  6545   001ADE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6546   001AE0  0100               	movlb	0	; () banked
  6547   001AE2  6F72               	movwf	(??_powf+2)& (0+255),b
  6548   001AE4  0E7F               	movlw	127
  6549   001AE6  0101               	movlb	1	; () banked
  6550   001AE8  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6551   001AEA  0100               	movlb	0	; () banked
  6552   001AEC  6F73               	movwf	(??_powf+3)& (0+255),b
  6553   001AEE  BF73               	btfsc	(??_powf+3)& (0+255),7,b
  6554   001AF0  EF86  F00D         	goto	u10041
  6555   001AF4  0570               	decf	??_powf& (0+255),w,b
  6556   001AF6  0E00               	movlw	0
  6557   001AF8  5971               	subwfb	(??_powf+1)& (0+255),w,b
  6558   001AFA  0E16               	movlw	22
  6559   001AFC  5972               	subwfb	(??_powf+2)& (0+255),w,b
  6560   001AFE  0E43               	movlw	67
  6561   001B00  5973               	subwfb	(??_powf+3)& (0+255),w,b
  6562   001B02  A0D8               	btfss	status,0,c
  6563   001B04  EF86  F00D         	goto	u10041
  6564   001B08  EF88  F00D         	goto	u10040
  6565   001B0C                     u10041:
  6566   001B0C  EF92  F00D         	goto	l7678
  6567   001B10                     u10040:
  6568   001B10                     
  6569                           ; BSR set to: 0
  6570   001B10  0E00               	movlw	0
  6571   001B12  6F68               	movwf	?_powf& (0+255),b
  6572   001B14  0E00               	movlw	0
  6573   001B16  6F69               	movwf	(?_powf+1)& (0+255),b
  6574   001B18  0E00               	movlw	0
  6575   001B1A  6F6A               	movwf	(?_powf+2)& (0+255),b
  6576   001B1C  0E00               	movlw	0
  6577   001B1E  6F6B               	movwf	(?_powf+3)& (0+255),b
  6578   001B20  EF63  F012         	goto	l1265
  6579   001B24                     l7678:
  6580                           
  6581                           ; BSR set to: 0
  6582   001B24  0E16               	movlw	22
  6583   001B26  0101               	movlb	1	; () banked
  6584   001B28  19AA               	xorwf	(powf@j+2)& (0+255),w,b
  6585   001B2A  E109               	bnz	u10051
  6586   001B2C  0EC3               	movlw	195
  6587   001B2E  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6588   001B30  11A8               	iorwf	powf@j& (0+255),w,b
  6589   001B32  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6590   001B34  A4D8               	btfss	status,2,c
  6591   001B36  EF9F  F00D         	goto	u10051
  6592   001B3A  EFA1  F00D         	goto	u10050
  6593   001B3E                     u10051:
  6594   001B3E  EFD7  F00D         	goto	l7686
  6595   001B42                     u10050:
  6596   001B42                     
  6597                           ; BSR set to: 1
  6598   001B42  C1A0  F055         	movff	powf@p_h,___flsub@a
  6599   001B46  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  6600   001B4A  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  6601   001B4E  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  6602   001B52  C1B4  F051         	movff	powf@z,___flsub@b
  6603   001B56  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  6604   001B5A  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  6605   001B5E  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  6606   001B62  EC04  F036         	call	___flsub	;wreg free
  6607   001B66  C051  F060         	movff	?___flsub,___flge@ff1
  6608   001B6A  C052  F061         	movff	?___flsub+1,___flge@ff1+1
  6609   001B6E  C053  F062         	movff	?___flsub+2,___flge@ff1+2
  6610   001B72  C054  F063         	movff	?___flsub+3,___flge@ff1+3
  6611   001B76  C16C  F064         	movff	powf@p_l,___flge@ff2
  6612   001B7A  C16D  F065         	movff	powf@p_l+1,___flge@ff2+1
  6613   001B7E  C16E  F066         	movff	powf@p_l+2,___flge@ff2+2
  6614   001B82  C16F  F067         	movff	powf@p_l+3,___flge@ff2+3
  6615   001B86  EC57  F02F         	call	___flge	;wreg free
  6616   001B8A  0100               	movlb	0	; () banked
  6617   001B8C  A0D8               	btfss	status,0,c
  6618   001B8E  EFCB  F00D         	goto	u10061
  6619   001B92  EFCD  F00D         	goto	u10060
  6620   001B96                     u10061:
  6621   001B96  EFD7  F00D         	goto	l7686
  6622   001B9A                     u10060:
  6623   001B9A                     
  6624                           ; BSR set to: 0
  6625   001B9A  0E00               	movlw	0
  6626   001B9C  6F68               	movwf	?_powf& (0+255),b
  6627   001B9E  0E00               	movlw	0
  6628   001BA0  6F69               	movwf	(?_powf+1)& (0+255),b
  6629   001BA2  0E00               	movlw	0
  6630   001BA4  6F6A               	movwf	(?_powf+2)& (0+255),b
  6631   001BA6  0E00               	movlw	0
  6632   001BA8  6F6B               	movwf	(?_powf+3)& (0+255),b
  6633   001BAA  EF63  F012         	goto	l1265
  6634   001BAE                     l7686:
  6635   001BAE  0EFF               	movlw	255
  6636   001BB0  0101               	movlb	1	; () banked
  6637   001BB2  15A8               	andwf	powf@j& (0+255),w,b
  6638   001BB4  6F28               	movwf	powf@i& (0+255),b
  6639   001BB6  0EFF               	movlw	255
  6640   001BB8  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6641   001BBA  6F29               	movwf	(powf@i+1)& (0+255),b
  6642   001BBC  0EFF               	movlw	255
  6643   001BBE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6644   001BC0  6F2A               	movwf	(powf@i+2)& (0+255),b
  6645   001BC2  0E7F               	movlw	127
  6646   001BC4  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6647   001BC6  6F2B               	movwf	(powf@i+3)& (0+255),b
  6648   001BC8  0E17               	movlw	23
  6649   001BCA  0100               	movlb	0	; () banked
  6650   001BCC  6F70               	movwf	??_powf& (0+255),b
  6651   001BCE  C128  F071         	movff	powf@i,??_powf+1
  6652   001BD2  C129  F072         	movff	powf@i+1,??_powf+2
  6653   001BD6  C12A  F073         	movff	powf@i+2,??_powf+3
  6654   001BDA  C12B  F074         	movff	powf@i+3,??_powf+4
  6655   001BDE                     u10075:
  6656   001BDE  6770               	tstfsz	??_powf& (0+255),b
  6657   001BE0  EFF4  F00D         	goto	u10076
  6658   001BE4  EFFC  F00D         	goto	u10077
  6659   001BE8                     u10076:
  6660   001BE8  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6661   001BEA  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6662   001BEC  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6663   001BEE  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6664   001BF0  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6665   001BF2  2F70               	decfsz	??_powf& (0+255),f,b
  6666   001BF4  EFEF  F00D         	goto	u10075
  6667   001BF8                     u10077:
  6668   001BF8  0E81               	movlw	129
  6669   001BFA  0100               	movlb	0	; () banked
  6670   001BFC  2571               	addwf	(??_powf+1)& (0+255),w,b
  6671   001BFE  0101               	movlb	1	; () banked
  6672   001C00  6FA4               	movwf	powf@k& (0+255),b
  6673   001C02  0EFF               	movlw	255
  6674   001C04  0100               	movlb	0	; () banked
  6675   001C06  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6676   001C08  0101               	movlb	1	; () banked
  6677   001C0A  6FA5               	movwf	(powf@k+1)& (0+255),b
  6678   001C0C  0EFF               	movlw	255
  6679   001C0E  0100               	movlb	0	; () banked
  6680   001C10  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6681   001C12  0101               	movlb	1	; () banked
  6682   001C14  6FA6               	movwf	(powf@k+2)& (0+255),b
  6683   001C16  0EFF               	movlw	255
  6684   001C18  0100               	movlb	0	; () banked
  6685   001C1A  2174               	addwfc	(??_powf+4)& (0+255),w,b
  6686   001C1C  0101               	movlb	1	; () banked
  6687   001C1E  6FA7               	movwf	(powf@k+3)& (0+255),b
  6688   001C20                     
  6689                           ; BSR set to: 1
  6690   001C20  0E00               	movlw	0
  6691   001C22  6F88               	movwf	powf@n& (0+255),b
  6692   001C24  0E00               	movlw	0
  6693   001C26  6F89               	movwf	(powf@n+1)& (0+255),b
  6694   001C28  0E00               	movlw	0
  6695   001C2A  6F8A               	movwf	(powf@n+2)& (0+255),b
  6696   001C2C  0E00               	movlw	0
  6697   001C2E  6F8B               	movwf	(powf@n+3)& (0+255),b
  6698   001C30                     
  6699                           ; BSR set to: 1
  6700   001C30  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
  6701   001C32  EF27  F00E         	goto	u10081
  6702   001C36  0528               	decf	powf@i& (0+255),w,b
  6703   001C38  0E00               	movlw	0
  6704   001C3A  5929               	subwfb	(powf@i+1)& (0+255),w,b
  6705   001C3C  0E00               	movlw	0
  6706   001C3E  592A               	subwfb	(powf@i+2)& (0+255),w,b
  6707   001C40  0E3F               	movlw	63
  6708   001C42  592B               	subwfb	(powf@i+3)& (0+255),w,b
  6709   001C44  A0D8               	btfss	status,0,c
  6710   001C46  EF27  F00E         	goto	u10081
  6711   001C4A  EF29  F00E         	goto	u10080
  6712   001C4E                     u10081:
  6713   001C4E  EF25  F00F         	goto	l7698
  6714   001C52                     u10080:
  6715   001C52                     
  6716                           ; BSR set to: 1
  6717   001C52  C1A4  F070         	movff	powf@k,??_powf
  6718   001C56  0E01               	movlw	1
  6719   001C58  0100               	movlb	0	; () banked
  6720   001C5A  2770               	addwf	??_powf& (0+255),f,b
  6721   001C5C  0E00               	movlw	0
  6722   001C5E  6F71               	movwf	(??_powf+1)& (0+255),b
  6723   001C60  0E00               	movlw	0
  6724   001C62  6F72               	movwf	(??_powf+2)& (0+255),b
  6725   001C64  0E80               	movlw	128
  6726   001C66  6F73               	movwf	(??_powf+3)& (0+255),b
  6727   001C68  0E00               	movlw	0
  6728   001C6A  6F74               	movwf	(??_powf+4)& (0+255),b
  6729   001C6C                     u10095:
  6730   001C6C  6770               	tstfsz	??_powf& (0+255),b
  6731   001C6E  EF3B  F00E         	goto	u10096
  6732   001C72  EF43  F00E         	goto	u10097
  6733   001C76                     u10096:
  6734   001C76  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6735   001C78  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6736   001C7A  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6737   001C7C  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6738   001C7E  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6739   001C80  2F70               	decfsz	??_powf& (0+255),f,b
  6740   001C82  EF36  F00E         	goto	u10095
  6741   001C86                     u10097:
  6742   001C86  0101               	movlb	1	; () banked
  6743   001C88  51A8               	movf	powf@j& (0+255),w,b
  6744   001C8A  0100               	movlb	0	; () banked
  6745   001C8C  2571               	addwf	(??_powf+1)& (0+255),w,b
  6746   001C8E  0101               	movlb	1	; () banked
  6747   001C90  6F88               	movwf	powf@n& (0+255),b
  6748   001C92  51A9               	movf	(powf@j+1)& (0+255),w,b
  6749   001C94  0100               	movlb	0	; () banked
  6750   001C96  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6751   001C98  0101               	movlb	1	; () banked
  6752   001C9A  6F89               	movwf	(powf@n+1)& (0+255),b
  6753   001C9C  51AA               	movf	(powf@j+2)& (0+255),w,b
  6754   001C9E  0100               	movlb	0	; () banked
  6755   001CA0  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6756   001CA2  0101               	movlb	1	; () banked
  6757   001CA4  6F8A               	movwf	(powf@n+2)& (0+255),b
  6758   001CA6  51AB               	movf	(powf@j+3)& (0+255),w,b
  6759   001CA8  0100               	movlb	0	; () banked
  6760   001CAA  2174               	addwfc	(??_powf+4)& (0+255),w,b
  6761   001CAC  0101               	movlb	1	; () banked
  6762   001CAE  6F8B               	movwf	(powf@n+3)& (0+255),b
  6763   001CB0  0E81               	movlw	129
  6764   001CB2  0100               	movlb	0	; () banked
  6765   001CB4  6F70               	movwf	??_powf& (0+255),b
  6766   001CB6  0EFF               	movlw	255
  6767   001CB8  6F71               	movwf	(??_powf+1)& (0+255),b
  6768   001CBA  0EFF               	movlw	255
  6769   001CBC  6F72               	movwf	(??_powf+2)& (0+255),b
  6770   001CBE  0EFF               	movlw	255
  6771   001CC0  6F73               	movwf	(??_powf+3)& (0+255),b
  6772   001CC2  0E17               	movlw	23
  6773   001CC4  6F74               	movwf	(??_powf+4)& (0+255),b
  6774   001CC6  C188  F075         	movff	powf@n,??_powf+5
  6775   001CCA  C189  F076         	movff	powf@n+1,??_powf+6
  6776   001CCE  C18A  F077         	movff	powf@n+2,??_powf+7
  6777   001CD2  C18B  F078         	movff	powf@n+3,??_powf+8
  6778   001CD6                     u10105:
  6779   001CD6  6774               	tstfsz	(??_powf+4)& (0+255),b
  6780   001CD8  EF70  F00E         	goto	u10106
  6781   001CDC  EF78  F00E         	goto	u10107
  6782   001CE0                     u10106:
  6783   001CE0  3578               	rlcf	(??_powf+8)& (0+255),w,b
  6784   001CE2  3378               	rrcf	(??_powf+8)& (0+255),f,b
  6785   001CE4  3377               	rrcf	(??_powf+7)& (0+255),f,b
  6786   001CE6  3376               	rrcf	(??_powf+6)& (0+255),f,b
  6787   001CE8  3375               	rrcf	(??_powf+5)& (0+255),f,b
  6788   001CEA  2F74               	decfsz	(??_powf+4)& (0+255),f,b
  6789   001CEC  EF6B  F00E         	goto	u10105
  6790   001CF0                     u10107:
  6791   001CF0  0100               	movlb	0	; () banked
  6792   001CF2  5175               	movf	(??_powf+5)& (0+255),w,b
  6793   001CF4  2570               	addwf	??_powf& (0+255),w,b
  6794   001CF6  0101               	movlb	1	; () banked
  6795   001CF8  6FA4               	movwf	powf@k& (0+255),b
  6796   001CFA  0E00               	movlw	0
  6797   001CFC  0100               	movlb	0	; () banked
  6798   001CFE  2171               	addwfc	(??_powf+1)& (0+255),w,b
  6799   001D00  0101               	movlb	1	; () banked
  6800   001D02  6FA5               	movwf	(powf@k+1)& (0+255),b
  6801   001D04  0E00               	movlw	0
  6802   001D06  0100               	movlb	0	; () banked
  6803   001D08  2172               	addwfc	(??_powf+2)& (0+255),w,b
  6804   001D0A  0101               	movlb	1	; () banked
  6805   001D0C  6FA6               	movwf	(powf@k+2)& (0+255),b
  6806   001D0E  0E00               	movlw	0
  6807   001D10  0100               	movlb	0	; () banked
  6808   001D12  2173               	addwfc	(??_powf+3)& (0+255),w,b
  6809   001D14  0101               	movlb	1	; () banked
  6810   001D16  6FA7               	movwf	(powf@k+3)& (0+255),b
  6811   001D18  C1A4  F070         	movff	powf@k,??_powf
  6812   001D1C  0EFF               	movlw	255
  6813   001D1E  0100               	movlb	0	; () banked
  6814   001D20  6F71               	movwf	(??_powf+1)& (0+255),b
  6815   001D22  0EFF               	movlw	255
  6816   001D24  6F72               	movwf	(??_powf+2)& (0+255),b
  6817   001D26  0E7F               	movlw	127
  6818   001D28  6F73               	movwf	(??_powf+3)& (0+255),b
  6819   001D2A  0E00               	movlw	0
  6820   001D2C  6F74               	movwf	(??_powf+4)& (0+255),b
  6821   001D2E                     u10115:
  6822   001D2E  6770               	tstfsz	??_powf& (0+255),b
  6823   001D30  EF9C  F00E         	goto	u10116
  6824   001D34  EFA4  F00E         	goto	u10117
  6825   001D38                     u10116:
  6826   001D38  3574               	rlcf	(??_powf+4)& (0+255),w,b
  6827   001D3A  3374               	rrcf	(??_powf+4)& (0+255),f,b
  6828   001D3C  3373               	rrcf	(??_powf+3)& (0+255),f,b
  6829   001D3E  3372               	rrcf	(??_powf+2)& (0+255),f,b
  6830   001D40  3371               	rrcf	(??_powf+1)& (0+255),f,b
  6831   001D42  2F70               	decfsz	??_powf& (0+255),f,b
  6832   001D44  EF97  F00E         	goto	u10115
  6833   001D48                     u10117:
  6834   001D48  0100               	movlb	0	; () banked
  6835   001D4A  1D71               	comf	(??_powf+1)& (0+255),w,b
  6836   001D4C  6F75               	movwf	(??_powf+5)& (0+255),b
  6837   001D4E  1D72               	comf	(??_powf+2)& (0+255),w,b
  6838   001D50  6F76               	movwf	(??_powf+6)& (0+255),b
  6839   001D52  1D73               	comf	(??_powf+3)& (0+255),w,b
  6840   001D54  6F77               	movwf	(??_powf+7)& (0+255),b
  6841   001D56  1D74               	comf	(??_powf+4)& (0+255),w,b
  6842   001D58  6F78               	movwf	(??_powf+8)& (0+255),b
  6843   001D5A  0101               	movlb	1	; () banked
  6844   001D5C  5188               	movf	powf@n& (0+255),w,b
  6845   001D5E  0100               	movlb	0	; () banked
  6846   001D60  1575               	andwf	(??_powf+5)& (0+255),w,b
  6847   001D62  0101               	movlb	1	; () banked
  6848   001D64  6FB0               	movwf	powf@t& (0+255),b
  6849   001D66  5189               	movf	(powf@n+1)& (0+255),w,b
  6850   001D68  0100               	movlb	0	; () banked
  6851   001D6A  1576               	andwf	(??_powf+6)& (0+255),w,b
  6852   001D6C  0101               	movlb	1	; () banked
  6853   001D6E  6FB1               	movwf	(powf@t+1)& (0+255),b
  6854   001D70  518A               	movf	(powf@n+2)& (0+255),w,b
  6855   001D72  0100               	movlb	0	; () banked
  6856   001D74  1577               	andwf	(??_powf+7)& (0+255),w,b
  6857   001D76  0101               	movlb	1	; () banked
  6858   001D78  6FB2               	movwf	(powf@t+2)& (0+255),b
  6859   001D7A  518B               	movf	(powf@n+3)& (0+255),w,b
  6860   001D7C  0100               	movlb	0	; () banked
  6861   001D7E  1578               	andwf	(??_powf+8)& (0+255),w,b
  6862   001D80  0101               	movlb	1	; () banked
  6863   001D82  6FB3               	movwf	(powf@t+3)& (0+255),b
  6864   001D84  51A4               	movf	powf@k& (0+255),w,b
  6865   001D86  0817               	sublw	23
  6866   001D88  0100               	movlb	0	; () banked
  6867   001D8A  6F70               	movwf	??_powf& (0+255),b
  6868   001D8C  0EFF               	movlw	255
  6869   001D8E  0101               	movlb	1	; () banked
  6870   001D90  1588               	andwf	powf@n& (0+255),w,b
  6871   001D92  0100               	movlb	0	; () banked
  6872   001D94  6F71               	movwf	(??_powf+1)& (0+255),b
  6873   001D96  0EFF               	movlw	255
  6874   001D98  0101               	movlb	1	; () banked
  6875   001D9A  1589               	andwf	(powf@n+1)& (0+255),w,b
  6876   001D9C  0100               	movlb	0	; () banked
  6877   001D9E  6F72               	movwf	(??_powf+2)& (0+255),b
  6878   001DA0  0E7F               	movlw	127
  6879   001DA2  0101               	movlb	1	; () banked
  6880   001DA4  158A               	andwf	(powf@n+2)& (0+255),w,b
  6881   001DA6  0100               	movlb	0	; () banked
  6882   001DA8  6F73               	movwf	(??_powf+3)& (0+255),b
  6883   001DAA  0E00               	movlw	0
  6884   001DAC  0101               	movlb	1	; () banked
  6885   001DAE  158B               	andwf	(powf@n+3)& (0+255),w,b
  6886   001DB0  0100               	movlb	0	; () banked
  6887   001DB2  6F74               	movwf	(??_powf+4)& (0+255),b
  6888   001DB4  0E00               	movlw	0
  6889   001DB6  1171               	iorwf	(??_powf+1)& (0+255),w,b
  6890   001DB8  6F75               	movwf	(??_powf+5)& (0+255),b
  6891   001DBA  0E00               	movlw	0
  6892   001DBC  1172               	iorwf	(??_powf+2)& (0+255),w,b
  6893   001DBE  6F76               	movwf	(??_powf+6)& (0+255),b
  6894   001DC0  0E80               	movlw	128
  6895   001DC2  1173               	iorwf	(??_powf+3)& (0+255),w,b
  6896   001DC4  6F77               	movwf	(??_powf+7)& (0+255),b
  6897   001DC6  0E00               	movlw	0
  6898   001DC8  1174               	iorwf	(??_powf+4)& (0+255),w,b
  6899   001DCA  6F78               	movwf	(??_powf+8)& (0+255),b
  6900   001DCC                     u10125:
  6901   001DCC  6770               	tstfsz	??_powf& (0+255),b
  6902   001DCE  EFEB  F00E         	goto	u10126
  6903   001DD2  EFF3  F00E         	goto	u10127
  6904   001DD6                     u10126:
  6905   001DD6  3578               	rlcf	(??_powf+8)& (0+255),w,b
  6906   001DD8  3378               	rrcf	(??_powf+8)& (0+255),f,b
  6907   001DDA  3377               	rrcf	(??_powf+7)& (0+255),f,b
  6908   001DDC  3376               	rrcf	(??_powf+6)& (0+255),f,b
  6909   001DDE  3375               	rrcf	(??_powf+5)& (0+255),f,b
  6910   001DE0  2F70               	decfsz	??_powf& (0+255),f,b
  6911   001DE2  EFE6  F00E         	goto	u10125
  6912   001DE6                     u10127:
  6913   001DE6  C075  F188         	movff	??_powf+5,powf@n
  6914   001DEA  C076  F189         	movff	??_powf+6,powf@n+1
  6915   001DEE  C077  F18A         	movff	??_powf+7,powf@n+2
  6916   001DF2  C078  F18B         	movff	??_powf+8,powf@n+3
  6917   001DF6  0101               	movlb	1	; () banked
  6918   001DF8  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  6919   001DFA  EF03  F00F         	goto	u10130
  6920   001DFE  EF01  F00F         	goto	u10131
  6921   001E02                     u10131:
  6922   001E02  EF0B  F00F         	goto	l7696
  6923   001E06                     u10130:
  6924   001E06                     
  6925                           ; BSR set to: 1
  6926   001E06  1F8B               	comf	(powf@n+3)& (0+255),f,b
  6927   001E08  1F8A               	comf	(powf@n+2)& (0+255),f,b
  6928   001E0A  1F89               	comf	(powf@n+1)& (0+255),f,b
  6929   001E0C  6D88               	negf	powf@n& (0+255),b
  6930   001E0E  0E00               	movlw	0
  6931   001E10  2389               	addwfc	(powf@n+1)& (0+255),f,b
  6932   001E12  238A               	addwfc	(powf@n+2)& (0+255),f,b
  6933   001E14  238B               	addwfc	(powf@n+3)& (0+255),f,b
  6934   001E16                     l7696:
  6935                           
  6936                           ; BSR set to: 1
  6937   001E16  C1A0  F051         	movff	powf@p_h,___flsub@b
  6938   001E1A  C1A1  F052         	movff	powf@p_h+1,___flsub@b+1
  6939   001E1E  C1A2  F053         	movff	powf@p_h+2,___flsub@b+2
  6940   001E22  C1A3  F054         	movff	powf@p_h+3,___flsub@b+3
  6941   001E26  C1B0  F055         	movff	powf@t,___flsub@a
  6942   001E2A  C1B1  F056         	movff	powf@t+1,___flsub@a+1
  6943   001E2E  C1B2  F057         	movff	powf@t+2,___flsub@a+2
  6944   001E32  C1B3  F058         	movff	powf@t+3,___flsub@a+3
  6945   001E36  EC04  F036         	call	___flsub	;wreg free
  6946   001E3A  C051  F1A0         	movff	?___flsub,powf@p_h
  6947   001E3E  C052  F1A1         	movff	?___flsub+1,powf@p_h+1
  6948   001E42  C053  F1A2         	movff	?___flsub+2,powf@p_h+2
  6949   001E46  C054  F1A3         	movff	?___flsub+3,powf@p_h+3
  6950   001E4A                     l7698:
  6951   001E4A  C1A0  F041         	movff	powf@p_h,___fladd@b
  6952   001E4E  C1A1  F042         	movff	powf@p_h+1,___fladd@b+1
  6953   001E52  C1A2  F043         	movff	powf@p_h+2,___fladd@b+2
  6954   001E56  C1A3  F044         	movff	powf@p_h+3,___fladd@b+3
  6955   001E5A  C16C  F045         	movff	powf@p_l,___fladd@a
  6956   001E5E  C16D  F046         	movff	powf@p_l+1,___fladd@a+1
  6957   001E62  C16E  F047         	movff	powf@p_l+2,___fladd@a+2
  6958   001E66  C16F  F048         	movff	powf@p_l+3,___fladd@a+3
  6959   001E6A  EC67  F01D         	call	___fladd	;wreg free
  6960   001E6E  C041  F1B0         	movff	?___fladd,powf@t
  6961   001E72  C042  F1B1         	movff	?___fladd+1,powf@t+1
  6962   001E76  C043  F1B2         	movff	?___fladd+2,powf@t+2
  6963   001E7A  C044  F1B3         	movff	?___fladd+3,powf@t+3
  6964   001E7E  C1B0  F198         	movff	powf@t,powf@is
  6965   001E82  C1B1  F199         	movff	powf@t+1,powf@is+1
  6966   001E86  C1B2  F19A         	movff	powf@t+2,powf@is+2
  6967   001E8A  C1B3  F19B         	movff	powf@t+3,powf@is+3
  6968   001E8E  0E00               	movlw	0
  6969   001E90  0101               	movlb	1	; () banked
  6970   001E92  1598               	andwf	powf@is& (0+255),w,b
  6971   001E94  6FB0               	movwf	powf@t& (0+255),b
  6972   001E96  0E80               	movlw	128
  6973   001E98  1599               	andwf	(powf@is+1)& (0+255),w,b
  6974   001E9A  6FB1               	movwf	(powf@t+1)& (0+255),b
  6975   001E9C  0EFF               	movlw	255
  6976   001E9E  159A               	andwf	(powf@is+2)& (0+255),w,b
  6977   001EA0  6FB2               	movwf	(powf@t+2)& (0+255),b
  6978   001EA2  0EFF               	movlw	255
  6979   001EA4  159B               	andwf	(powf@is+3)& (0+255),w,b
  6980   001EA6  6FB3               	movwf	(powf@t+3)& (0+255),b
  6981   001EA8                     
  6982                           ; BSR set to: 1
  6983   001EA8  C1B0  F00F         	movff	powf@t,___flmul@b
  6984   001EAC  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  6985   001EB0  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  6986   001EB4  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  6987   001EB8  0E00               	movlw	0
  6988   001EBA  6E13               	movwf	___flmul@a^0,c
  6989   001EBC  0E72               	movlw	114
  6990   001EBE  6E14               	movwf	(___flmul@a+1)^0,c
  6991   001EC0  0E31               	movlw	49
  6992   001EC2  6E15               	movwf	(___flmul@a+2)^0,c
  6993   001EC4  0E3F               	movlw	63
  6994   001EC6  6E16               	movwf	(___flmul@a+3)^0,c
  6995   001EC8  ECC2  F01F         	call	___flmul	;wreg free
  6996   001ECC  C00F  F17C         	movff	?___flmul,powf@u
  6997   001ED0  C010  F17D         	movff	?___flmul+1,powf@u+1
  6998   001ED4  C011  F17E         	movff	?___flmul+2,powf@u+2
  6999   001ED8  C012  F17F         	movff	?___flmul+3,powf@u+3
  7000   001EDC  C1A0  F055         	movff	powf@p_h,___flsub@a
  7001   001EE0  C1A1  F056         	movff	powf@p_h+1,___flsub@a+1
  7002   001EE4  C1A2  F057         	movff	powf@p_h+2,___flsub@a+2
  7003   001EE8  C1A3  F058         	movff	powf@p_h+3,___flsub@a+3
  7004   001EEC  C1B0  F051         	movff	powf@t,___flsub@b
  7005   001EF0  C1B1  F052         	movff	powf@t+1,___flsub@b+1
  7006   001EF4  C1B2  F053         	movff	powf@t+2,___flsub@b+2
  7007   001EF8  C1B3  F054         	movff	powf@t+3,___flsub@b+3
  7008   001EFC  EC04  F036         	call	___flsub	;wreg free
  7009   001F00  C051  F19C         	movff	?___flsub,_powf$1840
  7010   001F04  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  7011   001F08  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  7012   001F0C  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  7013   001F10  0E18               	movlw	24
  7014   001F12  6E13               	movwf	___flmul@a^0,c
  7015   001F14  0E72               	movlw	114
  7016   001F16  6E14               	movwf	(___flmul@a+1)^0,c
  7017   001F18  0E31               	movlw	49
  7018   001F1A  6E15               	movwf	(___flmul@a+2)^0,c
  7019   001F1C  0E3F               	movlw	63
  7020   001F1E  6E16               	movwf	(___flmul@a+3)^0,c
  7021   001F20  C19C  F055         	movff	_powf$1840,___flsub@a
  7022   001F24  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  7023   001F28  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  7024   001F2C  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  7025   001F30  C16C  F051         	movff	powf@p_l,___flsub@b
  7026   001F34  C16D  F052         	movff	powf@p_l+1,___flsub@b+1
  7027   001F38  C16E  F053         	movff	powf@p_l+2,___flsub@b+2
  7028   001F3C  C16F  F054         	movff	powf@p_l+3,___flsub@b+3
  7029   001F40  EC04  F036         	call	___flsub	;wreg free
  7030   001F44  C051  F00F         	movff	?___flsub,___flmul@b
  7031   001F48  C052  F010         	movff	?___flsub+1,___flmul@b+1
  7032   001F4C  C053  F011         	movff	?___flsub+2,___flmul@b+2
  7033   001F50  C054  F012         	movff	?___flsub+3,___flmul@b+3
  7034   001F54  ECC2  F01F         	call	___flmul	;wreg free
  7035   001F58  C00F  F114         	movff	?___flmul,_powf$1850
  7036   001F5C  C010  F115         	movff	?___flmul+1,_powf$1850+1
  7037   001F60  C011  F116         	movff	?___flmul+2,_powf$1850+2
  7038   001F64  C012  F117         	movff	?___flmul+3,_powf$1850+3
  7039   001F68  C114  F041         	movff	_powf$1850,___fladd@b
  7040   001F6C  C115  F042         	movff	_powf$1850+1,___fladd@b+1
  7041   001F70  C116  F043         	movff	_powf$1850+2,___fladd@b+2
  7042   001F74  C117  F044         	movff	_powf$1850+3,___fladd@b+3
  7043   001F78  0E8C               	movlw	140
  7044   001F7A  6E13               	movwf	___flmul@a^0,c
  7045   001F7C  0EBE               	movlw	190
  7046   001F7E  6E14               	movwf	(___flmul@a+1)^0,c
  7047   001F80  0EBF               	movlw	191
  7048   001F82  6E15               	movwf	(___flmul@a+2)^0,c
  7049   001F84  0E35               	movlw	53
  7050   001F86  6E16               	movwf	(___flmul@a+3)^0,c
  7051   001F88  C1B0  F00F         	movff	powf@t,___flmul@b
  7052   001F8C  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7053   001F90  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7054   001F94  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7055   001F98  ECC2  F01F         	call	___flmul	;wreg free
  7056   001F9C  C00F  F045         	movff	?___flmul,___fladd@a
  7057   001FA0  C010  F046         	movff	?___flmul+1,___fladd@a+1
  7058   001FA4  C011  F047         	movff	?___flmul+2,___fladd@a+2
  7059   001FA8  C012  F048         	movff	?___flmul+3,___fladd@a+3
  7060   001FAC  EC67  F01D         	call	___fladd	;wreg free
  7061   001FB0  C041  F180         	movff	?___fladd,powf@v
  7062   001FB4  C042  F181         	movff	?___fladd+1,powf@v+1
  7063   001FB8  C043  F182         	movff	?___fladd+2,powf@v+2
  7064   001FBC  C044  F183         	movff	?___fladd+3,powf@v+3
  7065   001FC0  C17C  F041         	movff	powf@u,___fladd@b
  7066   001FC4  C17D  F042         	movff	powf@u+1,___fladd@b+1
  7067   001FC8  C17E  F043         	movff	powf@u+2,___fladd@b+2
  7068   001FCC  C17F  F044         	movff	powf@u+3,___fladd@b+3
  7069   001FD0  C180  F045         	movff	powf@v,___fladd@a
  7070   001FD4  C181  F046         	movff	powf@v+1,___fladd@a+1
  7071   001FD8  C182  F047         	movff	powf@v+2,___fladd@a+2
  7072   001FDC  C183  F048         	movff	powf@v+3,___fladd@a+3
  7073   001FE0  EC67  F01D         	call	___fladd	;wreg free
  7074   001FE4  C041  F1B4         	movff	?___fladd,powf@z
  7075   001FE8  C042  F1B5         	movff	?___fladd+1,powf@z+1
  7076   001FEC  C043  F1B6         	movff	?___fladd+2,powf@z+2
  7077   001FF0  C044  F1B7         	movff	?___fladd+3,powf@z+3
  7078   001FF4  C17C  F055         	movff	powf@u,___flsub@a
  7079   001FF8  C17D  F056         	movff	powf@u+1,___flsub@a+1
  7080   001FFC  C17E  F057         	movff	powf@u+2,___flsub@a+2
  7081   002000  C17F  F058         	movff	powf@u+3,___flsub@a+3
  7082   002004  C1B4  F051         	movff	powf@z,___flsub@b
  7083   002008  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  7084   00200C  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  7085   002010  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  7086   002014  EC04  F036         	call	___flsub	;wreg free
  7087   002018  C051  F19C         	movff	?___flsub,_powf$1840
  7088   00201C  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  7089   002020  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  7090   002024  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  7091   002028  C180  F051         	movff	powf@v,___flsub@b
  7092   00202C  C181  F052         	movff	powf@v+1,___flsub@b+1
  7093   002030  C182  F053         	movff	powf@v+2,___flsub@b+2
  7094   002034  C183  F054         	movff	powf@v+3,___flsub@b+3
  7095   002038  C19C  F055         	movff	_powf$1840,___flsub@a
  7096   00203C  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  7097   002040  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  7098   002044  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  7099   002048  EC04  F036         	call	___flsub	;wreg free
  7100   00204C  C051  F144         	movff	?___flsub,powf@w
  7101   002050  C052  F145         	movff	?___flsub+1,powf@w+1
  7102   002054  C053  F146         	movff	?___flsub+2,powf@w+2
  7103   002058  C054  F147         	movff	?___flsub+3,powf@w+3
  7104   00205C  C1B4  F00F         	movff	powf@z,___flmul@b
  7105   002060  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7106   002064  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7107   002068  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7108   00206C  C1B4  F013         	movff	powf@z,___flmul@a
  7109   002070  C1B5  F014         	movff	powf@z+1,___flmul@a+1
  7110   002074  C1B6  F015         	movff	powf@z+2,___flmul@a+2
  7111   002078  C1B7  F016         	movff	powf@z+3,___flmul@a+3
  7112   00207C  ECC2  F01F         	call	___flmul	;wreg free
  7113   002080  C00F  F1B0         	movff	?___flmul,powf@t
  7114   002084  C010  F1B1         	movff	?___flmul+1,powf@t+1
  7115   002088  C011  F1B2         	movff	?___flmul+2,powf@t+2
  7116   00208C  C012  F1B3         	movff	?___flmul+3,powf@t+3
  7117   002090  0E0E               	movlw	14
  7118   002092  6E45               	movwf	___fladd@a^0,c
  7119   002094  0EEA               	movlw	234
  7120   002096  6E46               	movwf	(___fladd@a+1)^0,c
  7121   002098  0EDD               	movlw	221
  7122   00209A  6E47               	movwf	(___fladd@a+2)^0,c
  7123   00209C  0EB5               	movlw	181
  7124   00209E  6E48               	movwf	(___fladd@a+3)^0,c
  7125   0020A0  0E4C               	movlw	76
  7126   0020A2  6E13               	movwf	___flmul@a^0,c
  7127   0020A4  0EBB               	movlw	187
  7128   0020A6  6E14               	movwf	(___flmul@a+1)^0,c
  7129   0020A8  0E31               	movlw	49
  7130   0020AA  6E15               	movwf	(___flmul@a+2)^0,c
  7131   0020AC  0E33               	movlw	51
  7132   0020AE  6E16               	movwf	(___flmul@a+3)^0,c
  7133   0020B0  C1B0  F00F         	movff	powf@t,___flmul@b
  7134   0020B4  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  7135   0020B8  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  7136   0020BC  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  7137   0020C0  ECC2  F01F         	call	___flmul	;wreg free
  7138   0020C4  C00F  F041         	movff	?___flmul,___fladd@b
  7139   0020C8  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7140   0020CC  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7141   0020D0  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7142   0020D4  EC67  F01D         	call	___fladd	;wreg free
  7143   0020D8  C041  F148         	movff	?___fladd,_powf$1837
  7144   0020DC  C042  F149         	movff	?___fladd+1,_powf$1837+1
  7145   0020E0  C043  F14A         	movff	?___fladd+2,_powf$1837+2
  7146   0020E4  C044  F14B         	movff	?___fladd+3,_powf$1837+3
  7147   0020E8  0E55               	movlw	85
  7148   0020EA  6E45               	movwf	___fladd@a^0,c
  7149   0020EC  0EB3               	movlw	179
  7150   0020EE  6E46               	movwf	(___fladd@a+1)^0,c
  7151   0020F0  0E8A               	movlw	138
  7152   0020F2  6E47               	movwf	(___fladd@a+2)^0,c
  7153   0020F4  0E38               	movlw	56
  7154   0020F6  6E48               	movwf	(___fladd@a+3)^0,c
  7155   0020F8  C1B0  F013         	movff	powf@t,___flmul@a
  7156   0020FC  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7157   002100  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7158   002104  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7159   002108  C148  F00F         	movff	_powf$1837,___flmul@b
  7160   00210C  C149  F010         	movff	_powf$1837+1,___flmul@b+1
  7161   002110  C14A  F011         	movff	_powf$1837+2,___flmul@b+2
  7162   002114  C14B  F012         	movff	_powf$1837+3,___flmul@b+3
  7163   002118  ECC2  F01F         	call	___flmul	;wreg free
  7164   00211C  C00F  F041         	movff	?___flmul,___fladd@b
  7165   002120  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7166   002124  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7167   002128  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7168   00212C  EC67  F01D         	call	___fladd	;wreg free
  7169   002130  C041  F158         	movff	?___fladd,_powf$1838
  7170   002134  C042  F159         	movff	?___fladd+1,_powf$1838+1
  7171   002138  C043  F15A         	movff	?___fladd+2,_powf$1838+2
  7172   00213C  C044  F15B         	movff	?___fladd+3,_powf$1838+3
  7173   002140  0E61               	movlw	97
  7174   002142  6E45               	movwf	___fladd@a^0,c
  7175   002144  0E0B               	movlw	11
  7176   002146  6E46               	movwf	(___fladd@a+1)^0,c
  7177   002148  0E36               	movlw	54
  7178   00214A  6E47               	movwf	(___fladd@a+2)^0,c
  7179   00214C  0EBB               	movlw	187
  7180   00214E  6E48               	movwf	(___fladd@a+3)^0,c
  7181   002150  C1B0  F013         	movff	powf@t,___flmul@a
  7182   002154  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7183   002158  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7184   00215C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7185   002160  C158  F00F         	movff	_powf$1838,___flmul@b
  7186   002164  C159  F010         	movff	_powf$1838+1,___flmul@b+1
  7187   002168  C15A  F011         	movff	_powf$1838+2,___flmul@b+2
  7188   00216C  C15B  F012         	movff	_powf$1838+3,___flmul@b+3
  7189   002170  ECC2  F01F         	call	___flmul	;wreg free
  7190   002174  C00F  F041         	movff	?___flmul,___fladd@b
  7191   002178  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7192   00217C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7193   002180  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7194   002184  EC67  F01D         	call	___fladd	;wreg free
  7195   002188  C041  F14C         	movff	?___fladd,_powf$1839
  7196   00218C  C042  F14D         	movff	?___fladd+1,_powf$1839+1
  7197   002190  C043  F14E         	movff	?___fladd+2,_powf$1839+2
  7198   002194  C044  F14F         	movff	?___fladd+3,_powf$1839+3
  7199   002198  0EAB               	movlw	171
  7200   00219A  6E45               	movwf	___fladd@a^0,c
  7201   00219C  0EAA               	movlw	170
  7202   00219E  6E46               	movwf	(___fladd@a+1)^0,c
  7203   0021A0  0E2A               	movlw	42
  7204   0021A2  6E47               	movwf	(___fladd@a+2)^0,c
  7205   0021A4  0E3E               	movlw	62
  7206   0021A6  6E48               	movwf	(___fladd@a+3)^0,c
  7207   0021A8  C1B0  F013         	movff	powf@t,___flmul@a
  7208   0021AC  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7209   0021B0  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7210   0021B4  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7211   0021B8  C14C  F00F         	movff	_powf$1839,___flmul@b
  7212   0021BC  C14D  F010         	movff	_powf$1839+1,___flmul@b+1
  7213   0021C0  C14E  F011         	movff	_powf$1839+2,___flmul@b+2
  7214   0021C4  C14F  F012         	movff	_powf$1839+3,___flmul@b+3
  7215   0021C8  ECC2  F01F         	call	___flmul	;wreg free
  7216   0021CC  C00F  F041         	movff	?___flmul,___fladd@b
  7217   0021D0  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7218   0021D4  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7219   0021D8  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7220   0021DC  EC67  F01D         	call	___fladd	;wreg free
  7221   0021E0  C041  F138         	movff	?___fladd,_powf$1841
  7222   0021E4  C042  F139         	movff	?___fladd+1,_powf$1841+1
  7223   0021E8  C043  F13A         	movff	?___fladd+2,_powf$1841+2
  7224   0021EC  C044  F13B         	movff	?___fladd+3,_powf$1841+3
  7225   0021F0  C1B4  F051         	movff	powf@z,___flsub@b
  7226   0021F4  C1B5  F052         	movff	powf@z+1,___flsub@b+1
  7227   0021F8  C1B6  F053         	movff	powf@z+2,___flsub@b+2
  7228   0021FC  C1B7  F054         	movff	powf@z+3,___flsub@b+3
  7229   002200  C1B0  F013         	movff	powf@t,___flmul@a
  7230   002204  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  7231   002208  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  7232   00220C  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  7233   002210  C138  F00F         	movff	_powf$1841,___flmul@b
  7234   002214  C139  F010         	movff	_powf$1841+1,___flmul@b+1
  7235   002218  C13A  F011         	movff	_powf$1841+2,___flmul@b+2
  7236   00221C  C13B  F012         	movff	_powf$1841+3,___flmul@b+3
  7237   002220  ECC2  F01F         	call	___flmul	;wreg free
  7238   002224  C00F  F055         	movff	?___flmul,___flsub@a
  7239   002228  C010  F056         	movff	?___flmul+1,___flsub@a+1
  7240   00222C  C011  F057         	movff	?___flmul+2,___flsub@a+2
  7241   002230  C012  F058         	movff	?___flmul+3,___flsub@a+3
  7242   002234  EC04  F036         	call	___flsub	;wreg free
  7243   002238  C051  F18C         	movff	?___flsub,powf@t1
  7244   00223C  C052  F18D         	movff	?___flsub+1,powf@t1+1
  7245   002240  C053  F18E         	movff	?___flsub+2,powf@t1+2
  7246   002244  C054  F18F         	movff	?___flsub+3,powf@t1+3
  7247   002248  0E00               	movlw	0
  7248   00224A  6E45               	movwf	___fladd@a^0,c
  7249   00224C  0E00               	movlw	0
  7250   00224E  6E46               	movwf	(___fladd@a+1)^0,c
  7251   002250  0E00               	movlw	0
  7252   002252  6E47               	movwf	(___fladd@a+2)^0,c
  7253   002254  0EC0               	movlw	192
  7254   002256  6E48               	movwf	(___fladd@a+3)^0,c
  7255   002258  C18C  F041         	movff	powf@t1,___fladd@b
  7256   00225C  C18D  F042         	movff	powf@t1+1,___fladd@b+1
  7257   002260  C18E  F043         	movff	powf@t1+2,___fladd@b+2
  7258   002264  C18F  F044         	movff	powf@t1+3,___fladd@b+3
  7259   002268  EC67  F01D         	call	___fladd	;wreg free
  7260   00226C  C041  F02C         	movff	?___fladd,___fldiv@a
  7261   002270  C042  F02D         	movff	?___fladd+1,___fldiv@a+1
  7262   002274  C043  F02E         	movff	?___fladd+2,___fldiv@a+2
  7263   002278  C044  F02F         	movff	?___fladd+3,___fldiv@a+3
  7264   00227C  C18C  F013         	movff	powf@t1,___flmul@a
  7265   002280  C18D  F014         	movff	powf@t1+1,___flmul@a+1
  7266   002284  C18E  F015         	movff	powf@t1+2,___flmul@a+2
  7267   002288  C18F  F016         	movff	powf@t1+3,___flmul@a+3
  7268   00228C  C1B4  F00F         	movff	powf@z,___flmul@b
  7269   002290  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7270   002294  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7271   002298  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7272   00229C  ECC2  F01F         	call	___flmul	;wreg free
  7273   0022A0  C00F  F028         	movff	?___flmul,___fldiv@b
  7274   0022A4  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  7275   0022A8  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  7276   0022AC  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  7277   0022B0  ECC4  F023         	call	___fldiv	;wreg free
  7278   0022B4  C028  F13C         	movff	?___fldiv,_powf$1845
  7279   0022B8  C029  F13D         	movff	?___fldiv+1,_powf$1845+1
  7280   0022BC  C02A  F13E         	movff	?___fldiv+2,_powf$1845+2
  7281   0022C0  C02B  F13F         	movff	?___fldiv+3,_powf$1845+3
  7282   0022C4  C144  F045         	movff	powf@w,___fladd@a
  7283   0022C8  C145  F046         	movff	powf@w+1,___fladd@a+1
  7284   0022CC  C146  F047         	movff	powf@w+2,___fladd@a+2
  7285   0022D0  C147  F048         	movff	powf@w+3,___fladd@a+3
  7286   0022D4  C144  F013         	movff	powf@w,___flmul@a
  7287   0022D8  C145  F014         	movff	powf@w+1,___flmul@a+1
  7288   0022DC  C146  F015         	movff	powf@w+2,___flmul@a+2
  7289   0022E0  C147  F016         	movff	powf@w+3,___flmul@a+3
  7290   0022E4  C1B4  F00F         	movff	powf@z,___flmul@b
  7291   0022E8  C1B5  F010         	movff	powf@z+1,___flmul@b+1
  7292   0022EC  C1B6  F011         	movff	powf@z+2,___flmul@b+2
  7293   0022F0  C1B7  F012         	movff	powf@z+3,___flmul@b+3
  7294   0022F4  ECC2  F01F         	call	___flmul	;wreg free
  7295   0022F8  C00F  F041         	movff	?___flmul,___fladd@b
  7296   0022FC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  7297   002300  C011  F043         	movff	?___flmul+2,___fladd@b+2
  7298   002304  C012  F044         	movff	?___flmul+3,___fladd@b+3
  7299   002308  EC67  F01D         	call	___fladd	;wreg free
  7300   00230C  C041  F118         	movff	?___fladd,_powf$1851
  7301   002310  C042  F119         	movff	?___fladd+1,_powf$1851+1
  7302   002314  C043  F11A         	movff	?___fladd+2,_powf$1851+2
  7303   002318  C044  F11B         	movff	?___fladd+3,_powf$1851+3
  7304   00231C  C13C  F051         	movff	_powf$1845,___flsub@b
  7305   002320  C13D  F052         	movff	_powf$1845+1,___flsub@b+1
  7306   002324  C13E  F053         	movff	_powf$1845+2,___flsub@b+2
  7307   002328  C13F  F054         	movff	_powf$1845+3,___flsub@b+3
  7308   00232C  C118  F055         	movff	_powf$1851,___flsub@a
  7309   002330  C119  F056         	movff	_powf$1851+1,___flsub@a+1
  7310   002334  C11A  F057         	movff	_powf$1851+2,___flsub@a+2
  7311   002338  C11B  F058         	movff	_powf$1851+3,___flsub@a+3
  7312   00233C  EC04  F036         	call	___flsub	;wreg free
  7313   002340  C051  F150         	movff	?___flsub,powf@r
  7314   002344  C052  F151         	movff	?___flsub+1,powf@r+1
  7315   002348  C053  F152         	movff	?___flsub+2,powf@r+2
  7316   00234C  C054  F153         	movff	?___flsub+3,powf@r+3
  7317   002350  C1B4  F055         	movff	powf@z,___flsub@a
  7318   002354  C1B5  F056         	movff	powf@z+1,___flsub@a+1
  7319   002358  C1B6  F057         	movff	powf@z+2,___flsub@a+2
  7320   00235C  C1B7  F058         	movff	powf@z+3,___flsub@a+3
  7321   002360  C150  F051         	movff	powf@r,___flsub@b
  7322   002364  C151  F052         	movff	powf@r+1,___flsub@b+1
  7323   002368  C152  F053         	movff	powf@r+2,___flsub@b+2
  7324   00236C  C153  F054         	movff	powf@r+3,___flsub@b+3
  7325   002370  EC04  F036         	call	___flsub	;wreg free
  7326   002374  C051  F19C         	movff	?___flsub,_powf$1840
  7327   002378  C052  F19D         	movff	?___flsub+1,_powf$1840+1
  7328   00237C  C053  F19E         	movff	?___flsub+2,_powf$1840+2
  7329   002380  C054  F19F         	movff	?___flsub+3,_powf$1840+3
  7330   002384  0E00               	movlw	0
  7331   002386  6E51               	movwf	___flsub@b^0,c
  7332   002388  0E00               	movlw	0
  7333   00238A  6E52               	movwf	(___flsub@b+1)^0,c
  7334   00238C  0E80               	movlw	128
  7335   00238E  6E53               	movwf	(___flsub@b+2)^0,c
  7336   002390  0E3F               	movlw	63
  7337   002392  6E54               	movwf	(___flsub@b+3)^0,c
  7338   002394  C19C  F055         	movff	_powf$1840,___flsub@a
  7339   002398  C19D  F056         	movff	_powf$1840+1,___flsub@a+1
  7340   00239C  C19E  F057         	movff	_powf$1840+2,___flsub@a+2
  7341   0023A0  C19F  F058         	movff	_powf$1840+3,___flsub@a+3
  7342   0023A4  EC04  F036         	call	___flsub	;wreg free
  7343   0023A8  C051  F1B4         	movff	?___flsub,powf@z
  7344   0023AC  C052  F1B5         	movff	?___flsub+1,powf@z+1
  7345   0023B0  C053  F1B6         	movff	?___flsub+2,powf@z+2
  7346   0023B4  C054  F1B7         	movff	?___flsub+3,powf@z+3
  7347   0023B8  C1B4  F1A8         	movff	powf@z,powf@j
  7348   0023BC  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  7349   0023C0  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  7350   0023C4  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  7351   0023C8  C188  F070         	movff	powf@n,??_powf
  7352   0023CC  C189  F071         	movff	powf@n+1,??_powf+1
  7353   0023D0  C18A  F072         	movff	powf@n+2,??_powf+2
  7354   0023D4  C18B  F073         	movff	powf@n+3,??_powf+3
  7355   0023D8  0E17               	movlw	23
  7356   0023DA                     u10145:
  7357   0023DA  90D8               	bcf	status,0,c
  7358   0023DC  0100               	movlb	0	; () banked
  7359   0023DE  3770               	rlcf	??_powf& (0+255),f,b
  7360   0023E0  3771               	rlcf	(??_powf+1)& (0+255),f,b
  7361   0023E2  3772               	rlcf	(??_powf+2)& (0+255),f,b
  7362   0023E4  3773               	rlcf	(??_powf+3)& (0+255),f,b
  7363   0023E6  2EE8               	decfsz	wreg,f,c
  7364   0023E8  EFED  F011         	goto	u10145
  7365   0023EC  5170               	movf	??_powf& (0+255),w,b
  7366   0023EE  0101               	movlb	1	; () banked
  7367   0023F0  27A8               	addwf	powf@j& (0+255),f,b
  7368   0023F2  0100               	movlb	0	; () banked
  7369   0023F4  5171               	movf	(??_powf+1)& (0+255),w,b
  7370   0023F6  0101               	movlb	1	; () banked
  7371   0023F8  23A9               	addwfc	(powf@j+1)& (0+255),f,b
  7372   0023FA  0100               	movlb	0	; () banked
  7373   0023FC  5172               	movf	(??_powf+2)& (0+255),w,b
  7374   0023FE  0101               	movlb	1	; () banked
  7375   002400  23AA               	addwfc	(powf@j+2)& (0+255),f,b
  7376   002402  0100               	movlb	0	; () banked
  7377   002404  5173               	movf	(??_powf+3)& (0+255),w,b
  7378   002406  0101               	movlb	1	; () banked
  7379   002408  23AB               	addwfc	(powf@j+3)& (0+255),f,b
  7380   00240A                     
  7381                           ; BSR set to: 1
  7382   00240A  0E17               	movlw	23
  7383   00240C  0100               	movlb	0	; () banked
  7384   00240E  6F70               	movwf	??_powf& (0+255),b
  7385   002410  C1A8  F071         	movff	powf@j,??_powf+1
  7386   002414  C1A9  F072         	movff	powf@j+1,??_powf+2
  7387   002418  C1AA  F073         	movff	powf@j+2,??_powf+3
  7388   00241C  C1AB  F074         	movff	powf@j+3,??_powf+4
  7389   002420                     u10155:
  7390   002420  6770               	tstfsz	??_powf& (0+255),b
  7391   002422  EF15  F012         	goto	u10156
  7392   002426  EF1D  F012         	goto	u10157
  7393   00242A                     u10156:
  7394   00242A  3574               	rlcf	(??_powf+4)& (0+255),w,b
  7395   00242C  3374               	rrcf	(??_powf+4)& (0+255),f,b
  7396   00242E  3373               	rrcf	(??_powf+3)& (0+255),f,b
  7397   002430  3372               	rrcf	(??_powf+2)& (0+255),f,b
  7398   002432  3371               	rrcf	(??_powf+1)& (0+255),f,b
  7399   002434  2F70               	decfsz	??_powf& (0+255),f,b
  7400   002436  EF10  F012         	goto	u10155
  7401   00243A                     u10157:
  7402   00243A  0100               	movlb	0	; () banked
  7403   00243C  BF74               	btfsc	(??_powf+4)& (0+255),7,b
  7404   00243E  EF2D  F012         	goto	u10160
  7405   002442  5174               	movf	(??_powf+4)& (0+255),w,b
  7406   002444  1173               	iorwf	(??_powf+3)& (0+255),w,b
  7407   002446  1172               	iorwf	(??_powf+2)& (0+255),w,b
  7408   002448  E106               	bnz	u10161
  7409   00244A  0571               	decf	(??_powf+1)& (0+255),w,b
  7410   00244C  B0D8               	btfsc	status,0,c
  7411   00244E  EF2B  F012         	goto	u10161
  7412   002452  EF2D  F012         	goto	u10160
  7413   002456                     u10161:
  7414   002456  EF45  F012         	goto	l1331
  7415   00245A                     u10160:
  7416   00245A                     
  7417                           ; BSR set to: 0
  7418   00245A  C1B4  F028         	movff	powf@z,scalbnf@x
  7419   00245E  C1B5  F029         	movff	powf@z+1,scalbnf@x+1
  7420   002462  C1B6  F02A         	movff	powf@z+2,scalbnf@x+2
  7421   002466  C1B7  F02B         	movff	powf@z+3,scalbnf@x+3
  7422   00246A  C188  F02C         	movff	powf@n,scalbnf@n
  7423   00246E  C189  F02D         	movff	powf@n+1,scalbnf@n+1
  7424   002472  EC94  F028         	call	_scalbnf	;wreg free
  7425   002476  C028  F1B4         	movff	?_scalbnf,powf@z
  7426   00247A  C029  F1B5         	movff	?_scalbnf+1,powf@z+1
  7427   00247E  C02A  F1B6         	movff	?_scalbnf+2,powf@z+2
  7428   002482  C02B  F1B7         	movff	?_scalbnf+3,powf@z+3
  7429   002486  EF4D  F012         	goto	l7748
  7430   00248A                     l1331:
  7431                           
  7432                           ; BSR set to: 0
  7433   00248A  C1A8  F1B4         	movff	powf@j,powf@z
  7434   00248E  C1A9  F1B5         	movff	powf@j+1,powf@z+1
  7435   002492  C1AA  F1B6         	movff	powf@j+2,powf@z+2
  7436   002496  C1AB  F1B7         	movff	powf@j+3,powf@z+3
  7437   00249A                     l7748:
  7438   00249A  0101               	movlb	1	; () banked
  7439   00249C  51B4               	movf	powf@z& (0+255),w,b
  7440   00249E  11B5               	iorwf	(powf@z+1)& (0+255),w,b
  7441   0024A0  11B6               	iorwf	(powf@z+2)& (0+255),w,b
  7442   0024A2  11B7               	iorwf	(powf@z+3)& (0+255),w,b
  7443   0024A4  B4D8               	btfsc	status,2,c
  7444   0024A6  EF57  F012         	goto	u10171
  7445   0024AA  EF59  F012         	goto	u10170
  7446   0024AE                     u10171:
  7447   0024AE  EF3F  F003         	goto	l7434
  7448   0024B2                     u10170:
  7449   0024B2                     
  7450                           ; BSR set to: 1
  7451   0024B2  5164               	movf	powf@sn& (0+255),w,b
  7452   0024B4  1BB4               	xorwf	powf@z& (0+255),f,b
  7453   0024B6  5165               	movf	(powf@sn+1)& (0+255),w,b
  7454   0024B8  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
  7455   0024BA  5166               	movf	(powf@sn+2)& (0+255),w,b
  7456   0024BC  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
  7457   0024BE  5167               	movf	(powf@sn+3)& (0+255),w,b
  7458   0024C0  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
  7459   0024C2  EF3F  F003         	goto	l7434
  7460   0024C6                     l1265:
  7461   0024C6  0012               	return		;funcret
  7462   0024C8                     __end_of_powf:
  7463                           	callstack 0
  7464                           
  7465 ;; *************** function _sqrtf *****************
  7466 ;; Defined at:
  7467 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sqrtf.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  x               4    0[COMRAM] float 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  ix              4   33[COMRAM] struct .
  7472 ;;  r               4   29[COMRAM] unsigned long 
  7473 ;;  m               4   25[COMRAM] long 
  7474 ;;  t               4   21[COMRAM] long 
  7475 ;;  q               4   17[COMRAM] long 
  7476 ;;  i               4   13[COMRAM] long 
  7477 ;;  s               4    9[COMRAM] long 
  7478 ;;  z               4    0        float 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  4    0[COMRAM] float 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7488 ;;      Params:         4       0       0       0       0       0       0       0       0
  7489 ;;      Locals:        28       0       0       0       0       0       0       0       0
  7490 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7491 ;;      Totals:        37       0       0       0       0       0       0       0       0
  7492 ;;Total ram usage:       37 bytes
  7493 ;; Hardware stack levels used: 1
  7494 ;; Hardware stack levels required when called: 1
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_powf
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text7
  7503   0043AA                     __ptext7:
  7504                           	callstack 0
  7505   0043AA                     _sqrtf:
  7506                           	callstack 27
  7507   0043AA  C001  F022         	movff	sqrtf@x,sqrtf@ix
  7508   0043AE  C002  F023         	movff	sqrtf@x+1,sqrtf@ix+1
  7509   0043B2  C003  F024         	movff	sqrtf@x+2,sqrtf@ix+2
  7510   0043B6  C004  F025         	movff	sqrtf@x+3,sqrtf@ix+3
  7511   0043BA  0E00               	movlw	0
  7512   0043BC  1422               	andwf	sqrtf@ix^0,w,c
  7513   0043BE  6E05               	movwf	??_sqrtf^0,c
  7514   0043C0  0E00               	movlw	0
  7515   0043C2  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7516   0043C4  6E06               	movwf	(??_sqrtf+1)^0,c
  7517   0043C6  0E80               	movlw	128
  7518   0043C8  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7519   0043CA  6E07               	movwf	(??_sqrtf+2)^0,c
  7520   0043CC  0E7F               	movlw	127
  7521   0043CE  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7522   0043D0  6E08               	movwf	(??_sqrtf+3)^0,c
  7523   0043D2  0E80               	movlw	128
  7524   0043D4  1807               	xorwf	(??_sqrtf+2)^0,w,c
  7525   0043D6  E109               	bnz	u9341
  7526   0043D8  0E7F               	movlw	127
  7527   0043DA  1808               	xorwf	(??_sqrtf+3)^0,w,c
  7528   0043DC  1005               	iorwf	??_sqrtf^0,w,c
  7529   0043DE  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7530   0043E0  A4D8               	btfss	status,2,c
  7531   0043E2  EFF5  F021         	goto	u9341
  7532   0043E6  EFF7  F021         	goto	u9340
  7533   0043EA                     u9341:
  7534   0043EA  EF27  F022         	goto	l7200
  7535   0043EE                     u9340:
  7536   0043EE  0EFF               	movlw	255
  7537   0043F0  1422               	andwf	sqrtf@ix^0,w,c
  7538   0043F2  6E05               	movwf	??_sqrtf^0,c
  7539   0043F4  0EFF               	movlw	255
  7540   0043F6  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7541   0043F8  6E06               	movwf	(??_sqrtf+1)^0,c
  7542   0043FA  0E7F               	movlw	127
  7543   0043FC  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7544   0043FE  6E07               	movwf	(??_sqrtf+2)^0,c
  7545   004400  0E00               	movlw	0
  7546   004402  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7547   004404  6E08               	movwf	(??_sqrtf+3)^0,c
  7548   004406  5005               	movf	??_sqrtf^0,w,c
  7549   004408  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7550   00440A  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7551   00440C  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7552   00440E  A4D8               	btfss	status,2,c
  7553   004410  EF0C  F022         	goto	u9351
  7554   004414  EF0E  F022         	goto	u9350
  7555   004418                     u9351:
  7556   004418  EF15  F022         	goto	l7194
  7557   00441C                     u9350:
  7558   00441C  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7559   00441E  EF15  F022         	goto	u9360
  7560   004422  EF13  F022         	goto	u9361
  7561   004426                     u9361:
  7562   004426  EF1D  F022         	goto	l7196
  7563   00442A                     u9360:
  7564   00442A                     l7194:
  7565   00442A  0EFF               	movlw	255
  7566   00442C  1222               	iorwf	sqrtf@ix^0,f,c
  7567   00442E  0EFF               	movlw	255
  7568   004430  1223               	iorwf	(sqrtf@ix+1)^0,f,c
  7569   004432  0E7F               	movlw	127
  7570   004434  1224               	iorwf	(sqrtf@ix+2)^0,f,c
  7571   004436  0E00               	movlw	0
  7572   004438  1225               	iorwf	(sqrtf@ix+3)^0,f,c
  7573   00443A                     l7196:
  7574   00443A  C022  F001         	movff	sqrtf@ix,?_sqrtf
  7575   00443E  C023  F002         	movff	sqrtf@ix+1,?_sqrtf+1
  7576   004442  C024  F003         	movff	sqrtf@ix+2,?_sqrtf+2
  7577   004446  C025  F004         	movff	sqrtf@ix+3,?_sqrtf+3
  7578   00444A  EFC3  F023         	goto	l1357
  7579   00444E                     l7200:
  7580   00444E  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7581   004450  EF36  F022         	goto	u9370
  7582   004454  5025               	movf	(sqrtf@ix+3)^0,w,c
  7583   004456  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7584   004458  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7585   00445A  E106               	bnz	u9371
  7586   00445C  0422               	decf	sqrtf@ix^0,w,c
  7587   00445E  B0D8               	btfsc	status,0,c
  7588   004460  EF34  F022         	goto	u9371
  7589   004464  EF36  F022         	goto	u9370
  7590   004468                     u9371:
  7591   004468  EF6D  F022         	goto	l7216
  7592   00446C                     u9370:
  7593   00446C  0EFF               	movlw	255
  7594   00446E  1422               	andwf	sqrtf@ix^0,w,c
  7595   004470  6E05               	movwf	??_sqrtf^0,c
  7596   004472  0EFF               	movlw	255
  7597   004474  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7598   004476  6E06               	movwf	(??_sqrtf+1)^0,c
  7599   004478  0EFF               	movlw	255
  7600   00447A  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7601   00447C  6E07               	movwf	(??_sqrtf+2)^0,c
  7602   00447E  0E7F               	movlw	127
  7603   004480  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7604   004482  6E08               	movwf	(??_sqrtf+3)^0,c
  7605   004484  5005               	movf	??_sqrtf^0,w,c
  7606   004486  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7607   004488  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7608   00448A  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7609   00448C  A4D8               	btfss	status,2,c
  7610   00448E  EF4B  F022         	goto	u9381
  7611   004492  EF4D  F022         	goto	u9380
  7612   004496                     u9381:
  7613   004496  EF57  F022         	goto	l7208
  7614   00449A                     u9380:
  7615   00449A  0E00               	movlw	0
  7616   00449C  6E01               	movwf	?_sqrtf^0,c
  7617   00449E  0E00               	movlw	0
  7618   0044A0  6E02               	movwf	(?_sqrtf+1)^0,c
  7619   0044A2  0E00               	movlw	0
  7620   0044A4  6E03               	movwf	(?_sqrtf+2)^0,c
  7621   0044A6  0E00               	movlw	0
  7622   0044A8  6E04               	movwf	(?_sqrtf+3)^0,c
  7623   0044AA  EFC3  F023         	goto	l1357
  7624   0044AE                     l7208:
  7625   0044AE  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7626   0044B0  EF5E  F022         	goto	u9390
  7627   0044B4  EF5C  F022         	goto	u9391
  7628   0044B8                     u9391:
  7629   0044B8  EF6D  F022         	goto	l7216
  7630   0044BC                     u9390:
  7631   0044BC  0E00               	movlw	0
  7632   0044BE  0103               	movlb	3	; () banked
  7633   0044C0  6F49               	movwf	(_errno+1)& (0+255),b
  7634   0044C2  0E21               	movlw	33
  7635   0044C4  6F48               	movwf	_errno& (0+255),b
  7636   0044C6  0EFF               	movlw	255
  7637   0044C8  6E22               	movwf	sqrtf@ix^0,c
  7638   0044CA  0EFF               	movlw	255
  7639   0044CC  6E23               	movwf	(sqrtf@ix+1)^0,c
  7640   0044CE  0EFF               	movlw	255
  7641   0044D0  6E24               	movwf	(sqrtf@ix+2)^0,c
  7642   0044D2  0E7F               	movlw	127
  7643   0044D4  6E25               	movwf	(sqrtf@ix+3)^0,c
  7644   0044D6  EF1D  F022         	goto	l7196
  7645   0044DA                     l7216:
  7646   0044DA  0E17               	movlw	23
  7647   0044DC  6E05               	movwf	??_sqrtf^0,c
  7648   0044DE  C022  F006         	movff	sqrtf@ix,??_sqrtf+1
  7649   0044E2  C023  F007         	movff	sqrtf@ix+1,??_sqrtf+2
  7650   0044E6  C024  F008         	movff	sqrtf@ix+2,??_sqrtf+3
  7651   0044EA  C025  F009         	movff	sqrtf@ix+3,??_sqrtf+4
  7652   0044EE                     u9405:
  7653   0044EE  6605               	tstfsz	??_sqrtf^0,c
  7654   0044F0  EF7C  F022         	goto	u9406
  7655   0044F4  EF84  F022         	goto	u9407
  7656   0044F8                     u9406:
  7657   0044F8  3409               	rlcf	(??_sqrtf+4)^0,w,c
  7658   0044FA  3209               	rrcf	(??_sqrtf+4)^0,f,c
  7659   0044FC  3208               	rrcf	(??_sqrtf+3)^0,f,c
  7660   0044FE  3207               	rrcf	(??_sqrtf+2)^0,f,c
  7661   004500  3206               	rrcf	(??_sqrtf+1)^0,f,c
  7662   004502  2E05               	decfsz	??_sqrtf^0,f,c
  7663   004504  EF77  F022         	goto	u9405
  7664   004508                     u9407:
  7665   004508  C006  F01A         	movff	??_sqrtf+1,sqrtf@m
  7666   00450C  C007  F01B         	movff	??_sqrtf+2,sqrtf@m+1
  7667   004510  C008  F01C         	movff	??_sqrtf+3,sqrtf@m+2
  7668   004514  C009  F01D         	movff	??_sqrtf+4,sqrtf@m+3
  7669   004518  501A               	movf	sqrtf@m^0,w,c
  7670   00451A  101B               	iorwf	(sqrtf@m+1)^0,w,c
  7671   00451C  101C               	iorwf	(sqrtf@m+2)^0,w,c
  7672   00451E  101D               	iorwf	(sqrtf@m+3)^0,w,c
  7673   004520  A4D8               	btfss	status,2,c
  7674   004522  EF95  F022         	goto	u9411
  7675   004526  EF97  F022         	goto	u9410
  7676   00452A                     u9411:
  7677   00452A  EFC7  F022         	goto	l1361
  7678   00452E                     u9410:
  7679   00452E  0E00               	movlw	0
  7680   004530  6E0E               	movwf	sqrtf@i^0,c
  7681   004532  0E00               	movlw	0
  7682   004534  6E0F               	movwf	(sqrtf@i+1)^0,c
  7683   004536  0E00               	movlw	0
  7684   004538  6E10               	movwf	(sqrtf@i+2)^0,c
  7685   00453A  0E00               	movlw	0
  7686   00453C  6E11               	movwf	(sqrtf@i+3)^0,c
  7687   00453E  EFAC  F022         	goto	l7224
  7688   004542                     l7220:
  7689   004542  90D8               	bcf	status,0,c
  7690   004544  3622               	rlcf	sqrtf@ix^0,f,c
  7691   004546  3623               	rlcf	(sqrtf@ix+1)^0,f,c
  7692   004548  3624               	rlcf	(sqrtf@ix+2)^0,f,c
  7693   00454A  3625               	rlcf	(sqrtf@ix+3)^0,f,c
  7694   00454C  0E01               	movlw	1
  7695   00454E  260E               	addwf	sqrtf@i^0,f,c
  7696   004550  0E00               	movlw	0
  7697   004552  220F               	addwfc	(sqrtf@i+1)^0,f,c
  7698   004554  2210               	addwfc	(sqrtf@i+2)^0,f,c
  7699   004556  2211               	addwfc	(sqrtf@i+3)^0,f,c
  7700   004558                     l7224:
  7701   004558  AE24               	btfss	(sqrtf@ix+2)^0,7,c
  7702   00455A  EFB1  F022         	goto	u9421
  7703   00455E  EFB3  F022         	goto	u9420
  7704   004562                     u9421:
  7705   004562  EFA1  F022         	goto	l7220
  7706   004566                     u9420:
  7707   004566  0EFF               	movlw	255
  7708   004568  240E               	addwf	sqrtf@i^0,w,c
  7709   00456A  6E05               	movwf	??_sqrtf^0,c
  7710   00456C  0EFF               	movlw	255
  7711   00456E  200F               	addwfc	(sqrtf@i+1)^0,w,c
  7712   004570  6E06               	movwf	(??_sqrtf+1)^0,c
  7713   004572  0EFF               	movlw	255
  7714   004574  2010               	addwfc	(sqrtf@i+2)^0,w,c
  7715   004576  6E07               	movwf	(??_sqrtf+2)^0,c
  7716   004578  0EFF               	movlw	255
  7717   00457A  2011               	addwfc	(sqrtf@i+3)^0,w,c
  7718   00457C  6E08               	movwf	(??_sqrtf+3)^0,c
  7719   00457E  5005               	movf	??_sqrtf^0,w,c
  7720   004580  5E1A               	subwf	sqrtf@m^0,f,c
  7721   004582  5006               	movf	(??_sqrtf+1)^0,w,c
  7722   004584  5A1B               	subwfb	(sqrtf@m+1)^0,f,c
  7723   004586  5007               	movf	(??_sqrtf+2)^0,w,c
  7724   004588  5A1C               	subwfb	(sqrtf@m+2)^0,f,c
  7725   00458A  5008               	movf	(??_sqrtf+3)^0,w,c
  7726   00458C  5A1D               	subwfb	(sqrtf@m+3)^0,f,c
  7727   00458E                     l1361:
  7728   00458E  0E81               	movlw	129
  7729   004590  261A               	addwf	sqrtf@m^0,f,c
  7730   004592  0EFF               	movlw	255
  7731   004594  221B               	addwfc	(sqrtf@m+1)^0,f,c
  7732   004596  0EFF               	movlw	255
  7733   004598  221C               	addwfc	(sqrtf@m+2)^0,f,c
  7734   00459A  0EFF               	movlw	255
  7735   00459C  221D               	addwfc	(sqrtf@m+3)^0,f,c
  7736   00459E  0EFF               	movlw	255
  7737   0045A0  1422               	andwf	sqrtf@ix^0,w,c
  7738   0045A2  6E05               	movwf	??_sqrtf^0,c
  7739   0045A4  0EFF               	movlw	255
  7740   0045A6  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7741   0045A8  6E06               	movwf	(??_sqrtf+1)^0,c
  7742   0045AA  0E7F               	movlw	127
  7743   0045AC  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7744   0045AE  6E07               	movwf	(??_sqrtf+2)^0,c
  7745   0045B0  0E00               	movlw	0
  7746   0045B2  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7747   0045B4  6E08               	movwf	(??_sqrtf+3)^0,c
  7748   0045B6  0E00               	movlw	0
  7749   0045B8  1005               	iorwf	??_sqrtf^0,w,c
  7750   0045BA  6E22               	movwf	sqrtf@ix^0,c
  7751   0045BC  0E00               	movlw	0
  7752   0045BE  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7753   0045C0  6E23               	movwf	(sqrtf@ix+1)^0,c
  7754   0045C2  0E80               	movlw	128
  7755   0045C4  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7756   0045C6  6E24               	movwf	(sqrtf@ix+2)^0,c
  7757   0045C8  0E00               	movlw	0
  7758   0045CA  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7759   0045CC  6E25               	movwf	(sqrtf@ix+3)^0,c
  7760   0045CE  A01A               	btfss	sqrtf@m^0,0,c
  7761   0045D0  EFEC  F022         	goto	u9431
  7762   0045D4  EFEE  F022         	goto	u9430
  7763   0045D8                     u9431:
  7764   0045D8  EFF6  F022         	goto	l1365
  7765   0045DC                     u9430:
  7766   0045DC  5022               	movf	sqrtf@ix^0,w,c
  7767   0045DE  2622               	addwf	sqrtf@ix^0,f,c
  7768   0045E0  5023               	movf	(sqrtf@ix+1)^0,w,c
  7769   0045E2  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7770   0045E4  5024               	movf	(sqrtf@ix+2)^0,w,c
  7771   0045E6  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7772   0045E8  5025               	movf	(sqrtf@ix+3)^0,w,c
  7773   0045EA  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7774   0045EC                     l1365:
  7775   0045EC  341D               	rlcf	(sqrtf@m+3)^0,w,c
  7776   0045EE  321D               	rrcf	(sqrtf@m+3)^0,f,c
  7777   0045F0  321C               	rrcf	(sqrtf@m+2)^0,f,c
  7778   0045F2  321B               	rrcf	(sqrtf@m+1)^0,f,c
  7779   0045F4  321A               	rrcf	sqrtf@m^0,f,c
  7780   0045F6  5022               	movf	sqrtf@ix^0,w,c
  7781   0045F8  2622               	addwf	sqrtf@ix^0,f,c
  7782   0045FA  5023               	movf	(sqrtf@ix+1)^0,w,c
  7783   0045FC  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7784   0045FE  5024               	movf	(sqrtf@ix+2)^0,w,c
  7785   004600  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7786   004602  5025               	movf	(sqrtf@ix+3)^0,w,c
  7787   004604  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7788   004606  0E00               	movlw	0
  7789   004608  6E0A               	movwf	sqrtf@s^0,c
  7790   00460A  0E00               	movlw	0
  7791   00460C  6E0B               	movwf	(sqrtf@s+1)^0,c
  7792   00460E  0E00               	movlw	0
  7793   004610  6E0C               	movwf	(sqrtf@s+2)^0,c
  7794   004612  0E00               	movlw	0
  7795   004614  6E0D               	movwf	(sqrtf@s+3)^0,c
  7796   004616  C00A  F012         	movff	sqrtf@s,sqrtf@q
  7797   00461A  C00B  F013         	movff	sqrtf@s+1,sqrtf@q+1
  7798   00461E  C00C  F014         	movff	sqrtf@s+2,sqrtf@q+2
  7799   004622  C00D  F015         	movff	sqrtf@s+3,sqrtf@q+3
  7800   004626  0E00               	movlw	0
  7801   004628  6E1E               	movwf	sqrtf@r^0,c
  7802   00462A  0E00               	movlw	0
  7803   00462C  6E1F               	movwf	(sqrtf@r+1)^0,c
  7804   00462E  0E00               	movlw	0
  7805   004630  6E20               	movwf	(sqrtf@r+2)^0,c
  7806   004632  0E01               	movlw	1
  7807   004634  6E21               	movwf	(sqrtf@r+3)^0,c
  7808   004636  EF65  F023         	goto	l7242
  7809   00463A                     l7236:
  7810   00463A  500A               	movf	sqrtf@s^0,w,c
  7811   00463C  241E               	addwf	sqrtf@r^0,w,c
  7812   00463E  6E16               	movwf	sqrtf@t^0,c
  7813   004640  500B               	movf	(sqrtf@s+1)^0,w,c
  7814   004642  201F               	addwfc	(sqrtf@r+1)^0,w,c
  7815   004644  6E17               	movwf	(sqrtf@t+1)^0,c
  7816   004646  500C               	movf	(sqrtf@s+2)^0,w,c
  7817   004648  2020               	addwfc	(sqrtf@r+2)^0,w,c
  7818   00464A  6E18               	movwf	(sqrtf@t+2)^0,c
  7819   00464C  500D               	movf	(sqrtf@s+3)^0,w,c
  7820   00464E  2021               	addwfc	(sqrtf@r+3)^0,w,c
  7821   004650  6E19               	movwf	(sqrtf@t+3)^0,c
  7822   004652  5016               	movf	sqrtf@t^0,w,c
  7823   004654  5C22               	subwf	sqrtf@ix^0,w,c
  7824   004656  5017               	movf	(sqrtf@t+1)^0,w,c
  7825   004658  5823               	subwfb	(sqrtf@ix+1)^0,w,c
  7826   00465A  5018               	movf	(sqrtf@t+2)^0,w,c
  7827   00465C  5824               	subwfb	(sqrtf@ix+2)^0,w,c
  7828   00465E  5025               	movf	(sqrtf@ix+3)^0,w,c
  7829   004660  0A80               	xorlw	128
  7830   004662  6E05               	movwf	??_sqrtf^0,c
  7831   004664  5019               	movf	(sqrtf@t+3)^0,w,c
  7832   004666  0A80               	xorlw	128
  7833   004668  5805               	subwfb	??_sqrtf^0,w,c
  7834   00466A  A0D8               	btfss	status,0,c
  7835   00466C  EF3A  F023         	goto	u9441
  7836   004670  EF3C  F023         	goto	u9440
  7837   004674                     u9441:
  7838   004674  EF58  F023         	goto	l1368
  7839   004678                     u9440:
  7840   004678  5016               	movf	sqrtf@t^0,w,c
  7841   00467A  241E               	addwf	sqrtf@r^0,w,c
  7842   00467C  6E0A               	movwf	sqrtf@s^0,c
  7843   00467E  5017               	movf	(sqrtf@t+1)^0,w,c
  7844   004680  201F               	addwfc	(sqrtf@r+1)^0,w,c
  7845   004682  6E0B               	movwf	(sqrtf@s+1)^0,c
  7846   004684  5018               	movf	(sqrtf@t+2)^0,w,c
  7847   004686  2020               	addwfc	(sqrtf@r+2)^0,w,c
  7848   004688  6E0C               	movwf	(sqrtf@s+2)^0,c
  7849   00468A  5019               	movf	(sqrtf@t+3)^0,w,c
  7850   00468C  2021               	addwfc	(sqrtf@r+3)^0,w,c
  7851   00468E  6E0D               	movwf	(sqrtf@s+3)^0,c
  7852   004690  5016               	movf	sqrtf@t^0,w,c
  7853   004692  5E22               	subwf	sqrtf@ix^0,f,c
  7854   004694  5017               	movf	(sqrtf@t+1)^0,w,c
  7855   004696  5A23               	subwfb	(sqrtf@ix+1)^0,f,c
  7856   004698  5018               	movf	(sqrtf@t+2)^0,w,c
  7857   00469A  5A24               	subwfb	(sqrtf@ix+2)^0,f,c
  7858   00469C  5019               	movf	(sqrtf@t+3)^0,w,c
  7859   00469E  5A25               	subwfb	(sqrtf@ix+3)^0,f,c
  7860   0046A0  501E               	movf	sqrtf@r^0,w,c
  7861   0046A2  2612               	addwf	sqrtf@q^0,f,c
  7862   0046A4  501F               	movf	(sqrtf@r+1)^0,w,c
  7863   0046A6  2213               	addwfc	(sqrtf@q+1)^0,f,c
  7864   0046A8  5020               	movf	(sqrtf@r+2)^0,w,c
  7865   0046AA  2214               	addwfc	(sqrtf@q+2)^0,f,c
  7866   0046AC  5021               	movf	(sqrtf@r+3)^0,w,c
  7867   0046AE  2215               	addwfc	(sqrtf@q+3)^0,f,c
  7868   0046B0                     l1368:
  7869   0046B0  5022               	movf	sqrtf@ix^0,w,c
  7870   0046B2  2622               	addwf	sqrtf@ix^0,f,c
  7871   0046B4  5023               	movf	(sqrtf@ix+1)^0,w,c
  7872   0046B6  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7873   0046B8  5024               	movf	(sqrtf@ix+2)^0,w,c
  7874   0046BA  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7875   0046BC  5025               	movf	(sqrtf@ix+3)^0,w,c
  7876   0046BE  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7877   0046C0  90D8               	bcf	status,0,c
  7878   0046C2  3221               	rrcf	(sqrtf@r+3)^0,f,c
  7879   0046C4  3220               	rrcf	(sqrtf@r+2)^0,f,c
  7880   0046C6  321F               	rrcf	(sqrtf@r+1)^0,f,c
  7881   0046C8  321E               	rrcf	sqrtf@r^0,f,c
  7882   0046CA                     l7242:
  7883   0046CA  501E               	movf	sqrtf@r^0,w,c
  7884   0046CC  101F               	iorwf	(sqrtf@r+1)^0,w,c
  7885   0046CE  1020               	iorwf	(sqrtf@r+2)^0,w,c
  7886   0046D0  1021               	iorwf	(sqrtf@r+3)^0,w,c
  7887   0046D2  A4D8               	btfss	status,2,c
  7888   0046D4  EF6E  F023         	goto	u9451
  7889   0046D8  EF70  F023         	goto	u9450
  7890   0046DC                     u9451:
  7891   0046DC  EF1D  F023         	goto	l7236
  7892   0046E0                     u9450:
  7893   0046E0  5022               	movf	sqrtf@ix^0,w,c
  7894   0046E2  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7895   0046E4  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7896   0046E6  1025               	iorwf	(sqrtf@ix+3)^0,w,c
  7897   0046E8  B4D8               	btfsc	status,2,c
  7898   0046EA  EF79  F023         	goto	u9461
  7899   0046EE  EF7B  F023         	goto	u9460
  7900   0046F2                     u9461:
  7901   0046F2  EF8F  F023         	goto	l1370
  7902   0046F6                     u9460:
  7903   0046F6  0E01               	movlw	1
  7904   0046F8  1412               	andwf	sqrtf@q^0,w,c
  7905   0046FA  6E05               	movwf	??_sqrtf^0,c
  7906   0046FC  0E00               	movlw	0
  7907   0046FE  1413               	andwf	(sqrtf@q+1)^0,w,c
  7908   004700  6E06               	movwf	(??_sqrtf+1)^0,c
  7909   004702  0E00               	movlw	0
  7910   004704  1414               	andwf	(sqrtf@q+2)^0,w,c
  7911   004706  6E07               	movwf	(??_sqrtf+2)^0,c
  7912   004708  0E00               	movlw	0
  7913   00470A  1415               	andwf	(sqrtf@q+3)^0,w,c
  7914   00470C  6E08               	movwf	(??_sqrtf+3)^0,c
  7915   00470E  5005               	movf	??_sqrtf^0,w,c
  7916   004710  2612               	addwf	sqrtf@q^0,f,c
  7917   004712  5006               	movf	(??_sqrtf+1)^0,w,c
  7918   004714  2213               	addwfc	(sqrtf@q+1)^0,f,c
  7919   004716  5007               	movf	(??_sqrtf+2)^0,w,c
  7920   004718  2214               	addwfc	(sqrtf@q+2)^0,f,c
  7921   00471A  5008               	movf	(??_sqrtf+3)^0,w,c
  7922   00471C  2215               	addwfc	(sqrtf@q+3)^0,f,c
  7923   00471E                     l1370:
  7924   00471E  C012  F005         	movff	sqrtf@q,??_sqrtf
  7925   004722  C013  F006         	movff	sqrtf@q+1,??_sqrtf+1
  7926   004726  C014  F007         	movff	sqrtf@q+2,??_sqrtf+2
  7927   00472A  C015  F008         	movff	sqrtf@q+3,??_sqrtf+3
  7928   00472E  3408               	rlcf	(??_sqrtf+3)^0,w,c
  7929   004730  3208               	rrcf	(??_sqrtf+3)^0,f,c
  7930   004732  3207               	rrcf	(??_sqrtf+2)^0,f,c
  7931   004734  3206               	rrcf	(??_sqrtf+1)^0,f,c
  7932   004736  3205               	rrcf	??_sqrtf^0,f,c
  7933   004738  0E00               	movlw	0
  7934   00473A  2405               	addwf	??_sqrtf^0,w,c
  7935   00473C  6E22               	movwf	sqrtf@ix^0,c
  7936   00473E  0E00               	movlw	0
  7937   004740  2006               	addwfc	(??_sqrtf+1)^0,w,c
  7938   004742  6E23               	movwf	(sqrtf@ix+1)^0,c
  7939   004744  0E00               	movlw	0
  7940   004746  2007               	addwfc	(??_sqrtf+2)^0,w,c
  7941   004748  6E24               	movwf	(sqrtf@ix+2)^0,c
  7942   00474A  0E3F               	movlw	63
  7943   00474C  2008               	addwfc	(??_sqrtf+3)^0,w,c
  7944   00474E  6E25               	movwf	(sqrtf@ix+3)^0,c
  7945   004750  C01A  F005         	movff	sqrtf@m,??_sqrtf
  7946   004754  C01B  F006         	movff	sqrtf@m+1,??_sqrtf+1
  7947   004758  C01C  F007         	movff	sqrtf@m+2,??_sqrtf+2
  7948   00475C  C01D  F008         	movff	sqrtf@m+3,??_sqrtf+3
  7949   004760  0E17               	movlw	23
  7950   004762                     u9475:
  7951   004762  90D8               	bcf	status,0,c
  7952   004764  3605               	rlcf	??_sqrtf^0,f,c
  7953   004766  3606               	rlcf	(??_sqrtf+1)^0,f,c
  7954   004768  3607               	rlcf	(??_sqrtf+2)^0,f,c
  7955   00476A  3608               	rlcf	(??_sqrtf+3)^0,f,c
  7956   00476C  2EE8               	decfsz	wreg,f,c
  7957   00476E  EFB1  F023         	goto	u9475
  7958   004772  5005               	movf	??_sqrtf^0,w,c
  7959   004774  2622               	addwf	sqrtf@ix^0,f,c
  7960   004776  5006               	movf	(??_sqrtf+1)^0,w,c
  7961   004778  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7962   00477A  5007               	movf	(??_sqrtf+2)^0,w,c
  7963   00477C  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7964   00477E  5008               	movf	(??_sqrtf+3)^0,w,c
  7965   004780  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7966   004782  EF1D  F022         	goto	l7196
  7967   004786                     l1357:
  7968   004786  0012               	return		;funcret
  7969   004788                     __end_of_sqrtf:
  7970                           	callstack 0
  7971                           
  7972 ;; *************** function _scalbnf *****************
  7973 ;; Defined at:
  7974 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\scalbnf.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  x               4   39[COMRAM] float 
  7977 ;;  n               2   43[COMRAM] int 
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;  y               4   53[COMRAM] float 
  7980 ;;  u               4   49[COMRAM] struct .
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  4   39[COMRAM] float 
  7983 ;; Registers used:
  7984 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7990 ;;      Params:         6       0       0       0       0       0       0       0       0
  7991 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7992 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7993 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7994 ;;Total ram usage:       18 bytes
  7995 ;; Hardware stack levels used: 1
  7996 ;; Hardware stack levels required when called: 2
  7997 ;; This function calls:
  7998 ;;		___flmul
  7999 ;; This function is called by:
  8000 ;;		_powf
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           	psect	text8
  8005   005128                     __ptext8:
  8006                           	callstack 0
  8007   005128                     _scalbnf:
  8008                           	callstack 26
  8009   005128  C028  F036         	movff	scalbnf@x,scalbnf@y
  8010   00512C  C029  F037         	movff	scalbnf@x+1,scalbnf@y+1
  8011   005130  C02A  F038         	movff	scalbnf@x+2,scalbnf@y+2
  8012   005134  C02B  F039         	movff	scalbnf@x+3,scalbnf@y+3
  8013   005138  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8014   00513A  EFA8  F028         	goto	u9481
  8015   00513E  502D               	movf	(scalbnf@n+1)^0,w,c
  8016   005140  E109               	bnz	u9480
  8017   005142  0E80               	movlw	128
  8018   005144  5C2C               	subwf	scalbnf@n^0,w,c
  8019   005146  A0D8               	btfss	status,0,c
  8020   005148  EFA8  F028         	goto	u9481
  8021   00514C  EFAA  F028         	goto	u9480
  8022   005150                     u9481:
  8023   005150  EF08  F029         	goto	l7270
  8024   005154                     u9480:
  8025   005154  C036  F00F         	movff	scalbnf@y,___flmul@b
  8026   005158  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8027   00515C  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8028   005160  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8029   005164  0E00               	movlw	0
  8030   005166  6E13               	movwf	___flmul@a^0,c
  8031   005168  0E00               	movlw	0
  8032   00516A  6E14               	movwf	(___flmul@a+1)^0,c
  8033   00516C  0E00               	movlw	0
  8034   00516E  6E15               	movwf	(___flmul@a+2)^0,c
  8035   005170  0E7F               	movlw	127
  8036   005172  6E16               	movwf	(___flmul@a+3)^0,c
  8037   005174  ECC2  F01F         	call	___flmul	;wreg free
  8038   005178  C00F  F036         	movff	?___flmul,scalbnf@y
  8039   00517C  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8040   005180  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8041   005184  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8042   005188  0E81               	movlw	129
  8043   00518A  262C               	addwf	scalbnf@n^0,f,c
  8044   00518C  0EFF               	movlw	255
  8045   00518E  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8046   005190  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8047   005192  EFD4  F028         	goto	u9491
  8048   005196  502D               	movf	(scalbnf@n+1)^0,w,c
  8049   005198  E109               	bnz	u9490
  8050   00519A  0E80               	movlw	128
  8051   00519C  5C2C               	subwf	scalbnf@n^0,w,c
  8052   00519E  A0D8               	btfss	status,0,c
  8053   0051A0  EFD4  F028         	goto	u9491
  8054   0051A4  EFD6  F028         	goto	u9490
  8055   0051A8                     u9491:
  8056   0051A8  EF72  F029         	goto	l7286
  8057   0051AC                     u9490:
  8058   0051AC  C036  F00F         	movff	scalbnf@y,___flmul@b
  8059   0051B0  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8060   0051B4  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8061   0051B8  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8062   0051BC  0E00               	movlw	0
  8063   0051BE  6E13               	movwf	___flmul@a^0,c
  8064   0051C0  0E00               	movlw	0
  8065   0051C2  6E14               	movwf	(___flmul@a+1)^0,c
  8066   0051C4  0E00               	movlw	0
  8067   0051C6  6E15               	movwf	(___flmul@a+2)^0,c
  8068   0051C8  0E7F               	movlw	127
  8069   0051CA  6E16               	movwf	(___flmul@a+3)^0,c
  8070   0051CC  ECC2  F01F         	call	___flmul	;wreg free
  8071   0051D0  C00F  F036         	movff	?___flmul,scalbnf@y
  8072   0051D4  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8073   0051D8  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8074   0051DC  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8075   0051E0  0E81               	movlw	129
  8076   0051E2  262C               	addwf	scalbnf@n^0,f,c
  8077   0051E4  0EFF               	movlw	255
  8078   0051E6  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8079   0051E8  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
  8080   0051EA  EF00  F029         	goto	u9501
  8081   0051EE  502D               	movf	(scalbnf@n+1)^0,w,c
  8082   0051F0  E109               	bnz	u9500
  8083   0051F2  0E80               	movlw	128
  8084   0051F4  5C2C               	subwf	scalbnf@n^0,w,c
  8085   0051F6  A0D8               	btfss	status,0,c
  8086   0051F8  EF00  F029         	goto	u9501
  8087   0051FC  EF02  F029         	goto	u9500
  8088   005200                     u9501:
  8089   005200  EF72  F029         	goto	l7286
  8090   005204                     u9500:
  8091   005204  0E00               	movlw	0
  8092   005206  6E2D               	movwf	(scalbnf@n+1)^0,c
  8093   005208  0E7F               	movlw	127
  8094   00520A  6E2C               	movwf	scalbnf@n^0,c
  8095   00520C  EF72  F029         	goto	l7286
  8096   005210                     l7270:
  8097   005210  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8098   005212  EF14  F029         	goto	u9511
  8099   005216  0E82               	movlw	130
  8100   005218  5C2C               	subwf	scalbnf@n^0,w,c
  8101   00521A  0EFF               	movlw	255
  8102   00521C  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8103   00521E  B0D8               	btfsc	status,0,c
  8104   005220  EF14  F029         	goto	u9511
  8105   005224  EF16  F029         	goto	u9510
  8106   005228                     u9511:
  8107   005228  EF72  F029         	goto	l7286
  8108   00522C                     u9510:
  8109   00522C  C036  F00F         	movff	scalbnf@y,___flmul@b
  8110   005230  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8111   005234  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8112   005238  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8113   00523C  0E00               	movlw	0
  8114   00523E  6E13               	movwf	___flmul@a^0,c
  8115   005240  0E00               	movlw	0
  8116   005242  6E14               	movwf	(___flmul@a+1)^0,c
  8117   005244  0E80               	movlw	128
  8118   005246  6E15               	movwf	(___flmul@a+2)^0,c
  8119   005248  0E0C               	movlw	12
  8120   00524A  6E16               	movwf	(___flmul@a+3)^0,c
  8121   00524C  ECC2  F01F         	call	___flmul	;wreg free
  8122   005250  C00F  F036         	movff	?___flmul,scalbnf@y
  8123   005254  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8124   005258  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8125   00525C  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8126   005260  0E66               	movlw	102
  8127   005262  262C               	addwf	scalbnf@n^0,f,c
  8128   005264  0E00               	movlw	0
  8129   005266  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8130   005268  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8131   00526A  EF40  F029         	goto	u9521
  8132   00526E  0E82               	movlw	130
  8133   005270  5C2C               	subwf	scalbnf@n^0,w,c
  8134   005272  0EFF               	movlw	255
  8135   005274  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8136   005276  B0D8               	btfsc	status,0,c
  8137   005278  EF40  F029         	goto	u9521
  8138   00527C  EF42  F029         	goto	u9520
  8139   005280                     u9521:
  8140   005280  EF72  F029         	goto	l7286
  8141   005284                     u9520:
  8142   005284  C036  F00F         	movff	scalbnf@y,___flmul@b
  8143   005288  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
  8144   00528C  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
  8145   005290  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
  8146   005294  0E00               	movlw	0
  8147   005296  6E13               	movwf	___flmul@a^0,c
  8148   005298  0E00               	movlw	0
  8149   00529A  6E14               	movwf	(___flmul@a+1)^0,c
  8150   00529C  0E80               	movlw	128
  8151   00529E  6E15               	movwf	(___flmul@a+2)^0,c
  8152   0052A0  0E0C               	movlw	12
  8153   0052A2  6E16               	movwf	(___flmul@a+3)^0,c
  8154   0052A4  ECC2  F01F         	call	___flmul	;wreg free
  8155   0052A8  C00F  F036         	movff	?___flmul,scalbnf@y
  8156   0052AC  C010  F037         	movff	?___flmul+1,scalbnf@y+1
  8157   0052B0  C011  F038         	movff	?___flmul+2,scalbnf@y+2
  8158   0052B4  C012  F039         	movff	?___flmul+3,scalbnf@y+3
  8159   0052B8  0E66               	movlw	102
  8160   0052BA  262C               	addwf	scalbnf@n^0,f,c
  8161   0052BC  0E00               	movlw	0
  8162   0052BE  222D               	addwfc	(scalbnf@n+1)^0,f,c
  8163   0052C0  AE2D               	btfss	(scalbnf@n+1)^0,7,c
  8164   0052C2  EF6C  F029         	goto	u9531
  8165   0052C6  0E82               	movlw	130
  8166   0052C8  5C2C               	subwf	scalbnf@n^0,w,c
  8167   0052CA  0EFF               	movlw	255
  8168   0052CC  582D               	subwfb	(scalbnf@n+1)^0,w,c
  8169   0052CE  B0D8               	btfsc	status,0,c
  8170   0052D0  EF6C  F029         	goto	u9531
  8171   0052D4  EF6E  F029         	goto	u9530
  8172   0052D8                     u9531:
  8173   0052D8  EF72  F029         	goto	l7286
  8174   0052DC                     u9530:
  8175   0052DC  0EFF               	movlw	255
  8176   0052DE  6E2D               	movwf	(scalbnf@n+1)^0,c
  8177   0052E0  0E82               	movlw	130
  8178   0052E2  6E2C               	movwf	scalbnf@n^0,c
  8179   0052E4                     l7286:
  8180   0052E4  0E7F               	movlw	127
  8181   0052E6  242C               	addwf	scalbnf@n^0,w,c
  8182   0052E8  6E2E               	movwf	??_scalbnf^0,c
  8183   0052EA  0E00               	movlw	0
  8184   0052EC  202D               	addwfc	(scalbnf@n+1)^0,w,c
  8185   0052EE  6E2F               	movwf	(??_scalbnf+1)^0,c
  8186   0052F0  6A30               	clrf	(??_scalbnf+2)^0,c
  8187   0052F2  6A31               	clrf	(??_scalbnf+3)^0,c
  8188   0052F4  0E17               	movlw	23
  8189   0052F6                     u9545:
  8190   0052F6  90D8               	bcf	status,0,c
  8191   0052F8  362E               	rlcf	??_scalbnf^0,f,c
  8192   0052FA  362F               	rlcf	(??_scalbnf+1)^0,f,c
  8193   0052FC  3630               	rlcf	(??_scalbnf+2)^0,f,c
  8194   0052FE  3631               	rlcf	(??_scalbnf+3)^0,f,c
  8195   005300  2EE8               	decfsz	wreg,f,c
  8196   005302  EF7B  F029         	goto	u9545
  8197   005306  C02E  F032         	movff	??_scalbnf,scalbnf@u
  8198   00530A  C02F  F033         	movff	??_scalbnf+1,scalbnf@u+1
  8199   00530E  C030  F034         	movff	??_scalbnf+2,scalbnf@u+2
  8200   005312  C031  F035         	movff	??_scalbnf+3,scalbnf@u+3
  8201   005316  C032  F00F         	movff	scalbnf@u,___flmul@b
  8202   00531A  C033  F010         	movff	scalbnf@u+1,___flmul@b+1
  8203   00531E  C034  F011         	movff	scalbnf@u+2,___flmul@b+2
  8204   005322  C035  F012         	movff	scalbnf@u+3,___flmul@b+3
  8205   005326  C036  F013         	movff	scalbnf@y,___flmul@a
  8206   00532A  C037  F014         	movff	scalbnf@y+1,___flmul@a+1
  8207   00532E  C038  F015         	movff	scalbnf@y+2,___flmul@a+2
  8208   005332  C039  F016         	movff	scalbnf@y+3,___flmul@a+3
  8209   005336  ECC2  F01F         	call	___flmul	;wreg free
  8210   00533A  C00F  F028         	movff	?___flmul,scalbnf@x
  8211   00533E  C010  F029         	movff	?___flmul+1,scalbnf@x+1
  8212   005342  C011  F02A         	movff	?___flmul+2,scalbnf@x+2
  8213   005346  C012  F02B         	movff	?___flmul+3,scalbnf@x+3
  8214   00534A  C028  F028         	movff	scalbnf@x,?_scalbnf
  8215   00534E  C029  F029         	movff	scalbnf@x+1,?_scalbnf+1
  8216   005352  C02A  F02A         	movff	scalbnf@x+2,?_scalbnf+2
  8217   005356  C02B  F02B         	movff	scalbnf@x+3,?_scalbnf+3
  8218   00535A  0012               	return		;funcret
  8219   00535C                     __end_of_scalbnf:
  8220                           	callstack 0
  8221                           
  8222 ;; *************** function _Apply_Filter *****************
  8223 ;; Defined at:
  8224 ;;		line 353 in file "newmain.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  new_value       4   80[COMRAM] float 
  8227 ;;  samples         2   84[COMRAM] PTR float 
  8228 ;;		 -> co_samples(20), temp_samples(20), 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  i               2    4[BANK0 ] int 
  8231 ;;  sum             4    0[BANK0 ] float 
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  4   80[COMRAM] float 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8241 ;;      Params:         6       0       0       0       0       0       0       0       0
  8242 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8243 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8244 ;;      Totals:         8       6       0       0       0       0       0       0       0
  8245 ;;Total ram usage:       14 bytes
  8246 ;; Hardware stack levels used: 1
  8247 ;; Hardware stack levels required when called: 2
  8248 ;; This function calls:
  8249 ;;		___fladd
  8250 ;;		___fldiv
  8251 ;; This function is called by:
  8252 ;;		_Read_Sensors
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text9
  8257   0063A2                     __ptext9:
  8258                           	callstack 0
  8259   0063A2                     _Apply_Filter:
  8260                           	callstack 27
  8261   0063A2                     
  8262                           ;newmain.c: 354:     samples[sample_index] = new_value;
  8263   0063A2  0103               	movlb	3	; () banked
  8264   0063A4  5153               	movf	_sample_index& (0+255),w,b
  8265   0063A6  0D04               	mullw	4
  8266   0063A8  CFF3 F057          	movff	prodl,??_Apply_Filter
  8267   0063AC  CFF4 F058          	movff	prodh,??_Apply_Filter+1
  8268   0063B0  5057               	movf	??_Apply_Filter^0,w,c
  8269   0063B2  2455               	addwf	Apply_Filter@samples^0,w,c
  8270   0063B4  6ED9               	movwf	fsr2l,c
  8271   0063B6  5058               	movf	(??_Apply_Filter+1)^0,w,c
  8272   0063B8  2056               	addwfc	(Apply_Filter@samples+1)^0,w,c
  8273   0063BA  6EDA               	movwf	fsr2h,c
  8274   0063BC  C051  FFDE         	movff	Apply_Filter@new_value,postinc2
  8275   0063C0  C052  FFDE         	movff	Apply_Filter@new_value+1,postinc2
  8276   0063C4  C053  FFDE         	movff	Apply_Filter@new_value+2,postinc2
  8277   0063C8  C054  FFDE         	movff	Apply_Filter@new_value+3,postinc2
  8278   0063CC                     
  8279                           ; BSR set to: 3
  8280                           ;newmain.c: 356:     float sum = 0;
  8281   0063CC  0E00               	movlw	0
  8282   0063CE  0100               	movlb	0	; () banked
  8283   0063D0  6F60               	movwf	Apply_Filter@sum& (0+255),b
  8284   0063D2  0E00               	movlw	0
  8285   0063D4  6F61               	movwf	(Apply_Filter@sum+1)& (0+255),b
  8286   0063D6  0E00               	movlw	0
  8287   0063D8  6F62               	movwf	(Apply_Filter@sum+2)& (0+255),b
  8288   0063DA  0E00               	movlw	0
  8289   0063DC  6F63               	movwf	(Apply_Filter@sum+3)& (0+255),b
  8290   0063DE                     
  8291                           ; BSR set to: 0
  8292                           ;newmain.c: 357:     for(int i = 0; i < 5; i++) {
  8293   0063DE  0E00               	movlw	0
  8294   0063E0  6F65               	movwf	(Apply_Filter@i+1)& (0+255),b
  8295   0063E2  0E00               	movlw	0
  8296   0063E4  6F64               	movwf	Apply_Filter@i& (0+255),b
  8297   0063E6                     l7324:
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;newmain.c: 358:         sum += samples[i];
  8301   0063E6  C060  F041         	movff	Apply_Filter@sum,___fladd@b
  8302   0063EA  C061  F042         	movff	Apply_Filter@sum+1,___fladd@b+1
  8303   0063EE  C062  F043         	movff	Apply_Filter@sum+2,___fladd@b+2
  8304   0063F2  C063  F044         	movff	Apply_Filter@sum+3,___fladd@b+3
  8305   0063F6  90D8               	bcf	status,0,c
  8306   0063F8  3564               	rlcf	Apply_Filter@i& (0+255),w,b
  8307   0063FA  6ED9               	movwf	fsr2l,c
  8308   0063FC  3565               	rlcf	(Apply_Filter@i+1)& (0+255),w,b
  8309   0063FE  6EDA               	movwf	fsr2h,c
  8310   006400  90D8               	bcf	status,0,c
  8311   006402  36D9               	rlcf	fsr2l,f,c
  8312   006404  36DA               	rlcf	fsr2h,f,c
  8313   006406  5055               	movf	Apply_Filter@samples^0,w,c
  8314   006408  26D9               	addwf	fsr2l,f,c
  8315   00640A  5056               	movf	(Apply_Filter@samples+1)^0,w,c
  8316   00640C  22DA               	addwfc	fsr2h,f,c
  8317   00640E  CFDE F045          	movff	postinc2,___fladd@a
  8318   006412  CFDE F046          	movff	postinc2,___fladd@a+1
  8319   006416  CFDE F047          	movff	postinc2,___fladd@a+2
  8320   00641A  CFDE F048          	movff	postinc2,___fladd@a+3
  8321   00641E  EC67  F01D         	call	___fladd	;wreg free
  8322   006422  C041  F060         	movff	?___fladd,Apply_Filter@sum
  8323   006426  C042  F061         	movff	?___fladd+1,Apply_Filter@sum+1
  8324   00642A  C043  F062         	movff	?___fladd+2,Apply_Filter@sum+2
  8325   00642E  C044  F063         	movff	?___fladd+3,Apply_Filter@sum+3
  8326   006432                     
  8327                           ;newmain.c: 359:     }
  8328   006432  0100               	movlb	0	; () banked
  8329   006434  4B64               	infsnz	Apply_Filter@i& (0+255),f,b
  8330   006436  2B65               	incf	(Apply_Filter@i+1)& (0+255),f,b
  8331   006438                     
  8332                           ; BSR set to: 0
  8333   006438  BF65               	btfsc	(Apply_Filter@i+1)& (0+255),7,b
  8334   00643A  EF28  F032         	goto	u9591
  8335   00643E  5165               	movf	(Apply_Filter@i+1)& (0+255),w,b
  8336   006440  E109               	bnz	u9590
  8337   006442  0E05               	movlw	5
  8338   006444  5D64               	subwf	Apply_Filter@i& (0+255),w,b
  8339   006446  A0D8               	btfss	status,0,c
  8340   006448  EF28  F032         	goto	u9591
  8341   00644C  EF2A  F032         	goto	u9590
  8342   006450                     u9591:
  8343   006450  EFF3  F031         	goto	l7324
  8344   006454                     u9590:
  8345   006454                     
  8346                           ; BSR set to: 0
  8347                           ;newmain.c: 360:     return sum / 5;
  8348   006454  C060  F028         	movff	Apply_Filter@sum,___fldiv@b
  8349   006458  C061  F029         	movff	Apply_Filter@sum+1,___fldiv@b+1
  8350   00645C  C062  F02A         	movff	Apply_Filter@sum+2,___fldiv@b+2
  8351   006460  C063  F02B         	movff	Apply_Filter@sum+3,___fldiv@b+3
  8352   006464  0E00               	movlw	0
  8353   006466  6E2C               	movwf	___fldiv@a^0,c
  8354   006468  0E00               	movlw	0
  8355   00646A  6E2D               	movwf	(___fldiv@a+1)^0,c
  8356   00646C  0EA0               	movlw	160
  8357   00646E  6E2E               	movwf	(___fldiv@a+2)^0,c
  8358   006470  0E40               	movlw	64
  8359   006472  6E2F               	movwf	(___fldiv@a+3)^0,c
  8360   006474  ECC4  F023         	call	___fldiv	;wreg free
  8361   006478  C028  F051         	movff	?___fldiv,?_Apply_Filter
  8362   00647C  C029  F052         	movff	?___fldiv+1,?_Apply_Filter+1
  8363   006480  C02A  F053         	movff	?___fldiv+2,?_Apply_Filter+2
  8364   006484  C02B  F054         	movff	?___fldiv+3,?_Apply_Filter+3
  8365   006488  0012               	return		;funcret
  8366   00648A                     __end_of_Apply_Filter:
  8367                           	callstack 0
  8368                           
  8369 ;; *************** function _ADC_Read *****************
  8370 ;; Defined at:
  8371 ;;		line 409 in file "newmain.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  channel         1    wreg     unsigned char 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  channel         1    4[COMRAM] unsigned char 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  2    0[COMRAM] unsigned int 
  8378 ;; Registers used:
  8379 ;;		wreg, status,2, status,0
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8385 ;;      Params:         2       0       0       0       0       0       0       0       0
  8386 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8387 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8388 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8389 ;;Total ram usage:        5 bytes
  8390 ;; Hardware stack levels used: 1
  8391 ;; Hardware stack levels required when called: 1
  8392 ;; This function calls:
  8393 ;;		Nothing
  8394 ;; This function is called by:
  8395 ;;		_main
  8396 ;;		_Read_Sensors
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text10
  8401   006C92                     __ptext10:
  8402                           	callstack 0
  8403   006C92                     _ADC_Read:
  8404                           	callstack 28
  8405                           
  8406                           ;incstack = 0
  8407                           ;ADC_Read@channel stored from wreg
  8408   006C92  6E05               	movwf	ADC_Read@channel^0,c
  8409   006C94                     
  8410                           ;newmain.c: 410:     ADCON0bits.CHS = channel;
  8411   006C94  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  8412   006C98  4603               	rlncf	??_ADC_Read^0,f,c
  8413   006C9A  4603               	rlncf	??_ADC_Read^0,f,c
  8414   006C9C  50C2               	movf	194,w,c	;volatile
  8415   006C9E  1803               	xorwf	??_ADC_Read^0,w,c
  8416   006CA0  0BC3               	andlw	-61
  8417   006CA2  1803               	xorwf	??_ADC_Read^0,w,c
  8418   006CA4  6EC2               	movwf	194,c	;volatile
  8419   006CA6                     
  8420                           ;newmain.c: 411:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  8421   006CA6  0E14               	movlw	20
  8422   006CA8                     u10757:
  8423   006CA8  2EE8               	decfsz	wreg,f,c
  8424   006CAA  D7FE               	bra	u10757
  8425   006CAC                     
  8426                           ;newmain.c: 412:     ADCON0bits.GO = 1;
  8427   006CAC  82C2               	bsf	194,1,c	;volatile
  8428   006CAE                     l261:
  8429   006CAE  B2C2               	btfsc	194,1,c	;volatile
  8430   006CB0  EF5C  F036         	goto	u9551
  8431   006CB4  EF5E  F036         	goto	u9550
  8432   006CB8                     u9551:
  8433   006CB8  EF57  F036         	goto	l261
  8434   006CBC                     u9550:
  8435   006CBC                     
  8436                           ;newmain.c: 414:     return (ADRESH << 8) | ADRESL;
  8437   006CBC  50C3               	movf	195,w,c	;volatile
  8438   006CBE  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  8439   006CC2  6A04               	clrf	(??_ADC_Read+1)^0,c
  8440   006CC4  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  8441   006CC8  6A03               	clrf	??_ADC_Read^0,c
  8442   006CCA  1003               	iorwf	??_ADC_Read^0,w,c
  8443   006CCC  6E01               	movwf	?_ADC_Read^0,c
  8444   006CCE  5004               	movf	(??_ADC_Read+1)^0,w,c
  8445   006CD0  6E02               	movwf	(?_ADC_Read+1)^0,c
  8446   006CD2  0012               	return		;funcret
  8447   006CD4                     __end_of_ADC_Read:
  8448                           	callstack 0
  8449                           
  8450 ;; *************** function _Interrupt_Init *****************
  8451 ;; Defined at:
  8452 ;;		line 417 in file "newmain.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1    wreg      void 
  8459 ;; Registers used:
  8460 ;;		None
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8466 ;;      Params:         0       0       0       0       0       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8469 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8470 ;;Total ram usage:        0 bytes
  8471 ;; Hardware stack levels used: 1
  8472 ;; Hardware stack levels required when called: 1
  8473 ;; This function calls:
  8474 ;;		Nothing
  8475 ;; This function is called by:
  8476 ;;		_main
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           	psect	text11
  8481   006E12                     __ptext11:
  8482                           	callstack 0
  8483   006E12                     _Interrupt_Init:
  8484                           	callstack 29
  8485   006E12                     
  8486                           ;newmain.c: 418:     TRISBbits.TRISB1 = 1;
  8487   006E12  8293               	bsf	147,1,c	;volatile
  8488                           
  8489                           ;newmain.c: 419:     INTCON2bits.INTEDG1 = 0;
  8490   006E14  9AF1               	bcf	241,5,c	;volatile
  8491                           
  8492                           ;newmain.c: 420:     INTCON3bits.INT1IE = 1;
  8493   006E16  86F0               	bsf	240,3,c	;volatile
  8494                           
  8495                           ;newmain.c: 421:     INTCON3bits.INT1IP = 1;
  8496   006E18  8CF0               	bsf	240,6,c	;volatile
  8497                           
  8498                           ;newmain.c: 422:     RCONbits.IPEN = 1;
  8499   006E1A  8ED0               	bsf	208,7,c	;volatile
  8500                           
  8501                           ;newmain.c: 423:     INTCONbits.GIEH = 1;
  8502   006E1C  8EF2               	bsf	242,7,c	;volatile
  8503                           
  8504                           ;newmain.c: 424:     INTCONbits.GIEL = 1;
  8505   006E1E  8CF2               	bsf	242,6,c	;volatile
  8506   006E20  0012               	return		;funcret
  8507   006E22                     __end_of_Interrupt_Init:
  8508                           	callstack 0
  8509                           
  8510 ;; *************** function _Handle_Test_Events *****************
  8511 ;; Defined at:
  8512 ;;		line 244 in file "newmain.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;		None
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;  test_data      50  202[BANK1 ] unsigned char [50]
  8517 ;;  water_used      4  252[BANK1 ] float 
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1    wreg      void 
  8520 ;; Registers used:
  8521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8527 ;;      Params:         0       0       0       0       0       0       0       0       0
  8528 ;;      Locals:         0       0      54       0       0       0       0       0       0
  8529 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8530 ;;      Totals:         0       2      54       0       0       0       0       0       0
  8531 ;;Total ram usage:       56 bytes
  8532 ;; Hardware stack levels used: 1
  8533 ;; Hardware stack levels required when called: 10
  8534 ;; This function calls:
  8535 ;;		_Send_History_Event
  8536 ;;		___flsub
  8537 ;;		___xxtofl
  8538 ;;		_sprintf
  8539 ;; This function is called by:
  8540 ;;		_main
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text12
  8545   005B6E                     __ptext12:
  8546                           	callstack 0
  8547   005B6E                     _Handle_Test_Events:
  8548                           	callstack 20
  8549   005B6E                     
  8550                           ;newmain.c: 245:     static bool prev_test = 0;;newmain.c: 248:     if(trigger_test && !
      +                          prev_test) {
  8551   005B6E  0100               	movlb	0	; () banked
  8552   005B70  51EE               	movf	_trigger_test& (0+255),w,b
  8553   005B72  B4D8               	btfsc	status,2,c
  8554   005B74  EFBE  F02D         	goto	u10491
  8555   005B78  EFC0  F02D         	goto	u10490
  8556   005B7C                     u10491:
  8557   005B7C  EFD4  F02D         	goto	l7954
  8558   005B80                     u10490:
  8559   005B80                     
  8560                           ; BSR set to: 0
  8561   005B80  0103               	movlb	3	; () banked
  8562   005B82  5152               	movf	Handle_Test_Events@prev_test& (0+255),w,b
  8563   005B84  A4D8               	btfss	status,2,c
  8564   005B86  EFC7  F02D         	goto	u10501
  8565   005B8A  EFC9  F02D         	goto	u10500
  8566   005B8E                     u10501:
  8567   005B8E  EFD4  F02D         	goto	l7954
  8568   005B92                     u10500:
  8569   005B92                     
  8570                           ; BSR set to: 3
  8571                           ;newmain.c: 249:         Send_History_Event("test_start", "");
  8572   005B92  0EB9               	movlw	low STR_8
  8573   005B94  0100               	movlb	0	; () banked
  8574   005B96  6FDE               	movwf	Send_History_Event@event_type& (0+255),b
  8575   005B98  0E7F               	movlw	high STR_8
  8576   005B9A  6FDF               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  8577   005B9C  0E61               	movlw	low (STR_16+29)
  8578   005B9E  6FE0               	movwf	Send_History_Event@extra_data& (0+255),b
  8579   005BA0  0E7F               	movlw	high (STR_16+29)
  8580   005BA2  6FE1               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  8581   005BA4  EC67  F034         	call	_Send_History_Event	;wreg free
  8582   005BA8                     l7954:
  8583                           
  8584                           ;newmain.c: 253:     if(!trigger_test && prev_test) {
  8585   005BA8  0100               	movlb	0	; () banked
  8586   005BAA  51EE               	movf	_trigger_test& (0+255),w,b
  8587   005BAC  A4D8               	btfss	status,2,c
  8588   005BAE  EFDB  F02D         	goto	u10511
  8589   005BB2  EFDD  F02D         	goto	u10510
  8590   005BB6                     u10511:
  8591   005BB6  EF43  F02E         	goto	l7970
  8592   005BBA                     u10510:
  8593   005BBA                     
  8594                           ; BSR set to: 0
  8595   005BBA  0103               	movlb	3	; () banked
  8596   005BBC  5152               	movf	Handle_Test_Events@prev_test& (0+255),w,b
  8597   005BBE  B4D8               	btfsc	status,2,c
  8598   005BC0  EFE4  F02D         	goto	u10521
  8599   005BC4  EFE6  F02D         	goto	u10520
  8600   005BC8                     u10521:
  8601   005BC8  EF43  F02E         	goto	l7970
  8602   005BCC                     u10520:
  8603   005BCC                     
  8604                           ; BSR set to: 3
  8605                           ;newmain.c: 254:         float water_used = total_flow - test_start_flow;
  8606   005BCC  C330  F051         	movff	_total_flow,___flsub@b
  8607   005BD0  C331  F052         	movff	_total_flow+1,___flsub@b+1
  8608   005BD4  C332  F053         	movff	_total_flow+2,___flsub@b+2
  8609   005BD8  C333  F054         	movff	_total_flow+3,___flsub@b+3
  8610   005BDC  C314  F001         	movff	_test_start_flow,___xxtofl@val
  8611   005BE0  C315  F002         	movff	_test_start_flow+1,___xxtofl@val+1
  8612   005BE4  C316  F003         	movff	_test_start_flow+2,___xxtofl@val+2
  8613   005BE8  C317  F004         	movff	_test_start_flow+3,___xxtofl@val+3
  8614   005BEC  0E00               	movlw	0
  8615   005BEE  ECB7  F02A         	call	___xxtofl
  8616   005BF2  C001  F055         	movff	?___xxtofl,___flsub@a
  8617   005BF6  C002  F056         	movff	?___xxtofl+1,___flsub@a+1
  8618   005BFA  C003  F057         	movff	?___xxtofl+2,___flsub@a+2
  8619   005BFE  C004  F058         	movff	?___xxtofl+3,___flsub@a+3
  8620   005C02  EC04  F036         	call	___flsub	;wreg free
  8621   005C06  C051  F1FC         	movff	?___flsub,Handle_Test_Events@water_used
  8622   005C0A  C052  F1FD         	movff	?___flsub+1,Handle_Test_Events@water_used+1
  8623   005C0E  C053  F1FE         	movff	?___flsub+2,Handle_Test_Events@water_used+2
  8624   005C12  C054  F1FF         	movff	?___flsub+3,Handle_Test_Events@water_used+3
  8625   005C16                     
  8626                           ;newmain.c: 256:         char test_data[50];;newmain.c: 257:         sprintf(test_data, 
      +                          ",\"water\":%.2f", water_used);
  8627   005C16  0ECA               	movlw	low Handle_Test_Events@test_data
  8628   005C18  0100               	movlb	0	; () banked
  8629   005C1A  6FB0               	movwf	sprintf@s& (0+255),b
  8630   005C1C  0E01               	movlw	high Handle_Test_Events@test_data
  8631   005C1E  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  8632   005C20  0E71               	movlw	low (STR_6+15)
  8633   005C22  6FB2               	movwf	sprintf@fmt& (0+255),b
  8634   005C24  0E7F               	movlw	high (STR_6+15)
  8635   005C26  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  8636   005C28  C1FC  F0B4         	movff	Handle_Test_Events@water_used,?_sprintf+4
  8637   005C2C  C1FD  F0B5         	movff	Handle_Test_Events@water_used+1,?_sprintf+5
  8638   005C30  C1FE  F0B6         	movff	Handle_Test_Events@water_used+2,?_sprintf+6
  8639   005C34  C1FF  F0B7         	movff	Handle_Test_Events@water_used+3,?_sprintf+7
  8640   005C38  EC27  F036         	call	_sprintf	;wreg free
  8641   005C3C                     
  8642                           ;newmain.c: 258:         Send_History_Event("test_end", test_data);
  8643   005C3C  0ED7               	movlw	low STR_11
  8644   005C3E  0100               	movlb	0	; () banked
  8645   005C40  6FDE               	movwf	Send_History_Event@event_type& (0+255),b
  8646   005C42  0E7F               	movlw	high STR_11
  8647   005C44  6FDF               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  8648   005C46  0ECA               	movlw	low Handle_Test_Events@test_data
  8649   005C48  6FE0               	movwf	Send_History_Event@extra_data& (0+255),b
  8650   005C4A  0E01               	movlw	high Handle_Test_Events@test_data
  8651   005C4C  6FE1               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  8652   005C4E  EC67  F034         	call	_Send_History_Event	;wreg free
  8653   005C52                     
  8654                           ;newmain.c: 261:         _delay((unsigned long)((3000)*(8000000/4000.0)));
  8655   005C52  0E1F               	movlw	31
  8656   005C54  0100               	movlb	0	; () banked
  8657   005C56  6FE3               	movwf	(??_Handle_Test_Events+1)& (0+255),b
  8658   005C58  0E71               	movlw	113
  8659   005C5A  6FE2               	movwf	??_Handle_Test_Events& (0+255),b
  8660   005C5C  0E1E               	movlw	30
  8661   005C5E                     u10767:
  8662   005C5E  2EE8               	decfsz	wreg,f,c
  8663   005C60  D7FE               	bra	u10767
  8664   005C62  2FE2               	decfsz	??_Handle_Test_Events& (0+255),f,b
  8665   005C64  D7FC               	bra	u10767
  8666   005C66  2FE3               	decfsz	(??_Handle_Test_Events+1)& (0+255),f,b
  8667   005C68  D7FA               	bra	u10767
  8668   005C6A  0000               	nop	
  8669   005C6C                     
  8670                           ;newmain.c: 262:         total_flow = 0.0;
  8671   005C6C  0E00               	movlw	0
  8672   005C6E  0103               	movlb	3	; () banked
  8673   005C70  6F30               	movwf	_total_flow& (0+255),b
  8674   005C72  0E00               	movlw	0
  8675   005C74  6F31               	movwf	(_total_flow+1)& (0+255),b
  8676   005C76  0E00               	movlw	0
  8677   005C78  6F32               	movwf	(_total_flow+2)& (0+255),b
  8678   005C7A  0E00               	movlw	0
  8679   005C7C  6F33               	movwf	(_total_flow+3)& (0+255),b
  8680   005C7E                     
  8681                           ; BSR set to: 3
  8682                           ;newmain.c: 263:         pulse_count = 0;
  8683   005C7E  0E00               	movlw	0
  8684   005C80  6F4F               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  8685   005C82  0E00               	movlw	0
  8686   005C84  6F4E               	movwf	_pulse_count& (0+255),b	;volatile
  8687   005C86                     l7970:
  8688                           
  8689                           ;newmain.c: 266:     prev_test = trigger_test;
  8690   005C86  C0EE  F352         	movff	_trigger_test,Handle_Test_Events@prev_test
  8691   005C8A  0012               	return		;funcret
  8692   005C8C                     __end_of_Handle_Test_Events:
  8693                           	callstack 0
  8694                           
  8695 ;; *************** function ___xxtofl *****************
  8696 ;; Defined at:
  8697 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  sign            1    wreg     unsigned char 
  8700 ;;  val             4    0[COMRAM] long 
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;  sign            1    8[COMRAM] unsigned char 
  8703 ;;  arg             4   10[COMRAM] unsigned long 
  8704 ;;  exp             1    9[COMRAM] unsigned char 
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  4    0[COMRAM] unsigned char 
  8707 ;; Registers used:
  8708 ;;		wreg, status,2, status,0
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8714 ;;      Params:         4       0       0       0       0       0       0       0       0
  8715 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8716 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8717 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8718 ;;Total ram usage:       14 bytes
  8719 ;; Hardware stack levels used: 1
  8720 ;; Hardware stack levels required when called: 1
  8721 ;; This function calls:
  8722 ;;		Nothing
  8723 ;; This function is called by:
  8724 ;;		_main
  8725 ;;		_Handle_Test_Events
  8726 ;;		_Read_Sensors
  8727 ;;		_powf
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           	psect	text13
  8732   00556E                     __ptext13:
  8733                           	callstack 0
  8734   00556E                     ___xxtofl:
  8735                           	callstack 29
  8736                           
  8737                           ;incstack = 0
  8738                           ;___xxtofl@sign stored from wreg
  8739   00556E  6E09               	movwf	___xxtofl@sign^0,c
  8740   005570  5009               	movf	___xxtofl@sign^0,w,c
  8741   005572  B4D8               	btfsc	status,2,c
  8742   005574  EFBE  F02A         	goto	u9241
  8743   005578  EFC0  F02A         	goto	u9240
  8744   00557C                     u9241:
  8745   00557C  EFE2  F02A         	goto	l928
  8746   005580                     u9240:
  8747   005580  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8748   005582  EFC7  F02A         	goto	u9250
  8749   005586  EFC5  F02A         	goto	u9251
  8750   00558A                     u9251:
  8751   00558A  EFE2  F02A         	goto	l928
  8752   00558E                     u9250:
  8753   00558E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8754   005592  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8755   005596  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8756   00559A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8757   00559E  1E05               	comf	??___xxtofl^0,f,c
  8758   0055A0  1E06               	comf	(??___xxtofl+1)^0,f,c
  8759   0055A2  1E07               	comf	(??___xxtofl+2)^0,f,c
  8760   0055A4  1E08               	comf	(??___xxtofl+3)^0,f,c
  8761   0055A6  2A05               	incf	??___xxtofl^0,f,c
  8762   0055A8  0E00               	movlw	0
  8763   0055AA  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8764   0055AC  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8765   0055AE  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8766   0055B0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8767   0055B4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8768   0055B8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8769   0055BC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8770   0055C0  EFEA  F02A         	goto	l7146
  8771   0055C4                     l928:
  8772   0055C4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8773   0055C8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8774   0055CC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8775   0055D0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8776   0055D4                     l7146:
  8777   0055D4  5001               	movf	___xxtofl@val^0,w,c
  8778   0055D6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8779   0055D8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8780   0055DA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8781   0055DC  A4D8               	btfss	status,2,c
  8782   0055DE  EFF3  F02A         	goto	u9261
  8783   0055E2  EFF5  F02A         	goto	u9260
  8784   0055E6                     u9261:
  8785   0055E6  EFFF  F02A         	goto	l7152
  8786   0055EA                     u9260:
  8787   0055EA  0E00               	movlw	0
  8788   0055EC  6E01               	movwf	?___xxtofl^0,c
  8789   0055EE  0E00               	movlw	0
  8790   0055F0  6E02               	movwf	(?___xxtofl+1)^0,c
  8791   0055F2  0E00               	movlw	0
  8792   0055F4  6E03               	movwf	(?___xxtofl+2)^0,c
  8793   0055F6  0E00               	movlw	0
  8794   0055F8  6E04               	movwf	(?___xxtofl+3)^0,c
  8795   0055FA  EF90  F02B         	goto	l931
  8796   0055FE                     l7152:
  8797   0055FE  0E96               	movlw	150
  8798   005600  6E0A               	movwf	___xxtofl@exp^0,c
  8799   005602  EF09  F02B         	goto	l7156
  8800   005606                     l7154:
  8801   005606  2A0A               	incf	___xxtofl@exp^0,f,c
  8802   005608  90D8               	bcf	status,0,c
  8803   00560A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8804   00560C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8805   00560E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8806   005610  320B               	rrcf	___xxtofl@arg^0,f,c
  8807   005612                     l7156:
  8808   005612  0E00               	movlw	0
  8809   005614  140B               	andwf	___xxtofl@arg^0,w,c
  8810   005616  6E05               	movwf	??___xxtofl^0,c
  8811   005618  0E00               	movlw	0
  8812   00561A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8813   00561C  6E06               	movwf	(??___xxtofl+1)^0,c
  8814   00561E  0E00               	movlw	0
  8815   005620  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8816   005622  6E07               	movwf	(??___xxtofl+2)^0,c
  8817   005624  0EFE               	movlw	254
  8818   005626  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8819   005628  6E08               	movwf	(??___xxtofl+3)^0,c
  8820   00562A  5005               	movf	??___xxtofl^0,w,c
  8821   00562C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8822   00562E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8823   005630  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8824   005632  A4D8               	btfss	status,2,c
  8825   005634  EF1E  F02B         	goto	u9271
  8826   005638  EF20  F02B         	goto	u9270
  8827   00563C                     u9271:
  8828   00563C  EF03  F02B         	goto	l7154
  8829   005640                     u9270:
  8830   005640  EF2E  F02B         	goto	l935
  8831   005644                     l7158:
  8832   005644  2A0A               	incf	___xxtofl@exp^0,f,c
  8833   005646  0E01               	movlw	1
  8834   005648  260B               	addwf	___xxtofl@arg^0,f,c
  8835   00564A  0E00               	movlw	0
  8836   00564C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8837   00564E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8838   005650  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8839   005652  90D8               	bcf	status,0,c
  8840   005654  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8841   005656  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8842   005658  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8843   00565A  320B               	rrcf	___xxtofl@arg^0,f,c
  8844   00565C                     l935:
  8845   00565C  0E00               	movlw	0
  8846   00565E  140B               	andwf	___xxtofl@arg^0,w,c
  8847   005660  6E05               	movwf	??___xxtofl^0,c
  8848   005662  0E00               	movlw	0
  8849   005664  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8850   005666  6E06               	movwf	(??___xxtofl+1)^0,c
  8851   005668  0E00               	movlw	0
  8852   00566A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8853   00566C  6E07               	movwf	(??___xxtofl+2)^0,c
  8854   00566E  0EFF               	movlw	255
  8855   005670  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8856   005672  6E08               	movwf	(??___xxtofl+3)^0,c
  8857   005674  5005               	movf	??___xxtofl^0,w,c
  8858   005676  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8859   005678  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8860   00567A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8861   00567C  A4D8               	btfss	status,2,c
  8862   00567E  EF43  F02B         	goto	u9281
  8863   005682  EF45  F02B         	goto	u9280
  8864   005686                     u9281:
  8865   005686  EF22  F02B         	goto	l7158
  8866   00568A                     u9280:
  8867   00568A  EF4D  F02B         	goto	l7166
  8868   00568E                     l7164:
  8869   00568E  060A               	decf	___xxtofl@exp^0,f,c
  8870   005690  90D8               	bcf	status,0,c
  8871   005692  360B               	rlcf	___xxtofl@arg^0,f,c
  8872   005694  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8873   005696  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8874   005698  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8875   00569A                     l7166:
  8876   00569A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8877   00569C  EF52  F02B         	goto	u9291
  8878   0056A0  EF54  F02B         	goto	u9290
  8879   0056A4                     u9291:
  8880   0056A4  EF5C  F02B         	goto	l942
  8881   0056A8                     u9290:
  8882   0056A8  0E02               	movlw	2
  8883   0056AA  600A               	cpfslt	___xxtofl@exp^0,c
  8884   0056AC  EF5A  F02B         	goto	u9301
  8885   0056B0  EF5C  F02B         	goto	u9300
  8886   0056B4                     u9301:
  8887   0056B4  EF47  F02B         	goto	l7164
  8888   0056B8                     u9300:
  8889   0056B8                     l942:
  8890   0056B8  B00A               	btfsc	___xxtofl@exp^0,0,c
  8891   0056BA  EF61  F02B         	goto	u9311
  8892   0056BE  EF63  F02B         	goto	u9310
  8893   0056C2                     u9311:
  8894   0056C2  EF64  F02B         	goto	l7172
  8895   0056C6                     u9310:
  8896   0056C6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8897   0056C8                     l7172:
  8898   0056C8  90D8               	bcf	status,0,c
  8899   0056CA  320A               	rrcf	___xxtofl@exp^0,f,c
  8900   0056CC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8901   0056D0  6A06               	clrf	(??___xxtofl+1)^0,c
  8902   0056D2  6A07               	clrf	(??___xxtofl+2)^0,c
  8903   0056D4  6A08               	clrf	(??___xxtofl+3)^0,c
  8904   0056D6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8905   0056DA  6A07               	clrf	(??___xxtofl+2)^0,c
  8906   0056DC  6A06               	clrf	(??___xxtofl+1)^0,c
  8907   0056DE  6A05               	clrf	??___xxtofl^0,c
  8908   0056E0  5005               	movf	??___xxtofl^0,w,c
  8909   0056E2  120B               	iorwf	___xxtofl@arg^0,f,c
  8910   0056E4  5006               	movf	(??___xxtofl+1)^0,w,c
  8911   0056E6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8912   0056E8  5007               	movf	(??___xxtofl+2)^0,w,c
  8913   0056EA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8914   0056EC  5008               	movf	(??___xxtofl+3)^0,w,c
  8915   0056EE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8916   0056F0  5009               	movf	___xxtofl@sign^0,w,c
  8917   0056F2  B4D8               	btfsc	status,2,c
  8918   0056F4  EF7E  F02B         	goto	u9321
  8919   0056F8  EF80  F02B         	goto	u9320
  8920   0056FC                     u9321:
  8921   0056FC  EF88  F02B         	goto	l7182
  8922   005700                     u9320:
  8923   005700  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8924   005702  EF87  F02B         	goto	u9330
  8925   005706  EF85  F02B         	goto	u9331
  8926   00570A                     u9331:
  8927   00570A  EF88  F02B         	goto	l7182
  8928   00570E                     u9330:
  8929   00570E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8930   005710                     l7182:
  8931   005710  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8932   005714  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8933   005718  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8934   00571C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8935   005720                     l931:
  8936   005720  0012               	return		;funcret
  8937   005722                     __end_of___xxtofl:
  8938                           	callstack 0
  8939                           
  8940 ;; *************** function _Handle_Shutdown_Events *****************
  8941 ;; Defined at:
  8942 ;;		line 269 in file "newmain.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;		None
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;		None
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  1    wreg      void 
  8949 ;; Registers used:
  8950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8956 ;;      Params:         0       0       0       0       0       0       0       0       0
  8957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8960 ;;Total ram usage:        0 bytes
  8961 ;; Hardware stack levels used: 1
  8962 ;; Hardware stack levels required when called: 10
  8963 ;; This function calls:
  8964 ;;		_Send_History_Event
  8965 ;; This function is called by:
  8966 ;;		_main
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text14
  8971   0069EA                     __ptext14:
  8972                           	callstack 0
  8973   0069EA                     _Handle_Shutdown_Events:
  8974                           	callstack 20
  8975   0069EA                     
  8976                           ;newmain.c: 270:     static bool prev_shutdown = 0;;newmain.c: 273:     if(shutdown_syst
      +                          em && !prev_shutdown) {
  8977   0069EA  0100               	movlb	0	; () banked
  8978   0069EC  51EF               	movf	_shutdown_system& (0+255),w,b
  8979   0069EE  B4D8               	btfsc	status,2,c
  8980   0069F0  EFFC  F034         	goto	u10531
  8981   0069F4  EFFE  F034         	goto	u10530
  8982   0069F8                     u10531:
  8983   0069F8  EF12  F035         	goto	l7978
  8984   0069FC                     u10530:
  8985   0069FC                     
  8986                           ; BSR set to: 0
  8987   0069FC  0103               	movlb	3	; () banked
  8988   0069FE  5151               	movf	Handle_Shutdown_Events@prev_shutdown& (0+255),w,b
  8989   006A00  A4D8               	btfss	status,2,c
  8990   006A02  EF05  F035         	goto	u10541
  8991   006A06  EF07  F035         	goto	u10540
  8992   006A0A                     u10541:
  8993   006A0A  EF12  F035         	goto	l7978
  8994   006A0E                     u10540:
  8995   006A0E                     
  8996                           ; BSR set to: 3
  8997                           ;newmain.c: 274:         Send_History_Event("shutdown", "");
  8998   006A0E  0EE0               	movlw	low STR_12
  8999   006A10  0100               	movlb	0	; () banked
  9000   006A12  6FDE               	movwf	Send_History_Event@event_type& (0+255),b
  9001   006A14  0E7F               	movlw	high STR_12
  9002   006A16  6FDF               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9003   006A18  0E61               	movlw	low (STR_16+29)
  9004   006A1A  6FE0               	movwf	Send_History_Event@extra_data& (0+255),b
  9005   006A1C  0E7F               	movlw	high (STR_16+29)
  9006   006A1E  6FE1               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9007   006A20  EC67  F034         	call	_Send_History_Event	;wreg free
  9008   006A24                     l7978:
  9009                           
  9010                           ;newmain.c: 278:     if(!shutdown_system && prev_shutdown) {
  9011   006A24  0100               	movlb	0	; () banked
  9012   006A26  51EF               	movf	_shutdown_system& (0+255),w,b
  9013   006A28  A4D8               	btfss	status,2,c
  9014   006A2A  EF19  F035         	goto	u10551
  9015   006A2E  EF1B  F035         	goto	u10550
  9016   006A32                     u10551:
  9017   006A32  EF2F  F035         	goto	l7984
  9018   006A36                     u10550:
  9019   006A36                     
  9020                           ; BSR set to: 0
  9021   006A36  0103               	movlb	3	; () banked
  9022   006A38  5151               	movf	Handle_Shutdown_Events@prev_shutdown& (0+255),w,b
  9023   006A3A  B4D8               	btfsc	status,2,c
  9024   006A3C  EF22  F035         	goto	u10561
  9025   006A40  EF24  F035         	goto	u10560
  9026   006A44                     u10561:
  9027   006A44  EF2F  F035         	goto	l7984
  9028   006A48                     u10560:
  9029   006A48                     
  9030                           ; BSR set to: 3
  9031                           ;newmain.c: 279:         Send_History_Event("resume", "");
  9032   006A48  0EF0               	movlw	low STR_14
  9033   006A4A  0100               	movlb	0	; () banked
  9034   006A4C  6FDE               	movwf	Send_History_Event@event_type& (0+255),b
  9035   006A4E  0E7F               	movlw	high STR_14
  9036   006A50  6FDF               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9037   006A52  0E61               	movlw	low (STR_16+29)
  9038   006A54  6FE0               	movwf	Send_History_Event@extra_data& (0+255),b
  9039   006A56  0E7F               	movlw	high (STR_16+29)
  9040   006A58  6FE1               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9041   006A5A  EC67  F034         	call	_Send_History_Event	;wreg free
  9042   006A5E                     l7984:
  9043                           
  9044                           ;newmain.c: 282:     prev_shutdown = shutdown_system;
  9045   006A5E  C0EF  F351         	movff	_shutdown_system,Handle_Shutdown_Events@prev_shutdown
  9046   006A62  0012               	return		;funcret
  9047   006A64                     __end_of_Handle_Shutdown_Events:
  9048                           	callstack 0
  9049                           
  9050 ;; *************** function _Handle_Fire_Events *****************
  9051 ;; Defined at:
  9052 ;;		line 202 in file "newmain.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;		None
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;  end_data      150    0[BANK2 ] unsigned char [150]
  9057 ;;  water_used      4  136[BANK0 ] float 
  9058 ;;  duration        4  132[BANK0 ] unsigned long 
  9059 ;;  start_data    100  150[BANK2 ] unsigned char [100]
  9060 ;; Return value:  Size  Location     Type
  9061 ;;                  1    wreg      void 
  9062 ;; Registers used:
  9063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9064 ;; Tracked objects:
  9065 ;;		On entry : 0/0
  9066 ;;		On exit  : 0/0
  9067 ;;		Unchanged: 0/0
  9068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9069 ;;      Params:         0       0       0       0       0       0       0       0       0
  9070 ;;      Locals:         0       8       0     250       0       0       0       0       0
  9071 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9072 ;;      Totals:         0      10       0     250       0       0       0       0       0
  9073 ;;Total ram usage:      260 bytes
  9074 ;; Hardware stack levels used: 1
  9075 ;; Hardware stack levels required when called: 10
  9076 ;; This function calls:
  9077 ;;		_Send_History_Event
  9078 ;;		___flge
  9079 ;;		___flsub
  9080 ;;		___lldiv
  9081 ;;		_sprintf
  9082 ;;		_strcpy
  9083 ;; This function is called by:
  9084 ;;		_main
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           	psect	text15
  9089   004E9E                     __ptext15:
  9090                           	callstack 0
  9091   004E9E                     _Handle_Fire_Events:
  9092                           	callstack 20
  9093   004E9E                     
  9094                           ;newmain.c: 204:     if(fire_alarm && !prev_fire_alarm) {
  9095   004E9E  0103               	movlb	3	; () banked
  9096   004EA0  5155               	movf	_fire_alarm& (0+255),w,b
  9097   004EA2  B4D8               	btfsc	status,2,c
  9098   004EA4  EF56  F027         	goto	u10421
  9099   004EA8  EF58  F027         	goto	u10420
  9100   004EAC                     u10421:
  9101   004EAC  EF01  F028         	goto	l7930
  9102   004EB0                     u10420:
  9103   004EB0                     
  9104                           ; BSR set to: 3
  9105   004EB0  5154               	movf	_prev_fire_alarm& (0+255),w,b
  9106   004EB2  A4D8               	btfss	status,2,c
  9107   004EB4  EF5E  F027         	goto	u10431
  9108   004EB8  EF60  F027         	goto	u10430
  9109   004EBC                     u10431:
  9110   004EBC  EF01  F028         	goto	l7930
  9111   004EC0                     u10430:
  9112   004EC0                     
  9113                           ; BSR set to: 3
  9114                           ;newmain.c: 205:         fire_start_time = system_millis;
  9115   004EC0  C2FA  F328         	movff	_system_millis,_fire_start_time
  9116   004EC4  C2FB  F329         	movff	_system_millis+1,_fire_start_time+1
  9117   004EC8  C2FC  F32A         	movff	_system_millis+2,_fire_start_time+2
  9118   004ECC  C2FD  F32B         	movff	_system_millis+3,_fire_start_time+3
  9119                           
  9120                           ;newmain.c: 206:         fire_start_temp = temperature;
  9121   004ED0  C344  F324         	movff	_temperature,_fire_start_temp
  9122   004ED4  C345  F325         	movff	_temperature+1,_fire_start_temp+1
  9123   004ED8  C346  F326         	movff	_temperature+2,_fire_start_temp+2
  9124   004EDC  C347  F327         	movff	_temperature+3,_fire_start_temp+3
  9125                           
  9126                           ;newmain.c: 207:         fire_start_flame = flame_intensity;
  9127   004EE0  C340  F320         	movff	_flame_intensity,_fire_start_flame
  9128   004EE4  C341  F321         	movff	_flame_intensity+1,_fire_start_flame+1
  9129   004EE8  C342  F322         	movff	_flame_intensity+2,_fire_start_flame+2
  9130   004EEC  C343  F323         	movff	_flame_intensity+3,_fire_start_flame+3
  9131                           
  9132                           ;newmain.c: 208:         fire_start_co = co_ppm;
  9133   004EF0  C338  F31C         	movff	_co_ppm,_fire_start_co
  9134   004EF4  C339  F31D         	movff	_co_ppm+1,_fire_start_co+1
  9135   004EF8  C33A  F31E         	movff	_co_ppm+2,_fire_start_co+2
  9136   004EFC  C33B  F31F         	movff	_co_ppm+3,_fire_start_co+3
  9137                           
  9138                           ;newmain.c: 209:         fire_start_flow = total_flow;
  9139   004F00  C330  F318         	movff	_total_flow,_fire_start_flow
  9140   004F04  C331  F319         	movff	_total_flow+1,_fire_start_flow+1
  9141   004F08  C332  F31A         	movff	_total_flow+2,_fire_start_flow+2
  9142   004F0C  C333  F31B         	movff	_total_flow+3,_fire_start_flow+3
  9143   004F10                     
  9144                           ; BSR set to: 3
  9145                           ;newmain.c: 212:         if(flame_detected) {
  9146   004F10  505E               	movf	_flame_detected^0,w,c
  9147   004F12  B4D8               	btfsc	status,2,c
  9148   004F14  EF8E  F027         	goto	u10441
  9149   004F18  EF90  F027         	goto	u10440
  9150   004F1C                     u10441:
  9151   004F1C  EF9C  F027         	goto	l7918
  9152   004F20                     u10440:
  9153   004F20                     
  9154                           ; BSR set to: 3
  9155                           ;newmain.c: 213:             strcpy(fire_trigger_sensor, "flame_sensor");
  9156   004F20  0EA8               	movlw	low _fire_trigger_sensor
  9157   004F22  6E01               	movwf	strcpy@dest^0,c
  9158   004F24  0E03               	movlw	high _fire_trigger_sensor
  9159   004F26  6E02               	movwf	(strcpy@dest+1)^0,c
  9160   004F28  0EA1               	movlw	low STR_1
  9161   004F2A  6E03               	movwf	strcpy@src^0,c
  9162   004F2C  0E7F               	movlw	high STR_1
  9163   004F2E  6E04               	movwf	(strcpy@src+1)^0,c
  9164   004F30  EC8A  F036         	call	_strcpy	;wreg free
  9165                           
  9166                           ;newmain.c: 214:         } else if(temperature >= 40.0) {
  9167   004F34  EFE7  F027         	goto	l7926
  9168   004F38                     l7918:
  9169                           
  9170                           ; BSR set to: 3
  9171   004F38  C344  F060         	movff	_temperature,___flge@ff1
  9172   004F3C  C345  F061         	movff	_temperature+1,___flge@ff1+1
  9173   004F40  C346  F062         	movff	_temperature+2,___flge@ff1+2
  9174   004F44  C347  F063         	movff	_temperature+3,___flge@ff1+3
  9175   004F48  0E00               	movlw	0
  9176   004F4A  0100               	movlb	0	; () banked
  9177   004F4C  6F64               	movwf	___flge@ff2& (0+255),b
  9178   004F4E  0E00               	movlw	0
  9179   004F50  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9180   004F52  0E20               	movlw	32
  9181   004F54  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9182   004F56  0E42               	movlw	66
  9183   004F58  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9184   004F5A  EC57  F02F         	call	___flge	;wreg free
  9185   004F5E  0100               	movlb	0	; () banked
  9186   004F60  A0D8               	btfss	status,0,c
  9187   004F62  EFB5  F027         	goto	u10451
  9188   004F66  EFB7  F027         	goto	u10450
  9189   004F6A                     u10451:
  9190   004F6A  EFC3  F027         	goto	l7922
  9191   004F6E                     u10450:
  9192   004F6E                     
  9193                           ; BSR set to: 0
  9194                           ;newmain.c: 215:             strcpy(fire_trigger_sensor, "temperature_sensor");
  9195   004F6E  0EA8               	movlw	low _fire_trigger_sensor
  9196   004F70  6E01               	movwf	strcpy@dest^0,c
  9197   004F72  0E03               	movlw	high _fire_trigger_sensor
  9198   004F74  6E02               	movwf	(strcpy@dest+1)^0,c
  9199   004F76  0E7F               	movlw	low STR_2
  9200   004F78  6E03               	movwf	strcpy@src^0,c
  9201   004F7A  0E7F               	movlw	high STR_2
  9202   004F7C  6E04               	movwf	(strcpy@src+1)^0,c
  9203   004F7E  EC8A  F036         	call	_strcpy	;wreg free
  9204                           
  9205                           ;newmain.c: 216:         } else if(co_ppm >= 50.0) {
  9206   004F82  EFE7  F027         	goto	l7926
  9207   004F86                     l7922:
  9208                           
  9209                           ; BSR set to: 0
  9210   004F86  C338  F060         	movff	_co_ppm,___flge@ff1
  9211   004F8A  C339  F061         	movff	_co_ppm+1,___flge@ff1+1
  9212   004F8E  C33A  F062         	movff	_co_ppm+2,___flge@ff1+2
  9213   004F92  C33B  F063         	movff	_co_ppm+3,___flge@ff1+3
  9214   004F96  0E00               	movlw	0
  9215   004F98  6F64               	movwf	___flge@ff2& (0+255),b
  9216   004F9A  0E00               	movlw	0
  9217   004F9C  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9218   004F9E  0E48               	movlw	72
  9219   004FA0  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9220   004FA2  0E42               	movlw	66
  9221   004FA4  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9222   004FA6  EC57  F02F         	call	___flge	;wreg free
  9223   004FAA  0100               	movlb	0	; () banked
  9224   004FAC  A0D8               	btfss	status,0,c
  9225   004FAE  EFDB  F027         	goto	u10461
  9226   004FB2  EFDD  F027         	goto	u10460
  9227   004FB6                     u10461:
  9228   004FB6  EFE7  F027         	goto	l7926
  9229   004FBA                     u10460:
  9230   004FBA                     
  9231                           ; BSR set to: 0
  9232                           ;newmain.c: 217:             strcpy(fire_trigger_sensor, "co_sensor");
  9233   004FBA  0EA8               	movlw	low _fire_trigger_sensor
  9234   004FBC  6E01               	movwf	strcpy@dest^0,c
  9235   004FBE  0E03               	movlw	high _fire_trigger_sensor
  9236   004FC0  6E02               	movwf	(strcpy@dest+1)^0,c
  9237   004FC2  0EC4               	movlw	low STR_3
  9238   004FC4  6E03               	movwf	strcpy@src^0,c
  9239   004FC6  0E7F               	movlw	high STR_3
  9240   004FC8  6E04               	movwf	(strcpy@src+1)^0,c
  9241   004FCA  EC8A  F036         	call	_strcpy	;wreg free
  9242   004FCE                     l7926:
  9243                           
  9244                           ;newmain.c: 221:         char start_data[100];;newmain.c: 222:         sprintf(start_dat
      +                          a, ",\"sensor\":\"%s\"", fire_trigger_sensor);
  9245   004FCE  0E96               	movlw	low Handle_Fire_Events@start_data
  9246   004FD0  0100               	movlb	0	; () banked
  9247   004FD2  6FB0               	movwf	sprintf@s& (0+255),b
  9248   004FD4  0E02               	movlw	high Handle_Fire_Events@start_data
  9249   004FD6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9250   004FD8  0E92               	movlw	low STR_4
  9251   004FDA  6FB2               	movwf	sprintf@fmt& (0+255),b
  9252   004FDC  0E7F               	movlw	high STR_4
  9253   004FDE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9254   004FE0  0EA8               	movlw	low _fire_trigger_sensor
  9255   004FE2  6FB4               	movwf	(?_sprintf+4)& (0+255),b
  9256   004FE4  0E03               	movlw	high _fire_trigger_sensor
  9257   004FE6  6FB5               	movwf	(?_sprintf+5)& (0+255),b
  9258   004FE8  EC27  F036         	call	_sprintf	;wreg free
  9259   004FEC                     
  9260                           ;newmain.c: 223:         Send_History_Event("fire_start", start_data);
  9261   004FEC  0EAE               	movlw	low STR_5
  9262   004FEE  0100               	movlb	0	; () banked
  9263   004FF0  6FDE               	movwf	Send_History_Event@event_type& (0+255),b
  9264   004FF2  0E7F               	movlw	high STR_5
  9265   004FF4  6FDF               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9266   004FF6  0E96               	movlw	low Handle_Fire_Events@start_data
  9267   004FF8  6FE0               	movwf	Send_History_Event@extra_data& (0+255),b
  9268   004FFA  0E02               	movlw	high Handle_Fire_Events@start_data
  9269   004FFC  6FE1               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9270   004FFE  EC67  F034         	call	_Send_History_Event	;wreg free
  9271   005002                     l7930:
  9272                           
  9273                           ;newmain.c: 227:     if(!fire_alarm && prev_fire_alarm) {
  9274   005002  0103               	movlb	3	; () banked
  9275   005004  5155               	movf	_fire_alarm& (0+255),w,b
  9276   005006  A4D8               	btfss	status,2,c
  9277   005008  EF08  F028         	goto	u10471
  9278   00500C  EF0A  F028         	goto	u10470
  9279   005010                     u10471:
  9280   005010  EF91  F028         	goto	l7946
  9281   005014                     u10470:
  9282   005014                     
  9283                           ; BSR set to: 3
  9284   005014  5154               	movf	_prev_fire_alarm& (0+255),w,b
  9285   005016  B4D8               	btfsc	status,2,c
  9286   005018  EF10  F028         	goto	u10481
  9287   00501C  EF12  F028         	goto	u10480
  9288   005020                     u10481:
  9289   005020  EF91  F028         	goto	l7946
  9290   005024                     u10480:
  9291   005024                     
  9292                           ; BSR set to: 3
  9293                           ;newmain.c: 228:         unsigned long duration = (system_millis - fire_start_time) / 10
      +                          00;
  9294   005024  5128               	movf	_fire_start_time& (0+255),w,b
  9295   005026  0102               	movlb	2	; () banked
  9296   005028  5DFA               	subwf	_system_millis& (0+255),w,b
  9297   00502A  6E01               	movwf	___lldiv@dividend^0,c
  9298   00502C  0103               	movlb	3	; () banked
  9299   00502E  5129               	movf	(_fire_start_time+1)& (0+255),w,b
  9300   005030  0102               	movlb	2	; () banked
  9301   005032  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
  9302   005034  6E02               	movwf	(___lldiv@dividend+1)^0,c
  9303   005036  0103               	movlb	3	; () banked
  9304   005038  512A               	movf	(_fire_start_time+2)& (0+255),w,b
  9305   00503A  0102               	movlb	2	; () banked
  9306   00503C  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
  9307   00503E  6E03               	movwf	(___lldiv@dividend+2)^0,c
  9308   005040  0103               	movlb	3	; () banked
  9309   005042  512B               	movf	(_fire_start_time+3)& (0+255),w,b
  9310   005044  0102               	movlb	2	; () banked
  9311   005046  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
  9312   005048  6E04               	movwf	(___lldiv@dividend+3)^0,c
  9313   00504A  0EE8               	movlw	232
  9314   00504C  6E05               	movwf	___lldiv@divisor^0,c
  9315   00504E  0E03               	movlw	3
  9316   005050  6E06               	movwf	(___lldiv@divisor+1)^0,c
  9317   005052  0E00               	movlw	0
  9318   005054  6E07               	movwf	(___lldiv@divisor+2)^0,c
  9319   005056  0E00               	movlw	0
  9320   005058  6E08               	movwf	(___lldiv@divisor+3)^0,c
  9321   00505A  EC15  F034         	call	___lldiv	;wreg free
  9322   00505E  C001  F0E4         	movff	?___lldiv,Handle_Fire_Events@duration
  9323   005062  C002  F0E5         	movff	?___lldiv+1,Handle_Fire_Events@duration+1
  9324   005066  C003  F0E6         	movff	?___lldiv+2,Handle_Fire_Events@duration+2
  9325   00506A  C004  F0E7         	movff	?___lldiv+3,Handle_Fire_Events@duration+3
  9326                           
  9327                           ;newmain.c: 229:         float water_used = total_flow - fire_start_flow;
  9328   00506E  C330  F051         	movff	_total_flow,___flsub@b
  9329   005072  C331  F052         	movff	_total_flow+1,___flsub@b+1
  9330   005076  C332  F053         	movff	_total_flow+2,___flsub@b+2
  9331   00507A  C333  F054         	movff	_total_flow+3,___flsub@b+3
  9332   00507E  C318  F055         	movff	_fire_start_flow,___flsub@a
  9333   005082  C319  F056         	movff	_fire_start_flow+1,___flsub@a+1
  9334   005086  C31A  F057         	movff	_fire_start_flow+2,___flsub@a+2
  9335   00508A  C31B  F058         	movff	_fire_start_flow+3,___flsub@a+3
  9336   00508E  EC04  F036         	call	___flsub	;wreg free
  9337   005092  C051  F0E8         	movff	?___flsub,Handle_Fire_Events@water_used
  9338   005096  C052  F0E9         	movff	?___flsub+1,Handle_Fire_Events@water_used+1
  9339   00509A  C053  F0EA         	movff	?___flsub+2,Handle_Fire_Events@water_used+2
  9340   00509E  C054  F0EB         	movff	?___flsub+3,Handle_Fire_Events@water_used+3
  9341   0050A2                     
  9342                           ;newmain.c: 231:         char end_data[150];;newmain.c: 232:         sprintf(end_data, "
      +                          ,\"duration\":%lu,\"water\":%.2f", duration, water_used);
  9343   0050A2  0E00               	movlw	low Handle_Fire_Events@end_data
  9344   0050A4  0100               	movlb	0	; () banked
  9345   0050A6  6FB0               	movwf	sprintf@s& (0+255),b
  9346   0050A8  0E02               	movlw	high Handle_Fire_Events@end_data
  9347   0050AA  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9348   0050AC  0E62               	movlw	low STR_6
  9349   0050AE  6FB2               	movwf	sprintf@fmt& (0+255),b
  9350   0050B0  0E7F               	movlw	high STR_6
  9351   0050B2  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9352   0050B4  C0E4  F0B4         	movff	Handle_Fire_Events@duration,?_sprintf+4
  9353   0050B8  C0E5  F0B5         	movff	Handle_Fire_Events@duration+1,?_sprintf+5
  9354   0050BC  C0E6  F0B6         	movff	Handle_Fire_Events@duration+2,?_sprintf+6
  9355   0050C0  C0E7  F0B7         	movff	Handle_Fire_Events@duration+3,?_sprintf+7
  9356   0050C4  C0E8  F0B8         	movff	Handle_Fire_Events@water_used,?_sprintf+8
  9357   0050C8  C0E9  F0B9         	movff	Handle_Fire_Events@water_used+1,?_sprintf+9
  9358   0050CC  C0EA  F0BA         	movff	Handle_Fire_Events@water_used+2,?_sprintf+10
  9359   0050D0  C0EB  F0BB         	movff	Handle_Fire_Events@water_used+3,?_sprintf+11
  9360   0050D4  EC27  F036         	call	_sprintf	;wreg free
  9361   0050D8                     
  9362                           ;newmain.c: 233:         Send_History_Event("fire_end", end_data);
  9363   0050D8  0ECE               	movlw	low STR_7
  9364   0050DA  0100               	movlb	0	; () banked
  9365   0050DC  6FDE               	movwf	Send_History_Event@event_type& (0+255),b
  9366   0050DE  0E7F               	movlw	high STR_7
  9367   0050E0  6FDF               	movwf	(Send_History_Event@event_type+1)& (0+255),b
  9368   0050E2  0E00               	movlw	low Handle_Fire_Events@end_data
  9369   0050E4  6FE0               	movwf	Send_History_Event@extra_data& (0+255),b
  9370   0050E6  0E02               	movlw	high Handle_Fire_Events@end_data
  9371   0050E8  6FE1               	movwf	(Send_History_Event@extra_data+1)& (0+255),b
  9372   0050EA  EC67  F034         	call	_Send_History_Event	;wreg free
  9373   0050EE                     
  9374                           ;newmain.c: 236:         _delay((unsigned long)((5000)*(8000000/4000.0)));
  9375   0050EE  0E33               	movlw	51
  9376   0050F0  0100               	movlb	0	; () banked
  9377   0050F2  6FE3               	movwf	(??_Handle_Fire_Events+1)& (0+255),b
  9378   0050F4  0EBB               	movlw	187
  9379   0050F6  6FE2               	movwf	??_Handle_Fire_Events& (0+255),b
  9380   0050F8  0EDF               	movlw	223
  9381   0050FA                     u10777:
  9382   0050FA  2EE8               	decfsz	wreg,f,c
  9383   0050FC  D7FE               	bra	u10777
  9384   0050FE  2FE2               	decfsz	??_Handle_Fire_Events& (0+255),f,b
  9385   005100  D7FC               	bra	u10777
  9386   005102  2FE3               	decfsz	(??_Handle_Fire_Events+1)& (0+255),f,b
  9387   005104  D7FA               	bra	u10777
  9388   005106  D000               	nop2	
  9389   005108                     
  9390                           ;newmain.c: 237:         total_flow = 0.0;
  9391   005108  0E00               	movlw	0
  9392   00510A  0103               	movlb	3	; () banked
  9393   00510C  6F30               	movwf	_total_flow& (0+255),b
  9394   00510E  0E00               	movlw	0
  9395   005110  6F31               	movwf	(_total_flow+1)& (0+255),b
  9396   005112  0E00               	movlw	0
  9397   005114  6F32               	movwf	(_total_flow+2)& (0+255),b
  9398   005116  0E00               	movlw	0
  9399   005118  6F33               	movwf	(_total_flow+3)& (0+255),b
  9400   00511A                     
  9401                           ; BSR set to: 3
  9402                           ;newmain.c: 238:         pulse_count = 0;
  9403   00511A  0E00               	movlw	0
  9404   00511C  6F4F               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  9405   00511E  0E00               	movlw	0
  9406   005120  6F4E               	movwf	_pulse_count& (0+255),b	;volatile
  9407   005122                     l7946:
  9408                           
  9409                           ; BSR set to: 3
  9410                           ;newmain.c: 241:     prev_fire_alarm = fire_alarm;
  9411   005122  C355  F354         	movff	_fire_alarm,_prev_fire_alarm
  9412   005126                     
  9413                           ; BSR set to: 3
  9414   005126  0012               	return		;funcret
  9415   005128                     __end_of_Handle_Fire_Events:
  9416                           	callstack 0
  9417                           
  9418 ;; *************** function _Send_History_Event *****************
  9419 ;; Defined at:
  9420 ;;		line 285 in file "newmain.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;  event_type      2  126[BANK0 ] PTR const unsigned char 
  9423 ;;		 -> STR_14(7), STR_12(9), STR_11(9), STR_8(11), 
  9424 ;;		 -> STR_7(9), STR_5(11), 
  9425 ;;  extra_data      2  128[BANK0 ] PTR const unsigned char 
  9426 ;;		 -> STR_15(1), STR_13(1), Handle_Test_Events@test_data(50), STR_9(1), 
  9427 ;;		 -> Handle_Fire_Events@end_data(150), Handle_Fire_Events@start_data(100), 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;  i               2  200[BANK1 ] int 
  9430 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  9431 ;; Return value:  Size  Location     Type
  9432 ;;                  1    wreg      void 
  9433 ;; Registers used:
  9434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/0
  9437 ;;		On exit  : 0/0
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9440 ;;      Params:         0       4       0       0       0       0       0       0       0
  9441 ;;      Locals:         0       0     202       0       0       0       0       0       0
  9442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9443 ;;      Totals:         0       4     202       0       0       0       0       0       0
  9444 ;;Total ram usage:      206 bytes
  9445 ;; Hardware stack levels used: 1
  9446 ;; Hardware stack levels required when called: 9
  9447 ;; This function calls:
  9448 ;;		_sprintf
  9449 ;; This function is called by:
  9450 ;;		_Handle_Fire_Events
  9451 ;;		_Handle_Test_Events
  9452 ;;		_Handle_Shutdown_Events
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text16
  9457   0068CE                     __ptext16:
  9458                           	callstack 0
  9459   0068CE                     _Send_History_Event:
  9460                           	callstack 20
  9461   0068CE                     
  9462                           ;newmain.c: 286:     char buffer[200];;newmain.c: 287:     sprintf(buffer, "{\"event\":\
      +                          "%s\",\"time\":%lu%s}\r\n",
  9463   0068CE  0E00               	movlw	low Send_History_Event@buffer
  9464   0068D0  0100               	movlb	0	; () banked
  9465   0068D2  6FB0               	movwf	sprintf@s& (0+255),b
  9466   0068D4  0E01               	movlw	high Send_History_Event@buffer
  9467   0068D6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  9468   0068D8  0E44               	movlw	low STR_16
  9469   0068DA  6FB2               	movwf	sprintf@fmt& (0+255),b
  9470   0068DC  0E7F               	movlw	high STR_16
  9471   0068DE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  9472   0068E0  C0DE  F0B4         	movff	Send_History_Event@event_type,?_sprintf+4
  9473   0068E4  C0DF  F0B5         	movff	Send_History_Event@event_type+1,?_sprintf+5
  9474   0068E8  C2FA  F0B6         	movff	_system_millis,?_sprintf+6
  9475   0068EC  C2FB  F0B7         	movff	_system_millis+1,?_sprintf+7
  9476   0068F0  C2FC  F0B8         	movff	_system_millis+2,?_sprintf+8
  9477   0068F4  C2FD  F0B9         	movff	_system_millis+3,?_sprintf+9
  9478   0068F8  C0E0  F0BA         	movff	Send_History_Event@extra_data,?_sprintf+10
  9479   0068FC  C0E1  F0BB         	movff	Send_History_Event@extra_data+1,?_sprintf+11
  9480   006900  EC27  F036         	call	_sprintf	;wreg free
  9481   006904                     l203:
  9482   006904  A2AC               	btfss	172,1,c	;volatile
  9483   006906  EF87  F034         	goto	u9561
  9484   00690A  EF89  F034         	goto	u9560
  9485   00690E                     u9561:
  9486   00690E  EF82  F034         	goto	l203
  9487   006912                     u9560:
  9488   006912                     
  9489                           ;newmain.c: 291:     for(int i = 0; buffer[i]; i++) {
  9490   006912  0E00               	movlw	0
  9491   006914  0101               	movlb	1	; () banked
  9492   006916  6FC9               	movwf	(Send_History_Event@i+1)& (0+255),b
  9493   006918  0E00               	movlw	0
  9494   00691A  6FC8               	movwf	Send_History_Event@i& (0+255),b
  9495   00691C  EFA2  F034         	goto	l7312
  9496   006920                     l7308:
  9497                           
  9498                           ; BSR set to: 1
  9499                           ;newmain.c: 292:         TXREG = buffer[i];
  9500   006920  0E00               	movlw	low Send_History_Event@buffer
  9501   006922  25C8               	addwf	Send_History_Event@i& (0+255),w,b
  9502   006924  6ED9               	movwf	fsr2l,c
  9503   006926  0E01               	movlw	high Send_History_Event@buffer
  9504   006928  21C9               	addwfc	(Send_History_Event@i+1)& (0+255),w,b
  9505   00692A  6EDA               	movwf	fsr2h,c
  9506   00692C  50DF               	movf	indf2,w,c
  9507   00692E  6EAD               	movwf	173,c	;volatile
  9508   006930                     l208:
  9509   006930  A2AC               	btfss	172,1,c	;volatile
  9510   006932  EF9D  F034         	goto	u9571
  9511   006936  EF9F  F034         	goto	u9570
  9512   00693A                     u9571:
  9513   00693A  EF98  F034         	goto	l208
  9514   00693E                     u9570:
  9515   00693E                     
  9516                           ;newmain.c: 294:     }
  9517   00693E  0101               	movlb	1	; () banked
  9518   006940  4BC8               	infsnz	Send_History_Event@i& (0+255),f,b
  9519   006942  2BC9               	incf	(Send_History_Event@i+1)& (0+255),f,b
  9520   006944                     l7312:
  9521                           
  9522                           ; BSR set to: 1
  9523   006944  0E00               	movlw	low Send_History_Event@buffer
  9524   006946  25C8               	addwf	Send_History_Event@i& (0+255),w,b
  9525   006948  6ED9               	movwf	fsr2l,c
  9526   00694A  0E01               	movlw	high Send_History_Event@buffer
  9527   00694C  21C9               	addwfc	(Send_History_Event@i+1)& (0+255),w,b
  9528   00694E  6EDA               	movwf	fsr2h,c
  9529   006950  50DF               	movf	indf2,w,c
  9530   006952  A4D8               	btfss	status,2,c
  9531   006954  EFAE  F034         	goto	u9581
  9532   006958  EFB0  F034         	goto	u9580
  9533   00695C                     u9581:
  9534   00695C  EF90  F034         	goto	l7308
  9535   006960                     u9580:
  9536   006960                     
  9537                           ; BSR set to: 1
  9538   006960  0012               	return		;funcret
  9539   006962                     __end_of_Send_History_Event:
  9540                           	callstack 0
  9541                           
  9542 ;; *************** function _sprintf *****************
  9543 ;; Defined at:
  9544 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  s               2   80[BANK0 ] PTR unsigned char 
  9547 ;;		 -> Send_Data@buffer(150), Send_History_Event@buffer(200), Handle_Test_Events@test_data(50), Handle_Fire_Events@end_
      +data(150), 
  9548 ;;		 -> Handle_Fire_Events@start_data(100), 
  9549 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  9550 ;;		 -> STR_17(107), STR_16(30), STR_10(14), STR_6(29), 
  9551 ;;		 -> STR_4(15), 
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;  f              11  115[BANK0 ] struct _IO_FILE
  9554 ;;  ret             2    0        int 
  9555 ;;  ap              1  114[BANK0 ] PTR void [1]
  9556 ;;		 -> ?_sprintf(2), 
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  2   80[BANK0 ] int 
  9559 ;; Registers used:
  9560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9566 ;;      Params:         0      34       0       0       0       0       0       0       0
  9567 ;;      Locals:         0      12       0       0       0       0       0       0       0
  9568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9569 ;;      Totals:         0      46       0       0       0       0       0       0       0
  9570 ;;Total ram usage:       46 bytes
  9571 ;; Hardware stack levels used: 1
  9572 ;; Hardware stack levels required when called: 8
  9573 ;; This function calls:
  9574 ;;		_vfprintf
  9575 ;; This function is called by:
  9576 ;;		_Handle_Fire_Events
  9577 ;;		_Handle_Test_Events
  9578 ;;		_Send_History_Event
  9579 ;;		_Send_Data
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           	psect	text17
  9584   006C4E                     __ptext17:
  9585                           	callstack 0
  9586   006C4E                     _sprintf:
  9587                           	callstack 21
  9588   006C4E  0EB4               	movlw	low (?_sprintf+4)
  9589   006C50  0100               	movlb	0	; () banked
  9590   006C52  6FD2               	movwf	sprintf@ap& (0+255),b
  9591   006C54  C0B0  F0D3         	movff	sprintf@s,sprintf@f
  9592   006C58  C0B1  F0D4         	movff	sprintf@s+1,sprintf@f+1
  9593   006C5C                     
  9594                           ; BSR set to: 0
  9595   006C5C  0E00               	movlw	0
  9596   006C5E  6FD6               	movwf	(sprintf@f+3)& (0+255),b
  9597   006C60  0E00               	movlw	0
  9598   006C62  6FD5               	movwf	(sprintf@f+2)& (0+255),b
  9599   006C64                     
  9600                           ; BSR set to: 0
  9601   006C64  0E00               	movlw	0
  9602   006C66  6FDD               	movwf	(sprintf@f+10)& (0+255),b
  9603   006C68  0E00               	movlw	0
  9604   006C6A  6FDC               	movwf	(sprintf@f+9)& (0+255),b
  9605   006C6C                     
  9606                           ; BSR set to: 0
  9607   006C6C  0ED3               	movlw	low sprintf@f
  9608   006C6E  6FAA               	movwf	vfprintf@fp& (0+255),b
  9609   006C70  C0B2  F0AB         	movff	sprintf@fmt,vfprintf@fmt
  9610   006C74  C0B3  F0AC         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9611   006C78  0ED2               	movlw	low sprintf@ap
  9612   006C7A  6FAD               	movwf	vfprintf@ap& (0+255),b
  9613   006C7C  ECE0  F035         	call	_vfprintf	;wreg free
  9614   006C80  0100               	movlb	0	; () banked
  9615   006C82  51D5               	movf	(sprintf@f+2)& (0+255),w,b
  9616   006C84  25B0               	addwf	sprintf@s& (0+255),w,b
  9617   006C86  6ED9               	movwf	fsr2l,c
  9618   006C88  51D6               	movf	(sprintf@f+3)& (0+255),w,b
  9619   006C8A  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  9620   006C8C  6EDA               	movwf	fsr2h,c
  9621   006C8E  6ADF               	clrf	indf2,c
  9622   006C90                     
  9623                           ; BSR set to: 0
  9624   006C90  0012               	return		;funcret
  9625   006C92                     __end_of_sprintf:
  9626                           	callstack 0
  9627                           
  9628 ;; *************** function _vfprintf *****************
  9629 ;; Defined at:
  9630 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  fp              1   74[BANK0 ] PTR struct _IO_FILE
  9633 ;;		 -> sprintf@f(11), 
  9634 ;;  fmt             2   75[BANK0 ] PTR const unsigned char 
  9635 ;;		 -> STR_17(107), STR_16(30), STR_10(14), STR_6(29), 
  9636 ;;		 -> STR_4(15), 
  9637 ;;  ap              1   77[BANK0 ] PTR PTR void 
  9638 ;;		 -> sprintf@ap(1), 
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  9641 ;;		 -> STR_17(107), STR_16(30), STR_10(14), STR_6(29), 
  9642 ;;		 -> STR_4(15), 
  9643 ;; Return value:  Size  Location     Type
  9644 ;;                  2   74[BANK0 ] int 
  9645 ;; Registers used:
  9646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9647 ;; Tracked objects:
  9648 ;;		On entry : 0/0
  9649 ;;		On exit  : 0/0
  9650 ;;		Unchanged: 0/0
  9651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9652 ;;      Params:         0       4       0       0       0       0       0       0       0
  9653 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9655 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9656 ;;Total ram usage:        6 bytes
  9657 ;; Hardware stack levels used: 1
  9658 ;; Hardware stack levels required when called: 7
  9659 ;; This function calls:
  9660 ;;		_vfpfcnvrt
  9661 ;; This function is called by:
  9662 ;;		_sprintf
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text18
  9667   006BC0                     __ptext18:
  9668                           	callstack 0
  9669   006BC0                     _vfprintf:
  9670                           	callstack 21
  9671   006BC0                     
  9672                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  9673   006BC0  C0AB  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  9674   006BC4  C0AC  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9675                           
  9676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9677   006BC8  EFF0  F035         	goto	l7122
  9678   006BCC                     l7120:
  9679                           
  9680                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9681   006BCC  C0AA  F09C         	movff	vfprintf@fp,vfpfcnvrt@fp
  9682   006BD0  0EAE               	movlw	low vfprintf@cfmt
  9683   006BD2  0100               	movlb	0	; () banked
  9684   006BD4  6F9D               	movwf	vfpfcnvrt@fmt& (0+255),b
  9685   006BD6  C0AD  F09E         	movff	vfprintf@ap,vfpfcnvrt@ap
  9686   006BDA  6B9F               	clrf	(vfpfcnvrt@ap+1)& (0+255),b
  9687   006BDC  ECE0  F01A         	call	_vfpfcnvrt	;wreg free
  9688   006BE0                     l7122:
  9689                           
  9690                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9691   006BE0  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  9692   006BE4  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9693   006BE8                     	if	0	;tblptru may be non-zero
  9694   006BE8                     	endif
  9695   006BE8                     	if	0	;tblptru may be non-zero
  9696   006BE8                     	endif
  9697   006BE8  0008               	tblrd		*
  9698   006BEA  50F5               	movf	tablat,w,c
  9699   006BEC  0900               	iorlw	0
  9700   006BEE  A4D8               	btfss	status,2,c
  9701   006BF0  EFFC  F035         	goto	u9231
  9702   006BF4  EFFE  F035         	goto	u9230
  9703   006BF8                     u9231:
  9704   006BF8  EFE6  F035         	goto	l7120
  9705   006BFC                     u9230:
  9706   006BFC                     
  9707                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  9708   006BFC  0E00               	movlw	0
  9709   006BFE  0100               	movlb	0	; () banked
  9710   006C00  6FAB               	movwf	(?_vfprintf+1)& (0+255),b
  9711   006C02  0E00               	movlw	0
  9712   006C04  6FAA               	movwf	?_vfprintf& (0+255),b
  9713   006C06                     
  9714                           ; BSR set to: 0
  9715   006C06  0012               	return		;funcret
  9716   006C08                     __end_of_vfprintf:
  9717                           	callstack 0
  9718                           
  9719 ;; *************** function _vfpfcnvrt *****************
  9720 ;; Defined at:
  9721 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;  fp              1   60[BANK0 ] PTR struct _IO_FILE
  9724 ;;		 -> sprintf@f(11), 
  9725 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  9726 ;;		 -> vfprintf@cfmt(2), 
  9727 ;;  ap              2   62[BANK0 ] PTR PTR void 
  9728 ;;		 -> sprintf@ap(1), 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;  convarg         4   67[BANK0 ] struct .
  9731 ;;  cp              2   72[BANK0 ] PTR unsigned char 
  9732 ;;		 -> STR_17(107), STR_16(30), STR_10(14), STR_6(29), 
  9733 ;;		 -> STR_4(15), 
  9734 ;;  c               1   71[BANK0 ] unsigned char 
  9735 ;;  done            1   66[BANK0 ] _Bool 
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  1    wreg      void 
  9738 ;; Registers used:
  9739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9745 ;;      Params:         0       4       0       0       0       0       0       0       0
  9746 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9747 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9748 ;;      Totals:         0      14       0       0       0       0       0       0       0
  9749 ;;Total ram usage:       14 bytes
  9750 ;; Hardware stack levels used: 1
  9751 ;; Hardware stack levels required when called: 6
  9752 ;; This function calls:
  9753 ;;		_dtoa
  9754 ;;		_efgtoa
  9755 ;;		_fputc
  9756 ;;		_read_prec_or_width
  9757 ;;		_stoa
  9758 ;;		_utoa
  9759 ;; This function is called by:
  9760 ;;		_vfprintf
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text19
  9765   0035C0                     __ptext19:
  9766                           	callstack 0
  9767   0035C0                     _vfpfcnvrt:
  9768                           	callstack 21
  9769   0035C0                     
  9770                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  9771   0035C0  0100               	movlb	0	; () banked
  9772   0035C2  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9773   0035C4  6ED9               	movwf	fsr2l,c
  9774   0035C6  6ADA               	clrf	fsr2h,c
  9775   0035C8  CFDE FFF6          	movff	postinc2,tblptrl
  9776   0035CC  CFDD FFF7          	movff	postdec2,tblptrh
  9777   0035D0                     	if	0	;tblptru may be non-zero
  9778   0035D0                     	endif
  9779   0035D0                     	if	0	;tblptru may be non-zero
  9780   0035D0                     	endif
  9781   0035D0  0008               	tblrd		*
  9782   0035D2  50F5               	movf	tablat,w,c
  9783   0035D4  0A25               	xorlw	37
  9784   0035D6  A4D8               	btfss	status,2,c
  9785   0035D8  EFF0  F01A         	goto	u9121
  9786   0035DC  EFF2  F01A         	goto	u9120
  9787   0035E0                     u9121:
  9788   0035E0  EF55  F01D         	goto	l7112
  9789   0035E4                     u9120:
  9790   0035E4                     
  9791                           ; BSR set to: 0
  9792                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  9793   0035E4  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9794   0035E6  6ED9               	movwf	fsr2l,c
  9795   0035E8  6ADA               	clrf	fsr2h,c
  9796   0035EA  2ADE               	incf	postinc2,f,c
  9797   0035EC  0E00               	movlw	0
  9798   0035EE  22DD               	addwfc	postdec2,f,c
  9799   0035F0                     
  9800                           ; BSR set to: 0
  9801                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  9802   0035F0  0E00               	movlw	0
  9803   0035F2  0103               	movlb	3	; () banked
  9804   0035F4  6F4B               	movwf	(_width+1)& (0+255),b
  9805   0035F6  0E00               	movlw	0
  9806   0035F8  6F4A               	movwf	_width& (0+255),b
  9807   0035FA  C34A  F350         	movff	_width,_flags
  9808   0035FE                     
  9809                           ; BSR set to: 3
  9810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  9811   0035FE  0102               	movlb	2	; () banked
  9812   003600  69FE               	setf	_prec& (0+255),b
  9813   003602  69FF               	setf	(_prec+1)& (0+255),b
  9814   003604                     
  9815                           ; BSR set to: 2
  9816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  9817   003604  0100               	movlb	0	; () banked
  9818   003606  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9819   003608  6ED9               	movwf	fsr2l,c
  9820   00360A  6ADA               	clrf	fsr2h,c
  9821   00360C  CFDE FFF6          	movff	postinc2,tblptrl
  9822   003610  CFDD FFF7          	movff	postdec2,tblptrh
  9823   003614                     	if	0	;tblptru may be non-zero
  9824   003614                     	endif
  9825   003614                     	if	0	;tblptru may be non-zero
  9826   003614                     	endif
  9827   003614  0008               	tblrd		*
  9828   003616  50F5               	movf	tablat,w,c
  9829   003618  0A2E               	xorlw	46
  9830   00361A  A4D8               	btfss	status,2,c
  9831   00361C  EF12  F01B         	goto	u9131
  9832   003620  EF14  F01B         	goto	u9130
  9833   003624                     u9131:
  9834   003624  EF24  F01B         	goto	l7004
  9835   003628                     u9130:
  9836   003628                     
  9837                           ; BSR set to: 0
  9838                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  9839   003628  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9840   00362A  6ED9               	movwf	fsr2l,c
  9841   00362C  6ADA               	clrf	fsr2h,c
  9842   00362E  2ADE               	incf	postinc2,f,c
  9843   003630  0E00               	movlw	0
  9844   003632  22DD               	addwfc	postdec2,f,c
  9845   003634                     
  9846                           ; BSR set to: 0
  9847                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  9848   003634  C09D  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  9849   003638  C09E  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  9850   00363C  EC6A  F033         	call	_read_prec_or_width	;wreg free
  9851   003640  C001  F2FE         	movff	?_read_prec_or_width,_prec
  9852   003644  C002  F2FF         	movff	?_read_prec_or_width+1,_prec+1
  9853   003648                     l7004:
  9854                           
  9855                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  9856   003648  0100               	movlb	0	; () banked
  9857   00364A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9858   00364C  6ED9               	movwf	fsr2l,c
  9859   00364E  6ADA               	clrf	fsr2h,c
  9860   003650  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
  9861   003654  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
  9862   003658                     
  9863                           ; BSR set to: 0
  9864                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  9865   003658  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9866   00365C  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9867   003660                     	if	0	;tblptru may be non-zero
  9868   003660                     	endif
  9869   003660                     	if	0	;tblptru may be non-zero
  9870   003660                     	endif
  9871   003660  0008               	tblrd		*
  9872   003662  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
  9873                           
  9874                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  9875   003666  EF40  F01B         	goto	l7014
  9876   00366A                     l7008:
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  9880   00366A  4BA8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  9881   00366C  2BA9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  9882                           
  9883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1316:     break;
  9884   00366E  EF53  F01B         	goto	l7016
  9885   003672                     l7010:
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  9889   003672  0E69               	movlw	105
  9890   003674  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
  9891                           
  9892                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1351:     break;
  9893   003676  EF53  F01B         	goto	l7016
  9894   00367A                     l1097:
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  9898   00367A  6BA7               	clrf	vfpfcnvrt@c& (0+255),b
  9899                           
  9900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1354:     break;
  9901   00367C  EF53  F01B         	goto	l7016
  9902   003680                     l7014:
  9903                           
  9904                           ; BSR set to: 0
  9905   003680  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
  9906                           
  9907                           ; Switch size 1, requested type "simple"
  9908                           ; Number of cases is 4, Range of values is 100 to 117
  9909                           ; switch strategies available:
  9910                           ; Name         Instructions Cycles
  9911                           ; simple_byte           13     7 (average)
  9912                           ;	Chosen strategy is simple_byte
  9913   003682  0A64               	xorlw	100	; case 100
  9914   003684  B4D8               	btfsc	status,2,c
  9915   003686  EF39  F01B         	goto	l7010
  9916   00368A  0A0D               	xorlw	13	; case 105
  9917   00368C  B4D8               	btfsc	status,2,c
  9918   00368E  EF39  F01B         	goto	l7010
  9919   003692  0A05               	xorlw	5	; case 108
  9920   003694  B4D8               	btfsc	status,2,c
  9921   003696  EF35  F01B         	goto	l7008
  9922   00369A  0A19               	xorlw	25	; case 117
  9923   00369C  B4D8               	btfsc	status,2,c
  9924   00369E  EF39  F01B         	goto	l7010
  9925   0036A2  EF3D  F01B         	goto	l1097
  9926   0036A6                     l7016:
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  9930   0036A6  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9931   0036AA  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9932   0036AE                     	if	0	;tblptru may be non-zero
  9933   0036AE                     	endif
  9934   0036AE                     	if	0	;tblptru may be non-zero
  9935   0036AE                     	endif
  9936   0036AE  0008               	tblrd		*
  9937   0036B0  50F5               	movf	tablat,w,c
  9938   0036B2  0A64               	xorlw	100
  9939   0036B4  B4D8               	btfsc	status,2,c
  9940   0036B6  EF5F  F01B         	goto	u9141
  9941   0036BA  EF61  F01B         	goto	u9140
  9942   0036BE                     u9141:
  9943   0036BE  EF98  F01B         	goto	l7026
  9944   0036C2                     u9140:
  9945   0036C2                     
  9946                           ; BSR set to: 0
  9947   0036C2  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9948   0036C6  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9949   0036CA                     	if	0	;tblptru may be non-zero
  9950   0036CA                     	endif
  9951   0036CA                     	if	0	;tblptru may be non-zero
  9952   0036CA                     	endif
  9953   0036CA  0008               	tblrd		*
  9954   0036CC  50F5               	movf	tablat,w,c
  9955   0036CE  0A69               	xorlw	105
  9956   0036D0  A4D8               	btfss	status,2,c
  9957   0036D2  EF6D  F01B         	goto	u9151
  9958   0036D6  EF6F  F01B         	goto	u9150
  9959   0036DA                     u9151:
  9960   0036DA  EFBE  F01B         	goto	l7034
  9961   0036DE                     u9150:
  9962   0036DE  EF98  F01B         	goto	l7026
  9963   0036E2                     l7020:
  9964                           
  9965                           ; BSR set to: 0
  9966                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  9967   0036E2  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9968   0036E6  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9969   0036EA  50DF               	movf	indf2,w,c
  9970   0036EC  2ADF               	incf	indf2,f,c
  9971   0036EE  2ADF               	incf	indf2,f,c
  9972   0036F0  6ED9               	movwf	fsr2l,c
  9973   0036F2  6ADA               	clrf	fsr2h,c
  9974   0036F4  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  9975   0036F8  CFDD F0A4          	movff	postdec2,vfpfcnvrt@convarg+1
  9976   0036FC  0E00               	movlw	0
  9977   0036FE  BFA4               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  9978   003700  0EFF               	movlw	-1
  9979   003702  6FA5               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  9980   003704  6FA6               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  9981                           
  9982                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1366:      break;
  9983   003706  EFA3  F01B         	goto	l7028
  9984   00370A                     l7022:
  9985                           
  9986                           ; BSR set to: 0
  9987                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  9988   00370A  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9989   00370E  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9990   003712  0E04               	movlw	4
  9991   003714  26DF               	addwf	indf2,f,c
  9992   003716  5CDF               	subwf	indf2,w,c
  9993   003718  6ED9               	movwf	fsr2l,c
  9994   00371A  6ADA               	clrf	fsr2h,c
  9995   00371C  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  9996   003720  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
  9997   003724  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
  9998   003728  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
  9999                           
 10000                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1380:      break;
 10001   00372C  EFA3  F01B         	goto	l7028
 10002   003730                     l7026:
 10003                           
 10004                           ; BSR set to: 0
 10005   003730  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10006                           
 10007                           ; Switch size 1, requested type "simple"
 10008                           ; Number of cases is 2, Range of values is 105 to 108
 10009                           ; switch strategies available:
 10010                           ; Name         Instructions Cycles
 10011                           ; simple_byte            7     4 (average)
 10012                           ;	Chosen strategy is simple_byte
 10013   003732  0A69               	xorlw	105	; case 105
 10014   003734  B4D8               	btfsc	status,2,c
 10015   003736  EF71  F01B         	goto	l7020
 10016   00373A  0A05               	xorlw	5	; case 108
 10017   00373C  B4D8               	btfsc	status,2,c
 10018   00373E  EF85  F01B         	goto	l7022
 10019   003742  EFA3  F01B         	goto	l7028
 10020   003746                     l7028:
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10024   003746  0E01               	movlw	1
 10025   003748  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10026   00374A  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10027   00374C  0E00               	movlw	0
 10028   00374E  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10029   003750  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10030   003752  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10031   003754  6ED9               	movwf	fsr2l,c
 10032   003756  6ADA               	clrf	fsr2h,c
 10033   003758  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10034   00375C  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10035   003760                     
 10036                           ; BSR set to: 0
 10037                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 10038   003760  C09C  F017         	movff	vfpfcnvrt@fp,dtoa@fp
 10039   003764  C0A3  F018         	movff	vfpfcnvrt@convarg,dtoa@d
 10040   003768  C0A4  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 10041   00376C  C0A5  F01A         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 10042   003770  C0A6  F01B         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 10043   003774  EC91  F02B         	call	_dtoa	;wreg free
 10044   003778  EF66  F01D         	goto	l1105
 10045   00377C                     l7034:
 10046                           
 10047                           ; BSR set to: 0
 10048   00377C  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10049   003780  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10050   003784                     	if	0	;tblptru may be non-zero
 10051   003784                     	endif
 10052   003784                     	if	0	;tblptru may be non-zero
 10053   003784                     	endif
 10054   003784  0008               	tblrd		*
 10055   003786  50F5               	movf	tablat,w,c
 10056   003788  0A75               	xorlw	117
 10057   00378A  A4D8               	btfss	status,2,c
 10058   00378C  EFCA  F01B         	goto	u9161
 10059   003790  EFCC  F01B         	goto	u9160
 10060   003794                     u9161:
 10061   003794  EF2A  F01C         	goto	l1106
 10062   003798                     u9160:
 10063   003798  EFF6  F01B         	goto	l7042
 10064   00379C                     l7036:
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 10068   00379C  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10069   0037A0  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10070   0037A4  50DF               	movf	indf2,w,c
 10071   0037A6  2ADF               	incf	indf2,f,c
 10072   0037A8  2ADF               	incf	indf2,f,c
 10073   0037AA  6ED9               	movwf	fsr2l,c
 10074   0037AC  6ADA               	clrf	fsr2h,c
 10075   0037AE  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10076   0037B2  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10077   0037B6  C0A0  F0A3         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
 10078   0037BA  C0A1  F0A4         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
 10079   0037BE  6BA5               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 10080   0037C0  6BA6               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 10081                           
 10082                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1457:      break;
 10083   0037C2  EF01  F01C         	goto	l7044
 10084   0037C6                     l7038:
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 10088   0037C6  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10089   0037CA  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10090   0037CE  0E04               	movlw	4
 10091   0037D0  26DF               	addwf	indf2,f,c
 10092   0037D2  5CDF               	subwf	indf2,w,c
 10093   0037D4  6ED9               	movwf	fsr2l,c
 10094   0037D6  6ADA               	clrf	fsr2h,c
 10095   0037D8  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10096   0037DC  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10097   0037E0  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10098   0037E4  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10099                           
 10100                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1471:      break;
 10101   0037E8  EF01  F01C         	goto	l7044
 10102   0037EC                     l7042:
 10103                           
 10104                           ; BSR set to: 0
 10105   0037EC  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10106                           
 10107                           ; Switch size 1, requested type "simple"
 10108                           ; Number of cases is 2, Range of values is 105 to 108
 10109                           ; switch strategies available:
 10110                           ; Name         Instructions Cycles
 10111                           ; simple_byte            7     4 (average)
 10112                           ;	Chosen strategy is simple_byte
 10113   0037EE  0A69               	xorlw	105	; case 105
 10114   0037F0  B4D8               	btfsc	status,2,c
 10115   0037F2  EFCE  F01B         	goto	l7036
 10116   0037F6  0A05               	xorlw	5	; case 108
 10117   0037F8  B4D8               	btfsc	status,2,c
 10118   0037FA  EFE3  F01B         	goto	l7038
 10119   0037FE  EF01  F01C         	goto	l7044
 10120   003802                     l7044:
 10121                           
 10122                           ; BSR set to: 0
 10123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 10124   003802  0E01               	movlw	1
 10125   003804  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10126   003806  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10127   003808  0E00               	movlw	0
 10128   00380A  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10129   00380C  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10130   00380E  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10131   003810  6ED9               	movwf	fsr2l,c
 10132   003812  6ADA               	clrf	fsr2h,c
 10133   003814  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10134   003818  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10135                           
 10136                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 10137   00381C  EF1E  F01C         	goto	l7052
 10138   003820                     l7046:
 10139                           
 10140                           ; BSR set to: 0
 10141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 10142   003820  C09C  F017         	movff	vfpfcnvrt@fp,utoa@fp
 10143   003824  C0A3  F018         	movff	vfpfcnvrt@convarg,utoa@d
 10144   003828  C0A4  F019         	movff	vfpfcnvrt@convarg+1,utoa@d+1
 10145   00382C  C0A5  F01A         	movff	vfpfcnvrt@convarg+2,utoa@d+2
 10146   003830  C0A6  F01B         	movff	vfpfcnvrt@convarg+3,utoa@d+3
 10147   003834  EC46  F02E         	call	_utoa	;wreg free
 10148   003838  EF66  F01D         	goto	l1105
 10149   00383C                     l7052:
 10150                           
 10151                           ; BSR set to: 0
 10152   00383C  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10153   003840  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10154   003844                     	if	0	;tblptru may be non-zero
 10155   003844                     	endif
 10156   003844                     	if	0	;tblptru may be non-zero
 10157   003844                     	endif
 10158   003844  0008               	tblrd		*
 10159   003846  50F5               	movf	tablat,w,c
 10160                           
 10161                           ; Switch size 1, requested type "simple"
 10162                           ; Number of cases is 1, Range of values is 117 to 117
 10163                           ; switch strategies available:
 10164                           ; Name         Instructions Cycles
 10165                           ; simple_byte            4     3 (average)
 10166                           ;	Chosen strategy is simple_byte
 10167   003848  0A75               	xorlw	117	; case 117
 10168   00384A  B4D8               	btfsc	status,2,c
 10169   00384C  EF10  F01C         	goto	l7046
 10170   003850  EF2A  F01C         	goto	l1106
 10171   003854                     l1106:
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 10175   003854  6BA2               	clrf	vfpfcnvrt@done& (0+255),b
 10176   003856                     
 10177                           ; BSR set to: 0
 10178                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 10179   003856  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10180   003858  6ED9               	movwf	fsr2l,c
 10181   00385A  6ADA               	clrf	fsr2h,c
 10182   00385C  CFDE FFF6          	movff	postinc2,tblptrl
 10183   003860  CFDD FFF7          	movff	postdec2,tblptrh
 10184   003864                     	if	0	;tblptru may be non-zero
 10185   003864                     	endif
 10186   003864                     	if	0	;tblptru may be non-zero
 10187   003864                     	endif
 10188   003864  0008               	tblrd		*
 10189   003866  50F5               	movf	tablat,w,c
 10190   003868  0A73               	xorlw	115
 10191   00386A  A4D8               	btfss	status,2,c
 10192   00386C  EF3A  F01C         	goto	u9171
 10193   003870  EF3C  F01C         	goto	u9170
 10194   003874                     u9171:
 10195   003874  EF46  F01C         	goto	l7060
 10196   003878                     u9170:
 10197   003878                     
 10198                           ; BSR set to: 0
 10199                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 10200   003878  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10201   00387A  6ED9               	movwf	fsr2l,c
 10202   00387C  6ADA               	clrf	fsr2h,c
 10203   00387E  2ADE               	incf	postinc2,f,c
 10204   003880  0E00               	movlw	0
 10205   003882  22DD               	addwfc	postdec2,f,c
 10206   003884                     l7058:
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 10210   003884  0E01               	movlw	1
 10211   003886  6FA2               	movwf	vfpfcnvrt@done& (0+255),b
 10212                           
 10213                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1660:   }
 10214   003888  EF92  F01C         	goto	l7070
 10215   00388C                     l7060:
 10216                           
 10217                           ; BSR set to: 0
 10218   00388C  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10219   00388E  6ED9               	movwf	fsr2l,c
 10220   003890  6ADA               	clrf	fsr2h,c
 10221   003892  CFDE FFF6          	movff	postinc2,tblptrl
 10222   003896  CFDD FFF7          	movff	postdec2,tblptrh
 10223   00389A                     	if	0	;tblptru may be non-zero
 10224   00389A                     	endif
 10225   00389A                     	if	0	;tblptru may be non-zero
 10226   00389A                     	endif
 10227   00389A  0008               	tblrd		*
 10228   00389C  50F5               	movf	tablat,w,c
 10229   00389E  0A6C               	xorlw	108
 10230   0038A0  A4D8               	btfss	status,2,c
 10231   0038A2  EF55  F01C         	goto	u9181
 10232   0038A6  EF57  F01C         	goto	u9180
 10233   0038AA                     u9181:
 10234   0038AA  EF92  F01C         	goto	l7070
 10235   0038AE                     u9180:
 10236   0038AE                     
 10237                           ; BSR set to: 0
 10238   0038AE  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10239   0038B0  6ED9               	movwf	fsr2l,c
 10240   0038B2  6ADA               	clrf	fsr2h,c
 10241   0038B4  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10242   0038B8  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10243   0038BC  0E01               	movlw	1
 10244   0038BE  27A0               	addwf	??_vfpfcnvrt& (0+255),f,b
 10245   0038C0  0E00               	movlw	0
 10246   0038C2  23A1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10247   0038C4  C0A0  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10248   0038C8  C0A1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10249   0038CC                     	if	0	;tblptru may be non-zero
 10250   0038CC                     	endif
 10251   0038CC                     	if	0	;tblptru may be non-zero
 10252   0038CC                     	endif
 10253   0038CC  0008               	tblrd		*
 10254   0038CE  50F5               	movf	tablat,w,c
 10255   0038D0  0A6C               	xorlw	108
 10256   0038D2  A4D8               	btfss	status,2,c
 10257   0038D4  EF6E  F01C         	goto	u9191
 10258   0038D8  EF70  F01C         	goto	u9190
 10259   0038DC                     u9191:
 10260   0038DC  EF92  F01C         	goto	l7070
 10261   0038E0                     u9190:
 10262   0038E0                     
 10263                           ; BSR set to: 0
 10264   0038E0  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10265   0038E2  6ED9               	movwf	fsr2l,c
 10266   0038E4  6ADA               	clrf	fsr2h,c
 10267   0038E6  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt
 10268   0038EA  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+1
 10269   0038EE  0E02               	movlw	2
 10270   0038F0  27A0               	addwf	??_vfpfcnvrt& (0+255),f,b
 10271   0038F2  0E00               	movlw	0
 10272   0038F4  23A1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10273   0038F6  C0A0  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10274   0038FA  C0A1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10275   0038FE                     	if	0	;tblptru may be non-zero
 10276   0038FE                     	endif
 10277   0038FE                     	if	0	;tblptru may be non-zero
 10278   0038FE                     	endif
 10279   0038FE  0008               	tblrd		*
 10280   003900  50F5               	movf	tablat,w,c
 10281   003902  0A73               	xorlw	115
 10282   003904  A4D8               	btfss	status,2,c
 10283   003906  EF87  F01C         	goto	u9201
 10284   00390A  EF89  F01C         	goto	u9200
 10285   00390E                     u9201:
 10286   00390E  EF92  F01C         	goto	l7070
 10287   003912                     u9200:
 10288   003912                     
 10289                           ; BSR set to: 0
 10290                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 10291   003912  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10292   003914  6ED9               	movwf	fsr2l,c
 10293   003916  6ADA               	clrf	fsr2h,c
 10294   003918  0E03               	movlw	3
 10295   00391A  26DE               	addwf	postinc2,f,c
 10296   00391C  0E00               	movlw	0
 10297   00391E  22DD               	addwfc	postdec2,f,c
 10298   003920  EF42  F01C         	goto	l7058
 10299   003924                     l7070:
 10300                           
 10301                           ; BSR set to: 0
 10302                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 10303   003924  51A2               	movf	vfpfcnvrt@done& (0+255),w,b
 10304   003926  B4D8               	btfsc	status,2,c
 10305   003928  EF98  F01C         	goto	u9211
 10306   00392C  EF9A  F01C         	goto	u9210
 10307   003930                     u9211:
 10308   003930  EFAD  F01C         	goto	l7076
 10309   003934                     u9210:
 10310   003934                     
 10311                           ; BSR set to: 0
 10312                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 10313   003934  C09C  F009         	movff	vfpfcnvrt@fp,stoa@fp
 10314   003938  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10315   00393C  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10316   003940  0E02               	movlw	2
 10317   003942  26DF               	addwf	indf2,f,c
 10318   003944  5CDF               	subwf	indf2,w,c
 10319   003946  6ED9               	movwf	fsr2l,c
 10320   003948  6ADA               	clrf	fsr2h,c
 10321   00394A  CFDE F00A          	movff	postinc2,stoa@s
 10322   00394E  CFDE F00B          	movff	postinc2,stoa@s+1
 10323   003952  EC5D  F030         	call	_stoa	;wreg free
 10324   003956  EF66  F01D         	goto	l1105
 10325   00395A                     l7076:
 10326                           
 10327                           ; BSR set to: 0
 10328                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 10329   00395A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10330   00395C  6ED9               	movwf	fsr2l,c
 10331   00395E  6ADA               	clrf	fsr2h,c
 10332   003960  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
 10333   003964  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
 10334   003968                     
 10335                           ; BSR set to: 0
 10336                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 10337   003968  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10338   00396C  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10339   003970                     	if	0	;tblptru may be non-zero
 10340   003970                     	endif
 10341   003970                     	if	0	;tblptru may be non-zero
 10342   003970                     	endif
 10343   003970  0008               	tblrd		*
 10344   003972  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
 10345                           
 10346                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 10347   003976  EFC8  F01C         	goto	l7086
 10348   00397A                     l7080:
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 10352   00397A  4BA8               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 10353   00397C  2BA9               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 10354                           
 10355                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
 10356   00397E  EFD7  F01C         	goto	l7088
 10357   003982                     l7082:
 10358                           
 10359                           ; BSR set to: 0
 10360                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 10361   003982  0E6C               	movlw	108
 10362   003984  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
 10363                           
 10364                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
 10365   003986  EFD7  F01C         	goto	l7088
 10366   00398A                     l1125:
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 10370   00398A  6BA7               	clrf	vfpfcnvrt@c& (0+255),b
 10371                           
 10372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
 10373   00398C  EFD7  F01C         	goto	l7088
 10374   003990                     l7086:
 10375                           
 10376                           ; BSR set to: 0
 10377   003990  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10378                           
 10379                           ; Switch size 1, requested type "simple"
 10380                           ; Number of cases is 3, Range of values is 76 to 108
 10381                           ; switch strategies available:
 10382                           ; Name         Instructions Cycles
 10383                           ; simple_byte           10     6 (average)
 10384                           ;	Chosen strategy is simple_byte
 10385   003992  0A4C               	xorlw	76	; case 76
 10386   003994  B4D8               	btfsc	status,2,c
 10387   003996  EFBD  F01C         	goto	l7080
 10388   00399A  0A2A               	xorlw	42	; case 102
 10389   00399C  B4D8               	btfsc	status,2,c
 10390   00399E  EFC1  F01C         	goto	l7082
 10391   0039A2  0A0A               	xorlw	10	; case 108
 10392   0039A4  B4D8               	btfsc	status,2,c
 10393   0039A6  EFBD  F01C         	goto	l7080
 10394   0039AA  EFC5  F01C         	goto	l1125
 10395   0039AE                     l7088:
 10396                           
 10397                           ; BSR set to: 0
 10398   0039AE  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10399   0039B2  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10400   0039B6                     	if	0	;tblptru may be non-zero
 10401   0039B6                     	endif
 10402   0039B6                     	if	0	;tblptru may be non-zero
 10403   0039B6                     	endif
 10404   0039B6  0008               	tblrd		*
 10405   0039B8  50F5               	movf	tablat,w,c
 10406   0039BA  0A66               	xorlw	102
 10407   0039BC  A4D8               	btfss	status,2,c
 10408   0039BE  EFE3  F01C         	goto	u9221
 10409   0039C2  EFE5  F01C         	goto	u9220
 10410   0039C6                     u9221:
 10411   0039C6  EF4C  F01D         	goto	l7108
 10412   0039CA                     u9220:
 10413   0039CA  EF11  F01D         	goto	l7096
 10414   0039CE                     l7090:
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10418   0039CE  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10419   0039D2  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10420   0039D6  CFDF F0A0          	movff	indf2,??_vfpfcnvrt
 10421   0039DA  0E04               	movlw	4
 10422   0039DC  26DF               	addwf	indf2,f,c
 10423   0039DE  51A0               	movf	??_vfpfcnvrt& (0+255),w,b
 10424   0039E0  6ED9               	movwf	fsr2l,c
 10425   0039E2  6ADA               	clrf	fsr2h,c
 10426   0039E4  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10427   0039E8  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10428   0039EC  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10429   0039F0  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10430                           
 10431                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
 10432   0039F4  EF1C  F01D         	goto	l7098
 10433   0039F8                     l7092:
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 10437   0039F8  C09E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10438   0039FC  C09F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10439   003A00  CFDF F0A0          	movff	indf2,??_vfpfcnvrt
 10440   003A04  0E04               	movlw	4
 10441   003A06  26DF               	addwf	indf2,f,c
 10442   003A08  51A0               	movf	??_vfpfcnvrt& (0+255),w,b
 10443   003A0A  6ED9               	movwf	fsr2l,c
 10444   003A0C  6ADA               	clrf	fsr2h,c
 10445   003A0E  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
 10446   003A12  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
 10447   003A16  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
 10448   003A1A  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
 10449                           
 10450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
 10451   003A1E  EF1C  F01D         	goto	l7098
 10452   003A22                     l7096:
 10453                           
 10454                           ; BSR set to: 0
 10455   003A22  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
 10456                           
 10457                           ; Switch size 1, requested type "simple"
 10458                           ; Number of cases is 2, Range of values is 76 to 108
 10459                           ; switch strategies available:
 10460                           ; Name         Instructions Cycles
 10461                           ; simple_byte            7     4 (average)
 10462                           ;	Chosen strategy is simple_byte
 10463   003A24  0A4C               	xorlw	76	; case 76
 10464   003A26  B4D8               	btfsc	status,2,c
 10465   003A28  EFFC  F01C         	goto	l7092
 10466   003A2C  0A20               	xorlw	32	; case 108
 10467   003A2E  B4D8               	btfsc	status,2,c
 10468   003A30  EFE7  F01C         	goto	l7090
 10469   003A34  EF1C  F01D         	goto	l7098
 10470   003A38                     l7098:
 10471                           
 10472                           ; BSR set to: 0
 10473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 10474   003A38  0E01               	movlw	1
 10475   003A3A  25A8               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10476   003A3C  6FA0               	movwf	??_vfpfcnvrt& (0+255),b
 10477   003A3E  0E00               	movlw	0
 10478   003A40  21A9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10479   003A42  6FA1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10480   003A44  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10481   003A46  6ED9               	movwf	fsr2l,c
 10482   003A48  6ADA               	clrf	fsr2h,c
 10483   003A4A  C0A0  FFDE         	movff	??_vfpfcnvrt,postinc2
 10484   003A4E  C0A1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10485                           
 10486                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 10487   003A52  EF40  F01D         	goto	l7106
 10488   003A56                     l7100:
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 10492   003A56  C09C  F068         	movff	vfpfcnvrt@fp,efgtoa@fp
 10493   003A5A  C0A3  F069         	movff	vfpfcnvrt@convarg,efgtoa@f
 10494   003A5E  C0A4  F06A         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 10495   003A62  C0A5  F06B         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 10496   003A66  C0A6  F06C         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 10497   003A6A  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10498   003A6E  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10499   003A72                     	if	0	;tblptru may be non-zero
 10500   003A72                     	endif
 10501   003A72                     	if	0	;tblptru may be non-zero
 10502   003A72                     	endif
 10503   003A72  0008               	tblrd		*
 10504   003A74  CFF5 F06D          	movff	tablat,efgtoa@c
 10505   003A78  EC64  F012         	call	_efgtoa	;wreg free
 10506   003A7C  EF66  F01D         	goto	l1105
 10507   003A80                     l7106:
 10508                           
 10509                           ; BSR set to: 0
 10510   003A80  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10511   003A84  C0A9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10512   003A88                     	if	0	;tblptru may be non-zero
 10513   003A88                     	endif
 10514   003A88                     	if	0	;tblptru may be non-zero
 10515   003A88                     	endif
 10516   003A88  0008               	tblrd		*
 10517   003A8A  50F5               	movf	tablat,w,c
 10518                           
 10519                           ; Switch size 1, requested type "simple"
 10520                           ; Number of cases is 1, Range of values is 102 to 102
 10521                           ; switch strategies available:
 10522                           ; Name         Instructions Cycles
 10523                           ; simple_byte            4     3 (average)
 10524                           ;	Chosen strategy is simple_byte
 10525   003A8C  0A66               	xorlw	102	; case 102
 10526   003A8E  B4D8               	btfsc	status,2,c
 10527   003A90  EF2B  F01D         	goto	l7100
 10528   003A94  EF4C  F01D         	goto	l7108
 10529   003A98                     l7108:
 10530                           
 10531                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 10532   003A98  0100               	movlb	0	; () banked
 10533   003A9A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10534   003A9C  6ED9               	movwf	fsr2l,c
 10535   003A9E  6ADA               	clrf	fsr2h,c
 10536   003AA0  2ADE               	incf	postinc2,f,c
 10537   003AA2  0E00               	movlw	0
 10538   003AA4  22DD               	addwfc	postdec2,f,c
 10539   003AA6  EF66  F01D         	goto	l1105
 10540   003AAA                     l7112:
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 10544   003AAA  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10545   003AAC  6ED9               	movwf	fsr2l,c
 10546   003AAE  6ADA               	clrf	fsr2h,c
 10547   003AB0  CFDE FFF6          	movff	postinc2,tblptrl
 10548   003AB4  CFDD FFF7          	movff	postdec2,tblptrh
 10549   003AB8                     	if	0	;tblptru may be non-zero
 10550   003AB8                     	endif
 10551   003AB8                     	if	0	;tblptru may be non-zero
 10552   003AB8                     	endif
 10553   003AB8  0008               	tblrd		*
 10554   003ABA  50F5               	movf	tablat,w,c
 10555   003ABC  6E01               	movwf	fputc@c^0,c
 10556   003ABE  6A02               	clrf	(fputc@c+1)^0,c
 10557   003AC0  C09C  F003         	movff	vfpfcnvrt@fp,fputc@fp
 10558   003AC4  ECB6  F032         	call	_fputc	;wreg free
 10559   003AC8  EF4C  F01D         	goto	l7108
 10560   003ACC                     l1105:
 10561   003ACC  0012               	return		;funcret
 10562   003ACE                     __end_of_vfpfcnvrt:
 10563                           	callstack 0
 10564                           
 10565 ;; *************** function _utoa *****************
 10566 ;; Defined at:
 10567 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 10570 ;;		 -> sprintf@f(11), 
 10571 ;;  d               4   23[COMRAM] unsigned long 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;  i               2   31[COMRAM] int 
 10574 ;;  p               2   29[COMRAM] int 
 10575 ;;  w               2   27[COMRAM] int 
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  1    wreg      void 
 10578 ;; Registers used:
 10579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/0
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10585 ;;      Params:         5       0       0       0       0       0       0       0       0
 10586 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10587 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10588 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10589 ;;Total ram usage:       11 bytes
 10590 ;; Hardware stack levels used: 1
 10591 ;; Hardware stack levels required when called: 5
 10592 ;; This function calls:
 10593 ;;		___lldiv
 10594 ;;		___llmod
 10595 ;;		_pad
 10596 ;; This function is called by:
 10597 ;;		_vfpfcnvrt
 10598 ;; This function uses a non-reentrant model
 10599 ;;
 10600                           
 10601                           	psect	text20
 10602   005C8C                     __ptext20:
 10603                           	callstack 0
 10604   005C8C                     _utoa:
 10605                           	callstack 21
 10606   005C8C                     
 10607                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
 10608   005C8C  0102               	movlb	2	; () banked
 10609   005C8E  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 10610   005C90  EF4E  F02E         	goto	u9060
 10611   005C94  EF4C  F02E         	goto	u9061
 10612   005C98                     u9061:
 10613   005C98  EF54  F02E         	goto	l1070
 10614   005C9C                     u9060:
 10615   005C9C                     
 10616                           ; BSR set to: 2
 10617   005C9C  0E00               	movlw	0
 10618   005C9E  6E1F               	movwf	(utoa@p+1)^0,c
 10619   005CA0  0E01               	movlw	1
 10620   005CA2  6E1E               	movwf	utoa@p^0,c
 10621   005CA4  EF58  F02E         	goto	l1072
 10622   005CA8                     l1070:
 10623                           
 10624                           ; BSR set to: 2
 10625   005CA8  C2FE  F01E         	movff	_prec,utoa@p
 10626   005CAC  C2FF  F01F         	movff	_prec+1,utoa@p+1
 10627   005CB0                     l1072:
 10628                           
 10629                           ; BSR set to: 2
 10630                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 10631   005CB0  C34A  F01C         	movff	_width,utoa@w
 10632   005CB4  C34B  F01D         	movff	_width+1,utoa@w+1
 10633   005CB8                     
 10634                           ; BSR set to: 2
 10635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 10636   005CB8  0E00               	movlw	0
 10637   005CBA  6E21               	movwf	(utoa@i+1)^0,c
 10638   005CBC  0E4F               	movlw	79
 10639   005CBE  6E20               	movwf	utoa@i^0,c
 10640   005CC0                     
 10641                           ; BSR set to: 2
 10642                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 10643   005CC0  0103               	movlb	3	; () banked
 10644   005CC2  6BA7               	clrf	(_dbuf+79)& (0+255),b
 10645                           
 10646                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10647   005CC4  EFA2  F02E         	goto	l6966
 10648   005CC8                     l6956:
 10649                           
 10650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 10651   005CC8  0620               	decf	utoa@i^0,f,c
 10652   005CCA  A0D8               	btfss	status,0,c
 10653   005CCC  0621               	decf	(utoa@i+1)^0,f,c
 10654   005CCE                     
 10655                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 10656   005CCE  0E58               	movlw	low _dbuf
 10657   005CD0  2420               	addwf	utoa@i^0,w,c
 10658   005CD2  6ED9               	movwf	fsr2l,c
 10659   005CD4  0E03               	movlw	high _dbuf
 10660   005CD6  2021               	addwfc	(utoa@i+1)^0,w,c
 10661   005CD8  6EDA               	movwf	fsr2h,c
 10662   005CDA  C018  F001         	movff	utoa@d,___llmod@dividend
 10663   005CDE  C019  F002         	movff	utoa@d+1,___llmod@dividend+1
 10664   005CE2  C01A  F003         	movff	utoa@d+2,___llmod@dividend+2
 10665   005CE6  C01B  F004         	movff	utoa@d+3,___llmod@dividend+3
 10666   005CEA  0E0A               	movlw	10
 10667   005CEC  6E05               	movwf	___llmod@divisor^0,c
 10668   005CEE  0E00               	movlw	0
 10669   005CF0  6E06               	movwf	(___llmod@divisor+1)^0,c
 10670   005CF2  0E00               	movlw	0
 10671   005CF4  6E07               	movwf	(___llmod@divisor+2)^0,c
 10672   005CF6  0E00               	movlw	0
 10673   005CF8  6E08               	movwf	(___llmod@divisor+3)^0,c
 10674   005CFA  ECB1  F034         	call	___llmod	;wreg free
 10675   005CFE  5001               	movf	?___llmod^0,w,c
 10676   005D00  0F30               	addlw	48
 10677   005D02  6EDF               	movwf	indf2,c
 10678   005D04                     
 10679                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
 10680   005D04  061E               	decf	utoa@p^0,f,c
 10681   005D06  A0D8               	btfss	status,0,c
 10682   005D08  061F               	decf	(utoa@p+1)^0,f,c
 10683   005D0A                     
 10684                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 10685   005D0A  061C               	decf	utoa@w^0,f,c
 10686   005D0C  A0D8               	btfss	status,0,c
 10687   005D0E  061D               	decf	(utoa@w+1)^0,f,c
 10688   005D10                     
 10689                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 10690   005D10  C018  F001         	movff	utoa@d,___lldiv@dividend
 10691   005D14  C019  F002         	movff	utoa@d+1,___lldiv@dividend+1
 10692   005D18  C01A  F003         	movff	utoa@d+2,___lldiv@dividend+2
 10693   005D1C  C01B  F004         	movff	utoa@d+3,___lldiv@dividend+3
 10694   005D20  0E0A               	movlw	10
 10695   005D22  6E05               	movwf	___lldiv@divisor^0,c
 10696   005D24  0E00               	movlw	0
 10697   005D26  6E06               	movwf	(___lldiv@divisor+1)^0,c
 10698   005D28  0E00               	movlw	0
 10699   005D2A  6E07               	movwf	(___lldiv@divisor+2)^0,c
 10700   005D2C  0E00               	movlw	0
 10701   005D2E  6E08               	movwf	(___lldiv@divisor+3)^0,c
 10702   005D30  EC15  F034         	call	___lldiv	;wreg free
 10703   005D34  C001  F018         	movff	?___lldiv,utoa@d
 10704   005D38  C002  F019         	movff	?___lldiv+1,utoa@d+1
 10705   005D3C  C003  F01A         	movff	?___lldiv+2,utoa@d+2
 10706   005D40  C004  F01B         	movff	?___lldiv+3,utoa@d+3
 10707   005D44                     l6966:
 10708                           
 10709                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10710   005D44  5020               	movf	utoa@i^0,w,c
 10711   005D46  1021               	iorwf	(utoa@i+1)^0,w,c
 10712   005D48  B4D8               	btfsc	status,2,c
 10713   005D4A  EFA9  F02E         	goto	u9071
 10714   005D4E  EFAB  F02E         	goto	u9070
 10715   005D52                     u9071:
 10716   005D52  EFC3  F02E         	goto	l6972
 10717   005D56                     u9070:
 10718   005D56  5018               	movf	utoa@d^0,w,c
 10719   005D58  1019               	iorwf	(utoa@d+1)^0,w,c
 10720   005D5A  101A               	iorwf	(utoa@d+2)^0,w,c
 10721   005D5C  101B               	iorwf	(utoa@d+3)^0,w,c
 10722   005D5E  A4D8               	btfss	status,2,c
 10723   005D60  EFB4  F02E         	goto	u9081
 10724   005D64  EFB6  F02E         	goto	u9080
 10725   005D68                     u9081:
 10726   005D68  EF64  F02E         	goto	l6956
 10727   005D6C                     u9080:
 10728   005D6C  BE1F               	btfsc	(utoa@p+1)^0,7,c
 10729   005D6E  EFC3  F02E         	goto	u9090
 10730   005D72  501F               	movf	(utoa@p+1)^0,w,c
 10731   005D74  E106               	bnz	u9091
 10732   005D76  041E               	decf	utoa@p^0,w,c
 10733   005D78  B0D8               	btfsc	status,0,c
 10734   005D7A  EFC1  F02E         	goto	u9091
 10735   005D7E  EFC3  F02E         	goto	u9090
 10736   005D82                     u9091:
 10737   005D82  EF64  F02E         	goto	l6956
 10738   005D86                     u9090:
 10739   005D86                     l6972:
 10740                           
 10741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 10742   005D86  C017  F00F         	movff	utoa@fp,pad@fp
 10743   005D8A  0E58               	movlw	low _dbuf
 10744   005D8C  2420               	addwf	utoa@i^0,w,c
 10745   005D8E  6E10               	movwf	pad@buf^0,c
 10746   005D90  0E03               	movlw	high _dbuf
 10747   005D92  2021               	addwfc	(utoa@i+1)^0,w,c
 10748   005D94  6E11               	movwf	(pad@buf+1)^0,c
 10749   005D96  C01C  F012         	movff	utoa@w,pad@p
 10750   005D9A  C01D  F013         	movff	utoa@w+1,pad@p+1
 10751   005D9E  EC32  F035         	call	_pad	;wreg free
 10752   005DA2  0012               	return		;funcret
 10753   005DA4                     __end_of_utoa:
 10754                           	callstack 0
 10755                           
 10756 ;; *************** function ___llmod *****************
 10757 ;; Defined at:
 10758 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\llmod.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;  dividend        4    0[COMRAM] unsigned long 
 10761 ;;  divisor         4    4[COMRAM] unsigned long 
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;  counter         1    8[COMRAM] unsigned char 
 10764 ;; Return value:  Size  Location     Type
 10765 ;;                  4    0[COMRAM] unsigned long 
 10766 ;; Registers used:
 10767 ;;		wreg, status,2, status,0
 10768 ;; Tracked objects:
 10769 ;;		On entry : 0/0
 10770 ;;		On exit  : 0/0
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10773 ;;      Params:         8       0       0       0       0       0       0       0       0
 10774 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10775 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10776 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10777 ;;Total ram usage:        9 bytes
 10778 ;; Hardware stack levels used: 1
 10779 ;; Hardware stack levels required when called: 1
 10780 ;; This function calls:
 10781 ;;		Nothing
 10782 ;; This function is called by:
 10783 ;;		_utoa
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786                           
 10787                           	psect	text21
 10788   006962                     __ptext21:
 10789                           	callstack 0
 10790   006962                     ___llmod:
 10791                           	callstack 24
 10792   006962  5005               	movf	___llmod@divisor^0,w,c
 10793   006964  1006               	iorwf	(___llmod@divisor+1)^0,w,c
 10794   006966  1007               	iorwf	(___llmod@divisor+2)^0,w,c
 10795   006968  1008               	iorwf	(___llmod@divisor+3)^0,w,c
 10796   00696A  B4D8               	btfsc	status,2,c
 10797   00696C  EFBA  F034         	goto	u8331
 10798   006970  EFBC  F034         	goto	u8330
 10799   006974                     u8331:
 10800   006974  EFEC  F034         	goto	l693
 10801   006978                     u8330:
 10802   006978  0E01               	movlw	1
 10803   00697A  6E09               	movwf	___llmod@counter^0,c
 10804   00697C  EFC6  F034         	goto	l6566
 10805   006980                     l6564:
 10806   006980  90D8               	bcf	status,0,c
 10807   006982  3605               	rlcf	___llmod@divisor^0,f,c
 10808   006984  3606               	rlcf	(___llmod@divisor+1)^0,f,c
 10809   006986  3607               	rlcf	(___llmod@divisor+2)^0,f,c
 10810   006988  3608               	rlcf	(___llmod@divisor+3)^0,f,c
 10811   00698A  2A09               	incf	___llmod@counter^0,f,c
 10812   00698C                     l6566:
 10813   00698C  AE08               	btfss	(___llmod@divisor+3)^0,7,c
 10814   00698E  EFCB  F034         	goto	u8341
 10815   006992  EFCD  F034         	goto	u8340
 10816   006996                     u8341:
 10817   006996  EFC0  F034         	goto	l6564
 10818   00699A                     u8340:
 10819   00699A                     l6568:
 10820   00699A  5005               	movf	___llmod@divisor^0,w,c
 10821   00699C  5C01               	subwf	___llmod@dividend^0,w,c
 10822   00699E  5006               	movf	(___llmod@divisor+1)^0,w,c
 10823   0069A0  5802               	subwfb	(___llmod@dividend+1)^0,w,c
 10824   0069A2  5007               	movf	(___llmod@divisor+2)^0,w,c
 10825   0069A4  5803               	subwfb	(___llmod@dividend+2)^0,w,c
 10826   0069A6  5008               	movf	(___llmod@divisor+3)^0,w,c
 10827   0069A8  5804               	subwfb	(___llmod@dividend+3)^0,w,c
 10828   0069AA  A0D8               	btfss	status,0,c
 10829   0069AC  EFDA  F034         	goto	u8351
 10830   0069B0  EFDC  F034         	goto	u8350
 10831   0069B4                     u8351:
 10832   0069B4  EFE4  F034         	goto	l6572
 10833   0069B8                     u8350:
 10834   0069B8  5005               	movf	___llmod@divisor^0,w,c
 10835   0069BA  5E01               	subwf	___llmod@dividend^0,f,c
 10836   0069BC  5006               	movf	(___llmod@divisor+1)^0,w,c
 10837   0069BE  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
 10838   0069C0  5007               	movf	(___llmod@divisor+2)^0,w,c
 10839   0069C2  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
 10840   0069C4  5008               	movf	(___llmod@divisor+3)^0,w,c
 10841   0069C6  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
 10842   0069C8                     l6572:
 10843   0069C8  90D8               	bcf	status,0,c
 10844   0069CA  3208               	rrcf	(___llmod@divisor+3)^0,f,c
 10845   0069CC  3207               	rrcf	(___llmod@divisor+2)^0,f,c
 10846   0069CE  3206               	rrcf	(___llmod@divisor+1)^0,f,c
 10847   0069D0  3205               	rrcf	___llmod@divisor^0,f,c
 10848   0069D2  2E09               	decfsz	___llmod@counter^0,f,c
 10849   0069D4  EFCD  F034         	goto	l6568
 10850   0069D8                     l693:
 10851   0069D8  C001  F001         	movff	___llmod@dividend,?___llmod
 10852   0069DC  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 10853   0069E0  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 10854   0069E4  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 10855   0069E8  0012               	return		;funcret
 10856   0069EA                     __end_of___llmod:
 10857                           	callstack 0
 10858                           
 10859 ;; *************** function ___lldiv *****************
 10860 ;; Defined at:
 10861 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;  dividend        4    0[COMRAM] unsigned long 
 10864 ;;  divisor         4    4[COMRAM] unsigned long 
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;  quotient        4    8[COMRAM] unsigned long 
 10867 ;;  counter         1   12[COMRAM] unsigned char 
 10868 ;; Return value:  Size  Location     Type
 10869 ;;                  4    0[COMRAM] unsigned long 
 10870 ;; Registers used:
 10871 ;;		wreg, status,2, status,0
 10872 ;; Tracked objects:
 10873 ;;		On entry : 0/0
 10874 ;;		On exit  : 0/0
 10875 ;;		Unchanged: 0/0
 10876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10877 ;;      Params:         8       0       0       0       0       0       0       0       0
 10878 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10879 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10880 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10881 ;;Total ram usage:       13 bytes
 10882 ;; Hardware stack levels used: 1
 10883 ;; Hardware stack levels required when called: 1
 10884 ;; This function calls:
 10885 ;;		Nothing
 10886 ;; This function is called by:
 10887 ;;		_Handle_Fire_Events
 10888 ;;		_utoa
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892                           	psect	text22
 10893   00682A                     __ptext22:
 10894                           	callstack 0
 10895   00682A                     ___lldiv:
 10896                           	callstack 24
 10897   00682A  0E00               	movlw	0
 10898   00682C  6E09               	movwf	___lldiv@quotient^0,c
 10899   00682E  0E00               	movlw	0
 10900   006830  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 10901   006832  0E00               	movlw	0
 10902   006834  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 10903   006836  0E00               	movlw	0
 10904   006838  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 10905   00683A  5005               	movf	___lldiv@divisor^0,w,c
 10906   00683C  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 10907   00683E  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 10908   006840  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 10909   006842  B4D8               	btfsc	status,2,c
 10910   006844  EF26  F034         	goto	u7601
 10911   006848  EF28  F034         	goto	u7600
 10912   00684C                     u7601:
 10913   00684C  EF5E  F034         	goto	l300
 10914   006850                     u7600:
 10915   006850  0E01               	movlw	1
 10916   006852  6E0D               	movwf	___lldiv@counter^0,c
 10917   006854  EF32  F034         	goto	l6106
 10918   006858                     l6104:
 10919   006858  90D8               	bcf	status,0,c
 10920   00685A  3605               	rlcf	___lldiv@divisor^0,f,c
 10921   00685C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 10922   00685E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 10923   006860  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 10924   006862  2A0D               	incf	___lldiv@counter^0,f,c
 10925   006864                     l6106:
 10926   006864  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 10927   006866  EF37  F034         	goto	u7611
 10928   00686A  EF39  F034         	goto	u7610
 10929   00686E                     u7611:
 10930   00686E  EF2C  F034         	goto	l6104
 10931   006872                     u7610:
 10932   006872                     l6108:
 10933   006872  90D8               	bcf	status,0,c
 10934   006874  3609               	rlcf	___lldiv@quotient^0,f,c
 10935   006876  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 10936   006878  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 10937   00687A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 10938   00687C  5005               	movf	___lldiv@divisor^0,w,c
 10939   00687E  5C01               	subwf	___lldiv@dividend^0,w,c
 10940   006880  5006               	movf	(___lldiv@divisor+1)^0,w,c
 10941   006882  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 10942   006884  5007               	movf	(___lldiv@divisor+2)^0,w,c
 10943   006886  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 10944   006888  5008               	movf	(___lldiv@divisor+3)^0,w,c
 10945   00688A  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 10946   00688C  A0D8               	btfss	status,0,c
 10947   00688E  EF4B  F034         	goto	u7621
 10948   006892  EF4D  F034         	goto	u7620
 10949   006896                     u7621:
 10950   006896  EF56  F034         	goto	l6116
 10951   00689A                     u7620:
 10952   00689A  5005               	movf	___lldiv@divisor^0,w,c
 10953   00689C  5E01               	subwf	___lldiv@dividend^0,f,c
 10954   00689E  5006               	movf	(___lldiv@divisor+1)^0,w,c
 10955   0068A0  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 10956   0068A2  5007               	movf	(___lldiv@divisor+2)^0,w,c
 10957   0068A4  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 10958   0068A6  5008               	movf	(___lldiv@divisor+3)^0,w,c
 10959   0068A8  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 10960   0068AA  8009               	bsf	___lldiv@quotient^0,0,c
 10961   0068AC                     l6116:
 10962   0068AC  90D8               	bcf	status,0,c
 10963   0068AE  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 10964   0068B0  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 10965   0068B2  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 10966   0068B4  3205               	rrcf	___lldiv@divisor^0,f,c
 10967   0068B6  2E0D               	decfsz	___lldiv@counter^0,f,c
 10968   0068B8  EF39  F034         	goto	l6108
 10969   0068BC                     l300:
 10970   0068BC  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10971   0068C0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10972   0068C4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10973   0068C8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10974   0068CC  0012               	return		;funcret
 10975   0068CE                     __end_of___lldiv:
 10976                           	callstack 0
 10977                           
 10978 ;; *************** function _stoa *****************
 10979 ;; Defined at:
 10980 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
 10983 ;;		 -> sprintf@f(11), 
 10984 ;;  s               2    9[COMRAM] PTR unsigned char 
 10985 ;;		 -> ?_sprintf(2), STR_15(1), STR_14(7), STR_13(1), 
 10986 ;;		 -> STR_12(9), STR_11(9), Handle_Test_Events@test_data(50), STR_9(1), 
 10987 ;;		 -> STR_8(11), STR_7(9), Handle_Fire_Events@end_data(150), STR_5(11), 
 10988 ;;		 -> Handle_Fire_Events@start_data(100), fire_trigger_sensor(20), 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;  l               2   17[COMRAM] int 
 10991 ;;  cp              2   15[COMRAM] PTR unsigned char 
 10992 ;;		 -> STR_24(7), ?_sprintf(2), STR_15(1), STR_14(7), 
 10993 ;;		 -> STR_13(1), STR_12(9), STR_11(9), Handle_Test_Events@test_data(50), 
 10994 ;;		 -> STR_9(1), STR_8(11), STR_7(9), Handle_Fire_Events@end_data(150), 
 10995 ;;		 -> STR_5(11), Handle_Fire_Events@start_data(100), fire_trigger_sensor(20), 
 10996 ;;  p               2   13[COMRAM] int 
 10997 ;; Return value:  Size  Location     Type
 10998 ;;                  1    wreg      void 
 10999 ;; Registers used:
 11000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11001 ;; Tracked objects:
 11002 ;;		On entry : 0/0
 11003 ;;		On exit  : 0/0
 11004 ;;		Unchanged: 0/0
 11005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11006 ;;      Params:         3       0       0       0       0       0       0       0       0
 11007 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11008 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11009 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11010 ;;Total ram usage:       11 bytes
 11011 ;; Hardware stack levels used: 1
 11012 ;; Hardware stack levels required when called: 3
 11013 ;; This function calls:
 11014 ;;		_fputc
 11015 ;; This function is called by:
 11016 ;;		_vfpfcnvrt
 11017 ;; This function uses a non-reentrant model
 11018 ;;
 11019                           
 11020                           	psect	text23
 11021   0060BA                     __ptext23:
 11022                           	callstack 0
 11023   0060BA                     _stoa:
 11024                           	callstack 23
 11025   0060BA                     
 11026                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 951
      +                          :     cp = s;
 11027   0060BA  C00A  F010         	movff	stoa@s,stoa@cp
 11028   0060BE  C00B  F011         	movff	stoa@s+1,stoa@cp+1
 11029                           
 11030                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 11031   0060C2  5010               	movf	stoa@cp^0,w,c
 11032   0060C4  1011               	iorwf	(stoa@cp+1)^0,w,c
 11033   0060C6  A4D8               	btfss	status,2,c
 11034   0060C8  EF68  F030         	goto	u8991
 11035   0060CC  EF6A  F030         	goto	u8990
 11036   0060D0                     u8991:
 11037   0060D0  EF6E  F030         	goto	l6930
 11038   0060D4                     u8990:
 11039   0060D4                     
 11040                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 11041   0060D4  0EE9               	movlw	low STR_24
 11042   0060D6  6E10               	movwf	stoa@cp^0,c
 11043   0060D8  0E7F               	movlw	high STR_24
 11044   0060DA  6E11               	movwf	(stoa@cp+1)^0,c
 11045   0060DC                     l6930:
 11046                           
 11047                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 11048   0060DC  0E00               	movlw	0
 11049   0060DE  6E13               	movwf	(stoa@l+1)^0,c
 11050   0060E0  0E00               	movlw	0
 11051   0060E2  6E12               	movwf	stoa@l^0,c
 11052   0060E4  EF76  F030         	goto	l6934
 11053   0060E8                     l6932:
 11054   0060E8  4A12               	infsnz	stoa@l^0,f,c
 11055   0060EA  2A13               	incf	(stoa@l+1)^0,f,c
 11056   0060EC                     l6934:
 11057   0060EC  5012               	movf	stoa@l^0,w,c
 11058   0060EE  2410               	addwf	stoa@cp^0,w,c
 11059   0060F0  6E0C               	movwf	??_stoa^0,c
 11060   0060F2  5013               	movf	(stoa@l+1)^0,w,c
 11061   0060F4  2011               	addwfc	(stoa@cp+1)^0,w,c
 11062   0060F6  6E0D               	movwf	(??_stoa+1)^0,c
 11063   0060F8  C00C  FFF6         	movff	??_stoa,tblptrl
 11064   0060FC  C00D  FFF7         	movff	??_stoa+1,tblptrh
 11065   006100  6AF8               	clrf	tblptru,c
 11066   006102  0E07               	movlw	(high __ramtop+-1)
 11067   006104  64F7               	cpfsgt	tblptrh,c
 11068   006106  D003               	bra	u9007
 11069   006108  0008               	tblrd		*
 11070   00610A  50F5               	movf	tablat,w,c
 11071   00610C  D005               	bra	u9000
 11072   00610E                     u9007:
 11073   00610E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11074   006112  CFF7 FFE2          	movff	tblptrh,fsr1h
 11075   006116  50E7               	movf	indf1,w,c
 11076   006118                     u9000:
 11077   006118  0900               	iorlw	0
 11078   00611A  A4D8               	btfss	status,2,c
 11079   00611C  EF92  F030         	goto	u9011
 11080   006120  EF94  F030         	goto	u9010
 11081   006124                     u9011:
 11082   006124  EF74  F030         	goto	l6932
 11083   006128                     u9010:
 11084   006128                     
 11085                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 11086   006128  0102               	movlb	2	; () banked
 11087   00612A  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 11088   00612C  EF9A  F030         	goto	u9021
 11089   006130  EF9C  F030         	goto	u9020
 11090   006134                     u9021:
 11091   006134  EFAF  F030         	goto	l1062
 11092   006138                     u9020:
 11093   006138                     
 11094                           ; BSR set to: 2
 11095   006138  5012               	movf	stoa@l^0,w,c
 11096   00613A  5DFE               	subwf	_prec& (0+255),w,b
 11097   00613C  51FF               	movf	(_prec+1)& (0+255),w,b
 11098   00613E  0A80               	xorlw	128
 11099   006140  6E0C               	movwf	??_stoa^0,c
 11100   006142  5013               	movf	(stoa@l+1)^0,w,c
 11101   006144  0A80               	xorlw	128
 11102   006146  580C               	subwfb	??_stoa^0,w,c
 11103   006148  B0D8               	btfsc	status,0,c
 11104   00614A  EFA9  F030         	goto	u9031
 11105   00614E  EFAB  F030         	goto	u9030
 11106   006152                     u9031:
 11107   006152  EFAF  F030         	goto	l1062
 11108   006156                     u9030:
 11109   006156                     
 11110                           ; BSR set to: 2
 11111                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 11112   006156  C2FE  F012         	movff	_prec,stoa@l
 11113   00615A  C2FF  F013         	movff	_prec+1,stoa@l+1
 11114   00615E                     l1062:
 11115                           
 11116                           ; BSR set to: 2
 11117                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 965:     p = l;
 11118   00615E  C012  F00E         	movff	stoa@l,stoa@p
 11119   006162  C013  F00F         	movff	stoa@l+1,stoa@p+1
 11120                           
 11121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11122   006166  EFCF  F030         	goto	l6946
 11123   00616A                     l6942:
 11124                           
 11125                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 11126   00616A  C010  FFF6         	movff	stoa@cp,tblptrl
 11127   00616E  C011  FFF7         	movff	stoa@cp+1,tblptrh
 11128   006172  6AF8               	clrf	tblptru,c
 11129   006174  0E07               	movlw	(high __ramtop+-1)
 11130   006176  64F7               	cpfsgt	tblptrh,c
 11131   006178  D003               	bra	u9047
 11132   00617A  0008               	tblrd		*
 11133   00617C  50F5               	movf	tablat,w,c
 11134   00617E  D005               	bra	u9040
 11135   006180                     u9047:
 11136   006180  CFF6 FFE1          	movff	tblptrl,fsr1l
 11137   006184  CFF7 FFE2          	movff	tblptrh,fsr1h
 11138   006188  50E7               	movf	indf1,w,c
 11139   00618A                     u9040:
 11140   00618A  6E0C               	movwf	??_stoa^0,c
 11141   00618C  500C               	movf	??_stoa^0,w,c
 11142   00618E  6E01               	movwf	fputc@c^0,c
 11143   006190  6A02               	clrf	(fputc@c+1)^0,c
 11144   006192  C009  F003         	movff	stoa@fp,fputc@fp
 11145   006196  ECB6  F032         	call	_fputc	;wreg free
 11146   00619A                     
 11147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 11148   00619A  4A10               	infsnz	stoa@cp^0,f,c
 11149   00619C  2A11               	incf	(stoa@cp+1)^0,f,c
 11150   00619E                     l6946:
 11151                           
 11152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11153   00619E  060E               	decf	stoa@p^0,f,c
 11154   0061A0  A0D8               	btfss	status,0,c
 11155   0061A2  060F               	decf	(stoa@p+1)^0,f,c
 11156   0061A4  280E               	incf	stoa@p^0,w,c
 11157   0061A6  E106               	bnz	u9051
 11158   0061A8  280F               	incf	(stoa@p+1)^0,w,c
 11159   0061AA  A4D8               	btfss	status,2,c
 11160   0061AC  EFDA  F030         	goto	u9051
 11161   0061B0  EFDC  F030         	goto	u9050
 11162   0061B4                     u9051:
 11163   0061B4  EFB5  F030         	goto	l6942
 11164   0061B8                     u9050:
 11165   0061B8  0012               	return		;funcret
 11166   0061BA                     __end_of_stoa:
 11167                           	callstack 0
 11168                           
 11169 ;; *************** function _read_prec_or_width *****************
 11170 ;; Defined at:
 11171 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
 11174 ;;		 -> vfprintf@cfmt(2), 
 11175 ;;  ap              1    1[COMRAM] PTR PTR void [1]
 11176 ;;		 -> sprintf@ap(1), 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;  c               1    4[COMRAM] unsigned char 
 11179 ;;  n               2    5[COMRAM] int 
 11180 ;; Return value:  Size  Location     Type
 11181 ;;                  2    0[COMRAM] int 
 11182 ;; Registers used:
 11183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11184 ;; Tracked objects:
 11185 ;;		On entry : 0/0
 11186 ;;		On exit  : 0/0
 11187 ;;		Unchanged: 0/0
 11188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11189 ;;      Params:         2       0       0       0       0       0       0       0       0
 11190 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11191 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11192 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11193 ;;Total ram usage:        7 bytes
 11194 ;; Hardware stack levels used: 1
 11195 ;; Hardware stack levels required when called: 1
 11196 ;; This function calls:
 11197 ;;		Nothing
 11198 ;; This function is called by:
 11199 ;;		_vfpfcnvrt
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203                           	psect	text24
 11204   0066D4                     __ptext24:
 11205                           	callstack 0
 11206   0066D4                     _read_prec_or_width:
 11207                           	callstack 25
 11208   0066D4                     
 11209                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11210   0066D4  0E00               	movlw	0
 11211   0066D6  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11212   0066D8  0E00               	movlw	0
 11213   0066DA  6E06               	movwf	read_prec_or_width@n^0,c
 11214   0066DC                     
 11215                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11216   0066DC  5001               	movf	read_prec_or_width@fmt^0,w,c
 11217   0066DE  6ED9               	movwf	fsr2l,c
 11218   0066E0  6ADA               	clrf	fsr2h,c
 11219   0066E2  CFDE FFF6          	movff	postinc2,tblptrl
 11220   0066E6  CFDD FFF7          	movff	postdec2,tblptrh
 11221   0066EA                     	if	0	;tblptru may be non-zero
 11222   0066EA                     	endif
 11223   0066EA                     	if	0	;tblptru may be non-zero
 11224   0066EA                     	endif
 11225   0066EA  0008               	tblrd		*
 11226   0066EC  50F5               	movf	tablat,w,c
 11227   0066EE  0A2A               	xorlw	42
 11228   0066F0  A4D8               	btfss	status,2,c
 11229   0066F2  EF7D  F033         	goto	u9101
 11230   0066F6  EF7F  F033         	goto	u9100
 11231   0066FA                     u9101:
 11232   0066FA  EFA8  F033         	goto	l6988
 11233   0066FE                     u9100:
 11234   0066FE                     
 11235                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11236   0066FE  5001               	movf	read_prec_or_width@fmt^0,w,c
 11237   006700  6ED9               	movwf	fsr2l,c
 11238   006702  6ADA               	clrf	fsr2h,c
 11239   006704  2ADE               	incf	postinc2,f,c
 11240   006706  0E00               	movlw	0
 11241   006708  22DD               	addwfc	postdec2,f,c
 11242   00670A                     
 11243                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11244   00670A  5002               	movf	read_prec_or_width@ap^0,w,c
 11245   00670C  6ED9               	movwf	fsr2l,c
 11246   00670E  6ADA               	clrf	fsr2h,c
 11247   006710  0E02               	movlw	2
 11248   006712  26DF               	addwf	indf2,f,c
 11249   006714  5CDF               	subwf	indf2,w,c
 11250   006716  6ED9               	movwf	fsr2l,c
 11251   006718  6ADA               	clrf	fsr2h,c
 11252   00671A  CFDE F006          	movff	postinc2,read_prec_or_width@n
 11253   00671E  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
 11254                           
 11255                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11256   006722  EFBB  F033         	goto	l1082
 11257   006726                     l6984:
 11258                           
 11259                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11260   006726  0E0A               	movlw	10
 11261   006728  0206               	mulwf	read_prec_or_width@n^0,c
 11262   00672A  CFF3 F003          	movff	prodl,??_read_prec_or_width
 11263   00672E  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
 11264   006732  0207               	mulwf	(read_prec_or_width@n+1)^0,c
 11265   006734  50F3               	movf	prodl,w,c
 11266   006736  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
 11267   006738  5005               	movf	read_prec_or_width@c^0,w,c
 11268   00673A  2403               	addwf	??_read_prec_or_width^0,w,c
 11269   00673C  6E06               	movwf	read_prec_or_width@n^0,c
 11270   00673E  0E00               	movlw	0
 11271   006740  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
 11272   006742  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11273   006744                     
 11274                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11275   006744  5001               	movf	read_prec_or_width@fmt^0,w,c
 11276   006746  6ED9               	movwf	fsr2l,c
 11277   006748  6ADA               	clrf	fsr2h,c
 11278   00674A  2ADE               	incf	postinc2,f,c
 11279   00674C  0E00               	movlw	0
 11280   00674E  22DD               	addwfc	postdec2,f,c
 11281   006750                     l6988:
 11282                           
 11283                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11284   006750  5001               	movf	read_prec_or_width@fmt^0,w,c
 11285   006752  6ED9               	movwf	fsr2l,c
 11286   006754  6ADA               	clrf	fsr2h,c
 11287   006756  CFDE FFF6          	movff	postinc2,tblptrl
 11288   00675A  CFDD FFF7          	movff	postdec2,tblptrh
 11289   00675E                     	if	0	;tblptru may be non-zero
 11290   00675E                     	endif
 11291   00675E                     	if	0	;tblptru may be non-zero
 11292   00675E                     	endif
 11293   00675E  0008               	tblrd		*
 11294   006760  50F5               	movf	tablat,w,c
 11295   006762  0FD0               	addlw	208
 11296   006764  6E05               	movwf	read_prec_or_width@c^0,c
 11297   006766  0E09               	movlw	9
 11298   006768  6405               	cpfsgt	read_prec_or_width@c^0,c
 11299   00676A  EFB9  F033         	goto	u9111
 11300   00676E  EFBB  F033         	goto	u9110
 11301   006772                     u9111:
 11302   006772  EF93  F033         	goto	l6984
 11303   006776                     u9110:
 11304   006776                     l1082:
 11305                           
 11306                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11307   006776  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
 11308   00677A  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 11309   00677E  0012               	return		;funcret
 11310   006780                     __end_of_read_prec_or_width:
 11311                           	callstack 0
 11312                           
 11313 ;; *************** function _efgtoa *****************
 11314 ;; Defined at:
 11315 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 11318 ;;		 -> sprintf@f(11), 
 11319 ;;  f               4    9[BANK0 ] PTR struct _IO_FILE
 11320 ;;  c               1   13[BANK0 ] unsigned char 
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;  u               4   56[BANK0 ] struct flui
 11323 ;;  g               4   50[BANK0 ] struct flui
 11324 ;;  l               4   45[BANK0 ] struct flui
 11325 ;;  h               4   41[BANK0 ] struct flui
 11326 ;;  ou              4   35[BANK0 ] struct flui
 11327 ;;  n               2   54[BANK0 ] int 
 11328 ;;  i               2   39[BANK0 ] int 
 11329 ;;  w               2   33[BANK0 ] int 
 11330 ;;  e               2   31[BANK0 ] int 
 11331 ;;  m               2   29[BANK0 ] int 
 11332 ;;  d               2   27[BANK0 ] int 
 11333 ;;  t               2   20[BANK0 ] int 
 11334 ;;  p               2   18[BANK0 ] int 
 11335 ;;  ne              2   16[BANK0 ] int 
 11336 ;;  sign            1   49[BANK0 ] unsigned char 
 11337 ;;  nmode           1   26[BANK0 ] unsigned char 
 11338 ;;  mode            1   25[BANK0 ] unsigned char 
 11339 ;;  pp              1   24[BANK0 ] unsigned char 
 11340 ;;  esign           1    0        unsigned char 
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11350 ;;      Params:         0       6       0       0       0       0       0       0       0
 11351 ;;      Locals:         0      44       0       0       0       0       0       0       0
 11352 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11353 ;;      Totals:         0      52       0       0       0       0       0       0       0
 11354 ;;Total ram usage:       52 bytes
 11355 ;; Hardware stack levels used: 1
 11356 ;; Hardware stack levels required when called: 5
 11357 ;; This function calls:
 11358 ;;		___fladd
 11359 ;;		___fldiv
 11360 ;;		___fleq
 11361 ;;		___flge
 11362 ;;		___flmul
 11363 ;;		___flneg
 11364 ;;		___flsub
 11365 ;;		___fltol
 11366 ;;		___fpclassifyf
 11367 ;;		_floorf
 11368 ;;		_labs
 11369 ;;		_memcpy
 11370 ;;		_pad
 11371 ;;		_strcpy
 11372 ;; This function is called by:
 11373 ;;		_vfpfcnvrt
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377                           	psect	text25
 11378   0024C8                     __ptext25:
 11379                           	callstack 0
 11380   0024C8                     _efgtoa:
 11381                           	callstack 21
 11382   0024C8                     
 11383                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 11384   0024C8  0100               	movlb	0	; () banked
 11385   0024CA  6B91               	clrf	efgtoa@sign& (0+255),b
 11386                           
 11387                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 11388   0024CC  C069  F092         	movff	efgtoa@f,efgtoa@g
 11389   0024D0  C06A  F093         	movff	efgtoa@f+1,efgtoa@g+1
 11390   0024D4  C06B  F094         	movff	efgtoa@f+2,efgtoa@g+2
 11391   0024D8  C06C  F095         	movff	efgtoa@f+3,efgtoa@g+3
 11392   0024DC                     
 11393                           ; BSR set to: 0
 11394                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 11395   0024DC  BF95               	btfsc	(efgtoa@g+3)& (0+255),7,b
 11396   0024DE  EF75  F012         	goto	u8670
 11397   0024E2  EF73  F012         	goto	u8671
 11398   0024E6                     u8671:
 11399   0024E6  EF89  F012         	goto	l6714
 11400   0024EA                     u8670:
 11401   0024EA                     
 11402                           ; BSR set to: 0
 11403                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 11404   0024EA  0E01               	movlw	1
 11405   0024EC  6F91               	movwf	efgtoa@sign& (0+255),b
 11406   0024EE                     
 11407                           ; BSR set to: 0
 11408                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 11409   0024EE  C092  F001         	movff	efgtoa@g,___flneg@f1
 11410   0024F2  C093  F002         	movff	efgtoa@g+1,___flneg@f1+1
 11411   0024F6  C094  F003         	movff	efgtoa@g+2,___flneg@f1+2
 11412   0024FA  C095  F004         	movff	efgtoa@g+3,___flneg@f1+3
 11413   0024FE  ECA6  F036         	call	___flneg	;wreg free
 11414   002502  C001  F092         	movff	?___flneg,efgtoa@g
 11415   002506  C002  F093         	movff	?___flneg+1,efgtoa@g+1
 11416   00250A  C003  F094         	movff	?___flneg+2,efgtoa@g+2
 11417   00250E  C004  F095         	movff	?___flneg+3,efgtoa@g+3
 11418   002512                     l6714:
 11419                           
 11420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 11421   002512  0E00               	movlw	0
 11422   002514  0100               	movlb	0	; () banked
 11423   002516  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11424   002518  0E00               	movlw	0
 11425   00251A  6F96               	movwf	efgtoa@n& (0+255),b
 11426   00251C                     
 11427                           ; BSR set to: 0
 11428                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 11429   00251C  C34A  F081         	movff	_width,efgtoa@w
 11430   002520  C34B  F082         	movff	_width+1,efgtoa@w+1
 11431   002524                     
 11432                           ; BSR set to: 0
 11433                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
 11434   002524  5191               	movf	efgtoa@sign& (0+255),w,b
 11435   002526  B4D8               	btfsc	status,2,c
 11436   002528  EF98  F012         	goto	u8681
 11437   00252C  EF9A  F012         	goto	u8680
 11438   002530                     u8681:
 11439   002530  EFAE  F012         	goto	l6728
 11440   002534                     u8680:
 11441   002534                     
 11442                           ; BSR set to: 0
 11443                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 11444   002534  5191               	movf	efgtoa@sign& (0+255),w,b
 11445   002536  A4D8               	btfss	status,2,c
 11446   002538  EFA0  F012         	goto	u8691
 11447   00253C  EFA2  F012         	goto	u8690
 11448   002540                     u8691:
 11449   002540  EFA8  F012         	goto	l6724
 11450   002544                     u8690:
 11451   002544                     
 11452                           ; BSR set to: 0
 11453   002544  0E00               	movlw	0
 11454   002546  6F77               	movwf	(_efgtoa$1375+1)& (0+255),b
 11455   002548  0E2B               	movlw	43
 11456   00254A  6F76               	movwf	_efgtoa$1375& (0+255),b
 11457   00254C  EFAC  F012         	goto	l6726
 11458   002550                     l6724:
 11459                           
 11460                           ; BSR set to: 0
 11461   002550  0E00               	movlw	0
 11462   002552  6F77               	movwf	(_efgtoa$1375+1)& (0+255),b
 11463   002554  0E2D               	movlw	45
 11464   002556  6F76               	movwf	_efgtoa$1375& (0+255),b
 11465   002558                     l6726:
 11466                           
 11467                           ; BSR set to: 0
 11468   002558  C076  F091         	movff	_efgtoa$1375,efgtoa@sign
 11469   00255C                     l6728:
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 11473   00255C  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
 11474   002560  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11475   002564  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11476   002568  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11477   00256C  ECDD  F030         	call	___fpclassifyf	;wreg free
 11478   002570  0401               	decf	?___fpclassifyf^0,w,c
 11479   002572  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11480   002574  A4D8               	btfss	status,2,c
 11481   002576  EFBF  F012         	goto	u8701
 11482   00257A  EFC1  F012         	goto	u8700
 11483   00257E                     u8701:
 11484   00257E  EFF2  F012         	goto	l6746
 11485   002582                     u8700:
 11486   002582                     
 11487                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 11488   002582  0100               	movlb	0	; () banked
 11489   002584  5191               	movf	efgtoa@sign& (0+255),w,b
 11490   002586  B4D8               	btfsc	status,2,c
 11491   002588  EFC8  F012         	goto	u8711
 11492   00258C  EFCA  F012         	goto	u8710
 11493   002590                     u8711:
 11494   002590  EFD3  F012         	goto	l6738
 11495   002594                     u8710:
 11496   002594                     
 11497                           ; BSR set to: 0
 11498                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 11499   002594  C091  F358         	movff	efgtoa@sign,_dbuf
 11500   002598                     
 11501                           ; BSR set to: 0
 11502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
 11503   002598  0781               	decf	efgtoa@w& (0+255),f,b
 11504   00259A  A0D8               	btfss	status,0,c
 11505   00259C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 11506   00259E                     
 11507                           ; BSR set to: 0
 11508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 11509   00259E  0E00               	movlw	0
 11510   0025A0  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11511   0025A2  0E01               	movlw	1
 11512   0025A4  6F96               	movwf	efgtoa@n& (0+255),b
 11513   0025A6                     l6738:
 11514                           
 11515                           ; BSR set to: 0
 11516                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 11517   0025A6  0E58               	movlw	low _dbuf
 11518   0025A8  2596               	addwf	efgtoa@n& (0+255),w,b
 11519   0025AA  6E01               	movwf	strcpy@dest^0,c
 11520   0025AC  0E03               	movlw	high _dbuf
 11521   0025AE  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11522   0025B0  6E02               	movwf	(strcpy@dest+1)^0,c
 11523   0025B2  0EF7               	movlw	low STR_18
 11524   0025B4  6E03               	movwf	strcpy@src^0,c
 11525   0025B6  0E7F               	movlw	high STR_18
 11526   0025B8  6E04               	movwf	(strcpy@src+1)^0,c
 11527   0025BA  EC8A  F036         	call	_strcpy	;wreg free
 11528   0025BE                     l6740:
 11529                           
 11530                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 11531   0025BE  0100               	movlb	0	; () banked
 11532   0025C0  0EFD               	movlw	253
 11533   0025C2  2781               	addwf	efgtoa@w& (0+255),f,b
 11534   0025C4  0EFF               	movlw	255
 11535   0025C6  2382               	addwfc	(efgtoa@w+1)& (0+255),f,b
 11536   0025C8                     
 11537                           ; BSR set to: 0
 11538                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 11539   0025C8  C068  F00F         	movff	efgtoa@fp,pad@fp
 11540   0025CC  0E58               	movlw	low _dbuf
 11541   0025CE  6E10               	movwf	pad@buf^0,c
 11542   0025D0  0E03               	movlw	high _dbuf
 11543   0025D2  6E11               	movwf	(pad@buf+1)^0,c
 11544   0025D4  C081  F012         	movff	efgtoa@w,pad@p
 11545   0025D8  C082  F013         	movff	efgtoa@w+1,pad@p+1
 11546   0025DC  EC32  F035         	call	_pad	;wreg free
 11547   0025E0  EF5B  F017         	goto	l1013
 11548   0025E4                     l6746:
 11549                           
 11550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 11551   0025E4  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
 11552   0025E8  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11553   0025EC  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11554   0025F0  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11555   0025F4  ECDD  F030         	call	___fpclassifyf	;wreg free
 11556   0025F8  5001               	movf	?___fpclassifyf^0,w,c
 11557   0025FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11558   0025FC  A4D8               	btfss	status,2,c
 11559   0025FE  EF03  F013         	goto	u8721
 11560   002602  EF05  F013         	goto	u8720
 11561   002606                     u8721:
 11562   002606  EF25  F013         	goto	l6764
 11563   00260A                     u8720:
 11564   00260A                     
 11565                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 11566   00260A  0100               	movlb	0	; () banked
 11567   00260C  5191               	movf	efgtoa@sign& (0+255),w,b
 11568   00260E  B4D8               	btfsc	status,2,c
 11569   002610  EF0C  F013         	goto	u8731
 11570   002614  EF0E  F013         	goto	u8730
 11571   002618                     u8731:
 11572   002618  EF17  F013         	goto	l6756
 11573   00261C                     u8730:
 11574   00261C                     
 11575                           ; BSR set to: 0
 11576                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 11577   00261C  C091  F358         	movff	efgtoa@sign,_dbuf
 11578   002620                     
 11579                           ; BSR set to: 0
 11580                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
 11581   002620  0781               	decf	efgtoa@w& (0+255),f,b
 11582   002622  A0D8               	btfss	status,0,c
 11583   002624  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 11584   002626                     
 11585                           ; BSR set to: 0
 11586                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 11587   002626  0E00               	movlw	0
 11588   002628  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 11589   00262A  0E01               	movlw	1
 11590   00262C  6F96               	movwf	efgtoa@n& (0+255),b
 11591   00262E                     l6756:
 11592                           
 11593                           ; BSR set to: 0
 11594                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 11595   00262E  0E58               	movlw	low _dbuf
 11596   002630  2596               	addwf	efgtoa@n& (0+255),w,b
 11597   002632  6E01               	movwf	strcpy@dest^0,c
 11598   002634  0E03               	movlw	high _dbuf
 11599   002636  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11600   002638  6E02               	movwf	(strcpy@dest+1)^0,c
 11601   00263A  0EFB               	movlw	low STR_21
 11602   00263C  6E03               	movwf	strcpy@src^0,c
 11603   00263E  0E7F               	movlw	high STR_21
 11604   002640  6E04               	movwf	(strcpy@src+1)^0,c
 11605   002642  EC8A  F036         	call	_strcpy	;wreg free
 11606   002646  EFDF  F012         	goto	l6740
 11607   00264A                     l6764:
 11608                           
 11609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 11610   00264A  0E00               	movlw	0
 11611   00264C  0100               	movlb	0	; () banked
 11612   00264E  6F98               	movwf	efgtoa@u& (0+255),b
 11613   002650  0E00               	movlw	0
 11614   002652  6F99               	movwf	(efgtoa@u+1)& (0+255),b
 11615   002654  0E80               	movlw	128
 11616   002656  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
 11617   002658  0E3F               	movlw	63
 11618   00265A  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
 11619                           
 11620                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 11621   00265C  0E00               	movlw	0
 11622   00265E  6F80               	movwf	(efgtoa@e+1)& (0+255),b
 11623   002660  0E00               	movlw	0
 11624   002662  6F7F               	movwf	efgtoa@e& (0+255),b
 11625   002664                     
 11626                           ; BSR set to: 0
 11627                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 11628   002664  C092  F001         	movff	efgtoa@g,___fleq@ff1
 11629   002668  C093  F002         	movff	efgtoa@g+1,___fleq@ff1+1
 11630   00266C  C094  F003         	movff	efgtoa@g+2,___fleq@ff1+2
 11631   002670  C095  F004         	movff	efgtoa@g+3,___fleq@ff1+3
 11632   002674  0E00               	movlw	0
 11633   002676  6E05               	movwf	___fleq@ff2^0,c
 11634   002678  0E00               	movlw	0
 11635   00267A  6E06               	movwf	(___fleq@ff2+1)^0,c
 11636   00267C  0E00               	movlw	0
 11637   00267E  6E07               	movwf	(___fleq@ff2+2)^0,c
 11638   002680  0E00               	movlw	0
 11639   002682  6E08               	movwf	(___fleq@ff2+3)^0,c
 11640   002684  ECC0  F033         	call	___fleq	;wreg free
 11641   002688  B0D8               	btfsc	status,0,c
 11642   00268A  EF49  F013         	goto	u8741
 11643   00268E  EF4B  F013         	goto	u8740
 11644   002692                     u8741:
 11645   002692  EF2B  F014         	goto	l1016
 11646   002696                     u8740:
 11647   002696  EF58  F013         	goto	l6772
 11648   00269A                     l1018:
 11649                           
 11650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 11651   00269A  C083  F098         	movff	efgtoa@ou,efgtoa@u
 11652   00269E  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
 11653   0026A2  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
 11654   0026A6  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
 11655   0026AA                     
 11656                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
 11657   0026AA  0100               	movlb	0	; () banked
 11658   0026AC  4B7F               	infsnz	efgtoa@e& (0+255),f,b
 11659   0026AE  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
 11660   0026B0                     l6772:
 11661                           
 11662                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 11663   0026B0  C098  F00F         	movff	efgtoa@u,___flmul@b
 11664   0026B4  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 11665   0026B8  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 11666   0026BC  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 11667   0026C0  0E00               	movlw	0
 11668   0026C2  6E13               	movwf	___flmul@a^0,c
 11669   0026C4  0E00               	movlw	0
 11670   0026C6  6E14               	movwf	(___flmul@a+1)^0,c
 11671   0026C8  0E20               	movlw	32
 11672   0026CA  6E15               	movwf	(___flmul@a+2)^0,c
 11673   0026CC  0E41               	movlw	65
 11674   0026CE  6E16               	movwf	(___flmul@a+3)^0,c
 11675   0026D0  ECC2  F01F         	call	___flmul	;wreg free
 11676   0026D4  C00F  F083         	movff	?___flmul,efgtoa@ou
 11677   0026D8  C010  F084         	movff	?___flmul+1,efgtoa@ou+1
 11678   0026DC  C011  F085         	movff	?___flmul+2,efgtoa@ou+2
 11679   0026E0  C012  F086         	movff	?___flmul+3,efgtoa@ou+3
 11680   0026E4  0100               	movlb	0	; () banked
 11681   0026E6  5183               	movf	efgtoa@ou& (0+255),w,b
 11682   0026E8  5D92               	subwf	efgtoa@g& (0+255),w,b
 11683   0026EA  6E01               	movwf	labs@a^0,c
 11684   0026EC  5184               	movf	(efgtoa@ou+1)& (0+255),w,b
 11685   0026EE  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11686   0026F0  6E02               	movwf	(labs@a+1)^0,c
 11687   0026F2  5185               	movf	(efgtoa@ou+2)& (0+255),w,b
 11688   0026F4  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11689   0026F6  6E03               	movwf	(labs@a+2)^0,c
 11690   0026F8  5186               	movf	(efgtoa@ou+3)& (0+255),w,b
 11691   0026FA  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11692   0026FC  6E04               	movwf	(labs@a+3)^0,c
 11693   0026FE  EC65  F035         	call	_labs	;wreg free
 11694   002702  BE04               	btfsc	(?_labs+3)^0,7,c
 11695   002704  EF8F  F013         	goto	u8751
 11696   002708  5004               	movf	(?_labs+3)^0,w,c
 11697   00270A  1003               	iorwf	(?_labs+2)^0,w,c
 11698   00270C  1002               	iorwf	(?_labs+1)^0,w,c
 11699   00270E  E109               	bnz	u8750
 11700   002710  0E02               	movlw	2
 11701   002712  5C01               	subwf	?_labs^0,w,c
 11702   002714  A0D8               	btfss	status,0,c
 11703   002716  EF8F  F013         	goto	u8751
 11704   00271A  EF91  F013         	goto	u8750
 11705   00271E                     u8751:
 11706   00271E  EF4D  F013         	goto	l1018
 11707   002722                     u8750:
 11708   002722  C083  F060         	movff	efgtoa@ou,___flge@ff1
 11709   002726  C084  F061         	movff	efgtoa@ou+1,___flge@ff1+1
 11710   00272A  C085  F062         	movff	efgtoa@ou+2,___flge@ff1+2
 11711   00272E  C086  F063         	movff	efgtoa@ou+3,___flge@ff1+3
 11712   002732  C092  F064         	movff	efgtoa@g,___flge@ff2
 11713   002736  C093  F065         	movff	efgtoa@g+1,___flge@ff2+1
 11714   00273A  C094  F066         	movff	efgtoa@g+2,___flge@ff2+2
 11715   00273E  C095  F067         	movff	efgtoa@g+3,___flge@ff2+3
 11716   002742  EC57  F02F         	call	___flge	;wreg free
 11717   002746  0100               	movlb	0	; () banked
 11718   002748  A0D8               	btfss	status,0,c
 11719   00274A  EFA9  F013         	goto	u8761
 11720   00274E  EFAB  F013         	goto	u8760
 11721   002752                     u8761:
 11722   002752  EF4D  F013         	goto	l1018
 11723   002756                     u8760:
 11724   002756                     
 11725                           ; BSR set to: 0
 11726                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 11727   002756  5198               	movf	efgtoa@u& (0+255),w,b
 11728   002758  5D92               	subwf	efgtoa@g& (0+255),w,b
 11729   00275A  6E01               	movwf	labs@a^0,c
 11730   00275C  5199               	movf	(efgtoa@u+1)& (0+255),w,b
 11731   00275E  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11732   002760  6E02               	movwf	(labs@a+1)^0,c
 11733   002762  519A               	movf	(efgtoa@u+2)& (0+255),w,b
 11734   002764  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11735   002766  6E03               	movwf	(labs@a+2)^0,c
 11736   002768  519B               	movf	(efgtoa@u+3)& (0+255),w,b
 11737   00276A  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11738   00276C  6E04               	movwf	(labs@a+3)^0,c
 11739   00276E  EC65  F035         	call	_labs	;wreg free
 11740   002772  BE04               	btfsc	(?_labs+3)^0,7,c
 11741   002774  EFC9  F013         	goto	u8770
 11742   002778  5004               	movf	(?_labs+3)^0,w,c
 11743   00277A  1003               	iorwf	(?_labs+2)^0,w,c
 11744   00277C  1002               	iorwf	(?_labs+1)^0,w,c
 11745   00277E  E107               	bnz	u8771
 11746   002780  0E02               	movlw	2
 11747   002782  5C01               	subwf	?_labs^0,w,c
 11748   002784  B0D8               	btfsc	status,0,c
 11749   002786  EFC7  F013         	goto	u8771
 11750   00278A  EFC9  F013         	goto	u8770
 11751   00278E                     u8771:
 11752   00278E  EF11  F014         	goto	l6790
 11753   002792                     u8770:
 11754   002792                     l6780:
 11755                           
 11756                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
 11757   002792  C098  F092         	movff	efgtoa@u,efgtoa@g
 11758   002796  C099  F093         	movff	efgtoa@u+1,efgtoa@g+1
 11759   00279A  C09A  F094         	movff	efgtoa@u+2,efgtoa@g+2
 11760   00279E  C09B  F095         	movff	efgtoa@u+3,efgtoa@g+3
 11761                           
 11762                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
 11763   0027A2  EF2B  F014         	goto	l1016
 11764   0027A6                     l6782:
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 11768   0027A6  C098  F028         	movff	efgtoa@u,___fldiv@b
 11769   0027AA  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 11770   0027AE  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 11771   0027B2  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 11772   0027B6  0E00               	movlw	0
 11773   0027B8  6E2C               	movwf	___fldiv@a^0,c
 11774   0027BA  0E00               	movlw	0
 11775   0027BC  6E2D               	movwf	(___fldiv@a+1)^0,c
 11776   0027BE  0E20               	movlw	32
 11777   0027C0  6E2E               	movwf	(___fldiv@a+2)^0,c
 11778   0027C2  0E41               	movlw	65
 11779   0027C4  6E2F               	movwf	(___fldiv@a+3)^0,c
 11780   0027C6  ECC4  F023         	call	___fldiv	;wreg free
 11781   0027CA  C028  F098         	movff	?___fldiv,efgtoa@u
 11782   0027CE  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 11783   0027D2  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 11784   0027D6  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 11785   0027DA                     
 11786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
 11787   0027DA  0100               	movlb	0	; () banked
 11788   0027DC  077F               	decf	efgtoa@e& (0+255),f,b
 11789   0027DE  A0D8               	btfss	status,0,c
 11790   0027E0  0780               	decf	(efgtoa@e+1)& (0+255),f,b
 11791   0027E2                     
 11792                           ; BSR set to: 0
 11793                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 11794   0027E2  5198               	movf	efgtoa@u& (0+255),w,b
 11795   0027E4  5D92               	subwf	efgtoa@g& (0+255),w,b
 11796   0027E6  6E01               	movwf	labs@a^0,c
 11797   0027E8  5199               	movf	(efgtoa@u+1)& (0+255),w,b
 11798   0027EA  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11799   0027EC  6E02               	movwf	(labs@a+1)^0,c
 11800   0027EE  519A               	movf	(efgtoa@u+2)& (0+255),w,b
 11801   0027F0  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11802   0027F2  6E03               	movwf	(labs@a+2)^0,c
 11803   0027F4  519B               	movf	(efgtoa@u+3)& (0+255),w,b
 11804   0027F6  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11805   0027F8  6E04               	movwf	(labs@a+3)^0,c
 11806   0027FA  EC65  F035         	call	_labs	;wreg free
 11807   0027FE  BE04               	btfsc	(?_labs+3)^0,7,c
 11808   002800  EF0F  F014         	goto	u8780
 11809   002804  5004               	movf	(?_labs+3)^0,w,c
 11810   002806  1003               	iorwf	(?_labs+2)^0,w,c
 11811   002808  1002               	iorwf	(?_labs+1)^0,w,c
 11812   00280A  E107               	bnz	u8781
 11813   00280C  0E02               	movlw	2
 11814   00280E  5C01               	subwf	?_labs^0,w,c
 11815   002810  B0D8               	btfsc	status,0,c
 11816   002812  EF0D  F014         	goto	u8781
 11817   002816  EF0F  F014         	goto	u8780
 11818   00281A                     u8781:
 11819   00281A  EF11  F014         	goto	l6790
 11820   00281E                     u8780:
 11821   00281E  EFC9  F013         	goto	l6780
 11822   002822                     l6790:
 11823                           
 11824                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 11825   002822  C092  F060         	movff	efgtoa@g,___flge@ff1
 11826   002826  C093  F061         	movff	efgtoa@g+1,___flge@ff1+1
 11827   00282A  C094  F062         	movff	efgtoa@g+2,___flge@ff1+2
 11828   00282E  C095  F063         	movff	efgtoa@g+3,___flge@ff1+3
 11829   002832  C098  F064         	movff	efgtoa@u,___flge@ff2
 11830   002836  C099  F065         	movff	efgtoa@u+1,___flge@ff2+1
 11831   00283A  C09A  F066         	movff	efgtoa@u+2,___flge@ff2+2
 11832   00283E  C09B  F067         	movff	efgtoa@u+3,___flge@ff2+3
 11833   002842  EC57  F02F         	call	___flge	;wreg free
 11834   002846  0100               	movlb	0	; () banked
 11835   002848  A0D8               	btfss	status,0,c
 11836   00284A  EF29  F014         	goto	u8791
 11837   00284E  EF2B  F014         	goto	u8790
 11838   002852                     u8791:
 11839   002852  EFD3  F013         	goto	l6782
 11840   002856                     u8790:
 11841   002856                     l1016:
 11842                           
 11843                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 11844   002856  C06D  F079         	movff	efgtoa@c,efgtoa@mode
 11845                           
 11846                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 11847   00285A  C079  F07A         	movff	efgtoa@mode,efgtoa@nmode
 11848   00285E                     
 11849                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 11850   00285E  0102               	movlb	2	; () banked
 11851   002860  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 11852   002862  EF35  F014         	goto	u8801
 11853   002866  EF37  F014         	goto	u8800
 11854   00286A                     u8801:
 11855   00286A  EF3D  F014         	goto	l6796
 11856   00286E                     u8800:
 11857   00286E                     
 11858                           ; BSR set to: 2
 11859   00286E  C2FE  F072         	movff	_prec,efgtoa@p
 11860   002872  C2FF  F073         	movff	_prec+1,efgtoa@p+1
 11861   002876  EF42  F014         	goto	l6798
 11862   00287A                     l6796:
 11863                           
 11864                           ; BSR set to: 2
 11865   00287A  0E00               	movlw	0
 11866   00287C  0100               	movlb	0	; () banked
 11867   00287E  6F73               	movwf	(efgtoa@p+1)& (0+255),b
 11868   002880  0E06               	movlw	6
 11869   002882  6F72               	movwf	efgtoa@p& (0+255),b
 11870   002884                     l6798:
 11871                           
 11872                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 11873   002884  C072  F07D         	movff	efgtoa@p,efgtoa@m
 11874   002888  C073  F07E         	movff	efgtoa@p+1,efgtoa@m+1
 11875   00288C                     
 11876                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 11877   00288C  0100               	movlb	0	; () banked
 11878   00288E  4B7D               	infsnz	efgtoa@m& (0+255),f,b
 11879   002890  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
 11880   002892                     
 11881                           ; BSR set to: 0
 11882                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 11883   002892  0E66               	movlw	102
 11884   002894  197A               	xorwf	efgtoa@nmode& (0+255),w,b
 11885   002896  A4D8               	btfss	status,2,c
 11886   002898  EF50  F014         	goto	u8811
 11887   00289C  EF52  F014         	goto	u8810
 11888   0028A0                     u8811:
 11889   0028A0  EF72  F014         	goto	l6812
 11890   0028A4                     u8810:
 11891   0028A4                     
 11892                           ; BSR set to: 0
 11893                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 11894   0028A4  BF80               	btfsc	(efgtoa@e+1)& (0+255),7,b
 11895   0028A6  EF59  F014         	goto	u8820
 11896   0028AA  EF57  F014         	goto	u8821
 11897   0028AE                     u8821:
 11898   0028AE  EF65  F014         	goto	l6808
 11899   0028B2                     u8820:
 11900   0028B2                     
 11901                           ; BSR set to: 0
 11902                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 11903   0028B2  0E00               	movlw	0
 11904   0028B4  6F98               	movwf	efgtoa@u& (0+255),b
 11905   0028B6  0E00               	movlw	0
 11906   0028B8  6F99               	movwf	(efgtoa@u+1)& (0+255),b
 11907   0028BA  0E80               	movlw	128
 11908   0028BC  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
 11909   0028BE  0E3F               	movlw	63
 11910   0028C0  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
 11911                           
 11912                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 11913   0028C2  0E00               	movlw	0
 11914   0028C4  6F80               	movwf	(efgtoa@e+1)& (0+255),b
 11915   0028C6  0E00               	movlw	0
 11916   0028C8  6F7F               	movwf	efgtoa@e& (0+255),b
 11917   0028CA                     l6808:
 11918                           
 11919                           ; BSR set to: 0
 11920                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 11921   0028CA  0E67               	movlw	103
 11922   0028CC  1979               	xorwf	efgtoa@mode& (0+255),w,b
 11923   0028CE  B4D8               	btfsc	status,2,c
 11924   0028D0  EF6C  F014         	goto	u8831
 11925   0028D4  EF6E  F014         	goto	u8830
 11926   0028D8                     u8831:
 11927   0028D8  EF72  F014         	goto	l6812
 11928   0028DC                     u8830:
 11929   0028DC                     
 11930                           ; BSR set to: 0
 11931                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 11932   0028DC  517F               	movf	efgtoa@e& (0+255),w,b
 11933   0028DE  277D               	addwf	efgtoa@m& (0+255),f,b
 11934   0028E0  5180               	movf	(efgtoa@e+1)& (0+255),w,b
 11935   0028E2  237E               	addwfc	(efgtoa@m+1)& (0+255),f,b
 11936   0028E4                     l6812:
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 11940   0028E4  0E00               	movlw	0
 11941   0028E6  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 11942   0028E8  0E00               	movlw	0
 11943   0028EA  6F87               	movwf	efgtoa@i& (0+255),b
 11944   0028EC                     
 11945                           ; BSR set to: 0
 11946                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 11947   0028EC  C092  F089         	movff	efgtoa@g,efgtoa@h
 11948   0028F0  C093  F08A         	movff	efgtoa@g+1,efgtoa@h+1
 11949   0028F4  C094  F08B         	movff	efgtoa@g+2,efgtoa@h+2
 11950   0028F8  C095  F08C         	movff	efgtoa@g+3,efgtoa@h+3
 11951   0028FC                     
 11952                           ; BSR set to: 0
 11953                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 11954   0028FC  C098  F083         	movff	efgtoa@u,efgtoa@ou
 11955   002900  C099  F084         	movff	efgtoa@u+1,efgtoa@ou+1
 11956   002904  C09A  F085         	movff	efgtoa@u+2,efgtoa@ou+2
 11957   002908  C09B  F086         	movff	efgtoa@u+3,efgtoa@ou+3
 11958                           
 11959                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 11960   00290C  EF03  F015         	goto	l6826
 11961   002910                     l6818:
 11962                           
 11963                           ; BSR set to: 0
 11964                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 11965   002910  C089  F028         	movff	efgtoa@h,___fldiv@b
 11966   002914  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
 11967   002918  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
 11968   00291C  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
 11969   002920  C098  F02C         	movff	efgtoa@u,___fldiv@a
 11970   002924  C099  F02D         	movff	efgtoa@u+1,___fldiv@a+1
 11971   002928  C09A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
 11972   00292C  C09B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
 11973   002930  ECC4  F023         	call	___fldiv	;wreg free
 11974   002934  C028  F041         	movff	?___fldiv,floorf@x
 11975   002938  C029  F042         	movff	?___fldiv+1,floorf@x+1
 11976   00293C  C02A  F043         	movff	?___fldiv+2,floorf@x+2
 11977   002940  C02B  F044         	movff	?___fldiv+3,floorf@x+3
 11978   002944  ECAE  F029         	call	_floorf	;wreg free
 11979   002948  C041  F08D         	movff	?_floorf,efgtoa@l
 11980   00294C  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
 11981   002950  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
 11982   002954  C044  F090         	movff	?_floorf+3,efgtoa@l+3
 11983                           
 11984                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 11985   002958  C08D  F001         	movff	efgtoa@l,___fltol@f1
 11986   00295C  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 11987   002960  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 11988   002964  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 11989   002968  ECDA  F02F         	call	___fltol	;wreg free
 11990   00296C  C001  F07B         	movff	?___fltol,efgtoa@d
 11991   002970  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
 11992   002974                     
 11993                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 11994   002974  C089  F051         	movff	efgtoa@h,___flsub@b
 11995   002978  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
 11996   00297C  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
 11997   002980  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
 11998   002984  C08D  F013         	movff	efgtoa@l,___flmul@a
 11999   002988  C08E  F014         	movff	efgtoa@l+1,___flmul@a+1
 12000   00298C  C08F  F015         	movff	efgtoa@l+2,___flmul@a+2
 12001   002990  C090  F016         	movff	efgtoa@l+3,___flmul@a+3
 12002   002994  C098  F00F         	movff	efgtoa@u,___flmul@b
 12003   002998  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12004   00299C  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12005   0029A0  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12006   0029A4  ECC2  F01F         	call	___flmul	;wreg free
 12007   0029A8  C00F  F055         	movff	?___flmul,___flsub@a
 12008   0029AC  C010  F056         	movff	?___flmul+1,___flsub@a+1
 12009   0029B0  C011  F057         	movff	?___flmul+2,___flsub@a+2
 12010   0029B4  C012  F058         	movff	?___flmul+3,___flsub@a+3
 12011   0029B8  EC04  F036         	call	___flsub	;wreg free
 12012   0029BC  C051  F089         	movff	?___flsub,efgtoa@h
 12013   0029C0  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
 12014   0029C4  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
 12015   0029C8  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
 12016   0029CC                     
 12017                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 12018   0029CC  C098  F028         	movff	efgtoa@u,___fldiv@b
 12019   0029D0  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 12020   0029D4  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 12021   0029D8  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 12022   0029DC  0E00               	movlw	0
 12023   0029DE  6E2C               	movwf	___fldiv@a^0,c
 12024   0029E0  0E00               	movlw	0
 12025   0029E2  6E2D               	movwf	(___fldiv@a+1)^0,c
 12026   0029E4  0E20               	movlw	32
 12027   0029E6  6E2E               	movwf	(___fldiv@a+2)^0,c
 12028   0029E8  0E41               	movlw	65
 12029   0029EA  6E2F               	movwf	(___fldiv@a+3)^0,c
 12030   0029EC  ECC4  F023         	call	___fldiv	;wreg free
 12031   0029F0  C028  F098         	movff	?___fldiv,efgtoa@u
 12032   0029F4  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 12033   0029F8  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 12034   0029FC  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 12035   002A00                     
 12036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 12037   002A00  0100               	movlb	0	; () banked
 12038   002A02  4B87               	infsnz	efgtoa@i& (0+255),f,b
 12039   002A04  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
 12040   002A06                     l6826:
 12041                           
 12042                           ; BSR set to: 0
 12043                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12044   002A06  517D               	movf	efgtoa@m& (0+255),w,b
 12045   002A08  5D87               	subwf	efgtoa@i& (0+255),w,b
 12046   002A0A  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12047   002A0C  0A80               	xorlw	128
 12048   002A0E  6F6E               	movwf	??_efgtoa& (0+255),b
 12049   002A10  517E               	movf	(efgtoa@m+1)& (0+255),w,b
 12050   002A12  0A80               	xorlw	128
 12051   002A14  596E               	subwfb	??_efgtoa& (0+255),w,b
 12052   002A16  A0D8               	btfss	status,0,c
 12053   002A18  EF10  F015         	goto	u8841
 12054   002A1C  EF12  F015         	goto	u8840
 12055   002A20                     u8841:
 12056   002A20  EF88  F014         	goto	l6818
 12057   002A24                     u8840:
 12058   002A24                     
 12059                           ; BSR set to: 0
 12060                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 12061   002A24  C098  F00F         	movff	efgtoa@u,___flmul@b
 12062   002A28  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12063   002A2C  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12064   002A30  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12065   002A34  0E00               	movlw	0
 12066   002A36  6E13               	movwf	___flmul@a^0,c
 12067   002A38  0E00               	movlw	0
 12068   002A3A  6E14               	movwf	(___flmul@a+1)^0,c
 12069   002A3C  0EA0               	movlw	160
 12070   002A3E  6E15               	movwf	(___flmul@a+2)^0,c
 12071   002A40  0E40               	movlw	64
 12072   002A42  6E16               	movwf	(___flmul@a+3)^0,c
 12073   002A44  ECC2  F01F         	call	___flmul	;wreg free
 12074   002A48  C00F  F08D         	movff	?___flmul,efgtoa@l
 12075   002A4C  C010  F08E         	movff	?___flmul+1,efgtoa@l+1
 12076   002A50  C011  F08F         	movff	?___flmul+2,efgtoa@l+2
 12077   002A54  C012  F090         	movff	?___flmul+3,efgtoa@l+3
 12078   002A58                     
 12079                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 12080   002A58  C089  F060         	movff	efgtoa@h,___flge@ff1
 12081   002A5C  C08A  F061         	movff	efgtoa@h+1,___flge@ff1+1
 12082   002A60  C08B  F062         	movff	efgtoa@h+2,___flge@ff1+2
 12083   002A64  C08C  F063         	movff	efgtoa@h+3,___flge@ff1+3
 12084   002A68  C08D  F064         	movff	efgtoa@l,___flge@ff2
 12085   002A6C  C08E  F065         	movff	efgtoa@l+1,___flge@ff2+1
 12086   002A70  C08F  F066         	movff	efgtoa@l+2,___flge@ff2+2
 12087   002A74  C090  F067         	movff	efgtoa@l+3,___flge@ff2+3
 12088   002A78  EC57  F02F         	call	___flge	;wreg free
 12089   002A7C  0100               	movlb	0	; () banked
 12090   002A7E  B0D8               	btfsc	status,0,c
 12091   002A80  EF44  F015         	goto	u8851
 12092   002A84  EF46  F015         	goto	u8850
 12093   002A88                     u8851:
 12094   002A88  EF50  F015         	goto	l6834
 12095   002A8C                     u8850:
 12096   002A8C                     
 12097                           ; BSR set to: 0
 12098                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 12099   002A8C  0E00               	movlw	0
 12100   002A8E  6F8D               	movwf	efgtoa@l& (0+255),b
 12101   002A90  0E00               	movlw	0
 12102   002A92  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
 12103   002A94  0E00               	movlw	0
 12104   002A96  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
 12105   002A98  0E00               	movlw	0
 12106   002A9A  6F90               	movwf	(efgtoa@l+3)& (0+255),b
 12107                           
 12108                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 12109   002A9C  EF79  F015         	goto	l6840
 12110   002AA0                     l6834:
 12111                           
 12112                           ; BSR set to: 0
 12113                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 12114   002AA0  C089  F001         	movff	efgtoa@h,___fleq@ff1
 12115   002AA4  C08A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
 12116   002AA8  C08B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
 12117   002AAC  C08C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
 12118   002AB0  C08D  F005         	movff	efgtoa@l,___fleq@ff2
 12119   002AB4  C08E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
 12120   002AB8  C08F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
 12121   002ABC  C090  F008         	movff	efgtoa@l+3,___fleq@ff2+3
 12122   002AC0  ECC0  F033         	call	___fleq	;wreg free
 12123   002AC4  A0D8               	btfss	status,0,c
 12124   002AC6  EF67  F015         	goto	u8861
 12125   002ACA  EF69  F015         	goto	u8860
 12126   002ACE                     u8861:
 12127   002ACE  EF79  F015         	goto	l6840
 12128   002AD2                     u8860:
 12129   002AD2  0100               	movlb	0	; () banked
 12130   002AD4  B17B               	btfsc	efgtoa@d& (0+255),0,b
 12131   002AD6  EF6F  F015         	goto	u8871
 12132   002ADA  EF71  F015         	goto	u8870
 12133   002ADE                     u8871:
 12134   002ADE  EF79  F015         	goto	l6840
 12135   002AE2                     u8870:
 12136   002AE2                     
 12137                           ; BSR set to: 0
 12138                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 12139   002AE2  0E00               	movlw	0
 12140   002AE4  6F8D               	movwf	efgtoa@l& (0+255),b
 12141   002AE6  0E00               	movlw	0
 12142   002AE8  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
 12143   002AEA  0E00               	movlw	0
 12144   002AEC  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
 12145   002AEE  0E00               	movlw	0
 12146   002AF0  6F90               	movwf	(efgtoa@l+3)& (0+255),b
 12147   002AF2                     l6840:
 12148                           
 12149                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 12150   002AF2  C092  F041         	movff	efgtoa@g,___fladd@b
 12151   002AF6  C093  F042         	movff	efgtoa@g+1,___fladd@b+1
 12152   002AFA  C094  F043         	movff	efgtoa@g+2,___fladd@b+2
 12153   002AFE  C095  F044         	movff	efgtoa@g+3,___fladd@b+3
 12154   002B02  C08D  F045         	movff	efgtoa@l,___fladd@a
 12155   002B06  C08E  F046         	movff	efgtoa@l+1,___fladd@a+1
 12156   002B0A  C08F  F047         	movff	efgtoa@l+2,___fladd@a+2
 12157   002B0E  C090  F048         	movff	efgtoa@l+3,___fladd@a+3
 12158   002B12  EC67  F01D         	call	___fladd	;wreg free
 12159   002B16  C041  F089         	movff	?___fladd,efgtoa@h
 12160   002B1A  C042  F08A         	movff	?___fladd+1,efgtoa@h+1
 12161   002B1E  C043  F08B         	movff	?___fladd+2,efgtoa@h+2
 12162   002B22  C044  F08C         	movff	?___fladd+3,efgtoa@h+3
 12163   002B26                     
 12164                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 12165   002B26  C089  F060         	movff	efgtoa@h,___flge@ff1
 12166   002B2A  C08A  F061         	movff	efgtoa@h+1,___flge@ff1+1
 12167   002B2E  C08B  F062         	movff	efgtoa@h+2,___flge@ff1+2
 12168   002B32  C08C  F063         	movff	efgtoa@h+3,___flge@ff1+3
 12169   002B36  0E00               	movlw	0
 12170   002B38  6E13               	movwf	___flmul@a^0,c
 12171   002B3A  0E00               	movlw	0
 12172   002B3C  6E14               	movwf	(___flmul@a+1)^0,c
 12173   002B3E  0E20               	movlw	32
 12174   002B40  6E15               	movwf	(___flmul@a+2)^0,c
 12175   002B42  0E41               	movlw	65
 12176   002B44  6E16               	movwf	(___flmul@a+3)^0,c
 12177   002B46  C083  F00F         	movff	efgtoa@ou,___flmul@b
 12178   002B4A  C084  F010         	movff	efgtoa@ou+1,___flmul@b+1
 12179   002B4E  C085  F011         	movff	efgtoa@ou+2,___flmul@b+2
 12180   002B52  C086  F012         	movff	efgtoa@ou+3,___flmul@b+3
 12181   002B56  ECC2  F01F         	call	___flmul	;wreg free
 12182   002B5A  C00F  F064         	movff	?___flmul,___flge@ff2
 12183   002B5E  C010  F065         	movff	?___flmul+1,___flge@ff2+1
 12184   002B62  C011  F066         	movff	?___flmul+2,___flge@ff2+2
 12185   002B66  C012  F067         	movff	?___flmul+3,___flge@ff2+3
 12186   002B6A  EC57  F02F         	call	___flge	;wreg free
 12187   002B6E  0100               	movlb	0	; () banked
 12188   002B70  A0D8               	btfss	status,0,c
 12189   002B72  EFBD  F015         	goto	u8881
 12190   002B76  EFBF  F015         	goto	u8880
 12191   002B7A                     u8881:
 12192   002B7A  EFE7  F015         	goto	l6852
 12193   002B7E                     u8880:
 12194   002B7E                     
 12195                           ; BSR set to: 0
 12196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 12197   002B7E  4B7F               	infsnz	efgtoa@e& (0+255),f,b
 12198   002B80  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
 12199   002B82                     
 12200                           ; BSR set to: 0
 12201                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 12202   002B82  C083  F00F         	movff	efgtoa@ou,___flmul@b
 12203   002B86  C084  F010         	movff	efgtoa@ou+1,___flmul@b+1
 12204   002B8A  C085  F011         	movff	efgtoa@ou+2,___flmul@b+2
 12205   002B8E  C086  F012         	movff	efgtoa@ou+3,___flmul@b+3
 12206   002B92  0E00               	movlw	0
 12207   002B94  6E13               	movwf	___flmul@a^0,c
 12208   002B96  0E00               	movlw	0
 12209   002B98  6E14               	movwf	(___flmul@a+1)^0,c
 12210   002B9A  0E20               	movlw	32
 12211   002B9C  6E15               	movwf	(___flmul@a+2)^0,c
 12212   002B9E  0E41               	movlw	65
 12213   002BA0  6E16               	movwf	(___flmul@a+3)^0,c
 12214   002BA2  ECC2  F01F         	call	___flmul	;wreg free
 12215   002BA6  C00F  F083         	movff	?___flmul,efgtoa@ou
 12216   002BAA  C010  F084         	movff	?___flmul+1,efgtoa@ou+1
 12217   002BAE  C011  F085         	movff	?___flmul+2,efgtoa@ou+2
 12218   002BB2  C012  F086         	movff	?___flmul+3,efgtoa@ou+3
 12219   002BB6                     
 12220                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 12221   002BB6  0E66               	movlw	102
 12222   002BB8  0100               	movlb	0	; () banked
 12223   002BBA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
 12224   002BBC  A4D8               	btfss	status,2,c
 12225   002BBE  EFE3  F015         	goto	u8891
 12226   002BC2  EFE5  F015         	goto	u8890
 12227   002BC6                     u8891:
 12228   002BC6  EFE7  F015         	goto	l6852
 12229   002BCA                     u8890:
 12230   002BCA                     
 12231                           ; BSR set to: 0
 12232                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 12233   002BCA  4B7D               	infsnz	efgtoa@m& (0+255),f,b
 12234   002BCC  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
 12235   002BCE                     l6852:
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 12239   002BCE  C083  F098         	movff	efgtoa@ou,efgtoa@u
 12240   002BD2  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
 12241   002BD6  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
 12242   002BDA  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
 12243   002BDE                     
 12244                           ; BSR set to: 0
 12245                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 12246   002BDE  C07F  F070         	movff	efgtoa@e,efgtoa@ne
 12247   002BE2  C080  F071         	movff	efgtoa@e+1,efgtoa@ne+1
 12248   002BE6                     
 12249                           ; BSR set to: 0
 12250                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 12251   002BE6  6B78               	clrf	efgtoa@pp& (0+255),b
 12252   002BE8                     
 12253                           ; BSR set to: 0
 12254                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 12255   002BE8  0E00               	movlw	0
 12256   002BEA  6F75               	movwf	(efgtoa@t+1)& (0+255),b
 12257   002BEC  0E00               	movlw	0
 12258   002BEE  6F74               	movwf	efgtoa@t& (0+255),b
 12259   002BF0                     
 12260                           ; BSR set to: 0
 12261                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 12262   002BF0  0E00               	movlw	0
 12263   002BF2  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 12264   002BF4  0E00               	movlw	0
 12265   002BF6  6F87               	movwf	efgtoa@i& (0+255),b
 12266                           
 12267                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12268   002BF8  EFE3  F016         	goto	l6902
 12269   002BFC                     l6862:
 12270                           
 12271                           ; BSR set to: 0
 12272                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 12273   002BFC  C089  F028         	movff	efgtoa@h,___fldiv@b
 12274   002C00  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
 12275   002C04  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
 12276   002C08  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
 12277   002C0C  C098  F02C         	movff	efgtoa@u,___fldiv@a
 12278   002C10  C099  F02D         	movff	efgtoa@u+1,___fldiv@a+1
 12279   002C14  C09A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
 12280   002C18  C09B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
 12281   002C1C  ECC4  F023         	call	___fldiv	;wreg free
 12282   002C20  C028  F041         	movff	?___fldiv,floorf@x
 12283   002C24  C029  F042         	movff	?___fldiv+1,floorf@x+1
 12284   002C28  C02A  F043         	movff	?___fldiv+2,floorf@x+2
 12285   002C2C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
 12286   002C30  ECAE  F029         	call	_floorf	;wreg free
 12287   002C34  C041  F08D         	movff	?_floorf,efgtoa@l
 12288   002C38  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
 12289   002C3C  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
 12290   002C40  C044  F090         	movff	?_floorf+3,efgtoa@l+3
 12291                           
 12292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 12293   002C44  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12294   002C48  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12295   002C4C  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12296   002C50  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12297   002C54  ECDA  F02F         	call	___fltol	;wreg free
 12298   002C58  BE02               	btfsc	(?___fltol+1)^0,7,c
 12299   002C5A  EF3A  F016         	goto	u8900
 12300   002C5E  5002               	movf	(?___fltol+1)^0,w,c
 12301   002C60  E107               	bnz	u8901
 12302   002C62  0E0A               	movlw	10
 12303   002C64  5C01               	subwf	?___fltol^0,w,c
 12304   002C66  B0D8               	btfsc	status,0,c
 12305   002C68  EF38  F016         	goto	u8901
 12306   002C6C  EF3A  F016         	goto	u8900
 12307   002C70                     u8901:
 12308   002C70  EF4A  F016         	goto	l6866
 12309   002C74                     u8900:
 12310   002C74  C08D  F001         	movff	efgtoa@l,___fltol@f1
 12311   002C78  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12312   002C7C  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12313   002C80  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12314   002C84  ECDA  F02F         	call	___fltol	;wreg free
 12315   002C88  C001  F07B         	movff	?___fltol,efgtoa@d
 12316   002C8C  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
 12317   002C90  EF4F  F016         	goto	l1046
 12318   002C94                     l6866:
 12319   002C94  0E00               	movlw	0
 12320   002C96  0100               	movlb	0	; () banked
 12321   002C98  6F7C               	movwf	(efgtoa@d+1)& (0+255),b
 12322   002C9A  0E09               	movlw	9
 12323   002C9C  6F7B               	movwf	efgtoa@d& (0+255),b
 12324   002C9E                     l1046:
 12325                           
 12326                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 12327   002C9E  0100               	movlb	0	; () banked
 12328   002CA0  5178               	movf	efgtoa@pp& (0+255),w,b
 12329   002CA2  A4D8               	btfss	status,2,c
 12330   002CA4  EF56  F016         	goto	u8911
 12331   002CA8  EF58  F016         	goto	u8910
 12332   002CAC                     u8911:
 12333   002CAC  EF80  F016         	goto	l6886
 12334   002CB0                     u8910:
 12335   002CB0                     
 12336                           ; BSR set to: 0
 12337   002CB0  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 12338   002CB2  EF5F  F016         	goto	u8920
 12339   002CB6  EF5D  F016         	goto	u8921
 12340   002CBA                     u8921:
 12341   002CBA  EF80  F016         	goto	l6886
 12342   002CBE                     u8920:
 12343   002CBE                     
 12344                           ; BSR set to: 0
 12345                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 12346   002CBE  0E58               	movlw	low _dbuf
 12347   002CC0  2596               	addwf	efgtoa@n& (0+255),w,b
 12348   002CC2  6ED9               	movwf	fsr2l,c
 12349   002CC4  0E03               	movlw	high _dbuf
 12350   002CC6  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12351   002CC8  6EDA               	movwf	fsr2h,c
 12352   002CCA  0E2E               	movlw	46
 12353   002CCC  6EDF               	movwf	indf2,c
 12354   002CCE                     
 12355                           ; BSR set to: 0
 12356   002CCE  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12357   002CD0  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12358   002CD2                     
 12359                           ; BSR set to: 0
 12360                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 12361   002CD2  0781               	decf	efgtoa@w& (0+255),f,b
 12362   002CD4  A0D8               	btfss	status,0,c
 12363   002CD6  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12364   002CD8                     
 12365                           ; BSR set to: 0
 12366                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 12367   002CD8  0E01               	movlw	1
 12368   002CDA  6F78               	movwf	efgtoa@pp& (0+255),b
 12369   002CDC  EF80  F016         	goto	l6886
 12370   002CE0                     l6878:
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 12374   002CE0  0E58               	movlw	low _dbuf
 12375   002CE2  2596               	addwf	efgtoa@n& (0+255),w,b
 12376   002CE4  6ED9               	movwf	fsr2l,c
 12377   002CE6  0E03               	movlw	high _dbuf
 12378   002CE8  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12379   002CEA  6EDA               	movwf	fsr2h,c
 12380   002CEC  0E30               	movlw	48
 12381   002CEE  6EDF               	movwf	indf2,c
 12382   002CF0                     
 12383                           ; BSR set to: 0
 12384   002CF0  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12385   002CF2  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12386   002CF4                     
 12387                           ; BSR set to: 0
 12388                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 12389   002CF4  0781               	decf	efgtoa@w& (0+255),f,b
 12390   002CF6  A0D8               	btfss	status,0,c
 12391   002CF8  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12392   002CFA                     
 12393                           ; BSR set to: 0
 12394                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 12395   002CFA  0774               	decf	efgtoa@t& (0+255),f,b
 12396   002CFC  A0D8               	btfss	status,0,c
 12397   002CFE  0775               	decf	(efgtoa@t+1)& (0+255),f,b
 12398   002D00                     l6886:
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 12402   002D00  5174               	movf	efgtoa@t& (0+255),w,b
 12403   002D02  1175               	iorwf	(efgtoa@t+1)& (0+255),w,b
 12404   002D04  A4D8               	btfss	status,2,c
 12405   002D06  EF87  F016         	goto	u8931
 12406   002D0A  EF89  F016         	goto	u8930
 12407   002D0E                     u8931:
 12408   002D0E  EF70  F016         	goto	l6878
 12409   002D12                     u8930:
 12410   002D12                     
 12411                           ; BSR set to: 0
 12412                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 12413   002D12  0E58               	movlw	low _dbuf
 12414   002D14  2596               	addwf	efgtoa@n& (0+255),w,b
 12415   002D16  6ED9               	movwf	fsr2l,c
 12416   002D18  0E03               	movlw	high _dbuf
 12417   002D1A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12418   002D1C  6EDA               	movwf	fsr2h,c
 12419   002D1E  517B               	movf	efgtoa@d& (0+255),w,b
 12420   002D20  0F30               	addlw	48
 12421   002D22  6EDF               	movwf	indf2,c
 12422   002D24                     
 12423                           ; BSR set to: 0
 12424   002D24  4B96               	infsnz	efgtoa@n& (0+255),f,b
 12425   002D26  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
 12426   002D28                     
 12427                           ; BSR set to: 0
 12428                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 12429   002D28  0781               	decf	efgtoa@w& (0+255),f,b
 12430   002D2A  A0D8               	btfss	status,0,c
 12431   002D2C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
 12432   002D2E                     
 12433                           ; BSR set to: 0
 12434                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 12435   002D2E  C089  F051         	movff	efgtoa@h,___flsub@b
 12436   002D32  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
 12437   002D36  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
 12438   002D3A  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
 12439   002D3E  C08D  F013         	movff	efgtoa@l,___flmul@a
 12440   002D42  C08E  F014         	movff	efgtoa@l+1,___flmul@a+1
 12441   002D46  C08F  F015         	movff	efgtoa@l+2,___flmul@a+2
 12442   002D4A  C090  F016         	movff	efgtoa@l+3,___flmul@a+3
 12443   002D4E  C098  F00F         	movff	efgtoa@u,___flmul@b
 12444   002D52  C099  F010         	movff	efgtoa@u+1,___flmul@b+1
 12445   002D56  C09A  F011         	movff	efgtoa@u+2,___flmul@b+2
 12446   002D5A  C09B  F012         	movff	efgtoa@u+3,___flmul@b+3
 12447   002D5E  ECC2  F01F         	call	___flmul	;wreg free
 12448   002D62  C00F  F055         	movff	?___flmul,___flsub@a
 12449   002D66  C010  F056         	movff	?___flmul+1,___flsub@a+1
 12450   002D6A  C011  F057         	movff	?___flmul+2,___flsub@a+2
 12451   002D6E  C012  F058         	movff	?___flmul+3,___flsub@a+3
 12452   002D72  EC04  F036         	call	___flsub	;wreg free
 12453   002D76  C051  F089         	movff	?___flsub,efgtoa@h
 12454   002D7A  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
 12455   002D7E  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
 12456   002D82  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
 12457   002D86                     
 12458                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 12459   002D86  C098  F028         	movff	efgtoa@u,___fldiv@b
 12460   002D8A  C099  F029         	movff	efgtoa@u+1,___fldiv@b+1
 12461   002D8E  C09A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
 12462   002D92  C09B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
 12463   002D96  0E00               	movlw	0
 12464   002D98  6E2C               	movwf	___fldiv@a^0,c
 12465   002D9A  0E00               	movlw	0
 12466   002D9C  6E2D               	movwf	(___fldiv@a+1)^0,c
 12467   002D9E  0E20               	movlw	32
 12468   002DA0  6E2E               	movwf	(___fldiv@a+2)^0,c
 12469   002DA2  0E41               	movlw	65
 12470   002DA4  6E2F               	movwf	(___fldiv@a+3)^0,c
 12471   002DA6  ECC4  F023         	call	___fldiv	;wreg free
 12472   002DAA  C028  F098         	movff	?___fldiv,efgtoa@u
 12473   002DAE  C029  F099         	movff	?___fldiv+1,efgtoa@u+1
 12474   002DB2  C02A  F09A         	movff	?___fldiv+2,efgtoa@u+2
 12475   002DB6  C02B  F09B         	movff	?___fldiv+3,efgtoa@u+3
 12476   002DBA                     
 12477                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 12478   002DBA  0100               	movlb	0	; () banked
 12479   002DBC  0770               	decf	efgtoa@ne& (0+255),f,b
 12480   002DBE  A0D8               	btfss	status,0,c
 12481   002DC0  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
 12482   002DC2                     
 12483                           ; BSR set to: 0
 12484                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 12485   002DC2  4B87               	infsnz	efgtoa@i& (0+255),f,b
 12486   002DC4  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
 12487   002DC6                     l6902:
 12488                           
 12489                           ; BSR set to: 0
 12490                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12491   002DC6  517D               	movf	efgtoa@m& (0+255),w,b
 12492   002DC8  5D87               	subwf	efgtoa@i& (0+255),w,b
 12493   002DCA  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12494   002DCC  0A80               	xorlw	128
 12495   002DCE  6F6E               	movwf	??_efgtoa& (0+255),b
 12496   002DD0  517E               	movf	(efgtoa@m+1)& (0+255),w,b
 12497   002DD2  0A80               	xorlw	128
 12498   002DD4  596E               	subwfb	??_efgtoa& (0+255),w,b
 12499   002DD6  B0D8               	btfsc	status,0,c
 12500   002DD8  EFF0  F016         	goto	u8941
 12501   002DDC  EFF2  F016         	goto	u8940
 12502   002DE0                     u8941:
 12503   002DE0  EF00  F017         	goto	l6906
 12504   002DE4                     u8940:
 12505   002DE4                     
 12506                           ; BSR set to: 0
 12507   002DE4  BF97               	btfsc	(efgtoa@n+1)& (0+255),7,b
 12508   002DE6  EFFE  F016         	goto	u8951
 12509   002DEA  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12510   002DEC  E109               	bnz	u8950
 12511   002DEE  0E4B               	movlw	75
 12512   002DF0  5D96               	subwf	efgtoa@n& (0+255),w,b
 12513   002DF2  A0D8               	btfss	status,0,c
 12514   002DF4  EFFE  F016         	goto	u8951
 12515   002DF8  EF00  F017         	goto	u8950
 12516   002DFC                     u8951:
 12517   002DFC  EFFE  F015         	goto	l6862
 12518   002E00                     u8950:
 12519   002E00                     l6906:
 12520                           
 12521                           ; BSR set to: 0
 12522                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 12523   002E00  0E00               	movlw	0
 12524   002E02  6F88               	movwf	(efgtoa@i+1)& (0+255),b
 12525   002E04  0E4F               	movlw	79
 12526   002E06  6F87               	movwf	efgtoa@i& (0+255),b
 12527   002E08                     
 12528                           ; BSR set to: 0
 12529                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 12530   002E08  0E58               	movlw	low _dbuf
 12531   002E0A  2587               	addwf	efgtoa@i& (0+255),w,b
 12532   002E0C  6ED9               	movwf	fsr2l,c
 12533   002E0E  0E03               	movlw	high _dbuf
 12534   002E10  2188               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12535   002E12  6EDA               	movwf	fsr2h,c
 12536   002E14  6ADF               	clrf	indf2,c
 12537   002E16                     
 12538                           ; BSR set to: 0
 12539                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 12540   002E16  0E58               	movlw	low _dbuf
 12541   002E18  6F6E               	movwf	??_efgtoa& (0+255),b
 12542   002E1A  0E03               	movlw	high _dbuf
 12543   002E1C  6F6F               	movwf	(??_efgtoa+1)& (0+255),b
 12544   002E1E  5196               	movf	efgtoa@n& (0+255),w,b
 12545   002E20  5F6E               	subwf	??_efgtoa& (0+255),f,b
 12546   002E22  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12547   002E24  5B6F               	subwfb	(??_efgtoa+1)& (0+255),f,b
 12548   002E26  5187               	movf	efgtoa@i& (0+255),w,b
 12549   002E28  256E               	addwf	??_efgtoa& (0+255),w,b
 12550   002E2A  6E01               	movwf	memcpy@d1^0,c
 12551   002E2C  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12552   002E2E  216F               	addwfc	(??_efgtoa+1)& (0+255),w,b
 12553   002E30  6E02               	movwf	(memcpy@d1+1)^0,c
 12554   002E32  0E58               	movlw	low _dbuf
 12555   002E34  6E03               	movwf	memcpy@s1^0,c
 12556   002E36  0E03               	movlw	high _dbuf
 12557   002E38  6E04               	movwf	(memcpy@s1+1)^0,c
 12558   002E3A  C096  F005         	movff	efgtoa@n,memcpy@n
 12559   002E3E  C097  F006         	movff	efgtoa@n+1,memcpy@n+1
 12560   002E42  ECB8  F035         	call	_memcpy	;wreg free
 12561   002E46                     
 12562                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 12563   002E46  0100               	movlb	0	; () banked
 12564   002E48  5196               	movf	efgtoa@n& (0+255),w,b
 12565   002E4A  5D87               	subwf	efgtoa@i& (0+255),w,b
 12566   002E4C  6F96               	movwf	efgtoa@n& (0+255),b
 12567   002E4E  5197               	movf	(efgtoa@n+1)& (0+255),w,b
 12568   002E50  5988               	subwfb	(efgtoa@i+1)& (0+255),w,b
 12569   002E52  6F97               	movwf	(efgtoa@n+1)& (0+255),b
 12570   002E54                     
 12571                           ; BSR set to: 0
 12572                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 12573   002E54  5191               	movf	efgtoa@sign& (0+255),w,b
 12574   002E56  A4D8               	btfss	status,2,c
 12575   002E58  EF30  F017         	goto	u8961
 12576   002E5C  EF33  F017         	goto	u8960
 12577   002E60                     u8961:
 12578   002E60  0E01               	movlw	1
 12579   002E62  EF34  F017         	goto	u8970
 12580   002E66                     u8960:
 12581   002E66  0E00               	movlw	0
 12582   002E68                     u8970:
 12583   002E68  6F87               	movwf	efgtoa@i& (0+255),b
 12584   002E6A  6B88               	clrf	(efgtoa@i+1)& (0+255),b
 12585   002E6C                     
 12586                           ; BSR set to: 0
 12587                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 12588   002E6C  5191               	movf	efgtoa@sign& (0+255),w,b
 12589   002E6E  B4D8               	btfsc	status,2,c
 12590   002E70  EF3C  F017         	goto	u8981
 12591   002E74  EF3E  F017         	goto	u8980
 12592   002E78                     u8981:
 12593   002E78  EF49  F017         	goto	l6920
 12594   002E7C                     u8980:
 12595   002E7C                     
 12596                           ; BSR set to: 0
 12597                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 12598   002E7C  0796               	decf	efgtoa@n& (0+255),f,b
 12599   002E7E  A0D8               	btfss	status,0,c
 12600   002E80  0797               	decf	(efgtoa@n+1)& (0+255),f,b
 12601   002E82  0E58               	movlw	low _dbuf
 12602   002E84  2596               	addwf	efgtoa@n& (0+255),w,b
 12603   002E86  6ED9               	movwf	fsr2l,c
 12604   002E88  0E03               	movlw	high _dbuf
 12605   002E8A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12606   002E8C  6EDA               	movwf	fsr2h,c
 12607   002E8E  C091  FFDF         	movff	efgtoa@sign,indf2
 12608   002E92                     l6920:
 12609                           
 12610                           ; BSR set to: 0
 12611                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 12612   002E92  5187               	movf	efgtoa@i& (0+255),w,b
 12613   002E94  5F81               	subwf	efgtoa@w& (0+255),f,b
 12614   002E96  5188               	movf	(efgtoa@i+1)& (0+255),w,b
 12615   002E98  5B82               	subwfb	(efgtoa@w+1)& (0+255),f,b
 12616   002E9A                     
 12617                           ; BSR set to: 0
 12618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 12619   002E9A  C068  F00F         	movff	efgtoa@fp,pad@fp
 12620   002E9E  0E58               	movlw	low _dbuf
 12621   002EA0  2596               	addwf	efgtoa@n& (0+255),w,b
 12622   002EA2  6E10               	movwf	pad@buf^0,c
 12623   002EA4  0E03               	movlw	high _dbuf
 12624   002EA6  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12625   002EA8  6E11               	movwf	(pad@buf+1)^0,c
 12626   002EAA  C081  F012         	movff	efgtoa@w,pad@p
 12627   002EAE  C082  F013         	movff	efgtoa@w+1,pad@p+1
 12628   002EB2  EC32  F035         	call	_pad	;wreg free
 12629   002EB6                     l1013:
 12630   002EB6  0012               	return		;funcret
 12631   002EB8                     __end_of_efgtoa:
 12632                           	callstack 0
 12633                           
 12634 ;; *************** function _strcpy *****************
 12635 ;; Defined at:
 12636 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 12637 ;; Parameters:    Size  Location     Type
 12638 ;;  dest            2    0[COMRAM] PTR unsigned char 
 12639 ;;		 -> dbuf(80), fire_trigger_sensor(20), 
 12640 ;;  src             2    2[COMRAM] PTR const unsigned char 
 12641 ;;		 -> STR_21(4), STR_18(4), STR_3(10), STR_2(19), 
 12642 ;;		 -> STR_1(13), 
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;  d               2    4[COMRAM] PTR unsigned char 
 12645 ;;		 -> dbuf(80), fire_trigger_sensor(20), 
 12646 ;; Return value:  Size  Location     Type
 12647 ;;                  2    0[COMRAM] PTR unsigned char 
 12648 ;; Registers used:
 12649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12650 ;; Tracked objects:
 12651 ;;		On entry : 0/0
 12652 ;;		On exit  : 0/0
 12653 ;;		Unchanged: 0/0
 12654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12655 ;;      Params:         4       0       0       0       0       0       0       0       0
 12656 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12657 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12658 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12659 ;;Total ram usage:        6 bytes
 12660 ;; Hardware stack levels used: 1
 12661 ;; Hardware stack levels required when called: 1
 12662 ;; This function calls:
 12663 ;;		Nothing
 12664 ;; This function is called by:
 12665 ;;		_Handle_Fire_Events
 12666 ;;		_efgtoa
 12667 ;; This function uses a non-reentrant model
 12668 ;;
 12669                           
 12670                           	psect	text26
 12671   006D14                     __ptext26:
 12672                           	callstack 0
 12673   006D14                     _strcpy:
 12674                           	callstack 24
 12675   006D14  C001  F005         	movff	strcpy@dest,strcpy@d
 12676   006D18  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
 12677   006D1C                     l6096:
 12678   006D1C  C003  FFF6         	movff	strcpy@src,tblptrl
 12679   006D20  C004  FFF7         	movff	strcpy@src+1,tblptrh
 12680   006D24  4A03               	infsnz	strcpy@src^0,f,c
 12681   006D26  2A04               	incf	(strcpy@src+1)^0,f,c
 12682   006D28                     	if	0	;tblptru may be non-zero
 12683   006D28                     	endif
 12684   006D28                     	if	0	;tblptru may be non-zero
 12685   006D28                     	endif
 12686   006D28  C005  FFD9         	movff	strcpy@d,fsr2l
 12687   006D2C  C006  FFDA         	movff	strcpy@d+1,fsr2h
 12688   006D30  4A05               	infsnz	strcpy@d^0,f,c
 12689   006D32  2A06               	incf	(strcpy@d+1)^0,f,c
 12690   006D34  0008               	tblrd		*
 12691   006D36  CFF5 FFDF          	movff	tablat,indf2
 12692   006D3A  50DF               	movf	indf2,w,c
 12693   006D3C  A4D8               	btfss	status,2,c
 12694   006D3E  EFA3  F036         	goto	u7591
 12695   006D42  EFA5  F036         	goto	u7590
 12696   006D46                     u7591:
 12697   006D46  EF8E  F036         	goto	l6096
 12698   006D4A                     u7590:
 12699   006D4A  0012               	return		;funcret
 12700   006D4C                     __end_of_strcpy:
 12701                           	callstack 0
 12702                           
 12703 ;; *************** function _memcpy *****************
 12704 ;; Defined at:
 12705 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 12706 ;; Parameters:    Size  Location     Type
 12707 ;;  d1              2    0[COMRAM] PTR void 
 12708 ;;		 -> dbuf(80), 
 12709 ;;  s1              2    2[COMRAM] PTR const void 
 12710 ;;		 -> dbuf(80), 
 12711 ;;  n               2    4[COMRAM] unsigned int 
 12712 ;; Auto vars:     Size  Location     Type
 12713 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12714 ;;		 -> dbuf(80), 
 12715 ;;  d               2    7[COMRAM] PTR unsigned char 
 12716 ;;		 -> dbuf(80), 
 12717 ;;  tmp             1    6[COMRAM] unsigned char 
 12718 ;; Return value:  Size  Location     Type
 12719 ;;                  2    0[COMRAM] PTR void 
 12720 ;; Registers used:
 12721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12722 ;; Tracked objects:
 12723 ;;		On entry : 0/0
 12724 ;;		On exit  : 0/0
 12725 ;;		Unchanged: 0/0
 12726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12727 ;;      Params:         6       0       0       0       0       0       0       0       0
 12728 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12730 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12731 ;;Total ram usage:       11 bytes
 12732 ;; Hardware stack levels used: 1
 12733 ;; Hardware stack levels required when called: 1
 12734 ;; This function calls:
 12735 ;;		Nothing
 12736 ;; This function is called by:
 12737 ;;		_efgtoa
 12738 ;; This function uses a non-reentrant model
 12739 ;;
 12740                           
 12741                           	psect	text27
 12742   006B70                     __ptext27:
 12743                           	callstack 0
 12744   006B70                     _memcpy:
 12745                           	callstack 24
 12746   006B70  C003  F00A         	movff	memcpy@s1,memcpy@s
 12747   006B74  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
 12748   006B78  C001  F008         	movff	memcpy@d1,memcpy@d
 12749   006B7C  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
 12750   006B80  EFD2  F035         	goto	l6660
 12751   006B84                     l6652:
 12752   006B84  C00A  FFD9         	movff	memcpy@s,fsr2l
 12753   006B88  C00B  FFDA         	movff	memcpy@s+1,fsr2h
 12754   006B8C  50DF               	movf	indf2,w,c
 12755   006B8E  6E07               	movwf	memcpy@tmp^0,c
 12756   006B90  4A0A               	infsnz	memcpy@s^0,f,c
 12757   006B92  2A0B               	incf	(memcpy@s+1)^0,f,c
 12758   006B94  C008  FFD9         	movff	memcpy@d,fsr2l
 12759   006B98  C009  FFDA         	movff	memcpy@d+1,fsr2h
 12760   006B9C  C007  FFDF         	movff	memcpy@tmp,indf2
 12761   006BA0  4A08               	infsnz	memcpy@d^0,f,c
 12762   006BA2  2A09               	incf	(memcpy@d+1)^0,f,c
 12763   006BA4                     l6660:
 12764   006BA4  0605               	decf	memcpy@n^0,f,c
 12765   006BA6  A0D8               	btfss	status,0,c
 12766   006BA8  0606               	decf	(memcpy@n+1)^0,f,c
 12767   006BAA  2805               	incf	memcpy@n^0,w,c
 12768   006BAC  E106               	bnz	u8571
 12769   006BAE  2806               	incf	(memcpy@n+1)^0,w,c
 12770   006BB0  A4D8               	btfss	status,2,c
 12771   006BB2  EFDD  F035         	goto	u8571
 12772   006BB6  EFDF  F035         	goto	u8570
 12773   006BBA                     u8571:
 12774   006BBA  EFC2  F035         	goto	l6652
 12775   006BBE                     u8570:
 12776   006BBE  0012               	return		;funcret
 12777   006BC0                     __end_of_memcpy:
 12778                           	callstack 0
 12779                           
 12780 ;; *************** function _labs *****************
 12781 ;; Defined at:
 12782 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
 12783 ;; Parameters:    Size  Location     Type
 12784 ;;  a               4    0[COMRAM] long 
 12785 ;; Auto vars:     Size  Location     Type
 12786 ;;		None
 12787 ;; Return value:  Size  Location     Type
 12788 ;;                  4    0[COMRAM] long 
 12789 ;; Registers used:
 12790 ;;		wreg, status,2, status,0
 12791 ;; Tracked objects:
 12792 ;;		On entry : 0/0
 12793 ;;		On exit  : 0/0
 12794 ;;		Unchanged: 0/0
 12795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12796 ;;      Params:         4       0       0       0       0       0       0       0       0
 12797 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12798 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12799 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12800 ;;Total ram usage:        8 bytes
 12801 ;; Hardware stack levels used: 1
 12802 ;; Hardware stack levels required when called: 1
 12803 ;; This function calls:
 12804 ;;		Nothing
 12805 ;; This function is called by:
 12806 ;;		_efgtoa
 12807 ;; This function uses a non-reentrant model
 12808 ;;
 12809                           
 12810                           	psect	text28
 12811   006ACA                     __ptext28:
 12812                           	callstack 0
 12813   006ACA                     _labs:
 12814                           	callstack 24
 12815   006ACA  BE04               	btfsc	(labs@a+3)^0,7,c
 12816   006ACC  EF6A  F035         	goto	u8461
 12817   006AD0  EF6C  F035         	goto	u8460
 12818   006AD4                     u8461:
 12819   006AD4  EF76  F035         	goto	l6618
 12820   006AD8                     u8460:
 12821   006AD8  C001  F001         	movff	labs@a,?_labs
 12822   006ADC  C002  F002         	movff	labs@a+1,?_labs+1
 12823   006AE0  C003  F003         	movff	labs@a+2,?_labs+2
 12824   006AE4  C004  F004         	movff	labs@a+3,?_labs+3
 12825   006AE8  EF8F  F035         	goto	l1179
 12826   006AEC                     l6618:
 12827   006AEC  C001  F005         	movff	labs@a,??_labs
 12828   006AF0  C002  F006         	movff	labs@a+1,??_labs+1
 12829   006AF4  C003  F007         	movff	labs@a+2,??_labs+2
 12830   006AF8  C004  F008         	movff	labs@a+3,??_labs+3
 12831   006AFC  1E05               	comf	??_labs^0,f,c
 12832   006AFE  1E06               	comf	(??_labs+1)^0,f,c
 12833   006B00  1E07               	comf	(??_labs+2)^0,f,c
 12834   006B02  1E08               	comf	(??_labs+3)^0,f,c
 12835   006B04  2A05               	incf	??_labs^0,f,c
 12836   006B06  0E00               	movlw	0
 12837   006B08  2206               	addwfc	(??_labs+1)^0,f,c
 12838   006B0A  2207               	addwfc	(??_labs+2)^0,f,c
 12839   006B0C  2208               	addwfc	(??_labs+3)^0,f,c
 12840   006B0E  C005  F001         	movff	??_labs,?_labs
 12841   006B12  C006  F002         	movff	??_labs+1,?_labs+1
 12842   006B16  C007  F003         	movff	??_labs+2,?_labs+2
 12843   006B1A  C008  F004         	movff	??_labs+3,?_labs+3
 12844   006B1E                     l1179:
 12845   006B1E  0012               	return		;funcret
 12846   006B20                     __end_of_labs:
 12847                           	callstack 0
 12848                           
 12849 ;; *************** function _floorf *****************
 12850 ;; Defined at:
 12851 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
 12852 ;; Parameters:    Size  Location     Type
 12853 ;;  x               4   64[COMRAM] float 
 12854 ;; Auto vars:     Size  Location     Type
 12855 ;;  u               4   80[COMRAM] struct .
 12856 ;;  m               4   74[COMRAM] unsigned long 
 12857 ;;  e               2   78[COMRAM] int 
 12858 ;; Return value:  Size  Location     Type
 12859 ;;                  4   64[COMRAM] float 
 12860 ;; Registers used:
 12861 ;;		wreg, status,2, status,0
 12862 ;; Tracked objects:
 12863 ;;		On entry : 0/0
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12867 ;;      Params:         4       0       0       0       0       0       0       0       0
 12868 ;;      Locals:        10       0       0       0       0       0       0       0       0
 12869 ;;      Temps:          6       0       0       0       0       0       0       0       0
 12870 ;;      Totals:        20       0       0       0       0       0       0       0       0
 12871 ;;Total ram usage:       20 bytes
 12872 ;; Hardware stack levels used: 1
 12873 ;; Hardware stack levels required when called: 1
 12874 ;; This function calls:
 12875 ;;		Nothing
 12876 ;; This function is called by:
 12877 ;;		_efgtoa
 12878 ;; This function uses a non-reentrant model
 12879 ;;
 12880                           
 12881                           	psect	text29
 12882   00535C                     __ptext29:
 12883                           	callstack 0
 12884   00535C                     _floorf:
 12885                           	callstack 24
 12886   00535C  C300  F051         	movff	floorf@F521,floorf@u
 12887   005360  C301  F052         	movff	floorf@F521+1,floorf@u+1
 12888   005364  C302  F053         	movff	floorf@F521+2,floorf@u+2
 12889   005368  C303  F054         	movff	floorf@F521+3,floorf@u+3
 12890   00536C  C041  F051         	movff	floorf@x,floorf@u
 12891   005370  C042  F052         	movff	floorf@x+1,floorf@u+1
 12892   005374  C043  F053         	movff	floorf@x+2,floorf@u+2
 12893   005378  C044  F054         	movff	floorf@x+3,floorf@u+3
 12894   00537C  0E81               	movlw	129
 12895   00537E  6E45               	movwf	??_floorf^0,c
 12896   005380  0EFF               	movlw	255
 12897   005382  6E46               	movwf	(??_floorf+1)^0,c
 12898   005384  C051  F047         	movff	floorf@u,??_floorf+2
 12899   005388  C052  F048         	movff	floorf@u+1,??_floorf+3
 12900   00538C  C053  F049         	movff	floorf@u+2,??_floorf+4
 12901   005390  C054  F04A         	movff	floorf@u+3,??_floorf+5
 12902   005394  0E18               	movlw	24
 12903   005396  EFD2  F029         	goto	u8470
 12904   00539A                     u8475:
 12905   00539A  90D8               	bcf	status,0,c
 12906   00539C  324A               	rrcf	(??_floorf+5)^0,f,c
 12907   00539E  3249               	rrcf	(??_floorf+4)^0,f,c
 12908   0053A0  3248               	rrcf	(??_floorf+3)^0,f,c
 12909   0053A2  3247               	rrcf	(??_floorf+2)^0,f,c
 12910   0053A4                     u8470:
 12911   0053A4  2EE8               	decfsz	wreg,f,c
 12912   0053A6  EFCD  F029         	goto	u8475
 12913   0053AA  5047               	movf	(??_floorf+2)^0,w,c
 12914   0053AC  2445               	addwf	??_floorf^0,w,c
 12915   0053AE  6E4F               	movwf	floorf@e^0,c
 12916   0053B0  0E00               	movlw	0
 12917   0053B2  2046               	addwfc	(??_floorf+1)^0,w,c
 12918   0053B4  6E50               	movwf	(floorf@e+1)^0,c
 12919   0053B6  BE50               	btfsc	(floorf@e+1)^0,7,c
 12920   0053B8  EFE7  F029         	goto	u8481
 12921   0053BC  5050               	movf	(floorf@e+1)^0,w,c
 12922   0053BE  E109               	bnz	u8480
 12923   0053C0  0E17               	movlw	23
 12924   0053C2  5C4F               	subwf	floorf@e^0,w,c
 12925   0053C4  A0D8               	btfss	status,0,c
 12926   0053C6  EFE7  F029         	goto	u8481
 12927   0053CA  EFE9  F029         	goto	u8480
 12928   0053CE                     u8481:
 12929   0053CE  EFF3  F029         	goto	l6628
 12930   0053D2                     u8480:
 12931   0053D2                     l6626:
 12932   0053D2  C041  F041         	movff	floorf@x,?_floorf
 12933   0053D6  C042  F042         	movff	floorf@x+1,?_floorf+1
 12934   0053DA  C043  F043         	movff	floorf@x+2,?_floorf+2
 12935   0053DE  C044  F044         	movff	floorf@x+3,?_floorf+3
 12936   0053E2  EFB6  F02A         	goto	l1165
 12937   0053E6                     l6628:
 12938   0053E6  BE50               	btfsc	(floorf@e+1)^0,7,c
 12939   0053E8  EFF8  F029         	goto	u8491
 12940   0053EC  EFFA  F029         	goto	u8490
 12941   0053F0                     u8491:
 12942   0053F0  EF6A  F02A         	goto	l6638
 12943   0053F4                     u8490:
 12944   0053F4  C04F  F045         	movff	floorf@e,??_floorf
 12945   0053F8  0EFF               	movlw	255
 12946   0053FA  6E46               	movwf	(??_floorf+1)^0,c
 12947   0053FC  0EFF               	movlw	255
 12948   0053FE  6E47               	movwf	(??_floorf+2)^0,c
 12949   005400  0E7F               	movlw	127
 12950   005402  6E48               	movwf	(??_floorf+3)^0,c
 12951   005404  0E00               	movlw	0
 12952   005406  6E49               	movwf	(??_floorf+4)^0,c
 12953   005408                     u8505:
 12954   005408  6645               	tstfsz	??_floorf^0,c
 12955   00540A  EF09  F02A         	goto	u8506
 12956   00540E  EF11  F02A         	goto	u8507
 12957   005412                     u8506:
 12958   005412  3449               	rlcf	(??_floorf+4)^0,w,c
 12959   005414  3249               	rrcf	(??_floorf+4)^0,f,c
 12960   005416  3248               	rrcf	(??_floorf+3)^0,f,c
 12961   005418  3247               	rrcf	(??_floorf+2)^0,f,c
 12962   00541A  3246               	rrcf	(??_floorf+1)^0,f,c
 12963   00541C  2E45               	decfsz	??_floorf^0,f,c
 12964   00541E  EF04  F02A         	goto	u8505
 12965   005422                     u8507:
 12966   005422  C046  F04B         	movff	??_floorf+1,floorf@m
 12967   005426  C047  F04C         	movff	??_floorf+2,floorf@m+1
 12968   00542A  C048  F04D         	movff	??_floorf+3,floorf@m+2
 12969   00542E  C049  F04E         	movff	??_floorf+4,floorf@m+3
 12970   005432  504B               	movf	floorf@m^0,w,c
 12971   005434  1451               	andwf	floorf@u^0,w,c
 12972   005436  6E45               	movwf	??_floorf^0,c
 12973   005438  504C               	movf	(floorf@m+1)^0,w,c
 12974   00543A  1452               	andwf	(floorf@u+1)^0,w,c
 12975   00543C  6E46               	movwf	(??_floorf+1)^0,c
 12976   00543E  504D               	movf	(floorf@m+2)^0,w,c
 12977   005440  1453               	andwf	(floorf@u+2)^0,w,c
 12978   005442  6E47               	movwf	(??_floorf+2)^0,c
 12979   005444  504E               	movf	(floorf@m+3)^0,w,c
 12980   005446  1454               	andwf	(floorf@u+3)^0,w,c
 12981   005448  6E48               	movwf	(??_floorf+3)^0,c
 12982   00544A  5045               	movf	??_floorf^0,w,c
 12983   00544C  1046               	iorwf	(??_floorf+1)^0,w,c
 12984   00544E  1047               	iorwf	(??_floorf+2)^0,w,c
 12985   005450  1048               	iorwf	(??_floorf+3)^0,w,c
 12986   005452  A4D8               	btfss	status,2,c
 12987   005454  EF2E  F02A         	goto	u8511
 12988   005458  EF30  F02A         	goto	u8510
 12989   00545C                     u8511:
 12990   00545C  EF32  F02A         	goto	l6634
 12991   005460                     u8510:
 12992   005460  EFE9  F029         	goto	l6626
 12993   005464                     l6634:
 12994   005464  C051  F045         	movff	floorf@u,??_floorf
 12995   005468  C052  F046         	movff	floorf@u+1,??_floorf+1
 12996   00546C  C053  F047         	movff	floorf@u+2,??_floorf+2
 12997   005470  C054  F048         	movff	floorf@u+3,??_floorf+3
 12998   005474  0E20               	movlw	32
 12999   005476  EF42  F02A         	goto	u8520
 13000   00547A                     u8525:
 13001   00547A  90D8               	bcf	status,0,c
 13002   00547C  3248               	rrcf	(??_floorf+3)^0,f,c
 13003   00547E  3247               	rrcf	(??_floorf+2)^0,f,c
 13004   005480  3246               	rrcf	(??_floorf+1)^0,f,c
 13005   005482  3245               	rrcf	??_floorf^0,f,c
 13006   005484                     u8520:
 13007   005484  2EE8               	decfsz	wreg,f,c
 13008   005486  EF3D  F02A         	goto	u8525
 13009   00548A  5045               	movf	??_floorf^0,w,c
 13010   00548C  1046               	iorwf	(??_floorf+1)^0,w,c
 13011   00548E  1047               	iorwf	(??_floorf+2)^0,w,c
 13012   005490  1048               	iorwf	(??_floorf+3)^0,w,c
 13013   005492  B4D8               	btfsc	status,2,c
 13014   005494  EF4E  F02A         	goto	u8531
 13015   005498  EF50  F02A         	goto	u8530
 13016   00549C                     u8531:
 13017   00549C  EF58  F02A         	goto	l1168
 13018   0054A0                     u8530:
 13019   0054A0  504B               	movf	floorf@m^0,w,c
 13020   0054A2  2651               	addwf	floorf@u^0,f,c
 13021   0054A4  504C               	movf	(floorf@m+1)^0,w,c
 13022   0054A6  2252               	addwfc	(floorf@u+1)^0,f,c
 13023   0054A8  504D               	movf	(floorf@m+2)^0,w,c
 13024   0054AA  2253               	addwfc	(floorf@u+2)^0,f,c
 13025   0054AC  504E               	movf	(floorf@m+3)^0,w,c
 13026   0054AE  2254               	addwfc	(floorf@u+3)^0,f,c
 13027   0054B0                     l1168:
 13028   0054B0  1C4B               	comf	floorf@m^0,w,c
 13029   0054B2  6E45               	movwf	??_floorf^0,c
 13030   0054B4  1C4C               	comf	(floorf@m+1)^0,w,c
 13031   0054B6  6E46               	movwf	(??_floorf+1)^0,c
 13032   0054B8  1C4D               	comf	(floorf@m+2)^0,w,c
 13033   0054BA  6E47               	movwf	(??_floorf+2)^0,c
 13034   0054BC  1C4E               	comf	(floorf@m+3)^0,w,c
 13035   0054BE  6E48               	movwf	(??_floorf+3)^0,c
 13036   0054C0  5045               	movf	??_floorf^0,w,c
 13037   0054C2  1651               	andwf	floorf@u^0,f,c
 13038   0054C4  5046               	movf	(??_floorf+1)^0,w,c
 13039   0054C6  1652               	andwf	(floorf@u+1)^0,f,c
 13040   0054C8  5047               	movf	(??_floorf+2)^0,w,c
 13041   0054CA  1653               	andwf	(floorf@u+2)^0,f,c
 13042   0054CC  5048               	movf	(??_floorf+3)^0,w,c
 13043   0054CE  1654               	andwf	(floorf@u+3)^0,f,c
 13044   0054D0  EFAE  F02A         	goto	l6646
 13045   0054D4                     l6638:
 13046   0054D4  C051  F045         	movff	floorf@u,??_floorf
 13047   0054D8  C052  F046         	movff	floorf@u+1,??_floorf+1
 13048   0054DC  C053  F047         	movff	floorf@u+2,??_floorf+2
 13049   0054E0  C054  F048         	movff	floorf@u+3,??_floorf+3
 13050   0054E4  0E20               	movlw	32
 13051   0054E6  EF7A  F02A         	goto	u8540
 13052   0054EA                     u8545:
 13053   0054EA  90D8               	bcf	status,0,c
 13054   0054EC  3248               	rrcf	(??_floorf+3)^0,f,c
 13055   0054EE  3247               	rrcf	(??_floorf+2)^0,f,c
 13056   0054F0  3246               	rrcf	(??_floorf+1)^0,f,c
 13057   0054F2  3245               	rrcf	??_floorf^0,f,c
 13058   0054F4                     u8540:
 13059   0054F4  2EE8               	decfsz	wreg,f,c
 13060   0054F6  EF75  F02A         	goto	u8545
 13061   0054FA  5045               	movf	??_floorf^0,w,c
 13062   0054FC  1046               	iorwf	(??_floorf+1)^0,w,c
 13063   0054FE  1047               	iorwf	(??_floorf+2)^0,w,c
 13064   005500  1048               	iorwf	(??_floorf+3)^0,w,c
 13065   005502  A4D8               	btfss	status,2,c
 13066   005504  EF86  F02A         	goto	u8551
 13067   005508  EF88  F02A         	goto	u8550
 13068   00550C                     u8551:
 13069   00550C  EF92  F02A         	goto	l6642
 13070   005510                     u8550:
 13071   005510  0E00               	movlw	0
 13072   005512  6E51               	movwf	floorf@u^0,c
 13073   005514  0E00               	movlw	0
 13074   005516  6E52               	movwf	(floorf@u+1)^0,c
 13075   005518  0E00               	movlw	0
 13076   00551A  6E53               	movwf	(floorf@u+2)^0,c
 13077   00551C  0E00               	movlw	0
 13078   00551E  6E54               	movwf	(floorf@u+3)^0,c
 13079   005520  EFAE  F02A         	goto	l6646
 13080   005524                     l6642:
 13081   005524  90D8               	bcf	status,0,c
 13082   005526  3451               	rlcf	floorf@u^0,w,c
 13083   005528  6E45               	movwf	??_floorf^0,c
 13084   00552A  3452               	rlcf	(floorf@u+1)^0,w,c
 13085   00552C  6E46               	movwf	(??_floorf+1)^0,c
 13086   00552E  3453               	rlcf	(floorf@u+2)^0,w,c
 13087   005530  6E47               	movwf	(??_floorf+2)^0,c
 13088   005532  3454               	rlcf	(floorf@u+3)^0,w,c
 13089   005534  6E48               	movwf	(??_floorf+3)^0,c
 13090   005536  5045               	movf	??_floorf^0,w,c
 13091   005538  1046               	iorwf	(??_floorf+1)^0,w,c
 13092   00553A  1047               	iorwf	(??_floorf+2)^0,w,c
 13093   00553C  1048               	iorwf	(??_floorf+3)^0,w,c
 13094   00553E  B4D8               	btfsc	status,2,c
 13095   005540  EFA4  F02A         	goto	u8561
 13096   005544  EFA6  F02A         	goto	u8560
 13097   005548                     u8561:
 13098   005548  EFAE  F02A         	goto	l6646
 13099   00554C                     u8560:
 13100   00554C  0E00               	movlw	0
 13101   00554E  6E51               	movwf	floorf@u^0,c
 13102   005550  0E00               	movlw	0
 13103   005552  6E52               	movwf	(floorf@u+1)^0,c
 13104   005554  0E80               	movlw	128
 13105   005556  6E53               	movwf	(floorf@u+2)^0,c
 13106   005558  0EBF               	movlw	191
 13107   00555A  6E54               	movwf	(floorf@u+3)^0,c
 13108   00555C                     l6646:
 13109   00555C  C051  F041         	movff	floorf@u,?_floorf
 13110   005560  C052  F042         	movff	floorf@u+1,?_floorf+1
 13111   005564  C053  F043         	movff	floorf@u+2,?_floorf+2
 13112   005568  C054  F044         	movff	floorf@u+3,?_floorf+3
 13113   00556C                     l1165:
 13114   00556C  0012               	return		;funcret
 13115   00556E                     __end_of_floorf:
 13116                           	callstack 0
 13117                           
 13118 ;; *************** function ___fpclassifyf *****************
 13119 ;; Defined at:
 13120 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
 13121 ;; Parameters:    Size  Location     Type
 13122 ;;  x               4    0[COMRAM] float 
 13123 ;; Auto vars:     Size  Location     Type
 13124 ;;  u               4   10[COMRAM] struct .
 13125 ;;  e               2    8[COMRAM] int 
 13126 ;; Return value:  Size  Location     Type
 13127 ;;                  2    0[COMRAM] int 
 13128 ;; Registers used:
 13129 ;;		wreg, status,2, status,0
 13130 ;; Tracked objects:
 13131 ;;		On entry : 0/0
 13132 ;;		On exit  : 0/0
 13133 ;;		Unchanged: 0/0
 13134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13135 ;;      Params:         4       0       0       0       0       0       0       0       0
 13136 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13137 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13138 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13139 ;;Total ram usage:       14 bytes
 13140 ;; Hardware stack levels used: 1
 13141 ;; Hardware stack levels required when called: 1
 13142 ;; This function calls:
 13143 ;;		Nothing
 13144 ;; This function is called by:
 13145 ;;		_efgtoa
 13146 ;; This function uses a non-reentrant model
 13147 ;;
 13148                           
 13149                           	psect	text30
 13150   0061BA                     __ptext30:
 13151                           	callstack 0
 13152   0061BA                     ___fpclassifyf:
 13153                           	callstack 24
 13154   0061BA  C304  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 13155   0061BE  C305  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 13156   0061C2  C306  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 13157   0061C6  C307  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 13158   0061CA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 13159   0061CE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 13160   0061D2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 13161   0061D6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 13162   0061DA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13163   0061DE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13164   0061E2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13165   0061E6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13166   0061EA  0E18               	movlw	24
 13167   0061EC  EFFD  F030         	goto	u8390
 13168   0061F0                     u8395:
 13169   0061F0  90D8               	bcf	status,0,c
 13170   0061F2  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 13171   0061F4  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 13172   0061F6  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 13173   0061F8  3205               	rrcf	??___fpclassifyf^0,f,c
 13174   0061FA                     u8390:
 13175   0061FA  2EE8               	decfsz	wreg,f,c
 13176   0061FC  EFF8  F030         	goto	u8395
 13177   006200  5005               	movf	??___fpclassifyf^0,w,c
 13178   006202  6E09               	movwf	___fpclassifyf@e^0,c
 13179   006204  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 13180   006206  5009               	movf	___fpclassifyf@e^0,w,c
 13181   006208  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13182   00620A  A4D8               	btfss	status,2,c
 13183   00620C  EF0A  F031         	goto	u8401
 13184   006210  EF0C  F031         	goto	u8400
 13185   006214                     u8401:
 13186   006214  EF2C  F031         	goto	l6604
 13187   006218                     u8400:
 13188   006218  90D8               	bcf	status,0,c
 13189   00621A  340B               	rlcf	___fpclassifyf@u^0,w,c
 13190   00621C  6E05               	movwf	??___fpclassifyf^0,c
 13191   00621E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 13192   006220  6E06               	movwf	(??___fpclassifyf+1)^0,c
 13193   006222  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 13194   006224  6E07               	movwf	(??___fpclassifyf+2)^0,c
 13195   006226  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 13196   006228  6E08               	movwf	(??___fpclassifyf+3)^0,c
 13197   00622A  5005               	movf	??___fpclassifyf^0,w,c
 13198   00622C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13199   00622E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13200   006230  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13201   006232  A4D8               	btfss	status,2,c
 13202   006234  EF1E  F031         	goto	u8411
 13203   006238  EF20  F031         	goto	u8410
 13204   00623C                     u8411:
 13205   00623C  EF26  F031         	goto	l6600
 13206   006240                     u8410:
 13207   006240  0E00               	movlw	0
 13208   006242  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13209   006244  0E02               	movlw	2
 13210   006246  6E01               	movwf	?___fpclassifyf^0,c
 13211   006248  EF5B  F031         	goto	l1151
 13212   00624C                     l6600:
 13213   00624C  0E00               	movlw	0
 13214   00624E  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13215   006250  0E03               	movlw	3
 13216   006252  6E01               	movwf	?___fpclassifyf^0,c
 13217   006254  EF5B  F031         	goto	l1151
 13218   006258                     l6604:
 13219   006258  2809               	incf	___fpclassifyf@e^0,w,c
 13220   00625A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13221   00625C  A4D8               	btfss	status,2,c
 13222   00625E  EF33  F031         	goto	u8421
 13223   006262  EF35  F031         	goto	u8420
 13224   006266                     u8421:
 13225   006266  EF57  F031         	goto	l6610
 13226   00626A                     u8420:
 13227   00626A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13228   00626E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13229   006272  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13230   006276  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13231   00627A  0E09               	movlw	9
 13232   00627C                     u8435:
 13233   00627C  90D8               	bcf	status,0,c
 13234   00627E  3605               	rlcf	??___fpclassifyf^0,f,c
 13235   006280  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 13236   006282  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 13237   006284  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 13238   006286  2EE8               	decfsz	wreg,f,c
 13239   006288  EF3E  F031         	goto	u8435
 13240   00628C  5005               	movf	??___fpclassifyf^0,w,c
 13241   00628E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13242   006290  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13243   006292  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13244   006294  B4D8               	btfsc	status,2,c
 13245   006296  EF4F  F031         	goto	u8441
 13246   00629A  EF52  F031         	goto	u8440
 13247   00629E                     u8441:
 13248   00629E  0E01               	movlw	1
 13249   0062A0  EF53  F031         	goto	u8450
 13250   0062A4                     u8440:
 13251   0062A4  0E00               	movlw	0
 13252   0062A6                     u8450:
 13253   0062A6  6E01               	movwf	?___fpclassifyf^0,c
 13254   0062A8  6A02               	clrf	(?___fpclassifyf+1)^0,c
 13255   0062AA  EF5B  F031         	goto	l1151
 13256   0062AE                     l6610:
 13257   0062AE  0E00               	movlw	0
 13258   0062B0  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13259   0062B2  0E04               	movlw	4
 13260   0062B4  6E01               	movwf	?___fpclassifyf^0,c
 13261   0062B6                     l1151:
 13262   0062B6  0012               	return		;funcret
 13263   0062B8                     __end_of___fpclassifyf:
 13264                           	callstack 0
 13265                           
 13266 ;; *************** function ___flsub *****************
 13267 ;; Defined at:
 13268 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13269 ;; Parameters:    Size  Location     Type
 13270 ;;  b               4   80[COMRAM] int 
 13271 ;;  a               4   84[COMRAM] int 
 13272 ;; Auto vars:     Size  Location     Type
 13273 ;;		None
 13274 ;; Return value:  Size  Location     Type
 13275 ;;                  4   80[COMRAM] int 
 13276 ;; Registers used:
 13277 ;;		wreg, status,2, status,0, cstack
 13278 ;; Tracked objects:
 13279 ;;		On entry : 0/0
 13280 ;;		On exit  : 0/0
 13281 ;;		Unchanged: 0/0
 13282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13283 ;;      Params:         8       0       0       0       0       0       0       0       0
 13284 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13285 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13286 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13287 ;;Total ram usage:        8 bytes
 13288 ;; Hardware stack levels used: 1
 13289 ;; Hardware stack levels required when called: 2
 13290 ;; This function calls:
 13291 ;;		___fladd
 13292 ;; This function is called by:
 13293 ;;		_main
 13294 ;;		_Handle_Fire_Events
 13295 ;;		_Handle_Test_Events
 13296 ;;		_Read_Sensors
 13297 ;;		_efgtoa
 13298 ;;		_powf
 13299 ;; This function uses a non-reentrant model
 13300 ;;
 13301                           
 13302                           	psect	text31
 13303   006C08                     __ptext31:
 13304                           	callstack 0
 13305   006C08                     ___flsub:
 13306                           	callstack 28
 13307   006C08  0E00               	movlw	0
 13308   006C0A  1A55               	xorwf	___flsub@a^0,f,c
 13309   006C0C  0E00               	movlw	0
 13310   006C0E  1A56               	xorwf	(___flsub@a+1)^0,f,c
 13311   006C10  0E00               	movlw	0
 13312   006C12  1A57               	xorwf	(___flsub@a+2)^0,f,c
 13313   006C14  0E80               	movlw	128
 13314   006C16  1A58               	xorwf	(___flsub@a+3)^0,f,c
 13315   006C18  C051  F041         	movff	___flsub@b,___fladd@b
 13316   006C1C  C052  F042         	movff	___flsub@b+1,___fladd@b+1
 13317   006C20  C053  F043         	movff	___flsub@b+2,___fladd@b+2
 13318   006C24  C054  F044         	movff	___flsub@b+3,___fladd@b+3
 13319   006C28  C055  F045         	movff	___flsub@a,___fladd@a
 13320   006C2C  C056  F046         	movff	___flsub@a+1,___fladd@a+1
 13321   006C30  C057  F047         	movff	___flsub@a+2,___fladd@a+2
 13322   006C34  C058  F048         	movff	___flsub@a+3,___fladd@a+3
 13323   006C38  EC67  F01D         	call	___fladd	;wreg free
 13324   006C3C  C041  F051         	movff	?___fladd,?___flsub
 13325   006C40  C042  F052         	movff	?___fladd+1,?___flsub+1
 13326   006C44  C043  F053         	movff	?___fladd+2,?___flsub+2
 13327   006C48  C044  F054         	movff	?___fladd+3,?___flsub+3
 13328   006C4C  0012               	return		;funcret
 13329   006C4E                     __end_of___flsub:
 13330                           	callstack 0
 13331                           
 13332 ;; *************** function ___fladd *****************
 13333 ;; Defined at:
 13334 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13335 ;; Parameters:    Size  Location     Type
 13336 ;;  b               4   64[COMRAM] int 
 13337 ;;  a               4   68[COMRAM] int 
 13338 ;; Auto vars:     Size  Location     Type
 13339 ;;  grs             1   79[COMRAM] unsigned char 
 13340 ;;  bexp            1   78[COMRAM] unsigned char 
 13341 ;;  aexp            1   77[COMRAM] unsigned char 
 13342 ;;  signs           1   76[COMRAM] unsigned char 
 13343 ;; Return value:  Size  Location     Type
 13344 ;;                  4   64[COMRAM] unsigned char 
 13345 ;; Registers used:
 13346 ;;		wreg, status,2, status,0
 13347 ;; Tracked objects:
 13348 ;;		On entry : 0/0
 13349 ;;		On exit  : 0/0
 13350 ;;		Unchanged: 0/0
 13351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13352 ;;      Params:         8       0       0       0       0       0       0       0       0
 13353 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13354 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13355 ;;      Totals:        16       0       0       0       0       0       0       0       0
 13356 ;;Total ram usage:       16 bytes
 13357 ;; Hardware stack levels used: 1
 13358 ;; Hardware stack levels required when called: 1
 13359 ;; This function calls:
 13360 ;;		Nothing
 13361 ;; This function is called by:
 13362 ;;		_main
 13363 ;;		_Read_Sensors
 13364 ;;		_Apply_Filter
 13365 ;;		___flsub
 13366 ;;		_efgtoa
 13367 ;;		_powf
 13368 ;; This function uses a non-reentrant model
 13369 ;;
 13370                           
 13371                           	psect	text32
 13372   003ACE                     __ptext32:
 13373                           	callstack 0
 13374   003ACE                     ___fladd:
 13375                           	callstack 28
 13376   003ACE  5044               	movf	(___fladd@b+3)^0,w,c
 13377   003AD0  0B80               	andlw	128
 13378   003AD2  6E4D               	movwf	___fladd@signs^0,c
 13379   003AD4  5044               	movf	(___fladd@b+3)^0,w,c
 13380   003AD6  2444               	addwf	(___fladd@b+3)^0,w,c
 13381   003AD8  6E4F               	movwf	___fladd@bexp^0,c
 13382   003ADA  AE43               	btfss	(___fladd@b+2)^0,7,c
 13383   003ADC  EF72  F01D         	goto	u7191
 13384   003AE0  EF74  F01D         	goto	u7190
 13385   003AE4                     u7191:
 13386   003AE4  EF75  F01D         	goto	l5898
 13387   003AE8                     u7190:
 13388   003AE8  804F               	bsf	___fladd@bexp^0,0,c
 13389   003AEA                     l5898:
 13390   003AEA  504F               	movf	___fladd@bexp^0,w,c
 13391   003AEC  B4D8               	btfsc	status,2,c
 13392   003AEE  EF7B  F01D         	goto	u7201
 13393   003AF2  EF7D  F01D         	goto	u7200
 13394   003AF6                     u7201:
 13395   003AF6  EF91  F01D         	goto	l5908
 13396   003AFA                     u7200:
 13397   003AFA  284F               	incf	___fladd@bexp^0,w,c
 13398   003AFC  A4D8               	btfss	status,2,c
 13399   003AFE  EF83  F01D         	goto	u7211
 13400   003B02  EF85  F01D         	goto	u7210
 13401   003B06                     u7211:
 13402   003B06  EF8D  F01D         	goto	l5904
 13403   003B0A                     u7210:
 13404   003B0A  0E00               	movlw	0
 13405   003B0C  6E41               	movwf	___fladd@b^0,c
 13406   003B0E  0E00               	movlw	0
 13407   003B10  6E42               	movwf	(___fladd@b+1)^0,c
 13408   003B12  0E00               	movlw	0
 13409   003B14  6E43               	movwf	(___fladd@b+2)^0,c
 13410   003B16  0E00               	movlw	0
 13411   003B18  6E44               	movwf	(___fladd@b+3)^0,c
 13412   003B1A                     l5904:
 13413   003B1A  8E43               	bsf	(___fladd@b+2)^0,7,c
 13414   003B1C  6A44               	clrf	(___fladd@b+3)^0,c
 13415   003B1E  EF99  F01D         	goto	l5910
 13416   003B22                     l5908:
 13417   003B22  0E00               	movlw	0
 13418   003B24  6E41               	movwf	___fladd@b^0,c
 13419   003B26  0E00               	movlw	0
 13420   003B28  6E42               	movwf	(___fladd@b+1)^0,c
 13421   003B2A  0E00               	movlw	0
 13422   003B2C  6E43               	movwf	(___fladd@b+2)^0,c
 13423   003B2E  0E00               	movlw	0
 13424   003B30  6E44               	movwf	(___fladd@b+3)^0,c
 13425   003B32                     l5910:
 13426   003B32  5048               	movf	(___fladd@a+3)^0,w,c
 13427   003B34  0B80               	andlw	128
 13428   003B36  6E4E               	movwf	___fladd@aexp^0,c
 13429   003B38  504D               	movf	___fladd@signs^0,w,c
 13430   003B3A  184E               	xorwf	___fladd@aexp^0,w,c
 13431   003B3C  B4D8               	btfsc	status,2,c
 13432   003B3E  EFA3  F01D         	goto	u7221
 13433   003B42  EFA5  F01D         	goto	u7220
 13434   003B46                     u7221:
 13435   003B46  EFA6  F01D         	goto	l5916
 13436   003B4A                     u7220:
 13437   003B4A  8C4D               	bsf	___fladd@signs^0,6,c
 13438   003B4C                     l5916:
 13439   003B4C  5048               	movf	(___fladd@a+3)^0,w,c
 13440   003B4E  2448               	addwf	(___fladd@a+3)^0,w,c
 13441   003B50  6E4E               	movwf	___fladd@aexp^0,c
 13442   003B52  AE47               	btfss	(___fladd@a+2)^0,7,c
 13443   003B54  EFAE  F01D         	goto	u7231
 13444   003B58  EFB0  F01D         	goto	u7230
 13445   003B5C                     u7231:
 13446   003B5C  EFB1  F01D         	goto	l5922
 13447   003B60                     u7230:
 13448   003B60  804E               	bsf	___fladd@aexp^0,0,c
 13449   003B62                     l5922:
 13450   003B62  504E               	movf	___fladd@aexp^0,w,c
 13451   003B64  B4D8               	btfsc	status,2,c
 13452   003B66  EFB7  F01D         	goto	u7241
 13453   003B6A  EFB9  F01D         	goto	u7240
 13454   003B6E                     u7241:
 13455   003B6E  EFCD  F01D         	goto	l5932
 13456   003B72                     u7240:
 13457   003B72  284E               	incf	___fladd@aexp^0,w,c
 13458   003B74  A4D8               	btfss	status,2,c
 13459   003B76  EFBF  F01D         	goto	u7251
 13460   003B7A  EFC1  F01D         	goto	u7250
 13461   003B7E                     u7251:
 13462   003B7E  EFC9  F01D         	goto	l5928
 13463   003B82                     u7250:
 13464   003B82  0E00               	movlw	0
 13465   003B84  6E45               	movwf	___fladd@a^0,c
 13466   003B86  0E00               	movlw	0
 13467   003B88  6E46               	movwf	(___fladd@a+1)^0,c
 13468   003B8A  0E00               	movlw	0
 13469   003B8C  6E47               	movwf	(___fladd@a+2)^0,c
 13470   003B8E  0E00               	movlw	0
 13471   003B90  6E48               	movwf	(___fladd@a+3)^0,c
 13472   003B92                     l5928:
 13473   003B92  8E47               	bsf	(___fladd@a+2)^0,7,c
 13474   003B94  6A48               	clrf	(___fladd@a+3)^0,c
 13475   003B96  EFD5  F01D         	goto	l5934
 13476   003B9A                     l5932:
 13477   003B9A  0E00               	movlw	0
 13478   003B9C  6E45               	movwf	___fladd@a^0,c
 13479   003B9E  0E00               	movlw	0
 13480   003BA0  6E46               	movwf	(___fladd@a+1)^0,c
 13481   003BA2  0E00               	movlw	0
 13482   003BA4  6E47               	movwf	(___fladd@a+2)^0,c
 13483   003BA6  0E00               	movlw	0
 13484   003BA8  6E48               	movwf	(___fladd@a+3)^0,c
 13485   003BAA                     l5934:
 13486   003BAA  504F               	movf	___fladd@bexp^0,w,c
 13487   003BAC  5C4E               	subwf	___fladd@aexp^0,w,c
 13488   003BAE  B0D8               	btfsc	status,0,c
 13489   003BB0  EFDC  F01D         	goto	u7261
 13490   003BB4  EFDE  F01D         	goto	u7260
 13491   003BB8                     u7261:
 13492   003BB8  EF05  F01E         	goto	l5970
 13493   003BBC                     u7260:
 13494   003BBC  AC4D               	btfss	___fladd@signs^0,6,c
 13495   003BBE  EFE3  F01D         	goto	u7271
 13496   003BC2  EFE5  F01D         	goto	u7270
 13497   003BC6                     u7271:
 13498   003BC6  EFE7  F01D         	goto	l5940
 13499   003BCA                     u7270:
 13500   003BCA  0E80               	movlw	128
 13501   003BCC  1A4D               	xorwf	___fladd@signs^0,f,c
 13502   003BCE                     l5940:
 13503   003BCE  C04F  F050         	movff	___fladd@bexp,___fladd@grs
 13504   003BD2  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
 13505   003BD6  C050  F04E         	movff	___fladd@grs,___fladd@aexp
 13506   003BDA  C041  F050         	movff	___fladd@b,___fladd@grs
 13507   003BDE  C045  F041         	movff	___fladd@a,___fladd@b
 13508   003BE2  C050  F045         	movff	___fladd@grs,___fladd@a
 13509   003BE6  C042  F050         	movff	___fladd@b+1,___fladd@grs
 13510   003BEA  C046  F042         	movff	___fladd@a+1,___fladd@b+1
 13511   003BEE  C050  F046         	movff	___fladd@grs,___fladd@a+1
 13512   003BF2  C043  F050         	movff	___fladd@b+2,___fladd@grs
 13513   003BF6  C047  F043         	movff	___fladd@a+2,___fladd@b+2
 13514   003BFA  C050  F047         	movff	___fladd@grs,___fladd@a+2
 13515   003BFE  C044  F050         	movff	___fladd@b+3,___fladd@grs
 13516   003C02  C048  F044         	movff	___fladd@a+3,___fladd@b+3
 13517   003C06  C050  F048         	movff	___fladd@grs,___fladd@a+3
 13518   003C0A                     l5970:
 13519   003C0A  6A50               	clrf	___fladd@grs^0,c
 13520   003C0C  504F               	movf	___fladd@bexp^0,w,c
 13521   003C0E  C04E  F049         	movff	___fladd@aexp,??___fladd
 13522   003C12  6A4A               	clrf	(??___fladd+1)^0,c
 13523   003C14  5E49               	subwf	??___fladd^0,f,c
 13524   003C16  0E00               	movlw	0
 13525   003C18  5A4A               	subwfb	(??___fladd+1)^0,f,c
 13526   003C1A  BE4A               	btfsc	(??___fladd+1)^0,7,c
 13527   003C1C  EF19  F01E         	goto	u7281
 13528   003C20  504A               	movf	(??___fladd+1)^0,w,c
 13529   003C22  E109               	bnz	u7280
 13530   003C24  0E1A               	movlw	26
 13531   003C26  5C49               	subwf	??___fladd^0,w,c
 13532   003C28  A0D8               	btfss	status,0,c
 13533   003C2A  EF19  F01E         	goto	u7281
 13534   003C2E  EF1B  F01E         	goto	u7280
 13535   003C32                     u7281:
 13536   003C32  EF52  F01E         	goto	l802
 13537   003C36                     u7280:
 13538   003C36  5041               	movf	___fladd@b^0,w,c
 13539   003C38  1042               	iorwf	(___fladd@b+1)^0,w,c
 13540   003C3A  1043               	iorwf	(___fladd@b+2)^0,w,c
 13541   003C3C  1044               	iorwf	(___fladd@b+3)^0,w,c
 13542   003C3E  A4D8               	btfss	status,2,c
 13543   003C40  EF24  F01E         	goto	u7291
 13544   003C44  EF27  F01E         	goto	u7290
 13545   003C48                     u7291:
 13546   003C48  0E01               	movlw	1
 13547   003C4A  EF28  F01E         	goto	u7300
 13548   003C4E                     u7290:
 13549   003C4E  0E00               	movlw	0
 13550   003C50                     u7300:
 13551   003C50  6E50               	movwf	___fladd@grs^0,c
 13552   003C52  0E00               	movlw	0
 13553   003C54  6E41               	movwf	___fladd@b^0,c
 13554   003C56  0E00               	movlw	0
 13555   003C58  6E42               	movwf	(___fladd@b+1)^0,c
 13556   003C5A  0E00               	movlw	0
 13557   003C5C  6E43               	movwf	(___fladd@b+2)^0,c
 13558   003C5E  0E00               	movlw	0
 13559   003C60  6E44               	movwf	(___fladd@b+3)^0,c
 13560   003C62  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
 13561   003C66  EF5B  F01E         	goto	l801
 13562   003C6A                     l803:
 13563   003C6A  A050               	btfss	___fladd@grs^0,0,c
 13564   003C6C  EF3A  F01E         	goto	u7311
 13565   003C70  EF3C  F01E         	goto	u7310
 13566   003C74                     u7311:
 13567   003C74  EF42  F01E         	goto	l5980
 13568   003C78                     u7310:
 13569   003C78  90D8               	bcf	status,0,c
 13570   003C7A  3050               	rrcf	___fladd@grs^0,w,c
 13571   003C7C  0901               	iorlw	1
 13572   003C7E  6E50               	movwf	___fladd@grs^0,c
 13573   003C80  EF44  F01E         	goto	l5982
 13574   003C84                     l5980:
 13575   003C84  90D8               	bcf	status,0,c
 13576   003C86  3250               	rrcf	___fladd@grs^0,f,c
 13577   003C88                     l5982:
 13578   003C88  A041               	btfss	___fladd@b^0,0,c
 13579   003C8A  EF49  F01E         	goto	u7321
 13580   003C8E  EF4B  F01E         	goto	u7320
 13581   003C92                     u7321:
 13582   003C92  EF4C  F01E         	goto	l5986
 13583   003C96                     u7320:
 13584   003C96  8E50               	bsf	___fladd@grs^0,7,c
 13585   003C98                     l5986:
 13586   003C98  3444               	rlcf	(___fladd@b+3)^0,w,c
 13587   003C9A  3244               	rrcf	(___fladd@b+3)^0,f,c
 13588   003C9C  3243               	rrcf	(___fladd@b+2)^0,f,c
 13589   003C9E  3242               	rrcf	(___fladd@b+1)^0,f,c
 13590   003CA0  3241               	rrcf	___fladd@b^0,f,c
 13591   003CA2  2A4F               	incf	___fladd@bexp^0,f,c
 13592   003CA4                     l802:
 13593   003CA4  504E               	movf	___fladd@aexp^0,w,c
 13594   003CA6  5C4F               	subwf	___fladd@bexp^0,w,c
 13595   003CA8  A0D8               	btfss	status,0,c
 13596   003CAA  EF59  F01E         	goto	u7331
 13597   003CAE  EF5B  F01E         	goto	u7330
 13598   003CB2                     u7331:
 13599   003CB2  EF35  F01E         	goto	l803
 13600   003CB6                     u7330:
 13601   003CB6                     l801:
 13602   003CB6  BC4D               	btfsc	___fladd@signs^0,6,c
 13603   003CB8  EF60  F01E         	goto	u7341
 13604   003CBC  EF62  F01E         	goto	u7340
 13605   003CC0                     u7341:
 13606   003CC0  EFA2  F01E         	goto	l6014
 13607   003CC4                     u7340:
 13608   003CC4  504F               	movf	___fladd@bexp^0,w,c
 13609   003CC6  A4D8               	btfss	status,2,c
 13610   003CC8  EF68  F01E         	goto	u7351
 13611   003CCC  EF6A  F01E         	goto	u7350
 13612   003CD0                     u7351:
 13613   003CD0  EF74  F01E         	goto	l5996
 13614   003CD4                     u7350:
 13615   003CD4  0E00               	movlw	0
 13616   003CD6  6E41               	movwf	?___fladd^0,c
 13617   003CD8  0E00               	movlw	0
 13618   003CDA  6E42               	movwf	(?___fladd+1)^0,c
 13619   003CDC  0E00               	movlw	0
 13620   003CDE  6E43               	movwf	(?___fladd+2)^0,c
 13621   003CE0  0E00               	movlw	0
 13622   003CE2  6E44               	movwf	(?___fladd+3)^0,c
 13623   003CE4  EFC1  F01F         	goto	l810
 13624   003CE8                     l5996:
 13625   003CE8  5045               	movf	___fladd@a^0,w,c
 13626   003CEA  2641               	addwf	___fladd@b^0,f,c
 13627   003CEC  5046               	movf	(___fladd@a+1)^0,w,c
 13628   003CEE  2242               	addwfc	(___fladd@b+1)^0,f,c
 13629   003CF0  5047               	movf	(___fladd@a+2)^0,w,c
 13630   003CF2  2243               	addwfc	(___fladd@b+2)^0,f,c
 13631   003CF4  5048               	movf	(___fladd@a+3)^0,w,c
 13632   003CF6  2244               	addwfc	(___fladd@b+3)^0,f,c
 13633   003CF8  A044               	btfss	(___fladd@b+3)^0,0,c
 13634   003CFA  EF81  F01E         	goto	u7361
 13635   003CFE  EF83  F01E         	goto	u7360
 13636   003D02                     u7361:
 13637   003D02  EF2F  F01F         	goto	l815
 13638   003D06                     u7360:
 13639   003D06  A050               	btfss	___fladd@grs^0,0,c
 13640   003D08  EF88  F01E         	goto	u7371
 13641   003D0C  EF8A  F01E         	goto	u7370
 13642   003D10                     u7371:
 13643   003D10  EF90  F01E         	goto	l6004
 13644   003D14                     u7370:
 13645   003D14  90D8               	bcf	status,0,c
 13646   003D16  3050               	rrcf	___fladd@grs^0,w,c
 13647   003D18  0901               	iorlw	1
 13648   003D1A  6E50               	movwf	___fladd@grs^0,c
 13649   003D1C  EF92  F01E         	goto	l6006
 13650   003D20                     l6004:
 13651   003D20  90D8               	bcf	status,0,c
 13652   003D22  3250               	rrcf	___fladd@grs^0,f,c
 13653   003D24                     l6006:
 13654   003D24  A041               	btfss	___fladd@b^0,0,c
 13655   003D26  EF97  F01E         	goto	u7381
 13656   003D2A  EF99  F01E         	goto	u7380
 13657   003D2E                     u7381:
 13658   003D2E  EF9A  F01E         	goto	l6010
 13659   003D32                     u7380:
 13660   003D32  8E50               	bsf	___fladd@grs^0,7,c
 13661   003D34                     l6010:
 13662   003D34  3444               	rlcf	(___fladd@b+3)^0,w,c
 13663   003D36  3244               	rrcf	(___fladd@b+3)^0,f,c
 13664   003D38  3243               	rrcf	(___fladd@b+2)^0,f,c
 13665   003D3A  3242               	rrcf	(___fladd@b+1)^0,f,c
 13666   003D3C  3241               	rrcf	___fladd@b^0,f,c
 13667   003D3E  2A4F               	incf	___fladd@bexp^0,f,c
 13668   003D40  EF2F  F01F         	goto	l815
 13669   003D44                     l6014:
 13670   003D44  5045               	movf	___fladd@a^0,w,c
 13671   003D46  5C41               	subwf	___fladd@b^0,w,c
 13672   003D48  5046               	movf	(___fladd@a+1)^0,w,c
 13673   003D4A  5842               	subwfb	(___fladd@b+1)^0,w,c
 13674   003D4C  5047               	movf	(___fladd@a+2)^0,w,c
 13675   003D4E  5843               	subwfb	(___fladd@b+2)^0,w,c
 13676   003D50  5044               	movf	(___fladd@b+3)^0,w,c
 13677   003D52  0A80               	xorlw	128
 13678   003D54  6E49               	movwf	??___fladd^0,c
 13679   003D56  5048               	movf	(___fladd@a+3)^0,w,c
 13680   003D58  0A80               	xorlw	128
 13681   003D5A  5849               	subwfb	??___fladd^0,w,c
 13682   003D5C  B0D8               	btfsc	status,0,c
 13683   003D5E  EFB3  F01E         	goto	u7391
 13684   003D62  EFB5  F01E         	goto	u7390
 13685   003D66                     u7391:
 13686   003D66  EFE0  F01E         	goto	l6024
 13687   003D6A                     u7390:
 13688   003D6A  5041               	movf	___fladd@b^0,w,c
 13689   003D6C  5C45               	subwf	___fladd@a^0,w,c
 13690   003D6E  6E49               	movwf	??___fladd^0,c
 13691   003D70  5042               	movf	(___fladd@b+1)^0,w,c
 13692   003D72  5846               	subwfb	(___fladd@a+1)^0,w,c
 13693   003D74  6E4A               	movwf	(??___fladd+1)^0,c
 13694   003D76  5043               	movf	(___fladd@b+2)^0,w,c
 13695   003D78  5847               	subwfb	(___fladd@a+2)^0,w,c
 13696   003D7A  6E4B               	movwf	(??___fladd+2)^0,c
 13697   003D7C  5044               	movf	(___fladd@b+3)^0,w,c
 13698   003D7E  5848               	subwfb	(___fladd@a+3)^0,w,c
 13699   003D80  6E4C               	movwf	(??___fladd+3)^0,c
 13700   003D82  0EFF               	movlw	255
 13701   003D84  2449               	addwf	??___fladd^0,w,c
 13702   003D86  6E41               	movwf	___fladd@b^0,c
 13703   003D88  0EFF               	movlw	255
 13704   003D8A  204A               	addwfc	(??___fladd+1)^0,w,c
 13705   003D8C  6E42               	movwf	(___fladd@b+1)^0,c
 13706   003D8E  0EFF               	movlw	255
 13707   003D90  204B               	addwfc	(??___fladd+2)^0,w,c
 13708   003D92  6E43               	movwf	(___fladd@b+2)^0,c
 13709   003D94  0EFF               	movlw	255
 13710   003D96  204C               	addwfc	(??___fladd+3)^0,w,c
 13711   003D98  6E44               	movwf	(___fladd@b+3)^0,c
 13712   003D9A  0E80               	movlw	128
 13713   003D9C  1A4D               	xorwf	___fladd@signs^0,f,c
 13714   003D9E  6C50               	negf	___fladd@grs^0,c
 13715   003DA0  5050               	movf	___fladd@grs^0,w,c
 13716   003DA2  A4D8               	btfss	status,2,c
 13717   003DA4  EFD6  F01E         	goto	u7401
 13718   003DA8  EFD8  F01E         	goto	u7400
 13719   003DAC                     u7401:
 13720   003DAC  EFE8  F01E         	goto	l818
 13721   003DB0                     u7400:
 13722   003DB0  0E01               	movlw	1
 13723   003DB2  2641               	addwf	___fladd@b^0,f,c
 13724   003DB4  0E00               	movlw	0
 13725   003DB6  2242               	addwfc	(___fladd@b+1)^0,f,c
 13726   003DB8  2243               	addwfc	(___fladd@b+2)^0,f,c
 13727   003DBA  2244               	addwfc	(___fladd@b+3)^0,f,c
 13728   003DBC  EFE8  F01E         	goto	l818
 13729   003DC0                     l6024:
 13730   003DC0  5045               	movf	___fladd@a^0,w,c
 13731   003DC2  5E41               	subwf	___fladd@b^0,f,c
 13732   003DC4  5046               	movf	(___fladd@a+1)^0,w,c
 13733   003DC6  5A42               	subwfb	(___fladd@b+1)^0,f,c
 13734   003DC8  5047               	movf	(___fladd@a+2)^0,w,c
 13735   003DCA  5A43               	subwfb	(___fladd@b+2)^0,f,c
 13736   003DCC  5048               	movf	(___fladd@a+3)^0,w,c
 13737   003DCE  5A44               	subwfb	(___fladd@b+3)^0,f,c
 13738   003DD0                     l818:
 13739   003DD0  5041               	movf	___fladd@b^0,w,c
 13740   003DD2  1042               	iorwf	(___fladd@b+1)^0,w,c
 13741   003DD4  1043               	iorwf	(___fladd@b+2)^0,w,c
 13742   003DD6  1044               	iorwf	(___fladd@b+3)^0,w,c
 13743   003DD8  A4D8               	btfss	status,2,c
 13744   003DDA  EFF1  F01E         	goto	u7411
 13745   003DDE  EFF3  F01E         	goto	u7410
 13746   003DE2                     u7411:
 13747   003DE2  EF28  F01F         	goto	l6048
 13748   003DE6                     u7410:
 13749   003DE6  5050               	movf	___fladd@grs^0,w,c
 13750   003DE8  A4D8               	btfss	status,2,c
 13751   003DEA  EFF9  F01E         	goto	u7421
 13752   003DEE  EFFB  F01E         	goto	u7420
 13753   003DF2                     u7421:
 13754   003DF2  EF28  F01F         	goto	l6048
 13755   003DF6                     u7420:
 13756   003DF6  0E00               	movlw	0
 13757   003DF8  6E41               	movwf	?___fladd^0,c
 13758   003DFA  0E00               	movlw	0
 13759   003DFC  6E42               	movwf	(?___fladd+1)^0,c
 13760   003DFE  0E00               	movlw	0
 13761   003E00  6E43               	movwf	(?___fladd+2)^0,c
 13762   003E02  0E00               	movlw	0
 13763   003E04  6E44               	movwf	(?___fladd+3)^0,c
 13764   003E06  EFC1  F01F         	goto	l810
 13765   003E0A                     l6032:
 13766   003E0A  90D8               	bcf	status,0,c
 13767   003E0C  3641               	rlcf	___fladd@b^0,f,c
 13768   003E0E  3642               	rlcf	(___fladd@b+1)^0,f,c
 13769   003E10  3643               	rlcf	(___fladd@b+2)^0,f,c
 13770   003E12  3644               	rlcf	(___fladd@b+3)^0,f,c
 13771   003E14  AE50               	btfss	___fladd@grs^0,7,c
 13772   003E16  EF0F  F01F         	goto	u7431
 13773   003E1A  EF11  F01F         	goto	u7430
 13774   003E1E                     u7431:
 13775   003E1E  EF12  F01F         	goto	l6038
 13776   003E22                     u7430:
 13777   003E22  8041               	bsf	___fladd@b^0,0,c
 13778   003E24                     l6038:
 13779   003E24  A050               	btfss	___fladd@grs^0,0,c
 13780   003E26  EF17  F01F         	goto	u7441
 13781   003E2A  EF19  F01F         	goto	u7440
 13782   003E2E                     u7441:
 13783   003E2E  EF1D  F01F         	goto	l6042
 13784   003E32                     u7440:
 13785   003E32  80D8               	bsf	status,0,c
 13786   003E34  3650               	rlcf	___fladd@grs^0,f,c
 13787   003E36  EF1F  F01F         	goto	l6044
 13788   003E3A                     l6042:
 13789   003E3A  90D8               	bcf	status,0,c
 13790   003E3C  3650               	rlcf	___fladd@grs^0,f,c
 13791   003E3E                     l6044:
 13792   003E3E  504F               	movf	___fladd@bexp^0,w,c
 13793   003E40  B4D8               	btfsc	status,2,c
 13794   003E42  EF25  F01F         	goto	u7451
 13795   003E46  EF27  F01F         	goto	u7450
 13796   003E4A                     u7451:
 13797   003E4A  EF28  F01F         	goto	l6048
 13798   003E4E                     u7450:
 13799   003E4E  064F               	decf	___fladd@bexp^0,f,c
 13800   003E50                     l6048:
 13801   003E50  AE43               	btfss	(___fladd@b+2)^0,7,c
 13802   003E52  EF2D  F01F         	goto	u7461
 13803   003E56  EF2F  F01F         	goto	u7460
 13804   003E5A                     u7461:
 13805   003E5A  EF05  F01F         	goto	l6032
 13806   003E5E                     u7460:
 13807   003E5E                     l815:
 13808   003E5E  6A4E               	clrf	___fladd@aexp^0,c
 13809   003E60  AE50               	btfss	___fladd@grs^0,7,c
 13810   003E62  EF35  F01F         	goto	u7471
 13811   003E66  EF37  F01F         	goto	u7470
 13812   003E6A                     u7471:
 13813   003E6A  EF4F  F01F         	goto	l827
 13814   003E6E                     u7470:
 13815   003E6E  C050  F049         	movff	___fladd@grs,??___fladd
 13816   003E72  0E7F               	movlw	127
 13817   003E74  1649               	andwf	??___fladd^0,f,c
 13818   003E76  B4D8               	btfsc	status,2,c
 13819   003E78  EF40  F01F         	goto	u7481
 13820   003E7C  EF42  F01F         	goto	u7480
 13821   003E80                     u7481:
 13822   003E80  EF46  F01F         	goto	l828
 13823   003E84                     u7480:
 13824   003E84                     l6052:
 13825   003E84  0E01               	movlw	1
 13826   003E86  6E4E               	movwf	___fladd@aexp^0,c
 13827   003E88  EF4F  F01F         	goto	l827
 13828   003E8C                     l828:
 13829   003E8C  A041               	btfss	___fladd@b^0,0,c
 13830   003E8E  EF4B  F01F         	goto	u7491
 13831   003E92  EF4D  F01F         	goto	u7490
 13832   003E96                     u7491:
 13833   003E96  EF4F  F01F         	goto	l827
 13834   003E9A                     u7490:
 13835   003E9A  EF42  F01F         	goto	l6052
 13836   003E9E                     l827:
 13837   003E9E  504E               	movf	___fladd@aexp^0,w,c
 13838   003EA0  B4D8               	btfsc	status,2,c
 13839   003EA2  EF55  F01F         	goto	u7501
 13840   003EA6  EF57  F01F         	goto	u7500
 13841   003EAA                     u7501:
 13842   003EAA  EF82  F01F         	goto	l6064
 13843   003EAE                     u7500:
 13844   003EAE  0E01               	movlw	1
 13845   003EB0  2641               	addwf	___fladd@b^0,f,c
 13846   003EB2  0E00               	movlw	0
 13847   003EB4  2242               	addwfc	(___fladd@b+1)^0,f,c
 13848   003EB6  2243               	addwfc	(___fladd@b+2)^0,f,c
 13849   003EB8  2244               	addwfc	(___fladd@b+3)^0,f,c
 13850   003EBA  A044               	btfss	(___fladd@b+3)^0,0,c
 13851   003EBC  EF62  F01F         	goto	u7511
 13852   003EC0  EF64  F01F         	goto	u7510
 13853   003EC4                     u7511:
 13854   003EC4  EF82  F01F         	goto	l6064
 13855   003EC8                     u7510:
 13856   003EC8  C041  F049         	movff	___fladd@b,??___fladd
 13857   003ECC  C042  F04A         	movff	___fladd@b+1,??___fladd+1
 13858   003ED0  C043  F04B         	movff	___fladd@b+2,??___fladd+2
 13859   003ED4  C044  F04C         	movff	___fladd@b+3,??___fladd+3
 13860   003ED8  344C               	rlcf	(??___fladd+3)^0,w,c
 13861   003EDA  324C               	rrcf	(??___fladd+3)^0,f,c
 13862   003EDC  324B               	rrcf	(??___fladd+2)^0,f,c
 13863   003EDE  324A               	rrcf	(??___fladd+1)^0,f,c
 13864   003EE0  3249               	rrcf	??___fladd^0,f,c
 13865   003EE2  C049  F041         	movff	??___fladd,___fladd@b
 13866   003EE6  C04A  F042         	movff	??___fladd+1,___fladd@b+1
 13867   003EEA  C04B  F043         	movff	??___fladd+2,___fladd@b+2
 13868   003EEE  C04C  F044         	movff	??___fladd+3,___fladd@b+3
 13869   003EF2  284F               	incf	___fladd@bexp^0,w,c
 13870   003EF4  B4D8               	btfsc	status,2,c
 13871   003EF6  EF7F  F01F         	goto	u7521
 13872   003EFA  EF81  F01F         	goto	u7520
 13873   003EFE                     u7521:
 13874   003EFE  EF82  F01F         	goto	l6064
 13875   003F02                     u7520:
 13876   003F02  2A4F               	incf	___fladd@bexp^0,f,c
 13877   003F04                     l6064:
 13878   003F04  284F               	incf	___fladd@bexp^0,w,c
 13879   003F06  B4D8               	btfsc	status,2,c
 13880   003F08  EF88  F01F         	goto	u7531
 13881   003F0C  EF8A  F01F         	goto	u7530
 13882   003F10                     u7531:
 13883   003F10  EF92  F01F         	goto	l6068
 13884   003F14                     u7530:
 13885   003F14  504F               	movf	___fladd@bexp^0,w,c
 13886   003F16  A4D8               	btfss	status,2,c
 13887   003F18  EF90  F01F         	goto	u7541
 13888   003F1C  EF92  F01F         	goto	u7540
 13889   003F20                     u7541:
 13890   003F20  EFA3  F01F         	goto	l834
 13891   003F24                     u7540:
 13892   003F24                     l6068:
 13893   003F24  0E00               	movlw	0
 13894   003F26  6E41               	movwf	___fladd@b^0,c
 13895   003F28  0E00               	movlw	0
 13896   003F2A  6E42               	movwf	(___fladd@b+1)^0,c
 13897   003F2C  0E00               	movlw	0
 13898   003F2E  6E43               	movwf	(___fladd@b+2)^0,c
 13899   003F30  0E00               	movlw	0
 13900   003F32  6E44               	movwf	(___fladd@b+3)^0,c
 13901   003F34  504F               	movf	___fladd@bexp^0,w,c
 13902   003F36  A4D8               	btfss	status,2,c
 13903   003F38  EFA0  F01F         	goto	u7551
 13904   003F3C  EFA2  F01F         	goto	u7550
 13905   003F40                     u7551:
 13906   003F40  EFA3  F01F         	goto	l834
 13907   003F44                     u7550:
 13908   003F44  6A4D               	clrf	___fladd@signs^0,c
 13909   003F46                     l834:
 13910   003F46  A04F               	btfss	___fladd@bexp^0,0,c
 13911   003F48  EFA8  F01F         	goto	u7561
 13912   003F4C  EFAA  F01F         	goto	u7560
 13913   003F50                     u7561:
 13914   003F50  EFAD  F01F         	goto	l6074
 13915   003F54                     u7560:
 13916   003F54  8E43               	bsf	(___fladd@b+2)^0,7,c
 13917   003F56  EFAE  F01F         	goto	l6076
 13918   003F5A                     l6074:
 13919   003F5A  9E43               	bcf	(___fladd@b+2)^0,7,c
 13920   003F5C                     l6076:
 13921   003F5C  90D8               	bcf	status,0,c
 13922   003F5E  304F               	rrcf	___fladd@bexp^0,w,c
 13923   003F60  6E44               	movwf	(___fladd@b+3)^0,c
 13924   003F62  AE4D               	btfss	___fladd@signs^0,7,c
 13925   003F64  EFB6  F01F         	goto	u7571
 13926   003F68  EFB8  F01F         	goto	u7570
 13927   003F6C                     u7571:
 13928   003F6C  EFB9  F01F         	goto	l6082
 13929   003F70                     u7570:
 13930   003F70  8E44               	bsf	(___fladd@b+3)^0,7,c
 13931   003F72                     l6082:
 13932   003F72  C041  F041         	movff	___fladd@b,?___fladd
 13933   003F76  C042  F042         	movff	___fladd@b+1,?___fladd+1
 13934   003F7A  C043  F043         	movff	___fladd@b+2,?___fladd+2
 13935   003F7E  C044  F044         	movff	___fladd@b+3,?___fladd+3
 13936   003F82                     l810:
 13937   003F82  0012               	return		;funcret
 13938   003F84                     __end_of___fladd:
 13939                           	callstack 0
 13940                           
 13941 ;; *************** function ___flneg *****************
 13942 ;; Defined at:
 13943 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 13944 ;; Parameters:    Size  Location     Type
 13945 ;;  f1              4    0[COMRAM] unsigned char 
 13946 ;; Auto vars:     Size  Location     Type
 13947 ;;		None
 13948 ;; Return value:  Size  Location     Type
 13949 ;;                  4    0[COMRAM] unsigned char 
 13950 ;; Registers used:
 13951 ;;		wreg, status,2, status,0
 13952 ;; Tracked objects:
 13953 ;;		On entry : 0/0
 13954 ;;		On exit  : 0/0
 13955 ;;		Unchanged: 0/0
 13956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13957 ;;      Params:         4       0       0       0       0       0       0       0       0
 13958 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13959 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13960 ;;      Totals:         4       0       0       0       0       0       0       0       0
 13961 ;;Total ram usage:        4 bytes
 13962 ;; Hardware stack levels used: 1
 13963 ;; Hardware stack levels required when called: 1
 13964 ;; This function calls:
 13965 ;;		Nothing
 13966 ;; This function is called by:
 13967 ;;		_efgtoa
 13968 ;;		_powf
 13969 ;; This function uses a non-reentrant model
 13970 ;;
 13971                           
 13972                           	psect	text33
 13973   006D4C                     __ptext33:
 13974                           	callstack 0
 13975   006D4C                     ___flneg:
 13976                           	callstack 24
 13977   006D4C  5001               	movf	___flneg@f1^0,w,c
 13978   006D4E  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13979   006D50  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13980   006D52  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13981   006D54  B4D8               	btfsc	status,2,c
 13982   006D56  EFAF  F036         	goto	u8251
 13983   006D5A  EFB1  F036         	goto	u8250
 13984   006D5E                     u8251:
 13985   006D5E  EFB9  F036         	goto	l6512
 13986   006D62                     u8250:
 13987   006D62  0E00               	movlw	0
 13988   006D64  1A01               	xorwf	___flneg@f1^0,f,c
 13989   006D66  0E00               	movlw	0
 13990   006D68  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13991   006D6A  0E00               	movlw	0
 13992   006D6C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13993   006D6E  0E80               	movlw	128
 13994   006D70  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13995   006D72                     l6512:
 13996   006D72  C001  F001         	movff	___flneg@f1,?___flneg
 13997   006D76  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13998   006D7A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13999   006D7E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 14000   006D82  0012               	return		;funcret
 14001   006D84                     __end_of___flneg:
 14002                           	callstack 0
 14003                           
 14004 ;; *************** function ___flmul *****************
 14005 ;; Defined at:
 14006 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 14007 ;; Parameters:    Size  Location     Type
 14008 ;;  b               4   14[COMRAM] unsigned char 
 14009 ;;  a               4   18[COMRAM] unsigned char 
 14010 ;; Auto vars:     Size  Location     Type
 14011 ;;  prod            4   33[COMRAM] struct .
 14012 ;;  grs             4   28[COMRAM] unsigned long 
 14013 ;;  temp            2   37[COMRAM] struct .
 14014 ;;  bexp            1   32[COMRAM] unsigned char 
 14015 ;;  aexp            1   27[COMRAM] unsigned char 
 14016 ;;  sign            1   26[COMRAM] unsigned char 
 14017 ;; Return value:  Size  Location     Type
 14018 ;;                  4   14[COMRAM] unsigned char 
 14019 ;; Registers used:
 14020 ;;		wreg, status,2, status,0, prodl, prodh
 14021 ;; Tracked objects:
 14022 ;;		On entry : 0/0
 14023 ;;		On exit  : 0/0
 14024 ;;		Unchanged: 0/0
 14025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14026 ;;      Params:         8       0       0       0       0       0       0       0       0
 14027 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14028 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14029 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14030 ;;Total ram usage:       25 bytes
 14031 ;; Hardware stack levels used: 1
 14032 ;; Hardware stack levels required when called: 1
 14033 ;; This function calls:
 14034 ;;		Nothing
 14035 ;; This function is called by:
 14036 ;;		_main
 14037 ;;		_Read_Sensors
 14038 ;;		_efgtoa
 14039 ;;		_powf
 14040 ;;		_scalbnf
 14041 ;; This function uses a non-reentrant model
 14042 ;;
 14043                           
 14044                           	psect	text34
 14045   003F84                     __ptext34:
 14046                           	callstack 0
 14047   003F84                     ___flmul:
 14048                           	callstack 29
 14049   003F84  5012               	movf	(___flmul@b+3)^0,w,c
 14050   003F86  0B80               	andlw	128
 14051   003F88  6E1B               	movwf	___flmul@sign^0,c
 14052   003F8A  5012               	movf	(___flmul@b+3)^0,w,c
 14053   003F8C  2412               	addwf	(___flmul@b+3)^0,w,c
 14054   003F8E  6E21               	movwf	___flmul@bexp^0,c
 14055   003F90  AE11               	btfss	(___flmul@b+2)^0,7,c
 14056   003F92  EFCD  F01F         	goto	u7981
 14057   003F96  EFCF  F01F         	goto	u7980
 14058   003F9A                     u7981:
 14059   003F9A  EFD0  F01F         	goto	l6342
 14060   003F9E                     u7980:
 14061   003F9E  8021               	bsf	___flmul@bexp^0,0,c
 14062   003FA0                     l6342:
 14063   003FA0  5021               	movf	___flmul@bexp^0,w,c
 14064   003FA2  B4D8               	btfsc	status,2,c
 14065   003FA4  EFD6  F01F         	goto	u7991
 14066   003FA8  EFD8  F01F         	goto	u7990
 14067   003FAC                     u7991:
 14068   003FAC  EFEB  F01F         	goto	l6350
 14069   003FB0                     u7990:
 14070   003FB0  2821               	incf	___flmul@bexp^0,w,c
 14071   003FB2  A4D8               	btfss	status,2,c
 14072   003FB4  EFDE  F01F         	goto	u8001
 14073   003FB8  EFE0  F01F         	goto	u8000
 14074   003FBC                     u8001:
 14075   003FBC  EFE8  F01F         	goto	l6348
 14076   003FC0                     u8000:
 14077   003FC0  0E00               	movlw	0
 14078   003FC2  6E0F               	movwf	___flmul@b^0,c
 14079   003FC4  0E00               	movlw	0
 14080   003FC6  6E10               	movwf	(___flmul@b+1)^0,c
 14081   003FC8  0E00               	movlw	0
 14082   003FCA  6E11               	movwf	(___flmul@b+2)^0,c
 14083   003FCC  0E00               	movlw	0
 14084   003FCE  6E12               	movwf	(___flmul@b+3)^0,c
 14085   003FD0                     l6348:
 14086   003FD0  8E11               	bsf	(___flmul@b+2)^0,7,c
 14087   003FD2  EFF3  F01F         	goto	l6352
 14088   003FD6                     l6350:
 14089   003FD6  0E00               	movlw	0
 14090   003FD8  6E0F               	movwf	___flmul@b^0,c
 14091   003FDA  0E00               	movlw	0
 14092   003FDC  6E10               	movwf	(___flmul@b+1)^0,c
 14093   003FDE  0E00               	movlw	0
 14094   003FE0  6E11               	movwf	(___flmul@b+2)^0,c
 14095   003FE2  0E00               	movlw	0
 14096   003FE4  6E12               	movwf	(___flmul@b+3)^0,c
 14097   003FE6                     l6352:
 14098   003FE6  5016               	movf	(___flmul@a+3)^0,w,c
 14099   003FE8  0B80               	andlw	128
 14100   003FEA  1A1B               	xorwf	___flmul@sign^0,f,c
 14101   003FEC  5016               	movf	(___flmul@a+3)^0,w,c
 14102   003FEE  2416               	addwf	(___flmul@a+3)^0,w,c
 14103   003FF0  6E1C               	movwf	___flmul@aexp^0,c
 14104   003FF2  AE15               	btfss	(___flmul@a+2)^0,7,c
 14105   003FF4  EFFE  F01F         	goto	u8011
 14106   003FF8  EF00  F020         	goto	u8010
 14107   003FFC                     u8011:
 14108   003FFC  EF01  F020         	goto	l6360
 14109   004000                     u8010:
 14110   004000  801C               	bsf	___flmul@aexp^0,0,c
 14111   004002                     l6360:
 14112   004002  501C               	movf	___flmul@aexp^0,w,c
 14113   004004  B4D8               	btfsc	status,2,c
 14114   004006  EF07  F020         	goto	u8021
 14115   00400A  EF09  F020         	goto	u8020
 14116   00400E                     u8021:
 14117   00400E  EF1C  F020         	goto	l6368
 14118   004012                     u8020:
 14119   004012  281C               	incf	___flmul@aexp^0,w,c
 14120   004014  A4D8               	btfss	status,2,c
 14121   004016  EF0F  F020         	goto	u8031
 14122   00401A  EF11  F020         	goto	u8030
 14123   00401E                     u8031:
 14124   00401E  EF19  F020         	goto	l6366
 14125   004022                     u8030:
 14126   004022  0E00               	movlw	0
 14127   004024  6E13               	movwf	___flmul@a^0,c
 14128   004026  0E00               	movlw	0
 14129   004028  6E14               	movwf	(___flmul@a+1)^0,c
 14130   00402A  0E00               	movlw	0
 14131   00402C  6E15               	movwf	(___flmul@a+2)^0,c
 14132   00402E  0E00               	movlw	0
 14133   004030  6E16               	movwf	(___flmul@a+3)^0,c
 14134   004032                     l6366:
 14135   004032  8E15               	bsf	(___flmul@a+2)^0,7,c
 14136   004034  EF24  F020         	goto	l887
 14137   004038                     l6368:
 14138   004038  0E00               	movlw	0
 14139   00403A  6E13               	movwf	___flmul@a^0,c
 14140   00403C  0E00               	movlw	0
 14141   00403E  6E14               	movwf	(___flmul@a+1)^0,c
 14142   004040  0E00               	movlw	0
 14143   004042  6E15               	movwf	(___flmul@a+2)^0,c
 14144   004044  0E00               	movlw	0
 14145   004046  6E16               	movwf	(___flmul@a+3)^0,c
 14146   004048                     l887:
 14147   004048  501C               	movf	___flmul@aexp^0,w,c
 14148   00404A  B4D8               	btfsc	status,2,c
 14149   00404C  EF2A  F020         	goto	u8041
 14150   004050  EF2C  F020         	goto	u8040
 14151   004054                     u8041:
 14152   004054  EF34  F020         	goto	l6372
 14153   004058                     u8040:
 14154   004058  5021               	movf	___flmul@bexp^0,w,c
 14155   00405A  A4D8               	btfss	status,2,c
 14156   00405C  EF32  F020         	goto	u8051
 14157   004060  EF34  F020         	goto	u8050
 14158   004064                     u8051:
 14159   004064  EF3E  F020         	goto	l6376
 14160   004068                     u8050:
 14161   004068                     l6372:
 14162   004068  0E00               	movlw	0
 14163   00406A  6E0F               	movwf	?___flmul^0,c
 14164   00406C  0E00               	movlw	0
 14165   00406E  6E10               	movwf	(?___flmul+1)^0,c
 14166   004070  0E00               	movlw	0
 14167   004072  6E11               	movwf	(?___flmul+2)^0,c
 14168   004074  0E00               	movlw	0
 14169   004076  6E12               	movwf	(?___flmul+3)^0,c
 14170   004078  EFD4  F021         	goto	l891
 14171   00407C                     l6376:
 14172   00407C  5015               	movf	(___flmul@a+2)^0,w,c
 14173   00407E  020F               	mulwf	___flmul@b^0,c
 14174   004080  CFF3 F026          	movff	prodl,___flmul@temp
 14175   004084  CFF4 F027          	movff	prodh,___flmul@temp+1
 14176   004088  5026               	movf	___flmul@temp^0,w,c
 14177   00408A  6E1D               	movwf	___flmul@grs^0,c
 14178   00408C  6A1E               	clrf	(___flmul@grs+1)^0,c
 14179   00408E  6A1F               	clrf	(___flmul@grs+2)^0,c
 14180   004090  6A20               	clrf	(___flmul@grs+3)^0,c
 14181   004092  5027               	movf	(___flmul@temp+1)^0,w,c
 14182   004094  6E22               	movwf	___flmul@prod^0,c
 14183   004096  6A23               	clrf	(___flmul@prod+1)^0,c
 14184   004098  6A24               	clrf	(___flmul@prod+2)^0,c
 14185   00409A  6A25               	clrf	(___flmul@prod+3)^0,c
 14186   00409C  5014               	movf	(___flmul@a+1)^0,w,c
 14187   00409E  0210               	mulwf	(___flmul@b+1)^0,c
 14188   0040A0  CFF3 F026          	movff	prodl,___flmul@temp
 14189   0040A4  CFF4 F027          	movff	prodh,___flmul@temp+1
 14190   0040A8  5026               	movf	___flmul@temp^0,w,c
 14191   0040AA  261D               	addwf	___flmul@grs^0,f,c
 14192   0040AC  0E00               	movlw	0
 14193   0040AE  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14194   0040B0  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14195   0040B2  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14196   0040B4  5027               	movf	(___flmul@temp+1)^0,w,c
 14197   0040B6  2622               	addwf	___flmul@prod^0,f,c
 14198   0040B8  0E00               	movlw	0
 14199   0040BA  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14200   0040BC  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14201   0040BE  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14202   0040C0  5013               	movf	___flmul@a^0,w,c
 14203   0040C2  0211               	mulwf	(___flmul@b+2)^0,c
 14204   0040C4  CFF3 F026          	movff	prodl,___flmul@temp
 14205   0040C8  CFF4 F027          	movff	prodh,___flmul@temp+1
 14206   0040CC  5026               	movf	___flmul@temp^0,w,c
 14207   0040CE  261D               	addwf	___flmul@grs^0,f,c
 14208   0040D0  0E00               	movlw	0
 14209   0040D2  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14210   0040D4  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14211   0040D6  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14212   0040D8  5027               	movf	(___flmul@temp+1)^0,w,c
 14213   0040DA  2622               	addwf	___flmul@prod^0,f,c
 14214   0040DC  0E00               	movlw	0
 14215   0040DE  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14216   0040E0  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14217   0040E2  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14218   0040E4  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14219   0040E8  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14220   0040EC  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14221   0040F0  6A1D               	clrf	___flmul@grs^0,c
 14222   0040F2  5013               	movf	___flmul@a^0,w,c
 14223   0040F4  0210               	mulwf	(___flmul@b+1)^0,c
 14224   0040F6  CFF3 F026          	movff	prodl,___flmul@temp
 14225   0040FA  CFF4 F027          	movff	prodh,___flmul@temp+1
 14226   0040FE  5026               	movf	___flmul@temp^0,w,c
 14227   004100  261D               	addwf	___flmul@grs^0,f,c
 14228   004102  5027               	movf	(___flmul@temp+1)^0,w,c
 14229   004104  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14230   004106  0E00               	movlw	0
 14231   004108  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14232   00410A  0E00               	movlw	0
 14233   00410C  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14234   00410E  5014               	movf	(___flmul@a+1)^0,w,c
 14235   004110  020F               	mulwf	___flmul@b^0,c
 14236   004112  CFF3 F026          	movff	prodl,___flmul@temp
 14237   004116  CFF4 F027          	movff	prodh,___flmul@temp+1
 14238   00411A  5026               	movf	___flmul@temp^0,w,c
 14239   00411C  261D               	addwf	___flmul@grs^0,f,c
 14240   00411E  5027               	movf	(___flmul@temp+1)^0,w,c
 14241   004120  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14242   004122  0E00               	movlw	0
 14243   004124  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14244   004126  0E00               	movlw	0
 14245   004128  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14246   00412A  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14247   00412E  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14248   004132  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14249   004136  6A1D               	clrf	___flmul@grs^0,c
 14250   004138  5013               	movf	___flmul@a^0,w,c
 14251   00413A  020F               	mulwf	___flmul@b^0,c
 14252   00413C  CFF3 F026          	movff	prodl,___flmul@temp
 14253   004140  CFF4 F027          	movff	prodh,___flmul@temp+1
 14254   004144  5026               	movf	___flmul@temp^0,w,c
 14255   004146  261D               	addwf	___flmul@grs^0,f,c
 14256   004148  5027               	movf	(___flmul@temp+1)^0,w,c
 14257   00414A  221E               	addwfc	(___flmul@grs+1)^0,f,c
 14258   00414C  0E00               	movlw	0
 14259   00414E  221F               	addwfc	(___flmul@grs+2)^0,f,c
 14260   004150  0E00               	movlw	0
 14261   004152  2220               	addwfc	(___flmul@grs+3)^0,f,c
 14262   004154  5015               	movf	(___flmul@a+2)^0,w,c
 14263   004156  0210               	mulwf	(___flmul@b+1)^0,c
 14264   004158  CFF3 F026          	movff	prodl,___flmul@temp
 14265   00415C  CFF4 F027          	movff	prodh,___flmul@temp+1
 14266   004160  5026               	movf	___flmul@temp^0,w,c
 14267   004162  2622               	addwf	___flmul@prod^0,f,c
 14268   004164  5027               	movf	(___flmul@temp+1)^0,w,c
 14269   004166  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14270   004168  0E00               	movlw	0
 14271   00416A  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14272   00416C  0E00               	movlw	0
 14273   00416E  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14274   004170  5014               	movf	(___flmul@a+1)^0,w,c
 14275   004172  0211               	mulwf	(___flmul@b+2)^0,c
 14276   004174  CFF3 F026          	movff	prodl,___flmul@temp
 14277   004178  CFF4 F027          	movff	prodh,___flmul@temp+1
 14278   00417C  5026               	movf	___flmul@temp^0,w,c
 14279   00417E  2622               	addwf	___flmul@prod^0,f,c
 14280   004180  5027               	movf	(___flmul@temp+1)^0,w,c
 14281   004182  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14282   004184  0E00               	movlw	0
 14283   004186  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14284   004188  0E00               	movlw	0
 14285   00418A  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14286   00418C  5015               	movf	(___flmul@a+2)^0,w,c
 14287   00418E  0211               	mulwf	(___flmul@b+2)^0,c
 14288   004190  CFF3 F026          	movff	prodl,___flmul@temp
 14289   004194  CFF4 F027          	movff	prodh,___flmul@temp+1
 14290   004198  5026               	movf	___flmul@temp^0,w,c
 14291   00419A  6E17               	movwf	??___flmul^0,c
 14292   00419C  5027               	movf	(___flmul@temp+1)^0,w,c
 14293   00419E  6E18               	movwf	(??___flmul+1)^0,c
 14294   0041A0  6A19               	clrf	(??___flmul+2)^0,c
 14295   0041A2  6A1A               	clrf	(??___flmul+3)^0,c
 14296   0041A4  C019  F01A         	movff	??___flmul+2,??___flmul+3
 14297   0041A8  C018  F019         	movff	??___flmul+1,??___flmul+2
 14298   0041AC  C017  F018         	movff	??___flmul,??___flmul+1
 14299   0041B0  6A17               	clrf	??___flmul^0,c
 14300   0041B2  5017               	movf	??___flmul^0,w,c
 14301   0041B4  2622               	addwf	___flmul@prod^0,f,c
 14302   0041B6  5018               	movf	(??___flmul+1)^0,w,c
 14303   0041B8  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14304   0041BA  5019               	movf	(??___flmul+2)^0,w,c
 14305   0041BC  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14306   0041BE  501A               	movf	(??___flmul+3)^0,w,c
 14307   0041C0  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14308   0041C2  C01D  F017         	movff	___flmul@grs,??___flmul
 14309   0041C6  C01E  F018         	movff	___flmul@grs+1,??___flmul+1
 14310   0041CA  C01F  F019         	movff	___flmul@grs+2,??___flmul+2
 14311   0041CE  C020  F01A         	movff	___flmul@grs+3,??___flmul+3
 14312   0041D2  0E19               	movlw	25
 14313   0041D4  EFF1  F020         	goto	u8060
 14314   0041D8                     u8065:
 14315   0041D8  90D8               	bcf	status,0,c
 14316   0041DA  321A               	rrcf	(??___flmul+3)^0,f,c
 14317   0041DC  3219               	rrcf	(??___flmul+2)^0,f,c
 14318   0041DE  3218               	rrcf	(??___flmul+1)^0,f,c
 14319   0041E0  3217               	rrcf	??___flmul^0,f,c
 14320   0041E2                     u8060:
 14321   0041E2  2EE8               	decfsz	wreg,f,c
 14322   0041E4  EFEC  F020         	goto	u8065
 14323   0041E8  5017               	movf	??___flmul^0,w,c
 14324   0041EA  2622               	addwf	___flmul@prod^0,f,c
 14325   0041EC  5018               	movf	(??___flmul+1)^0,w,c
 14326   0041EE  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14327   0041F0  5019               	movf	(??___flmul+2)^0,w,c
 14328   0041F2  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14329   0041F4  501A               	movf	(??___flmul+3)^0,w,c
 14330   0041F6  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14331   0041F8  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
 14332   0041FC  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
 14333   004200  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
 14334   004204  6A1D               	clrf	___flmul@grs^0,c
 14335   004206  501C               	movf	___flmul@aexp^0,w,c
 14336   004208  C021  F017         	movff	___flmul@bexp,??___flmul
 14337   00420C  6A18               	clrf	(??___flmul+1)^0,c
 14338   00420E  2617               	addwf	??___flmul^0,f,c
 14339   004210  0E00               	movlw	0
 14340   004212  2218               	addwfc	(??___flmul+1)^0,f,c
 14341   004214  0E82               	movlw	130
 14342   004216  2417               	addwf	??___flmul^0,w,c
 14343   004218  6E26               	movwf	___flmul@temp^0,c
 14344   00421A  0EFF               	movlw	255
 14345   00421C  2018               	addwfc	(??___flmul+1)^0,w,c
 14346   00421E  6E27               	movwf	(___flmul@temp+1)^0,c
 14347   004220  EF27  F021         	goto	l6424
 14348   004224                     l6418:
 14349   004224  90D8               	bcf	status,0,c
 14350   004226  3622               	rlcf	___flmul@prod^0,f,c
 14351   004228  3623               	rlcf	(___flmul@prod+1)^0,f,c
 14352   00422A  3624               	rlcf	(___flmul@prod+2)^0,f,c
 14353   00422C  3625               	rlcf	(___flmul@prod+3)^0,f,c
 14354   00422E  AE20               	btfss	(___flmul@grs+3)^0,7,c
 14355   004230  EF1C  F021         	goto	u8071
 14356   004234  EF1E  F021         	goto	u8070
 14357   004238                     u8071:
 14358   004238  EF1F  F021         	goto	l894
 14359   00423C                     u8070:
 14360   00423C  8022               	bsf	___flmul@prod^0,0,c
 14361   00423E                     l894:
 14362   00423E  90D8               	bcf	status,0,c
 14363   004240  361D               	rlcf	___flmul@grs^0,f,c
 14364   004242  361E               	rlcf	(___flmul@grs+1)^0,f,c
 14365   004244  361F               	rlcf	(___flmul@grs+2)^0,f,c
 14366   004246  3620               	rlcf	(___flmul@grs+3)^0,f,c
 14367   004248  0626               	decf	___flmul@temp^0,f,c
 14368   00424A  A0D8               	btfss	status,0,c
 14369   00424C  0627               	decf	(___flmul@temp+1)^0,f,c
 14370   00424E                     l6424:
 14371   00424E  AE24               	btfss	(___flmul@prod+2)^0,7,c
 14372   004250  EF2C  F021         	goto	u8081
 14373   004254  EF2E  F021         	goto	u8080
 14374   004258                     u8081:
 14375   004258  EF12  F021         	goto	l6418
 14376   00425C                     u8080:
 14377   00425C  6A1C               	clrf	___flmul@aexp^0,c
 14378   00425E  AE20               	btfss	(___flmul@grs+3)^0,7,c
 14379   004260  EF34  F021         	goto	u8091
 14380   004264  EF36  F021         	goto	u8090
 14381   004268                     u8091:
 14382   004268  EF5A  F021         	goto	l896
 14383   00426C                     u8090:
 14384   00426C  0EFF               	movlw	255
 14385   00426E  141D               	andwf	___flmul@grs^0,w,c
 14386   004270  6E17               	movwf	??___flmul^0,c
 14387   004272  0EFF               	movlw	255
 14388   004274  141E               	andwf	(___flmul@grs+1)^0,w,c
 14389   004276  6E18               	movwf	(??___flmul+1)^0,c
 14390   004278  0EFF               	movlw	255
 14391   00427A  141F               	andwf	(___flmul@grs+2)^0,w,c
 14392   00427C  6E19               	movwf	(??___flmul+2)^0,c
 14393   00427E  0E7F               	movlw	127
 14394   004280  1420               	andwf	(___flmul@grs+3)^0,w,c
 14395   004282  6E1A               	movwf	(??___flmul+3)^0,c
 14396   004284  5017               	movf	??___flmul^0,w,c
 14397   004286  1018               	iorwf	(??___flmul+1)^0,w,c
 14398   004288  1019               	iorwf	(??___flmul+2)^0,w,c
 14399   00428A  101A               	iorwf	(??___flmul+3)^0,w,c
 14400   00428C  B4D8               	btfsc	status,2,c
 14401   00428E  EF4B  F021         	goto	u8101
 14402   004292  EF4D  F021         	goto	u8100
 14403   004296                     u8101:
 14404   004296  EF51  F021         	goto	l897
 14405   00429A                     u8100:
 14406   00429A                     l6428:
 14407   00429A  0E01               	movlw	1
 14408   00429C  6E1C               	movwf	___flmul@aexp^0,c
 14409   00429E  EF5A  F021         	goto	l896
 14410   0042A2                     l897:
 14411   0042A2  A022               	btfss	___flmul@prod^0,0,c
 14412   0042A4  EF56  F021         	goto	u8111
 14413   0042A8  EF58  F021         	goto	u8110
 14414   0042AC                     u8111:
 14415   0042AC  EF5A  F021         	goto	l896
 14416   0042B0                     u8110:
 14417   0042B0  EF4D  F021         	goto	l6428
 14418   0042B4                     l896:
 14419   0042B4  501C               	movf	___flmul@aexp^0,w,c
 14420   0042B6  B4D8               	btfsc	status,2,c
 14421   0042B8  EF60  F021         	goto	u8121
 14422   0042BC  EF62  F021         	goto	u8120
 14423   0042C0                     u8121:
 14424   0042C0  EF86  F021         	goto	l6440
 14425   0042C4                     u8120:
 14426   0042C4  0E01               	movlw	1
 14427   0042C6  2622               	addwf	___flmul@prod^0,f,c
 14428   0042C8  0E00               	movlw	0
 14429   0042CA  2223               	addwfc	(___flmul@prod+1)^0,f,c
 14430   0042CC  2224               	addwfc	(___flmul@prod+2)^0,f,c
 14431   0042CE  2225               	addwfc	(___flmul@prod+3)^0,f,c
 14432   0042D0  A025               	btfss	(___flmul@prod+3)^0,0,c
 14433   0042D2  EF6D  F021         	goto	u8131
 14434   0042D6  EF6F  F021         	goto	u8130
 14435   0042DA                     u8131:
 14436   0042DA  EF86  F021         	goto	l6440
 14437   0042DE                     u8130:
 14438   0042DE  C022  F017         	movff	___flmul@prod,??___flmul
 14439   0042E2  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 14440   0042E6  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 14441   0042EA  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 14442   0042EE  341A               	rlcf	(??___flmul+3)^0,w,c
 14443   0042F0  321A               	rrcf	(??___flmul+3)^0,f,c
 14444   0042F2  3219               	rrcf	(??___flmul+2)^0,f,c
 14445   0042F4  3218               	rrcf	(??___flmul+1)^0,f,c
 14446   0042F6  3217               	rrcf	??___flmul^0,f,c
 14447   0042F8  C017  F022         	movff	??___flmul,___flmul@prod
 14448   0042FC  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 14449   004300  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 14450   004304  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 14451   004308  4A26               	infsnz	___flmul@temp^0,f,c
 14452   00430A  2A27               	incf	(___flmul@temp+1)^0,f,c
 14453   00430C                     l6440:
 14454   00430C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 14455   00430E  EF91  F021         	goto	u8141
 14456   004312  5027               	movf	(___flmul@temp+1)^0,w,c
 14457   004314  E108               	bnz	u8140
 14458   004316  2826               	incf	___flmul@temp^0,w,c
 14459   004318  A0D8               	btfss	status,0,c
 14460   00431A  EF91  F021         	goto	u8141
 14461   00431E  EF93  F021         	goto	u8140
 14462   004322                     u8141:
 14463   004322  EF9D  F021         	goto	l6444
 14464   004326                     u8140:
 14465   004326  0E00               	movlw	0
 14466   004328  6E22               	movwf	___flmul@prod^0,c
 14467   00432A  0E00               	movlw	0
 14468   00432C  6E23               	movwf	(___flmul@prod+1)^0,c
 14469   00432E  0E80               	movlw	128
 14470   004330  6E24               	movwf	(___flmul@prod+2)^0,c
 14471   004332  0E7F               	movlw	127
 14472   004334  6E25               	movwf	(___flmul@prod+3)^0,c
 14473   004336  EFCA  F021         	goto	l6458
 14474   00433A                     l6444:
 14475   00433A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 14476   00433C  EFAA  F021         	goto	u8150
 14477   004340  5027               	movf	(___flmul@temp+1)^0,w,c
 14478   004342  E106               	bnz	u8151
 14479   004344  0426               	decf	___flmul@temp^0,w,c
 14480   004346  B0D8               	btfsc	status,0,c
 14481   004348  EFA8  F021         	goto	u8151
 14482   00434C  EFAA  F021         	goto	u8150
 14483   004350                     u8151:
 14484   004350  EFB5  F021         	goto	l904
 14485   004354                     u8150:
 14486   004354  0E00               	movlw	0
 14487   004356  6E22               	movwf	___flmul@prod^0,c
 14488   004358  0E00               	movlw	0
 14489   00435A  6E23               	movwf	(___flmul@prod+1)^0,c
 14490   00435C  0E00               	movlw	0
 14491   00435E  6E24               	movwf	(___flmul@prod+2)^0,c
 14492   004360  0E00               	movlw	0
 14493   004362  6E25               	movwf	(___flmul@prod+3)^0,c
 14494   004364  6A1B               	clrf	___flmul@sign^0,c
 14495   004366  EFCA  F021         	goto	l6458
 14496   00436A                     l904:
 14497   00436A  C026  F021         	movff	___flmul@temp,___flmul@bexp
 14498   00436E  0EFF               	movlw	255
 14499   004370  1622               	andwf	___flmul@prod^0,f,c
 14500   004372  0EFF               	movlw	255
 14501   004374  1623               	andwf	(___flmul@prod+1)^0,f,c
 14502   004376  0E7F               	movlw	127
 14503   004378  1624               	andwf	(___flmul@prod+2)^0,f,c
 14504   00437A  0E00               	movlw	0
 14505   00437C  1625               	andwf	(___flmul@prod+3)^0,f,c
 14506   00437E  A021               	btfss	___flmul@bexp^0,0,c
 14507   004380  EFC4  F021         	goto	u8161
 14508   004384  EFC6  F021         	goto	u8160
 14509   004388                     u8161:
 14510   004388  EFC7  F021         	goto	l6456
 14511   00438C                     u8160:
 14512   00438C  8E24               	bsf	(___flmul@prod+2)^0,7,c
 14513   00438E                     l6456:
 14514   00438E  90D8               	bcf	status,0,c
 14515   004390  3021               	rrcf	___flmul@bexp^0,w,c
 14516   004392  6E25               	movwf	(___flmul@prod+3)^0,c
 14517   004394                     l6458:
 14518   004394  501B               	movf	___flmul@sign^0,w,c
 14519   004396  1225               	iorwf	(___flmul@prod+3)^0,f,c
 14520   004398  C022  F00F         	movff	___flmul@prod,?___flmul
 14521   00439C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 14522   0043A0  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 14523   0043A4  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 14524   0043A8                     l891:
 14525   0043A8  0012               	return		;funcret
 14526   0043AA                     __end_of___flmul:
 14527                           	callstack 0
 14528                           
 14529 ;; *************** function ___flge *****************
 14530 ;; Defined at:
 14531 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;  ff1             4    0[BANK0 ] unsigned char 
 14534 ;;  ff2             4    4[BANK0 ] unsigned char 
 14535 ;; Auto vars:     Size  Location     Type
 14536 ;;		None
 14537 ;; Return value:  Size  Location     Type
 14538 ;;		None               void
 14539 ;; Registers used:
 14540 ;;		wreg, status,2, status,0
 14541 ;; Tracked objects:
 14542 ;;		On entry : 0/0
 14543 ;;		On exit  : 0/0
 14544 ;;		Unchanged: 0/0
 14545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14546 ;;      Params:         0       8       0       0       0       0       0       0       0
 14547 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14548 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14549 ;;      Totals:         4       8       0       0       0       0       0       0       0
 14550 ;;Total ram usage:       12 bytes
 14551 ;; Hardware stack levels used: 1
 14552 ;; Hardware stack levels required when called: 1
 14553 ;; This function calls:
 14554 ;;		Nothing
 14555 ;; This function is called by:
 14556 ;;		_Handle_Fire_Events
 14557 ;;		_Read_Sensors
 14558 ;;		_Update_Actuators
 14559 ;;		_efgtoa
 14560 ;;		_powf
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           
 14564                           	psect	text35
 14565   005EAE                     __ptext35:
 14566                           	callstack 0
 14567   005EAE                     ___flge:
 14568                           	callstack 28
 14569   005EAE  0E00               	movlw	0
 14570   005EB0  0100               	movlb	0	; () banked
 14571   005EB2  1560               	andwf	___flge@ff1& (0+255),w,b
 14572   005EB4  6E59               	movwf	??___flge^0,c
 14573   005EB6  0E00               	movlw	0
 14574   005EB8  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
 14575   005EBA  6E5A               	movwf	(??___flge+1)^0,c
 14576   005EBC  0E80               	movlw	128
 14577   005EBE  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
 14578   005EC0  6E5B               	movwf	(??___flge+2)^0,c
 14579   005EC2  0E7F               	movlw	127
 14580   005EC4  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
 14581   005EC6  6E5C               	movwf	(??___flge+3)^0,c
 14582   005EC8  5059               	movf	??___flge^0,w,c
 14583   005ECA  105A               	iorwf	(??___flge+1)^0,w,c
 14584   005ECC  105B               	iorwf	(??___flge+2)^0,w,c
 14585   005ECE  105C               	iorwf	(??___flge+3)^0,w,c
 14586   005ED0  A4D8               	btfss	status,2,c
 14587   005ED2  EF6D  F02F         	goto	u8201
 14588   005ED6  EF6F  F02F         	goto	u8200
 14589   005EDA                     u8201:
 14590   005EDA  EF77  F02F         	goto	l6490
 14591   005EDE                     u8200:
 14592   005EDE                     
 14593                           ; BSR set to: 0
 14594   005EDE  0E00               	movlw	0
 14595   005EE0  6F60               	movwf	___flge@ff1& (0+255),b
 14596   005EE2  0E00               	movlw	0
 14597   005EE4  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 14598   005EE6  0E00               	movlw	0
 14599   005EE8  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 14600   005EEA  0E00               	movlw	0
 14601   005EEC  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 14602   005EEE                     l6490:
 14603                           
 14604                           ; BSR set to: 0
 14605   005EEE  0E00               	movlw	0
 14606   005EF0  1564               	andwf	___flge@ff2& (0+255),w,b
 14607   005EF2  6E59               	movwf	??___flge^0,c
 14608   005EF4  0E00               	movlw	0
 14609   005EF6  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
 14610   005EF8  6E5A               	movwf	(??___flge+1)^0,c
 14611   005EFA  0E80               	movlw	128
 14612   005EFC  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
 14613   005EFE  6E5B               	movwf	(??___flge+2)^0,c
 14614   005F00  0E7F               	movlw	127
 14615   005F02  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
 14616   005F04  6E5C               	movwf	(??___flge+3)^0,c
 14617   005F06  5059               	movf	??___flge^0,w,c
 14618   005F08  105A               	iorwf	(??___flge+1)^0,w,c
 14619   005F0A  105B               	iorwf	(??___flge+2)^0,w,c
 14620   005F0C  105C               	iorwf	(??___flge+3)^0,w,c
 14621   005F0E  A4D8               	btfss	status,2,c
 14622   005F10  EF8C  F02F         	goto	u8211
 14623   005F14  EF8E  F02F         	goto	u8210
 14624   005F18                     u8211:
 14625   005F18  EF96  F02F         	goto	l6494
 14626   005F1C                     u8210:
 14627   005F1C                     
 14628                           ; BSR set to: 0
 14629   005F1C  0E00               	movlw	0
 14630   005F1E  6F64               	movwf	___flge@ff2& (0+255),b
 14631   005F20  0E00               	movlw	0
 14632   005F22  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 14633   005F24  0E00               	movlw	0
 14634   005F26  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 14635   005F28  0E00               	movlw	0
 14636   005F2A  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 14637   005F2C                     l6494:
 14638                           
 14639                           ; BSR set to: 0
 14640   005F2C  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
 14641   005F2E  EF9B  F02F         	goto	u8221
 14642   005F32  EF9D  F02F         	goto	u8220
 14643   005F36                     u8221:
 14644   005F36  EFA6  F02F         	goto	l6498
 14645   005F3A                     u8220:
 14646   005F3A                     
 14647                           ; BSR set to: 0
 14648   005F3A  6D60               	negf	___flge@ff1& (0+255),b
 14649   005F3C  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
 14650   005F3E  B0D8               	btfsc	status,0,c
 14651   005F40  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
 14652   005F42  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
 14653   005F44  B0D8               	btfsc	status,0,c
 14654   005F46  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
 14655   005F48  0E80               	movlw	128
 14656   005F4A  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
 14657   005F4C                     l6498:
 14658                           
 14659                           ; BSR set to: 0
 14660   005F4C  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
 14661   005F4E  EFAB  F02F         	goto	u8231
 14662   005F52  EFAD  F02F         	goto	u8230
 14663   005F56                     u8231:
 14664   005F56  EFB6  F02F         	goto	l538
 14665   005F5A                     u8230:
 14666   005F5A                     
 14667                           ; BSR set to: 0
 14668   005F5A  6D64               	negf	___flge@ff2& (0+255),b
 14669   005F5C  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
 14670   005F5E  B0D8               	btfsc	status,0,c
 14671   005F60  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
 14672   005F62  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
 14673   005F64  B0D8               	btfsc	status,0,c
 14674   005F66  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
 14675   005F68  0E80               	movlw	128
 14676   005F6A  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
 14677   005F6C                     l538:
 14678                           
 14679                           ; BSR set to: 0
 14680   005F6C  0E00               	movlw	0
 14681   005F6E  1B60               	xorwf	___flge@ff1& (0+255),f,b
 14682   005F70  0E00               	movlw	0
 14683   005F72  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
 14684   005F74  0E00               	movlw	0
 14685   005F76  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
 14686   005F78  0E80               	movlw	128
 14687   005F7A  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
 14688   005F7C  0E00               	movlw	0
 14689   005F7E  1B64               	xorwf	___flge@ff2& (0+255),f,b
 14690   005F80  0E00               	movlw	0
 14691   005F82  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
 14692   005F84  0E00               	movlw	0
 14693   005F86  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
 14694   005F88  0E80               	movlw	128
 14695   005F8A  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
 14696   005F8C  5164               	movf	___flge@ff2& (0+255),w,b
 14697   005F8E  5D60               	subwf	___flge@ff1& (0+255),w,b
 14698   005F90  5165               	movf	(___flge@ff2+1)& (0+255),w,b
 14699   005F92  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
 14700   005F94  5166               	movf	(___flge@ff2+2)& (0+255),w,b
 14701   005F96  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
 14702   005F98  5167               	movf	(___flge@ff2+3)& (0+255),w,b
 14703   005F9A  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
 14704   005F9C  B0D8               	btfsc	status,0,c
 14705   005F9E  EFD3  F02F         	goto	u8241
 14706   005FA2  EFD5  F02F         	goto	u8240
 14707   005FA6                     u8241:
 14708   005FA6  EFD8  F02F         	goto	l6504
 14709   005FAA                     u8240:
 14710   005FAA                     
 14711                           ; BSR set to: 0
 14712   005FAA  90D8               	bcf	status,0,c
 14713   005FAC  EFD9  F02F         	goto	l543
 14714   005FB0                     l6504:
 14715                           
 14716                           ; BSR set to: 0
 14717   005FB0  80D8               	bsf	status,0,c
 14718   005FB2                     l543:
 14719                           
 14720                           ; BSR set to: 0
 14721   005FB2  0012               	return		;funcret
 14722   005FB4                     __end_of___flge:
 14723                           	callstack 0
 14724                           
 14725 ;; *************** function ___fleq *****************
 14726 ;; Defined at:
 14727 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;  ff1             4    0[COMRAM] unsigned char 
 14730 ;;  ff2             4    4[COMRAM] unsigned char 
 14731 ;; Auto vars:     Size  Location     Type
 14732 ;;		None
 14733 ;; Return value:  Size  Location     Type
 14734 ;;		None               void
 14735 ;; Registers used:
 14736 ;;		wreg, status,2, status,0
 14737 ;; Tracked objects:
 14738 ;;		On entry : 0/0
 14739 ;;		On exit  : 0/0
 14740 ;;		Unchanged: 0/0
 14741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14742 ;;      Params:         8       0       0       0       0       0       0       0       0
 14743 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14744 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14745 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14746 ;;Total ram usage:       12 bytes
 14747 ;; Hardware stack levels used: 1
 14748 ;; Hardware stack levels required when called: 1
 14749 ;; This function calls:
 14750 ;;		Nothing
 14751 ;; This function is called by:
 14752 ;;		_efgtoa
 14753 ;; This function uses a non-reentrant model
 14754 ;;
 14755                           
 14756                           	psect	text36
 14757   006780                     __ptext36:
 14758                           	callstack 0
 14759   006780                     ___fleq:
 14760                           	callstack 24
 14761   006780  0E00               	movlw	0
 14762   006782  1401               	andwf	___fleq@ff1^0,w,c
 14763   006784  6E09               	movwf	??___fleq^0,c
 14764   006786  0E00               	movlw	0
 14765   006788  1402               	andwf	(___fleq@ff1+1)^0,w,c
 14766   00678A  6E0A               	movwf	(??___fleq+1)^0,c
 14767   00678C  0E80               	movlw	128
 14768   00678E  1403               	andwf	(___fleq@ff1+2)^0,w,c
 14769   006790  6E0B               	movwf	(??___fleq+2)^0,c
 14770   006792  0E7F               	movlw	127
 14771   006794  1404               	andwf	(___fleq@ff1+3)^0,w,c
 14772   006796  6E0C               	movwf	(??___fleq+3)^0,c
 14773   006798  5009               	movf	??___fleq^0,w,c
 14774   00679A  100A               	iorwf	(??___fleq+1)^0,w,c
 14775   00679C  100B               	iorwf	(??___fleq+2)^0,w,c
 14776   00679E  100C               	iorwf	(??___fleq+3)^0,w,c
 14777   0067A0  A4D8               	btfss	status,2,c
 14778   0067A2  EFD5  F033         	goto	u8171
 14779   0067A6  EFD7  F033         	goto	u8170
 14780   0067AA                     u8171:
 14781   0067AA  EFDF  F033         	goto	l6474
 14782   0067AE                     u8170:
 14783   0067AE  0E00               	movlw	0
 14784   0067B0  6E01               	movwf	___fleq@ff1^0,c
 14785   0067B2  0E00               	movlw	0
 14786   0067B4  6E02               	movwf	(___fleq@ff1+1)^0,c
 14787   0067B6  0E00               	movlw	0
 14788   0067B8  6E03               	movwf	(___fleq@ff1+2)^0,c
 14789   0067BA  0E00               	movlw	0
 14790   0067BC  6E04               	movwf	(___fleq@ff1+3)^0,c
 14791   0067BE                     l6474:
 14792   0067BE  0E00               	movlw	0
 14793   0067C0  1405               	andwf	___fleq@ff2^0,w,c
 14794   0067C2  6E09               	movwf	??___fleq^0,c
 14795   0067C4  0E00               	movlw	0
 14796   0067C6  1406               	andwf	(___fleq@ff2+1)^0,w,c
 14797   0067C8  6E0A               	movwf	(??___fleq+1)^0,c
 14798   0067CA  0E80               	movlw	128
 14799   0067CC  1407               	andwf	(___fleq@ff2+2)^0,w,c
 14800   0067CE  6E0B               	movwf	(??___fleq+2)^0,c
 14801   0067D0  0E7F               	movlw	127
 14802   0067D2  1408               	andwf	(___fleq@ff2+3)^0,w,c
 14803   0067D4  6E0C               	movwf	(??___fleq+3)^0,c
 14804   0067D6  5009               	movf	??___fleq^0,w,c
 14805   0067D8  100A               	iorwf	(??___fleq+1)^0,w,c
 14806   0067DA  100B               	iorwf	(??___fleq+2)^0,w,c
 14807   0067DC  100C               	iorwf	(??___fleq+3)^0,w,c
 14808   0067DE  A4D8               	btfss	status,2,c
 14809   0067E0  EFF4  F033         	goto	u8181
 14810   0067E4  EFF6  F033         	goto	u8180
 14811   0067E8                     u8181:
 14812   0067E8  EFFE  F033         	goto	l6478
 14813   0067EC                     u8180:
 14814   0067EC  0E00               	movlw	0
 14815   0067EE  6E05               	movwf	___fleq@ff2^0,c
 14816   0067F0  0E00               	movlw	0
 14817   0067F2  6E06               	movwf	(___fleq@ff2+1)^0,c
 14818   0067F4  0E00               	movlw	0
 14819   0067F6  6E07               	movwf	(___fleq@ff2+2)^0,c
 14820   0067F8  0E00               	movlw	0
 14821   0067FA  6E08               	movwf	(___fleq@ff2+3)^0,c
 14822   0067FC                     l6478:
 14823   0067FC  5005               	movf	___fleq@ff2^0,w,c
 14824   0067FE  1801               	xorwf	___fleq@ff1^0,w,c
 14825   006800  E10F               	bnz	u8190
 14826   006802  5006               	movf	(___fleq@ff2+1)^0,w,c
 14827   006804  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 14828   006806  E10C               	bnz	u8190
 14829   006808  5007               	movf	(___fleq@ff2+2)^0,w,c
 14830   00680A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 14831   00680C  E109               	bnz	u8190
 14832   00680E  5008               	movf	(___fleq@ff2+3)^0,w,c
 14833   006810  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 14834   006812  B4D8               	btfsc	status,2,c
 14835   006814  EF0E  F034         	goto	u8191
 14836   006818  EF10  F034         	goto	u8190
 14837   00681C                     u8191:
 14838   00681C  EF13  F034         	goto	l6482
 14839   006820                     u8190:
 14840   006820  90D8               	bcf	status,0,c
 14841   006822  EF14  F034         	goto	l532
 14842   006826                     l6482:
 14843   006826  80D8               	bsf	status,0,c
 14844   006828                     l532:
 14845   006828  0012               	return		;funcret
 14846   00682A                     __end_of___fleq:
 14847                           	callstack 0
 14848                           
 14849 ;; *************** function ___fldiv *****************
 14850 ;; Defined at:
 14851 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 14852 ;; Parameters:    Size  Location     Type
 14853 ;;  b               4   39[COMRAM] unsigned char 
 14854 ;;  a               4   43[COMRAM] unsigned char 
 14855 ;; Auto vars:     Size  Location     Type
 14856 ;;  grs             4   58[COMRAM] unsigned long 
 14857 ;;  rem             4   51[COMRAM] unsigned long 
 14858 ;;  new_exp         2   56[COMRAM] short 
 14859 ;;  aexp            1   63[COMRAM] unsigned char 
 14860 ;;  bexp            1   62[COMRAM] unsigned char 
 14861 ;;  sign            1   55[COMRAM] unsigned char 
 14862 ;; Return value:  Size  Location     Type
 14863 ;;                  4   39[COMRAM] unsigned char 
 14864 ;; Registers used:
 14865 ;;		wreg, status,2, status,0
 14866 ;; Tracked objects:
 14867 ;;		On entry : 0/0
 14868 ;;		On exit  : 0/0
 14869 ;;		Unchanged: 0/0
 14870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14871 ;;      Params:         8       0       0       0       0       0       0       0       0
 14872 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14873 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14874 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14875 ;;Total ram usage:       25 bytes
 14876 ;; Hardware stack levels used: 1
 14877 ;; Hardware stack levels required when called: 1
 14878 ;; This function calls:
 14879 ;;		Nothing
 14880 ;; This function is called by:
 14881 ;;		_main
 14882 ;;		_Read_Sensors
 14883 ;;		_Apply_Filter
 14884 ;;		_efgtoa
 14885 ;;		_powf
 14886 ;; This function uses a non-reentrant model
 14887 ;;
 14888                           
 14889                           	psect	text37
 14890   004788                     __ptext37:
 14891                           	callstack 0
 14892   004788                     ___fldiv:
 14893                           	callstack 29
 14894   004788  502B               	movf	(___fldiv@b+3)^0,w,c
 14895   00478A  0B80               	andlw	128
 14896   00478C  6E38               	movwf	___fldiv@sign^0,c
 14897   00478E  502B               	movf	(___fldiv@b+3)^0,w,c
 14898   004790  242B               	addwf	(___fldiv@b+3)^0,w,c
 14899   004792  6E3F               	movwf	___fldiv@bexp^0,c
 14900   004794  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 14901   004796  EFCF  F023         	goto	u7751
 14902   00479A  EFD1  F023         	goto	u7750
 14903   00479E                     u7751:
 14904   00479E  EFD2  F023         	goto	l6206
 14905   0047A2                     u7750:
 14906   0047A2  803F               	bsf	___fldiv@bexp^0,0,c
 14907   0047A4                     l6206:
 14908   0047A4  503F               	movf	___fldiv@bexp^0,w,c
 14909   0047A6  B4D8               	btfsc	status,2,c
 14910   0047A8  EFD8  F023         	goto	u7761
 14911   0047AC  EFDA  F023         	goto	u7760
 14912   0047B0                     u7761:
 14913   0047B0  EFEE  F023         	goto	l6216
 14914   0047B4                     u7760:
 14915   0047B4  283F               	incf	___fldiv@bexp^0,w,c
 14916   0047B6  A4D8               	btfss	status,2,c
 14917   0047B8  EFE0  F023         	goto	u7771
 14918   0047BC  EFE2  F023         	goto	u7770
 14919   0047C0                     u7771:
 14920   0047C0  EFEA  F023         	goto	l6212
 14921   0047C4                     u7770:
 14922   0047C4  0E00               	movlw	0
 14923   0047C6  6E28               	movwf	___fldiv@b^0,c
 14924   0047C8  0E00               	movlw	0
 14925   0047CA  6E29               	movwf	(___fldiv@b+1)^0,c
 14926   0047CC  0E00               	movlw	0
 14927   0047CE  6E2A               	movwf	(___fldiv@b+2)^0,c
 14928   0047D0  0E00               	movlw	0
 14929   0047D2  6E2B               	movwf	(___fldiv@b+3)^0,c
 14930   0047D4                     l6212:
 14931   0047D4  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 14932   0047D6  6A2B               	clrf	(___fldiv@b+3)^0,c
 14933   0047D8  EFF6  F023         	goto	l6218
 14934   0047DC                     l6216:
 14935   0047DC  0E00               	movlw	0
 14936   0047DE  6E28               	movwf	___fldiv@b^0,c
 14937   0047E0  0E00               	movlw	0
 14938   0047E2  6E29               	movwf	(___fldiv@b+1)^0,c
 14939   0047E4  0E00               	movlw	0
 14940   0047E6  6E2A               	movwf	(___fldiv@b+2)^0,c
 14941   0047E8  0E00               	movlw	0
 14942   0047EA  6E2B               	movwf	(___fldiv@b+3)^0,c
 14943   0047EC                     l6218:
 14944   0047EC  502F               	movf	(___fldiv@a+3)^0,w,c
 14945   0047EE  0B80               	andlw	128
 14946   0047F0  1A38               	xorwf	___fldiv@sign^0,f,c
 14947   0047F2  502F               	movf	(___fldiv@a+3)^0,w,c
 14948   0047F4  242F               	addwf	(___fldiv@a+3)^0,w,c
 14949   0047F6  6E40               	movwf	___fldiv@aexp^0,c
 14950   0047F8  AE2E               	btfss	(___fldiv@a+2)^0,7,c
 14951   0047FA  EF01  F024         	goto	u7781
 14952   0047FE  EF03  F024         	goto	u7780
 14953   004802                     u7781:
 14954   004802  EF04  F024         	goto	l6226
 14955   004806                     u7780:
 14956   004806  8040               	bsf	___fldiv@aexp^0,0,c
 14957   004808                     l6226:
 14958   004808  5040               	movf	___fldiv@aexp^0,w,c
 14959   00480A  B4D8               	btfsc	status,2,c
 14960   00480C  EF0A  F024         	goto	u7791
 14961   004810  EF0C  F024         	goto	u7790
 14962   004814                     u7791:
 14963   004814  EF20  F024         	goto	l6236
 14964   004818                     u7790:
 14965   004818  2840               	incf	___fldiv@aexp^0,w,c
 14966   00481A  A4D8               	btfss	status,2,c
 14967   00481C  EF12  F024         	goto	u7801
 14968   004820  EF14  F024         	goto	u7800
 14969   004824                     u7801:
 14970   004824  EF1C  F024         	goto	l6232
 14971   004828                     u7800:
 14972   004828  0E00               	movlw	0
 14973   00482A  6E2C               	movwf	___fldiv@a^0,c
 14974   00482C  0E00               	movlw	0
 14975   00482E  6E2D               	movwf	(___fldiv@a+1)^0,c
 14976   004830  0E00               	movlw	0
 14977   004832  6E2E               	movwf	(___fldiv@a+2)^0,c
 14978   004834  0E00               	movlw	0
 14979   004836  6E2F               	movwf	(___fldiv@a+3)^0,c
 14980   004838                     l6232:
 14981   004838  8E2E               	bsf	(___fldiv@a+2)^0,7,c
 14982   00483A  6A2F               	clrf	(___fldiv@a+3)^0,c
 14983   00483C  EF28  F024         	goto	l6238
 14984   004840                     l6236:
 14985   004840  0E00               	movlw	0
 14986   004842  6E2C               	movwf	___fldiv@a^0,c
 14987   004844  0E00               	movlw	0
 14988   004846  6E2D               	movwf	(___fldiv@a+1)^0,c
 14989   004848  0E00               	movlw	0
 14990   00484A  6E2E               	movwf	(___fldiv@a+2)^0,c
 14991   00484C  0E00               	movlw	0
 14992   00484E  6E2F               	movwf	(___fldiv@a+3)^0,c
 14993   004850                     l6238:
 14994   004850  502C               	movf	___fldiv@a^0,w,c
 14995   004852  102D               	iorwf	(___fldiv@a+1)^0,w,c
 14996   004854  102E               	iorwf	(___fldiv@a+2)^0,w,c
 14997   004856  102F               	iorwf	(___fldiv@a+3)^0,w,c
 14998   004858  A4D8               	btfss	status,2,c
 14999   00485A  EF31  F024         	goto	u7811
 15000   00485E  EF33  F024         	goto	u7810
 15001   004862                     u7811:
 15002   004862  EF4B  F024         	goto	l6250
 15003   004866                     u7810:
 15004   004866  0E00               	movlw	0
 15005   004868  6E28               	movwf	___fldiv@b^0,c
 15006   00486A  0E00               	movlw	0
 15007   00486C  6E29               	movwf	(___fldiv@b+1)^0,c
 15008   00486E  0E00               	movlw	0
 15009   004870  6E2A               	movwf	(___fldiv@b+2)^0,c
 15010   004872  0E00               	movlw	0
 15011   004874  6E2B               	movwf	(___fldiv@b+3)^0,c
 15012   004876  0E80               	movlw	128
 15013   004878  122A               	iorwf	(___fldiv@b+2)^0,f,c
 15014   00487A  0E7F               	movlw	127
 15015   00487C  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15016   00487E                     l6244:
 15017   00487E  5038               	movf	___fldiv@sign^0,w,c
 15018   004880  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15019   004882  C028  F028         	movff	___fldiv@b,?___fldiv
 15020   004886  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
 15021   00488A  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
 15022   00488E  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
 15023   004892  EF8B  F025         	goto	l855
 15024   004896                     l6250:
 15025   004896  503F               	movf	___fldiv@bexp^0,w,c
 15026   004898  A4D8               	btfss	status,2,c
 15027   00489A  EF51  F024         	goto	u7821
 15028   00489E  EF53  F024         	goto	u7820
 15029   0048A2                     u7821:
 15030   0048A2  EF5D  F024         	goto	l6258
 15031   0048A6                     u7820:
 15032   0048A6  0E00               	movlw	0
 15033   0048A8  6E28               	movwf	?___fldiv^0,c
 15034   0048AA  0E00               	movlw	0
 15035   0048AC  6E29               	movwf	(?___fldiv+1)^0,c
 15036   0048AE  0E00               	movlw	0
 15037   0048B0  6E2A               	movwf	(?___fldiv+2)^0,c
 15038   0048B2  0E00               	movlw	0
 15039   0048B4  6E2B               	movwf	(?___fldiv+3)^0,c
 15040   0048B6  EF8B  F025         	goto	l855
 15041   0048BA                     l6258:
 15042   0048BA  5040               	movf	___fldiv@aexp^0,w,c
 15043   0048BC  C03F  F030         	movff	___fldiv@bexp,??___fldiv
 15044   0048C0  6A31               	clrf	(??___fldiv+1)^0,c
 15045   0048C2  5E30               	subwf	??___fldiv^0,f,c
 15046   0048C4  0E00               	movlw	0
 15047   0048C6  5A31               	subwfb	(??___fldiv+1)^0,f,c
 15048   0048C8  0E7F               	movlw	127
 15049   0048CA  2430               	addwf	??___fldiv^0,w,c
 15050   0048CC  6E39               	movwf	___fldiv@new_exp^0,c
 15051   0048CE  0E00               	movlw	0
 15052   0048D0  2031               	addwfc	(??___fldiv+1)^0,w,c
 15053   0048D2  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15054   0048D4  C028  F034         	movff	___fldiv@b,___fldiv@rem
 15055   0048D8  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
 15056   0048DC  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
 15057   0048E0  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
 15058   0048E4  0E00               	movlw	0
 15059   0048E6  6E28               	movwf	___fldiv@b^0,c
 15060   0048E8  0E00               	movlw	0
 15061   0048EA  6E29               	movwf	(___fldiv@b+1)^0,c
 15062   0048EC  0E00               	movlw	0
 15063   0048EE  6E2A               	movwf	(___fldiv@b+2)^0,c
 15064   0048F0  0E00               	movlw	0
 15065   0048F2  6E2B               	movwf	(___fldiv@b+3)^0,c
 15066   0048F4  0E00               	movlw	0
 15067   0048F6  6E3B               	movwf	___fldiv@grs^0,c
 15068   0048F8  0E00               	movlw	0
 15069   0048FA  6E3C               	movwf	(___fldiv@grs+1)^0,c
 15070   0048FC  0E00               	movlw	0
 15071   0048FE  6E3D               	movwf	(___fldiv@grs+2)^0,c
 15072   004900  0E00               	movlw	0
 15073   004902  6E3E               	movwf	(___fldiv@grs+3)^0,c
 15074   004904  6A40               	clrf	___fldiv@aexp^0,c
 15075   004906  EFBD  F024         	goto	l857
 15076   00490A                     l6268:
 15077   00490A  5040               	movf	___fldiv@aexp^0,w,c
 15078   00490C  B4D8               	btfsc	status,2,c
 15079   00490E  EF8B  F024         	goto	u7831
 15080   004912  EF8D  F024         	goto	u7830
 15081   004916                     u7831:
 15082   004916  EFA4  F024         	goto	l6276
 15083   00491A                     u7830:
 15084   00491A  90D8               	bcf	status,0,c
 15085   00491C  3634               	rlcf	___fldiv@rem^0,f,c
 15086   00491E  3635               	rlcf	(___fldiv@rem+1)^0,f,c
 15087   004920  3636               	rlcf	(___fldiv@rem+2)^0,f,c
 15088   004922  3637               	rlcf	(___fldiv@rem+3)^0,f,c
 15089   004924  90D8               	bcf	status,0,c
 15090   004926  3628               	rlcf	___fldiv@b^0,f,c
 15091   004928  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15092   00492A  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15093   00492C  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15094   00492E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15095   004930  EF9C  F024         	goto	u7841
 15096   004934  EF9E  F024         	goto	u7840
 15097   004938                     u7841:
 15098   004938  EF9F  F024         	goto	l860
 15099   00493C                     u7840:
 15100   00493C  8028               	bsf	___fldiv@b^0,0,c
 15101   00493E                     l860:
 15102   00493E  90D8               	bcf	status,0,c
 15103   004940  363B               	rlcf	___fldiv@grs^0,f,c
 15104   004942  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15105   004944  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15106   004946  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15107   004948                     l6276:
 15108   004948  502C               	movf	___fldiv@a^0,w,c
 15109   00494A  5C34               	subwf	___fldiv@rem^0,w,c
 15110   00494C  502D               	movf	(___fldiv@a+1)^0,w,c
 15111   00494E  5835               	subwfb	(___fldiv@rem+1)^0,w,c
 15112   004950  502E               	movf	(___fldiv@a+2)^0,w,c
 15113   004952  5836               	subwfb	(___fldiv@rem+2)^0,w,c
 15114   004954  502F               	movf	(___fldiv@a+3)^0,w,c
 15115   004956  5837               	subwfb	(___fldiv@rem+3)^0,w,c
 15116   004958  A0D8               	btfss	status,0,c
 15117   00495A  EFB1  F024         	goto	u7851
 15118   00495E  EFB3  F024         	goto	u7850
 15119   004962                     u7851:
 15120   004962  EFBC  F024         	goto	l6282
 15121   004966                     u7850:
 15122   004966  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
 15123   004968  502C               	movf	___fldiv@a^0,w,c
 15124   00496A  5E34               	subwf	___fldiv@rem^0,f,c
 15125   00496C  502D               	movf	(___fldiv@a+1)^0,w,c
 15126   00496E  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
 15127   004970  502E               	movf	(___fldiv@a+2)^0,w,c
 15128   004972  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
 15129   004974  502F               	movf	(___fldiv@a+3)^0,w,c
 15130   004976  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
 15131   004978                     l6282:
 15132   004978  2A40               	incf	___fldiv@aexp^0,f,c
 15133   00497A                     l857:
 15134   00497A  0E19               	movlw	25
 15135   00497C  6440               	cpfsgt	___fldiv@aexp^0,c
 15136   00497E  EFC3  F024         	goto	u7861
 15137   004982  EFC5  F024         	goto	u7860
 15138   004986                     u7861:
 15139   004986  EF85  F024         	goto	l6268
 15140   00498A                     u7860:
 15141   00498A  5034               	movf	___fldiv@rem^0,w,c
 15142   00498C  1035               	iorwf	(___fldiv@rem+1)^0,w,c
 15143   00498E  1036               	iorwf	(___fldiv@rem+2)^0,w,c
 15144   004990  1037               	iorwf	(___fldiv@rem+3)^0,w,c
 15145   004992  B4D8               	btfsc	status,2,c
 15146   004994  EFCE  F024         	goto	u7871
 15147   004998  EFD0  F024         	goto	u7870
 15148   00499C                     u7871:
 15149   00499C  EFE8  F024         	goto	l6294
 15150   0049A0                     u7870:
 15151   0049A0  803B               	bsf	___fldiv@grs^0,0,c
 15152   0049A2  EFE8  F024         	goto	l6294
 15153   0049A6                     l6288:
 15154   0049A6  90D8               	bcf	status,0,c
 15155   0049A8  3628               	rlcf	___fldiv@b^0,f,c
 15156   0049AA  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15157   0049AC  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15158   0049AE  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15159   0049B0  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15160   0049B2  EFDD  F024         	goto	u7881
 15161   0049B6  EFDF  F024         	goto	u7880
 15162   0049BA                     u7881:
 15163   0049BA  EFE0  F024         	goto	l866
 15164   0049BE                     u7880:
 15165   0049BE  8028               	bsf	___fldiv@b^0,0,c
 15166   0049C0                     l866:
 15167   0049C0  90D8               	bcf	status,0,c
 15168   0049C2  363B               	rlcf	___fldiv@grs^0,f,c
 15169   0049C4  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15170   0049C6  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15171   0049C8  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15172   0049CA  0639               	decf	___fldiv@new_exp^0,f,c
 15173   0049CC  A0D8               	btfss	status,0,c
 15174   0049CE  063A               	decf	(___fldiv@new_exp+1)^0,f,c
 15175   0049D0                     l6294:
 15176   0049D0  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 15177   0049D2  EFED  F024         	goto	u7891
 15178   0049D6  EFEF  F024         	goto	u7890
 15179   0049DA                     u7891:
 15180   0049DA  EFD3  F024         	goto	l6288
 15181   0049DE                     u7890:
 15182   0049DE  6A40               	clrf	___fldiv@aexp^0,c
 15183   0049E0  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15184   0049E2  EFF5  F024         	goto	u7901
 15185   0049E6  EFF7  F024         	goto	u7900
 15186   0049EA                     u7901:
 15187   0049EA  EF1B  F025         	goto	l868
 15188   0049EE                     u7900:
 15189   0049EE  0EFF               	movlw	255
 15190   0049F0  143B               	andwf	___fldiv@grs^0,w,c
 15191   0049F2  6E30               	movwf	??___fldiv^0,c
 15192   0049F4  0EFF               	movlw	255
 15193   0049F6  143C               	andwf	(___fldiv@grs+1)^0,w,c
 15194   0049F8  6E31               	movwf	(??___fldiv+1)^0,c
 15195   0049FA  0EFF               	movlw	255
 15196   0049FC  143D               	andwf	(___fldiv@grs+2)^0,w,c
 15197   0049FE  6E32               	movwf	(??___fldiv+2)^0,c
 15198   004A00  0E7F               	movlw	127
 15199   004A02  143E               	andwf	(___fldiv@grs+3)^0,w,c
 15200   004A04  6E33               	movwf	(??___fldiv+3)^0,c
 15201   004A06  5030               	movf	??___fldiv^0,w,c
 15202   004A08  1031               	iorwf	(??___fldiv+1)^0,w,c
 15203   004A0A  1032               	iorwf	(??___fldiv+2)^0,w,c
 15204   004A0C  1033               	iorwf	(??___fldiv+3)^0,w,c
 15205   004A0E  B4D8               	btfsc	status,2,c
 15206   004A10  EF0C  F025         	goto	u7911
 15207   004A14  EF0E  F025         	goto	u7910
 15208   004A18                     u7911:
 15209   004A18  EF12  F025         	goto	l869
 15210   004A1C                     u7910:
 15211   004A1C                     l6298:
 15212   004A1C  0E01               	movlw	1
 15213   004A1E  6E40               	movwf	___fldiv@aexp^0,c
 15214   004A20  EF1B  F025         	goto	l868
 15215   004A24                     l869:
 15216   004A24  A028               	btfss	___fldiv@b^0,0,c
 15217   004A26  EF17  F025         	goto	u7921
 15218   004A2A  EF19  F025         	goto	u7920
 15219   004A2E                     u7921:
 15220   004A2E  EF1B  F025         	goto	l868
 15221   004A32                     u7920:
 15222   004A32  EF0E  F025         	goto	l6298
 15223   004A36                     l868:
 15224   004A36  5040               	movf	___fldiv@aexp^0,w,c
 15225   004A38  B4D8               	btfsc	status,2,c
 15226   004A3A  EF21  F025         	goto	u7931
 15227   004A3E  EF23  F025         	goto	u7930
 15228   004A42                     u7931:
 15229   004A42  EF47  F025         	goto	l6310
 15230   004A46                     u7930:
 15231   004A46  0E01               	movlw	1
 15232   004A48  2628               	addwf	___fldiv@b^0,f,c
 15233   004A4A  0E00               	movlw	0
 15234   004A4C  2229               	addwfc	(___fldiv@b+1)^0,f,c
 15235   004A4E  222A               	addwfc	(___fldiv@b+2)^0,f,c
 15236   004A50  222B               	addwfc	(___fldiv@b+3)^0,f,c
 15237   004A52  A02B               	btfss	(___fldiv@b+3)^0,0,c
 15238   004A54  EF2E  F025         	goto	u7941
 15239   004A58  EF30  F025         	goto	u7940
 15240   004A5C                     u7941:
 15241   004A5C  EF47  F025         	goto	l6310
 15242   004A60                     u7940:
 15243   004A60  C028  F030         	movff	___fldiv@b,??___fldiv
 15244   004A64  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
 15245   004A68  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
 15246   004A6C  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
 15247   004A70  3433               	rlcf	(??___fldiv+3)^0,w,c
 15248   004A72  3233               	rrcf	(??___fldiv+3)^0,f,c
 15249   004A74  3232               	rrcf	(??___fldiv+2)^0,f,c
 15250   004A76  3231               	rrcf	(??___fldiv+1)^0,f,c
 15251   004A78  3230               	rrcf	??___fldiv^0,f,c
 15252   004A7A  C030  F028         	movff	??___fldiv,___fldiv@b
 15253   004A7E  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
 15254   004A82  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
 15255   004A86  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
 15256   004A8A  4A39               	infsnz	___fldiv@new_exp^0,f,c
 15257   004A8C  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
 15258   004A8E                     l6310:
 15259   004A8E  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15260   004A90  EF52  F025         	goto	u7951
 15261   004A94  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15262   004A96  E108               	bnz	u7950
 15263   004A98  2839               	incf	___fldiv@new_exp^0,w,c
 15264   004A9A  A0D8               	btfss	status,0,c
 15265   004A9C  EF52  F025         	goto	u7951
 15266   004AA0  EF54  F025         	goto	u7950
 15267   004AA4                     u7951:
 15268   004AA4  EF5F  F025         	goto	l6314
 15269   004AA8                     u7950:
 15270   004AA8  0E00               	movlw	0
 15271   004AAA  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15272   004AAC  6839               	setf	___fldiv@new_exp^0,c
 15273   004AAE  0E00               	movlw	0
 15274   004AB0  6E28               	movwf	___fldiv@b^0,c
 15275   004AB2  0E00               	movlw	0
 15276   004AB4  6E29               	movwf	(___fldiv@b+1)^0,c
 15277   004AB6  0E00               	movlw	0
 15278   004AB8  6E2A               	movwf	(___fldiv@b+2)^0,c
 15279   004ABA  0E00               	movlw	0
 15280   004ABC  6E2B               	movwf	(___fldiv@b+3)^0,c
 15281   004ABE                     l6314:
 15282   004ABE  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15283   004AC0  EF6C  F025         	goto	u7960
 15284   004AC4  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15285   004AC6  E106               	bnz	u7961
 15286   004AC8  0439               	decf	___fldiv@new_exp^0,w,c
 15287   004ACA  B0D8               	btfsc	status,0,c
 15288   004ACC  EF6A  F025         	goto	u7961
 15289   004AD0  EF6C  F025         	goto	u7960
 15290   004AD4                     u7961:
 15291   004AD4  EF79  F025         	goto	l6320
 15292   004AD8                     u7960:
 15293   004AD8  0E00               	movlw	0
 15294   004ADA  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15295   004ADC  0E00               	movlw	0
 15296   004ADE  6E39               	movwf	___fldiv@new_exp^0,c
 15297   004AE0  0E00               	movlw	0
 15298   004AE2  6E28               	movwf	___fldiv@b^0,c
 15299   004AE4  0E00               	movlw	0
 15300   004AE6  6E29               	movwf	(___fldiv@b+1)^0,c
 15301   004AE8  0E00               	movlw	0
 15302   004AEA  6E2A               	movwf	(___fldiv@b+2)^0,c
 15303   004AEC  0E00               	movlw	0
 15304   004AEE  6E2B               	movwf	(___fldiv@b+3)^0,c
 15305   004AF0  6A38               	clrf	___fldiv@sign^0,c
 15306   004AF2                     l6320:
 15307   004AF2  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
 15308   004AF6  A03F               	btfss	___fldiv@bexp^0,0,c
 15309   004AF8  EF80  F025         	goto	u7971
 15310   004AFC  EF82  F025         	goto	u7970
 15311   004B00                     u7971:
 15312   004B00  EF85  F025         	goto	l6326
 15313   004B04                     u7970:
 15314   004B04  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 15315   004B06  EF86  F025         	goto	l6328
 15316   004B0A                     l6326:
 15317   004B0A  9E2A               	bcf	(___fldiv@b+2)^0,7,c
 15318   004B0C                     l6328:
 15319   004B0C  90D8               	bcf	status,0,c
 15320   004B0E  303F               	rrcf	___fldiv@bexp^0,w,c
 15321   004B10  6E2B               	movwf	(___fldiv@b+3)^0,c
 15322   004B12  EF3F  F024         	goto	l6244
 15323   004B16                     l855:
 15324   004B16  0012               	return		;funcret
 15325   004B18                     __end_of___fldiv:
 15326                           	callstack 0
 15327                           
 15328 ;; *************** function _dtoa *****************
 15329 ;; Defined at:
 15330 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 15331 ;; Parameters:    Size  Location     Type
 15332 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 15333 ;;		 -> sprintf@f(11), 
 15334 ;;  d               4   23[COMRAM] long 
 15335 ;; Auto vars:     Size  Location     Type
 15336 ;;  i               2   34[COMRAM] int 
 15337 ;;  p               2   31[COMRAM] int 
 15338 ;;  w               2   29[COMRAM] int 
 15339 ;;  s               1   33[COMRAM] unsigned char 
 15340 ;; Return value:  Size  Location     Type
 15341 ;;                  1    wreg      void 
 15342 ;; Registers used:
 15343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15344 ;; Tracked objects:
 15345 ;;		On entry : 0/0
 15346 ;;		On exit  : 0/0
 15347 ;;		Unchanged: 0/0
 15348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15349 ;;      Params:         5       0       0       0       0       0       0       0       0
 15350 ;;      Locals:         9       0       0       0       0       0       0       0       0
 15351 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15352 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15353 ;;Total ram usage:       14 bytes
 15354 ;; Hardware stack levels used: 1
 15355 ;; Hardware stack levels required when called: 5
 15356 ;; This function calls:
 15357 ;;		___aldiv
 15358 ;;		___almod
 15359 ;;		_abs
 15360 ;;		_pad
 15361 ;; This function is called by:
 15362 ;;		_vfpfcnvrt
 15363 ;; This function uses a non-reentrant model
 15364 ;;
 15365                           
 15366                           	psect	text38
 15367   005722                     __ptext38:
 15368                           	callstack 0
 15369   005722                     _dtoa:
 15370                           	callstack 21
 15371   005722                     
 15372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 15373   005722  BE1B               	btfsc	(dtoa@d+3)^0,7,c
 15374   005724  EF96  F02B         	goto	u8581
 15375   005728  EF99  F02B         	goto	u8580
 15376   00572C                     u8581:
 15377   00572C  0E01               	movlw	1
 15378   00572E  EF9A  F02B         	goto	u8590
 15379   005732                     u8580:
 15380   005732  0E00               	movlw	0
 15381   005734                     u8590:
 15382   005734  6E22               	movwf	dtoa@s^0,c
 15383                           
 15384                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 15385   005736  0102               	movlb	2	; () banked
 15386   005738  BFFF               	btfsc	(_prec+1)& (0+255),7,b
 15387   00573A  EFA3  F02B         	goto	u8600
 15388   00573E  EFA1  F02B         	goto	u8601
 15389   005742                     u8601:
 15390   005742  EFA9  F02B         	goto	l988
 15391   005746                     u8600:
 15392   005746                     
 15393                           ; BSR set to: 2
 15394   005746  0E00               	movlw	0
 15395   005748  6E21               	movwf	(dtoa@p+1)^0,c
 15396   00574A  0E01               	movlw	1
 15397   00574C  6E20               	movwf	dtoa@p^0,c
 15398   00574E  EFAD  F02B         	goto	l990
 15399   005752                     l988:
 15400                           
 15401                           ; BSR set to: 2
 15402   005752  C2FE  F020         	movff	_prec,dtoa@p
 15403   005756  C2FF  F021         	movff	_prec+1,dtoa@p+1
 15404   00575A                     l990:
 15405                           
 15406                           ; BSR set to: 2
 15407                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 15408   00575A  C34A  F01E         	movff	_width,dtoa@w
 15409   00575E  C34B  F01F         	movff	_width+1,dtoa@w+1
 15410   005762                     
 15411                           ; BSR set to: 2
 15412                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 15413   005762  5022               	movf	dtoa@s^0,w,c
 15414   005764  B4D8               	btfsc	status,2,c
 15415   005766  EFB7  F02B         	goto	u8611
 15416   00576A  EFB9  F02B         	goto	u8610
 15417   00576E                     u8611:
 15418   00576E  EFD0  F02B         	goto	l991
 15419   005772                     u8610:
 15420   005772                     
 15421                           ; BSR set to: 2
 15422                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 15423   005772  061E               	decf	dtoa@w^0,f,c
 15424   005774  A0D8               	btfss	status,0,c
 15425   005776  061F               	decf	(dtoa@w+1)^0,f,c
 15426   005778                     
 15427                           ; BSR set to: 2
 15428                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 15429   005778  5022               	movf	dtoa@s^0,w,c
 15430   00577A  A4D8               	btfss	status,2,c
 15431   00577C  EFC2  F02B         	goto	u8621
 15432   005780  EFC4  F02B         	goto	u8620
 15433   005784                     u8621:
 15434   005784  EFCA  F02B         	goto	l6674
 15435   005788                     u8620:
 15436   005788                     
 15437                           ; BSR set to: 2
 15438   005788  0E00               	movlw	0
 15439   00578A  6E1D               	movwf	(_dtoa$1344+1)^0,c
 15440   00578C  0E2B               	movlw	43
 15441   00578E  6E1C               	movwf	_dtoa$1344^0,c
 15442   005790  EFCE  F02B         	goto	l6676
 15443   005794                     l6674:
 15444                           
 15445                           ; BSR set to: 2
 15446   005794  0E00               	movlw	0
 15447   005796  6E1D               	movwf	(_dtoa$1344+1)^0,c
 15448   005798  0E2D               	movlw	45
 15449   00579A  6E1C               	movwf	_dtoa$1344^0,c
 15450   00579C                     l6676:
 15451                           
 15452                           ; BSR set to: 2
 15453   00579C  C01C  F022         	movff	_dtoa$1344,dtoa@s
 15454   0057A0                     l991:
 15455                           
 15456                           ; BSR set to: 2
 15457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 15458   0057A0  0E00               	movlw	0
 15459   0057A2  6E24               	movwf	(dtoa@i+1)^0,c
 15460   0057A4  0E4F               	movlw	79
 15461   0057A6  6E23               	movwf	dtoa@i^0,c
 15462   0057A8                     
 15463                           ; BSR set to: 2
 15464                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 15465   0057A8  0103               	movlb	3	; () banked
 15466   0057AA  6BA7               	clrf	(_dbuf+79)& (0+255),b
 15467                           
 15468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 15469   0057AC  EF1C  F02C         	goto	l6690
 15470   0057B0                     l6680:
 15471                           
 15472                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 15473   0057B0  0623               	decf	dtoa@i^0,f,c
 15474   0057B2  A0D8               	btfss	status,0,c
 15475   0057B4  0624               	decf	(dtoa@i+1)^0,f,c
 15476   0057B6                     
 15477                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 15478   0057B6  0E58               	movlw	low _dbuf
 15479   0057B8  2423               	addwf	dtoa@i^0,w,c
 15480   0057BA  6ED9               	movwf	fsr2l,c
 15481   0057BC  0E03               	movlw	high _dbuf
 15482   0057BE  2024               	addwfc	(dtoa@i+1)^0,w,c
 15483   0057C0  6EDA               	movwf	fsr2h,c
 15484   0057C2  C018  F001         	movff	dtoa@d,___almod@dividend
 15485   0057C6  C019  F002         	movff	dtoa@d+1,___almod@dividend+1
 15486   0057CA  C01A  F003         	movff	dtoa@d+2,___almod@dividend+2
 15487   0057CE  C01B  F004         	movff	dtoa@d+3,___almod@dividend+3
 15488   0057D2  0E0A               	movlw	10
 15489   0057D4  6E05               	movwf	___almod@divisor^0,c
 15490   0057D6  0E00               	movlw	0
 15491   0057D8  6E06               	movwf	(___almod@divisor+1)^0,c
 15492   0057DA  0E00               	movlw	0
 15493   0057DC  6E07               	movwf	(___almod@divisor+2)^0,c
 15494   0057DE  0E00               	movlw	0
 15495   0057E0  6E08               	movwf	(___almod@divisor+3)^0,c
 15496   0057E2  EC5C  F031         	call	___almod	;wreg free
 15497   0057E6  C001  F00B         	movff	?___almod,abs@a
 15498   0057EA  C002  F00C         	movff	?___almod+1,abs@a+1
 15499   0057EE  ECC2  F036         	call	_abs	;wreg free
 15500   0057F2  500B               	movf	?_abs^0,w,c
 15501   0057F4  0F30               	addlw	48
 15502   0057F6  6EDF               	movwf	indf2,c
 15503   0057F8                     
 15504                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
 15505   0057F8  0620               	decf	dtoa@p^0,f,c
 15506   0057FA  A0D8               	btfss	status,0,c
 15507   0057FC  0621               	decf	(dtoa@p+1)^0,f,c
 15508   0057FE                     
 15509                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 15510   0057FE  061E               	decf	dtoa@w^0,f,c
 15511   005800  A0D8               	btfss	status,0,c
 15512   005802  061F               	decf	(dtoa@w+1)^0,f,c
 15513   005804                     
 15514                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 15515   005804  C018  F001         	movff	dtoa@d,___aldiv@dividend
 15516   005808  C019  F002         	movff	dtoa@d+1,___aldiv@dividend+1
 15517   00580C  C01A  F003         	movff	dtoa@d+2,___aldiv@dividend+2
 15518   005810  C01B  F004         	movff	dtoa@d+3,___aldiv@dividend+3
 15519   005814  0E0A               	movlw	10
 15520   005816  6E05               	movwf	___aldiv@divisor^0,c
 15521   005818  0E00               	movlw	0
 15522   00581A  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15523   00581C  0E00               	movlw	0
 15524   00581E  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15525   005820  0E00               	movlw	0
 15526   005822  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15527   005824  ECD2  F02E         	call	___aldiv	;wreg free
 15528   005828  C001  F018         	movff	?___aldiv,dtoa@d
 15529   00582C  C002  F019         	movff	?___aldiv+1,dtoa@d+1
 15530   005830  C003  F01A         	movff	?___aldiv+2,dtoa@d+2
 15531   005834  C004  F01B         	movff	?___aldiv+3,dtoa@d+3
 15532   005838                     l6690:
 15533                           
 15534                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 15535   005838  BE24               	btfsc	(dtoa@i+1)^0,7,c
 15536   00583A  EF27  F02C         	goto	u8631
 15537   00583E  5024               	movf	(dtoa@i+1)^0,w,c
 15538   005840  E108               	bnz	u8630
 15539   005842  0423               	decf	dtoa@i^0,w,c
 15540   005844  A0D8               	btfss	status,0,c
 15541   005846  EF27  F02C         	goto	u8631
 15542   00584A  EF29  F02C         	goto	u8630
 15543   00584E                     u8631:
 15544   00584E  EF41  F02C         	goto	l6696
 15545   005852                     u8630:
 15546   005852  5018               	movf	dtoa@d^0,w,c
 15547   005854  1019               	iorwf	(dtoa@d+1)^0,w,c
 15548   005856  101A               	iorwf	(dtoa@d+2)^0,w,c
 15549   005858  101B               	iorwf	(dtoa@d+3)^0,w,c
 15550   00585A  A4D8               	btfss	status,2,c
 15551   00585C  EF32  F02C         	goto	u8641
 15552   005860  EF34  F02C         	goto	u8640
 15553   005864                     u8641:
 15554   005864  EFD8  F02B         	goto	l6680
 15555   005868                     u8640:
 15556   005868  BE21               	btfsc	(dtoa@p+1)^0,7,c
 15557   00586A  EF41  F02C         	goto	u8650
 15558   00586E  5021               	movf	(dtoa@p+1)^0,w,c
 15559   005870  E106               	bnz	u8651
 15560   005872  0420               	decf	dtoa@p^0,w,c
 15561   005874  B0D8               	btfsc	status,0,c
 15562   005876  EF3F  F02C         	goto	u8651
 15563   00587A  EF41  F02C         	goto	u8650
 15564   00587E                     u8651:
 15565   00587E  EFD8  F02B         	goto	l6680
 15566   005882                     u8650:
 15567   005882                     l6696:
 15568                           
 15569                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 15570   005882  5022               	movf	dtoa@s^0,w,c
 15571   005884  B4D8               	btfsc	status,2,c
 15572   005886  EF47  F02C         	goto	u8661
 15573   00588A  EF49  F02C         	goto	u8660
 15574   00588E                     u8661:
 15575   00588E  EF54  F02C         	goto	l6702
 15576   005892                     u8660:
 15577   005892                     
 15578                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 15579   005892  0623               	decf	dtoa@i^0,f,c
 15580   005894  A0D8               	btfss	status,0,c
 15581   005896  0624               	decf	(dtoa@i+1)^0,f,c
 15582   005898                     
 15583                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 15584   005898  0E58               	movlw	low _dbuf
 15585   00589A  2423               	addwf	dtoa@i^0,w,c
 15586   00589C  6ED9               	movwf	fsr2l,c
 15587   00589E  0E03               	movlw	high _dbuf
 15588   0058A0  2024               	addwfc	(dtoa@i+1)^0,w,c
 15589   0058A2  6EDA               	movwf	fsr2h,c
 15590   0058A4  C022  FFDF         	movff	dtoa@s,indf2
 15591   0058A8                     l6702:
 15592                           
 15593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 15594   0058A8  C017  F00F         	movff	dtoa@fp,pad@fp
 15595   0058AC  0E58               	movlw	low _dbuf
 15596   0058AE  2423               	addwf	dtoa@i^0,w,c
 15597   0058B0  6E10               	movwf	pad@buf^0,c
 15598   0058B2  0E03               	movlw	high _dbuf
 15599   0058B4  2024               	addwfc	(dtoa@i+1)^0,w,c
 15600   0058B6  6E11               	movwf	(pad@buf+1)^0,c
 15601   0058B8  C01E  F012         	movff	dtoa@w,pad@p
 15602   0058BC  C01F  F013         	movff	dtoa@w+1,pad@p+1
 15603   0058C0  EC32  F035         	call	_pad	;wreg free
 15604   0058C4  0012               	return		;funcret
 15605   0058C6                     __end_of_dtoa:
 15606                           	callstack 0
 15607                           
 15608 ;; *************** function _pad *****************
 15609 ;; Defined at:
 15610 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 15611 ;; Parameters:    Size  Location     Type
 15612 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
 15613 ;;		 -> sprintf@f(11), 
 15614 ;;  buf             2   15[COMRAM] PTR unsigned char 
 15615 ;;		 -> dbuf(80), 
 15616 ;;  p               2   17[COMRAM] int 
 15617 ;; Auto vars:     Size  Location     Type
 15618 ;;  i               2   20[COMRAM] int 
 15619 ;; Return value:  Size  Location     Type
 15620 ;;                  1    wreg      void 
 15621 ;; Registers used:
 15622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15623 ;; Tracked objects:
 15624 ;;		On entry : 0/0
 15625 ;;		On exit  : 0/0
 15626 ;;		Unchanged: 0/0
 15627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15628 ;;      Params:         5       0       0       0       0       0       0       0       0
 15629 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15630 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15631 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15632 ;;Total ram usage:        8 bytes
 15633 ;; Hardware stack levels used: 1
 15634 ;; Hardware stack levels required when called: 4
 15635 ;; This function calls:
 15636 ;;		_fputc
 15637 ;;		_fputs
 15638 ;; This function is called by:
 15639 ;;		_dtoa
 15640 ;;		_efgtoa
 15641 ;;		_utoa
 15642 ;; This function uses a non-reentrant model
 15643 ;;
 15644                           
 15645                           	psect	text39
 15646   006A64                     __ptext39:
 15647                           	callstack 0
 15648   006A64                     _pad:
 15649                           	callstack 21
 15650   006A64                     
 15651                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 15652   006A64  BE13               	btfsc	(pad@p+1)^0,7,c
 15653   006A66  EF39  F035         	goto	u8360
 15654   006A6A  EF37  F035         	goto	u8361
 15655   006A6E                     u8361:
 15656   006A6E  EF3D  F035         	goto	l980
 15657   006A72                     u8360:
 15658   006A72                     
 15659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 15660   006A72  0E00               	movlw	0
 15661   006A74  6E13               	movwf	(pad@p+1)^0,c
 15662   006A76  0E00               	movlw	0
 15663   006A78  6E12               	movwf	pad@p^0,c
 15664   006A7A                     l980:
 15665                           
 15666                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 15667   006A7A  0E00               	movlw	0
 15668   006A7C  6E16               	movwf	(pad@i+1)^0,c
 15669   006A7E  0E00               	movlw	0
 15670   006A80  6E15               	movwf	pad@i^0,c
 15671                           
 15672                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 15673   006A82  EF4D  F035         	goto	l6584
 15674   006A86                     l6580:
 15675                           
 15676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 15677   006A86  0E00               	movlw	0
 15678   006A88  6E02               	movwf	(fputc@c+1)^0,c
 15679   006A8A  0E20               	movlw	32
 15680   006A8C  6E01               	movwf	fputc@c^0,c
 15681   006A8E  C00F  F003         	movff	pad@fp,fputc@fp
 15682   006A92  ECB6  F032         	call	_fputc	;wreg free
 15683   006A96                     
 15684                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 15685   006A96  4A15               	infsnz	pad@i^0,f,c
 15686   006A98  2A16               	incf	(pad@i+1)^0,f,c
 15687   006A9A                     l6584:
 15688                           
 15689                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 15690   006A9A  5012               	movf	pad@p^0,w,c
 15691   006A9C  5C15               	subwf	pad@i^0,w,c
 15692   006A9E  5016               	movf	(pad@i+1)^0,w,c
 15693   006AA0  0A80               	xorlw	128
 15694   006AA2  6E14               	movwf	??_pad^0,c
 15695   006AA4  5013               	movf	(pad@p+1)^0,w,c
 15696   006AA6  0A80               	xorlw	128
 15697   006AA8  5814               	subwfb	??_pad^0,w,c
 15698   006AAA  A0D8               	btfss	status,0,c
 15699   006AAC  EF5A  F035         	goto	u8371
 15700   006AB0  EF5C  F035         	goto	u8370
 15701   006AB4                     u8371:
 15702   006AB4  EF43  F035         	goto	l6580
 15703   006AB8                     u8370:
 15704   006AB8                     
 15705                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 15706   006AB8  C010  F009         	movff	pad@buf,fputs@s
 15707   006ABC  C011  F00A         	movff	pad@buf+1,fputs@s+1
 15708   006AC0  C00F  F00B         	movff	pad@fp,fputs@fp
 15709   006AC4  EC6A  F036         	call	_fputs	;wreg free
 15710   006AC8  0012               	return		;funcret
 15711   006ACA                     __end_of_pad:
 15712                           	callstack 0
 15713                           
 15714 ;; *************** function _fputs *****************
 15715 ;; Defined at:
 15716 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 15717 ;; Parameters:    Size  Location     Type
 15718 ;;  s               2    8[COMRAM] PTR const unsigned char 
 15719 ;;		 -> dbuf(80), 
 15720 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
 15721 ;;		 -> sprintf@f(11), 
 15722 ;; Auto vars:     Size  Location     Type
 15723 ;;  i               2   12[COMRAM] int 
 15724 ;;  c               1   11[COMRAM] unsigned char 
 15725 ;; Return value:  Size  Location     Type
 15726 ;;                  2    8[COMRAM] int 
 15727 ;; Registers used:
 15728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15729 ;; Tracked objects:
 15730 ;;		On entry : 0/0
 15731 ;;		On exit  : 0/0
 15732 ;;		Unchanged: 0/0
 15733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15734 ;;      Params:         3       0       0       0       0       0       0       0       0
 15735 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15736 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15737 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15738 ;;Total ram usage:        6 bytes
 15739 ;; Hardware stack levels used: 1
 15740 ;; Hardware stack levels required when called: 3
 15741 ;; This function calls:
 15742 ;;		_fputc
 15743 ;; This function is called by:
 15744 ;;		_pad
 15745 ;; This function uses a non-reentrant model
 15746 ;;
 15747                           
 15748                           	psect	text40
 15749   006CD4                     __ptext40:
 15750                           	callstack 0
 15751   006CD4                     _fputs:
 15752                           	callstack 21
 15753   006CD4  0E00               	movlw	0
 15754   006CD6  6E0E               	movwf	(fputs@i+1)^0,c
 15755   006CD8  0E00               	movlw	0
 15756   006CDA  6E0D               	movwf	fputs@i^0,c
 15757   006CDC  EF79  F036         	goto	l6092
 15758   006CE0                     l6088:
 15759   006CE0  C00C  F001         	movff	fputs@c,fputc@c
 15760   006CE4  6A02               	clrf	(fputc@c+1)^0,c
 15761   006CE6  C00B  F003         	movff	fputs@fp,fputc@fp
 15762   006CEA  ECB6  F032         	call	_fputc	;wreg free
 15763   006CEE  4A0D               	infsnz	fputs@i^0,f,c
 15764   006CF0  2A0E               	incf	(fputs@i+1)^0,f,c
 15765   006CF2                     l6092:
 15766   006CF2  500D               	movf	fputs@i^0,w,c
 15767   006CF4  2409               	addwf	fputs@s^0,w,c
 15768   006CF6  6ED9               	movwf	fsr2l,c
 15769   006CF8  500E               	movf	(fputs@i+1)^0,w,c
 15770   006CFA  200A               	addwfc	(fputs@s+1)^0,w,c
 15771   006CFC  6EDA               	movwf	fsr2h,c
 15772   006CFE  50DF               	movf	indf2,w,c
 15773   006D00  6E0C               	movwf	fputs@c^0,c
 15774   006D02  500C               	movf	fputs@c^0,w,c
 15775   006D04  A4D8               	btfss	status,2,c
 15776   006D06  EF87  F036         	goto	u7581
 15777   006D0A  EF89  F036         	goto	u7580
 15778   006D0E                     u7581:
 15779   006D0E  EF70  F036         	goto	l6088
 15780   006D12                     u7580:
 15781   006D12  0012               	return		;funcret
 15782   006D14                     __end_of_fputs:
 15783                           	callstack 0
 15784                           
 15785 ;; *************** function _fputc *****************
 15786 ;; Defined at:
 15787 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 15788 ;; Parameters:    Size  Location     Type
 15789 ;;  c               2    0[COMRAM] int 
 15790 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
 15791 ;;		 -> sprintf@f(11), 
 15792 ;; Auto vars:     Size  Location     Type
 15793 ;;		None
 15794 ;; Return value:  Size  Location     Type
 15795 ;;                  2    0[COMRAM] int 
 15796 ;; Registers used:
 15797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15798 ;; Tracked objects:
 15799 ;;		On entry : 0/0
 15800 ;;		On exit  : 0/0
 15801 ;;		Unchanged: 0/0
 15802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15803 ;;      Params:         3       0       0       0       0       0       0       0       0
 15804 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15805 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15806 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15807 ;;Total ram usage:        8 bytes
 15808 ;; Hardware stack levels used: 1
 15809 ;; Hardware stack levels required when called: 2
 15810 ;; This function calls:
 15811 ;;		_putch
 15812 ;; This function is called by:
 15813 ;;		_pad
 15814 ;;		_stoa
 15815 ;;		_vfpfcnvrt
 15816 ;;		_fputs
 15817 ;; This function uses a non-reentrant model
 15818 ;;
 15819                           
 15820                           	psect	text41
 15821   00656C                     __ptext41:
 15822                           	callstack 0
 15823   00656C                     _fputc:
 15824                           	callstack 21
 15825   00656C  5003               	movf	fputc@fp^0,w,c
 15826   00656E  B4D8               	btfsc	status,2,c
 15827   006570  EFBC  F032         	goto	u7151
 15828   006574  EFBE  F032         	goto	u7150
 15829   006578                     u7151:
 15830   006578  EFC6  F032         	goto	l5882
 15831   00657C                     u7150:
 15832   00657C  5003               	movf	fputc@fp^0,w,c
 15833   00657E  A4D8               	btfss	status,2,c
 15834   006580  EFC4  F032         	goto	u7161
 15835   006584  EFC6  F032         	goto	u7160
 15836   006588                     u7161:
 15837   006588  EFCB  F032         	goto	l5884
 15838   00658C                     u7160:
 15839   00658C                     l5882:
 15840   00658C  5001               	movf	fputc@c^0,w,c
 15841   00658E  EC11  F037         	call	_putch
 15842   006592  EF12  F033         	goto	l1197
 15843   006596                     l5884:
 15844   006596  5003               	movf	fputc@fp^0,w,c
 15845   006598  6ED9               	movwf	fsr2l,c
 15846   00659A  6ADA               	clrf	fsr2h,c
 15847   00659C  0E09               	movlw	9
 15848   00659E  26D9               	addwf	fsr2l,f,c
 15849   0065A0  50DE               	movf	postinc2,w,c
 15850   0065A2  10DE               	iorwf	postinc2,w,c
 15851   0065A4  B4D8               	btfsc	status,2,c
 15852   0065A6  EFD7  F032         	goto	u7171
 15853   0065AA  EFD9  F032         	goto	u7170
 15854   0065AE                     u7171:
 15855   0065AE  EFF2  F032         	goto	l5888
 15856   0065B2                     u7170:
 15857   0065B2  5003               	movf	fputc@fp^0,w,c
 15858   0065B4  6ED9               	movwf	fsr2l,c
 15859   0065B6  6ADA               	clrf	fsr2h,c
 15860   0065B8  0E09               	movlw	9
 15861   0065BA  26D9               	addwf	fsr2l,f,c
 15862   0065BC  5003               	movf	fputc@fp^0,w,c
 15863   0065BE  6EE1               	movwf	fsr1l,c
 15864   0065C0  6AE2               	clrf	fsr1h,c
 15865   0065C2  0E02               	movlw	2
 15866   0065C4  26E1               	addwf	fsr1l,f,c
 15867   0065C6  50DE               	movf	postinc2,w,c
 15868   0065C8  5CE6               	subwf	postinc1,w,c
 15869   0065CA  50E6               	movf	postinc1,w,c
 15870   0065CC  0A80               	xorlw	128
 15871   0065CE  6E08               	movwf	(??_fputc+4)^0,c
 15872   0065D0  50DE               	movf	postinc2,w,c
 15873   0065D2  0A80               	xorlw	128
 15874   0065D4  5808               	subwfb	(??_fputc+4)^0,w,c
 15875   0065D6  B0D8               	btfsc	status,0,c
 15876   0065D8  EFF0  F032         	goto	u7181
 15877   0065DC  EFF2  F032         	goto	u7180
 15878   0065E0                     u7181:
 15879   0065E0  EF12  F033         	goto	l1197
 15880   0065E4                     u7180:
 15881   0065E4                     l5888:
 15882   0065E4  5003               	movf	fputc@fp^0,w,c
 15883   0065E6  6ED9               	movwf	fsr2l,c
 15884   0065E8  6ADA               	clrf	fsr2h,c
 15885   0065EA  0E02               	movlw	2
 15886   0065EC  26D9               	addwf	fsr2l,f,c
 15887   0065EE  CFDE F004          	movff	postinc2,??_fputc
 15888   0065F2  CFDD F005          	movff	postdec2,??_fputc+1
 15889   0065F6  5003               	movf	fputc@fp^0,w,c
 15890   0065F8  6ED9               	movwf	fsr2l,c
 15891   0065FA  6ADA               	clrf	fsr2h,c
 15892   0065FC  CFDE F006          	movff	postinc2,??_fputc+2
 15893   006600  CFDD F007          	movff	postdec2,??_fputc+3
 15894   006604  5004               	movf	??_fputc^0,w,c
 15895   006606  2406               	addwf	(??_fputc+2)^0,w,c
 15896   006608  6ED9               	movwf	fsr2l,c
 15897   00660A  5005               	movf	(??_fputc+1)^0,w,c
 15898   00660C  2007               	addwfc	(??_fputc+3)^0,w,c
 15899   00660E  6EDA               	movwf	fsr2h,c
 15900   006610  C001  FFDF         	movff	fputc@c,indf2
 15901   006614  5003               	movf	fputc@fp^0,w,c
 15902   006616  6ED9               	movwf	fsr2l,c
 15903   006618  6ADA               	clrf	fsr2h,c
 15904   00661A  0E02               	movlw	2
 15905   00661C  26D9               	addwf	fsr2l,f,c
 15906   00661E  2ADE               	incf	postinc2,f,c
 15907   006620  0E00               	movlw	0
 15908   006622  22DD               	addwfc	postdec2,f,c
 15909   006624                     l1197:
 15910   006624  0012               	return		;funcret
 15911   006626                     __end_of_fputc:
 15912                           	callstack 0
 15913                           
 15914 ;; *************** function _putch *****************
 15915 ;; Defined at:
 15916 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 15917 ;; Parameters:    Size  Location     Type
 15918 ;;  c               1    wreg     unsigned char 
 15919 ;; Auto vars:     Size  Location     Type
 15920 ;;  c               1    0[COMRAM] unsigned char 
 15921 ;; Return value:  Size  Location     Type
 15922 ;;                  1    wreg      void 
 15923 ;; Registers used:
 15924 ;;		wreg
 15925 ;; Tracked objects:
 15926 ;;		On entry : 0/0
 15927 ;;		On exit  : 0/0
 15928 ;;		Unchanged: 0/0
 15929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15930 ;;      Params:         0       0       0       0       0       0       0       0       0
 15931 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15932 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15933 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15934 ;;Total ram usage:        0 bytes
 15935 ;; Hardware stack levels used: 1
 15936 ;; Hardware stack levels required when called: 1
 15937 ;; This function calls:
 15938 ;;		Nothing
 15939 ;; This function is called by:
 15940 ;;		_fputc
 15941 ;; This function uses a non-reentrant model
 15942 ;;
 15943                           
 15944                           	psect	text42
 15945   006E22                     __ptext42:
 15946                           	callstack 0
 15947   006E22                     _putch:
 15948                           	callstack 21
 15949   006E22  0012               	return		;funcret
 15950   006E24                     __end_of_putch:
 15951                           	callstack 0
 15952                           
 15953 ;; *************** function _abs *****************
 15954 ;; Defined at:
 15955 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 15956 ;; Parameters:    Size  Location     Type
 15957 ;;  a               2   10[COMRAM] int 
 15958 ;; Auto vars:     Size  Location     Type
 15959 ;;		None
 15960 ;; Return value:  Size  Location     Type
 15961 ;;                  2   10[COMRAM] int 
 15962 ;; Registers used:
 15963 ;;		wreg, status,2, status,0
 15964 ;; Tracked objects:
 15965 ;;		On entry : 0/0
 15966 ;;		On exit  : 0/0
 15967 ;;		Unchanged: 0/0
 15968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15969 ;;      Params:         2       0       0       0       0       0       0       0       0
 15970 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15971 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15972 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15973 ;;Total ram usage:        4 bytes
 15974 ;; Hardware stack levels used: 1
 15975 ;; Hardware stack levels required when called: 1
 15976 ;; This function calls:
 15977 ;;		Nothing
 15978 ;; This function is called by:
 15979 ;;		_dtoa
 15980 ;; This function uses a non-reentrant model
 15981 ;;
 15982                           
 15983                           	psect	text43
 15984   006D84                     __ptext43:
 15985                           	callstack 0
 15986   006D84                     _abs:
 15987                           	callstack 24
 15988   006D84  BE0C               	btfsc	(abs@a+1)^0,7,c
 15989   006D86  EFC7  F036         	goto	u8381
 15990   006D8A  EFC9  F036         	goto	u8380
 15991   006D8E                     u8381:
 15992   006D8E  EFCF  F036         	goto	l1156
 15993   006D92                     u8380:
 15994   006D92  C00B  F00B         	movff	abs@a,?_abs
 15995   006D96  C00C  F00C         	movff	abs@a+1,?_abs+1
 15996   006D9A  EFDB  F036         	goto	l1159
 15997   006D9E                     l1156:
 15998   006D9E  C00B  F00D         	movff	abs@a,??_abs
 15999   006DA2  C00C  F00E         	movff	abs@a+1,??_abs+1
 16000   006DA6  1E0D               	comf	??_abs^0,f,c
 16001   006DA8  1E0E               	comf	(??_abs+1)^0,f,c
 16002   006DAA  4A0D               	infsnz	??_abs^0,f,c
 16003   006DAC  2A0E               	incf	(??_abs+1)^0,f,c
 16004   006DAE  C00D  F00B         	movff	??_abs,?_abs
 16005   006DB2  C00E  F00C         	movff	??_abs+1,?_abs+1
 16006   006DB6                     l1159:
 16007   006DB6  0012               	return		;funcret
 16008   006DB8                     __end_of_abs:
 16009                           	callstack 0
 16010                           
 16011 ;; *************** function ___almod *****************
 16012 ;; Defined at:
 16013 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
 16014 ;; Parameters:    Size  Location     Type
 16015 ;;  dividend        4    0[COMRAM] long 
 16016 ;;  divisor         4    4[COMRAM] long 
 16017 ;; Auto vars:     Size  Location     Type
 16018 ;;  sign            1    9[COMRAM] unsigned char 
 16019 ;;  counter         1    8[COMRAM] unsigned char 
 16020 ;; Return value:  Size  Location     Type
 16021 ;;                  4    0[COMRAM] long 
 16022 ;; Registers used:
 16023 ;;		wreg, status,2, status,0
 16024 ;; Tracked objects:
 16025 ;;		On entry : 0/0
 16026 ;;		On exit  : 0/0
 16027 ;;		Unchanged: 0/0
 16028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16029 ;;      Params:         8       0       0       0       0       0       0       0       0
 16030 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16031 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16032 ;;      Totals:        10       0       0       0       0       0       0       0       0
 16033 ;;Total ram usage:       10 bytes
 16034 ;; Hardware stack levels used: 1
 16035 ;; Hardware stack levels required when called: 1
 16036 ;; This function calls:
 16037 ;;		Nothing
 16038 ;; This function is called by:
 16039 ;;		_dtoa
 16040 ;; This function uses a non-reentrant model
 16041 ;;
 16042                           
 16043                           	psect	text44
 16044   0062B8                     __ptext44:
 16045                           	callstack 0
 16046   0062B8                     ___almod:
 16047                           	callstack 24
 16048   0062B8  6A0A               	clrf	___almod@sign^0,c
 16049   0062BA  BE04               	btfsc	(___almod@dividend+3)^0,7,c
 16050   0062BC  EF64  F031         	goto	u7690
 16051   0062C0  EF62  F031         	goto	u7691
 16052   0062C4                     u7691:
 16053   0062C4  EF6E  F031         	goto	l6172
 16054   0062C8                     u7690:
 16055   0062C8  1E04               	comf	(___almod@dividend+3)^0,f,c
 16056   0062CA  1E03               	comf	(___almod@dividend+2)^0,f,c
 16057   0062CC  1E02               	comf	(___almod@dividend+1)^0,f,c
 16058   0062CE  6C01               	negf	___almod@dividend^0,c
 16059   0062D0  0E00               	movlw	0
 16060   0062D2  2202               	addwfc	(___almod@dividend+1)^0,f,c
 16061   0062D4  2203               	addwfc	(___almod@dividend+2)^0,f,c
 16062   0062D6  2204               	addwfc	(___almod@dividend+3)^0,f,c
 16063   0062D8  0E01               	movlw	1
 16064   0062DA  6E0A               	movwf	___almod@sign^0,c
 16065   0062DC                     l6172:
 16066   0062DC  BE08               	btfsc	(___almod@divisor+3)^0,7,c
 16067   0062DE  EF75  F031         	goto	u7700
 16068   0062E2  EF73  F031         	goto	u7701
 16069   0062E6                     u7701:
 16070   0062E6  EF7D  F031         	goto	l6176
 16071   0062EA                     u7700:
 16072   0062EA  1E08               	comf	(___almod@divisor+3)^0,f,c
 16073   0062EC  1E07               	comf	(___almod@divisor+2)^0,f,c
 16074   0062EE  1E06               	comf	(___almod@divisor+1)^0,f,c
 16075   0062F0  6C05               	negf	___almod@divisor^0,c
 16076   0062F2  0E00               	movlw	0
 16077   0062F4  2206               	addwfc	(___almod@divisor+1)^0,f,c
 16078   0062F6  2207               	addwfc	(___almod@divisor+2)^0,f,c
 16079   0062F8  2208               	addwfc	(___almod@divisor+3)^0,f,c
 16080   0062FA                     l6176:
 16081   0062FA  5005               	movf	___almod@divisor^0,w,c
 16082   0062FC  1006               	iorwf	(___almod@divisor+1)^0,w,c
 16083   0062FE  1007               	iorwf	(___almod@divisor+2)^0,w,c
 16084   006300  1008               	iorwf	(___almod@divisor+3)^0,w,c
 16085   006302  B4D8               	btfsc	status,2,c
 16086   006304  EF86  F031         	goto	u7711
 16087   006308  EF88  F031         	goto	u7710
 16088   00630C                     u7711:
 16089   00630C  EFB8  F031         	goto	l6192
 16090   006310                     u7710:
 16091   006310  0E01               	movlw	1
 16092   006312  6E09               	movwf	___almod@counter^0,c
 16093   006314  EF92  F031         	goto	l6182
 16094   006318                     l6180:
 16095   006318  90D8               	bcf	status,0,c
 16096   00631A  3605               	rlcf	___almod@divisor^0,f,c
 16097   00631C  3606               	rlcf	(___almod@divisor+1)^0,f,c
 16098   00631E  3607               	rlcf	(___almod@divisor+2)^0,f,c
 16099   006320  3608               	rlcf	(___almod@divisor+3)^0,f,c
 16100   006322  2A09               	incf	___almod@counter^0,f,c
 16101   006324                     l6182:
 16102   006324  AE08               	btfss	(___almod@divisor+3)^0,7,c
 16103   006326  EF97  F031         	goto	u7721
 16104   00632A  EF99  F031         	goto	u7720
 16105   00632E                     u7721:
 16106   00632E  EF8C  F031         	goto	l6180
 16107   006332                     u7720:
 16108   006332                     l6184:
 16109   006332  5005               	movf	___almod@divisor^0,w,c
 16110   006334  5C01               	subwf	___almod@dividend^0,w,c
 16111   006336  5006               	movf	(___almod@divisor+1)^0,w,c
 16112   006338  5802               	subwfb	(___almod@dividend+1)^0,w,c
 16113   00633A  5007               	movf	(___almod@divisor+2)^0,w,c
 16114   00633C  5803               	subwfb	(___almod@dividend+2)^0,w,c
 16115   00633E  5008               	movf	(___almod@divisor+3)^0,w,c
 16116   006340  5804               	subwfb	(___almod@dividend+3)^0,w,c
 16117   006342  A0D8               	btfss	status,0,c
 16118   006344  EFA6  F031         	goto	u7731
 16119   006348  EFA8  F031         	goto	u7730
 16120   00634C                     u7731:
 16121   00634C  EFB0  F031         	goto	l6188
 16122   006350                     u7730:
 16123   006350  5005               	movf	___almod@divisor^0,w,c
 16124   006352  5E01               	subwf	___almod@dividend^0,f,c
 16125   006354  5006               	movf	(___almod@divisor+1)^0,w,c
 16126   006356  5A02               	subwfb	(___almod@dividend+1)^0,f,c
 16127   006358  5007               	movf	(___almod@divisor+2)^0,w,c
 16128   00635A  5A03               	subwfb	(___almod@dividend+2)^0,f,c
 16129   00635C  5008               	movf	(___almod@divisor+3)^0,w,c
 16130   00635E  5A04               	subwfb	(___almod@dividend+3)^0,f,c
 16131   006360                     l6188:
 16132   006360  90D8               	bcf	status,0,c
 16133   006362  3208               	rrcf	(___almod@divisor+3)^0,f,c
 16134   006364  3207               	rrcf	(___almod@divisor+2)^0,f,c
 16135   006366  3206               	rrcf	(___almod@divisor+1)^0,f,c
 16136   006368  3205               	rrcf	___almod@divisor^0,f,c
 16137   00636A  2E09               	decfsz	___almod@counter^0,f,c
 16138   00636C  EF99  F031         	goto	l6184
 16139   006370                     l6192:
 16140   006370  500A               	movf	___almod@sign^0,w,c
 16141   006372  B4D8               	btfsc	status,2,c
 16142   006374  EFBE  F031         	goto	u7741
 16143   006378  EFC0  F031         	goto	u7740
 16144   00637C                     u7741:
 16145   00637C  EFC8  F031         	goto	l6196
 16146   006380                     u7740:
 16147   006380  1E04               	comf	(___almod@dividend+3)^0,f,c
 16148   006382  1E03               	comf	(___almod@dividend+2)^0,f,c
 16149   006384  1E02               	comf	(___almod@dividend+1)^0,f,c
 16150   006386  6C01               	negf	___almod@dividend^0,c
 16151   006388  0E00               	movlw	0
 16152   00638A  2202               	addwfc	(___almod@dividend+1)^0,f,c
 16153   00638C  2203               	addwfc	(___almod@dividend+2)^0,f,c
 16154   00638E  2204               	addwfc	(___almod@dividend+3)^0,f,c
 16155   006390                     l6196:
 16156   006390  C001  F001         	movff	___almod@dividend,?___almod
 16157   006394  C002  F002         	movff	___almod@dividend+1,?___almod+1
 16158   006398  C003  F003         	movff	___almod@dividend+2,?___almod+2
 16159   00639C  C004  F004         	movff	___almod@dividend+3,?___almod+3
 16160   0063A0  0012               	return		;funcret
 16161   0063A2                     __end_of___almod:
 16162                           	callstack 0
 16163                           
 16164 ;; *************** function ___aldiv *****************
 16165 ;; Defined at:
 16166 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
 16167 ;; Parameters:    Size  Location     Type
 16168 ;;  dividend        4    0[COMRAM] long 
 16169 ;;  divisor         4    4[COMRAM] long 
 16170 ;; Auto vars:     Size  Location     Type
 16171 ;;  quotient        4   10[COMRAM] long 
 16172 ;;  sign            1    9[COMRAM] unsigned char 
 16173 ;;  counter         1    8[COMRAM] unsigned char 
 16174 ;; Return value:  Size  Location     Type
 16175 ;;                  4    0[COMRAM] long 
 16176 ;; Registers used:
 16177 ;;		wreg, status,2, status,0
 16178 ;; Tracked objects:
 16179 ;;		On entry : 0/0
 16180 ;;		On exit  : 0/0
 16181 ;;		Unchanged: 0/0
 16182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16183 ;;      Params:         8       0       0       0       0       0       0       0       0
 16184 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16185 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16186 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16187 ;;Total ram usage:       14 bytes
 16188 ;; Hardware stack levels used: 1
 16189 ;; Hardware stack levels required when called: 1
 16190 ;; This function calls:
 16191 ;;		Nothing
 16192 ;; This function is called by:
 16193 ;;		_dtoa
 16194 ;; This function uses a non-reentrant model
 16195 ;;
 16196                           
 16197                           	psect	text45
 16198   005DA4                     __ptext45:
 16199                           	callstack 0
 16200   005DA4                     ___aldiv:
 16201                           	callstack 24
 16202   005DA4  6A0A               	clrf	___aldiv@sign^0,c
 16203   005DA6  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 16204   005DA8  EFDA  F02E         	goto	u7630
 16205   005DAC  EFD8  F02E         	goto	u7631
 16206   005DB0                     u7631:
 16207   005DB0  EFE4  F02E         	goto	l6128
 16208   005DB4                     u7630:
 16209   005DB4  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 16210   005DB6  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 16211   005DB8  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 16212   005DBA  6C05               	negf	___aldiv@divisor^0,c
 16213   005DBC  0E00               	movlw	0
 16214   005DBE  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 16215   005DC0  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 16216   005DC2  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 16217   005DC4  0E01               	movlw	1
 16218   005DC6  6E0A               	movwf	___aldiv@sign^0,c
 16219   005DC8                     l6128:
 16220   005DC8  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 16221   005DCA  EFEB  F02E         	goto	u7640
 16222   005DCE  EFE9  F02E         	goto	u7641
 16223   005DD2                     u7641:
 16224   005DD2  EFF5  F02E         	goto	l6134
 16225   005DD6                     u7640:
 16226   005DD6  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 16227   005DD8  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 16228   005DDA  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 16229   005DDC  6C01               	negf	___aldiv@dividend^0,c
 16230   005DDE  0E00               	movlw	0
 16231   005DE0  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 16232   005DE2  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 16233   005DE4  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 16234   005DE6  0E01               	movlw	1
 16235   005DE8  1A0A               	xorwf	___aldiv@sign^0,f,c
 16236   005DEA                     l6134:
 16237   005DEA  0E00               	movlw	0
 16238   005DEC  6E0B               	movwf	___aldiv@quotient^0,c
 16239   005DEE  0E00               	movlw	0
 16240   005DF0  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 16241   005DF2  0E00               	movlw	0
 16242   005DF4  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 16243   005DF6  0E00               	movlw	0
 16244   005DF8  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 16245   005DFA  5005               	movf	___aldiv@divisor^0,w,c
 16246   005DFC  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 16247   005DFE  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 16248   005E00  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 16249   005E02  B4D8               	btfsc	status,2,c
 16250   005E04  EF06  F02F         	goto	u7651
 16251   005E08  EF08  F02F         	goto	u7650
 16252   005E0C                     u7651:
 16253   005E0C  EF3E  F02F         	goto	l6156
 16254   005E10                     u7650:
 16255   005E10  0E01               	movlw	1
 16256   005E12  6E09               	movwf	___aldiv@counter^0,c
 16257   005E14  EF12  F02F         	goto	l6142
 16258   005E18                     l6140:
 16259   005E18  90D8               	bcf	status,0,c
 16260   005E1A  3605               	rlcf	___aldiv@divisor^0,f,c
 16261   005E1C  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 16262   005E1E  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 16263   005E20  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 16264   005E22  2A09               	incf	___aldiv@counter^0,f,c
 16265   005E24                     l6142:
 16266   005E24  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 16267   005E26  EF17  F02F         	goto	u7661
 16268   005E2A  EF19  F02F         	goto	u7660
 16269   005E2E                     u7661:
 16270   005E2E  EF0C  F02F         	goto	l6140
 16271   005E32                     u7660:
 16272   005E32                     l6144:
 16273   005E32  90D8               	bcf	status,0,c
 16274   005E34  360B               	rlcf	___aldiv@quotient^0,f,c
 16275   005E36  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 16276   005E38  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 16277   005E3A  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 16278   005E3C  5005               	movf	___aldiv@divisor^0,w,c
 16279   005E3E  5C01               	subwf	___aldiv@dividend^0,w,c
 16280   005E40  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16281   005E42  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 16282   005E44  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16283   005E46  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 16284   005E48  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16285   005E4A  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 16286   005E4C  A0D8               	btfss	status,0,c
 16287   005E4E  EF2B  F02F         	goto	u7671
 16288   005E52  EF2D  F02F         	goto	u7670
 16289   005E56                     u7671:
 16290   005E56  EF36  F02F         	goto	l6152
 16291   005E5A                     u7670:
 16292   005E5A  5005               	movf	___aldiv@divisor^0,w,c
 16293   005E5C  5E01               	subwf	___aldiv@dividend^0,f,c
 16294   005E5E  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16295   005E60  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 16296   005E62  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16297   005E64  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 16298   005E66  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16299   005E68  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 16300   005E6A  800B               	bsf	___aldiv@quotient^0,0,c
 16301   005E6C                     l6152:
 16302   005E6C  90D8               	bcf	status,0,c
 16303   005E6E  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 16304   005E70  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 16305   005E72  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 16306   005E74  3205               	rrcf	___aldiv@divisor^0,f,c
 16307   005E76  2E09               	decfsz	___aldiv@counter^0,f,c
 16308   005E78  EF19  F02F         	goto	l6144
 16309   005E7C                     l6156:
 16310   005E7C  500A               	movf	___aldiv@sign^0,w,c
 16311   005E7E  B4D8               	btfsc	status,2,c
 16312   005E80  EF44  F02F         	goto	u7681
 16313   005E84  EF46  F02F         	goto	u7680
 16314   005E88                     u7681:
 16315   005E88  EF4E  F02F         	goto	l6160
 16316   005E8C                     u7680:
 16317   005E8C  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 16318   005E8E  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 16319   005E90  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 16320   005E92  6C0B               	negf	___aldiv@quotient^0,c
 16321   005E94  0E00               	movlw	0
 16322   005E96  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 16323   005E98  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 16324   005E9A  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 16325   005E9C                     l6160:
 16326   005E9C  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 16327   005EA0  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 16328   005EA4  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 16329   005EA8  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 16330   005EAC  0012               	return		;funcret
 16331   005EAE                     __end_of___aldiv:
 16332                           	callstack 0
 16333                           
 16334 ;; *************** function _Handle_Commands *****************
 16335 ;; Defined at:
 16336 ;;		line 158 in file "newmain.c"
 16337 ;; Parameters:    Size  Location     Type
 16338 ;;		None
 16339 ;; Auto vars:     Size  Location     Type
 16340 ;;  cmd             1   14[COMRAM] unsigned char 
 16341 ;; Return value:  Size  Location     Type
 16342 ;;                  1    wreg      void 
 16343 ;; Registers used:
 16344 ;;		wreg, status,2, status,0, cstack
 16345 ;; Tracked objects:
 16346 ;;		On entry : 0/0
 16347 ;;		On exit  : 0/0
 16348 ;;		Unchanged: 0/0
 16349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16350 ;;      Params:         0       0       0       0       0       0       0       0       0
 16351 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16352 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16353 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16354 ;;Total ram usage:        5 bytes
 16355 ;; Hardware stack levels used: 1
 16356 ;; Hardware stack levels required when called: 2
 16357 ;; This function calls:
 16358 ;;		___fltol
 16359 ;; This function is called by:
 16360 ;;		_main
 16361 ;; This function uses a non-reentrant model
 16362 ;;
 16363                           
 16364                           	psect	text46
 16365   0058C6                     __ptext46:
 16366                           	callstack 0
 16367   0058C6                     _Handle_Commands:
 16368                           	callstack 28
 16369   0058C6                     
 16370                           ;newmain.c: 159:     if(PIR1bits.RCIF) {
 16371   0058C6  AA9E               	btfss	158,5,c	;volatile
 16372   0058C8  EF68  F02C         	goto	u10181
 16373   0058CC  EF6A  F02C         	goto	u10180
 16374   0058D0                     u10181:
 16375   0058D0  EFAD  F02C         	goto	l7794
 16376   0058D4                     u10180:
 16377   0058D4                     
 16378                           ;newmain.c: 160:         char cmd = RCREG;
 16379   0058D4  CFAE F00F          	movff	4014,Handle_Commands@cmd	;volatile
 16380                           
 16381                           ;newmain.c: 161:         switch(cmd) {
 16382   0058D8  EF9E  F02C         	goto	l7792
 16383   0058DC                     l7780:
 16384                           
 16385                           ;newmain.c: 163:                 if(!trigger_test) {
 16386   0058DC  0100               	movlb	0	; () banked
 16387   0058DE  51EE               	movf	_trigger_test& (0+255),w,b
 16388   0058E0  A4D8               	btfss	status,2,c
 16389   0058E2  EF75  F02C         	goto	u10191
 16390   0058E6  EF77  F02C         	goto	u10190
 16391   0058EA                     u10191:
 16392   0058EA  EFAD  F02C         	goto	l7794
 16393   0058EE                     u10190:
 16394   0058EE                     
 16395                           ; BSR set to: 0
 16396                           ;newmain.c: 164:                     trigger_test = 1;
 16397   0058EE  0E01               	movlw	1
 16398   0058F0  6FEE               	movwf	_trigger_test& (0+255),b
 16399   0058F2                     
 16400                           ; BSR set to: 0
 16401                           ;newmain.c: 165:                     test_start_time = system_millis;
 16402   0058F2  C2FA  F32C         	movff	_system_millis,_test_start_time
 16403   0058F6  C2FB  F32D         	movff	_system_millis+1,_test_start_time+1
 16404   0058FA  C2FC  F32E         	movff	_system_millis+2,_test_start_time+2
 16405   0058FE  C2FD  F32F         	movff	_system_millis+3,_test_start_time+3
 16406   005902                     
 16407                           ; BSR set to: 0
 16408                           ;newmain.c: 166:                     test_start_flow = total_flow;
 16409   005902  C330  F001         	movff	_total_flow,___fltol@f1
 16410   005906  C331  F002         	movff	_total_flow+1,___fltol@f1+1
 16411   00590A  C332  F003         	movff	_total_flow+2,___fltol@f1+2
 16412   00590E  C333  F004         	movff	_total_flow+3,___fltol@f1+3
 16413   005912  ECDA  F02F         	call	___fltol	;wreg free
 16414   005916  C001  F314         	movff	?___fltol,_test_start_flow
 16415   00591A  C002  F315         	movff	?___fltol+1,_test_start_flow+1
 16416   00591E  C003  F316         	movff	?___fltol+2,_test_start_flow+2
 16417   005922  C004  F317         	movff	?___fltol+3,_test_start_flow+3
 16418   005926  EFAD  F02C         	goto	l7794
 16419   00592A                     l7788:
 16420                           
 16421                           ;newmain.c: 170:                 shutdown_system = 1;
 16422   00592A  0E01               	movlw	1
 16423   00592C  0100               	movlb	0	; () banked
 16424   00592E  6FEF               	movwf	_shutdown_system& (0+255),b
 16425                           
 16426                           ;newmain.c: 171:                 break;
 16427   005930  EFAD  F02C         	goto	l7794
 16428   005934                     l170:
 16429                           
 16430                           ;newmain.c: 173:                 shutdown_system = 0;
 16431   005934  0100               	movlb	0	; () banked
 16432   005936  6BEF               	clrf	_shutdown_system& (0+255),b
 16433                           
 16434                           ;newmain.c: 174:                 break;
 16435   005938  EFAD  F02C         	goto	l7794
 16436   00593C                     l7792:
 16437   00593C  500F               	movf	Handle_Commands@cmd^0,w,c
 16438                           
 16439                           ; Switch size 1, requested type "simple"
 16440                           ; Number of cases is 3, Range of values is 82 to 84
 16441                           ; switch strategies available:
 16442                           ; Name         Instructions Cycles
 16443                           ; simple_byte           10     6 (average)
 16444                           ;	Chosen strategy is simple_byte
 16445   00593E  0A52               	xorlw	82	; case 82
 16446   005940  B4D8               	btfsc	status,2,c
 16447   005942  EF9A  F02C         	goto	l170
 16448   005946  0A01               	xorlw	1	; case 83
 16449   005948  B4D8               	btfsc	status,2,c
 16450   00594A  EF95  F02C         	goto	l7788
 16451   00594E  0A07               	xorlw	7	; case 84
 16452   005950  B4D8               	btfsc	status,2,c
 16453   005952  EF6E  F02C         	goto	l7780
 16454   005956  EFAD  F02C         	goto	l7794
 16455   00595A                     l7794:
 16456                           
 16457                           ;newmain.c: 179:     if(trigger_test) {
 16458   00595A  0100               	movlb	0	; () banked
 16459   00595C  51EE               	movf	_trigger_test& (0+255),w,b
 16460   00595E  B4D8               	btfsc	status,2,c
 16461   005960  EFB4  F02C         	goto	u10201
 16462   005964  EFB6  F02C         	goto	u10200
 16463   005968                     u10201:
 16464   005968  EF1F  F02D         	goto	l176
 16465   00596C                     u10200:
 16466   00596C                     
 16467                           ; BSR set to: 0
 16468                           ;newmain.c: 180:         PORTBbits.RB0 = 1;
 16469   00596C  8081               	bsf	129,0,c	;volatile
 16470   00596E                     
 16471                           ; BSR set to: 0
 16472                           ;newmain.c: 181:         pump_active = 1;
 16473   00596E  0E01               	movlw	1
 16474   005970  0103               	movlb	3	; () banked
 16475   005972  6F57               	movwf	_pump_active& (0+255),b
 16476   005974                     
 16477                           ; BSR set to: 3
 16478                           ;newmain.c: 184:         static unsigned long last_blink = 0;;newmain.c: 185:         if
      +                          (system_millis - last_blink >= 500) {
 16479   005974  5110               	movf	Handle_Commands@last_blink& (0+255),w,b
 16480   005976  0102               	movlb	2	; () banked
 16481   005978  5DFA               	subwf	_system_millis& (0+255),w,b
 16482   00597A  6E0B               	movwf	??_Handle_Commands^0,c
 16483   00597C  0103               	movlb	3	; () banked
 16484   00597E  5111               	movf	(Handle_Commands@last_blink+1)& (0+255),w,b
 16485   005980  0102               	movlb	2	; () banked
 16486   005982  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
 16487   005984  6E0C               	movwf	(??_Handle_Commands+1)^0,c
 16488   005986  0103               	movlb	3	; () banked
 16489   005988  5112               	movf	(Handle_Commands@last_blink+2)& (0+255),w,b
 16490   00598A  0102               	movlb	2	; () banked
 16491   00598C  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
 16492   00598E  6E0D               	movwf	(??_Handle_Commands+2)^0,c
 16493   005990  0103               	movlb	3	; () banked
 16494   005992  5113               	movf	(Handle_Commands@last_blink+3)& (0+255),w,b
 16495   005994  0102               	movlb	2	; () banked
 16496   005996  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
 16497   005998  6E0E               	movwf	(??_Handle_Commands+3)^0,c
 16498   00599A  500E               	movf	(??_Handle_Commands+3)^0,w,c
 16499   00599C  100D               	iorwf	(??_Handle_Commands+2)^0,w,c
 16500   00599E  E10B               	bnz	u10210
 16501   0059A0  0EF4               	movlw	244
 16502   0059A2  5C0B               	subwf	??_Handle_Commands^0,w,c
 16503   0059A4  0E01               	movlw	1
 16504   0059A6  580C               	subwfb	(??_Handle_Commands+1)^0,w,c
 16505   0059A8  A0D8               	btfss	status,0,c
 16506   0059AA  EFD9  F02C         	goto	u10211
 16507   0059AE  EFDB  F02C         	goto	u10210
 16508   0059B2                     u10211:
 16509   0059B2  EFF4  F02C         	goto	l7806
 16510   0059B6                     u10210:
 16511   0059B6                     
 16512                           ; BSR set to: 2
 16513                           ;newmain.c: 186:             PORTBbits.RB5 = !PORTBbits.RB5;
 16514   0059B6  AA81               	btfss	129,5,c	;volatile
 16515   0059B8  EFE0  F02C         	goto	u10221
 16516   0059BC  EFE4  F02C         	goto	u10220
 16517   0059C0                     u10221:
 16518   0059C0  6A0B               	clrf	??_Handle_Commands^0,c
 16519   0059C2  2A0B               	incf	??_Handle_Commands^0,f,c
 16520   0059C4  EFE5  F02C         	goto	u10238
 16521   0059C8                     u10220:
 16522   0059C8  6A0B               	clrf	??_Handle_Commands^0,c
 16523   0059CA                     u10238:
 16524   0059CA  3A0B               	swapf	??_Handle_Commands^0,f,c
 16525   0059CC  460B               	rlncf	??_Handle_Commands^0,f,c
 16526   0059CE  5081               	movf	129,w,c	;volatile
 16527   0059D0  180B               	xorwf	??_Handle_Commands^0,w,c
 16528   0059D2  0BDF               	andlw	-33
 16529   0059D4  180B               	xorwf	??_Handle_Commands^0,w,c
 16530   0059D6  6E81               	movwf	129,c	;volatile
 16531   0059D8                     
 16532                           ;newmain.c: 187:             last_blink = system_millis;
 16533   0059D8  C2FA  F310         	movff	_system_millis,Handle_Commands@last_blink
 16534   0059DC  C2FB  F311         	movff	_system_millis+1,Handle_Commands@last_blink+1
 16535   0059E0  C2FC  F312         	movff	_system_millis+2,Handle_Commands@last_blink+2
 16536   0059E4  C2FD  F313         	movff	_system_millis+3,Handle_Commands@last_blink+3
 16537   0059E8                     l7806:
 16538                           
 16539                           ;newmain.c: 189:         alarm_active = 1;
 16540   0059E8  0E01               	movlw	1
 16541   0059EA  0103               	movlb	3	; () banked
 16542   0059EC  6F56               	movwf	_alarm_active& (0+255),b
 16543   0059EE                     
 16544                           ; BSR set to: 3
 16545                           ;newmain.c: 192:         if((system_millis - test_start_time) >= TEST_DURATION) {
 16546   0059EE  512C               	movf	_test_start_time& (0+255),w,b
 16547   0059F0  0102               	movlb	2	; () banked
 16548   0059F2  5DFA               	subwf	_system_millis& (0+255),w,b
 16549   0059F4  6E0B               	movwf	??_Handle_Commands^0,c
 16550   0059F6  0103               	movlb	3	; () banked
 16551   0059F8  512D               	movf	(_test_start_time+1)& (0+255),w,b
 16552   0059FA  0102               	movlb	2	; () banked
 16553   0059FC  59FB               	subwfb	(_system_millis+1)& (0+255),w,b
 16554   0059FE  6E0C               	movwf	(??_Handle_Commands+1)^0,c
 16555   005A00  0103               	movlb	3	; () banked
 16556   005A02  512E               	movf	(_test_start_time+2)& (0+255),w,b
 16557   005A04  0102               	movlb	2	; () banked
 16558   005A06  59FC               	subwfb	(_system_millis+2)& (0+255),w,b
 16559   005A08  6E0D               	movwf	(??_Handle_Commands+2)^0,c
 16560   005A0A  0103               	movlb	3	; () banked
 16561   005A0C  512F               	movf	(_test_start_time+3)& (0+255),w,b
 16562   005A0E  0102               	movlb	2	; () banked
 16563   005A10  59FD               	subwfb	(_system_millis+3)& (0+255),w,b
 16564   005A12  6E0E               	movwf	(??_Handle_Commands+3)^0,c
 16565   005A14  500E               	movf	(??_Handle_Commands+3)^0,w,c
 16566   005A16  100D               	iorwf	(??_Handle_Commands+2)^0,w,c
 16567   005A18  E10B               	bnz	u10240
 16568   005A1A  0E10               	movlw	16
 16569   005A1C  5C0B               	subwf	??_Handle_Commands^0,w,c
 16570   005A1E  0E27               	movlw	39
 16571   005A20  580C               	subwfb	(??_Handle_Commands+1)^0,w,c
 16572   005A22  A0D8               	btfss	status,0,c
 16573   005A24  EF16  F02D         	goto	u10241
 16574   005A28  EF18  F02D         	goto	u10240
 16575   005A2C                     u10241:
 16576   005A2C  EF1F  F02D         	goto	l176
 16577   005A30                     u10240:
 16578   005A30                     
 16579                           ; BSR set to: 2
 16580                           ;newmain.c: 193:             trigger_test = 0;
 16581   005A30  0100               	movlb	0	; () banked
 16582   005A32  6BEE               	clrf	_trigger_test& (0+255),b
 16583                           
 16584                           ;newmain.c: 194:             PORTBbits.RB0 = 0;
 16585   005A34  9081               	bcf	129,0,c	;volatile
 16586                           
 16587                           ;newmain.c: 195:             PORTBbits.RB5 = 1;
 16588   005A36  8A81               	bsf	129,5,c	;volatile
 16589                           
 16590                           ;newmain.c: 196:             pump_active = 0;
 16591   005A38  0103               	movlb	3	; () banked
 16592   005A3A  6B57               	clrf	_pump_active& (0+255),b
 16593                           
 16594                           ;newmain.c: 197:             alarm_active = 0;
 16595   005A3C  6B56               	clrf	_alarm_active& (0+255),b
 16596   005A3E                     l176:
 16597   005A3E  0012               	return		;funcret
 16598   005A40                     __end_of_Handle_Commands:
 16599                           	callstack 0
 16600                           
 16601 ;; *************** function ___fltol *****************
 16602 ;; Defined at:
 16603 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 16604 ;; Parameters:    Size  Location     Type
 16605 ;;  f1              4    0[COMRAM] void 
 16606 ;; Auto vars:     Size  Location     Type
 16607 ;;  exp1            1    9[COMRAM] unsigned char 
 16608 ;;  sign1           1    8[COMRAM] unsigned char 
 16609 ;; Return value:  Size  Location     Type
 16610 ;;                  4    0[COMRAM] long 
 16611 ;; Registers used:
 16612 ;;		wreg, status,2, status,0
 16613 ;; Tracked objects:
 16614 ;;		On entry : 0/0
 16615 ;;		On exit  : 0/0
 16616 ;;		Unchanged: 0/0
 16617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16618 ;;      Params:         4       0       0       0       0       0       0       0       0
 16619 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16620 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16621 ;;      Totals:        10       0       0       0       0       0       0       0       0
 16622 ;;Total ram usage:       10 bytes
 16623 ;; Hardware stack levels used: 1
 16624 ;; Hardware stack levels required when called: 1
 16625 ;; This function calls:
 16626 ;;		Nothing
 16627 ;; This function is called by:
 16628 ;;		_Handle_Commands
 16629 ;;		_efgtoa
 16630 ;; This function uses a non-reentrant model
 16631 ;;
 16632                           
 16633                           	psect	text47
 16634   005FB4                     __ptext47:
 16635                           	callstack 0
 16636   005FB4                     ___fltol:
 16637                           	callstack 24
 16638   005FB4  3403               	rlcf	(___fltol@f1+2)^0,w,c
 16639   005FB6  3404               	rlcf	(___fltol@f1+3)^0,w,c
 16640   005FB8  6E0A               	movwf	___fltol@exp1^0,c
 16641   005FBA  500A               	movf	___fltol@exp1^0,w,c
 16642   005FBC  A4D8               	btfss	status,2,c
 16643   005FBE  EFE3  F02F         	goto	u8261
 16644   005FC2  EFE5  F02F         	goto	u8260
 16645   005FC6                     u8261:
 16646   005FC6  EFEF  F02F         	goto	l6522
 16647   005FCA                     u8260:
 16648   005FCA                     l6518:
 16649   005FCA  0E00               	movlw	0
 16650   005FCC  6E01               	movwf	?___fltol^0,c
 16651   005FCE  0E00               	movlw	0
 16652   005FD0  6E02               	movwf	(?___fltol+1)^0,c
 16653   005FD2  0E00               	movlw	0
 16654   005FD4  6E03               	movwf	(?___fltol+2)^0,c
 16655   005FD6  0E00               	movlw	0
 16656   005FD8  6E04               	movwf	(?___fltol+3)^0,c
 16657   005FDA  EF5C  F030         	goto	l570
 16658   005FDE                     l6522:
 16659   005FDE  C001  F005         	movff	___fltol@f1,??___fltol
 16660   005FE2  C002  F006         	movff	___fltol@f1+1,??___fltol+1
 16661   005FE6  C003  F007         	movff	___fltol@f1+2,??___fltol+2
 16662   005FEA  C004  F008         	movff	___fltol@f1+3,??___fltol+3
 16663   005FEE  0E20               	movlw	32
 16664   005FF0  EFFF  F02F         	goto	u8270
 16665   005FF4                     u8275:
 16666   005FF4  90D8               	bcf	status,0,c
 16667   005FF6  3208               	rrcf	(??___fltol+3)^0,f,c
 16668   005FF8  3207               	rrcf	(??___fltol+2)^0,f,c
 16669   005FFA  3206               	rrcf	(??___fltol+1)^0,f,c
 16670   005FFC  3205               	rrcf	??___fltol^0,f,c
 16671   005FFE                     u8270:
 16672   005FFE  2EE8               	decfsz	wreg,f,c
 16673   006000  EFFA  F02F         	goto	u8275
 16674   006004  5005               	movf	??___fltol^0,w,c
 16675   006006  6E09               	movwf	___fltol@sign1^0,c
 16676   006008  8E03               	bsf	(___fltol@f1+2)^0,7,c
 16677   00600A  0EFF               	movlw	255
 16678   00600C  1601               	andwf	___fltol@f1^0,f,c
 16679   00600E  0EFF               	movlw	255
 16680   006010  1602               	andwf	(___fltol@f1+1)^0,f,c
 16681   006012  0EFF               	movlw	255
 16682   006014  1603               	andwf	(___fltol@f1+2)^0,f,c
 16683   006016  0E00               	movlw	0
 16684   006018  1604               	andwf	(___fltol@f1+3)^0,f,c
 16685   00601A  0E96               	movlw	150
 16686   00601C  5E0A               	subwf	___fltol@exp1^0,f,c
 16687   00601E  BE0A               	btfsc	___fltol@exp1^0,7,c
 16688   006020  EF16  F030         	goto	u8280
 16689   006024  EF14  F030         	goto	u8281
 16690   006028                     u8281:
 16691   006028  EF2C  F030         	goto	l6542
 16692   00602C                     u8280:
 16693   00602C  500A               	movf	___fltol@exp1^0,w,c
 16694   00602E  0A80               	xorlw	128
 16695   006030  0F97               	addlw	151
 16696   006032  B0D8               	btfsc	status,0,c
 16697   006034  EF1E  F030         	goto	u8291
 16698   006038  EF20  F030         	goto	u8290
 16699   00603C                     u8291:
 16700   00603C  EF22  F030         	goto	l6538
 16701   006040                     u8290:
 16702   006040  EFE5  F02F         	goto	l6518
 16703   006044                     l6538:
 16704   006044  90D8               	bcf	status,0,c
 16705   006046  3204               	rrcf	(___fltol@f1+3)^0,f,c
 16706   006048  3203               	rrcf	(___fltol@f1+2)^0,f,c
 16707   00604A  3202               	rrcf	(___fltol@f1+1)^0,f,c
 16708   00604C  3201               	rrcf	___fltol@f1^0,f,c
 16709   00604E  3E0A               	incfsz	___fltol@exp1^0,f,c
 16710   006050  EF22  F030         	goto	l6538
 16711   006054  EF44  F030         	goto	l6552
 16712   006058                     l6542:
 16713   006058  0E1F               	movlw	31
 16714   00605A  640A               	cpfsgt	___fltol@exp1^0,c
 16715   00605C  EF32  F030         	goto	u8301
 16716   006060  EF34  F030         	goto	u8300
 16717   006064                     u8301:
 16718   006064  EF3C  F030         	goto	l6550
 16719   006068                     u8300:
 16720   006068  EFE5  F02F         	goto	l6518
 16721   00606C                     l6548:
 16722   00606C  90D8               	bcf	status,0,c
 16723   00606E  3601               	rlcf	___fltol@f1^0,f,c
 16724   006070  3602               	rlcf	(___fltol@f1+1)^0,f,c
 16725   006072  3603               	rlcf	(___fltol@f1+2)^0,f,c
 16726   006074  3604               	rlcf	(___fltol@f1+3)^0,f,c
 16727   006076  060A               	decf	___fltol@exp1^0,f,c
 16728   006078                     l6550:
 16729   006078  500A               	movf	___fltol@exp1^0,w,c
 16730   00607A  A4D8               	btfss	status,2,c
 16731   00607C  EF42  F030         	goto	u8311
 16732   006080  EF44  F030         	goto	u8310
 16733   006084                     u8311:
 16734   006084  EF36  F030         	goto	l6548
 16735   006088                     u8310:
 16736   006088                     l6552:
 16737   006088  5009               	movf	___fltol@sign1^0,w,c
 16738   00608A  B4D8               	btfsc	status,2,c
 16739   00608C  EF4A  F030         	goto	u8321
 16740   006090  EF4C  F030         	goto	u8320
 16741   006094                     u8321:
 16742   006094  EF54  F030         	goto	l6556
 16743   006098                     u8320:
 16744   006098  1E04               	comf	(___fltol@f1+3)^0,f,c
 16745   00609A  1E03               	comf	(___fltol@f1+2)^0,f,c
 16746   00609C  1E02               	comf	(___fltol@f1+1)^0,f,c
 16747   00609E  6C01               	negf	___fltol@f1^0,c
 16748   0060A0  0E00               	movlw	0
 16749   0060A2  2202               	addwfc	(___fltol@f1+1)^0,f,c
 16750   0060A4  2203               	addwfc	(___fltol@f1+2)^0,f,c
 16751   0060A6  2204               	addwfc	(___fltol@f1+3)^0,f,c
 16752   0060A8                     l6556:
 16753   0060A8  C001  F001         	movff	___fltol@f1,?___fltol
 16754   0060AC  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 16755   0060B0  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 16756   0060B4  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 16757   0060B8                     l570:
 16758   0060B8  0012               	return		;funcret
 16759   0060BA                     __end_of___fltol:
 16760                           	callstack 0
 16761                           
 16762 ;; *************** function _ADC_Init *****************
 16763 ;; Defined at:
 16764 ;;		line 402 in file "newmain.c"
 16765 ;; Parameters:    Size  Location     Type
 16766 ;;		None
 16767 ;; Auto vars:     Size  Location     Type
 16768 ;;		None
 16769 ;; Return value:  Size  Location     Type
 16770 ;;                  1    wreg      void 
 16771 ;; Registers used:
 16772 ;;		wreg, status,2
 16773 ;; Tracked objects:
 16774 ;;		On entry : 0/0
 16775 ;;		On exit  : 0/0
 16776 ;;		Unchanged: 0/0
 16777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16778 ;;      Params:         0       0       0       0       0       0       0       0       0
 16779 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16780 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16781 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16782 ;;Total ram usage:        0 bytes
 16783 ;; Hardware stack levels used: 1
 16784 ;; Hardware stack levels required when called: 1
 16785 ;; This function calls:
 16786 ;;		Nothing
 16787 ;; This function is called by:
 16788 ;;		_main
 16789 ;; This function uses a non-reentrant model
 16790 ;;
 16791                           
 16792                           	psect	text48
 16793   006E00                     __ptext48:
 16794                           	callstack 0
 16795   006E00                     _ADC_Init:
 16796                           	callstack 29
 16797   006E00                     
 16798                           ;newmain.c: 403:     TRISA0 = TRISA1 = TRISA2 = 1;
 16799   006E00  8492               	bsf	3986,2,c	;volatile
 16800   006E02  8292               	bsf	3986,1,c	;volatile
 16801   006E04  8092               	bsf	3986,0,c	;volatile
 16802                           
 16803                           ;newmain.c: 404:     ADCON0bits.ADON = 1;
 16804   006E06  80C2               	bsf	194,0,c	;volatile
 16805   006E08                     
 16806                           ;newmain.c: 405:     ADCON1 = 0x0C;
 16807   006E08  0E0C               	movlw	12
 16808   006E0A  6EC1               	movwf	193,c	;volatile
 16809                           
 16810                           ;newmain.c: 406:     ADCON2 = 0xBE;
 16811   006E0C  0EBE               	movlw	190
 16812   006E0E  6EC0               	movwf	192,c	;volatile
 16813   006E10  0012               	return		;funcret
 16814   006E12                     __end_of_ADC_Init:
 16815                           	callstack 0
 16816                           
 16817 ;; *************** function _HighISR *****************
 16818 ;; Defined at:
 16819 ;;		line 91 in file "newmain.c"
 16820 ;; Parameters:    Size  Location     Type
 16821 ;;		None
 16822 ;; Auto vars:     Size  Location     Type
 16823 ;;		None
 16824 ;; Return value:  Size  Location     Type
 16825 ;;                  1    wreg      void 
 16826 ;; Registers used:
 16827 ;;		status,2, status,0
 16828 ;; Tracked objects:
 16829 ;;		On entry : 0/0
 16830 ;;		On exit  : 0/0
 16831 ;;		Unchanged: 0/0
 16832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16833 ;;      Params:         0       0       0       0       0       0       0       0       0
 16834 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16835 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16836 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16837 ;;Total ram usage:        0 bytes
 16838 ;; Hardware stack levels used: 1
 16839 ;; This function calls:
 16840 ;;		Nothing
 16841 ;; This function is called by:
 16842 ;;		Interrupt level 2
 16843 ;; This function uses a non-reentrant model
 16844 ;;
 16845                           
 16846                           	psect	intcode
 16847   000008                     __pintcode:
 16848                           	callstack 0
 16849   000008                     _HighISR:
 16850                           	callstack 20
 16851                           
 16852                           ;incstack = 0
 16853   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16854   00000A  EDDC  F036         	call	int_func,f	;refresh shadow registers
 16855                           
 16856                           	psect	intcode_body
 16857   006DB8                     __pintcode_body:
 16858                           	callstack 20
 16859   006DB8                     int_func:
 16860                           	callstack 20
 16861   006DB8  0006               	pop		; remove dummy address from shadow register refresh
 16862   006DBA                     
 16863                           ;newmain.c: 92:     if (INTCON3bits.INT1IF) {
 16864   006DBA  A0F0               	btfss	240,0,c	;volatile
 16865   006DBC  EFE2  F036         	goto	i2u709_41
 16866   006DC0  EFE4  F036         	goto	i2u709_40
 16867   006DC4                     i2u709_41:
 16868   006DC4  EFE8  F036         	goto	i2l146
 16869   006DC8                     i2u709_40:
 16870   006DC8                     
 16871                           ;newmain.c: 93:         pulse_count++;
 16872   006DC8  0103               	movlb	3	; () banked
 16873   006DCA  4B4E               	infsnz	_pulse_count& (0+255),f,b	;volatile
 16874   006DCC  2B4F               	incf	(_pulse_count+1)& (0+255),f,b	;volatile
 16875   006DCE                     
 16876                           ; BSR set to: 3
 16877                           ;newmain.c: 94:         INTCON3bits.INT1IF = 0;
 16878   006DCE  90F0               	bcf	240,0,c	;volatile
 16879   006DD0                     i2l146:
 16880   006DD0  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16881   006DD2  0011               	retfie		f
 16882   006DD4                     __end_of_HighISR:
 16883                           	callstack 0
 16884                           
 16885                           	psect	rparam
 16886   000001                     ___rparam_used  equ	1
 16887   000000                     ___param_bank   equ	0
 16888   000000                     __Lparam        equ	__Lrparam
 16889   000000                     __Hparam        equ	__Hrparam
 16890                           
 16891                           	psect	temp
 16892   00005F                     btemp:
 16893                           	callstack 0
 16894   00005F                     	ds	1
 16895   00005F                     int$flags       set	btemp
 16896   000060                     wtemp8          set	btemp+1
 16897   000060                     ttemp5          set	btemp+1
 16898   000063                     ttemp6          set	btemp+4
 16899   000067                     ttemp7          set	btemp+8
 16900                           
 16901                           	psect	idloc
 16902                           
 16903                           ;Config register IDLOC0 @ 0x200000
 16904                           ;	unspecified, using default values
 16905   200000                     	org	2097152
 16906   200000  FF                 	db	255
 16907                           
 16908                           ;Config register IDLOC1 @ 0x200001
 16909                           ;	unspecified, using default values
 16910   200001                     	org	2097153
 16911   200001  FF                 	db	255
 16912                           
 16913                           ;Config register IDLOC2 @ 0x200002
 16914                           ;	unspecified, using default values
 16915   200002                     	org	2097154
 16916   200002  FF                 	db	255
 16917                           
 16918                           ;Config register IDLOC3 @ 0x200003
 16919                           ;	unspecified, using default values
 16920   200003                     	org	2097155
 16921   200003  FF                 	db	255
 16922                           
 16923                           ;Config register IDLOC4 @ 0x200004
 16924                           ;	unspecified, using default values
 16925   200004                     	org	2097156
 16926   200004  FF                 	db	255
 16927                           
 16928                           ;Config register IDLOC5 @ 0x200005
 16929                           ;	unspecified, using default values
 16930   200005                     	org	2097157
 16931   200005  FF                 	db	255
 16932                           
 16933                           ;Config register IDLOC6 @ 0x200006
 16934                           ;	unspecified, using default values
 16935   200006                     	org	2097158
 16936   200006  FF                 	db	255
 16937                           
 16938                           ;Config register IDLOC7 @ 0x200007
 16939                           ;	unspecified, using default values
 16940   200007                     	org	2097159
 16941   200007  FF                 	db	255
 16942                           
 16943                           	psect	config
 16944                           
 16945                           ;Config register CONFIG1L @ 0x300000
 16946                           ;	unspecified, using default values
 16947                           ;	PLL Prescaler Selection bits
 16948                           ;	PLLDIV = 0x0, unprogrammed default
 16949                           ;	System Clock Postscaler Selection bits
 16950                           ;	CPUDIV = 0x0, unprogrammed default
 16951                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 16952                           ;	USBDIV = 0x0, unprogrammed default
 16953   300000                     	org	3145728
 16954   300000  00                 	db	0
 16955                           
 16956                           ;Config register CONFIG1H @ 0x300001
 16957                           ;	Oscillator Selection bits
 16958                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
 16959                           ;	Fail-Safe Clock Monitor Enable bit
 16960                           ;	FCMEN = 0x0, unprogrammed default
 16961                           ;	Internal/External Oscillator Switchover bit
 16962                           ;	IESO = 0x0, unprogrammed default
 16963   300001                     	org	3145729
 16964   300001  08                 	db	8
 16965                           
 16966                           ;Config register CONFIG2L @ 0x300002
 16967                           ;	Power-up Timer Enable bit
 16968                           ;	PWRT = ON, PWRT enabled
 16969                           ;	Brown-out Reset Enable bits
 16970                           ;	BOR = 0x3, unprogrammed default
 16971                           ;	Brown-out Reset Voltage bits
 16972                           ;	BORV = 0x3, unprogrammed default
 16973                           ;	USB Voltage Regulator Enable bit
 16974                           ;	VREGEN = 0x0, unprogrammed default
 16975   300002                     	org	3145730
 16976   300002  1E                 	db	30
 16977                           
 16978                           ;Config register CONFIG2H @ 0x300003
 16979                           ;	Watchdog Timer Enable bit
 16980                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16981                           ;	Watchdog Timer Postscale Select bits
 16982                           ;	WDTPS = 0xF, unprogrammed default
 16983   300003                     	org	3145731
 16984   300003  1E                 	db	30
 16985                           
 16986                           ; Padding undefined space
 16987   300004                     	org	3145732
 16988   300004  FF                 	db	255
 16989                           
 16990                           ;Config register CONFIG3H @ 0x300005
 16991                           ;	CCP2 MUX bit
 16992                           ;	CCP2MX = 0x1, unprogrammed default
 16993                           ;	PORTB A/D Enable bit
 16994                           ;	PBADEN = 0x1, unprogrammed default
 16995                           ;	Low-Power Timer 1 Oscillator Enable bit
 16996                           ;	LPT1OSC = 0x0, unprogrammed default
 16997                           ;	MCLR Pin Enable bit
 16998                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 16999   300005                     	org	3145733
 17000   300005  83                 	db	131
 17001                           
 17002                           ;Config register CONFIG4L @ 0x300006
 17003                           ;	Stack Full/Underflow Reset Enable bit
 17004                           ;	STVREN = 0x1, unprogrammed default
 17005                           ;	Single-Supply ICSP Enable bit
 17006                           ;	LVP = OFF, Single-Supply ICSP disabled
 17007                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 17008                           ;	ICPRT = 0x0, unprogrammed default
 17009                           ;	Extended Instruction Set Enable bit
 17010                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17011                           ;	Background Debugger Enable bit
 17012                           ;	DEBUG = 0x1, unprogrammed default
 17013   300006                     	org	3145734
 17014   300006  81                 	db	129
 17015                           
 17016                           ; Padding undefined space
 17017   300007                     	org	3145735
 17018   300007  FF                 	db	255
 17019                           
 17020                           ;Config register CONFIG5L @ 0x300008
 17021                           ;	unspecified, using default values
 17022                           ;	Code Protection bit
 17023                           ;	CP0 = 0x1, unprogrammed default
 17024                           ;	Code Protection bit
 17025                           ;	CP1 = 0x1, unprogrammed default
 17026                           ;	Code Protection bit
 17027                           ;	CP2 = 0x1, unprogrammed default
 17028                           ;	Code Protection bit
 17029                           ;	CP3 = 0x1, unprogrammed default
 17030   300008                     	org	3145736
 17031   300008  0F                 	db	15
 17032                           
 17033                           ;Config register CONFIG5H @ 0x300009
 17034                           ;	unspecified, using default values
 17035                           ;	Boot Block Code Protection bit
 17036                           ;	CPB = 0x1, unprogrammed default
 17037                           ;	Data EEPROM Code Protection bit
 17038                           ;	CPD = 0x1, unprogrammed default
 17039   300009                     	org	3145737
 17040   300009  C0                 	db	192
 17041                           
 17042                           ;Config register CONFIG6L @ 0x30000A
 17043                           ;	unspecified, using default values
 17044                           ;	Write Protection bit
 17045                           ;	WRT0 = 0x1, unprogrammed default
 17046                           ;	Write Protection bit
 17047                           ;	WRT1 = 0x1, unprogrammed default
 17048                           ;	Write Protection bit
 17049                           ;	WRT2 = 0x1, unprogrammed default
 17050                           ;	Write Protection bit
 17051                           ;	WRT3 = 0x1, unprogrammed default
 17052   30000A                     	org	3145738
 17053   30000A  0F                 	db	15
 17054                           
 17055                           ;Config register CONFIG6H @ 0x30000B
 17056                           ;	unspecified, using default values
 17057                           ;	Configuration Register Write Protection bit
 17058                           ;	WRTC = 0x1, unprogrammed default
 17059                           ;	Boot Block Write Protection bit
 17060                           ;	WRTB = 0x1, unprogrammed default
 17061                           ;	Data EEPROM Write Protection bit
 17062                           ;	WRTD = 0x1, unprogrammed default
 17063   30000B                     	org	3145739
 17064   30000B  E0                 	db	224
 17065                           
 17066                           ;Config register CONFIG7L @ 0x30000C
 17067                           ;	unspecified, using default values
 17068                           ;	Table Read Protection bit
 17069                           ;	EBTR0 = 0x1, unprogrammed default
 17070                           ;	Table Read Protection bit
 17071                           ;	EBTR1 = 0x1, unprogrammed default
 17072                           ;	Table Read Protection bit
 17073                           ;	EBTR2 = 0x1, unprogrammed default
 17074                           ;	Table Read Protection bit
 17075                           ;	EBTR3 = 0x1, unprogrammed default
 17076   30000C                     	org	3145740
 17077   30000C  0F                 	db	15
 17078                           
 17079                           ;Config register CONFIG7H @ 0x30000D
 17080                           ;	unspecified, using default values
 17081                           ;	Boot Block Table Read Protection bit
 17082                           ;	EBTRB = 0x1, unprogrammed default
 17083   30000D                     	org	3145741
 17084   30000D  40                 	db	64
 17085                           tosu	equ	0xFFF
 17086                           tosh	equ	0xFFE
 17087                           tosl	equ	0xFFD
 17088                           stkptr	equ	0xFFC
 17089                           pclatu	equ	0xFFB
 17090                           pclath	equ	0xFFA
 17091                           pcl	equ	0xFF9
 17092                           tblptru	equ	0xFF8
 17093                           tblptrh	equ	0xFF7
 17094                           tblptrl	equ	0xFF6
 17095                           tablat	equ	0xFF5
 17096                           prodh	equ	0xFF4
 17097                           prodl	equ	0xFF3
 17098                           indf0	equ	0xFEF
 17099                           postinc0	equ	0xFEE
 17100                           postdec0	equ	0xFED
 17101                           preinc0	equ	0xFEC
 17102                           plusw0	equ	0xFEB
 17103                           fsr0h	equ	0xFEA
 17104                           fsr0l	equ	0xFE9
 17105                           wreg	equ	0xFE8
 17106                           indf1	equ	0xFE7
 17107                           postinc1	equ	0xFE6
 17108                           postdec1	equ	0xFE5
 17109                           preinc1	equ	0xFE4
 17110                           plusw1	equ	0xFE3
 17111                           fsr1h	equ	0xFE2
 17112                           fsr1l	equ	0xFE1
 17113                           bsr	equ	0xFE0
 17114                           indf2	equ	0xFDF
 17115                           postinc2	equ	0xFDE
 17116                           postdec2	equ	0xFDD
 17117                           preinc2	equ	0xFDC
 17118                           plusw2	equ	0xFDB
 17119                           fsr2h	equ	0xFDA
 17120                           fsr2l	equ	0xFD9
 17121                           status	equ	0xFD8

Data Sizes:
    Strings     294
    Constant    116
    Data        24
    BSS         217
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    142     144
    BANK1           256    256     256
    BANK2           256    250     256
    BANK3           256     18     250
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Apply_Filter@samples	PTR float  size(2) Largest target is 20
		 -> co_samples(BANK3[20]), temp_samples(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[150]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[150]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1239$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[150]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    S1239$source	PTR const unsigned char  size(2) Largest target is 0

    Send_History_Event@event_type	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[9]), STR_12(CODE[9]), STR_14(CODE[7]), STR_5(CODE[11]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), 

    Send_History_Event@extra_data	PTR const unsigned char  size(2) Largest target is 150
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), STR_13(CODE[1]), 
		 -> STR_15(CODE[1]), STR_9(CODE[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 107
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[107]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), Send_Data@buffer(BANK1[150]), 
		 -> Send_History_Event@buffer(BANK1[200]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 150
		 -> fire_trigger_sensor(BANK3[20]), Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), 
		 -> ?_sprintf(BANK0[2]), STR_11(CODE[9]), STR_12(CODE[9]), STR_13(CODE[1]), 
		 -> STR_14(CODE[7]), STR_15(CODE[1]), STR_24(CODE[7]), STR_5(CODE[11]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), STR_9(CODE[1]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 150
		 -> fire_trigger_sensor(BANK3[20]), Handle_Fire_Events@end_data(BANK2[150]), Handle_Fire_Events@start_data(BANK2[100]), Handle_Test_Events@test_data(BANK1[50]), 
		 -> ?_sprintf(BANK0[2]), STR_11(CODE[9]), STR_12(CODE[9]), STR_13(CODE[1]), 
		 -> STR_14(CODE[7]), STR_15(CODE[1]), STR_5(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[11]), STR_9(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), fire_trigger_sensor(BANK3[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[13]), STR_18(CODE[4]), STR_2(CODE[19]), STR_21(CODE[4]), 
		 -> STR_3(CODE[10]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 107
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[107]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 107
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[107]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 107
		 -> STR_10(CODE[14]), STR_16(CODE[30]), STR_17(CODE[107]), STR_4(CODE[15]), 
		 -> STR_6(CODE[29]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _main->_Update_Actuators
    _Update_Actuators->___flge
    _Read_Sensors->___flge
    _powf->___flge
    _scalbnf->___flmul
    _Apply_Filter->___fladd
    _Handle_Fire_Events->___flge
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flsub
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod
    _Handle_Commands->___fltol

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Handle_Fire_Events
    _Update_Actuators->___flge
    _Send_Data->_sprintf
    _Read_Sensors->_powf
    _powf->___flge
    _Handle_Test_Events->_Send_History_Event
    _Handle_Shutdown_Events->_Send_History_Event
    _Handle_Fire_Events->_Send_History_Event
    _Send_History_Event->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Handle_Test_Events
    _Read_Sensors->_powf
    _Handle_Test_Events->_Send_History_Event
    _Handle_Shutdown_Events->_Send_History_Event
    _Handle_Fire_Events->_Send_History_Event

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Handle_Fire_Events

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0  219393
                                            140 BANK0      2     2      0
                                              0 BANK3     18    18      0
                           _ADC_Init
                           _ADC_Read
                    _Handle_Commands
                 _Handle_Fire_Events
             _Handle_Shutdown_Events
                 _Handle_Test_Events
                     _Interrupt_Init
                       _Read_Sensors
                          _Send_Data
                          _UART_Init
                   _Update_Actuators
                            ___awmod
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     439
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Update_Actuators                                     5     5      0     393
                                             92 COMRAM     1     1      0
                                              8 BANK0      4     4      0
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send_Data                                          152   152      0   25781
                                              0 BANK1    152   152      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Read_Sensors                                        52    52      0   43001
                                             25 BANK0     52    52      0
                           _ADC_Read
                       _Apply_Filter
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   25063
                                              8 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               41    37      4    1070
                                              0 COMRAM    37    33      4
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    3081
                                             39 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _Apply_Filter                                        14     8      6    5293
                                             80 COMRAM     8     2      6
                                              0 BANK0      6     6      0
                            ___fladd
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Test_Events                                  56    56      0   55602
                                            130 BANK0      2     2      0
                                            202 BANK1     54    54      0
                 _Send_History_Event
                            ___flsub
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     532
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Handle_Shutdown_Events                               0     0      0   25879
                 _Send_History_Event
 ---------------------------------------------------------------------------------
 (1) _Handle_Fire_Events                                 260   260      0   55926
                                            130 BANK0     10    10      0
                                              0 BANK2    250   250      0
                 _Send_History_Event
                             ___flge
                            ___flsub
                            ___lldiv
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Send_History_Event                                 206   202      4   25879
                                            126 BANK0      4     0      4
                                              0 BANK1    202   202      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             48    14     34   25602
                                             80 BANK0     46    12     34
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4   25224
                                             74 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   24958
                                             60 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                11     6      5    1899
                                             22 COMRAM    11     6      5
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     238
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     253
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _stoa                                                11     8      3     647
                                              8 COMRAM    11     8      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     266
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   17467
                                              8 BANK0     52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     133
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     217
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     102
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     495
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     201
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    3475
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3188
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      74
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2571
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     356
                                             88 COMRAM     4     4      0
                                              0 BANK0      8     0      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     142
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1833
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                14     9      5    2629
                                             22 COMRAM    14     9      5
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    1068
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3     487
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     341
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      96
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     439
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     451
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Handle_Commands                                      5     5      0     383
                                             10 COMRAM     5     5      0
                            ___fltol
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     349
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Handle_Commands
     ___fltol
   _Handle_Fire_Events
     _Send_History_Event
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aldiv
               ___almod
               _abs
                 ___almod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _efgtoa
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                 ___xxtofl (ARG)
               ___fldiv
               ___fleq
               ___flge
                 ___fladd (ARG)
                 ___flmul (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___fldiv (ARG)
                   ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul
               ___flneg
               ___flsub
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
               _strcpy
             _fputc
             _read_prec_or_width
             _stoa
               _fputc
             _utoa
               ___lldiv
               ___llmod
               _pad
     ___flge
     ___flsub
     ___lldiv
     _sprintf
     _strcpy
   _Handle_Shutdown_Events
     _Send_History_Event
   _Handle_Test_Events
     _Send_History_Event
     ___flsub
     ___xxtofl
     _sprintf
   _Interrupt_Init
   _Read_Sensors
     _ADC_Read
     _Apply_Filter
       ___fladd
       ___fldiv
     ___fladd
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___xxtofl
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
   _Send_Data
     _sprintf
   _UART_Init
   _Update_Actuators
     ___flge
   ___awmod
   ___fladd
   ___fldiv
   ___flmul
   ___flsub
   ___xxtofl

 _HighISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256     18     250     97.7%
BITBANK2           256      0       0      0.0%
BANK2              256    250     256    100.0%
BITBANK1           256      0       0      0.0%
BANK1              256    256     256    100.0%
BITBANK0           160      0       0      0.0%
BANK0              160    142     144     90.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     93      94    100.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     998      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Jul 06 23:57:51 2025

                   ??_Interrupt_Init 0001                         ___fldiv@aexp 0040  
                       ___fldiv@bexp 003F                          _pump_active 0357  
                       ___fldiv@sign 0038                    _Read_Sensors$1834 0089  
                  _Read_Sensors$1835 008D                    _Read_Sensors$1836 0091  
                                 _L1 7EC1                                   _L2 7EBD  
                                 _L3 7EB9                                   _L4 7EB5  
                                 _L5 7EB1                                   _L6 7EAD  
                                 _P1 7EA9                                   _P2 7EA5  
                                 _P3 7EA1                                   _P4 7E9D  
                                 _P5 7E99                                   _bp 7E75  
                                 _cp 7E85                          _pulse_count 034E  
                                l200 6A62                                  l203 6904  
                                l300 68BC                                  l212 6960  
                                l208 6930                                  l216 30EC  
                                l233 6488                                  l170 5934  
                                l307 68CC                                  l251 653A  
                                l243 5B6C                                  l228 35BE  
                                l261 6CAE                                  l237 5AC0  
                                l246 650E                                  l270 6DFE  
                                l238 5B64                                  l255 656A  
                                l176 5A3E                                  l352 5EAC  
                                l264 6CD2                                  l193 5C8A  
                                l258 6E10                                  l186 5126  
                                l267 6E20                                  l532 6828  
                                l700 69E8                                  l365 63A0  
                                l517 66D2                                  l543 5FB2  
                                l801 3CB6                                  l570 60B8  
                                l538 5F6C                                  l810 3F82  
                                l802 3CA4                                  l547 6D82  
                                l803 3C6A                                  l815 3E5E  
                                l904 436A                                  l834 3F46  
                                l818 3DD0                                  l827 3E9E  
                                l843 6C4C                                  l931 5720  
                                l860 493E                                  l828 3E8C  
                                l693 69D8                                  l942 56B8  
                                l855 4B16                                  l951 6C90  
                                l935 565C                                  l928 55C4  
                                l857 497A                                  l866 49C0  
                                l867 49DE                                  l891 43A8  
                                l980 6A7A                                  l868 4A36  
                                l869 4A24                                  l990 575A  
                                l894 423E                                  l991 57A0  
                                l895 425C                                  l887 4048  
                                l984 6AC8                                  l896 42B4  
                                l897 42A2                                  l988 5752  
                                _lg2 7E95                                  _abs 6D84  
                                _pad 6A64                                  _ovt 7E89  
                       ___awmod@sign 0006                                  wreg 0FE8  
         __end_of_Handle_Test_Events 5C8C                         ___flmul@aexp 001C  
                       ___flmul@bexp 0021                         ___flmul@sign 001B  
                       ___flmul@temp 0026                         ___flmul@prod 0022  
                       ___fltol@exp1 000A                                 l1002 58C4  
                               l1013 2EB6                                 l1016 2856  
                               l1105 3ACC                                 l1018 269A  
                               l1106 3854                                 ?_abs 000B  
                               l1205 6D12                                 l1125 398A  
                               l1141 6C06                                 l1046 2C9E  
                               l1062 615E                                 l1070 5CA8  
                               l1151 62B6                                 l1072 5CB0  
                               l1082 6776                                 l1066 61B8  
                               l1331 248A                                 l1156 6D9E  
                               l1165 556C                                 l1086 677E  
                               l1078 5DA2                                 l1270 02F4  
                               l1159 6DB6                                 l1168 54B0  
                               l1280 038A                                 l1185 6BBE  
                               l1097 367A                                 l1361 458E  
                               l1265 24C6                                 l1338 6E22  
                               l1370 471E                                 l1290 044C  
                               l1179 6B1E                                 l1348 535A  
                               l1197 6624                                 l1365 45EC  
                               l1357 4786                                 l1294 04FE  
                               l1376 6D4A                                 l1368 46B0  
                               l1298 055C                                 l6000 3D06  
                               l6010 3D34                                 l6002 3D14  
                               l6020 3DA0                                 l6012 3D3E  
                               l6004 3D20                                 l6100 683A  
                               l6022 3DB0                                 l6006 3D24  
                               l6014 3D44                                 l6110 687C  
                               l6102 6850                                 l6120 5DA4  
                               l6200 4788                                 l6040 3E32  
                               l6032 3E0A                                 l6016 3D6A  
                               l6024 3DC0                                 l6008 3D32  
                               l6112 689A                                 l6104 6858  
                               l7000 3628                                 l6130 5DD6  
                               l6122 5DA6                                 l6210 47C4  
                               l6202 4794                                 l6050 3E6E  
                               l6042 3E3A                                 l6034 3E14  
                               l6026 3DE6                                 l6018 3D9E  
                               l6114 68AA                                 l6106 6864  
                               l7010 3672                                 l7002 3634  
                               l6140 5E18                                 l6132 5DE6  
                               l6124 5DB4                                 l6220 47F2  
                               l6212 47D4                                 l6204 47A2  
                               l6060 3EC8                                 l6052 3E84  
                               l6044 3E3E                                 l6036 3E22  
                               l6028 3DF6                                 l6116 68AC  
                               l6108 6872                                 l7100 3A56  
                               l7020 36E2                                 l7004 3648  
                               l6150 5E6A                                 l6142 5E24  
                               l6134 5DEA                                 l6126 5DC4  
                               l6302 4A46                                 l6310 4A8E  
                               l6230 4828                                 l6222 47F8  
                               l6214 47D6                                 l6206 47A4  
                               l6070 3F44                                 l6062 3F02  
                               l6046 3E4E                                 l6038 3E24  
                               l6118 68B6                                 l7030 3760  
                               l7022 370A                                 l7014 3680  
                               l7006 3658                                 ?_pad 000F  
                               l6160 5E9C                                 l6152 5E6C  
                               l6144 5E32                                 l6136 5DFA  
                               l6128 5DC8                                 l6320 4AF2  
                               l6312 4AA8                                 l6304 4A52  
                               l6240 4866                                 l6232 4838  
                               l6224 4806                                 l6208 47B4  
                               l6216 47DC                                 l6400 412A  
                               l6080 3F70                                 l6072 3F54  
                               l6056 3EAE                                 l6064 3F04  
                               l6048 3E50                                 l7016 36A6  
                               l7008 366A                                 l7112 3AAA  
                               l7120 6BCC                                 l7200 444E  
                               l8000 6636                                 l6154 5E76  
                               l6146 5E3C                                 l6138 5E10  
                               l6170 62D8                                 l6090 6CEE  
                               l6322 4AF6                                 l6314 4ABE  
                               l6306 4A60                                 l6242 4876  
                               l6250 4896                                 l6234 483A  
                               l6226 4808                                 l6218 47EC  
                               l6410 4198                                 l6402 4144  
                               l6082 3F72                                 l6074 3F5A  
                               l6066 3F14                                 l6058 3EBA  
                               l7106 3A80                                 l7042 37EC  
                               l7034 377C                                 l7018 36C2  
                               l7026 3730                                 l7122 6BE0  
                               l7130 6C5C                                 l7210 44BC  
                               l7202 446C                                 l8010 666A  
                               l8002 663E                                 l6148 5E5A  
                               l6156 5E7C                                 l6180 6318  
                               l6172 62DC                                 l6164 62B8  
                               l6092 6CF2                                 l6324 4B04  
                               l6316 4AD8                                 l6308 4A8A  
                               l6260 48D4                                 l6252 48A6  
                               l6244 487E                                 l6228 4818  
                               l6236 4840                                 l6500 5F5A  
                               l6420 422E                                 l6412 41C2  
                               l6404 4154                                 l6340 3F9E  
                               l6076 3F5C                                 l6068 3F24  
                               l7108 3A98                                 l7060 388C  
                               l7052 383C                                 l7044 3802  
                               l7036 379C                                 l7028 3746  
                               l7124 6BFC                                 l7132 6C64  
                               l7140 5570                                 l7300 6CBC  
                               l7220 4542                                 l7204 449A  
                               l8020 66A6                                 l8012 6672  
                               l8004 6642                                 l8100 4E24  
                               l6158 5E8C                                 l6190 636A  
                               l6182 6324                                 l6174 62EA  
                               l6166 62BA                                 l6086 6CD4  
                               l6326 4B0A                                 l6318 4AF0  
                               l6270 491A                                 l6262 48E4  
                               l6254 48A6                                 l6246 4882  
                               l6238 4850                                 l6502 5FAA  
                               l6422 423C                                 l6414 41F8  
                               l6406 4170                                 l6350 3FD6  
                               l6342 3FA0                                 l6510 6D62  
                               l6078 3F62                                 l6094 6D14  
                               l7062 38AE                                 l7070 3924  
                               l7054 3856                                 l7046 3820  
                               l7038 37C6                                 l7118 6BC0  
                               l7134 6C6C                                 l7310 693E  
                               l7142 5580                                 l7230 45DC  
                               l7222 454C                                 l8022 66AC  
                               l8014 667A                                 l8006 6650  
                               l8110 4E4C                                 l8102 4E28  
                               l6184 6332                                 l6192 6370  
                               l6176 62FA                                 l6168 62C8  
                               l6088 6CE0                                 l6328 4B0C  
                               l6280 4968                                 l6272 492E  
                               l6264 48F4                                 l6504 5FB0  
                               l6432 42C4                                 l6440 430C  
                               l6424 424E                                 l6416 4206  
                               l6408 417C                                 l6360 4002  
                               l6352 3FE6                                 l6344 3FB0  
                               l6336 3F84                                 l6512 6D72  
                               l6600 624C                                 l6096 6D1C  
                               l7080 397A                                 l7072 3934  
                               l7064 38E0                                 l7056 3878  
                               l7136 6C80                                 l7128 6C4E  
                               l7312 6944                                 l7304 68CE  
                               l7160 5646                                 l7152 55FE  
                               l7144 558E                                 l7240 46C0  
                               l7232 4606                                 l7224 4558  
                               l7208 44AE                                 l7216 44DA  
                               l7400 0460                                 l8016 6688  
                               l8024 66B2                                 l8008 6658  
                               l8112 4E50                                 l8104 4E2C  
                               l8040 4B26                                 l8032 4B18  
                               l6530 601E                                 l6522 5FDE  
                               l6194 6380                                 l6186 6350  
                               l6178 6310                                 l6290 49B0  
                               l6282 4978                                 l6274 493C  
                               l6266 4904                                 l6258 48BA  
                               l6450 436E                                 l6442 4326  
                               l6434 42D0                                 l6426 426C  
                               l6418 4224                                 l6370 4058  
                               l6362 4012                                 l6354 3FEC  
                               l6346 3FC0                                 l6338 3F90  
                               l6610 62AE                                 l6098 682A  
                               l7090 39CE                                 l7082 3982  
                               l7066 3912                                 l7058 3884  
                               l7306 6912                                 l7170 56C6  
                               l7162 5652                                 l7154 5606  
                               l7146 55D4                                 l7330 6454  
                               l7314 63A2                                 l7242 46CA  
                               l7234 4626                                 l7226 4566  
                               l7218 452E                                 l7410 04D6  
                               l7402 0478                                 l8026 66C2  
                               l8018 669E                                 l8114 4E5A  
                               l8106 4E30                                 l8042 4B40  
                               l8034 4B20                                 l6540 604E  
                               l6532 602C                                 l6524 6008  
                               l6516 5FB4                                 l6196 6390  
                               l6188 6360                                 l6700 5898  
                               l6292 49BE                                 l6284 498A  
                               l6276 4948                                 l6268 490A  
                               l6460 4398                                 l6452 437E  
                               l6444 433A                                 l6436 42DE  
                               l6428 429A                                 l6380 4092  
                               l6372 4068                                 l6364 4022  
                               l6356 3FF2                                 l6348 3FD0  
                               l6508 6D4C                                 l5900 3AFA  
                               l6604 6258                                 l7092 39F8  
                               l7076 395A                                 l7308 6920  
                               l7180 570E                                 l7172 56C8  
                               l7164 568E                                 l7156 5612  
                               l7148 55EA                                 l7324 63E6  
                               l7316 63CC                                 l7260 5190  
                               l7252 5128                                 l7244 46E0  
                               l7236 463A                                 l7228 45CE  
                               l7500 0954                                 l7420 056C  
                               l8028 66CA                                 l8116 4E5E  
                               l8108 4E34                                 l8060 4C0C  
                               l8044 4B44                                 l8036 4B22  
                               l6550 6078                                 l6542 6058  
                               l6526 600A                                 l6518 5FCA  
                               l6702 58A8                                 l6286 49A0  
                               l6294 49D0                                 l6278 4966  
                               l6470 6780                                 l6454 438C  
                               l6446 4354                                 l6438 4308  
                               l6390 40E4                                 l6382 40A8  
                               l6366 4032                                 l6358 4000  
                               l5910 3B32                                 l5902 3B0A  
                               l6606 626A                                 l6630 53F4  
                               l6622 535C                                 l6614 6ACA  
                               l6710 24EA                                 l7086 3990  
                               l7078 3968                                 l7182 5710  
                               l7174 56CC                                 l7166 569A  
                               l7158 5644                                 l7326 6432  
                               l7318 63DE                                 l7262 51AC  
                               l7270 5210                                 l7254 5138  
                               l7246 46F6                                 l7238 4678  
                               l7190 43EE                                 l7502 0A04  
                               l7510 0A9A                                 l7430 0642  
                               l7422 057A                                 l7414 050E  
                               l7406 04B0                                 l7350 00E4  
                               l7342 0090                                 l7334 0012  
                               l8118 4E7C                                 l8062 4C12  
                               l8054 4B56                                 l8046 4B48  
                               l8038 4B24                                 l6552 6088  
                               l6528 601A                                 l6296 49EE  
                               l6288 49A6                                 l6480 6820  
                               l6472 67AE                                 l6456 438E  
                               l6448 4364                                 l6392 40F2  
                               l6384 40B4                                 l6376 407C  
                               l6368 4038                                 l5920 3B60  
                               l5912 3B38                                 l5904 3B1A  
                               l6464 6C08                                 l6640 5510  
                               l6624 537C                                 l6616 6AD8  
                               l6800 288C                                 l6720 2534  
                               l6712 24EE                                 l6560 6962  
                               l7096 3A22                                 l7088 39AE  
                               l7176 56F0                                 l7168 56A8  
                               l7328 6438                                 l7280 52B8  
                               l7272 522C                                 l7264 51E0  
                               l7256 5154                                 l7192 441C  
                               l7600 13EE                                 l7520 0B1C  
                               l7512 0AAA                                 l7504 0A14  
                               l7440 06A2                                 l7432 065A  
                               l7424 05AE                                 l7416 052A  
                               l7408 04C8                                 l7360 015C  
                               l7352 0106                                 l7344 00AC  
                               l7336 0032                                 l8080 4D70  
                               l8072 4C6C                                 l8064 4C2E  
                               l8056 4B64                                 l8048 4B4C  
                               l6554 6098                                 l6538 6044  
                               l6298 4A1C                                 l6482 6826  
                               l6474 67BE                                 l6490 5EEE  
                               l6458 4394                                 l6394 40FE  
                               l6386 40CC                                 l6378 4088  
                               l5930 3B94                                 l5922 3B62  
                               l5914 3B4A                                 l5906 3B1C  
                               l6466 6C18                                 l6642 5524  
                               l6634 5464                                 l6626 53D2  
                               l6618 6AEC                                 l6650 6B70  
                               l6810 28DC                                 l6802 2892  
                               l6730 2582                                 l6722 2544  
                               l6714 2512                                 l6706 24C8  
                               l6570 69B8                                 l6562 6978  
                               l7098 3A38                                 l7178 5700  
                               l7290 534A                                 l7282 52C0  
                               l7274 5260                                 l7266 51E8  
                               l7258 5188                                 l7194 442A  
                               l7186 43AA                                 l7610 1516  
                               l7602 1422                                 l7522 0B84  
                               l7514 0AC6                                 l7506 0A2E  
                               l7450 06CA                                 l7442 06B0  
                               l7426 05BE                                 l7434 067E  
                               l7418 0540                                 l7370 0312  
                               l7362 0178                                 l7338 007A  
                               l8090 4DEA                                 l8082 4D8A  
                               l8074 4C7A                                 l8066 4C62  
                               l8058 4BF2                                 l6556 60A8  
                               l6548 606C                                 l6580 6A86  
                               l6476 67EC                                 l6492 5F1C  
                               l6396 410E                                 l6388 40D8  
                               l5940 3BCE                                 l5924 3B72  
                               l5932 3B9A                                 l5916 3B4C  
                               l5908 3B22                                 l6644 554C  
                               l6636 54A0                                 l6628 53E6  
                               l6652 6B84                                 l6660 6BA4  
                               l6900 2DC2                                 l6820 2974  
                               l6804 28A4                                 l6812 28E4  
                               l6740 25BE                                 l6732 2594  
                               l6724 2550                                 l6716 251C  
                               l6708 24DC                                 l6572 69C8  
                               l6564 6980                                 l7284 52DC  
                               l7276 5268                                 l7268 5204  
                               l7196 443A                                 l7188 43BA  
                               l7700 1E7E                                 l7620 16A6  
                               l7612 1530                                 l7604 1456  
                               l7540 0C50                                 l7532 0BEC  
                               l7524 0B9C                                 l7516 0AFA  
                               l7508 0A62                                 l7460 0744  
                               l7452 06E0                                 l7428 0622  
                               l7380 0366                                 l7372 032E  
                               l7364 018C                                 l7356 013E  
                               l7348 00C2                                 l8092 4DF8  
                               l8084 4D90                                 l8076 4CE4  
                               l6590 6D92                                 l6582 6A96  
                               l6670 5778                                 l6662 5722  
                               l6478 67FC                                 l6494 5F2C  
                               l6486 5EAE                                 l6398 411A  
                               l5950 3BE2                                 l5942 3BD2  
                               l5934 3BAA                                 l5926 3B82  
                               l5918 3B52                                 l6646 555C  
                               l6638 54D4                                 l6654 6B90  
                               l6910 2E16                                 l6902 2DC6  
                               l6830 2A58                                 l6822 29CC  
                               l6814 28EC                                 l6806 28B2  
                               l6750 261C                                 l6742 25C8  
                               l6734 2598                                 l6726 2558  
                               l6718 2524                                 l6574 69D2  
                               l6566 698C                                 l7294 6C94  
                               l7278 5284                                 l7286 52E4  
                               l7710 1F68                                 l7702 1E8E  
                               l7630 17BC                                 l7622 16CC  
                               l7614 1564                                 l7606 14D2  
                               l7550 0D84                                 l7542 0CAE  
                               l7534 0C10                                 l7526 0BAC  
                               l7518 0B0C                                 l7454 06F0  
                               l7438 0692                                 l7390 03D4  
                               l7382 0374                                 l7366 01A8  
                               l7358 014E                                 l8094 4DFC  
                               l8086 4DAC                                 l8078 4D3C  
                               l7800 5974                                 l5880 657C  
                               l6584 6A9A                                 l6576 6A64  
                               l6680 57B0                                 l6672 5788  
                               l6664 5746                                 l6496 5F3A  
                               l6488 5EDE                                 l5960 3BF6  
                               l5952 3BE6                                 l5944 3BD6  
                               l5936 3BBC                                 l5928 3B92  
                               l6592 61BA                                 l6656 6B94  
                               l6920 2E92                                 l6912 2E46  
                               l6904 2DE4                                 l6840 2AF2  
                               l6832 2A8C                                 l6824 2A00  
                               l6816 28FC                                 l6808 28CA  
                               l6752 2620                                 l6736 259E  
                               l6728 255C                                 l6568 699A  
                               l7296 6CA6                                 l7288 5316  
                               l7720 2090                                 l7712 1FC0  
                               l7704 1EA8                                 l7640 18E0  
                               l7632 17F0                                 l7624 175E  
                               l7616 1598                                 l7608 1506  
                               l7560 0EFC                                 l7552 0D9E  
                               l7544 0D30                                 l7536 0C24  
                               l7528 0BC4                                 l7472 0778  
                               l7456 0712                                 l7368 02A6  
                               l8096 4E0E                                 l8088 4DE0  
                               l7810 5A30                                 l7802 59B6  
                               l5882 658C                                 l6586 6AB8  
                               l6578 6A72                                 l6682 57B6  
                               l6690 5838                                 l6674 5794  
                               l6666 5762                                 l6498 5F4C  
                               l5962 3BFA                                 l5954 3BEA  
                               l5946 3BDA                                 l5938 3BCA  
                               l5970 3C0A                                 l6594 61DA  
                               l6658 6BA0                                 l6922 2E9A  
                               l6914 2E54                                 l6906 2E00  
                               l6850 2BCA                                 l6842 2B26  
                               l6834 2AA0                                 l6818 2910  
                               l6826 2A06                                 l6770 26AA  
                               l6754 2626                                 l6738 25A6  
                               l6746 25E4                                 l6930 60DC  
                               l7298 6CAC                                 l7730 2248  
                               l7722 20E8                                 l7714 1FF4  
                               l7706 1EDC                                 l7650 1A08  
                               l7642 1938                                 l7634 184E  
                               l7626 1792                                 l7618 15CC  
                               l7570 106C                                 l7562 0F54  
                               l7554 0DF8                                 l7546 0D64  
                               l7538 0C40                                 l7490 0808  
                               l7474 079C                                 l7458 0736  
                               l7386 039E                                 l7378 0344  
                               l7394 03EA                                 l8098 4E12  
                               l7804 59D8                                 l6588 6D84  
                               l5884 6596                                 l6692 5852  
                               l6684 57F8                                 l6676 579C  
                               l6668 5772                                 l5980 3C84  
                               l5972 3C36                                 l5964 3BFE  
                               l5956 3BEE                                 l5948 3BDE  
                               l5892 3ACE                                 l6596 6218  
                               l6916 2E6C                                 l6908 2E08  
                               l6860 2BF0                                 l6844 2B7E  
                               l6852 2BCE                                 l6836 2AD2  
                               l6828 2A24                                 l6780 2792  
                               l6772 26B0                                 l6756 262E  
                               l6748 260A                                 l6764 264A  
                               l6940 6156                                 l6932 60E8  
                               l7740 23B8                                 l7732 22C4  
                               l7724 2140                                 l7716 2028  
                               l7708 1F10                                 l7660 1A30  
                               l7644 1990                                 l7636 1882  
                               l7628 17A2                                 l7580 1200  
                               l7572 10C4                                 l7564 0FAC  
                               l7556 0E6A                                 l7548 0D74  
                               l7492 0860                                 l7484 07BE  
                               l7468 0762                                 l7396 0406  
                               l7388 03AC                                 l7820 2F90  
                               l7812 2EB8                                 l7900 5ADC  
                               l7806 59E8                                 l5886 65B2  
                               l5878 656C                                 l6694 5868  
                               l6686 57FE                                 l6678 57A8  
                               l5990 3CC4                                 l5982 3C88  
                               l5974 3C52                                 l5966 3C02  
                               l5958 3BF2                                 l5894 3ADA  
                               l6598 6240                                 l6918 2E7C  
                               l6870 2CBE                                 l6862 2BFC  
                               l6854 2BDE                                 l6846 2B82  
                               l6838 2AE2                                 l6782 27A6  
                               l6790 2822                                 l6774 26E4  
                               l6766 2664                                 l6942 616A  
                               l6934 60EC                                 l6926 60BA  
                               l6950 5C9C                                 l7910 4EB0  
                               l7750 24B2                                 l7742 23C8  
                               l7734 231C                                 l7726 2198  
                               l7718 205C                                 l7662 1A48  
                               l7670 1AC8                                 l7646 19C4  
                               l7590 1328                                 l7582 1234  
                               l7574 111C                                 l7566 0FE0  
                               l7558 0EC8                                 l7638 18B6  
                               l7494 0894                                 l7398 0414  
                               l7830 30A4                                 l7822 2F9E  
                               l7814 2EC6                                 l7902 5B26  
                               l7808 59EE                                 l5888 65E4  
                               l6696 5882                                 l6688 5804  
                               l5992 3CD4                                 l5984 3C96  
                               l5976 3C62                                 l5968 3C06  
                               l5896 3AE8                                 l6880 2CF0  
                               l6872 2CCE                                 l6864 2C74  
                               l6856 2BE6                                 l6848 2BB6  
                               l6792 285E                                 l6784 27DA  
                               l6776 2722                                 l6944 619A  
                               l6936 6128                                 l6928 60D4  
                               l6960 5D04                                 l6952 5CB8  
                               l7920 4F6E                                 l7912 4EC0  
                               l7744 240A                                 l7736 2350  
                               l7728 21F0                                 l7680 1B42  
                               l7672 1B10                                 l7648 19F8  
                               l7592 135C                                 l7584 128C  
                               l7576 1174                                 l7568 1014  
                               l7496 08EC                                 l7488 07D4  
                               l7840 314A                                 l7832 30DA  
                               l7824 3008                                 l7816 2F30  
                               l7760 6DF4                                 l7904 5B4A  
                               l7770 6E00                                 l6698 5892  
                               l5986 3C98                                 l5978 3C78  
                               l5898 3AEA                                 l6890 2D24  
                               l6882 2CF4                                 l6874 2CD2  
                               l6866 2C94                                 l6858 2BE8  
                               l6794 286E                                 l6786 27E2  
                               l6778 2756                                 l6946 619E  
                               l6938 6138                                 l6970 5D6C  
                               l6962 5D0A                                 l6954 5CC0  
                               l7922 4F86                                 l7914 4F10  
                               l7930 5002                                 l7746 245A  
                               l7738 2384                                 l7690 1C30  
                               l7682 1B9A                                 l7594 136C  
                               l7586 12C0                                 l7578 11CC  
                               l7498 0920                                 l7850 32AA  
                               l7842 3180                                 l7834 30FC  
                               l7826 3084                                 l7818 2F64  
                               l7762 6DF6                                 l7906 5B5A  
                               l7772 6E08                                 l7780 58DC  
                               l5996 3CE8                                 l5988 3CA2  
                               l6892 2D28                                 l6884 2CFA  
                               l6876 2CD8                                 l6868 2CB0  
                               l6796 287A                                 l6980 66FE  
                               l6972 5D86                                 l6964 5D10  
                               l6956 5CC8                                 l6948 5C8C  
                               l7940 50EE                                 l7932 5014  
                               l7924 4FBA                                 l7916 4F20  
                               l7908 4E9E                                 l7748 249A  
                               l7692 1C52                                 l7596 1386  
                               l7588 12F4                                 l7860 338C  
                               l7852 32DE                                 l7844 3182  
                               l7836 3132                                 l7828 3094  
                               l7764 6DF8                                 l7756 6DEC  
                               l7782 58EE                                 l5998 3CF8  
                               l6894 2D2E                                 l6878 2CE0  
                               l6886 2D00                                 l6798 2884  
                               l6982 670A                                 l6958 5CCE  
                               l6966 5D44                                 l6990 35C0  
                               l7942 5108                                 l7934 5024  
                               l7926 4FCE                                 l7918 4F38  
                               l7950 5B80                                 l7774 6E12  
                               l7694 1E06                                 l7678 1B24  
                               l7686 1BAE                                 l7598 13BA  
                               l7870 3448                                 l7862 33C0  
                               l7854 3312                                 l7846 3190  
                               l7838 313A                                 l7766 6DFA  
                               l7758 6DF0                                 l7784 58F2  
                               l7792 593C                                 l7776 58C6  
                               l6896 2D86                                 l6888 2D12  
                               l6984 6726                                 l6976 66D4  
                               l6968 5D56                                 l6992 35E4  
                               l7944 511A                                 l7936 50A2  
                               l7928 4FEC                                 l7960 5C16  
                               l7952 5B92                                 l7696 1E16  
                               l7688 1C20                                 l7880 354E  
                               l7872 3458                                 l7864 33F4  
                               l7856 3346                                 l7848 31FA  
                               l7768 6DFC                                 l7786 5902  
                               l7778 58D4                                 l7794 595A  
                               l6898 2DBA                                 l6986 6744  
                               l6978 66DC                                 l6994 35F0  
                               l7938 50D8                                 l7946 5122  
                               l7962 5C3C                                 l7970 5C86  
                               l7954 5BA8                                 l7698 1E4A  
                               l7882 35A6                                 l7874 3484  
                               l7866 3404                                 l7858 3358  
                               l7890 5A8A                                 l7796 596C  
                               l7788 592A                                 l6988 6750  
                               l6996 35FE                                 l7980 6A36  
                               l7972 69EA                                 l7964 5C52  
                               l7956 5BBA                                 l7948 5B6E  
                               l7884 35AE                                 l7876 34D0  
                               l7868 3414                                 l7892 5ABE  
                               l7798 596E                                 l6998 3604  
                               l7982 6A48                                 l7974 69FC  
                               l7966 5C6C                                 l7958 5BCC  
                               l7878 34E4                                 l7990 652A  
                               l7894 5AC4                                 l7886 5A40  
                               l7984 6A5E                                 l7976 6A0E  
                               l7968 5C7E                                 l7992 6548  
                               l7896 5AD6                                 l7888 5A54  
                    Send_Data@buffer 0100                                 l7978 6A24  
                               l7994 654E                                 l7986 648A  
                               l7898 5AD8                                 l7988 651C  
                               l7996 6626                                 l7998 6628  
                               STR_1 7FA1                                 STR_2 7F7F  
                               STR_3 7FC4                                 STR_4 7F92  
                               STR_5 7FAE                                 STR_6 7F62  
                               STR_7 7FCE                                 STR_8 7FB9  
                               STR_9 7F61                                 u8000 3FC0  
                               u7200 3AFA                                 u8001 3FBC  
                               u7201 3AF6                                 u8010 4000  
                               u7210 3B0A                                 u8011 3FFC  
                               u7211 3B06                                 u8100 429A  
                               u8020 4012                                 u7300 3C50  
                               u7220 3B4A                                 u8101 4296  
                               u8021 400E                                 u7221 3B46  
                               u7150 657C                                 u8110 42B0  
                               u8030 4022                                 u7310 3C78  
                               u7230 3B60                                 u7151 6578  
                               u8111 42AC                                 u8031 401E  
                               u7311 3C74                                 u7231 3B5C  
                               u7160 658C                                 u8200 5EDE  
                               u8120 42C4                                 u8040 4058  
                               u7400 3DB0                                 u7320 3C96  
                               u7240 3B72                                 u9000 6118  
                               u7161 6588                                 u8201 5EDA  
                               u8121 42C0                                 u8041 4054  
                               u7401 3DAC                                 u7321 3C92  
                               u7241 3B6E                                 u7170 65B2  
                               u8210 5F1C                                 u8130 42DE  
                               u8050 4068                                 u7410 3DE6  
                               u7330 3CB6                                 u7250 3B82  
                               u9010 6128                                 u7171 65AE  
                               u8211 5F18                                 u8131 42DA  
                               u8051 4064                                 u7411 3DE2  
                               u7331 3CB2                                 u7251 3B7E  
                               u9011 6124                                 u8300 6068  
                               u7180 65E4                                 u8220 5F3A  
                               u8140 4326                                 u8060 41E2  
                               u7500 3EAE                                 u7420 3DF6  
                               u7340 3CC4                                 u7260 3BBC  
                               u9100 66FE                                 u9020 6138  
                               u8301 6064                                 u7181 65E0  
                               u8221 5F36                                 u8141 4322  
                               u7501 3EAA                                 u7421 3DF2  
                               u7341 3CC0                                 u7261 3BB8  
                               u9101 66FA                                 u9021 6134  
                               u8310 6088                                 u8230 5F5A  
                               u8150 4354                                 u8070 423C  
                               u7510 3EC8                                 u7430 3E22  
                               u7350 3CD4                                 u7270 3BCA  
                               u7190 3AE8                                 u9110 6776  
                               u9030 6156                                 u8311 6084  
                               u8231 5F56                                 u8151 4350  
                               u8071 4238                                 u7511 3EC4  
                               u7431 3E1E                                 u7351 3CD0  
                               u7271 3BC6                                 u7191 3AE4  
                               u9111 6772                                 u9031 6152  
                               u9007 610E                                 u8320 6098  
                               u8240 5FAA                                 u8160 438C  
                               u8080 425C                                 u7520 3F02  
                               u7440 3E32                                 u7360 3D06  
                               u7280 3C36                                 u8400 6218  
                               u9040 618A                                 u7600 6850  
                               u9200 3912                                 u9120 35E4  
                               u8321 6094                                 u8241 5FA6  
                               u8161 4388                                 u8081 4258  
                               u8065 41D8                                 u7521 3EFE  
                               u7441 3E2E                                 u7361 3D02  
                               u7281 3C32                                 u8401 6214  
                               u7601 684C                                 u9201 390E  
                               u9121 35E0                                 u8170 67AE  
                               u8090 426C                                 u8250 6D62  
                               u7530 3F14                                 u7450 3E4E  
                               u7370 3D14                                 u7290 3C4E  
                               u8410 6240                                 u9050 61B8  
                               u7610 6872                                 u8330 6978  
                               u9210 3934                                 u9130 3628  
                               u8171 67AA                                 u8091 4268  
                               u8251 6D5E                                 u7531 3F10  
                               u7451 3E4A                                 u7371 3D10  
                               u7291 3C48                                 u8411 623C  
                               u9051 61B4                                 u7611 686E  
                               u8331 6974                                 u9211 3930  
                               u9131 3624                                 u8260 5FCA  
                               u7700 62EA                                 u8180 67EC  
                               u7540 3F24                                 u7460 3E5E  
                               u7380 3D32                                 u8420 626A  
                               u7620 689A                                 u8340 699A  
                               u9060 5C9C                                 u9220 39CA  
                               u9140 36C2                                 u9300 56B8  
                               u8261 5FC6                                 u7701 62E6  
                               u8181 67E8                                 u7541 3F20  
                               u7461 3E5A                                 u7381 3D2E  
                               u8421 6266                                 u7621 6896  
                               u8341 6996                                 u9061 5C98  
                               u9221 39C6                                 u9141 36BE  
                               u9301 56B4                                 u8270 5FFE  
                               u7630 5DB4                                 u7710 6310  
                               u8190 6820                                 u7550 3F44  
                               u7470 3E6E                                 u7390 3D6A  
                               u8510 5460                                 u8350 69B8  
                               u9070 5D56                                 u9150 36DE  
                               u9230 6BFC                                 u9310 56C6  
                               u7631 5DB0                                 u7711 630C  
                               u8191 681C                                 u7551 3F40  
                               u7471 3E6A                                 u7391 3D66  
                               u8511 545C                                 u9047 6180  
                               u8351 69B4                                 u9071 5D52  
                               u9151 36DA                                 u9231 6BF8  
                               u9311 56C2                                 u8280 602C  
                               u7640 5DD6                                 u7720 6332  
                               u8360 6A72                                 u8600 5746  
                               u7800 4828                                 u7560 3F54  
                               u7480 3E84                                 u8440 62A4  
                               u8520 5484                                 u9080 5D6C  
                               u9160 3798                                 u9320 5700  
                               u9240 5580                                 u8281 6028  
                               u7641 5DD2                                 u7721 632E  
                               u8361 6A6E                                 u8601 5742  
                               u7801 4824                                 u7561 3F50  
                               u7481 3E80                                 u8441 629E  
                               u8505 5408                                 u9081 5D68  
                               u9161 3794                                 u9321 56FC  
                               u9241 557C                                 u8290 6040  
                               u7650 5E10                                 u7730 6350  
                               u8370 6AB8                                 u8610 5772  
                               u7810 4866                                 u7570 3F70  
                               u7490 3E9A                                 u8450 62A6  
                               u8530 54A0                                 u8506 5412  
                               u9090 5D86                                 u9170 3878  
                               u9330 570E                                 u9250 558E  
                               u9410 452E                                 u8291 603C  
                               u8275 5FF4                                 u7651 5E0C  
                               u7731 634C                                 u8371 6AB4  
                               u8611 576E                                 u7811 4862  
                               u7571 3F6C                                 u7491 3E96  
                               u8435 627C                                 u8531 549C  
                               u8507 5422                                 u9091 5D82  
                               u9171 3874                                 u9331 570A  
                               u9251 558A                                 u9411 452A  
                               u7660 5E32                                 u7740 6380  
                               u8380 6D92                                 u7580 6D12  
                               u8620 5788                                 u7900 49EE  
                               u7820 48A6                                 u8540 54F4  
                               u8460 6AD8                                 u8700 2582  
                               u9180 38AE                                 u9260 55EA  
                               u9500 5204                                 u9420 4566  
                               u9340 43EE                                 u7661 5E2E  
                               u7741 637C                                 u8381 6D8E  
                               u7581 6D0E                                 u8621 5784  
                               u7901 49EA                                 u7821 48A2  
                               u8525 547A                                 u8461 6AD4  
                               u8701 257E                                 u9181 38AA  
                               u9261 55E6                                 u9501 5200  
                               u9421 4562                                 u9405 44EE  
                               u9341 43EA                                 u7670 5E5A  
                               u8630 5852                                 u7910 4A1C  
                               u7830 491A                                 u7750 47A2  
                               u8390 61FA                                 u8550 5510  
                               u8470 53A4                                 u7590 6D4A  
                               u8710 2594                                 u9190 38E0  
                               u9270 5640                                 u9510 522C  
                               u9430 45DC                                 u9406 44F8  
                               u9350 441C                                 u7671 5E56  
                               u8631 584E                                 u7911 4A18  
                               u7831 4916                                 u7751 479E  
                               u8551 550C                                 u7591 6D46  
                               u8711 2590                                 u9191 38DC  
                               u9271 563C                                 u9511 5228  
                               u9431 45D8                                 u9407 4508  
                               u9351 4418                                 u7680 5E8C  
                               u8640 5868                                 u7920 4A32  
                               u7840 493C                                 u7760 47B4  
                               u8560 554C                                 u8480 53D2  
                               u8800 286E                                 u8720 260A  
                               u9280 568A                                 u9520 5284  
                               u9440 4678                                 u9360 442A  
                               u9600 007A                                 u7681 5E88  
                               u8641 5864                                 u7921 4A2E  
                               u7841 4938                                 u7761 47B0  
                               u8561 5548                                 u8545 54EA  
                               u8481 53CE                                 u8801 286A  
                               u8721 2606                                 u9281 5686  
                               u9521 5280                                 u9441 4674  
                               u9361 4426                                 u9601 0076  
                               u7690 62C8                                 u8650 5882  
                               u7930 4A46                                 u7850 4966  
                               u7770 47C4                                 u8490 53F4  
                               u8570 6BBE                                 u8810 28A4  
                               u8730 261C                                 u9290 56A8  
                               u9530 52DC                                 u9450 46E0  
                               u9370 446C                                 u9610 00AC  
                               u7691 62C4                                 u8651 587E  
                               u7931 4A42                                 u7851 4962  
                               u7771 47C0                                 u8395 61F0  
                               u8491 53F0                                 u8475 539A  
                               u8571 6BBA                                 u8811 28A0  
                               u8731 2618                                 u9291 56A4  
                               u9531 52D8                                 u9451 46DC  
                               u9371 4468                                 u9611 00A8  
                               u8660 5892                                 u8580 5732  
                               u7940 4A60                                 u7860 498A  
                               u7780 4806                                 u8900 2C74  
                               u8820 28B2                                 u8740 2696  
                               u9460 46F6                                 u9380 449A  
                               u9700 02A6                                 u9620 00E4  
                               u8661 588E                                 u8581 572C  
                               u7941 4A5C                                 u7861 4986  
                               u7781 4802                                 u8901 2C70  
                               u8821 28AE                                 u8741 2692  
                               u9461 46F2                                 u9381 4496  
                               u9701 02A2                                 u9621 00E0  
                               u8590 5734                                 u7950 4AA8  
                               u7870 49A0                                 u7790 4818  
                               u8910 2CB0                                 u8830 28DC  
                               u8750 2722                                 u8670 24EA  
                               u9550 6CBC                                 u9390 44BC  
                               u9710 0312                                 u9630 0106  
                               u7951 4AA4                                 u7871 499C  
                               u7791 4814                                 u8911 2CAC  
                               u8831 28D8                                 u8751 271E  
                               u8671 24E6                                 u9551 6CB8  
                               u9391 44B8                                 u9711 030E  
                               u9631 0102                                 u7960 4AD8  
                               u7880 49BE                                 u8920 2CBE  
                               u8840 2A24                                 u8760 2756  
                               u8680 2534                                 u9560 6912  
                               u9480 5154                                 u9800 04D6  
                               u9720 032E                                 u9640 015C  
                               u7961 4AD4                                 u7881 49BA  
                               u8921 2CBA                                 u8841 2A20  
                               u8761 2752                                 u8681 2530  
                               u9561 690E                                 u9545 52F6  
                               u9481 5150                                 u9801 04D2  
                               u9721 032A                                 u9641 0158  
                               u7970 4B04                                 u7890 49DE  
                               u8930 2D12                                 u8850 2A8C  
                               u8770 2792                                 u8690 2544  
                               u9570 693E                                 u9490 51AC  
                               u9810 052A                                 u9730 0366  
                               u9650 0178                                 u7971 4B00  
                               u7891 49DA                                 u8931 2D0E  
                               u8851 2A88                                 u8771 278E  
                               u8691 2540                                 u9571 693A  
                               u9491 51A8                                 u9475 4762  
                               u9811 0526                                 u9731 0362  
                               u9651 0174                                 u7980 3F9E  
                               u8940 2DE4                                 u8860 2AD2  
                               u8780 281E                                 u9580 6960  
                               u9900 06E0                                 u9820 0540  
                               u9740 0374                                 u9660 01A8  
                               u7981 3F9A                                 u8941 2DE0  
                               u8861 2ACE                                 u8781 281A  
                               u9581 695C                                 u9901 06DC  
                               u9821 053C                                 u9741 0370  
                               u9661 01A4                                 u7990 3FB0  
                               u8950 2E00                                 u8870 2AE2  
                               u8790 2856                                 u9590 6454  
                               u9910 0712                                 u9830 055C  
                               u9750 03AC                                 u7991 3FAC  
                               u8951 2DFC                                 u8871 2ADE  
                               u8791 2852                                 u9591 6450  
                               u9911 070E                                 u9831 0558  
                               u9751 03A8                                 u8960 2E66  
                               u8880 2B7E                                 u9920 0736  
                               u9840 057A                                 u9760 0406  
                               u8961 2E60                                 u8881 2B7A  
                               u9921 0732                                 u9841 0576  
                               u9761 0402                                 u8970 2E68  
                               u8890 2BCA                                 u9930 0744  
                               u9850 05BE                                 u9770 0414  
                               u9690 026C                                 u8891 2BC6  
                               u9931 0740                                 u9851 05BA  
                               u9771 0410                                 u9675 01BE  
                               u8980 2E7C                                 u9940 079C  
                               u9860 0622                                 u9780 0478  
                               u9676 01C8                                 u8981 2E78  
                               u9941 0798                                 u9861 061E  
                               u9781 0474                                 u9685 0218  
                               u9677 01D8                                 u8990 60D4  
                               u9950 07BA                                 u9870 065A  
                               u9790 04C8                                 u9686 0222  
                               u8991 60D0                                 u9951 07B6  
                               u9871 0656                                 u9791 04C4  
                               u9695 0262                                 u9687 0232  
                               u9960 0AC6                                 u9880 06B0  
                               u9961 0AC2                                 u9881 06AC  
                               u9890 06C6                                 u9891 06C2  
                               u9980 0BE8                                 u9981 0BE4  
                               u9990 0C10                                 u9991 0C0C  
                               u9975 0B32                                 u9976 0B3C  
                               u9977 0B4C                       Read_Sensors@Rs 00A5  
                               abs@a 000B                                 _dbuf 0358  
                               _cp_h 7ED5                                 _cp_l 7ED1  
                               _dp_h 7E6D                                 _dp_l 7E65  
                               _labs 6ACA                                 _main 4B18  
                               _dtoa 5722                         _trigger_test 00EE  
                               _prec 02FE                                 _powf 0012  
                               pad@i 0015                                 pad@p 0012  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf1 0FE7                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               _stoa 60BA                                 btemp 005F  
                               _utoa 5C8C                     __end_of_ADC_Init 6E12  
                   __end_of_ADC_Read 6CD4                        ___fpclassifyf 61BA  
                               prodh 0FF4                                 prodl 0FF3  
                               start 000E                      ___fldiv@new_exp 0039  
                        main@voltage 03F2                 Read_Sensors@raw_temp 007D  
                    __end_of_HighISR 6DD4                 Read_Sensors@temp_adc 0095  
                       ___param_bank 0000            Handle_Commands@last_blink 0310  
                              ??_abs 000D                Read_Sensors@flame_adc 0097  
                              ??_pad 0014                    ?_Update_Actuators 0001  
                 ??_Update_Actuators 0068                   _Handle_Fire_Events 4E9E  
                      ___fltol@sign1 0009                      __end_of___aldiv 5EAE  
                              ?_labs 0001                      __end_of___almod 63A2  
                    __end_of___fladd 3F84                                ?_main 0001  
                              ?_dtoa 0017                      __end_of___fldiv 4B18  
                    __end_of___flneg 6D84                                STR_10 7F71  
                              STR_11 7FD7                                STR_12 7FE0  
                              STR_13 7F61                                STR_21 7FFB  
                              STR_14 7FF0                                STR_15 7F61  
                              STR_24 7FE9                                STR_16 7F44  
                              STR_17 7ED9                                STR_18 7FF7  
                    __end_of___awmod 66D4                      __end_of___flmul 43AA  
                              ?_powf 0068                      __end_of___flsub 6C4E  
                    __end_of___fltol 60BA                                ?_stoa 0009  
                              u10010 1A2C                      __end_of___lldiv 68CE  
                              u10011 1A28                                u10020 1A48  
                              u10021 1A44                                u10005 0E0A  
                              u10030 1AC4                                u10031 1AC0  
                              ?_utoa 0017                                u10200 596C  
                              u10040 1B10                                u10201 5968  
                              u10105 1CD6                                u10041 1B0C  
                              u10210 59B6                                u10130 1E06  
                              u10106 1CE0                                u10050 1B42  
                              u10211 59B2                                u10131 1E02  
                              u10115 1D2E                                u10107 1CF0  
                              u10051 1B3E                                u10220 59C8  
                              u10116 1D38                                u10060 1B9A  
                              u10300 3180                                u10221 59C0  
                              u10125 1DCC                                u10117 1D48  
                              u10061 1B96                                u10301 317C  
                              u10126 1DD6                                u10310 338C  
                              u10127 1DE6                                u10311 3388  
                              u10240 5A30                                u10160 245A  
                              u10080 1C52                                u10320 3404  
                              u10400 5B38                                u10241 5A2C  
                              u10161 2456                                u10145 23DA  
                              u10081 1C4E                                u10321 3400  
                              u10401 5B30                                u10170 24B2  
                              u10330 3448                                u10250 3094  
                              u10171 24AE                                u10155 2420  
                              u10075 1BDE                                u10331 3444  
                              u10251 3090                                u10180 58D4  
                              u10420 4EB0                                u10500 5B92  
                              u10156 242A                                u10076 1BE8  
                              u10340 34D0                                u10260 30DA  
                              u10181 58D0                                u10421 4EAC  
                              u10501 5B8E                                u10157 243A  
                              u10077 1BF8                                u10341 34CC  
                              u10261 30D6                                u10238 59CA  
                              u10190 58EE                                u10430 4EC0  
                              u10510 5BBA                                u10270 30FC  
                              u10350 5A54                                u10191 58EA  
                              u10431 4EBC                                u10511 5BB6  
                              u10095 1C6C                                u10271 30F8  
                              u10351 5A50                                u10440 4F20  
                              u10520 5BCC                                u10096 1C76  
                              u10280 3132                                u10360 5A8A  
                              u10600 6636                                u10441 4F1C  
                              u10521 5BC8                                u10097 1C86  
                              u10281 312E                                u10361 5A86  
                              u10601 6632                                u10450 4F6E  
                              u10530 69FC                                u10290 314A  
                              u10418 5B3C                                u10370 5ABE  
                              u10610 6650                                u10451 4F6A  
                              u10531 69F8                                u10291 3146  
                              u10371 5ABA                                u10611 664C  
                              u10460 4FBA                                u10540 6A0E  
                              u10380 5AD6                                u10620 666A  
                              u10700 4E4C                                u10461 4FB6  
                              u10541 6A0A                                u10381 5AD2  
                              u10621 6666                                u10701 4E48  
                              u10470 5014                                u10550 6A36  
                              u10390 5B26                                u10630 6688  
                              u10471 5010                                u10551 6A32  
                              u10391 5B22                                u10631 6684  
                              u10480 5024                                u10560 6A48  
                              u10640 669E                      __end_of___llmod 69EA  
                              u10481 5020                                u10561 6A44  
                              u10641 669A                                u10490 5B80  
                              u10570 651C                                u10650 66C2  
                              u10491 5B7C                                u10571 6518  
                              u10651 66BE                                u10580 6548  
                              u10660 4C2E                                u10581 6544  
                              u10661 4C2A                                u10717 4B32  
                              u10590 656A                                u10670 4DAC  
                              u10591 6566                                u10671 4DA8  
                              u10727 4BFE                                u10680 4E0E  
                              u10681 4E0A                                u10737 4D7C  
                              u10690 4E24                                u10747 4E88  
                              u10691 4E20                                u10757 6CA8  
                              u10767 5C5E                                u10777 50FA  
                              i2l146 6DD0                                _RCREG 0FAE  
                       vfpfcnvrt@fmt 009D                                _SPBRG 0FAF  
                              _PORTB 0F81                                _TRISB 0F93  
                              _TXREG 0FAD                        ?_Read_Sensors 0001  
                ?_Handle_Fire_Events 0001                                _lg2_h 7E91  
                              _lg2_l 7E8D                                _flags 0350  
                read_prec_or_width@c 0005                                _errno 0348  
                read_prec_or_width@n 0006                                _ivln2 7E81  
                              _fputc 656C                                _fputs 6CD4  
                    __end_of_ivln2_h 7ED1                      __end_of_ivln2_l 7E81  
                              _two24 7EC5                      __end_of_scalbnf 535C  
                              labs@a 0001                                pad@fp 000F  
                              _width 034A                                _putch 6E22  
                              main@i 03F6                                dtoa@d 0018  
                              dtoa@i 0023                                dtoa@p 0020  
                              _sqrtf 43AA                                dtoa@s 0022  
                              dtoa@w 001E                                tablat 0FF5  
                              powf@i 0128                                powf@j 01A8  
                              powf@k 01A4                                powf@n 0188  
                              powf@r 0150                                powf@s 0160  
                              powf@t 01B0                                powf@u 017C  
                              powf@v 0180                                powf@w 0144  
                              powf@x 0068                                powf@y 006C  
                              powf@z 01B4                                stoa@l 0012  
                              stoa@p 000E                                stoa@s 000A  
                              ttemp5 0060                                ttemp6 0063  
                              ttemp7 0067                                utoa@d 0018  
                              utoa@i 0020                                utoa@p 001E  
                              utoa@w 001C                                status 0FD8  
                              wtemp8 0060                      __end_of_sprintf 6C92  
                     ?___fpclassifyf 0001                        main@adc_value 03EC  
                         Send_Data@i 0196                      _shutdown_system 00EF  
               ??_Handle_Fire_Events 00E2                      __initialization 6B20  
                       __end_of_cp_h 7ED9                         __end_of_cp_l 7ED5  
                       __end_of_dp_h 7E75                         __end_of_dp_l 7E6D  
                       __end_of_labs 6B20                         __end_of_main 4E9E  
                       __end_of_dtoa 58C6                         __end_of_powf 24C8  
                       __end_of_stoa 61BA                         __end_of_utoa 5DA4  
            ?_Handle_Shutdown_Events 0001                    ??_Handle_Commands 000B  
               _Update_Actuators$751 005D                 __end_of_Apply_Filter 648A  
                             ??_labs 0005                               ??_main 00EC  
                             ??_dtoa 001C                               ??_powf 0070  
                             ??_stoa 000C                               ??_utoa 001C  
                      __activetblptr 0002                       ??_Read_Sensors 0079  
         __end_of_read_prec_or_width 6780                               _ADCON1 0FC1  
                             _ADCON2 0FC0                               ?_fputc 0001  
                   ___llmod@dividend 0001                               ?_fputs 0009  
                             _ADRESH 0FC4                               _ADRESL 0FC3  
                             ?_putch 0001                               ?_sqrtf 0001  
                             i2l5784 6DBA                               i2l5786 6DC8  
                             i2l5788 6DCE                               _MQ2_Ro 03D0  
                             _OSCCON 0FD3                        vfpfcnvrt@done 00A2  
                          ??_HighISR 0001                               _TRISA0 7C90  
                             _TRISA1 7C91                               _TRISA2 7C92  
                             _TRISC6 7CA6                               _TRISC7 7CA7  
       Handle_Fire_Events@water_used 00E8                     __end_of___xxtofl 5722  
                       vfprintf@cfmt 00AE       __end_of_Handle_Shutdown_Events 6A64  
                  __end_of_UART_Init 6E00         Send_History_Event@event_type 00DE  
                             ___flge 5EAE                               ___fleq 6780  
       Handle_Fire_Events@start_data 0296                            ??___aldiv 0009  
                          ??___almod 0009                            ??___fladd 0049  
             Read_Sensors@last_pulse 034C                            ??___fldiv 0030  
                          ??___flneg 0005                            ??___awmod 0005  
                          ??___flmul 0017                            ??___flsub 0059  
                          ??___fltol 0005                            ??___lldiv 0009  
                          ??___llmod 0009                               _efgtoa 24C8  
                             _co_ppm 0338                      ADC_Read@channel 0005  
                             _floorf 535C                               _memcpy 6B70  
               read_prec_or_width@ap 0002                               clear_0 6B46  
         Handle_Fire_Events@end_data 0200                      ___awmod@divisor 0003  
                             isa$std 0001                      ___awmod@counter 0005  
                             pad@buf 0010                               dtoa@fp 0017  
                             _strcpy 6D14                      Apply_Filter@sum 0060  
                             fputc@c 0001                               fputs@c 000C  
                             fputs@i 000D                               fputs@s 0009  
                          ??_scalbnf 002E                      ___fpclassifyf@e 0009  
           Send_History_Event@buffer 0100                            ?_ADC_Init 0001  
                    ___fpclassifyf@u 000B                            ?_ADC_Read 0001  
                    ___fpclassifyf@x 0001                         __mediumconst 7E64  
         Handle_Fire_Events@duration 00E4                Apply_Filter@new_value 0051  
                             powf@s2 0190                               powf@t1 018C  
                             powf@t2 011C                               tblptrh 0FF7  
                             tblptrl 0FF6                               powf@y1 012C  
                             tblptru 0FF8         Send_History_Event@extra_data 00E0  
                             powf@ax 0178                               powf@is 0198  
                             powf@hx 0168                               powf@hy 0184  
                             powf@ix 01AC                               powf@iy 0194  
                             powf@sn 0164                               stoa@cp 0010  
                             stoa@fp 0009                               putch@c 0001  
                   __end_of_vfprintf 6C08                               utoa@fp 0017  
                             sqrtf@i 000E                               sqrtf@m 001A  
                             sqrtf@q 0012                               sqrtf@r 001E  
                             sqrtf@s 000A                               sqrtf@t 0016  
                             sqrtf@x 0001                            ??_sprintf 005D  
                         ___flge@ff1 0060                      ??___fpclassifyf 0005  
                         ___flge@ff2 0064                         ___xxtofl@arg 000B  
                       ___xxtofl@exp 000A                         ___xxtofl@val 0001  
                         ___fleq@ff1 0001                           ___fleq@ff2 0005  
                         __accesstop 0060              __end_of__initialization 6B62  
              __end_of_TEST_DURATION 7ECD                           ___flneg@f1 0001  
Handle_Shutdown_Events@prev_shutdown 0351                        ___rparam_used 0001  
                         ___fltol@f1 0001              Read_Sensors@mq2_voltage 009D  
                     __pcstackCOMRAM 0001                         __pidataBANK3 6DD4  
                      __end_of_lg2_h 7E95                        __end_of_lg2_l 7E91  
                      __end_of_ivln2 7E85                        __end_of_fputc 6626  
                      __end_of_fputs 6D14                        __end_of_two24 7EC9  
                      __end_of_putch 6E24                        __end_of_sqrtf 4788  
                         __end_of_L1 7EC5                           __end_of_L2 7EC1  
                         __end_of_L3 7EBD                           __end_of_L4 7EB9  
                         __end_of_L5 7EB5                           __end_of_L6 7EB1  
                         __end_of_P1 7EAD                           __end_of_P2 7EA9  
                         __end_of_P3 7EA5                           __end_of_P4 7EA1  
                         __end_of_P5 7E9D                           __end_of_bp 7E7D  
                         __end_of_cp 7E89                         _alarm_active 0356  
                         ??_ADC_Init 0001                           ??_ADC_Read 0003  
                _fire_trigger_sensor 03A8                    __end_of_Send_Data 656C  
                            ??_fputc 0004                              ??_fputs 000C  
                            ??_putch 0001                              ??_sqrtf 0005  
                         __pbssBANK0 00EE                           __pbssBANK2 02FA  
                         __pbssBANK3 0300                   _Handle_Test_Events 5B6E  
               __end_of_Read_Sensors 35C0                              ?___flge 0060  
                            ?___fleq 0001                  ?_Handle_Test_Events 0001  
                            ?_efgtoa 0068                              ?_floorf 0041  
                            ?_memcpy 0001                           _co_samples 03BC  
                Send_History_Event@i 01C8                              ?_strcpy 0001  
                          ?___xxtofl 0001                           _fire_alarm 0355  
               ??_Handle_Test_Events 00E2                         _Apply_Filter 63A2  
                            _HighISR 0008                      _Handle_Commands 58C6  
                    _flame_intensity 0340                              __Hparam 0000  
                            __Lparam 0000                              ___aldiv 5DA4  
                            ___almod 62B8                              ___fladd 3ACE  
                            ___fldiv 4788                              ___flneg 6D4C  
                            ___awmod 6626                              ___flmul 3F84  
                            ___flsub 6C08                              ___fltol 5FB4  
                            ___lldiv 682A                              ___llmod 6962  
                          ?_vfprintf 00AA                              __pcinit 6B20  
                            __ramtop 0800                              __ptext0 4B18  
                            __ptext1 6626                              __ptext2 5A40  
                            __ptext3 6DEC                              __ptext4 648A  
                            __ptext5 2EB8                              __ptext6 0012  
                            __ptext7 43AA                              __ptext8 5128  
                            __ptext9 63A2                read_prec_or_width@fmt 0001  
                            _ivln2_h 7ECD                              _ivln2_l 7E7D  
                         ??___xxtofl 0005                              _scalbnf 5128  
                   ___awmod@dividend 0001           Read_Sensors@last_flow_time 030C  
                   ___aldiv@dividend 0001                              efgtoa@c 006D  
                            efgtoa@d 007B                              efgtoa@e 007F  
                            efgtoa@f 0069                      _prev_fire_alarm 0354  
                            efgtoa@g 0092                              efgtoa@h 0089  
                            efgtoa@i 0087                              efgtoa@l 008D  
                            efgtoa@m 007D                              efgtoa@n 0096  
                            efgtoa@p 0072                              efgtoa@t 0074  
                            efgtoa@u 0098                              efgtoa@w 0081  
                            _sprintf 6C4E                       __pintcode_body 6DB8  
               end_of_initialization 6B62                              floorf@e 004F  
                            floorf@m 004B                              floorf@u 0051  
                            floorf@x 0041                              memcpy@d 0008  
                            memcpy@n 0005                              memcpy@s 000A  
                            fputc@fp 0003                        __Lmediumconst 7E64  
                            int_func 6DB8                              fputs@fp 000B  
                 _read_prec_or_width 66D4                      ___lldiv@divisor 0005  
                    ___lldiv@counter 000D                              powf@p_h 01A0  
                            powf@p_l 016C                              powf@s_h 0174  
                            powf@t_h 0170                              powf@s_l 0130  
                            powf@t_l 0134                              powf@z_h 0120  
                            powf@z_l 0124                    __end_of_vfpfcnvrt 3ACE  
                         efgtoa@mode 0079                           efgtoa@sign 0091  
                          _RCSTAbits 0FAB                     ___aldiv@quotient 000B  
                            postdec1 0FE5                              postdec2 0FDD  
                ?_read_prec_or_width 0001                              postinc0 0FEE  
                            postinc1 0FE6                              postinc2 0FDE  
                   vfpfcnvrt@convarg 00A3           __end_of_Send_History_Event 6962  
                         ??_vfprintf 005D                              sqrtf@ix 0022  
                            strcpy@d 0005                            _UART_Init 6DEC  
                          _PORTBbits 0F81                          ___fladd@grs 0050  
                      ___xxtofl@sign 0009                            _TRISBbits 0F93  
               ??_read_prec_or_width 0003                          ___fldiv@grs 003B  
                        ___fldiv@rem 0034              __end_of_Handle_Commands 5A40  
                Read_Sensors@mq2_adc 0099                          ___flmul@grs 001D  
                         _total_flow 0330                            _TXSTAbits 0FAC  
            Read_Sensors@temp_factor 0085                       __end_of___flge 5FB4  
                     __end_of___fleq 682A                          vfpfcnvrt@ap 009E  
                        vfpfcnvrt@cp 00A8                          vfpfcnvrt@fp 009C  
                         ?_UART_Init 0001                        _system_millis 02FA  
                     __end_of_efgtoa 2EB8                       __end_of_floorf 556E  
                     __end_of_memcpy 6BC0                           floorf@F521 0300  
                Apply_Filter@samples 0055                       __end_of_strcpy 6D4C  
                start_initialization 6B20                         _Read_Sensors 2EB8  
                        __end_of_lg2 7E99                          __end_of_abs 6DB8  
                        __end_of_pad 6ACA                          __end_of_ovt 7E8D  
                   _Update_Actuators 5A40              Read_Sensors@rs_ro_ratio 00A1  
                          _Send_Data 648A                __end_of___fpclassifyf 62B8  
                    ___llmod@divisor 0005                      ___llmod@counter 0009  
                        vfprintf@fmt 00AB                             ??___flge 0059  
                           ??___fleq 0009                             ??_efgtoa 006E  
                        __pdataBANK3 03D0                             ??_floorf 0045  
                           ??_memcpy 0007                             ??_strcpy 0005  
                          ___fladd@a 0045                            ___fladd@b 0041  
                     _Interrupt_Init 6E12                            ___fldiv@a 002C  
                          ___fldiv@b 0028                            ___flmul@a 0013  
                          ___flmul@b 000F                          __pbssCOMRAM 005E  
                          ___flsub@a 0055                            ___flsub@b 0051  
                      __pcstackBANK0 0060                        __pcstackBANK1 0100  
                      __pcstackBANK2 0200                        __pcstackBANK3 03E8  
                   ?_Handle_Commands 0001                             ?_HighISR 0001  
                         ?_Send_Data 0001             ??_Handle_Shutdown_Events 005D  
                        _efgtoa$1375 0076                            _main$1833 03E8  
                          _dtoa$1344 001C                   _flame_base_voltage 033C  
                          __pintcode 0008                        __pmediumconst 7E64  
                           ?___aldiv 0001                             ?___almod 0001  
                           ?___fladd 0041                             ?___fldiv 0028  
                           ?___flneg 0001                             ?___awmod 0001  
                           ?___flmul 000F                             ?___flsub 0051  
                           ?___fltol 0001                             ?___lldiv 0001  
                     _flame_detected 005E                             ?___llmod 0001  
                        ??_UART_Init 0001               __end_of_Interrupt_Init 6E22  
                   ___almod@dividend 0001                          __smallconst 7E64  
                           ?_scalbnf 0028                             _ADC_Init 6E00  
                           _ADC_Read 6C92                            _flow_rate 0334  
                           ?_sprintf 00B0                      main@cycle_count 03F0  
                    ___aldiv@divisor 0005                            _powf$1840 019C  
                          _powf$1841 0138                            _powf$1850 0114  
                          _powf$1842 0100                            _powf$1851 0118  
                          _powf$1843 0104                            _powf$1844 015C  
                          _powf$1837 0148                            _powf$1845 013C  
                          _powf$1838 0158                            _powf$1846 0140  
                          _powf$1839 014C                            _powf$1847 0108  
                          _powf$1848 010C                            _powf$1849 0110  
                    ___aldiv@counter 0009                        _TEST_DURATION 7EC9  
                           _PIR1bits 0F9E                             i2u709_40 6DC8  
                           i2u709_41 6DC4                             _RCONbits 0FD0  
                         powf@yisint 0154                            _vfpfcnvrt 35C0  
                    ?_Interrupt_Init 0001                           _ADCON0bits 0FC2  
                          main@i_676 03F8                   Read_Sensors@raw_co 00A9  
                 _Send_History_Event 68CE                   Read_Sensors@pulses 009B  
                         vfpfcnvrt@c 00A7                          _INTCON2bits 0FF1  
                        _INTCON3bits 0FF0                            copy_data0 6B34  
                    _test_start_flow 0314                  ?_Send_History_Event 00DE  
                    _test_start_time 032C                          ??_Send_Data 005D  
         __end_of_Handle_Fire_Events 5128                             __Hrparam 0000  
                          memcpy@tmp 0007                           vfprintf@ap 00AD  
                           __Lrparam 0000                           vfprintf@fp 00AA  
                      Apply_Filter@i 0064                         _sample_index 0353  
           __end_of_Update_Actuators 5B6E                           ?_vfpfcnvrt 009C  
               ??_Send_History_Event 005D                   ___fpclassifyf@F465 0304  
                         sprintf@fmt 00B2                             ___xxtofl 556E  
          Read_Sensors@flame_voltage 0081                             __ptext10 6C92  
                           __ptext11 6E12                             __ptext20 5C8C  
                           __ptext12 5B6E                             __ptext21 6962  
                           __ptext13 556E                             __ptext30 61BA  
                           __ptext22 682A                             __ptext14 69EA  
                           __ptext31 6C08                             __ptext23 60BA  
                           __ptext15 4E9E                             __ptext40 6CD4  
                           __ptext32 3ACE                             __ptext24 66D4  
                           __ptext16 68CE                             __ptext41 656C  
                           __ptext33 6D4C                             __ptext25 24C8  
                           __ptext17 6C4E                             __ptext42 6E22  
                           __ptext34 3F84                             __ptext26 6D14  
                           __ptext18 6BC0                             __ptext43 6D84  
                           __ptext35 5EAE                             __ptext27 6B70  
                           __ptext19 35C0                             __ptext44 62B8  
                           __ptext36 6780                             __ptext28 6ACA  
                           __ptext45 5DA4                             __ptext37 4788  
                           __ptext29 535C                             __ptext46 58C6  
                           __ptext38 5722                             __ptext47 5FB4  
                           __ptext39 6A64                             __ptext48 6E00  
                 Handle_Commands@cmd 000F                      ___almod@divisor 0005  
                    ___almod@counter 0009                           strcpy@dest 0001  
                           efgtoa@fp 0068                             efgtoa@ne 0070  
                           efgtoa@pp 0078                             efgtoa@ou 0083  
       Handle_Test_Events@water_used 01FC                             isa$xinst 0000  
                           int$flags 005F                             _vfprintf 6BC0  
             _Handle_Shutdown_Events 69EA                           _INTCONbits 0FF2  
                       _temp_samples 03D4                             memcpy@d1 0001  
                           memcpy@s1 0003                             scalbnf@n 002C  
                           scalbnf@u 0032                             scalbnf@x 0028  
                           scalbnf@y 0036                     _fire_start_flame 0320  
                           intlevel2 0000                            sprintf@ap 00D2  
                      ?_Apply_Filter 0051                     ___lldiv@dividend 0001  
                          strcpy@src 0003          Handle_Test_Events@prev_test 0352  
        Handle_Test_Events@test_data 01CA                          efgtoa@nmode 007A  
                        ??_vfpfcnvrt 00A0           Update_Actuators@last_blink 0308  
                    _fire_start_flow 0318                          _temperature 0344  
                           sprintf@f 00D3                             sprintf@s 00B0  
                    _fire_start_temp 0324                      _fire_start_time 0328  
                  main@adc_value_677 03EE                     ___lldiv@quotient 0009  
                       ___aldiv@sign 000A                        ___fladd@signs 004D  
                     ??_Apply_Filter 0057                         ___almod@sign 000A  
                       ___fladd@aexp 004E                         ___fladd@bexp 004F  
                      _fire_start_co 031C  
