

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Jun 29 14:02:37 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=3
    60                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=3
    61                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=3
    62                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1,group=3
    63                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79   000000                     
    80                           ; Version 2.20
    81                           ; Generated 12/02/2020 GMT
    82                           ; 
    83                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4550 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114   000FE0                     bsr             equ	4064
   115   000FE9                     fsr0            equ	4073
   116   000FEA                     fsr0h           equ	4074
   117   000FE9                     fsr0l           equ	4073
   118   000FE1                     fsr1            equ	4065
   119   000FE2                     fsr1h           equ	4066
   120   000FE1                     fsr1l           equ	4065
   121   000FD9                     fsr2            equ	4057
   122   000FDA                     fsr2h           equ	4058
   123   000FD9                     fsr2l           equ	4057
   124   000FEF                     indf0           equ	4079
   125   000FE7                     indf1           equ	4071
   126   000FDF                     indf2           equ	4063
   127   000FF2                     intcon          equ	4082
   128   000000                     nvmcon          equ	0
   129   000FF9                     pcl             equ	4089
   130   000FFA                     pclath          equ	4090
   131   000FFB                     pclatu          equ	4091
   132   000FEB                     plusw0          equ	4075
   133   000FE3                     plusw1          equ	4067
   134   000FDB                     plusw2          equ	4059
   135   000FED                     postdec0        equ	4077
   136   000FE5                     postdec1        equ	4069
   137   000FDD                     postdec2        equ	4061
   138   000FEE                     postinc0        equ	4078
   139   000FE6                     postinc1        equ	4070
   140   000FDE                     postinc2        equ	4062
   141   000FEC                     preinc0         equ	4076
   142   000FE4                     preinc1         equ	4068
   143   000FDC                     preinc2         equ	4060
   144   000FF3                     prod            equ	4083
   145   000FF4                     prodh           equ	4084
   146   000FF3                     prodl           equ	4083
   147   000FD8                     status          equ	4056
   148   000FF5                     tablat          equ	4085
   149   000FF6                     tblptr          equ	4086
   150   000FF7                     tblptrh         equ	4087
   151   000FF6                     tblptrl         equ	4086
   152   000FF8                     tblptru         equ	4088
   153   000FFD                     tosl            equ	4093
   154   000FE8                     wreg            equ	4072
   155   000F62                     SPPDATA         equ	3938	;# 
   156   000F63                     SPPCFG          equ	3939	;# 
   157   000F64                     SPPEPS          equ	3940	;# 
   158   000F65                     SPPCON          equ	3941	;# 
   159   000F66                     UFRM            equ	3942	;# 
   160   000F66                     UFRML           equ	3942	;# 
   161   000F67                     UFRMH           equ	3943	;# 
   162   000F68                     UIR             equ	3944	;# 
   163   000F69                     UIE             equ	3945	;# 
   164   000F6A                     UEIR            equ	3946	;# 
   165   000F6B                     UEIE            equ	3947	;# 
   166   000F6C                     USTAT           equ	3948	;# 
   167   000F6D                     UCON            equ	3949	;# 
   168   000F6E                     UADDR           equ	3950	;# 
   169   000F6F                     UCFG            equ	3951	;# 
   170   000F70                     UEP0            equ	3952	;# 
   171   000F71                     UEP1            equ	3953	;# 
   172   000F72                     UEP2            equ	3954	;# 
   173   000F73                     UEP3            equ	3955	;# 
   174   000F74                     UEP4            equ	3956	;# 
   175   000F75                     UEP5            equ	3957	;# 
   176   000F76                     UEP6            equ	3958	;# 
   177   000F77                     UEP7            equ	3959	;# 
   178   000F78                     UEP8            equ	3960	;# 
   179   000F79                     UEP9            equ	3961	;# 
   180   000F7A                     UEP10           equ	3962	;# 
   181   000F7B                     UEP11           equ	3963	;# 
   182   000F7C                     UEP12           equ	3964	;# 
   183   000F7D                     UEP13           equ	3965	;# 
   184   000F7E                     UEP14           equ	3966	;# 
   185   000F7F                     UEP15           equ	3967	;# 
   186   000F80                     PORTA           equ	3968	;# 
   187   000F81                     PORTB           equ	3969	;# 
   188   000F82                     PORTC           equ	3970	;# 
   189   000F83                     PORTD           equ	3971	;# 
   190   000F84                     PORTE           equ	3972	;# 
   191   000F89                     LATA            equ	3977	;# 
   192   000F8A                     LATB            equ	3978	;# 
   193   000F8B                     LATC            equ	3979	;# 
   194   000F8C                     LATD            equ	3980	;# 
   195   000F8D                     LATE            equ	3981	;# 
   196   000F92                     TRISA           equ	3986	;# 
   197   000F92                     DDRA            equ	3986	;# 
   198   000F93                     TRISB           equ	3987	;# 
   199   000F93                     DDRB            equ	3987	;# 
   200   000F94                     TRISC           equ	3988	;# 
   201   000F94                     DDRC            equ	3988	;# 
   202   000F95                     TRISD           equ	3989	;# 
   203   000F95                     DDRD            equ	3989	;# 
   204   000F96                     TRISE           equ	3990	;# 
   205   000F96                     DDRE            equ	3990	;# 
   206   000F9B                     OSCTUNE         equ	3995	;# 
   207   000F9D                     PIE1            equ	3997	;# 
   208   000F9E                     PIR1            equ	3998	;# 
   209   000F9F                     IPR1            equ	3999	;# 
   210   000FA0                     PIE2            equ	4000	;# 
   211   000FA1                     PIR2            equ	4001	;# 
   212   000FA2                     IPR2            equ	4002	;# 
   213   000FA6                     EECON1          equ	4006	;# 
   214   000FA7                     EECON2          equ	4007	;# 
   215   000FA8                     EEDATA          equ	4008	;# 
   216   000FA9                     EEADR           equ	4009	;# 
   217   000FAB                     RCSTA           equ	4011	;# 
   218   000FAB                     RCSTA1          equ	4011	;# 
   219   000FAC                     TXSTA           equ	4012	;# 
   220   000FAC                     TXSTA1          equ	4012	;# 
   221   000FAD                     TXREG           equ	4013	;# 
   222   000FAD                     TXREG1          equ	4013	;# 
   223   000FAE                     RCREG           equ	4014	;# 
   224   000FAE                     RCREG1          equ	4014	;# 
   225   000FAF                     SPBRG           equ	4015	;# 
   226   000FAF                     SPBRG1          equ	4015	;# 
   227   000FB0                     SPBRGH          equ	4016	;# 
   228   000FB1                     T3CON           equ	4017	;# 
   229   000FB2                     TMR3            equ	4018	;# 
   230   000FB2                     TMR3L           equ	4018	;# 
   231   000FB3                     TMR3H           equ	4019	;# 
   232   000FB4                     CMCON           equ	4020	;# 
   233   000FB5                     CVRCON          equ	4021	;# 
   234   000FB6                     ECCP1AS         equ	4022	;# 
   235   000FB6                     CCP1AS          equ	4022	;# 
   236   000FB7                     ECCP1DEL        equ	4023	;# 
   237   000FB7                     CCP1DEL         equ	4023	;# 
   238   000FB8                     BAUDCON         equ	4024	;# 
   239   000FB8                     BAUDCTL         equ	4024	;# 
   240   000FBA                     CCP2CON         equ	4026	;# 
   241   000FBB                     CCPR2           equ	4027	;# 
   242   000FBB                     CCPR2L          equ	4027	;# 
   243   000FBC                     CCPR2H          equ	4028	;# 
   244   000FBD                     CCP1CON         equ	4029	;# 
   245   000FBD                     ECCP1CON        equ	4029	;# 
   246   000FBE                     CCPR1           equ	4030	;# 
   247   000FBE                     CCPR1L          equ	4030	;# 
   248   000FBF                     CCPR1H          equ	4031	;# 
   249   000FC0                     ADCON2          equ	4032	;# 
   250   000FC1                     ADCON1          equ	4033	;# 
   251   000FC2                     ADCON0          equ	4034	;# 
   252   000FC3                     ADRES           equ	4035	;# 
   253   000FC3                     ADRESL          equ	4035	;# 
   254   000FC4                     ADRESH          equ	4036	;# 
   255   000FC5                     SSPCON2         equ	4037	;# 
   256   000FC6                     SSPCON1         equ	4038	;# 
   257   000FC7                     SSPSTAT         equ	4039	;# 
   258   000FC8                     SSPADD          equ	4040	;# 
   259   000FC9                     SSPBUF          equ	4041	;# 
   260   000FCA                     T2CON           equ	4042	;# 
   261   000FCB                     PR2             equ	4043	;# 
   262   000FCB                     MEMCON          equ	4043	;# 
   263   000FCC                     TMR2            equ	4044	;# 
   264   000FCD                     T1CON           equ	4045	;# 
   265   000FCE                     TMR1            equ	4046	;# 
   266   000FCE                     TMR1L           equ	4046	;# 
   267   000FCF                     TMR1H           equ	4047	;# 
   268   000FD0                     RCON            equ	4048	;# 
   269   000FD1                     WDTCON          equ	4049	;# 
   270   000FD2                     HLVDCON         equ	4050	;# 
   271   000FD2                     LVDCON          equ	4050	;# 
   272   000FD3                     OSCCON          equ	4051	;# 
   273   000FD5                     T0CON           equ	4053	;# 
   274   000FD6                     TMR0            equ	4054	;# 
   275   000FD6                     TMR0L           equ	4054	;# 
   276   000FD7                     TMR0H           equ	4055	;# 
   277   000FD8                     STATUS          equ	4056	;# 
   278   000FD9                     FSR2            equ	4057	;# 
   279   000FD9                     FSR2L           equ	4057	;# 
   280   000FDA                     FSR2H           equ	4058	;# 
   281   000FDB                     PLUSW2          equ	4059	;# 
   282   000FDC                     PREINC2         equ	4060	;# 
   283   000FDD                     POSTDEC2        equ	4061	;# 
   284   000FDE                     POSTINC2        equ	4062	;# 
   285   000FDF                     INDF2           equ	4063	;# 
   286   000FE0                     BSR             equ	4064	;# 
   287   000FE1                     FSR1            equ	4065	;# 
   288   000FE1                     FSR1L           equ	4065	;# 
   289   000FE2                     FSR1H           equ	4066	;# 
   290   000FE3                     PLUSW1          equ	4067	;# 
   291   000FE4                     PREINC1         equ	4068	;# 
   292   000FE5                     POSTDEC1        equ	4069	;# 
   293   000FE6                     POSTINC1        equ	4070	;# 
   294   000FE7                     INDF1           equ	4071	;# 
   295   000FE8                     WREG            equ	4072	;# 
   296   000FE9                     FSR0            equ	4073	;# 
   297   000FE9                     FSR0L           equ	4073	;# 
   298   000FEA                     FSR0H           equ	4074	;# 
   299   000FEB                     PLUSW0          equ	4075	;# 
   300   000FEC                     PREINC0         equ	4076	;# 
   301   000FED                     POSTDEC0        equ	4077	;# 
   302   000FEE                     POSTINC0        equ	4078	;# 
   303   000FEF                     INDF0           equ	4079	;# 
   304   000FF0                     INTCON3         equ	4080	;# 
   305   000FF1                     INTCON2         equ	4081	;# 
   306   000FF2                     INTCON          equ	4082	;# 
   307   000FF3                     PROD            equ	4083	;# 
   308   000FF3                     PRODL           equ	4083	;# 
   309   000FF4                     PRODH           equ	4084	;# 
   310   000FF5                     TABLAT          equ	4085	;# 
   311   000FF6                     TBLPTR          equ	4086	;# 
   312   000FF6                     TBLPTRL         equ	4086	;# 
   313   000FF7                     TBLPTRH         equ	4087	;# 
   314   000FF8                     TBLPTRU         equ	4088	;# 
   315   000FF9                     PCLAT           equ	4089	;# 
   316   000FF9                     PC              equ	4089	;# 
   317   000FF9                     PCL             equ	4089	;# 
   318   000FFA                     PCLATH          equ	4090	;# 
   319   000FFB                     PCLATU          equ	4091	;# 
   320   000FFC                     STKPTR          equ	4092	;# 
   321   000FFD                     TOS             equ	4093	;# 
   322   000FFD                     TOSL            equ	4093	;# 
   323   000FFE                     TOSH            equ	4094	;# 
   324   000FFF                     TOSU            equ	4095	;# 
   325                           
   326                           	psect	idataBANK1
   327   007232                     __pidataBANK1:
   328                           	callstack 0
   329                           
   330                           ;initializer for _MQ2_Ro
   331   007232  0000               	dw	0
   332   007234  4120               	dw	16672
   333                           
   334                           	psect	mediumconst
   335   007E5A                     __pmediumconst:
   336                           	callstack 0
   337   007E5A  00                 	db	0
   338   007E5B                     _dp_l:
   339                           	callstack 0
   340   007E5B  0000               	dw	0
   341   007E5D  0000               	dw	0
   342   007E5F  CFDC               	dw	53212
   343   007E61  35D1               	dw	13777
   344   007E63                     __end_of_dp_l:
   345                           	callstack 0
   346   007E63                     _dp_h:
   347                           	callstack 0
   348   007E63  0000               	dw	0
   349   007E65  0000               	dw	0
   350   007E67  C000               	dw	49152
   351   007E69  3F15               	dw	16149
   352   007E6B                     __end_of_dp_h:
   353                           	callstack 0
   354   007E6B                     _bp:
   355                           	callstack 0
   356   007E6B  0000               	dw	0
   357   007E6D  3F80               	dw	16256
   358   007E6F  0000               	dw	0
   359   007E71  3FC0               	dw	16320
   360   007E73                     __end_of_bp:
   361                           	callstack 0
   362   007E73  A570               	dw	42352
   363   007E75  36EC               	dw	14060
   364   007E77                     __end_of_ivln2_l:
   365                           	callstack 0
   366   007E77  AA3B               	dw	43579
   367   007E79  3FB8               	dw	16312
   368   007E7B                     __end_of_ivln2:
   369                           	callstack 0
   370   007E7B  384F               	dw	14415
   371   007E7D  3F76               	dw	16246
   372   007E7F                     __end_of_cp:
   373                           	callstack 0
   374   007E7F  AA3C               	dw	43580
   375   007E81  3338               	dw	13112
   376   007E83                     __end_of_ovt:
   377                           	callstack 0
   378   007E83  BE8C               	dw	48780
   379   007E85  35BF               	dw	13759
   380   007E87                     __end_of_lg2_l:
   381                           	callstack 0
   382   007E87  7200               	dw	29184
   383   007E89  3F31               	dw	16177
   384   007E8B                     __end_of_lg2_h:
   385                           	callstack 0
   386   007E8B  7218               	dw	29208
   387   007E8D  3F31               	dw	16177
   388   007E8F                     __end_of_lg2:
   389                           	callstack 0
   390   007E8F  BB4C               	dw	47948
   391   007E91  3331               	dw	13105
   392   007E93                     __end_of_P5:
   393                           	callstack 0
   394   007E93  EA0E               	dw	59918
   395   007E95  B5DD               	dw	46557
   396   007E97                     __end_of_P4:
   397                           	callstack 0
   398   007E97  B355               	dw	45909
   399   007E99  388A               	dw	14474
   400   007E9B                     __end_of_P3:
   401                           	callstack 0
   402   007E9B  0B61               	dw	2913
   403   007E9D  BB36               	dw	47926
   404   007E9F                     __end_of_P2:
   405                           	callstack 0
   406   007E9F  AAAB               	dw	43691
   407   007EA1  3E2A               	dw	15914
   408   007EA3                     __end_of_P1:
   409                           	callstack 0
   410   007EA3  F142               	dw	61762
   411   007EA5  3E53               	dw	15955
   412   007EA7                     __end_of_L6:
   413                           	callstack 0
   414   007EA7  3255               	dw	12885
   415   007EA9  3E6C               	dw	15980
   416   007EAB                     __end_of_L5:
   417                           	callstack 0
   418   007EAB  A305               	dw	41733
   419   007EAD  3E8B               	dw	16011
   420   007EAF                     __end_of_L4:
   421                           	callstack 0
   422   007EAF  AAAB               	dw	43691
   423   007EB1  3EAA               	dw	16042
   424   007EB3                     __end_of_L3:
   425                           	callstack 0
   426   007EB3  6DB7               	dw	28087
   427   007EB5  3EDB               	dw	16091
   428   007EB7                     __end_of_L2:
   429                           	callstack 0
   430   007EB7  999A               	dw	39322
   431   007EB9  3F19               	dw	16153
   432   007EBB                     __end_of_L1:
   433                           	callstack 0
   434   007EBB  0000               	dw	0
   435   007EBD  4B80               	dw	19328
   436   007EBF                     __end_of_two24:
   437                           	callstack 0
   438   007EBF  01F4               	dw	500
   439   007EC1  0000               	dw	0
   440   007EC3                     __end_of_TEST_BLINK_INTERVAL:
   441                           	callstack 0
   442   007EC3  2710               	dw	10000
   443   007EC5  0000               	dw	0
   444   007EC7                     __end_of_TEST_DURATION:
   445                           	callstack 0
   446   007EC7  AA00               	dw	43520
   447   007EC9  3FB8               	dw	16312
   448   007ECB                     __end_of_ivln2_h:
   449                           	callstack 0
   450   007ECB  23C6               	dw	9158
   451   007ECD  B8F6               	dw	47350
   452   007ECF                     __end_of_cp_l:
   453                           	callstack 0
   454   007ECF  4000               	dw	16384
   455   007ED1  3F76               	dw	16246
   456   007ED3                     __end_of_cp_h:
   457                           	callstack 0
   458   007CA7                     _TRISC7         set	31911
   459   007CA6                     _TRISC6         set	31910
   460   007C92                     _TRISA2         set	31890
   461   007C91                     _TRISA1         set	31889
   462   007C90                     _TRISA0         set	31888
   463   000FAE                     _RCREG          set	4014
   464   000F9E                     _PIR1bits       set	3998
   465   000FAB                     _RCSTAbits      set	4011
   466   000FAF                     _SPBRG          set	4015
   467   000FC3                     _ADRESL         set	4035
   468   000FC4                     _ADRESH         set	4036
   469   000FC0                     _ADCON2         set	4032
   470   000FC1                     _ADCON1         set	4033
   471   000FC2                     _ADCON0bits     set	4034
   472   000FF2                     _INTCONbits     set	4082
   473   000FD0                     _RCONbits       set	4048
   474   000FF1                     _INTCON2bits    set	4081
   475   000F93                     _TRISBbits      set	3987
   476   000FAD                     _TXREG          set	4013
   477   000FAC                     _TXSTAbits      set	4012
   478   000F81                     _PORTBbits      set	3969
   479   000F81                     _PORTB          set	3969
   480   000F93                     _TRISB          set	3987
   481   000FD3                     _OSCCON         set	4051
   482   000FF0                     _INTCON3bits    set	4080
   483   007ED3                     STR_14:
   484   007ED3  7B                 	db	123
   485   007ED4  22                 	db	34
   486   007ED5  74                 	db	116	;'t'
   487   007ED6  22                 	db	34
   488   007ED7  3A                 	db	58	;':'
   489   007ED8  25                 	db	37
   490   007ED9  2E                 	db	46
   491   007EDA  31                 	db	49	;'1'
   492   007EDB  66                 	db	102	;'f'
   493   007EDC  2C                 	db	44
   494   007EDD  22                 	db	34
   495   007EDE  66                 	db	102	;'f'
   496   007EDF  64                 	db	100	;'d'
   497   007EE0  22                 	db	34
   498   007EE1  3A                 	db	58	;':'
   499   007EE2  25                 	db	37
   500   007EE3  64                 	db	100	;'d'
   501   007EE4  2C                 	db	44
   502   007EE5  22                 	db	34
   503   007EE6  66                 	db	102	;'f'
   504   007EE7  69                 	db	105	;'i'
   505   007EE8  22                 	db	34
   506   007EE9  3A                 	db	58	;':'
   507   007EEA  25                 	db	37
   508   007EEB  2E                 	db	46
   509   007EEC  31                 	db	49	;'1'
   510   007EED  66                 	db	102	;'f'
   511   007EEE  2C                 	db	44
   512   007EEF  22                 	db	34
   513   007EF0  63                 	db	99	;'c'
   514   007EF1  6F                 	db	111	;'o'
   515   007EF2  22                 	db	34
   516   007EF3  3A                 	db	58	;':'
   517   007EF4  25                 	db	37
   518   007EF5  2E                 	db	46
   519   007EF6  31                 	db	49	;'1'
   520   007EF7  66                 	db	102	;'f'
   521   007EF8  2C                 	db	44
   522   007EF9  22                 	db	34
   523   007EFA  66                 	db	102	;'f'
   524   007EFB  72                 	db	114	;'r'
   525   007EFC  22                 	db	34
   526   007EFD  3A                 	db	58	;':'
   527   007EFE  25                 	db	37
   528   007EFF  2E                 	db	46
   529   007F00  32                 	db	50	;'2'
   530   007F01  66                 	db	102	;'f'
   531   007F02  2C                 	db	44
   532   007F03  22                 	db	34
   533   007F04  74                 	db	116	;'t'
   534   007F05  66                 	db	102	;'f'
   535   007F06  22                 	db	34
   536   007F07  3A                 	db	58	;':'
   537   007F08  25                 	db	37
   538   007F09  2E                 	db	46
   539   007F0A  32                 	db	50	;'2'
   540   007F0B  66                 	db	102	;'f'
   541   007F0C  2C                 	db	44
   542   007F0D  22                 	db	34
   543   007F0E  70                 	db	112	;'p'
   544   007F0F  22                 	db	34
   545   007F10  3A                 	db	58	;':'
   546   007F11  25                 	db	37
   547   007F12  64                 	db	100	;'d'
   548   007F13  2C                 	db	44
   549   007F14  22                 	db	34
   550   007F15  61                 	db	97	;'a'
   551   007F16  22                 	db	34
   552   007F17  3A                 	db	58	;':'
   553   007F18  25                 	db	37
   554   007F19  64                 	db	100	;'d'
   555   007F1A  2C                 	db	44
   556   007F1B  22                 	db	34
   557   007F1C  63                 	db	99	;'c'
   558   007F1D  6D                 	db	109	;'m'
   559   007F1E  64                 	db	100	;'d'
   560   007F1F  22                 	db	34
   561   007F20  3A                 	db	58	;':'
   562   007F21  7B                 	db	123
   563   007F22  22                 	db	34
   564   007F23  74                 	db	116	;'t'
   565   007F24  65                 	db	101	;'e'
   566   007F25  73                 	db	115	;'s'
   567   007F26  74                 	db	116	;'t'
   568   007F27  22                 	db	34
   569   007F28  3A                 	db	58	;':'
   570   007F29  25                 	db	37
   571   007F2A  64                 	db	100	;'d'
   572   007F2B  2C                 	db	44
   573   007F2C  22                 	db	34
   574   007F2D  73                 	db	115	;'s'
   575   007F2E  68                 	db	104	;'h'
   576   007F2F  75                 	db	117	;'u'
   577   007F30  74                 	db	116	;'t'
   578   007F31  64                 	db	100	;'d'
   579   007F32  6F                 	db	111	;'o'
   580   007F33  77                 	db	119	;'w'
   581   007F34  6E                 	db	110	;'n'
   582   007F35  22                 	db	34
   583   007F36  3A                 	db	58	;':'
   584   007F37  25                 	db	37
   585   007F38  64                 	db	100	;'d'
   586   007F39  7D                 	db	125
   587   007F3A  7D                 	db	125
   588   007F3B  0D                 	db	13
   589   007F3C  0A                 	db	10
   590   007F3D  00                 	db	0
   591   007F3E                     STR_13:
   592   007F3E  7B                 	db	123
   593   007F3F  22                 	db	34
   594   007F40  65                 	db	101	;'e'
   595   007F41  76                 	db	118	;'v'
   596   007F42  65                 	db	101	;'e'
   597   007F43  6E                 	db	110	;'n'
   598   007F44  74                 	db	116	;'t'
   599   007F45  22                 	db	34
   600   007F46  3A                 	db	58	;':'
   601   007F47  22                 	db	34
   602   007F48  25                 	db	37
   603   007F49  73                 	db	115	;'s'
   604   007F4A  22                 	db	34
   605   007F4B  2C                 	db	44
   606   007F4C  22                 	db	34
   607   007F4D  73                 	db	115	;'s'
   608   007F4E  74                 	db	116	;'t'
   609   007F4F  61                 	db	97	;'a'
   610   007F50  72                 	db	114	;'r'
   611   007F51  74                 	db	116	;'t'
   612   007F52  5F                 	db	95	;'_'
   613   007F53  74                 	db	116	;'t'
   614   007F54  69                 	db	105	;'i'
   615   007F55  6D                 	db	109	;'m'
   616   007F56  65                 	db	101	;'e'
   617   007F57  22                 	db	34
   618   007F58  3A                 	db	58	;':'
   619   007F59  25                 	db	37
   620   007F5A  6C                 	db	108	;'l'
   621   007F5B  75                 	db	117	;'u'
   622   007F5C  2C                 	db	44
   623   007F5D  22                 	db	34
   624   007F5E  74                 	db	116	;'t'
   625   007F5F  30                 	db	48	;'0'
   626   007F60  22                 	db	34
   627   007F61  3A                 	db	58	;':'
   628   007F62  25                 	db	37
   629   007F63  2E                 	db	46
   630   007F64  31                 	db	49	;'1'
   631   007F65  66                 	db	102	;'f'
   632   007F66  2C                 	db	44
   633   007F67  22                 	db	34
   634   007F68  66                 	db	102	;'f'
   635   007F69  69                 	db	105	;'i'
   636   007F6A  30                 	db	48	;'0'
   637   007F6B  22                 	db	34
   638   007F6C  3A                 	db	58	;':'
   639   007F6D  25                 	db	37
   640   007F6E  2E                 	db	46
   641   007F6F  31                 	db	49	;'1'
   642   007F70  66                 	db	102	;'f'
   643   007F71  2C                 	db	44
   644   007F72  22                 	db	34
   645   007F73  63                 	db	99	;'c'
   646   007F74  6F                 	db	111	;'o'
   647   007F75  30                 	db	48	;'0'
   648   007F76  22                 	db	34
   649   007F77  3A                 	db	58	;':'
   650   007F78  25                 	db	37
   651   007F79  2E                 	db	46
   652   007F7A  31                 	db	49	;'1'
   653   007F7B  66                 	db	102	;'f'
   654   007F7C  2C                 	db	44
   655   007F7D  22                 	db	34
   656   007F7E  77                 	db	119	;'w'
   657   007F7F  61                 	db	97	;'a'
   658   007F80  74                 	db	116	;'t'
   659   007F81  65                 	db	101	;'e'
   660   007F82  72                 	db	114	;'r'
   661   007F83  22                 	db	34
   662   007F84  3A                 	db	58	;':'
   663   007F85  25                 	db	37
   664   007F86  2E                 	db	46
   665   007F87  32                 	db	50	;'2'
   666   007F88  66                 	db	102	;'f'
   667   007F89  7D                 	db	125
   668   007F8A  0D                 	db	13
   669   007F8B  0A                 	db	10
   670   007F8C  00                 	db	0
   671   007F8D                     STR_7:
   672   007F8D  7B                 	db	123
   673   007F8E  22                 	db	34
   674   007F8F  65                 	db	101	;'e'
   675   007F90  76                 	db	118	;'v'
   676   007F91  65                 	db	101	;'e'
   677   007F92  6E                 	db	110	;'n'
   678   007F93  74                 	db	116	;'t'
   679   007F94  22                 	db	34
   680   007F95  3A                 	db	58	;':'
   681   007F96  22                 	db	34
   682   007F97  25                 	db	37
   683   007F98  73                 	db	115	;'s'
   684   007F99  22                 	db	34
   685   007F9A  2C                 	db	44
   686   007F9B  22                 	db	34
   687   007F9C  74                 	db	116	;'t'
   688   007F9D  69                 	db	105	;'i'
   689   007F9E  6D                 	db	109	;'m'
   690   007F9F  65                 	db	101	;'e'
   691   007FA0  22                 	db	34
   692   007FA1  3A                 	db	58	;':'
   693   007FA2  25                 	db	37
   694   007FA3  6C                 	db	108	;'l'
   695   007FA4  75                 	db	117	;'u'
   696   007FA5  7D                 	db	125
   697   007FA6  0D                 	db	13
   698   007FA7  0A                 	db	10
   699   007FA8  00                 	db	0
   700   007FA9                     STR_11:
   701   007FA9  73                 	db	115	;'s'
   702   007FAA  68                 	db	104	;'h'
   703   007FAB  75                 	db	117	;'u'
   704   007FAC  74                 	db	116	;'t'
   705   007FAD  64                 	db	100	;'d'
   706   007FAE  6F                 	db	111	;'o'
   707   007FAF  77                 	db	119	;'w'
   708   007FB0  6E                 	db	110	;'n'
   709   007FB1  5F                 	db	95	;'_'
   710   007FB2  65                 	db	101	;'e'
   711   007FB3  6E                 	db	110	;'n'
   712   007FB4  64                 	db	100	;'d'
   713   007FB5  00                 	db	0
   714   007FB6                     STR_5:
   715   007FB6  73                 	db	115	;'s'
   716   007FB7  79                 	db	121	;'y'
   717   007FB8  73                 	db	115	;'s'
   718   007FB9  74                 	db	116	;'t'
   719   007FBA  65                 	db	101	;'e'
   720   007FBB  6D                 	db	109	;'m'
   721   007FBC  5F                 	db	95	;'_'
   722   007FBD  73                 	db	115	;'s'
   723   007FBE  74                 	db	116	;'t'
   724   007FBF  61                 	db	97	;'a'
   725   007FC0  72                 	db	114	;'r'
   726   007FC1  74                 	db	116	;'t'
   727   007FC2  00                 	db	0
   728   007FC3                     STR_9:
   729   007FC3  66                 	db	102	;'f'
   730   007FC4  69                 	db	105	;'i'
   731   007FC5  72                 	db	114	;'r'
   732   007FC6  65                 	db	101	;'e'
   733   007FC7  5F                 	db	95	;'_'
   734   007FC8  65                 	db	101	;'e'
   735   007FC9  6E                 	db	110	;'n'
   736   007FCA  64                 	db	100	;'d'
   737   007FCB  00                 	db	0
   738   007FCC                     STR_10:
   739   007FCC  74                 	db	116	;'t'
   740   007FCD  65                 	db	101	;'e'
   741   007FCE  73                 	db	115	;'s'
   742   007FCF  74                 	db	116	;'t'
   743   007FD0  5F                 	db	95	;'_'
   744   007FD1  65                 	db	101	;'e'
   745   007FD2  6E                 	db	110	;'n'
   746   007FD3  64                 	db	100	;'d'
   747   007FD4  00                 	db	0
   748   007FD5                     STR_4:
   749   007FD5  73                 	db	115	;'s'
   750   007FD6  68                 	db	104	;'h'
   751   007FD7  75                 	db	117	;'u'
   752   007FD8  74                 	db	116	;'t'
   753   007FD9  64                 	db	100	;'d'
   754   007FDA  6F                 	db	111	;'o'
   755   007FDB  77                 	db	119	;'w'
   756   007FDC  6E                 	db	110	;'n'
   757   007FDD  00                 	db	0
   758   007FDE                     STR_6:
   759   007FDE  75                 	db	117	;'u'
   760   007FDF  6E                 	db	110	;'n'
   761   007FE0  6B                 	db	107	;'k'
   762   007FE1  6E                 	db	110	;'n'
   763   007FE2  6F                 	db	111	;'o'
   764   007FE3  77                 	db	119	;'w'
   765   007FE4  6E                 	db	110	;'n'
   766   007FE5  00                 	db	0
   767   007FE6                     STR_21:
   768   007FE6  28                 	db	40
   769   007FE7  6E                 	db	110	;'n'
   770   007FE8  75                 	db	117	;'u'
   771   007FE9  6C                 	db	108	;'l'
   772   007FEA  6C                 	db	108	;'l'
   773   007FEB  29                 	db	41
   774   007FEC  00                 	db	0
   775   007FED                     STR_2:
   776   007FED  66                 	db	102	;'f'
   777   007FEE  69                 	db	105	;'i'
   778   007FEF  72                 	db	114	;'r'
   779   007FF0  65                 	db	101	;'e'
   780   007FF1  00                 	db	0
   781   007FF2                     STR_3:
   782   007FF2  74                 	db	116	;'t'
   783   007FF3  65                 	db	101	;'e'
   784   007FF4  73                 	db	115	;'s'
   785   007FF5  74                 	db	116	;'t'
   786   007FF6  00                 	db	0
   787   007FF7                     STR_15:
   788   007FF7  69                 	db	105	;'i'
   789   007FF8  6E                 	db	110	;'n'
   790   007FF9  66                 	db	102	;'f'
   791   007FFA  00                 	db	0
   792   007FFB                     STR_18:
   793   007FFB  6E                 	db	110	;'n'
   794   007FFC  61                 	db	97	;'a'
   795   007FFD  6E                 	db	110	;'n'
   796   007FFE  00                 	db	0
   797   007FDE                     STR_12          equ	STR_6
   798   007FFB                     STR_19          equ	STR_18
   799   007FFB                     STR_20          equ	STR_18
   800   007FF7                     STR_16          equ	STR_15
   801   007FF7                     STR_17          equ	STR_15
   802   007F8C                     STR_1           equ	STR_13+78
   803   007F8C                     STR_8           equ	STR_13+78
   804   007FFF  00                 	db	0	; dummy byte at the end
   805   007E5A                     __smallconst    set	__pmediumconst
   806   007E5A                     __mediumconst   set	__pmediumconst
   807   000002                     __activetblptr  equ	2
   808                           
   809                           ; #config settings
   810                           
   811                           	psect	cinit
   812   006F1A                     __pcinit:
   813                           	callstack 0
   814   006F1A                     start_initialization:
   815                           	callstack 0
   816   006F1A                     __initialization:
   817                           	callstack 0
   818                           
   819                           ; Initialize objects allocated to BANK1 (4 bytes)
   820                           ; load TBLPTR registers with __pidataBANK1
   821   006F1A  0E32               	movlw	low __pidataBANK1
   822   006F1C  6EF6               	movwf	tblptrl,c
   823   006F1E  0E72               	movlw	high __pidataBANK1
   824   006F20  6EF7               	movwf	tblptrh,c
   825   006F22  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   826   006F24  6EF8               	movwf	tblptru,c
   827   006F26  EE01  F0F9         	lfsr	0,__pdataBANK1
   828   006F2A  EE10 F004          	lfsr	1,4
   829   006F2E                     copy_data0:
   830   006F2E  0009               	tblrd		*+
   831   006F30  CFF5 FFEE          	movff	tablat,postinc0
   832   006F34  50E5               	movf	postdec1,w,c
   833   006F36  50E1               	movf	fsr1l,w,c
   834   006F38  E1FA               	bnz	copy_data0
   835                           
   836                           ; Clear objects allocated to BANK2 (181 bytes)
   837   006F3A  EE02  F000         	lfsr	0,__pbssBANK2
   838   006F3E  0EB5               	movlw	181
   839   006F40                     clear_0:
   840   006F40  6AEE               	clrf	postinc0,c
   841   006F42  06E8               	decf	wreg,f,c
   842   006F44  E1FD               	bnz	clear_0
   843                           
   844                           ; Clear objects allocated to BANK1 (45 bytes)
   845   006F46  EE01  F0CC         	lfsr	0,__pbssBANK1
   846   006F4A  0E2D               	movlw	45
   847   006F4C                     clear_1:
   848   006F4C  6AEE               	clrf	postinc0,c
   849   006F4E  06E8               	decf	wreg,f,c
   850   006F50  E1FD               	bnz	clear_1
   851                           
   852                           ; Clear objects allocated to BANK0 (19 bytes)
   853   006F52  EE00  F0EB         	lfsr	0,__pbssBANK0
   854   006F56  0E13               	movlw	19
   855   006F58                     clear_2:
   856   006F58  6AEE               	clrf	postinc0,c
   857   006F5A  06E8               	decf	wreg,f,c
   858   006F5C  E1FD               	bnz	clear_2
   859   006F5E                     end_of_initialization:
   860                           	callstack 0
   861   006F5E                     __end_of__initialization:
   862                           	callstack 0
   863   006F5E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   864   006F60  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   865   006F62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   866   006F64  6EF8               	movwf	tblptru,c
   867   006F66  0100               	movlb	0
   868   006F68  EF6C  F024         	goto	_main	;jump to C main() function
   869                           
   870                           	psect	bssBANK0
   871   0000EB                     __pbssBANK0:
   872                           	callstack 0
   873   0000EB                     _co_ppm:
   874                           	callstack 0
   875   0000EB                     	ds	4
   876   0000EF                     _temperature:
   877                           	callstack 0
   878   0000EF                     	ds	4
   879   0000F3                     _prec:
   880                           	callstack 0
   881   0000F3                     	ds	2
   882   0000F5                     _pulse_count:
   883                           	callstack 0
   884   0000F5                     	ds	2
   885   0000F7                     Read_Flame_Sensor@last_detected:
   886                           	callstack 0
   887   0000F7                     	ds	1
   888   0000F8                     _event_active:
   889                           	callstack 0
   890   0000F8                     	ds	1
   891   0000F9                     _trigger_test:
   892                           	callstack 0
   893   0000F9                     	ds	1
   894   0000FA                     _shutdown_system:
   895                           	callstack 0
   896   0000FA                     	ds	1
   897   0000FB                     _filter_index:
   898                           	callstack 0
   899   0000FB                     	ds	1
   900   0000FC                     _fire_alarm:
   901                           	callstack 0
   902   0000FC                     	ds	1
   903   0000FD                     _flame_detected:
   904                           	callstack 0
   905   0000FD                     	ds	1
   906                           
   907                           	psect	bssBANK1
   908   0001CC                     __pbssBANK1:
   909                           	callstack 0
   910   0001CC                     _last_flow_reset_time:
   911                           	callstack 0
   912   0001CC                     	ds	4
   913   0001D0                     _system_millis:
   914                           	callstack 0
   915   0001D0                     	ds	4
   916   0001D4                     _test_start_time:
   917                           	callstack 0
   918   0001D4                     	ds	4
   919   0001D8                     _calibrationCounter:
   920                           	callstack 0
   921   0001D8                     	ds	4
   922   0001DC                     _total_flow:
   923                           	callstack 0
   924   0001DC                     	ds	4
   925   0001E0                     _flow_rate:
   926                           	callstack 0
   927   0001E0                     	ds	4
   928   0001E4                     _flame_base_voltage:
   929                           	callstack 0
   930   0001E4                     	ds	4
   931   0001E8                     _flame_intensity:
   932                           	callstack 0
   933   0001E8                     	ds	4
   934   0001EC                     _errno:
   935                           	callstack 0
   936   0001EC                     	ds	2
   937   0001EE                     _width:
   938                           	callstack 0
   939   0001EE                     	ds	2
   940   0001F0                     Calculate_Flow@last_pulse_count:
   941                           	callstack 0
   942   0001F0                     	ds	2
   943   0001F2                     _flags:
   944                           	callstack 0
   945   0001F2                     	ds	1
   946   0001F3                     Read_MQ2_Sensor@calibrated:
   947                           	callstack 0
   948   0001F3                     	ds	1
   949   0001F4                     _system_started:
   950                           	callstack 0
   951   0001F4                     	ds	1
   952   0001F5                     _prev_fire_alarm:
   953                           	callstack 0
   954   0001F5                     	ds	1
   955   0001F6                     _alarm_active:
   956                           	callstack 0
   957   0001F6                     	ds	1
   958   0001F7                     _pump_active:
   959                           	callstack 0
   960   0001F7                     	ds	1
   961   0001F8                     _flame_calibrated:
   962                           	callstack 0
   963   0001F8                     	ds	1
   964                           
   965                           	psect	dataBANK1
   966   0001F9                     __pdataBANK1:
   967                           	callstack 0
   968   0001F9                     _MQ2_Ro:
   969                           	callstack 0
   970   0001F9                     	ds	4
   971                           
   972                           	psect	bssBANK2
   973   000200                     __pbssBANK2:
   974                           	callstack 0
   975   000200                     _co_filter:
   976                           	callstack 0
   977   000200                     	ds	28
   978   00021C                     _temp_filter:
   979                           	callstack 0
   980   00021C                     	ds	28
   981   000238                     _current_event:
   982                           	callstack 0
   983   000238                     	ds	25
   984   000251                     floorf@F521:
   985                           	callstack 0
   986   000251                     	ds	4
   987   000255                     ___fpclassifyf@F465:
   988                           	callstack 0
   989   000255                     	ds	4
   990   000259                     Update_Actuators@last_blink:
   991                           	callstack 0
   992   000259                     	ds	4
   993   00025D                     Calculate_Flow@last_calc_time:
   994                           	callstack 0
   995   00025D                     	ds	4
   996   000261                     _test_last_toggle:
   997                           	callstack 0
   998   000261                     	ds	4
   999   000265                     _dbuf:
  1000                           	callstack 0
  1001   000265                     	ds	80
  1002                           
  1003                           	psect	cstackBANK2
  1004   0002B5                     __pcstackBANK2:
  1005                           	callstack 0
  1006   0002B5                     main@cmd:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x0
  1010   0002B5                     	ds	1
  1011   0002B6                     main@sensor_counter:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x1
  1015   0002B6                     	ds	2
  1016   0002B8                     main@i:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x3
  1020   0002B8                     	ds	2
  1021                           
  1022                           	psect	cstackBANK1
  1023   000100                     __pcstackBANK1:
  1024                           	callstack 0
  1025   000100                     _powf$1897:
  1026                           	callstack 0
  1027   000100                     Send_Event_Data@event_buffer:
  1028                           	callstack 0
  1029   000100                     End_Event@event_buffer:
  1030                           	callstack 0
  1031   000100                     Send_Sensor_Data@buffer:
  1032                           	callstack 0
  1033                           
  1034                           ; 200 bytes @ 0x0
  1035   000100                     	ds	4
  1036   000104                     _powf$1898:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x4
  1040   000104                     	ds	4
  1041   000108                     _powf$1902:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x8
  1045   000108                     	ds	4
  1046   00010C                     _powf$1903:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0xC
  1050   00010C                     	ds	4
  1051   000110                     _powf$1904:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x10
  1055   000110                     	ds	4
  1056   000114                     _powf$1905:
  1057                           	callstack 0
  1058                           
  1059                           ; 4 bytes @ 0x14
  1060   000114                     	ds	4
  1061   000118                     _powf$1906:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x18
  1065   000118                     	ds	4
  1066   00011C                     powf@t2:
  1067                           	callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x1C
  1070   00011C                     	ds	4
  1071   000120                     powf@z_h:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x20
  1075   000120                     	ds	4
  1076   000124                     powf@z_l:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x24
  1080   000124                     	ds	4
  1081   000128                     powf@i:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x28
  1085   000128                     	ds	4
  1086   00012C                     powf@y1:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x2C
  1090   00012C                     	ds	4
  1091   000130                     powf@s_l:
  1092                           	callstack 0
  1093                           
  1094                           ; 4 bytes @ 0x30
  1095   000130                     	ds	4
  1096   000134                     powf@t_l:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x34
  1100   000134                     	ds	4
  1101   000138                     _powf$1896:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x38
  1105   000138                     	ds	4
  1106   00013C                     _powf$1900:
  1107                           	callstack 0
  1108                           
  1109                           ; 4 bytes @ 0x3C
  1110   00013C                     	ds	4
  1111   000140                     _powf$1901:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x40
  1115   000140                     	ds	4
  1116   000144                     powf@w:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x44
  1120   000144                     	ds	4
  1121   000148                     _powf$1892:
  1122                           	callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x48
  1125   000148                     	ds	4
  1126   00014C                     _powf$1894:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x4C
  1130   00014C                     	ds	4
  1131   000150                     powf@r:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x50
  1135   000150                     	ds	4
  1136   000154                     powf@yisint:
  1137                           	callstack 0
  1138                           
  1139                           ; 4 bytes @ 0x54
  1140   000154                     	ds	4
  1141   000158                     _powf$1893:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x58
  1145   000158                     	ds	4
  1146   00015C                     _powf$1899:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x5C
  1150   00015C                     	ds	4
  1151   000160                     powf@s:
  1152                           	callstack 0
  1153                           
  1154                           ; 4 bytes @ 0x60
  1155   000160                     	ds	4
  1156   000164                     Send_Event_Data@type:
  1157                           	callstack 0
  1158   000164                     powf@sn:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x64
  1162   000164                     	ds	1
  1163   000165                     Send_Event_Data@i:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x65
  1167   000165                     	ds	2
  1168   000167                     Send_Event_Data@event_type_str:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x67
  1172   000167                     	ds	1
  1173   000168                     powf@hx:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x68
  1177   000168                     	ds	4
  1178   00016C                     powf@p_l:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x6C
  1182   00016C                     	ds	4
  1183   000170                     powf@t_h:
  1184                           	callstack 0
  1185                           
  1186                           ; 4 bytes @ 0x70
  1187   000170                     	ds	4
  1188   000174                     powf@s_h:
  1189                           	callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x74
  1192   000174                     	ds	4
  1193   000178                     powf@ax:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x78
  1197   000178                     	ds	4
  1198   00017C                     powf@u:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x7C
  1202   00017C                     	ds	4
  1203   000180                     powf@v:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x80
  1207   000180                     	ds	4
  1208   000184                     powf@hy:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x84
  1212   000184                     	ds	4
  1213   000188                     powf@n:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x88
  1217   000188                     	ds	4
  1218   00018C                     powf@t1:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x8C
  1222   00018C                     	ds	4
  1223   000190                     powf@s2:
  1224                           	callstack 0
  1225                           
  1226                           ; 4 bytes @ 0x90
  1227   000190                     	ds	4
  1228   000194                     powf@iy:
  1229                           	callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x94
  1232   000194                     	ds	4
  1233   000198                     powf@is:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x98
  1237   000198                     	ds	4
  1238   00019C                     _powf$1895:
  1239                           	callstack 0
  1240                           
  1241                           ; 4 bytes @ 0x9C
  1242   00019C                     	ds	4
  1243   0001A0                     powf@p_h:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0xA0
  1247   0001A0                     	ds	4
  1248   0001A4                     powf@k:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0xA4
  1252   0001A4                     	ds	4
  1253   0001A8                     powf@j:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0xA8
  1257   0001A8                     	ds	4
  1258   0001AC                     powf@ix:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0xAC
  1262   0001AC                     	ds	4
  1263   0001B0                     powf@t:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0xB0
  1267   0001B0                     	ds	4
  1268   0001B4                     powf@z:
  1269                           	callstack 0
  1270                           
  1271                           ; 4 bytes @ 0xB4
  1272   0001B4                     	ds	20
  1273   0001C8                     End_Event@event_type_str:
  1274                           	callstack 0
  1275   0001C8                     Send_Sensor_Data@i:
  1276                           	callstack 0
  1277                           
  1278                           ; 2 bytes @ 0xC8
  1279   0001C8                     	ds	2
  1280   0001CA                     End_Event@i:
  1281                           	callstack 0
  1282                           
  1283                           ; 2 bytes @ 0xCA
  1284   0001CA                     	ds	2
  1285                           
  1286                           	psect	cstackBANK0
  1287   000060                     __pcstackBANK0:
  1288                           	callstack 0
  1289   000060                     ?_powf:
  1290                           	callstack 0
  1291   000060                     Calibrate_Flame_Sensor@adc_value:
  1292                           	callstack 0
  1293   000060                     Calibrate_MQ2@Rs:
  1294                           	callstack 0
  1295   000060                     Read_LM35@raw_temp:
  1296                           	callstack 0
  1297   000060                     powf@x:
  1298                           	callstack 0
  1299   000060                     ??_floorf:
  1300                           
  1301                           ; 1 bytes @ 0x0
  1302   000060                     	ds	2
  1303   000062                     Calibrate_Flame_Sensor@sum:
  1304                           	callstack 0
  1305                           
  1306                           ; 4 bytes @ 0x2
  1307   000062                     	ds	2
  1308   000064                     Calibrate_MQ2@adc_value:
  1309                           	callstack 0
  1310   000064                     powf@y:
  1311                           	callstack 0
  1312   000064                     _Read_LM35$1889:
  1313                           	callstack 0
  1314                           
  1315                           ; 4 bytes @ 0x4
  1316   000064                     	ds	2
  1317   000066                     Calibrate_Flame_Sensor@i:
  1318                           	callstack 0
  1319   000066                     Calibrate_MQ2@voltage:
  1320                           	callstack 0
  1321   000066                     floorf@m:
  1322                           	callstack 0
  1323                           
  1324                           ; 4 bytes @ 0x6
  1325   000066                     	ds	1
  1326   000067                     Read_Flame_Sensor@voltage:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x7
  1330   000067                     	ds	1
  1331   000068                     Read_LM35@adc_value:
  1332                           	callstack 0
  1333   000068                     ??_powf:
  1334                           
  1335                           ; 1 bytes @ 0x8
  1336   000068                     	ds	2
  1337   00006A                     Read_LM35@i:
  1338                           	callstack 0
  1339   00006A                     floorf@e:
  1340                           	callstack 0
  1341   00006A                     Calibrate_MQ2@sum:
  1342                           	callstack 0
  1343                           
  1344                           ; 4 bytes @ 0xA
  1345   00006A                     	ds	1
  1346   00006B                     Read_Flame_Sensor@adc_value:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0xB
  1350   00006B                     	ds	1
  1351   00006C                     floorf@u:
  1352                           	callstack 0
  1353                           
  1354                           ; 4 bytes @ 0xC
  1355   00006C                     	ds	1
  1356   00006D                     _Read_Flame_Sensor$806:
  1357                           	callstack 0
  1358                           
  1359                           ; 4 bytes @ 0xD
  1360   00006D                     	ds	1
  1361   00006E                     Calibrate_MQ2@i:
  1362                           	callstack 0
  1363                           
  1364                           ; 1 bytes @ 0xE
  1365   00006E                     	ds	2
  1366   000070                     efgtoa@fp:
  1367                           	callstack 0
  1368                           
  1369                           ; 1 bytes @ 0x10
  1370   000070                     	ds	1
  1371   000071                     Read_Flame_Sensor@intensity:
  1372                           	callstack 0
  1373   000071                     Read_MQ2_Sensor@temp_factor:
  1374                           	callstack 0
  1375   000071                     efgtoa@f:
  1376                           	callstack 0
  1377                           
  1378                           ; 4 bytes @ 0x11
  1379   000071                     	ds	4
  1380   000075                     efgtoa@c:
  1381                           	callstack 0
  1382   000075                     _Read_MQ2_Sensor$1890:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x15
  1386   000075                     	ds	1
  1387   000076                     efgtoa@ne:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x16
  1391   000076                     	ds	2
  1392   000078                     efgtoa@p:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x18
  1396   000078                     	ds	1
  1397   000079                     Read_MQ2_Sensor@adc_value:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x19
  1401   000079                     	ds	1
  1402   00007A                     efgtoa@t:
  1403                           	callstack 0
  1404                           
  1405                           ; 2 bytes @ 0x1A
  1406   00007A                     	ds	1
  1407   00007B                     _Read_MQ2_Sensor$815:
  1408                           	callstack 0
  1409                           
  1410                           ; 4 bytes @ 0x1B
  1411   00007B                     	ds	1
  1412   00007C                     _efgtoa$1427:
  1413                           	callstack 0
  1414                           
  1415                           ; 2 bytes @ 0x1C
  1416   00007C                     	ds	2
  1417   00007E                     efgtoa@pp:
  1418                           	callstack 0
  1419                           
  1420                           ; 1 bytes @ 0x1E
  1421   00007E                     	ds	1
  1422   00007F                     efgtoa@mode:
  1423                           	callstack 0
  1424   00007F                     Read_MQ2_Sensor@voltage:
  1425                           	callstack 0
  1426                           
  1427                           ; 4 bytes @ 0x1F
  1428   00007F                     	ds	1
  1429   000080                     efgtoa@nmode:
  1430                           	callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x20
  1433   000080                     	ds	1
  1434   000081                     efgtoa@d:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x21
  1438   000081                     	ds	2
  1439   000083                     efgtoa@m:
  1440                           	callstack 0
  1441   000083                     Read_MQ2_Sensor@Rs:
  1442                           	callstack 0
  1443                           
  1444                           ; 4 bytes @ 0x23
  1445   000083                     	ds	2
  1446   000085                     efgtoa@e:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x25
  1450   000085                     	ds	2
  1451   000087                     efgtoa@w:
  1452                           	callstack 0
  1453   000087                     _Read_MQ2_Sensor$1891:
  1454                           	callstack 0
  1455                           
  1456                           ; 4 bytes @ 0x27
  1457   000087                     	ds	2
  1458   000089                     efgtoa@ou:
  1459                           	callstack 0
  1460                           
  1461                           ; 4 bytes @ 0x29
  1462   000089                     	ds	2
  1463   00008B                     Read_MQ2_Sensor@i:
  1464                           	callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x2B
  1467   00008B                     	ds	2
  1468   00008D                     efgtoa@i:
  1469                           	callstack 0
  1470   00008D                     Read_MQ2_Sensor@rs_ro_ratio:
  1471                           	callstack 0
  1472                           
  1473                           ; 4 bytes @ 0x2D
  1474   00008D                     	ds	2
  1475   00008F                     efgtoa@h:
  1476                           	callstack 0
  1477                           
  1478                           ; 4 bytes @ 0x2F
  1479   00008F                     	ds	2
  1480   000091                     Read_MQ2_Sensor@ppm:
  1481                           	callstack 0
  1482                           
  1483                           ; 4 bytes @ 0x31
  1484   000091                     	ds	2
  1485   000093                     efgtoa@l:
  1486                           	callstack 0
  1487                           
  1488                           ; 4 bytes @ 0x33
  1489   000093                     	ds	4
  1490   000097                     efgtoa@sign:
  1491                           	callstack 0
  1492                           
  1493                           ; 1 bytes @ 0x37
  1494   000097                     	ds	1
  1495   000098                     efgtoa@g:
  1496                           	callstack 0
  1497                           
  1498                           ; 4 bytes @ 0x38
  1499   000098                     	ds	4
  1500   00009C                     efgtoa@n:
  1501                           	callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x3C
  1504   00009C                     	ds	2
  1505   00009E                     efgtoa@u:
  1506                           	callstack 0
  1507                           
  1508                           ; 4 bytes @ 0x3E
  1509   00009E                     	ds	4
  1510   0000A2                     vfpfcnvrt@fp:
  1511                           	callstack 0
  1512                           
  1513                           ; 1 bytes @ 0x42
  1514   0000A2                     	ds	1
  1515   0000A3                     vfpfcnvrt@fmt:
  1516                           	callstack 0
  1517                           
  1518                           ; 1 bytes @ 0x43
  1519   0000A3                     	ds	1
  1520   0000A4                     vfpfcnvrt@ap:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x44
  1524   0000A4                     	ds	2
  1525   0000A6                     ??_vfpfcnvrt:
  1526                           
  1527                           ; 1 bytes @ 0x46
  1528   0000A6                     	ds	2
  1529   0000A8                     vfpfcnvrt@done:
  1530                           	callstack 0
  1531                           
  1532                           ; 1 bytes @ 0x48
  1533   0000A8                     	ds	1
  1534   0000A9                     vfpfcnvrt@convarg:
  1535                           	callstack 0
  1536                           
  1537                           ; 4 bytes @ 0x49
  1538   0000A9                     	ds	4
  1539   0000AD                     vfpfcnvrt@c:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x4D
  1543   0000AD                     	ds	1
  1544   0000AE                     vfpfcnvrt@cp:
  1545                           	callstack 0
  1546                           
  1547                           ; 2 bytes @ 0x4E
  1548   0000AE                     	ds	2
  1549   0000B0                     ?_vfprintf:
  1550                           	callstack 0
  1551   0000B0                     vfprintf@fp:
  1552                           	callstack 0
  1553                           
  1554                           ; 1 bytes @ 0x50
  1555   0000B0                     	ds	1
  1556   0000B1                     vfprintf@fmt:
  1557                           	callstack 0
  1558                           
  1559                           ; 2 bytes @ 0x51
  1560   0000B1                     	ds	2
  1561   0000B3                     vfprintf@ap:
  1562                           	callstack 0
  1563                           
  1564                           ; 1 bytes @ 0x53
  1565   0000B3                     	ds	1
  1566   0000B4                     vfprintf@cfmt:
  1567                           	callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x54
  1570   0000B4                     	ds	2
  1571   0000B6                     ?_sprintf:
  1572                           	callstack 0
  1573   0000B6                     sprintf@s:
  1574                           	callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x56
  1577   0000B6                     	ds	2
  1578   0000B8                     sprintf@fmt:
  1579                           	callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x58
  1582   0000B8                     	ds	32
  1583   0000D8                     sprintf@ap:
  1584                           	callstack 0
  1585                           
  1586                           ; 1 bytes @ 0x78
  1587   0000D8                     	ds	1
  1588   0000D9                     sprintf@f:
  1589                           	callstack 0
  1590                           
  1591                           ; 11 bytes @ 0x79
  1592   0000D9                     	ds	11
  1593   0000E4                     ??_Send_Event_Data:
  1594   0000E4                     ??_End_Event:
  1595                           
  1596                           ; 1 bytes @ 0x84
  1597   0000E4                     	ds	2
  1598   0000E6                     Start_Event@type:
  1599                           	callstack 0
  1600                           
  1601                           ; 1 bytes @ 0x86
  1602   0000E6                     	ds	1
  1603   0000E7                     ??_main:
  1604                           
  1605                           ; 1 bytes @ 0x87
  1606   0000E7                     	ds	4
  1607                           
  1608                           	psect	cstackCOMRAM
  1609   000001                     __pcstackCOMRAM:
  1610                           	callstack 0
  1611   000001                     ?___fpclassifyf:
  1612                           	callstack 0
  1613   000001                     ?_ADC_Read:
  1614                           	callstack 0
  1615   000001                     ?___awmod:
  1616                           	callstack 0
  1617   000001                     ?_read_prec_or_width:
  1618                           	callstack 0
  1619   000001                     ?_labs:
  1620                           	callstack 0
  1621   000001                     ?_sqrtf:
  1622                           	callstack 0
  1623   000001                     ?___lldiv:
  1624                           	callstack 0
  1625   000001                     ?___aldiv:
  1626                           	callstack 0
  1627   000001                     ?___almod:
  1628                           	callstack 0
  1629   000001                     ?___flneg:
  1630                           	callstack 0
  1631   000001                     ?___fltol:
  1632                           	callstack 0
  1633   000001                     ?___llmod:
  1634                           	callstack 0
  1635   000001                     ?___xxtofl:
  1636                           	callstack 0
  1637   000001                     read_prec_or_width@fmt:
  1638                           	callstack 0
  1639   000001                     ___awmod@dividend:
  1640                           	callstack 0
  1641   000001                     memcpy@d1:
  1642                           	callstack 0
  1643   000001                     fputc@c:
  1644                           	callstack 0
  1645   000001                     strcpy@dest:
  1646                           	callstack 0
  1647   000001                     ___lldiv@dividend:
  1648                           	callstack 0
  1649   000001                     ___aldiv@dividend:
  1650                           	callstack 0
  1651   000001                     ___almod@dividend:
  1652                           	callstack 0
  1653   000001                     ___fleq@ff1:
  1654                           	callstack 0
  1655   000001                     ___flneg@f1:
  1656                           	callstack 0
  1657   000001                     ___fltol@f1:
  1658                           	callstack 0
  1659   000001                     ___llmod@dividend:
  1660                           	callstack 0
  1661   000001                     ___xxtofl@val:
  1662                           	callstack 0
  1663   000001                     ___fpclassifyf@x:
  1664                           	callstack 0
  1665   000001                     labs@a:
  1666                           	callstack 0
  1667   000001                     sqrtf@x:
  1668                           	callstack 0
  1669   000001                     ??_Handle_Test_Command:
  1670   000001                     ??_Check_Flow_Reset:
  1671   000001                     
  1672                           ; 1 bytes @ 0x0
  1673   000001                     	ds	1
  1674   000002                     read_prec_or_width@ap:
  1675                           	callstack 0
  1676                           
  1677                           ; 1 bytes @ 0x1
  1678   000002                     	ds	1
  1679   000003                     fputc@fp:
  1680                           	callstack 0
  1681   000003                     ___awmod@divisor:
  1682                           	callstack 0
  1683   000003                     memcpy@s1:
  1684                           	callstack 0
  1685   000003                     strcpy@src:
  1686                           	callstack 0
  1687   000003                     ??_ADC_Read:
  1688   000003                     ??_read_prec_or_width:
  1689                           
  1690                           ; 1 bytes @ 0x2
  1691   000003                     	ds	1
  1692   000004                     ??_fputc:
  1693                           
  1694                           ; 1 bytes @ 0x3
  1695   000004                     	ds	1
  1696   000005                     ADC_Read@channel:
  1697                           	callstack 0
  1698   000005                     ___awmod@counter:
  1699                           	callstack 0
  1700   000005                     read_prec_or_width@c:
  1701                           	callstack 0
  1702   000005                     memcpy@n:
  1703                           	callstack 0
  1704   000005                     strcpy@d:
  1705                           	callstack 0
  1706   000005                     ___lldiv@divisor:
  1707                           	callstack 0
  1708   000005                     ___aldiv@divisor:
  1709                           	callstack 0
  1710   000005                     ___almod@divisor:
  1711                           	callstack 0
  1712   000005                     ___fleq@ff2:
  1713                           	callstack 0
  1714   000005                     ___llmod@divisor:
  1715                           	callstack 0
  1716   000005                     ??___fpclassifyf:
  1717   000005                     ??_labs:
  1718   000005                     ??_sqrtf:
  1719   000005                     ??___fltol:
  1720   000005                     ??___xxtofl:
  1721                           
  1722                           ; 1 bytes @ 0x4
  1723   000005                     	ds	1
  1724   000006                     ___awmod@sign:
  1725                           	callstack 0
  1726   000006                     read_prec_or_width@n:
  1727                           	callstack 0
  1728                           
  1729                           ; 2 bytes @ 0x5
  1730   000006                     	ds	1
  1731   000007                     memcpy@tmp:
  1732                           	callstack 0
  1733   000007                     
  1734                           ; 1 bytes @ 0x6
  1735   000007                     	ds	1
  1736   000008                     memcpy@d:
  1737                           	callstack 0
  1738                           
  1739                           ; 2 bytes @ 0x7
  1740   000008                     	ds	1
  1741   000009                     ___aldiv@counter:
  1742                           	callstack 0
  1743   000009                     ___almod@counter:
  1744                           	callstack 0
  1745   000009                     ___fltol@sign1:
  1746                           	callstack 0
  1747   000009                     ___llmod@counter:
  1748                           	callstack 0
  1749   000009                     ___xxtofl@sign:
  1750                           	callstack 0
  1751   000009                     stoa@fp:
  1752                           	callstack 0
  1753   000009                     ___fpclassifyf@e:
  1754                           	callstack 0
  1755   000009                     fputs@s:
  1756                           	callstack 0
  1757   000009                     ___lldiv@quotient:
  1758                           	callstack 0
  1759   000009                     ??___fleq:
  1760   000009                     
  1761                           ; 1 bytes @ 0x8
  1762   000009                     	ds	1
  1763   00000A                     ___aldiv@sign:
  1764                           	callstack 0
  1765   00000A                     ___almod@sign:
  1766                           	callstack 0
  1767   00000A                     ___fltol@exp1:
  1768                           	callstack 0
  1769   00000A                     ___xxtofl@exp:
  1770                           	callstack 0
  1771   00000A                     stoa@s:
  1772                           	callstack 0
  1773   00000A                     memcpy@s:
  1774                           	callstack 0
  1775   00000A                     sqrtf@s:
  1776                           	callstack 0
  1777                           
  1778                           ; 4 bytes @ 0x9
  1779   00000A                     	ds	1
  1780   00000B                     ?_abs:
  1781                           	callstack 0
  1782   00000B                     fputs@fp:
  1783                           	callstack 0
  1784   00000B                     abs@a:
  1785                           	callstack 0
  1786   00000B                     ___aldiv@quotient:
  1787                           	callstack 0
  1788   00000B                     ___xxtofl@arg:
  1789                           	callstack 0
  1790   00000B                     ___fpclassifyf@u:
  1791                           	callstack 0
  1792                           
  1793                           ; 4 bytes @ 0xA
  1794   00000B                     	ds	1
  1795   00000C                     fputs@c:
  1796                           	callstack 0
  1797   00000C                     ??_stoa:
  1798                           
  1799                           ; 1 bytes @ 0xB
  1800   00000C                     	ds	1
  1801   00000D                     ___lldiv@counter:
  1802                           	callstack 0
  1803   00000D                     fputs@i:
  1804                           	callstack 0
  1805   00000D                     ??_abs:
  1806                           
  1807                           ; 1 bytes @ 0xC
  1808   00000D                     	ds	1
  1809   00000E                     ?_ADC_Read_Average:
  1810                           	callstack 0
  1811   00000E                     ADC_Read_Average@samples:
  1812                           	callstack 0
  1813   00000E                     stoa@p:
  1814                           	callstack 0
  1815   00000E                     sqrtf@i:
  1816                           	callstack 0
  1817                           
  1818                           ; 4 bytes @ 0xD
  1819   00000E                     	ds	1
  1820   00000F                     ?___fladd:
  1821                           	callstack 0
  1822   00000F                     pad@fp:
  1823                           	callstack 0
  1824   00000F                     ___fladd@b:
  1825                           	callstack 0
  1826                           
  1827                           ; 4 bytes @ 0xE
  1828   00000F                     	ds	1
  1829   000010                     ADC_Read_Average@channel:
  1830                           	callstack 0
  1831   000010                     pad@buf:
  1832                           	callstack 0
  1833   000010                     stoa@cp:
  1834                           	callstack 0
  1835   000010                     
  1836                           ; 1 bytes @ 0xF
  1837   000010                     	ds	1
  1838   000011                     ADC_Read_Average@sum:
  1839                           	callstack 0
  1840                           
  1841                           ; 4 bytes @ 0x10
  1842   000011                     	ds	1
  1843   000012                     pad@p:
  1844                           	callstack 0
  1845   000012                     stoa@l:
  1846                           	callstack 0
  1847   000012                     sqrtf@q:
  1848                           	callstack 0
  1849                           
  1850                           ; 4 bytes @ 0x11
  1851   000012                     	ds	1
  1852   000013                     ___fladd@a:
  1853                           	callstack 0
  1854                           
  1855                           ; 4 bytes @ 0x12
  1856   000013                     	ds	1
  1857   000014                     ??_pad:
  1858                           
  1859                           ; 1 bytes @ 0x13
  1860   000014                     	ds	1
  1861   000015                     ADC_Read_Average@i:
  1862                           	callstack 0
  1863   000015                     pad@i:
  1864                           	callstack 0
  1865                           
  1866                           ; 2 bytes @ 0x14
  1867   000015                     	ds	1
  1868   000016                     sqrtf@t:
  1869                           	callstack 0
  1870                           
  1871                           ; 4 bytes @ 0x15
  1872   000016                     	ds	1
  1873   000017                     dtoa@fp:
  1874                           	callstack 0
  1875   000017                     utoa@fp:
  1876                           	callstack 0
  1877   000017                     ??___fladd:
  1878                           
  1879                           ; 1 bytes @ 0x16
  1880   000017                     	ds	1
  1881   000018                     dtoa@d:
  1882                           	callstack 0
  1883   000018                     utoa@d:
  1884                           	callstack 0
  1885                           
  1886                           ; 4 bytes @ 0x17
  1887   000018                     	ds	2
  1888   00001A                     sqrtf@m:
  1889                           	callstack 0
  1890                           
  1891                           ; 4 bytes @ 0x19
  1892   00001A                     	ds	1
  1893   00001B                     ___fladd@signs:
  1894                           	callstack 0
  1895                           
  1896                           ; 1 bytes @ 0x1A
  1897   00001B                     	ds	1
  1898   00001C                     ___fladd@aexp:
  1899                           	callstack 0
  1900   00001C                     _dtoa$1396:
  1901                           	callstack 0
  1902   00001C                     utoa@w:
  1903                           	callstack 0
  1904   00001C                     
  1905                           ; 1 bytes @ 0x1B
  1906   00001C                     	ds	1
  1907   00001D                     ___fladd@bexp:
  1908                           	callstack 0
  1909                           
  1910                           ; 1 bytes @ 0x1C
  1911   00001D                     	ds	1
  1912   00001E                     ___fladd@grs:
  1913                           	callstack 0
  1914   00001E                     dtoa@w:
  1915                           	callstack 0
  1916   00001E                     utoa@p:
  1917                           	callstack 0
  1918   00001E                     sqrtf@r:
  1919                           	callstack 0
  1920                           
  1921                           ; 4 bytes @ 0x1D
  1922   00001E                     	ds	1
  1923   00001F                     ?___flmul:
  1924                           	callstack 0
  1925   00001F                     ___flmul@b:
  1926                           	callstack 0
  1927                           
  1928                           ; 4 bytes @ 0x1E
  1929   00001F                     	ds	1
  1930   000020                     dtoa@p:
  1931                           	callstack 0
  1932   000020                     utoa@i:
  1933                           	callstack 0
  1934                           
  1935                           ; 2 bytes @ 0x1F
  1936   000020                     	ds	2
  1937   000022                     dtoa@s:
  1938                           	callstack 0
  1939   000022                     sqrtf@ix:
  1940                           	callstack 0
  1941                           
  1942                           ; 4 bytes @ 0x21
  1943   000022                     	ds	1
  1944   000023                     dtoa@i:
  1945                           	callstack 0
  1946   000023                     ___flmul@a:
  1947                           	callstack 0
  1948                           
  1949                           ; 4 bytes @ 0x22
  1950   000023                     	ds	4
  1951   000027                     ??___flmul:
  1952                           
  1953                           ; 1 bytes @ 0x26
  1954   000027                     	ds	4
  1955   00002B                     ___flmul@sign:
  1956                           	callstack 0
  1957                           
  1958                           ; 1 bytes @ 0x2A
  1959   00002B                     	ds	1
  1960   00002C                     ___flmul@aexp:
  1961                           	callstack 0
  1962                           
  1963                           ; 1 bytes @ 0x2B
  1964   00002C                     	ds	1
  1965   00002D                     ___flmul@grs:
  1966                           	callstack 0
  1967                           
  1968                           ; 4 bytes @ 0x2C
  1969   00002D                     	ds	4
  1970   000031                     ___flmul@bexp:
  1971                           	callstack 0
  1972                           
  1973                           ; 1 bytes @ 0x30
  1974   000031                     	ds	1
  1975   000032                     ___flmul@prod:
  1976                           	callstack 0
  1977                           
  1978                           ; 4 bytes @ 0x31
  1979   000032                     	ds	4
  1980   000036                     ___flmul@temp:
  1981                           	callstack 0
  1982                           
  1983                           ; 2 bytes @ 0x35
  1984   000036                     	ds	2
  1985   000038                     ?___flsub:
  1986                           	callstack 0
  1987   000038                     ?_scalbnf:
  1988                           	callstack 0
  1989   000038                     ___flsub@b:
  1990                           	callstack 0
  1991   000038                     scalbnf@x:
  1992                           	callstack 0
  1993                           
  1994                           ; 4 bytes @ 0x37
  1995   000038                     	ds	4
  1996   00003C                     scalbnf@n:
  1997                           	callstack 0
  1998   00003C                     ___flsub@a:
  1999                           	callstack 0
  2000                           
  2001                           ; 4 bytes @ 0x3B
  2002   00003C                     	ds	2
  2003   00003E                     ??_scalbnf:
  2004                           
  2005                           ; 1 bytes @ 0x3D
  2006   00003E                     	ds	2
  2007   000040                     ?___fldiv:
  2008                           	callstack 0
  2009   000040                     ___flge@ff1:
  2010                           	callstack 0
  2011   000040                     ___fldiv@b:
  2012                           	callstack 0
  2013   000040                     
  2014                           ; 1 bytes @ 0x3F
  2015   000040                     	ds	2
  2016   000042                     scalbnf@u:
  2017                           	callstack 0
  2018                           
  2019                           ; 4 bytes @ 0x41
  2020   000042                     	ds	2
  2021   000044                     ___flge@ff2:
  2022                           	callstack 0
  2023   000044                     ___fldiv@a:
  2024                           	callstack 0
  2025                           
  2026                           ; 4 bytes @ 0x43
  2027   000044                     	ds	2
  2028   000046                     scalbnf@y:
  2029                           	callstack 0
  2030                           
  2031                           ; 4 bytes @ 0x45
  2032   000046                     	ds	2
  2033   000048                     ??___fldiv:
  2034   000048                     ??___flge:
  2035                           
  2036                           ; 1 bytes @ 0x47
  2037   000048                     	ds	4
  2038   00004C                     ___fldiv@rem:
  2039                           	callstack 0
  2040   00004C                     ??_Update_Actuators:
  2041                           
  2042                           ; 1 bytes @ 0x4B
  2043   00004C                     	ds	4
  2044   000050                     Update_Actuators@temp_alarm:
  2045                           	callstack 0
  2046   000050                     ___fldiv@sign:
  2047                           	callstack 0
  2048                           
  2049                           ; 1 bytes @ 0x4F
  2050   000050                     	ds	1
  2051   000051                     Update_Actuators@co_alarm:
  2052                           	callstack 0
  2053   000051                     ___fldiv@new_exp:
  2054                           	callstack 0
  2055                           
  2056                           ; 2 bytes @ 0x50
  2057   000051                     	ds	1
  2058   000052                     _Update_Actuators$824:
  2059                           	callstack 0
  2060                           
  2061                           ; 1 bytes @ 0x51
  2062   000052                     	ds	1
  2063   000053                     ___fldiv@grs:
  2064                           	callstack 0
  2065                           
  2066                           ; 4 bytes @ 0x52
  2067   000053                     	ds	4
  2068   000057                     ___fldiv@bexp:
  2069                           	callstack 0
  2070                           
  2071                           ; 1 bytes @ 0x56
  2072   000057                     	ds	1
  2073   000058                     ___fldiv@aexp:
  2074                           	callstack 0
  2075                           
  2076                           ; 1 bytes @ 0x57
  2077   000058                     	ds	1
  2078   000059                     ?_floorf:
  2079                           	callstack 0
  2080   000059                     floorf@x:
  2081                           	callstack 0
  2082   000059                     ??_Calibrate_Flame_Sensor:
  2083   000059                     ??_Calibrate_MQ2:
  2084   000059                     ??_Read_LM35:
  2085   000059                     ??_Calculate_Flow:
  2086                           
  2087                           ; 1 bytes @ 0x58
  2088   000059                     	ds	2
  2089   00005B                     ??_Read_MQ2_Sensor:
  2090                           
  2091                           ; 1 bytes @ 0x5A
  2092   00005B                     	ds	2
  2093   00005D                     Calculate_Flow@pulses:
  2094                           	callstack 0
  2095   00005D                     ??_efgtoa:
  2096                           
  2097                           ; 1 bytes @ 0x5C
  2098   00005D                     	ds	2
  2099   00005F                     
  2100                           ; 1 bytes @ 0x5E
  2101 ;;
  2102 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2103 ;;
  2104 ;; *************** function _main *****************
  2105 ;; Defined at:
  2106 ;;		line 134 in file "newmain.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  cmd             1    0[BANK2 ] unsigned char 
  2111 ;;  i               2    3[BANK2 ] int 
  2112 ;;  sensor_count    2    1[BANK2 ] unsigned int 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2122 ;;      Params:         0       0       0       0       0       0       0       0       0
  2123 ;;      Locals:         0       0       0       5       0       0       0       0       0
  2124 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2125 ;;      Totals:         0       4       0       5       0       0       0       0       0
  2126 ;;Total ram usage:        9 bytes
  2127 ;; Hardware stack levels required when called: 11
  2128 ;; This function calls:
  2129 ;;		_ADC_Init
  2130 ;;		_Calculate_Flow
  2131 ;;		_Calibrate_Flame_Sensor
  2132 ;;		_Calibrate_MQ2
  2133 ;;		_Check_Flow_Reset
  2134 ;;		_End_Event
  2135 ;;		_Handle_Test_Command
  2136 ;;		_Interrupt_Init
  2137 ;;		_Read_Flame_Sensor
  2138 ;;		_Read_LM35
  2139 ;;		_Read_MQ2_Sensor
  2140 ;;		_Send_Event_Data
  2141 ;;		_Send_Sensor_Data
  2142 ;;		_Start_Event
  2143 ;;		_UART_Data_Ready
  2144 ;;		_UART_Init
  2145 ;;		_UART_Read
  2146 ;;		_Update_Actuators
  2147 ;;		___awmod
  2148 ;; This function is called by:
  2149 ;;		Startup code after reset
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text0
  2154   0048D8                     __ptext0:
  2155                           	callstack 0
  2156   0048D8                     _main:
  2157                           	callstack 20
  2158   0048D8                     
  2159                           ;newmain.c: 135:     OSCCON = 0x70;
  2160   0048D8  0E70               	movlw	112
  2161   0048DA  6ED3               	movwf	211,c	;volatile
  2162                           
  2163                           ;newmain.c: 136:     TRISB = 0x02;
  2164   0048DC  0E02               	movlw	2
  2165   0048DE  6E93               	movwf	147,c	;volatile
  2166   0048E0                     
  2167                           ;newmain.c: 137:     PORTB = 0x00;
  2168   0048E0  6A81               	clrf	129,c	;volatile
  2169   0048E2                     
  2170                           ;newmain.c: 138:     PORTBbits.RB5 = 1;
  2171   0048E2  8A81               	bsf	129,5,c	;volatile
  2172   0048E4                     
  2173                           ;newmain.c: 139:     PORTBbits.RB0 = 0;
  2174   0048E4  9081               	bcf	129,0,c	;volatile
  2175                           
  2176                           ;newmain.c: 142:     for(int i = 0; i < 7; i++) {
  2177   0048E6  0E00               	movlw	0
  2178   0048E8  0102               	movlb	2	; () banked
  2179   0048EA  6FB9               	movwf	(main@i+1)& (0+255),b
  2180   0048EC  0E00               	movlw	0
  2181   0048EE  6FB8               	movwf	main@i& (0+255),b
  2182   0048F0                     l8639:
  2183                           
  2184                           ; BSR set to: 2
  2185                           ;newmain.c: 143:         temp_filter[i] = co_filter[i] = 25.0;
  2186   0048F0  0E00               	movlw	low _co_filter
  2187   0048F2  0100               	movlb	0	; () banked
  2188   0048F4  6FE7               	movwf	??_main& (0+255),b
  2189   0048F6  0E02               	movlw	high _co_filter
  2190   0048F8  6FE8               	movwf	(??_main+1)& (0+255),b
  2191   0048FA  90D8               	bcf	status,0,c
  2192   0048FC  0102               	movlb	2	; () banked
  2193   0048FE  35B8               	rlcf	main@i& (0+255),w,b
  2194   004900  6ED9               	movwf	fsr2l,c
  2195   004902  35B9               	rlcf	(main@i+1)& (0+255),w,b
  2196   004904  6EDA               	movwf	fsr2h,c
  2197   004906  90D8               	bcf	status,0,c
  2198   004908  36D9               	rlcf	fsr2l,f,c
  2199   00490A  36DA               	rlcf	fsr2h,f,c
  2200   00490C  0100               	movlb	0	; () banked
  2201   00490E  51E7               	movf	??_main& (0+255),w,b
  2202   004910  26D9               	addwf	fsr2l,f,c
  2203   004912  51E8               	movf	(??_main+1)& (0+255),w,b
  2204   004914  22DA               	addwfc	fsr2h,f,c
  2205   004916  0E00               	movlw	0
  2206   004918  6EDE               	movwf	postinc2,c
  2207   00491A  0E00               	movlw	0
  2208   00491C  6EDE               	movwf	postinc2,c
  2209   00491E  0EC8               	movlw	200
  2210   004920  6EDE               	movwf	postinc2,c
  2211   004922  0E41               	movlw	65
  2212   004924  6EDD               	movwf	postdec2,c
  2213   004926  52DD               	movf	postdec2,f,c
  2214   004928  52DD               	movf	postdec2,f,c
  2215   00492A  0E1C               	movlw	low _temp_filter
  2216   00492C  6FE9               	movwf	(??_main+2)& (0+255),b
  2217   00492E  0E02               	movlw	high _temp_filter
  2218   004930  6FEA               	movwf	(??_main+3)& (0+255),b
  2219   004932  90D8               	bcf	status,0,c
  2220   004934  0102               	movlb	2	; () banked
  2221   004936  35B8               	rlcf	main@i& (0+255),w,b
  2222   004938  6EE1               	movwf	fsr1l,c
  2223   00493A  35B9               	rlcf	(main@i+1)& (0+255),w,b
  2224   00493C  6EE2               	movwf	fsr1h,c
  2225   00493E  90D8               	bcf	status,0,c
  2226   004940  36E1               	rlcf	fsr1l,f,c
  2227   004942  36E2               	rlcf	fsr1h,f,c
  2228   004944  0100               	movlb	0	; () banked
  2229   004946  51E9               	movf	(??_main+2)& (0+255),w,b
  2230   004948  26E1               	addwf	fsr1l,f,c
  2231   00494A  51EA               	movf	(??_main+3)& (0+255),w,b
  2232   00494C  22E2               	addwfc	fsr1h,f,c
  2233   00494E  CFDE FFE6          	movff	postinc2,postinc1
  2234   004952  CFDE FFE6          	movff	postinc2,postinc1
  2235   004956  CFDE FFE6          	movff	postinc2,postinc1
  2236   00495A  CFDE FFE6          	movff	postinc2,postinc1
  2237   00495E                     
  2238                           ; BSR set to: 0
  2239                           ;newmain.c: 144:     }
  2240   00495E  0102               	movlb	2	; () banked
  2241   004960  4BB8               	infsnz	main@i& (0+255),f,b
  2242   004962  2BB9               	incf	(main@i+1)& (0+255),f,b
  2243   004964                     
  2244                           ; BSR set to: 2
  2245   004964  BFB9               	btfsc	(main@i+1)& (0+255),7,b
  2246   004966  EFBE  F024         	goto	u11121
  2247   00496A  51B9               	movf	(main@i+1)& (0+255),w,b
  2248   00496C  E109               	bnz	u11120
  2249   00496E  0E07               	movlw	7
  2250   004970  5DB8               	subwf	main@i& (0+255),w,b
  2251   004972  A0D8               	btfss	status,0,c
  2252   004974  EFBE  F024         	goto	u11121
  2253   004978  EFC0  F024         	goto	u11120
  2254   00497C                     u11121:
  2255   00497C  EF78  F024         	goto	l8639
  2256   004980                     u11120:
  2257   004980                     
  2258                           ; BSR set to: 2
  2259                           ;newmain.c: 146:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  2260   004980  0E15               	movlw	21
  2261   004982  0100               	movlb	0	; () banked
  2262   004984  6FE8               	movwf	(??_main+1)& (0+255),b
  2263   004986  0E4B               	movlw	75
  2264   004988  6FE7               	movwf	??_main& (0+255),b
  2265   00498A  0EBE               	movlw	190
  2266   00498C                     u11317:
  2267   00498C  2EE8               	decfsz	wreg,f,c
  2268   00498E  D7FE               	bra	u11317
  2269   004990  2FE7               	decfsz	??_main& (0+255),f,b
  2270   004992  D7FC               	bra	u11317
  2271   004994  2FE8               	decfsz	(??_main+1)& (0+255),f,b
  2272   004996  D7FA               	bra	u11317
  2273   004998  0000               	nop	
  2274   00499A                     
  2275                           ;newmain.c: 147:     UART_Init();
  2276   00499A  ECF4  F038         	call	_UART_Init	;wreg free
  2277   00499E                     
  2278                           ;newmain.c: 148:     ADC_Init();
  2279   00499E  EC08  F039         	call	_ADC_Init	;wreg free
  2280   0049A2                     
  2281                           ;newmain.c: 149:     Interrupt_Init();
  2282   0049A2  EC11  F039         	call	_Interrupt_Init	;wreg free
  2283   0049A6                     
  2284                           ;newmain.c: 152:     Send_Event_Data(EVENT_SYSTEM_START);
  2285   0049A6  0E04               	movlw	4
  2286   0049A8  EC9A  F02F         	call	_Send_Event_Data
  2287   0049AC                     
  2288                           ;newmain.c: 153:     system_started = 1;
  2289   0049AC  0E01               	movlw	1
  2290   0049AE  0101               	movlb	1	; () banked
  2291   0049B0  6FF4               	movwf	_system_started& (0+255),b
  2292   0049B2                     
  2293                           ; BSR set to: 1
  2294                           ;newmain.c: 155:     Calibrate_Flame_Sensor();
  2295   0049B2  EC03  F02F         	call	_Calibrate_Flame_Sensor	;wreg free
  2296   0049B6                     
  2297                           ;newmain.c: 156:     Calibrate_MQ2();
  2298   0049B6  ECAD  F02D         	call	_Calibrate_MQ2	;wreg free
  2299   0049BA                     
  2300                           ;newmain.c: 158:     unsigned int sensor_counter = 0;
  2301   0049BA  0E00               	movlw	0
  2302   0049BC  0102               	movlb	2	; () banked
  2303   0049BE  6FB7               	movwf	(main@sensor_counter+1)& (0+255),b
  2304   0049C0  0E00               	movlw	0
  2305   0049C2  6FB6               	movwf	main@sensor_counter& (0+255),b
  2306   0049C4                     
  2307                           ; BSR set to: 2
  2308                           ;newmain.c: 159:     pulse_count = 0;
  2309   0049C4  0E00               	movlw	0
  2310   0049C6  0100               	movlb	0	; () banked
  2311   0049C8  6FF6               	movwf	(_pulse_count+1)& (0+255),b	;volatile
  2312   0049CA  0E00               	movlw	0
  2313   0049CC  6FF5               	movwf	_pulse_count& (0+255),b	;volatile
  2314   0049CE                     l8665:
  2315                           
  2316                           ;newmain.c: 163:         system_millis += 250;
  2317   0049CE  0EFA               	movlw	250
  2318   0049D0  0101               	movlb	1	; () banked
  2319   0049D2  27D0               	addwf	_system_millis& (0+255),f,b
  2320   0049D4  0E00               	movlw	0
  2321   0049D6  23D1               	addwfc	(_system_millis+1)& (0+255),f,b
  2322   0049D8  23D2               	addwfc	(_system_millis+2)& (0+255),f,b
  2323   0049DA  23D3               	addwfc	(_system_millis+3)& (0+255),f,b
  2324   0049DC                     
  2325                           ; BSR set to: 1
  2326                           ;newmain.c: 166:         if(UART_Data_Ready()) {
  2327   0049DC  ECFE  F038         	call	_UART_Data_Ready	;wreg free
  2328   0049E0  0900               	iorlw	0
  2329   0049E2  B4D8               	btfsc	status,2,c
  2330   0049E4  EFF6  F024         	goto	u11131
  2331   0049E8  EFF8  F024         	goto	u11130
  2332   0049EC                     u11131:
  2333   0049EC  EF33  F025         	goto	l8685
  2334   0049F0                     u11130:
  2335   0049F0                     
  2336                           ;newmain.c: 167:             char cmd = UART_Read();
  2337   0049F0  ECE8  F038         	call	_UART_Read	;wreg free
  2338   0049F4  0102               	movlb	2	; () banked
  2339   0049F6  6FB5               	movwf	main@cmd& (0+255),b
  2340                           
  2341                           ;newmain.c: 168:             switch(cmd) {
  2342   0049F8  EF24  F025         	goto	l8683
  2343   0049FC                     l8671:
  2344                           
  2345                           ; BSR set to: 2
  2346                           ;newmain.c: 170:                     if(!trigger_test) {
  2347   0049FC  0100               	movlb	0	; () banked
  2348   0049FE  51F9               	movf	_trigger_test& (0+255),w,b
  2349   004A00  A4D8               	btfss	status,2,c
  2350   004A02  EF05  F025         	goto	u11141
  2351   004A06  EF07  F025         	goto	u11140
  2352   004A0A                     u11141:
  2353   004A0A  EF33  F025         	goto	l8685
  2354   004A0E                     u11140:
  2355   004A0E                     
  2356                           ; BSR set to: 0
  2357                           ;newmain.c: 171:                         trigger_test = 1;
  2358   004A0E  0E01               	movlw	1
  2359   004A10  6FF9               	movwf	_trigger_test& (0+255),b
  2360   004A12                     
  2361                           ; BSR set to: 0
  2362                           ;newmain.c: 172:                         test_start_time = system_millis;
  2363   004A12  C1D0  F1D4         	movff	_system_millis,_test_start_time
  2364   004A16  C1D1  F1D5         	movff	_system_millis+1,_test_start_time+1
  2365   004A1A  C1D2  F1D6         	movff	_system_millis+2,_test_start_time+2
  2366   004A1E  C1D3  F1D7         	movff	_system_millis+3,_test_start_time+3
  2367   004A22                     
  2368                           ; BSR set to: 0
  2369                           ;newmain.c: 173:                         test_last_toggle = system_millis;
  2370   004A22  C1D0  F261         	movff	_system_millis,_test_last_toggle
  2371   004A26  C1D1  F262         	movff	_system_millis+1,_test_last_toggle+1
  2372   004A2A  C1D2  F263         	movff	_system_millis+2,_test_last_toggle+2
  2373   004A2E  C1D3  F264         	movff	_system_millis+3,_test_last_toggle+3
  2374   004A32  EF33  F025         	goto	l8685
  2375   004A36                     l8679:
  2376                           
  2377                           ; BSR set to: 2
  2378                           ;newmain.c: 177:                     shutdown_system = 1;
  2379   004A36  0E01               	movlw	1
  2380   004A38  0100               	movlb	0	; () banked
  2381   004A3A  6FFA               	movwf	_shutdown_system& (0+255),b
  2382                           
  2383                           ;newmain.c: 178:                     break;
  2384   004A3C  EF33  F025         	goto	l8685
  2385   004A40                     l170:
  2386                           
  2387                           ; BSR set to: 2
  2388                           ;newmain.c: 180:                     shutdown_system = 0;
  2389   004A40  0100               	movlb	0	; () banked
  2390   004A42  6BFA               	clrf	_shutdown_system& (0+255),b
  2391                           
  2392                           ;newmain.c: 181:                     break;
  2393   004A44  EF33  F025         	goto	l8685
  2394   004A48                     l8683:
  2395                           
  2396                           ; BSR set to: 2
  2397   004A48  51B5               	movf	main@cmd& (0+255),w,b
  2398                           
  2399                           ; Switch size 1, requested type "simple"
  2400                           ; Number of cases is 3, Range of values is 82 to 84
  2401                           ; switch strategies available:
  2402                           ; Name         Instructions Cycles
  2403                           ; simple_byte           10     6 (average)
  2404                           ;	Chosen strategy is simple_byte
  2405   004A4A  0A52               	xorlw	82	; case 82
  2406   004A4C  B4D8               	btfsc	status,2,c
  2407   004A4E  EF20  F025         	goto	l170
  2408   004A52  0A01               	xorlw	1	; case 83
  2409   004A54  B4D8               	btfsc	status,2,c
  2410   004A56  EF1B  F025         	goto	l8679
  2411   004A5A  0A07               	xorlw	7	; case 84
  2412   004A5C  B4D8               	btfsc	status,2,c
  2413   004A5E  EFFE  F024         	goto	l8671
  2414   004A62  EF33  F025         	goto	l8685
  2415   004A66                     l8685:
  2416                           
  2417                           ;newmain.c: 186:         if(trigger_test) {
  2418   004A66  0100               	movlb	0	; () banked
  2419   004A68  51F9               	movf	_trigger_test& (0+255),w,b
  2420   004A6A  B4D8               	btfsc	status,2,c
  2421   004A6C  EF3A  F025         	goto	u11151
  2422   004A70  EF3C  F025         	goto	u11150
  2423   004A74                     u11151:
  2424   004A74  EF3E  F025         	goto	l8689
  2425   004A78                     u11150:
  2426   004A78                     
  2427                           ; BSR set to: 0
  2428                           ;newmain.c: 187:             Handle_Test_Command();
  2429   004A78  EC21  F034         	call	_Handle_Test_Command	;wreg free
  2430   004A7C                     l8689:
  2431                           
  2432                           ;newmain.c: 191:         if(!shutdown_system) {
  2433   004A7C  0100               	movlb	0	; () banked
  2434   004A7E  51FA               	movf	_shutdown_system& (0+255),w,b
  2435   004A80  A4D8               	btfss	status,2,c
  2436   004A82  EF45  F025         	goto	u11161
  2437   004A86  EF47  F025         	goto	u11160
  2438   004A8A                     u11161:
  2439   004A8A  EF5A  F025         	goto	l8703
  2440   004A8E                     u11160:
  2441   004A8E                     
  2442                           ; BSR set to: 0
  2443                           ;newmain.c: 192:             Read_LM35();
  2444   004A8E  ECE2  F02C         	call	_Read_LM35	;wreg free
  2445   004A92                     
  2446                           ;newmain.c: 193:             Read_Flame_Sensor();
  2447   004A92  EC2C  F026         	call	_Read_Flame_Sensor	;wreg free
  2448   004A96                     
  2449                           ;newmain.c: 194:             Read_MQ2_Sensor();
  2450   004A96  ECDE  F019         	call	_Read_MQ2_Sensor	;wreg free
  2451   004A9A                     
  2452                           ;newmain.c: 195:             Calculate_Flow();
  2453   004A9A  EC6A  F02E         	call	_Calculate_Flow	;wreg free
  2454   004A9E                     
  2455                           ;newmain.c: 197:             if(!trigger_test) {
  2456   004A9E  0100               	movlb	0	; () banked
  2457   004AA0  51F9               	movf	_trigger_test& (0+255),w,b
  2458   004AA2  A4D8               	btfss	status,2,c
  2459   004AA4  EF56  F025         	goto	u11171
  2460   004AA8  EF58  F025         	goto	u11170
  2461   004AAC                     u11171:
  2462   004AAC  EF5A  F025         	goto	l8703
  2463   004AB0                     u11170:
  2464   004AB0                     
  2465                           ; BSR set to: 0
  2466                           ;newmain.c: 198:                 Update_Actuators();
  2467   004AB0  EC7E  F029         	call	_Update_Actuators	;wreg free
  2468   004AB4                     l8703:
  2469                           
  2470                           ;newmain.c: 203:         if (fire_alarm && !event_active) {
  2471   004AB4  0100               	movlb	0	; () banked
  2472   004AB6  51FC               	movf	_fire_alarm& (0+255),w,b
  2473   004AB8  B4D8               	btfsc	status,2,c
  2474   004ABA  EF61  F025         	goto	u11181
  2475   004ABE  EF63  F025         	goto	u11180
  2476   004AC2                     u11181:
  2477   004AC2  EF70  F025         	goto	l8709
  2478   004AC6                     u11180:
  2479   004AC6                     
  2480                           ; BSR set to: 0
  2481   004AC6  51F8               	movf	_event_active& (0+255),w,b
  2482   004AC8  A4D8               	btfss	status,2,c
  2483   004ACA  EF69  F025         	goto	u11191
  2484   004ACE  EF6B  F025         	goto	u11190
  2485   004AD2                     u11191:
  2486   004AD2  EF70  F025         	goto	l8709
  2487   004AD6                     u11190:
  2488   004AD6                     
  2489                           ; BSR set to: 0
  2490                           ;newmain.c: 204:             Start_Event(EVENT_FIRE);
  2491   004AD6  0E01               	movlw	1
  2492   004AD8  ECBA  F036         	call	_Start_Event
  2493                           
  2494                           ;newmain.c: 205:         }
  2495   004ADC  EFBE  F025         	goto	l8731
  2496   004AE0                     l8709:
  2497                           
  2498                           ; BSR set to: 0
  2499   004AE0  51F9               	movf	_trigger_test& (0+255),w,b
  2500   004AE2  B4D8               	btfsc	status,2,c
  2501   004AE4  EF76  F025         	goto	u11201
  2502   004AE8  EF78  F025         	goto	u11200
  2503   004AEC                     u11201:
  2504   004AEC  EF85  F025         	goto	l8715
  2505   004AF0                     u11200:
  2506   004AF0                     
  2507                           ; BSR set to: 0
  2508   004AF0  51F8               	movf	_event_active& (0+255),w,b
  2509   004AF2  A4D8               	btfss	status,2,c
  2510   004AF4  EF7E  F025         	goto	u11211
  2511   004AF8  EF80  F025         	goto	u11210
  2512   004AFC                     u11211:
  2513   004AFC  EF85  F025         	goto	l8715
  2514   004B00                     u11210:
  2515   004B00                     
  2516                           ; BSR set to: 0
  2517                           ;newmain.c: 207:             Start_Event(EVENT_TEST);
  2518   004B00  0E02               	movlw	2
  2519   004B02  ECBA  F036         	call	_Start_Event
  2520                           
  2521                           ;newmain.c: 208:         }
  2522   004B06  EFBE  F025         	goto	l8731
  2523   004B0A                     l8715:
  2524                           
  2525                           ; BSR set to: 0
  2526   004B0A  51FA               	movf	_shutdown_system& (0+255),w,b
  2527   004B0C  B4D8               	btfsc	status,2,c
  2528   004B0E  EF8B  F025         	goto	u11221
  2529   004B12  EF8D  F025         	goto	u11220
  2530   004B16                     u11221:
  2531   004B16  EF9A  F025         	goto	l8721
  2532   004B1A                     u11220:
  2533   004B1A                     
  2534                           ; BSR set to: 0
  2535   004B1A  51F8               	movf	_event_active& (0+255),w,b
  2536   004B1C  A4D8               	btfss	status,2,c
  2537   004B1E  EF93  F025         	goto	u11231
  2538   004B22  EF95  F025         	goto	u11230
  2539   004B26                     u11231:
  2540   004B26  EF9A  F025         	goto	l8721
  2541   004B2A                     u11230:
  2542   004B2A                     
  2543                           ; BSR set to: 0
  2544                           ;newmain.c: 210:             Start_Event(EVENT_SHUTDOWN);
  2545   004B2A  0E03               	movlw	3
  2546   004B2C  ECBA  F036         	call	_Start_Event
  2547                           
  2548                           ;newmain.c: 211:         }
  2549   004B30  EFBE  F025         	goto	l8731
  2550   004B34                     l8721:
  2551                           
  2552                           ; BSR set to: 0
  2553   004B34  51FC               	movf	_fire_alarm& (0+255),w,b
  2554   004B36  A4D8               	btfss	status,2,c
  2555   004B38  EFA0  F025         	goto	u11241
  2556   004B3C  EFA2  F025         	goto	u11240
  2557   004B40                     u11241:
  2558   004B40  EFBE  F025         	goto	l177
  2559   004B44                     u11240:
  2560   004B44                     
  2561                           ; BSR set to: 0
  2562   004B44  51F9               	movf	_trigger_test& (0+255),w,b
  2563   004B46  A4D8               	btfss	status,2,c
  2564   004B48  EFA8  F025         	goto	u11251
  2565   004B4C  EFAA  F025         	goto	u11250
  2566   004B50                     u11251:
  2567   004B50  EFBE  F025         	goto	l177
  2568   004B54                     u11250:
  2569   004B54                     
  2570                           ; BSR set to: 0
  2571   004B54  51FA               	movf	_shutdown_system& (0+255),w,b
  2572   004B56  A4D8               	btfss	status,2,c
  2573   004B58  EFB0  F025         	goto	u11261
  2574   004B5C  EFB2  F025         	goto	u11260
  2575   004B60                     u11261:
  2576   004B60  EFBE  F025         	goto	l177
  2577   004B64                     u11260:
  2578   004B64                     
  2579                           ; BSR set to: 0
  2580   004B64  51F8               	movf	_event_active& (0+255),w,b
  2581   004B66  B4D8               	btfsc	status,2,c
  2582   004B68  EFB8  F025         	goto	u11271
  2583   004B6C  EFBA  F025         	goto	u11270
  2584   004B70                     u11271:
  2585   004B70  EFBE  F025         	goto	l177
  2586   004B74                     u11270:
  2587   004B74                     
  2588                           ; BSR set to: 0
  2589                           ;newmain.c: 213:             End_Event();
  2590   004B74  EC12  F02C         	call	_End_Event	;wreg free
  2591   004B78  EFBE  F025         	goto	l8731
  2592   004B7C                     l177:
  2593   004B7C                     l8731:
  2594                           
  2595                           ;newmain.c: 217:         Check_Flow_Reset();
  2596   004B7C  EC7D  F036         	call	_Check_Flow_Reset	;wreg free
  2597   004B80                     
  2598                           ;newmain.c: 219:         filter_index = (filter_index + 1) % 7;
  2599   004B80  0E01               	movlw	1
  2600   004B82  0100               	movlb	0	; () banked
  2601   004B84  25FB               	addwf	_filter_index& (0+255),w,b
  2602   004B86  6E01               	movwf	___awmod@dividend^0,c
  2603   004B88  6A02               	clrf	(___awmod@dividend+1)^0,c
  2604   004B8A  0E00               	movlw	0
  2605   004B8C  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2606   004B8E  0E00               	movlw	0
  2607   004B90  6E04               	movwf	(___awmod@divisor+1)^0,c
  2608   004B92  0E07               	movlw	7
  2609   004B94  6E03               	movwf	___awmod@divisor^0,c
  2610   004B96  ECE5  F034         	call	___awmod	;wreg free
  2611   004B9A  5001               	movf	?___awmod^0,w,c
  2612   004B9C  0100               	movlb	0	; () banked
  2613   004B9E  6FFB               	movwf	_filter_index& (0+255),b
  2614   004BA0                     
  2615                           ; BSR set to: 0
  2616                           ;newmain.c: 221:         if(sensor_counter >= 4) {
  2617   004BA0  0102               	movlb	2	; () banked
  2618   004BA2  51B7               	movf	(main@sensor_counter+1)& (0+255),w,b
  2619   004BA4  E109               	bnz	u11280
  2620   004BA6  0E04               	movlw	4
  2621   004BA8  5DB6               	subwf	main@sensor_counter& (0+255),w,b
  2622   004BAA  A0D8               	btfss	status,0,c
  2623   004BAC  EFDA  F025         	goto	u11281
  2624   004BB0  EFDC  F025         	goto	u11280
  2625   004BB4                     u11281:
  2626   004BB4  EF18  F026         	goto	l8753
  2627   004BB8                     u11280:
  2628   004BB8                     
  2629                           ; BSR set to: 2
  2630                           ;newmain.c: 222:             Send_Sensor_Data();
  2631   004BB8  ECB0  F033         	call	_Send_Sensor_Data	;wreg free
  2632   004BBC                     
  2633                           ;newmain.c: 223:             sensor_counter = 0;
  2634   004BBC  0E00               	movlw	0
  2635   004BBE  0102               	movlb	2	; () banked
  2636   004BC0  6FB7               	movwf	(main@sensor_counter+1)& (0+255),b
  2637   004BC2  0E00               	movlw	0
  2638   004BC4  6FB6               	movwf	main@sensor_counter& (0+255),b
  2639   004BC6                     
  2640                           ; BSR set to: 2
  2641                           ;newmain.c: 225:             calibrationCounter += 1000;
  2642   004BC6  0EE8               	movlw	232
  2643   004BC8  0101               	movlb	1	; () banked
  2644   004BCA  27D8               	addwf	_calibrationCounter& (0+255),f,b
  2645   004BCC  0E03               	movlw	3
  2646   004BCE  23D9               	addwfc	(_calibrationCounter+1)& (0+255),f,b
  2647   004BD0  0E00               	movlw	0
  2648   004BD2  23DA               	addwfc	(_calibrationCounter+2)& (0+255),f,b
  2649   004BD4  0E00               	movlw	0
  2650   004BD6  23DB               	addwfc	(_calibrationCounter+3)& (0+255),f,b
  2651   004BD8                     
  2652                           ; BSR set to: 1
  2653                           ;newmain.c: 226:             if(calibrationCounter >= 300000) {
  2654   004BD8  51DB               	movf	(_calibrationCounter+3)& (0+255),w,b
  2655   004BDA  E10D               	bnz	u11290
  2656   004BDC  0EE0               	movlw	224
  2657   004BDE  5DD8               	subwf	_calibrationCounter& (0+255),w,b
  2658   004BE0  0E93               	movlw	147
  2659   004BE2  59D9               	subwfb	(_calibrationCounter+1)& (0+255),w,b
  2660   004BE4  0E04               	movlw	4
  2661   004BE6  59DA               	subwfb	(_calibrationCounter+2)& (0+255),w,b
  2662   004BE8  A0D8               	btfss	status,0,c
  2663   004BEA  EFF9  F025         	goto	u11291
  2664   004BEE  EFFB  F025         	goto	u11290
  2665   004BF2                     u11291:
  2666   004BF2  EFFD  F025         	goto	l8747
  2667   004BF6                     u11290:
  2668   004BF6                     
  2669                           ; BSR set to: 1
  2670                           ;newmain.c: 227:                 Calibrate_MQ2();
  2671   004BF6  ECAD  F02D         	call	_Calibrate_MQ2	;wreg free
  2672   004BFA                     l8747:
  2673                           
  2674                           ;newmain.c: 229:             if(calibrationCounter >= 600000) {
  2675   004BFA  0101               	movlb	1	; () banked
  2676   004BFC  51DB               	movf	(_calibrationCounter+3)& (0+255),w,b
  2677   004BFE  E10D               	bnz	u11300
  2678   004C00  0EC0               	movlw	192
  2679   004C02  5DD8               	subwf	_calibrationCounter& (0+255),w,b
  2680   004C04  0E27               	movlw	39
  2681   004C06  59D9               	subwfb	(_calibrationCounter+1)& (0+255),w,b
  2682   004C08  0E09               	movlw	9
  2683   004C0A  59DA               	subwfb	(_calibrationCounter+2)& (0+255),w,b
  2684   004C0C  A0D8               	btfss	status,0,c
  2685   004C0E  EF0B  F026         	goto	u11301
  2686   004C12  EF0D  F026         	goto	u11300
  2687   004C16                     u11301:
  2688   004C16  EF18  F026         	goto	l8753
  2689   004C1A                     u11300:
  2690   004C1A                     
  2691                           ; BSR set to: 1
  2692                           ;newmain.c: 230:                 Calibrate_Flame_Sensor();
  2693   004C1A  EC03  F02F         	call	_Calibrate_Flame_Sensor	;wreg free
  2694   004C1E                     
  2695                           ;newmain.c: 231:                 calibrationCounter = 0;
  2696   004C1E  0E00               	movlw	0
  2697   004C20  0101               	movlb	1	; () banked
  2698   004C22  6FD8               	movwf	_calibrationCounter& (0+255),b
  2699   004C24  0E00               	movlw	0
  2700   004C26  6FD9               	movwf	(_calibrationCounter+1)& (0+255),b
  2701   004C28  0E00               	movlw	0
  2702   004C2A  6FDA               	movwf	(_calibrationCounter+2)& (0+255),b
  2703   004C2C  0E00               	movlw	0
  2704   004C2E  6FDB               	movwf	(_calibrationCounter+3)& (0+255),b
  2705   004C30                     l8753:
  2706                           
  2707                           ;newmain.c: 235:         sensor_counter++;
  2708   004C30  0102               	movlb	2	; () banked
  2709   004C32  4BB6               	infsnz	main@sensor_counter& (0+255),f,b
  2710   004C34  2BB7               	incf	(main@sensor_counter+1)& (0+255),f,b
  2711   004C36                     
  2712                           ; BSR set to: 2
  2713                           ;newmain.c: 236:         _delay((unsigned long)((250)*(8000000/4000.0)));
  2714   004C36  0E03               	movlw	3
  2715   004C38  0100               	movlb	0	; () banked
  2716   004C3A  6FE8               	movwf	(??_main+1)& (0+255),b
  2717   004C3C  0E8A               	movlw	138
  2718   004C3E  6FE7               	movwf	??_main& (0+255),b
  2719   004C40  0E55               	movlw	85
  2720   004C42                     u11327:
  2721   004C42  2EE8               	decfsz	wreg,f,c
  2722   004C44  D7FE               	bra	u11327
  2723   004C46  2FE7               	decfsz	??_main& (0+255),f,b
  2724   004C48  D7FC               	bra	u11327
  2725   004C4A  2FE8               	decfsz	(??_main+1)& (0+255),f,b
  2726   004C4C  D7FA               	bra	u11327
  2727   004C4E  D000               	nop2	
  2728   004C50  EFE7  F024         	goto	l8665
  2729   004C54  EF07  F000         	goto	start
  2730   004C58                     __end_of_main:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function ___awmod *****************
  2734 ;; Defined at:
  2735 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  dividend        2    0[COMRAM] int 
  2738 ;;  divisor         2    2[COMRAM] int 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  sign            1    5[COMRAM] unsigned char 
  2741 ;;  counter         1    4[COMRAM] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  2    0[COMRAM] int 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2751 ;;      Params:         4       0       0       0       0       0       0       0       0
  2752 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2754 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2755 ;;Total ram usage:        6 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; Hardware stack levels required when called: 1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text1
  2766   0069CA                     __ptext1:
  2767                           	callstack 0
  2768   0069CA                     ___awmod:
  2769                           	callstack 29
  2770   0069CA  6A06               	clrf	___awmod@sign^0,c
  2771   0069CC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2772   0069CE  EFED  F034         	goto	u11060
  2773   0069D2  EFEB  F034         	goto	u11061
  2774   0069D6                     u11061:
  2775   0069D6  EFF3  F034         	goto	l8599
  2776   0069DA                     u11060:
  2777   0069DA  6C01               	negf	___awmod@dividend^0,c
  2778   0069DC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2779   0069DE  B0D8               	btfsc	status,0,c
  2780   0069E0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2781   0069E2  0E01               	movlw	1
  2782   0069E4  6E06               	movwf	___awmod@sign^0,c
  2783   0069E6                     l8599:
  2784   0069E6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2785   0069E8  EFFA  F034         	goto	u11070
  2786   0069EC  EFF8  F034         	goto	u11071
  2787   0069F0                     u11071:
  2788   0069F0  EFFE  F034         	goto	l8603
  2789   0069F4                     u11070:
  2790   0069F4  6C03               	negf	___awmod@divisor^0,c
  2791   0069F6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2792   0069F8  B0D8               	btfsc	status,0,c
  2793   0069FA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2794   0069FC                     l8603:
  2795   0069FC  5003               	movf	___awmod@divisor^0,w,c
  2796   0069FE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2797   006A00  B4D8               	btfsc	status,2,c
  2798   006A02  EF05  F035         	goto	u11081
  2799   006A06  EF07  F035         	goto	u11080
  2800   006A0A                     u11081:
  2801   006A0A  EF2B  F035         	goto	l8619
  2802   006A0E                     u11080:
  2803   006A0E  0E01               	movlw	1
  2804   006A10  6E05               	movwf	___awmod@counter^0,c
  2805   006A12  EF0F  F035         	goto	l8609
  2806   006A16                     l8607:
  2807   006A16  90D8               	bcf	status,0,c
  2808   006A18  3603               	rlcf	___awmod@divisor^0,f,c
  2809   006A1A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2810   006A1C  2A05               	incf	___awmod@counter^0,f,c
  2811   006A1E                     l8609:
  2812   006A1E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2813   006A20  EF14  F035         	goto	u11091
  2814   006A24  EF16  F035         	goto	u11090
  2815   006A28                     u11091:
  2816   006A28  EF0B  F035         	goto	l8607
  2817   006A2C                     u11090:
  2818   006A2C                     l8611:
  2819   006A2C  5003               	movf	___awmod@divisor^0,w,c
  2820   006A2E  5C01               	subwf	___awmod@dividend^0,w,c
  2821   006A30  5004               	movf	(___awmod@divisor+1)^0,w,c
  2822   006A32  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2823   006A34  A0D8               	btfss	status,0,c
  2824   006A36  EF1F  F035         	goto	u11101
  2825   006A3A  EF21  F035         	goto	u11100
  2826   006A3E                     u11101:
  2827   006A3E  EF25  F035         	goto	l8615
  2828   006A42                     u11100:
  2829   006A42  5003               	movf	___awmod@divisor^0,w,c
  2830   006A44  5E01               	subwf	___awmod@dividend^0,f,c
  2831   006A46  5004               	movf	(___awmod@divisor+1)^0,w,c
  2832   006A48  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2833   006A4A                     l8615:
  2834   006A4A  90D8               	bcf	status,0,c
  2835   006A4C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2836   006A4E  3203               	rrcf	___awmod@divisor^0,f,c
  2837   006A50  2E05               	decfsz	___awmod@counter^0,f,c
  2838   006A52  EF16  F035         	goto	l8611
  2839   006A56                     l8619:
  2840   006A56  5006               	movf	___awmod@sign^0,w,c
  2841   006A58  B4D8               	btfsc	status,2,c
  2842   006A5A  EF31  F035         	goto	u11111
  2843   006A5E  EF33  F035         	goto	u11110
  2844   006A62                     u11111:
  2845   006A62  EF37  F035         	goto	l8623
  2846   006A66                     u11110:
  2847   006A66  6C01               	negf	___awmod@dividend^0,c
  2848   006A68  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2849   006A6A  B0D8               	btfsc	status,0,c
  2850   006A6C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2851   006A6E                     l8623:
  2852   006A6E  C001  F001         	movff	___awmod@dividend,?___awmod
  2853   006A72  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2854   006A76  0012               	return		;funcret
  2855   006A78                     __end_of___awmod:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function _Update_Actuators *****************
  2859 ;; Defined at:
  2860 ;;		line 500 in file "newmain.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  co_alarm        1   80[COMRAM] unsigned char 
  2865 ;;  temp_alarm      1   79[COMRAM] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0
  2876 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2877 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2878 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2879 ;;Total ram usage:        7 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 2
  2882 ;; This function calls:
  2883 ;;		___flge
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text2
  2890   0052FC                     __ptext2:
  2891                           	callstack 0
  2892   0052FC                     _Update_Actuators:
  2893                           	callstack 28
  2894   0052FC                     
  2895                           ;newmain.c: 501:     prev_fire_alarm = fire_alarm;
  2896   0052FC  C0FC  F1F5         	movff	_fire_alarm,_prev_fire_alarm
  2897   005300                     
  2898                           ;newmain.c: 503:     bool temp_alarm = temperature >= 42.0;
  2899   005300  C0EF  F040         	movff	_temperature,___flge@ff1
  2900   005304  C0F0  F041         	movff	_temperature+1,___flge@ff1+1
  2901   005308  C0F1  F042         	movff	_temperature+2,___flge@ff1+2
  2902   00530C  C0F2  F043         	movff	_temperature+3,___flge@ff1+3
  2903   005310  0E00               	movlw	0
  2904   005312  6E44               	movwf	___flge@ff2^0,c
  2905   005314  0E00               	movlw	0
  2906   005316  6E45               	movwf	(___flge@ff2+1)^0,c
  2907   005318  0E28               	movlw	40
  2908   00531A  6E46               	movwf	(___flge@ff2+2)^0,c
  2909   00531C  0E42               	movlw	66
  2910   00531E  6E47               	movwf	(___flge@ff2+3)^0,c
  2911   005320  ECBA  F031         	call	___flge	;wreg free
  2912   005324  B0D8               	btfsc	status,0,c
  2913   005326  EF97  F029         	goto	u10831
  2914   00532A  EF9A  F029         	goto	u10830
  2915   00532E                     u10831:
  2916   00532E  0E01               	movlw	1
  2917   005330  EF9B  F029         	goto	u10840
  2918   005334                     u10830:
  2919   005334  0E00               	movlw	0
  2920   005336                     u10840:
  2921   005336  6E50               	movwf	Update_Actuators@temp_alarm^0,c
  2922                           
  2923                           ;newmain.c: 504:     bool co_alarm = co_ppm >= 55.0;
  2924   005338  C0EB  F040         	movff	_co_ppm,___flge@ff1
  2925   00533C  C0EC  F041         	movff	_co_ppm+1,___flge@ff1+1
  2926   005340  C0ED  F042         	movff	_co_ppm+2,___flge@ff1+2
  2927   005344  C0EE  F043         	movff	_co_ppm+3,___flge@ff1+3
  2928   005348  0E00               	movlw	0
  2929   00534A  6E44               	movwf	___flge@ff2^0,c
  2930   00534C  0E00               	movlw	0
  2931   00534E  6E45               	movwf	(___flge@ff2+1)^0,c
  2932   005350  0E5C               	movlw	92
  2933   005352  6E46               	movwf	(___flge@ff2+2)^0,c
  2934   005354  0E42               	movlw	66
  2935   005356  6E47               	movwf	(___flge@ff2+3)^0,c
  2936   005358  ECBA  F031         	call	___flge	;wreg free
  2937   00535C  B0D8               	btfsc	status,0,c
  2938   00535E  EFB3  F029         	goto	u10851
  2939   005362  EFB6  F029         	goto	u10850
  2940   005366                     u10851:
  2941   005366  0E01               	movlw	1
  2942   005368  EFB7  F029         	goto	u10860
  2943   00536C                     u10850:
  2944   00536C  0E00               	movlw	0
  2945   00536E                     u10860:
  2946   00536E  6E51               	movwf	Update_Actuators@co_alarm^0,c
  2947   005370                     
  2948                           ;newmain.c: 506:     fire_alarm = flame_detected || temp_alarm || co_alarm;
  2949   005370  0E01               	movlw	1
  2950   005372  6E52               	movwf	_Update_Actuators$824^0,c
  2951   005374  0100               	movlb	0	; () banked
  2952   005376  51FD               	movf	_flame_detected& (0+255),w,b
  2953   005378  A4D8               	btfss	status,2,c
  2954   00537A  EFC1  F029         	goto	u10871
  2955   00537E  EFC3  F029         	goto	u10870
  2956   005382                     u10871:
  2957   005382  EFD4  F029         	goto	l314
  2958   005386                     u10870:
  2959   005386                     
  2960                           ; BSR set to: 0
  2961   005386  5050               	movf	Update_Actuators@temp_alarm^0,w,c
  2962   005388  A4D8               	btfss	status,2,c
  2963   00538A  EFC9  F029         	goto	u10881
  2964   00538E  EFCB  F029         	goto	u10880
  2965   005392                     u10881:
  2966   005392  EFD4  F029         	goto	l314
  2967   005396                     u10880:
  2968   005396                     
  2969                           ; BSR set to: 0
  2970   005396  5051               	movf	Update_Actuators@co_alarm^0,w,c
  2971   005398  A4D8               	btfss	status,2,c
  2972   00539A  EFD1  F029         	goto	u10891
  2973   00539E  EFD3  F029         	goto	u10890
  2974   0053A2                     u10891:
  2975   0053A2  EFD4  F029         	goto	l314
  2976   0053A6                     u10890:
  2977   0053A6                     
  2978                           ; BSR set to: 0
  2979   0053A6  6A52               	clrf	_Update_Actuators$824^0,c
  2980   0053A8                     l314:
  2981                           
  2982                           ; BSR set to: 0
  2983   0053A8  C052  F0FC         	movff	_Update_Actuators$824,_fire_alarm
  2984   0053AC                     
  2985                           ; BSR set to: 0
  2986                           ;newmain.c: 508:     if (!fire_alarm &&
  2987   0053AC  51FC               	movf	_fire_alarm& (0+255),w,b
  2988   0053AE  A4D8               	btfss	status,2,c
  2989   0053B0  EFDC  F029         	goto	u10901
  2990   0053B4  EFDE  F029         	goto	u10900
  2991   0053B8                     u10901:
  2992   0053B8  EF13  F02A         	goto	l315
  2993   0053BC                     u10900:
  2994   0053BC                     
  2995                           ; BSR set to: 0
  2996   0053BC  0E00               	movlw	0
  2997   0053BE  6E40               	movwf	___flge@ff1^0,c
  2998   0053C0  0E00               	movlw	0
  2999   0053C2  6E41               	movwf	(___flge@ff1+1)^0,c
  3000   0053C4  0E18               	movlw	24
  3001   0053C6  6E42               	movwf	(___flge@ff1+2)^0,c
  3002   0053C8  0E42               	movlw	66
  3003   0053CA  6E43               	movwf	(___flge@ff1+3)^0,c
  3004   0053CC  C0EF  F044         	movff	_temperature,___flge@ff2
  3005   0053D0  C0F0  F045         	movff	_temperature+1,___flge@ff2+1
  3006   0053D4  C0F1  F046         	movff	_temperature+2,___flge@ff2+2
  3007   0053D8  C0F2  F047         	movff	_temperature+3,___flge@ff2+3
  3008   0053DC  ECBA  F031         	call	___flge	;wreg free
  3009   0053E0  A0D8               	btfss	status,0,c
  3010   0053E2  EFF5  F029         	goto	u10911
  3011   0053E6  EFF7  F029         	goto	u10910
  3012   0053EA                     u10911:
  3013   0053EA  EF10  F02A         	goto	l8511
  3014   0053EE                     u10910:
  3015   0053EE  0E00               	movlw	0
  3016   0053F0  6E40               	movwf	___flge@ff1^0,c
  3017   0053F2  0E00               	movlw	0
  3018   0053F4  6E41               	movwf	(___flge@ff1+1)^0,c
  3019   0053F6  0E34               	movlw	52
  3020   0053F8  6E42               	movwf	(___flge@ff1+2)^0,c
  3021   0053FA  0E42               	movlw	66
  3022   0053FC  6E43               	movwf	(___flge@ff1+3)^0,c
  3023   0053FE  C0EB  F044         	movff	_co_ppm,___flge@ff2
  3024   005402  C0EC  F045         	movff	_co_ppm+1,___flge@ff2+1
  3025   005406  C0ED  F046         	movff	_co_ppm+2,___flge@ff2+2
  3026   00540A  C0EE  F047         	movff	_co_ppm+3,___flge@ff2+3
  3027   00540E  ECBA  F031         	call	___flge	;wreg free
  3028   005412  B0D8               	btfsc	status,0,c
  3029   005414  EF0E  F02A         	goto	u10921
  3030   005418  EF10  F02A         	goto	u10920
  3031   00541C                     u10921:
  3032   00541C  EF13  F02A         	goto	l315
  3033   005420                     u10920:
  3034   005420                     l8511:
  3035                           
  3036                           ;newmain.c: 510:          co_ppm > 45.0)) {;newmain.c: 511:         fire_alarm = 1;
  3037   005420  0E01               	movlw	1
  3038   005422  0100               	movlb	0	; () banked
  3039   005424  6FFC               	movwf	_fire_alarm& (0+255),b
  3040   005426                     l315:
  3041                           
  3042                           ;newmain.c: 514:     if(fire_alarm) {
  3043   005426  0100               	movlb	0	; () banked
  3044   005428  51FC               	movf	_fire_alarm& (0+255),w,b
  3045   00542A  B4D8               	btfsc	status,2,c
  3046   00542C  EF1A  F02A         	goto	u10931
  3047   005430  EF1C  F02A         	goto	u10930
  3048   005434                     u10931:
  3049   005434  EF60  F02A         	goto	l318
  3050   005438                     u10930:
  3051   005438                     
  3052                           ; BSR set to: 0
  3053                           ;newmain.c: 515:         PORTBbits.RB0 = 1;
  3054   005438  8081               	bsf	129,0,c	;volatile
  3055   00543A                     
  3056                           ; BSR set to: 0
  3057                           ;newmain.c: 516:         pump_active = 1;
  3058   00543A  0E01               	movlw	1
  3059   00543C  0101               	movlb	1	; () banked
  3060   00543E  6FF7               	movwf	_pump_active& (0+255),b
  3061   005440                     
  3062                           ; BSR set to: 1
  3063                           ;newmain.c: 519:         static unsigned long last_blink = 0;;newmain.c: 520:         if
      +                          (system_millis - last_blink >= 500) {
  3064   005440  0102               	movlb	2	; () banked
  3065   005442  5159               	movf	Update_Actuators@last_blink& (0+255),w,b
  3066   005444  0101               	movlb	1	; () banked
  3067   005446  5DD0               	subwf	_system_millis& (0+255),w,b
  3068   005448  6E4C               	movwf	??_Update_Actuators^0,c
  3069   00544A  0102               	movlb	2	; () banked
  3070   00544C  515A               	movf	(Update_Actuators@last_blink+1)& (0+255),w,b
  3071   00544E  0101               	movlb	1	; () banked
  3072   005450  59D1               	subwfb	(_system_millis+1)& (0+255),w,b
  3073   005452  6E4D               	movwf	(??_Update_Actuators+1)^0,c
  3074   005454  0102               	movlb	2	; () banked
  3075   005456  515B               	movf	(Update_Actuators@last_blink+2)& (0+255),w,b
  3076   005458  0101               	movlb	1	; () banked
  3077   00545A  59D2               	subwfb	(_system_millis+2)& (0+255),w,b
  3078   00545C  6E4E               	movwf	(??_Update_Actuators+2)^0,c
  3079   00545E  0102               	movlb	2	; () banked
  3080   005460  515C               	movf	(Update_Actuators@last_blink+3)& (0+255),w,b
  3081   005462  0101               	movlb	1	; () banked
  3082   005464  59D3               	subwfb	(_system_millis+3)& (0+255),w,b
  3083   005466  6E4F               	movwf	(??_Update_Actuators+3)^0,c
  3084   005468  504F               	movf	(??_Update_Actuators+3)^0,w,c
  3085   00546A  104E               	iorwf	(??_Update_Actuators+2)^0,w,c
  3086   00546C  E10B               	bnz	u10940
  3087   00546E  0EF4               	movlw	244
  3088   005470  5C4C               	subwf	??_Update_Actuators^0,w,c
  3089   005472  0E01               	movlw	1
  3090   005474  584D               	subwfb	(??_Update_Actuators+1)^0,w,c
  3091   005476  A0D8               	btfss	status,0,c
  3092   005478  EF40  F02A         	goto	u10941
  3093   00547C  EF42  F02A         	goto	u10940
  3094   005480                     u10941:
  3095   005480  EF5B  F02A         	goto	l8523
  3096   005484                     u10940:
  3097   005484                     
  3098                           ; BSR set to: 1
  3099                           ;newmain.c: 521:             PORTBbits.RB5 = !PORTBbits.RB5;
  3100   005484  AA81               	btfss	129,5,c	;volatile
  3101   005486  EF47  F02A         	goto	u10951
  3102   00548A  EF4B  F02A         	goto	u10950
  3103   00548E                     u10951:
  3104   00548E  6A4C               	clrf	??_Update_Actuators^0,c
  3105   005490  2A4C               	incf	??_Update_Actuators^0,f,c
  3106   005492  EF4C  F02A         	goto	u10968
  3107   005496                     u10950:
  3108   005496  6A4C               	clrf	??_Update_Actuators^0,c
  3109   005498                     u10968:
  3110   005498  3A4C               	swapf	??_Update_Actuators^0,f,c
  3111   00549A  464C               	rlncf	??_Update_Actuators^0,f,c
  3112   00549C  5081               	movf	129,w,c	;volatile
  3113   00549E  184C               	xorwf	??_Update_Actuators^0,w,c
  3114   0054A0  0BDF               	andlw	-33
  3115   0054A2  184C               	xorwf	??_Update_Actuators^0,w,c
  3116   0054A4  6E81               	movwf	129,c	;volatile
  3117   0054A6                     
  3118                           ;newmain.c: 522:             last_blink = system_millis;
  3119   0054A6  C1D0  F259         	movff	_system_millis,Update_Actuators@last_blink
  3120   0054AA  C1D1  F25A         	movff	_system_millis+1,Update_Actuators@last_blink+1
  3121   0054AE  C1D2  F25B         	movff	_system_millis+2,Update_Actuators@last_blink+2
  3122   0054B2  C1D3  F25C         	movff	_system_millis+3,Update_Actuators@last_blink+3
  3123   0054B6                     l8523:
  3124                           
  3125                           ;newmain.c: 524:         alarm_active = 1;
  3126   0054B6  0E01               	movlw	1
  3127   0054B8  0101               	movlb	1	; () banked
  3128   0054BA  6FF6               	movwf	_alarm_active& (0+255),b
  3129                           
  3130                           ;newmain.c: 525:     } else {
  3131   0054BC  EF65  F02A         	goto	l323
  3132   0054C0                     l318:
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;newmain.c: 526:         PORTBbits.RB0 = 0;
  3136   0054C0  9081               	bcf	129,0,c	;volatile
  3137                           
  3138                           ;newmain.c: 527:         pump_active = 0;
  3139   0054C2  0101               	movlb	1	; () banked
  3140   0054C4  6BF7               	clrf	_pump_active& (0+255),b
  3141                           
  3142                           ;newmain.c: 528:         PORTBbits.RB5 = 1;
  3143   0054C6  8A81               	bsf	129,5,c	;volatile
  3144                           
  3145                           ;newmain.c: 529:         alarm_active = 0;
  3146   0054C8  6BF6               	clrf	_alarm_active& (0+255),b
  3147   0054CA                     l323:
  3148                           
  3149                           ; BSR set to: 1
  3150   0054CA  0012               	return		;funcret
  3151   0054CC                     __end_of_Update_Actuators:
  3152                           	callstack 0
  3153                           
  3154 ;; *************** function _UART_Read *****************
  3155 ;; Defined at:
  3156 ;;		line 564 in file "newmain.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      unsigned char 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3170 ;;      Params:         0       0       0       0       0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3173 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3174 ;;Total ram usage:        0 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; Hardware stack levels required when called: 1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text3
  3185   0071D0                     __ptext3:
  3186                           	callstack 0
  3187   0071D0                     _UART_Read:
  3188                           	callstack 29
  3189   0071D0                     
  3190                           ;newmain.c: 565:     if(PIR1bits.RCIF) {
  3191   0071D0  AA9E               	btfss	158,5,c	;volatile
  3192   0071D2  EFED  F038         	goto	u10611
  3193   0071D6  EFEF  F038         	goto	u10610
  3194   0071DA                     u10611:
  3195   0071DA  EFF2  F038         	goto	l8335
  3196   0071DE                     u10610:
  3197   0071DE                     
  3198                           ;newmain.c: 566:         return RCREG;
  3199   0071DE  50AE               	movf	174,w,c	;volatile
  3200   0071E0  EFF3  F038         	goto	l342
  3201   0071E4                     l8335:
  3202                           
  3203                           ;newmain.c: 568:     return 0;
  3204   0071E4  0E00               	movlw	0
  3205   0071E6                     l342:
  3206   0071E6  0012               	return		;funcret
  3207   0071E8                     __end_of_UART_Read:
  3208                           	callstack 0
  3209                           
  3210 ;; *************** function _UART_Init *****************
  3211 ;; Defined at:
  3212 ;;		line 553 in file "newmain.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3226 ;;      Params:         0       0       0       0       0       0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 1
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text4
  3241   0071E8                     __ptext4:
  3242                           	callstack 0
  3243   0071E8                     _UART_Init:
  3244                           	callstack 29
  3245   0071E8                     
  3246                           ;newmain.c: 554:     TRISC6 = 0;
  3247   0071E8  9C94               	bcf	3988,6,c	;volatile
  3248                           
  3249                           ;newmain.c: 555:     TRISC7 = 1;
  3250   0071EA  8E94               	bsf	3988,7,c	;volatile
  3251   0071EC                     
  3252                           ;newmain.c: 556:     SPBRG = 51;
  3253   0071EC  0E33               	movlw	51
  3254   0071EE  6EAF               	movwf	175,c	;volatile
  3255   0071F0                     
  3256                           ;newmain.c: 557:     TXSTAbits.BRGH = 1;
  3257   0071F0  84AC               	bsf	172,2,c	;volatile
  3258   0071F2                     
  3259                           ;newmain.c: 558:     TXSTAbits.SYNC = 0;
  3260   0071F2  98AC               	bcf	172,4,c	;volatile
  3261   0071F4                     
  3262                           ;newmain.c: 559:     TXSTAbits.TXEN = 1;
  3263   0071F4  8AAC               	bsf	172,5,c	;volatile
  3264   0071F6                     
  3265                           ;newmain.c: 560:     RCSTAbits.SPEN = 1;
  3266   0071F6  8EAB               	bsf	171,7,c	;volatile
  3267   0071F8                     
  3268                           ;newmain.c: 561:     RCSTAbits.CREN = 1;
  3269   0071F8  88AB               	bsf	171,4,c	;volatile
  3270   0071FA  0012               	return		;funcret
  3271   0071FC                     __end_of_UART_Init:
  3272                           	callstack 0
  3273                           
  3274 ;; *************** function _UART_Data_Ready *****************
  3275 ;; Defined at:
  3276 ;;		line 571 in file "newmain.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      unsigned char 
  3283 ;; Registers used:
  3284 ;;		wreg
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3290 ;;      Params:         0       0       0       0       0       0       0       0       0
  3291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3293 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3294 ;;Total ram usage:        0 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; Hardware stack levels required when called: 1
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text5
  3305   0071FC                     __ptext5:
  3306                           	callstack 0
  3307   0071FC                     _UART_Data_Ready:
  3308                           	callstack 29
  3309   0071FC                     
  3310                           ;newmain.c: 572:     return PIR1bits.RCIF;
  3311   0071FC  BA9E               	btfsc	158,5,c	;volatile
  3312   0071FE  EF03  F039         	goto	u10601
  3313   007202  EF06  F039         	goto	u10600
  3314   007206                     u10601:
  3315   007206  0E01               	movlw	1
  3316   007208  EF07  F039         	goto	u10606
  3317   00720C                     u10600:
  3318   00720C  0E00               	movlw	0
  3319   00720E                     u10606:
  3320   00720E  0012               	return		;funcret
  3321   007210                     __end_of_UART_Data_Ready:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function _Start_Event *****************
  3325 ;; Defined at:
  3326 ;;		line 263 in file "newmain.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  type            1    wreg     enum E4149
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  type            1  134[BANK0 ] enum E4149
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3340 ;;      Params:         0       0       0       0       0       0       0       0       0
  3341 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3343 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3344 ;;Total ram usage:        1 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; Hardware stack levels required when called: 10
  3347 ;; This function calls:
  3348 ;;		_Send_Event_Data
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text6
  3355   006D74                     __ptext6:
  3356                           	callstack 0
  3357   006D74                     _Start_Event:
  3358                           	callstack 20
  3359                           
  3360                           ;incstack = 0
  3361                           ;Start_Event@type stored from wreg
  3362   006D74  0100               	movlb	0	; () banked
  3363   006D76  6FE6               	movwf	Start_Event@type& (0+255),b
  3364   006D78                     
  3365                           ;newmain.c: 264:     current_event.type = type;
  3366   006D78  C0E6  F238         	movff	Start_Event@type,_current_event
  3367   006D7C                     
  3368                           ;newmain.c: 265:     current_event.start_time = system_millis;
  3369   006D7C  C1D0  F239         	movff	_system_millis,_current_event+1
  3370   006D80  C1D1  F23A         	movff	_system_millis+1,_current_event+2
  3371   006D84  C1D2  F23B         	movff	_system_millis+2,_current_event+3
  3372   006D88  C1D3  F23C         	movff	_system_millis+3,_current_event+4
  3373   006D8C                     
  3374                           ;newmain.c: 266:     current_event.start_temperature = temperature;
  3375   006D8C  C0EF  F23D         	movff	_temperature,_current_event+5
  3376   006D90  C0F0  F23E         	movff	_temperature+1,_current_event+6
  3377   006D94  C0F1  F23F         	movff	_temperature+2,_current_event+7
  3378   006D98  C0F2  F240         	movff	_temperature+3,_current_event+8
  3379   006D9C                     
  3380                           ;newmain.c: 267:     current_event.start_flame_intensity = flame_intensity;
  3381   006D9C  C1E8  F241         	movff	_flame_intensity,_current_event+9
  3382   006DA0  C1E9  F242         	movff	_flame_intensity+1,_current_event+10
  3383   006DA4  C1EA  F243         	movff	_flame_intensity+2,_current_event+11
  3384   006DA8  C1EB  F244         	movff	_flame_intensity+3,_current_event+12
  3385   006DAC                     
  3386                           ;newmain.c: 268:     current_event.start_co_ppm = co_ppm;
  3387   006DAC  C0EB  F245         	movff	_co_ppm,_current_event+13
  3388   006DB0  C0EC  F246         	movff	_co_ppm+1,_current_event+14
  3389   006DB4  C0ED  F247         	movff	_co_ppm+2,_current_event+15
  3390   006DB8  C0EE  F248         	movff	_co_ppm+3,_current_event+16
  3391   006DBC                     
  3392                           ;newmain.c: 269:     current_event.start_total_flow = total_flow;
  3393   006DBC  C1DC  F249         	movff	_total_flow,_current_event+17
  3394   006DC0  C1DD  F24A         	movff	_total_flow+1,_current_event+18
  3395   006DC4  C1DE  F24B         	movff	_total_flow+2,_current_event+19
  3396   006DC8  C1DF  F24C         	movff	_total_flow+3,_current_event+20
  3397   006DCC                     
  3398                           ;newmain.c: 270:     current_event.water_used = 0.0;
  3399   006DCC  0E00               	movlw	0
  3400   006DCE  0102               	movlb	2	; () banked
  3401   006DD0  6F4D               	movwf	(_current_event+21)& (0+255),b
  3402   006DD2  0E00               	movlw	0
  3403   006DD4  6F4E               	movwf	(_current_event+22)& (0+255),b
  3404   006DD6  0E00               	movlw	0
  3405   006DD8  6F4F               	movwf	(_current_event+23)& (0+255),b
  3406   006DDA  0E00               	movlw	0
  3407   006DDC  6F50               	movwf	(_current_event+24)& (0+255),b
  3408   006DDE                     
  3409                           ; BSR set to: 2
  3410                           ;newmain.c: 271:     event_active = 1;
  3411   006DDE  0E01               	movlw	1
  3412   006DE0  0100               	movlb	0	; () banked
  3413   006DE2  6FF8               	movwf	_event_active& (0+255),b
  3414   006DE4                     
  3415                           ; BSR set to: 0
  3416                           ;newmain.c: 274:     Send_Event_Data(type);
  3417   006DE4  51E6               	movf	Start_Event@type& (0+255),w,b
  3418   006DE6  EC9A  F02F         	call	_Send_Event_Data
  3419   006DEA  0012               	return		;funcret
  3420   006DEC                     __end_of_Start_Event:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _Send_Event_Data *****************
  3424 ;; Defined at:
  3425 ;;		line 241 in file "newmain.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  type            1    wreg     enum E4149
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  type            1  100[BANK1 ] enum E4149
  3430 ;;  i               2  101[BANK1 ] int 
  3431 ;;  event_buffer  100    0[BANK1 ] unsigned char [100]
  3432 ;;  event_type_s    2  103[BANK1 ] PTR const unsigned char 
  3433 ;;		 -> STR_6(8), STR_5(13), STR_4(9), STR_3(5), 
  3434 ;;		 -> STR_2(5), STR_1(1), 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3444 ;;      Params:         0       0       0       0       0       0       0       0       0
  3445 ;;      Locals:         0       0     105       0       0       0       0       0       0
  3446 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3447 ;;      Totals:         0       2     105       0       0       0       0       0       0
  3448 ;;Total ram usage:      107 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; Hardware stack levels required when called: 9
  3451 ;; This function calls:
  3452 ;;		_sprintf
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;;		_Start_Event
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text7
  3460   005F34                     __ptext7:
  3461                           	callstack 0
  3462   005F34                     _Send_Event_Data:
  3463                           	callstack 20
  3464                           
  3465                           ;incstack = 0
  3466                           ;Send_Event_Data@type stored from wreg
  3467   005F34  0101               	movlb	1	; () banked
  3468   005F36  6F64               	movwf	Send_Event_Data@type& (0+255),b
  3469   005F38                     
  3470                           ;newmain.c: 243:     switch(type) {
  3471   005F38  EFC1  F02F         	goto	l7799
  3472   005F3C                     l7789:
  3473                           
  3474                           ; BSR set to: 0
  3475   005F3C  0EED               	movlw	low STR_2
  3476   005F3E  0101               	movlb	1	; () banked
  3477   005F40  6F67               	movwf	Send_Event_Data@event_type_str& (0+255),b
  3478   005F42  0E7F               	movlw	high STR_2
  3479   005F44  6F68               	movwf	(Send_Event_Data@event_type_str+1)& (0+255),b
  3480   005F46  EFE0  F02F         	goto	l7801
  3481   005F4A                     l7791:
  3482                           
  3483                           ; BSR set to: 0
  3484   005F4A  0EF2               	movlw	low STR_3
  3485   005F4C  0101               	movlb	1	; () banked
  3486   005F4E  6F67               	movwf	Send_Event_Data@event_type_str& (0+255),b
  3487   005F50  0E7F               	movlw	high STR_3
  3488   005F52  6F68               	movwf	(Send_Event_Data@event_type_str+1)& (0+255),b
  3489   005F54  EFE0  F02F         	goto	l7801
  3490   005F58                     l7793:
  3491                           
  3492                           ; BSR set to: 0
  3493   005F58  0ED5               	movlw	low STR_4
  3494   005F5A  0101               	movlb	1	; () banked
  3495   005F5C  6F67               	movwf	Send_Event_Data@event_type_str& (0+255),b
  3496   005F5E  0E7F               	movlw	high STR_4
  3497   005F60  6F68               	movwf	(Send_Event_Data@event_type_str+1)& (0+255),b
  3498   005F62  EFE0  F02F         	goto	l7801
  3499   005F66                     l7795:
  3500                           
  3501                           ; BSR set to: 0
  3502   005F66  0EB6               	movlw	low STR_5
  3503   005F68  0101               	movlb	1	; () banked
  3504   005F6A  6F67               	movwf	Send_Event_Data@event_type_str& (0+255),b
  3505   005F6C  0E7F               	movlw	high STR_5
  3506   005F6E  6F68               	movwf	(Send_Event_Data@event_type_str+1)& (0+255),b
  3507   005F70  EFE0  F02F         	goto	l7801
  3508   005F74                     l7797:
  3509                           
  3510                           ; BSR set to: 0
  3511   005F74  0EDE               	movlw	low STR_6
  3512   005F76  0101               	movlb	1	; () banked
  3513   005F78  6F67               	movwf	Send_Event_Data@event_type_str& (0+255),b
  3514   005F7A  0E7F               	movlw	high STR_6
  3515   005F7C  6F68               	movwf	(Send_Event_Data@event_type_str+1)& (0+255),b
  3516                           
  3517                           ;newmain.c: 249:     }
  3518   005F7E  EFE0  F02F         	goto	l7801
  3519   005F82                     l7799:
  3520   005F82  0101               	movlb	1	; () banked
  3521   005F84  5164               	movf	Send_Event_Data@type& (0+255),w,b
  3522   005F86  0100               	movlb	0	; () banked
  3523   005F88  6FE4               	movwf	??_Send_Event_Data& (0+255),b
  3524   005F8A  6BE5               	clrf	(??_Send_Event_Data+1)& (0+255),b
  3525                           
  3526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3527                           ; Switch size 1, requested type "simple"
  3528                           ; Number of cases is 1, Range of values is 0 to 0
  3529                           ; switch strategies available:
  3530                           ; Name         Instructions Cycles
  3531                           ; simple_byte            4     3 (average)
  3532                           ;	Chosen strategy is simple_byte
  3533   005F8C  51E5               	movf	(??_Send_Event_Data+1)& (0+255),w,b
  3534   005F8E  0A00               	xorlw	0	; case 0
  3535   005F90  B4D8               	btfsc	status,2,c
  3536   005F92  EFCD  F02F         	goto	l8807
  3537   005F96  EFBA  F02F         	goto	l7797
  3538   005F9A                     l8807:
  3539                           
  3540                           ; BSR set to: 0
  3541                           ; Switch size 1, requested type "simple"
  3542                           ; Number of cases is 4, Range of values is 1 to 4
  3543                           ; switch strategies available:
  3544                           ; Name         Instructions Cycles
  3545                           ; simple_byte           13     7 (average)
  3546                           ;	Chosen strategy is simple_byte
  3547   005F9A  51E4               	movf	??_Send_Event_Data& (0+255),w,b
  3548   005F9C  0A01               	xorlw	1	; case 1
  3549   005F9E  B4D8               	btfsc	status,2,c
  3550   005FA0  EF9E  F02F         	goto	l7789
  3551   005FA4  0A03               	xorlw	3	; case 2
  3552   005FA6  B4D8               	btfsc	status,2,c
  3553   005FA8  EFA5  F02F         	goto	l7791
  3554   005FAC  0A01               	xorlw	1	; case 3
  3555   005FAE  B4D8               	btfsc	status,2,c
  3556   005FB0  EFAC  F02F         	goto	l7793
  3557   005FB4  0A07               	xorlw	7	; case 4
  3558   005FB6  B4D8               	btfsc	status,2,c
  3559   005FB8  EFB3  F02F         	goto	l7795
  3560   005FBC  EFBA  F02F         	goto	l7797
  3561   005FC0                     l7801:
  3562                           
  3563                           ; BSR set to: 1
  3564                           ;newmain.c: 251:     char event_buffer[100];;newmain.c: 252:     sprintf(event_buffer, "
      +                          {\"event\":\"%s\",\"time\":%lu}\r\n",
  3565   005FC0  0E00               	movlw	low Send_Event_Data@event_buffer
  3566   005FC2  0100               	movlb	0	; () banked
  3567   005FC4  6FB6               	movwf	sprintf@s& (0+255),b
  3568   005FC6  0E01               	movlw	high Send_Event_Data@event_buffer
  3569   005FC8  6FB7               	movwf	(sprintf@s+1)& (0+255),b
  3570   005FCA  0E8D               	movlw	low STR_7
  3571   005FCC  6FB8               	movwf	sprintf@fmt& (0+255),b
  3572   005FCE  0E7F               	movlw	high STR_7
  3573   005FD0  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
  3574   005FD2  C167  F0BA         	movff	Send_Event_Data@event_type_str,?_sprintf+4
  3575   005FD6  C168  F0BB         	movff	Send_Event_Data@event_type_str+1,?_sprintf+5
  3576   005FDA  C1D0  F0BC         	movff	_system_millis,?_sprintf+6
  3577   005FDE  C1D1  F0BD         	movff	_system_millis+1,?_sprintf+7
  3578   005FE2  C1D2  F0BE         	movff	_system_millis+2,?_sprintf+8
  3579   005FE6  C1D3  F0BF         	movff	_system_millis+3,?_sprintf+9
  3580   005FEA  EC25  F038         	call	_sprintf	;wreg free
  3581   005FEE                     l196:
  3582   005FEE  A2AC               	btfss	172,1,c	;volatile
  3583   005FF0  EFFC  F02F         	goto	u9961
  3584   005FF4  EFFE  F02F         	goto	u9960
  3585   005FF8                     u9961:
  3586   005FF8  EFF7  F02F         	goto	l196
  3587   005FFC                     u9960:
  3588   005FFC                     
  3589                           ;newmain.c: 257:     for(int i = 0; event_buffer[i]; i++) {
  3590   005FFC  0E00               	movlw	0
  3591   005FFE  0101               	movlb	1	; () banked
  3592   006000  6F66               	movwf	(Send_Event_Data@i+1)& (0+255),b
  3593   006002  0E00               	movlw	0
  3594   006004  6F65               	movwf	Send_Event_Data@i& (0+255),b
  3595   006006  EF17  F030         	goto	l7809
  3596   00600A                     l7805:
  3597                           
  3598                           ; BSR set to: 1
  3599                           ;newmain.c: 258:         TXREG = event_buffer[i];
  3600   00600A  0E00               	movlw	low Send_Event_Data@event_buffer
  3601   00600C  2565               	addwf	Send_Event_Data@i& (0+255),w,b
  3602   00600E  6ED9               	movwf	fsr2l,c
  3603   006010  0E01               	movlw	high Send_Event_Data@event_buffer
  3604   006012  2166               	addwfc	(Send_Event_Data@i+1)& (0+255),w,b
  3605   006014  6EDA               	movwf	fsr2h,c
  3606   006016  50DF               	movf	indf2,w,c
  3607   006018  6EAD               	movwf	173,c	;volatile
  3608   00601A                     l201:
  3609   00601A  A2AC               	btfss	172,1,c	;volatile
  3610   00601C  EF12  F030         	goto	u9971
  3611   006020  EF14  F030         	goto	u9970
  3612   006024                     u9971:
  3613   006024  EF0D  F030         	goto	l201
  3614   006028                     u9970:
  3615   006028                     
  3616                           ;newmain.c: 260:     }
  3617   006028  0101               	movlb	1	; () banked
  3618   00602A  4B65               	infsnz	Send_Event_Data@i& (0+255),f,b
  3619   00602C  2B66               	incf	(Send_Event_Data@i+1)& (0+255),f,b
  3620   00602E                     l7809:
  3621                           
  3622                           ; BSR set to: 1
  3623   00602E  0E00               	movlw	low Send_Event_Data@event_buffer
  3624   006030  2565               	addwf	Send_Event_Data@i& (0+255),w,b
  3625   006032  6ED9               	movwf	fsr2l,c
  3626   006034  0E01               	movlw	high Send_Event_Data@event_buffer
  3627   006036  2166               	addwfc	(Send_Event_Data@i+1)& (0+255),w,b
  3628   006038  6EDA               	movwf	fsr2h,c
  3629   00603A  50DF               	movf	indf2,w,c
  3630   00603C  A4D8               	btfss	status,2,c
  3631   00603E  EF23  F030         	goto	u9981
  3632   006042  EF25  F030         	goto	u9980
  3633   006046                     u9981:
  3634   006046  EF05  F030         	goto	l7805
  3635   00604A                     u9980:
  3636   00604A                     
  3637                           ; BSR set to: 1
  3638   00604A  0012               	return		;funcret
  3639   00604C                     __end_of_Send_Event_Data:
  3640                           	callstack 0
  3641                           
  3642 ;; *************** function _Send_Sensor_Data *****************
  3643 ;; Defined at:
  3644 ;;		line 533 in file "newmain.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  i               2  200[BANK1 ] int 
  3649 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3659 ;;      Params:         0       0       0       0       0       0       0       0       0
  3660 ;;      Locals:         0       0     202       0       0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3662 ;;      Totals:         0       0     202       0       0       0       0       0       0
  3663 ;;Total ram usage:      202 bytes
  3664 ;; Hardware stack levels used: 1
  3665 ;; Hardware stack levels required when called: 9
  3666 ;; This function calls:
  3667 ;;		_sprintf
  3668 ;; This function is called by:
  3669 ;;		_main
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text8
  3674   006760                     __ptext8:
  3675                           	callstack 0
  3676   006760                     _Send_Sensor_Data:
  3677                           	callstack 21
  3678   006760                     
  3679                           ;newmain.c: 534:     char buffer[200];;newmain.c: 535:     sprintf(buffer, "{\"t\":%.1f,
      +                          \"fd\":%d,\"fi\":%.1f,\"co\":%.1f,\"fr\":%.2f,\"tf\":%.2f,\"p\":%d,\"a\":%d,\"cmd\":{\"t
      +                          est\":%d,\"shutdown\":%d}}\r\n",
  3680   006760  0E00               	movlw	low Send_Sensor_Data@buffer
  3681   006762  0100               	movlb	0	; () banked
  3682   006764  6FB6               	movwf	sprintf@s& (0+255),b
  3683   006766  0E01               	movlw	high Send_Sensor_Data@buffer
  3684   006768  6FB7               	movwf	(sprintf@s+1)& (0+255),b
  3685   00676A  0ED3               	movlw	low STR_14
  3686   00676C  6FB8               	movwf	sprintf@fmt& (0+255),b
  3687   00676E  0E7E               	movlw	high STR_14
  3688   006770  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
  3689   006772  C0EF  F0BA         	movff	_temperature,?_sprintf+4
  3690   006776  C0F0  F0BB         	movff	_temperature+1,?_sprintf+5
  3691   00677A  C0F1  F0BC         	movff	_temperature+2,?_sprintf+6
  3692   00677E  C0F2  F0BD         	movff	_temperature+3,?_sprintf+7
  3693   006782  C0FD  F0BE         	movff	_flame_detected,?_sprintf+8
  3694   006786  6BBF               	clrf	(?_sprintf+9)& (0+255),b
  3695   006788  C1E8  F0C0         	movff	_flame_intensity,?_sprintf+10
  3696   00678C  C1E9  F0C1         	movff	_flame_intensity+1,?_sprintf+11
  3697   006790  C1EA  F0C2         	movff	_flame_intensity+2,?_sprintf+12
  3698   006794  C1EB  F0C3         	movff	_flame_intensity+3,?_sprintf+13
  3699   006798  C0EB  F0C4         	movff	_co_ppm,?_sprintf+14
  3700   00679C  C0EC  F0C5         	movff	_co_ppm+1,?_sprintf+15
  3701   0067A0  C0ED  F0C6         	movff	_co_ppm+2,?_sprintf+16
  3702   0067A4  C0EE  F0C7         	movff	_co_ppm+3,?_sprintf+17
  3703   0067A8  C1E0  F0C8         	movff	_flow_rate,?_sprintf+18
  3704   0067AC  C1E1  F0C9         	movff	_flow_rate+1,?_sprintf+19
  3705   0067B0  C1E2  F0CA         	movff	_flow_rate+2,?_sprintf+20
  3706   0067B4  C1E3  F0CB         	movff	_flow_rate+3,?_sprintf+21
  3707   0067B8  C1DC  F0CC         	movff	_total_flow,?_sprintf+22
  3708   0067BC  C1DD  F0CD         	movff	_total_flow+1,?_sprintf+23
  3709   0067C0  C1DE  F0CE         	movff	_total_flow+2,?_sprintf+24
  3710   0067C4  C1DF  F0CF         	movff	_total_flow+3,?_sprintf+25
  3711   0067C8  C1F7  F0D0         	movff	_pump_active,?_sprintf+26
  3712   0067CC  6BD1               	clrf	(?_sprintf+27)& (0+255),b
  3713   0067CE  C1F6  F0D2         	movff	_alarm_active,?_sprintf+28
  3714   0067D2  6BD3               	clrf	(?_sprintf+29)& (0+255),b
  3715   0067D4  C0F9  F0D4         	movff	_trigger_test,?_sprintf+30
  3716   0067D8  6BD5               	clrf	(?_sprintf+31)& (0+255),b
  3717   0067DA  C0FA  F0D6         	movff	_shutdown_system,?_sprintf+32
  3718   0067DE  6BD7               	clrf	(?_sprintf+33)& (0+255),b
  3719   0067E0  EC25  F038         	call	_sprintf	;wreg free
  3720   0067E4                     l326:
  3721   0067E4  A2AC               	btfss	172,1,c	;volatile
  3722   0067E6  EFF7  F033         	goto	u11031
  3723   0067EA  EFF9  F033         	goto	u11030
  3724   0067EE                     u11031:
  3725   0067EE  EFF2  F033         	goto	l326
  3726   0067F2                     u11030:
  3727   0067F2                     
  3728                           ;newmain.c: 547:     for(int i = 0; buffer[i]; i++) {
  3729   0067F2  0E00               	movlw	0
  3730   0067F4  0101               	movlb	1	; () banked
  3731   0067F6  6FC9               	movwf	(Send_Sensor_Data@i+1)& (0+255),b
  3732   0067F8  0E00               	movlw	0
  3733   0067FA  6FC8               	movwf	Send_Sensor_Data@i& (0+255),b
  3734   0067FC  EF12  F034         	goto	l8589
  3735   006800                     l8585:
  3736                           
  3737                           ; BSR set to: 1
  3738                           ;newmain.c: 548:         TXREG = buffer[i];
  3739   006800  0E00               	movlw	low Send_Sensor_Data@buffer
  3740   006802  25C8               	addwf	Send_Sensor_Data@i& (0+255),w,b
  3741   006804  6ED9               	movwf	fsr2l,c
  3742   006806  0E01               	movlw	high Send_Sensor_Data@buffer
  3743   006808  21C9               	addwfc	(Send_Sensor_Data@i+1)& (0+255),w,b
  3744   00680A  6EDA               	movwf	fsr2h,c
  3745   00680C  50DF               	movf	indf2,w,c
  3746   00680E  6EAD               	movwf	173,c	;volatile
  3747   006810                     l331:
  3748   006810  A2AC               	btfss	172,1,c	;volatile
  3749   006812  EF0D  F034         	goto	u11041
  3750   006816  EF0F  F034         	goto	u11040
  3751   00681A                     u11041:
  3752   00681A  EF08  F034         	goto	l331
  3753   00681E                     u11040:
  3754   00681E                     
  3755                           ;newmain.c: 550:     }
  3756   00681E  0101               	movlb	1	; () banked
  3757   006820  4BC8               	infsnz	Send_Sensor_Data@i& (0+255),f,b
  3758   006822  2BC9               	incf	(Send_Sensor_Data@i+1)& (0+255),f,b
  3759   006824                     l8589:
  3760                           
  3761                           ; BSR set to: 1
  3762   006824  0E00               	movlw	low Send_Sensor_Data@buffer
  3763   006826  25C8               	addwf	Send_Sensor_Data@i& (0+255),w,b
  3764   006828  6ED9               	movwf	fsr2l,c
  3765   00682A  0E01               	movlw	high Send_Sensor_Data@buffer
  3766   00682C  21C9               	addwfc	(Send_Sensor_Data@i+1)& (0+255),w,b
  3767   00682E  6EDA               	movwf	fsr2h,c
  3768   006830  50DF               	movf	indf2,w,c
  3769   006832  A4D8               	btfss	status,2,c
  3770   006834  EF1E  F034         	goto	u11051
  3771   006838  EF20  F034         	goto	u11050
  3772   00683C                     u11051:
  3773   00683C  EF00  F034         	goto	l8585
  3774   006840                     u11050:
  3775   006840                     
  3776                           ; BSR set to: 1
  3777   006840  0012               	return		;funcret
  3778   006842                     __end_of_Send_Sensor_Data:
  3779                           	callstack 0
  3780                           
  3781 ;; *************** function _Read_MQ2_Sensor *****************
  3782 ;; Defined at:
  3783 ;;		line 451 in file "newmain.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  i               2   43[BANK0 ] int 
  3788 ;;  ppm             4   49[BANK0 ] float 
  3789 ;;  rs_ro_ratio     4   45[BANK0 ] float 
  3790 ;;  Rs              4   35[BANK0 ] float 
  3791 ;;  voltage         4   31[BANK0 ] float 
  3792 ;;  temp_factor     4   17[BANK0 ] float 
  3793 ;;  adc_value       2   25[BANK0 ] unsigned int 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0
  3804 ;;      Locals:         0      36       0       0       0       0       0       0       0
  3805 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3806 ;;      Totals:         2      36       0       0       0       0       0       0       0
  3807 ;;Total ram usage:       38 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 4
  3810 ;; This function calls:
  3811 ;;		_ADC_Read_Average
  3812 ;;		_Calibrate_MQ2
  3813 ;;		___fladd
  3814 ;;		___fldiv
  3815 ;;		___flge
  3816 ;;		___flmul
  3817 ;;		___flsub
  3818 ;;		___xxtofl
  3819 ;;		_powf
  3820 ;; This function is called by:
  3821 ;;		_main
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text9
  3826   0033BC                     __ptext9:
  3827                           	callstack 0
  3828   0033BC                     _Read_MQ2_Sensor:
  3829                           	callstack 26
  3830   0033BC                     
  3831                           ;newmain.c: 452:     static bool calibrated = 0;;newmain.c: 453:     if(!calibrated) {
  3832   0033BC  0101               	movlb	1	; () banked
  3833   0033BE  51F3               	movf	Read_MQ2_Sensor@calibrated& (0+255),w,b
  3834   0033C0  A4D8               	btfss	status,2,c
  3835   0033C2  EFE5  F019         	goto	u10751
  3836   0033C6  EFE7  F019         	goto	u10750
  3837   0033CA                     u10751:
  3838   0033CA  EFEC  F019         	goto	l8419
  3839   0033CE                     u10750:
  3840   0033CE                     
  3841                           ; BSR set to: 1
  3842                           ;newmain.c: 454:         Calibrate_MQ2();
  3843   0033CE  ECAD  F02D         	call	_Calibrate_MQ2	;wreg free
  3844   0033D2                     
  3845                           ;newmain.c: 455:         calibrated = 1;
  3846   0033D2  0E01               	movlw	1
  3847   0033D4  0101               	movlb	1	; () banked
  3848   0033D6  6FF3               	movwf	Read_MQ2_Sensor@calibrated& (0+255),b
  3849   0033D8                     l8419:
  3850                           
  3851                           ; BSR set to: 1
  3852                           ;newmain.c: 458:     unsigned int adc_value = ADC_Read_Average(2, 10);
  3853   0033D8  0E0A               	movlw	10
  3854   0033DA  6E0E               	movwf	ADC_Read_Average@samples^0,c
  3855   0033DC  0E02               	movlw	2
  3856   0033DE  ECF6  F036         	call	_ADC_Read_Average
  3857   0033E2  C00E  F079         	movff	?_ADC_Read_Average,Read_MQ2_Sensor@adc_value
  3858   0033E6  C00F  F07A         	movff	?_ADC_Read_Average+1,Read_MQ2_Sensor@adc_value+1
  3859   0033EA                     
  3860                           ;newmain.c: 459:     float voltage = (adc_value * 5.0) / 1024.0;
  3861   0033EA  0E00               	movlw	0
  3862   0033EC  6E23               	movwf	___flmul@a^0,c
  3863   0033EE  0E00               	movlw	0
  3864   0033F0  6E24               	movwf	(___flmul@a+1)^0,c
  3865   0033F2  0EA0               	movlw	160
  3866   0033F4  6E25               	movwf	(___flmul@a+2)^0,c
  3867   0033F6  0E40               	movlw	64
  3868   0033F8  6E26               	movwf	(___flmul@a+3)^0,c
  3869   0033FA  C079  F001         	movff	Read_MQ2_Sensor@adc_value,___xxtofl@val
  3870   0033FE  C07A  F002         	movff	Read_MQ2_Sensor@adc_value+1,___xxtofl@val+1
  3871   003402  6A03               	clrf	(___xxtofl@val+2)^0,c
  3872   003404  6A04               	clrf	(___xxtofl@val+3)^0,c
  3873   003406  0E00               	movlw	0
  3874   003408  EC66  F02A         	call	___xxtofl
  3875   00340C  C001  F01F         	movff	?___xxtofl,___flmul@b
  3876   003410  C002  F020         	movff	?___xxtofl+1,___flmul@b+1
  3877   003414  C003  F021         	movff	?___xxtofl+2,___flmul@b+2
  3878   003418  C004  F022         	movff	?___xxtofl+3,___flmul@b+3
  3879   00341C  ECA2  F01E         	call	___flmul	;wreg free
  3880   003420  C01F  F040         	movff	?___flmul,___fldiv@b
  3881   003424  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  3882   003428  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  3883   00342C  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  3884   003430  0E00               	movlw	0
  3885   003432  6E44               	movwf	___fldiv@a^0,c
  3886   003434  0E00               	movlw	0
  3887   003436  6E45               	movwf	(___fldiv@a+1)^0,c
  3888   003438  0E80               	movlw	128
  3889   00343A  6E46               	movwf	(___fldiv@a+2)^0,c
  3890   00343C  0E44               	movlw	68
  3891   00343E  6E47               	movwf	(___fldiv@a+3)^0,c
  3892   003440  ECA4  F022         	call	___fldiv	;wreg free
  3893   003444  C040  F07F         	movff	?___fldiv,Read_MQ2_Sensor@voltage
  3894   003448  C041  F080         	movff	?___fldiv+1,Read_MQ2_Sensor@voltage+1
  3895   00344C  C042  F081         	movff	?___fldiv+2,Read_MQ2_Sensor@voltage+2
  3896   003450  C043  F082         	movff	?___fldiv+3,Read_MQ2_Sensor@voltage+3
  3897   003454                     
  3898                           ;newmain.c: 460:     float Rs = (5.0 - voltage) / voltage;
  3899   003454  C07F  F03C         	movff	Read_MQ2_Sensor@voltage,___flsub@a
  3900   003458  C080  F03D         	movff	Read_MQ2_Sensor@voltage+1,___flsub@a+1
  3901   00345C  C081  F03E         	movff	Read_MQ2_Sensor@voltage+2,___flsub@a+2
  3902   003460  C082  F03F         	movff	Read_MQ2_Sensor@voltage+3,___flsub@a+3
  3903   003464  0E00               	movlw	0
  3904   003466  6E38               	movwf	___flsub@b^0,c
  3905   003468  0E00               	movlw	0
  3906   00346A  6E39               	movwf	(___flsub@b+1)^0,c
  3907   00346C  0EA0               	movlw	160
  3908   00346E  6E3A               	movwf	(___flsub@b+2)^0,c
  3909   003470  0E40               	movlw	64
  3910   003472  6E3B               	movwf	(___flsub@b+3)^0,c
  3911   003474  EC02  F038         	call	___flsub	;wreg free
  3912   003478  C038  F040         	movff	?___flsub,___fldiv@b
  3913   00347C  C039  F041         	movff	?___flsub+1,___fldiv@b+1
  3914   003480  C03A  F042         	movff	?___flsub+2,___fldiv@b+2
  3915   003484  C03B  F043         	movff	?___flsub+3,___fldiv@b+3
  3916   003488  C07F  F044         	movff	Read_MQ2_Sensor@voltage,___fldiv@a
  3917   00348C  C080  F045         	movff	Read_MQ2_Sensor@voltage+1,___fldiv@a+1
  3918   003490  C081  F046         	movff	Read_MQ2_Sensor@voltage+2,___fldiv@a+2
  3919   003494  C082  F047         	movff	Read_MQ2_Sensor@voltage+3,___fldiv@a+3
  3920   003498  ECA4  F022         	call	___fldiv	;wreg free
  3921   00349C  C040  F083         	movff	?___fldiv,Read_MQ2_Sensor@Rs
  3922   0034A0  C041  F084         	movff	?___fldiv+1,Read_MQ2_Sensor@Rs+1
  3923   0034A4  C042  F085         	movff	?___fldiv+2,Read_MQ2_Sensor@Rs+2
  3924   0034A8  C043  F086         	movff	?___fldiv+3,Read_MQ2_Sensor@Rs+3
  3925   0034AC                     
  3926                           ;newmain.c: 462:     float temp_factor = 1.0 + 0.025 * (temperature - 25.0);
  3927   0034AC  0ECD               	movlw	205
  3928   0034AE  6E23               	movwf	___flmul@a^0,c
  3929   0034B0  0ECC               	movlw	204
  3930   0034B2  6E24               	movwf	(___flmul@a+1)^0,c
  3931   0034B4  0ECC               	movlw	204
  3932   0034B6  6E25               	movwf	(___flmul@a+2)^0,c
  3933   0034B8  0E3C               	movlw	60
  3934   0034BA  6E26               	movwf	(___flmul@a+3)^0,c
  3935   0034BC  0E00               	movlw	0
  3936   0034BE  6E13               	movwf	___fladd@a^0,c
  3937   0034C0  0E00               	movlw	0
  3938   0034C2  6E14               	movwf	(___fladd@a+1)^0,c
  3939   0034C4  0EC8               	movlw	200
  3940   0034C6  6E15               	movwf	(___fladd@a+2)^0,c
  3941   0034C8  0EC1               	movlw	193
  3942   0034CA  6E16               	movwf	(___fladd@a+3)^0,c
  3943   0034CC  C0EF  F00F         	movff	_temperature,___fladd@b
  3944   0034D0  C0F0  F010         	movff	_temperature+1,___fladd@b+1
  3945   0034D4  C0F1  F011         	movff	_temperature+2,___fladd@b+2
  3946   0034D8  C0F2  F012         	movff	_temperature+3,___fladd@b+3
  3947   0034DC  EC47  F01C         	call	___fladd	;wreg free
  3948   0034E0  C00F  F01F         	movff	?___fladd,___flmul@b
  3949   0034E4  C010  F020         	movff	?___fladd+1,___flmul@b+1
  3950   0034E8  C011  F021         	movff	?___fladd+2,___flmul@b+2
  3951   0034EC  C012  F022         	movff	?___fladd+3,___flmul@b+3
  3952   0034F0  ECA2  F01E         	call	___flmul	;wreg free
  3953   0034F4  C01F  F075         	movff	?___flmul,_Read_MQ2_Sensor$1890
  3954   0034F8  C020  F076         	movff	?___flmul+1,_Read_MQ2_Sensor$1890+1
  3955   0034FC  C021  F077         	movff	?___flmul+2,_Read_MQ2_Sensor$1890+2
  3956   003500  C022  F078         	movff	?___flmul+3,_Read_MQ2_Sensor$1890+3
  3957   003504                     
  3958                           ;newmain.c: 462:     float temp_factor = 1.0 + 0.025 * (temperature - 25.0);
  3959   003504  C075  F00F         	movff	_Read_MQ2_Sensor$1890,___fladd@b
  3960   003508  C076  F010         	movff	_Read_MQ2_Sensor$1890+1,___fladd@b+1
  3961   00350C  C077  F011         	movff	_Read_MQ2_Sensor$1890+2,___fladd@b+2
  3962   003510  C078  F012         	movff	_Read_MQ2_Sensor$1890+3,___fladd@b+3
  3963   003514  0E00               	movlw	0
  3964   003516  6E13               	movwf	___fladd@a^0,c
  3965   003518  0E00               	movlw	0
  3966   00351A  6E14               	movwf	(___fladd@a+1)^0,c
  3967   00351C  0E80               	movlw	128
  3968   00351E  6E15               	movwf	(___fladd@a+2)^0,c
  3969   003520  0E3F               	movlw	63
  3970   003522  6E16               	movwf	(___fladd@a+3)^0,c
  3971   003524  EC47  F01C         	call	___fladd	;wreg free
  3972   003528  C00F  F071         	movff	?___fladd,Read_MQ2_Sensor@temp_factor
  3973   00352C  C010  F072         	movff	?___fladd+1,Read_MQ2_Sensor@temp_factor+1
  3974   003530  C011  F073         	movff	?___fladd+2,Read_MQ2_Sensor@temp_factor+2
  3975   003534  C012  F074         	movff	?___fladd+3,Read_MQ2_Sensor@temp_factor+3
  3976   003538                     
  3977                           ;newmain.c: 463:     Rs /= temp_factor;
  3978   003538  C083  F040         	movff	Read_MQ2_Sensor@Rs,___fldiv@b
  3979   00353C  C084  F041         	movff	Read_MQ2_Sensor@Rs+1,___fldiv@b+1
  3980   003540  C085  F042         	movff	Read_MQ2_Sensor@Rs+2,___fldiv@b+2
  3981   003544  C086  F043         	movff	Read_MQ2_Sensor@Rs+3,___fldiv@b+3
  3982   003548  C071  F044         	movff	Read_MQ2_Sensor@temp_factor,___fldiv@a
  3983   00354C  C072  F045         	movff	Read_MQ2_Sensor@temp_factor+1,___fldiv@a+1
  3984   003550  C073  F046         	movff	Read_MQ2_Sensor@temp_factor+2,___fldiv@a+2
  3985   003554  C074  F047         	movff	Read_MQ2_Sensor@temp_factor+3,___fldiv@a+3
  3986   003558  ECA4  F022         	call	___fldiv	;wreg free
  3987   00355C  C040  F083         	movff	?___fldiv,Read_MQ2_Sensor@Rs
  3988   003560  C041  F084         	movff	?___fldiv+1,Read_MQ2_Sensor@Rs+1
  3989   003564  C042  F085         	movff	?___fldiv+2,Read_MQ2_Sensor@Rs+2
  3990   003568  C043  F086         	movff	?___fldiv+3,Read_MQ2_Sensor@Rs+3
  3991   00356C                     
  3992                           ;newmain.c: 465:     float rs_ro_ratio = Rs / MQ2_Ro;
  3993   00356C  C083  F040         	movff	Read_MQ2_Sensor@Rs,___fldiv@b
  3994   003570  C084  F041         	movff	Read_MQ2_Sensor@Rs+1,___fldiv@b+1
  3995   003574  C085  F042         	movff	Read_MQ2_Sensor@Rs+2,___fldiv@b+2
  3996   003578  C086  F043         	movff	Read_MQ2_Sensor@Rs+3,___fldiv@b+3
  3997   00357C  C1F9  F044         	movff	_MQ2_Ro,___fldiv@a
  3998   003580  C1FA  F045         	movff	_MQ2_Ro+1,___fldiv@a+1
  3999   003584  C1FB  F046         	movff	_MQ2_Ro+2,___fldiv@a+2
  4000   003588  C1FC  F047         	movff	_MQ2_Ro+3,___fldiv@a+3
  4001   00358C  ECA4  F022         	call	___fldiv	;wreg free
  4002   003590  C040  F08D         	movff	?___fldiv,Read_MQ2_Sensor@rs_ro_ratio
  4003   003594  C041  F08E         	movff	?___fldiv+1,Read_MQ2_Sensor@rs_ro_ratio+1
  4004   003598  C042  F08F         	movff	?___fldiv+2,Read_MQ2_Sensor@rs_ro_ratio+2
  4005   00359C  C043  F090         	movff	?___fldiv+3,Read_MQ2_Sensor@rs_ro_ratio+3
  4006   0035A0                     
  4007                           ;newmain.c: 466:     float ppm = 0.0;
  4008   0035A0  0E00               	movlw	0
  4009   0035A2  0100               	movlb	0	; () banked
  4010   0035A4  6F91               	movwf	Read_MQ2_Sensor@ppm& (0+255),b
  4011   0035A6  0E00               	movlw	0
  4012   0035A8  6F92               	movwf	(Read_MQ2_Sensor@ppm+1)& (0+255),b
  4013   0035AA  0E00               	movlw	0
  4014   0035AC  6F93               	movwf	(Read_MQ2_Sensor@ppm+2)& (0+255),b
  4015   0035AE  0E00               	movlw	0
  4016   0035B0  6F94               	movwf	(Read_MQ2_Sensor@ppm+3)& (0+255),b
  4017   0035B2                     
  4018                           ; BSR set to: 0
  4019                           ;newmain.c: 468:     if(rs_ro_ratio > 0.15) {
  4020   0035B2  0E9A               	movlw	154
  4021   0035B4  6E40               	movwf	___flge@ff1^0,c
  4022   0035B6  0E99               	movlw	153
  4023   0035B8  6E41               	movwf	(___flge@ff1+1)^0,c
  4024   0035BA  0E19               	movlw	25
  4025   0035BC  6E42               	movwf	(___flge@ff1+2)^0,c
  4026   0035BE  0E3E               	movlw	62
  4027   0035C0  6E43               	movwf	(___flge@ff1+3)^0,c
  4028   0035C2  C08D  F044         	movff	Read_MQ2_Sensor@rs_ro_ratio,___flge@ff2
  4029   0035C6  C08E  F045         	movff	Read_MQ2_Sensor@rs_ro_ratio+1,___flge@ff2+1
  4030   0035CA  C08F  F046         	movff	Read_MQ2_Sensor@rs_ro_ratio+2,___flge@ff2+2
  4031   0035CE  C090  F047         	movff	Read_MQ2_Sensor@rs_ro_ratio+3,___flge@ff2+3
  4032   0035D2  ECBA  F031         	call	___flge	;wreg free
  4033   0035D6  B0D8               	btfsc	status,0,c
  4034   0035D8  EFF0  F01A         	goto	u10761
  4035   0035DC  EFF2  F01A         	goto	u10760
  4036   0035E0                     u10761:
  4037   0035E0  EF27  F01B         	goto	l8441
  4038   0035E4                     u10760:
  4039   0035E4                     
  4040                           ;newmain.c: 469:         ppm = 12.0 * powf(rs_ro_ratio,-1.8);
  4041   0035E4  0E66               	movlw	102
  4042   0035E6  0100               	movlb	0	; () banked
  4043   0035E8  6F64               	movwf	powf@y& (0+255),b
  4044   0035EA  0E66               	movlw	102
  4045   0035EC  6F65               	movwf	(powf@y+1)& (0+255),b
  4046   0035EE  0EE6               	movlw	230
  4047   0035F0  6F66               	movwf	(powf@y+2)& (0+255),b
  4048   0035F2  0EBF               	movlw	191
  4049   0035F4  6F67               	movwf	(powf@y+3)& (0+255),b
  4050   0035F6  C08D  F060         	movff	Read_MQ2_Sensor@rs_ro_ratio,powf@x
  4051   0035FA  C08E  F061         	movff	Read_MQ2_Sensor@rs_ro_ratio+1,powf@x+1
  4052   0035FE  C08F  F062         	movff	Read_MQ2_Sensor@rs_ro_ratio+2,powf@x+2
  4053   003602  C090  F063         	movff	Read_MQ2_Sensor@rs_ro_ratio+3,powf@x+3
  4054   003606  EC09  F000         	call	_powf	;wreg free
  4055   00360A  C060  F087         	movff	?_powf,_Read_MQ2_Sensor$1891
  4056   00360E  C061  F088         	movff	?_powf+1,_Read_MQ2_Sensor$1891+1
  4057   003612  C062  F089         	movff	?_powf+2,_Read_MQ2_Sensor$1891+2
  4058   003616  C063  F08A         	movff	?_powf+3,_Read_MQ2_Sensor$1891+3
  4059   00361A                     
  4060                           ;newmain.c: 469:         ppm = 12.0 * powf(rs_ro_ratio,-1.8);
  4061   00361A  C087  F01F         	movff	_Read_MQ2_Sensor$1891,___flmul@b
  4062   00361E  C088  F020         	movff	_Read_MQ2_Sensor$1891+1,___flmul@b+1
  4063   003622  C089  F021         	movff	_Read_MQ2_Sensor$1891+2,___flmul@b+2
  4064   003626  C08A  F022         	movff	_Read_MQ2_Sensor$1891+3,___flmul@b+3
  4065   00362A  0E00               	movlw	0
  4066   00362C  6E23               	movwf	___flmul@a^0,c
  4067   00362E  0E00               	movlw	0
  4068   003630  6E24               	movwf	(___flmul@a+1)^0,c
  4069   003632  0E40               	movlw	64
  4070   003634  6E25               	movwf	(___flmul@a+2)^0,c
  4071   003636  0E41               	movlw	65
  4072   003638  6E26               	movwf	(___flmul@a+3)^0,c
  4073   00363A  ECA2  F01E         	call	___flmul	;wreg free
  4074   00363E  C01F  F091         	movff	?___flmul,Read_MQ2_Sensor@ppm
  4075   003642  C020  F092         	movff	?___flmul+1,Read_MQ2_Sensor@ppm+1
  4076   003646  C021  F093         	movff	?___flmul+2,Read_MQ2_Sensor@ppm+2
  4077   00364A  C022  F094         	movff	?___flmul+3,Read_MQ2_Sensor@ppm+3
  4078   00364E                     l8441:
  4079                           
  4080                           ;newmain.c: 471:     if(rs_ro_ratio > 0.05 && rs_ro_ratio <= 0.15) {
  4081   00364E  0ECD               	movlw	205
  4082   003650  6E40               	movwf	___flge@ff1^0,c
  4083   003652  0ECC               	movlw	204
  4084   003654  6E41               	movwf	(___flge@ff1+1)^0,c
  4085   003656  0E4C               	movlw	76
  4086   003658  6E42               	movwf	(___flge@ff1+2)^0,c
  4087   00365A  0E3D               	movlw	61
  4088   00365C  6E43               	movwf	(___flge@ff1+3)^0,c
  4089   00365E  C08D  F044         	movff	Read_MQ2_Sensor@rs_ro_ratio,___flge@ff2
  4090   003662  C08E  F045         	movff	Read_MQ2_Sensor@rs_ro_ratio+1,___flge@ff2+1
  4091   003666  C08F  F046         	movff	Read_MQ2_Sensor@rs_ro_ratio+2,___flge@ff2+2
  4092   00366A  C090  F047         	movff	Read_MQ2_Sensor@rs_ro_ratio+3,___flge@ff2+3
  4093   00366E  ECBA  F031         	call	___flge	;wreg free
  4094   003672  B0D8               	btfsc	status,0,c
  4095   003674  EF3E  F01B         	goto	u10771
  4096   003678  EF40  F01B         	goto	u10770
  4097   00367C                     u10771:
  4098   00367C  EF8E  F01B         	goto	l8449
  4099   003680                     u10770:
  4100   003680  0E9A               	movlw	154
  4101   003682  6E40               	movwf	___flge@ff1^0,c
  4102   003684  0E99               	movlw	153
  4103   003686  6E41               	movwf	(___flge@ff1+1)^0,c
  4104   003688  0E19               	movlw	25
  4105   00368A  6E42               	movwf	(___flge@ff1+2)^0,c
  4106   00368C  0E3E               	movlw	62
  4107   00368E  6E43               	movwf	(___flge@ff1+3)^0,c
  4108   003690  C08D  F044         	movff	Read_MQ2_Sensor@rs_ro_ratio,___flge@ff2
  4109   003694  C08E  F045         	movff	Read_MQ2_Sensor@rs_ro_ratio+1,___flge@ff2+1
  4110   003698  C08F  F046         	movff	Read_MQ2_Sensor@rs_ro_ratio+2,___flge@ff2+2
  4111   00369C  C090  F047         	movff	Read_MQ2_Sensor@rs_ro_ratio+3,___flge@ff2+3
  4112   0036A0  ECBA  F031         	call	___flge	;wreg free
  4113   0036A4  A0D8               	btfss	status,0,c
  4114   0036A6  EF57  F01B         	goto	u10781
  4115   0036AA  EF59  F01B         	goto	u10780
  4116   0036AE                     u10781:
  4117   0036AE  EF8E  F01B         	goto	l8449
  4118   0036B2                     u10780:
  4119   0036B2                     
  4120                           ;newmain.c: 472:         ppm = 80.0 * powf(rs_ro_ratio,-3.2);
  4121   0036B2  0ECD               	movlw	205
  4122   0036B4  0100               	movlb	0	; () banked
  4123   0036B6  6F64               	movwf	powf@y& (0+255),b
  4124   0036B8  0ECC               	movlw	204
  4125   0036BA  6F65               	movwf	(powf@y+1)& (0+255),b
  4126   0036BC  0E4C               	movlw	76
  4127   0036BE  6F66               	movwf	(powf@y+2)& (0+255),b
  4128   0036C0  0EC0               	movlw	192
  4129   0036C2  6F67               	movwf	(powf@y+3)& (0+255),b
  4130   0036C4  C08D  F060         	movff	Read_MQ2_Sensor@rs_ro_ratio,powf@x
  4131   0036C8  C08E  F061         	movff	Read_MQ2_Sensor@rs_ro_ratio+1,powf@x+1
  4132   0036CC  C08F  F062         	movff	Read_MQ2_Sensor@rs_ro_ratio+2,powf@x+2
  4133   0036D0  C090  F063         	movff	Read_MQ2_Sensor@rs_ro_ratio+3,powf@x+3
  4134   0036D4  EC09  F000         	call	_powf	;wreg free
  4135   0036D8  C060  F087         	movff	?_powf,_Read_MQ2_Sensor$1891
  4136   0036DC  C061  F088         	movff	?_powf+1,_Read_MQ2_Sensor$1891+1
  4137   0036E0  C062  F089         	movff	?_powf+2,_Read_MQ2_Sensor$1891+2
  4138   0036E4  C063  F08A         	movff	?_powf+3,_Read_MQ2_Sensor$1891+3
  4139   0036E8                     
  4140                           ;newmain.c: 472:         ppm = 80.0 * powf(rs_ro_ratio,-3.2);
  4141   0036E8  C087  F01F         	movff	_Read_MQ2_Sensor$1891,___flmul@b
  4142   0036EC  C088  F020         	movff	_Read_MQ2_Sensor$1891+1,___flmul@b+1
  4143   0036F0  C089  F021         	movff	_Read_MQ2_Sensor$1891+2,___flmul@b+2
  4144   0036F4  C08A  F022         	movff	_Read_MQ2_Sensor$1891+3,___flmul@b+3
  4145   0036F8  0E00               	movlw	0
  4146   0036FA  6E23               	movwf	___flmul@a^0,c
  4147   0036FC  0E00               	movlw	0
  4148   0036FE  6E24               	movwf	(___flmul@a+1)^0,c
  4149   003700  0EA0               	movlw	160
  4150   003702  6E25               	movwf	(___flmul@a+2)^0,c
  4151   003704  0E42               	movlw	66
  4152   003706  6E26               	movwf	(___flmul@a+3)^0,c
  4153   003708  ECA2  F01E         	call	___flmul	;wreg free
  4154   00370C  C01F  F091         	movff	?___flmul,Read_MQ2_Sensor@ppm
  4155   003710  C020  F092         	movff	?___flmul+1,Read_MQ2_Sensor@ppm+1
  4156   003714  C021  F093         	movff	?___flmul+2,Read_MQ2_Sensor@ppm+2
  4157   003718  C022  F094         	movff	?___flmul+3,Read_MQ2_Sensor@ppm+3
  4158   00371C                     l8449:
  4159                           
  4160                           ;newmain.c: 475:     ppm = ppm < 0 ? 0 : (ppm > 10000 ? 10000 : ppm);
  4161   00371C  0100               	movlb	0	; () banked
  4162   00371E  BF94               	btfsc	(Read_MQ2_Sensor@ppm+3)& (0+255),7,b
  4163   003720  EF94  F01B         	goto	u10791
  4164   003724  EF96  F01B         	goto	u10790
  4165   003728                     u10791:
  4166   003728  EFCC  F01B         	goto	l8459
  4167   00372C                     u10790:
  4168   00372C                     
  4169                           ; BSR set to: 0
  4170   00372C  0E00               	movlw	0
  4171   00372E  6E40               	movwf	___flge@ff1^0,c
  4172   003730  0E40               	movlw	64
  4173   003732  6E41               	movwf	(___flge@ff1+1)^0,c
  4174   003734  0E1C               	movlw	28
  4175   003736  6E42               	movwf	(___flge@ff1+2)^0,c
  4176   003738  0E46               	movlw	70
  4177   00373A  6E43               	movwf	(___flge@ff1+3)^0,c
  4178   00373C  C091  F044         	movff	Read_MQ2_Sensor@ppm,___flge@ff2
  4179   003740  C092  F045         	movff	Read_MQ2_Sensor@ppm+1,___flge@ff2+1
  4180   003744  C093  F046         	movff	Read_MQ2_Sensor@ppm+2,___flge@ff2+2
  4181   003748  C094  F047         	movff	Read_MQ2_Sensor@ppm+3,___flge@ff2+3
  4182   00374C  ECBA  F031         	call	___flge	;wreg free
  4183   003750  A0D8               	btfss	status,0,c
  4184   003752  EFAD  F01B         	goto	u10801
  4185   003756  EFAF  F01B         	goto	u10800
  4186   00375A                     u10801:
  4187   00375A  EFB9  F01B         	goto	l8455
  4188   00375E                     u10800:
  4189   00375E  C091  F07B         	movff	Read_MQ2_Sensor@ppm,_Read_MQ2_Sensor$815
  4190   003762  C092  F07C         	movff	Read_MQ2_Sensor@ppm+1,_Read_MQ2_Sensor$815+1
  4191   003766  C093  F07D         	movff	Read_MQ2_Sensor@ppm+2,_Read_MQ2_Sensor$815+2
  4192   00376A  C094  F07E         	movff	Read_MQ2_Sensor@ppm+3,_Read_MQ2_Sensor$815+3
  4193   00376E  EFC2  F01B         	goto	l8457
  4194   003772                     l8455:
  4195   003772  0E00               	movlw	0
  4196   003774  0100               	movlb	0	; () banked
  4197   003776  6F7B               	movwf	_Read_MQ2_Sensor$815& (0+255),b
  4198   003778  0E40               	movlw	64
  4199   00377A  6F7C               	movwf	(_Read_MQ2_Sensor$815+1)& (0+255),b
  4200   00377C  0E1C               	movlw	28
  4201   00377E  6F7D               	movwf	(_Read_MQ2_Sensor$815+2)& (0+255),b
  4202   003780  0E46               	movlw	70
  4203   003782  6F7E               	movwf	(_Read_MQ2_Sensor$815+3)& (0+255),b
  4204   003784                     l8457:
  4205   003784  C07B  F091         	movff	_Read_MQ2_Sensor$815,Read_MQ2_Sensor@ppm
  4206   003788  C07C  F092         	movff	_Read_MQ2_Sensor$815+1,Read_MQ2_Sensor@ppm+1
  4207   00378C  C07D  F093         	movff	_Read_MQ2_Sensor$815+2,Read_MQ2_Sensor@ppm+2
  4208   003790  C07E  F094         	movff	_Read_MQ2_Sensor$815+3,Read_MQ2_Sensor@ppm+3
  4209   003794  EFD4  F01B         	goto	l8461
  4210   003798                     l8459:
  4211                           
  4212                           ; BSR set to: 0
  4213   003798  0E00               	movlw	0
  4214   00379A  6F91               	movwf	Read_MQ2_Sensor@ppm& (0+255),b
  4215   00379C  0E00               	movlw	0
  4216   00379E  6F92               	movwf	(Read_MQ2_Sensor@ppm+1)& (0+255),b
  4217   0037A0  0E00               	movlw	0
  4218   0037A2  6F93               	movwf	(Read_MQ2_Sensor@ppm+2)& (0+255),b
  4219   0037A4  0E00               	movlw	0
  4220   0037A6  6F94               	movwf	(Read_MQ2_Sensor@ppm+3)& (0+255),b
  4221   0037A8                     l8461:
  4222                           
  4223                           ;newmain.c: 477:     co_filter[filter_index] = ppm;
  4224   0037A8  0100               	movlb	0	; () banked
  4225   0037AA  51FB               	movf	_filter_index& (0+255),w,b
  4226   0037AC  0D04               	mullw	4
  4227   0037AE  0E00               	movlw	low _co_filter
  4228   0037B0  24F3               	addwf	243,w,c
  4229   0037B2  6ED9               	movwf	fsr2l,c
  4230   0037B4  0E02               	movlw	high _co_filter
  4231   0037B6  20F4               	addwfc	prodh,w,c
  4232   0037B8  6EDA               	movwf	fsr2h,c
  4233   0037BA  C091  FFDE         	movff	Read_MQ2_Sensor@ppm,postinc2
  4234   0037BE  C092  FFDE         	movff	Read_MQ2_Sensor@ppm+1,postinc2
  4235   0037C2  C093  FFDE         	movff	Read_MQ2_Sensor@ppm+2,postinc2
  4236   0037C6  C094  FFDE         	movff	Read_MQ2_Sensor@ppm+3,postinc2
  4237   0037CA                     
  4238                           ; BSR set to: 0
  4239                           ;newmain.c: 478:     co_ppm = 0;
  4240   0037CA  0E00               	movlw	0
  4241   0037CC  6FEB               	movwf	_co_ppm& (0+255),b
  4242   0037CE  0E00               	movlw	0
  4243   0037D0  6FEC               	movwf	(_co_ppm+1)& (0+255),b
  4244   0037D2  0E00               	movlw	0
  4245   0037D4  6FED               	movwf	(_co_ppm+2)& (0+255),b
  4246   0037D6  0E00               	movlw	0
  4247   0037D8  6FEE               	movwf	(_co_ppm+3)& (0+255),b
  4248   0037DA                     
  4249                           ; BSR set to: 0
  4250                           ;newmain.c: 479:     for(int i = 0; i < 7; i++) {
  4251   0037DA  0E00               	movlw	0
  4252   0037DC  6F8C               	movwf	(Read_MQ2_Sensor@i+1)& (0+255),b
  4253   0037DE  0E00               	movlw	0
  4254   0037E0  6F8B               	movwf	Read_MQ2_Sensor@i& (0+255),b
  4255   0037E2                     l8471:
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;newmain.c: 480:         co_ppm += co_filter[i];
  4259   0037E2  C0EB  F00F         	movff	_co_ppm,___fladd@b
  4260   0037E6  C0EC  F010         	movff	_co_ppm+1,___fladd@b+1
  4261   0037EA  C0ED  F011         	movff	_co_ppm+2,___fladd@b+2
  4262   0037EE  C0EE  F012         	movff	_co_ppm+3,___fladd@b+3
  4263   0037F2  0E00               	movlw	low _co_filter
  4264   0037F4  6E5B               	movwf	??_Read_MQ2_Sensor^0,c
  4265   0037F6  0E02               	movlw	high _co_filter
  4266   0037F8  6E5C               	movwf	(??_Read_MQ2_Sensor+1)^0,c
  4267   0037FA  90D8               	bcf	status,0,c
  4268   0037FC  358B               	rlcf	Read_MQ2_Sensor@i& (0+255),w,b
  4269   0037FE  6ED9               	movwf	fsr2l,c
  4270   003800  358C               	rlcf	(Read_MQ2_Sensor@i+1)& (0+255),w,b
  4271   003802  6EDA               	movwf	fsr2h,c
  4272   003804  90D8               	bcf	status,0,c
  4273   003806  36D9               	rlcf	fsr2l,f,c
  4274   003808  36DA               	rlcf	fsr2h,f,c
  4275   00380A  505B               	movf	??_Read_MQ2_Sensor^0,w,c
  4276   00380C  26D9               	addwf	fsr2l,f,c
  4277   00380E  505C               	movf	(??_Read_MQ2_Sensor+1)^0,w,c
  4278   003810  22DA               	addwfc	fsr2h,f,c
  4279   003812  CFDE F013          	movff	postinc2,___fladd@a
  4280   003816  CFDE F014          	movff	postinc2,___fladd@a+1
  4281   00381A  CFDE F015          	movff	postinc2,___fladd@a+2
  4282   00381E  CFDE F016          	movff	postinc2,___fladd@a+3
  4283   003822  EC47  F01C         	call	___fladd	;wreg free
  4284   003826  C00F  F0EB         	movff	?___fladd,_co_ppm
  4285   00382A  C010  F0EC         	movff	?___fladd+1,_co_ppm+1
  4286   00382E  C011  F0ED         	movff	?___fladd+2,_co_ppm+2
  4287   003832  C012  F0EE         	movff	?___fladd+3,_co_ppm+3
  4288   003836                     
  4289                           ;newmain.c: 481:     }
  4290   003836  0100               	movlb	0	; () banked
  4291   003838  4B8B               	infsnz	Read_MQ2_Sensor@i& (0+255),f,b
  4292   00383A  2B8C               	incf	(Read_MQ2_Sensor@i+1)& (0+255),f,b
  4293   00383C                     
  4294                           ; BSR set to: 0
  4295   00383C  BF8C               	btfsc	(Read_MQ2_Sensor@i+1)& (0+255),7,b
  4296   00383E  EF2A  F01C         	goto	u10811
  4297   003842  518C               	movf	(Read_MQ2_Sensor@i+1)& (0+255),w,b
  4298   003844  E109               	bnz	u10810
  4299   003846  0E07               	movlw	7
  4300   003848  5D8B               	subwf	Read_MQ2_Sensor@i& (0+255),w,b
  4301   00384A  A0D8               	btfss	status,0,c
  4302   00384C  EF2A  F01C         	goto	u10811
  4303   003850  EF2C  F01C         	goto	u10810
  4304   003854                     u10811:
  4305   003854  EFF1  F01B         	goto	l8471
  4306   003858                     u10810:
  4307   003858                     
  4308                           ; BSR set to: 0
  4309                           ;newmain.c: 482:     co_ppm /= 7;
  4310   003858  C0EB  F040         	movff	_co_ppm,___fldiv@b
  4311   00385C  C0EC  F041         	movff	_co_ppm+1,___fldiv@b+1
  4312   003860  C0ED  F042         	movff	_co_ppm+2,___fldiv@b+2
  4313   003864  C0EE  F043         	movff	_co_ppm+3,___fldiv@b+3
  4314   003868  0E00               	movlw	0
  4315   00386A  6E44               	movwf	___fldiv@a^0,c
  4316   00386C  0E00               	movlw	0
  4317   00386E  6E45               	movwf	(___fldiv@a+1)^0,c
  4318   003870  0EE0               	movlw	224
  4319   003872  6E46               	movwf	(___fldiv@a+2)^0,c
  4320   003874  0E40               	movlw	64
  4321   003876  6E47               	movwf	(___fldiv@a+3)^0,c
  4322   003878  ECA4  F022         	call	___fldiv	;wreg free
  4323   00387C  C040  F0EB         	movff	?___fldiv,_co_ppm
  4324   003880  C041  F0EC         	movff	?___fldiv+1,_co_ppm+1
  4325   003884  C042  F0ED         	movff	?___fldiv+2,_co_ppm+2
  4326   003888  C043  F0EE         	movff	?___fldiv+3,_co_ppm+3
  4327   00388C  0012               	return		;funcret
  4328   00388E                     __end_of_Read_MQ2_Sensor:
  4329                           	callstack 0
  4330                           
  4331 ;; *************** function _powf *****************
  4332 ;; Defined at:
  4333 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\powf.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  x               4    0[BANK0 ] float 
  4336 ;;  y               4    4[BANK0 ] float 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  s2              4  144[BANK1 ] float 
  4339 ;;  s_h             4  116[BANK1 ] struct fui
  4340 ;;  t_h             4  112[BANK1 ] struct fui
  4341 ;;  t_l             4   52[BANK1 ] float 
  4342 ;;  s_l             4   48[BANK1 ] float 
  4343 ;;  z               4  180[BANK1 ] struct fui
  4344 ;;  t               4  176[BANK1 ] struct fui
  4345 ;;  ix              4  172[BANK1 ] struct fui
  4346 ;;  j               4  168[BANK1 ] long 
  4347 ;;  k               4  164[BANK1 ] long 
  4348 ;;  p_h             4  160[BANK1 ] struct fui
  4349 ;;  is              4  152[BANK1 ] struct fui
  4350 ;;  iy              4  148[BANK1 ] long 
  4351 ;;  t1              4  140[BANK1 ] struct fui
  4352 ;;  n               4  136[BANK1 ] long 
  4353 ;;  hy              4  132[BANK1 ] struct fui
  4354 ;;  v               4  128[BANK1 ] float 
  4355 ;;  u               4  124[BANK1 ] float 
  4356 ;;  ax              4  120[BANK1 ] struct fui
  4357 ;;  p_l             4  108[BANK1 ] float 
  4358 ;;  hx              4  104[BANK1 ] struct fui
  4359 ;;  sn              4  100[BANK1 ] unsigned long 
  4360 ;;  s               4   96[BANK1 ] float 
  4361 ;;  yisint          4   84[BANK1 ] long 
  4362 ;;  r               4   80[BANK1 ] float 
  4363 ;;  w               4   68[BANK1 ] float 
  4364 ;;  y1              4   44[BANK1 ] struct fui
  4365 ;;  i               4   40[BANK1 ] long 
  4366 ;;  z_l             4   36[BANK1 ] float 
  4367 ;;  z_h             4   32[BANK1 ] float 
  4368 ;;  t2              4   28[BANK1 ] float 
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  4    0[BANK0 ] float 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4378 ;;      Params:         0       8       0       0       0       0       0       0       0
  4379 ;;      Locals:         0       0     184       0       0       0       0       0       0
  4380 ;;      Temps:          0       9       0       0       0       0       0       0       0
  4381 ;;      Totals:         0      17     184       0       0       0       0       0       0
  4382 ;;Total ram usage:      201 bytes
  4383 ;; Hardware stack levels used: 1
  4384 ;; Hardware stack levels required when called: 3
  4385 ;; This function calls:
  4386 ;;		___fladd
  4387 ;;		___fldiv
  4388 ;;		___flge
  4389 ;;		___flmul
  4390 ;;		___flneg
  4391 ;;		___flsub
  4392 ;;		___xxtofl
  4393 ;;		_scalbnf
  4394 ;;		_sqrtf
  4395 ;; This function is called by:
  4396 ;;		_Read_MQ2_Sensor
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text10
  4401   000012                     __ptext10:
  4402                           	callstack 0
  4403   000012                     _powf:
  4404                           	callstack 26
  4405   000012  C060  F168         	movff	powf@x,powf@hx
  4406   000016  C061  F169         	movff	powf@x+1,powf@hx+1
  4407   00001A  C062  F16A         	movff	powf@x+2,powf@hx+2
  4408   00001E  C063  F16B         	movff	powf@x+3,powf@hx+3
  4409   000022  C064  F184         	movff	powf@y,powf@hy
  4410   000026  C065  F185         	movff	powf@y+1,powf@hy+1
  4411   00002A  C066  F186         	movff	powf@y+2,powf@hy+2
  4412   00002E  C067  F187         	movff	powf@y+3,powf@hy+3
  4413   000032  0EFF               	movlw	255
  4414   000034  0101               	movlb	1	; () banked
  4415   000036  1568               	andwf	powf@hx& (0+255),w,b
  4416   000038  6FAC               	movwf	powf@ix& (0+255),b
  4417   00003A  0EFF               	movlw	255
  4418   00003C  1569               	andwf	(powf@hx+1)& (0+255),w,b
  4419   00003E  6FAD               	movwf	(powf@ix+1)& (0+255),b
  4420   000040  0EFF               	movlw	255
  4421   000042  156A               	andwf	(powf@hx+2)& (0+255),w,b
  4422   000044  6FAE               	movwf	(powf@ix+2)& (0+255),b
  4423   000046  0E7F               	movlw	127
  4424   000048  156B               	andwf	(powf@hx+3)& (0+255),w,b
  4425   00004A  6FAF               	movwf	(powf@ix+3)& (0+255),b
  4426   00004C  0EFF               	movlw	255
  4427   00004E  1584               	andwf	powf@hy& (0+255),w,b
  4428   000050  6F94               	movwf	powf@iy& (0+255),b
  4429   000052  0EFF               	movlw	255
  4430   000054  1585               	andwf	(powf@hy+1)& (0+255),w,b
  4431   000056  6F95               	movwf	(powf@iy+1)& (0+255),b
  4432   000058  0EFF               	movlw	255
  4433   00005A  1586               	andwf	(powf@hy+2)& (0+255),w,b
  4434   00005C  6F96               	movwf	(powf@iy+2)& (0+255),b
  4435   00005E  0E7F               	movlw	127
  4436   000060  1587               	andwf	(powf@hy+3)& (0+255),w,b
  4437   000062  6F97               	movwf	(powf@iy+3)& (0+255),b
  4438   000064  5194               	movf	powf@iy& (0+255),w,b
  4439   000066  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4440   000068  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  4441   00006A  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  4442   00006C  A4D8               	btfss	status,2,c
  4443   00006E  EF3B  F000         	goto	u10021
  4444   000072  EF3D  F000         	goto	u10020
  4445   000076                     u10021:
  4446   000076  EF48  F000         	goto	l7891
  4447   00007A                     u10020:
  4448   00007A                     
  4449                           ; BSR set to: 1
  4450   00007A  0E00               	movlw	0
  4451   00007C  0100               	movlb	0	; () banked
  4452   00007E  6F60               	movwf	?_powf& (0+255),b
  4453   000080  0E00               	movlw	0
  4454   000082  6F61               	movwf	(?_powf+1)& (0+255),b
  4455   000084  0E80               	movlw	128
  4456   000086  6F62               	movwf	(?_powf+2)& (0+255),b
  4457   000088  0E3F               	movlw	63
  4458   00008A  6F63               	movwf	(?_powf+3)& (0+255),b
  4459   00008C  EF61  F012         	goto	l1340
  4460   000090                     l7891:
  4461                           
  4462                           ; BSR set to: 1
  4463   000090  0E80               	movlw	128
  4464   000092  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  4465   000094  E109               	bnz	u10031
  4466   000096  0E3F               	movlw	63
  4467   000098  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  4468   00009A  1168               	iorwf	powf@hx& (0+255),w,b
  4469   00009C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  4470   00009E  A4D8               	btfss	status,2,c
  4471   0000A0  EF54  F000         	goto	u10031
  4472   0000A4  EF56  F000         	goto	u10030
  4473   0000A8                     u10031:
  4474   0000A8  EF61  F000         	goto	l7897
  4475   0000AC                     u10030:
  4476   0000AC                     
  4477                           ; BSR set to: 1
  4478   0000AC  0E00               	movlw	0
  4479   0000AE  0100               	movlb	0	; () banked
  4480   0000B0  6F60               	movwf	?_powf& (0+255),b
  4481   0000B2  0E00               	movlw	0
  4482   0000B4  6F61               	movwf	(?_powf+1)& (0+255),b
  4483   0000B6  0E80               	movlw	128
  4484   0000B8  6F62               	movwf	(?_powf+2)& (0+255),b
  4485   0000BA  0E3F               	movlw	63
  4486   0000BC  6F63               	movwf	(?_powf+3)& (0+255),b
  4487   0000BE  EF61  F012         	goto	l1340
  4488   0000C2                     l7897:
  4489                           
  4490                           ; BSR set to: 1
  4491   0000C2  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4492   0000C4  EF72  F000         	goto	u10040
  4493   0000C8  05AC               	decf	powf@ix& (0+255),w,b
  4494   0000CA  0E00               	movlw	0
  4495   0000CC  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4496   0000CE  0E80               	movlw	128
  4497   0000D0  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4498   0000D2  0E7F               	movlw	127
  4499   0000D4  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4500   0000D6  B0D8               	btfsc	status,0,c
  4501   0000D8  EF70  F000         	goto	u10041
  4502   0000DC  EF72  F000         	goto	u10040
  4503   0000E0                     u10041:
  4504   0000E0  EF83  F000         	goto	l7901
  4505   0000E4                     u10040:
  4506   0000E4                     
  4507                           ; BSR set to: 1
  4508   0000E4  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4509   0000E6  EF81  F000         	goto	u10051
  4510   0000EA  0594               	decf	powf@iy& (0+255),w,b
  4511   0000EC  0E00               	movlw	0
  4512   0000EE  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  4513   0000F0  0E80               	movlw	128
  4514   0000F2  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  4515   0000F4  0E7F               	movlw	127
  4516   0000F6  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4517   0000F8  A0D8               	btfss	status,0,c
  4518   0000FA  EF81  F000         	goto	u10051
  4519   0000FE  EF83  F000         	goto	u10050
  4520   000102                     u10051:
  4521   000102  EF9F  F000         	goto	l7905
  4522   000106                     u10050:
  4523   000106                     l7901:
  4524                           
  4525                           ; BSR set to: 1
  4526   000106  C060  F00F         	movff	powf@x,___fladd@b
  4527   00010A  C061  F010         	movff	powf@x+1,___fladd@b+1
  4528   00010E  C062  F011         	movff	powf@x+2,___fladd@b+2
  4529   000112  C063  F012         	movff	powf@x+3,___fladd@b+3
  4530   000116  C064  F013         	movff	powf@y,___fladd@a
  4531   00011A  C065  F014         	movff	powf@y+1,___fladd@a+1
  4532   00011E  C066  F015         	movff	powf@y+2,___fladd@a+2
  4533   000122  C067  F016         	movff	powf@y+3,___fladd@a+3
  4534   000126  EC47  F01C         	call	___fladd	;wreg free
  4535   00012A  C00F  F060         	movff	?___fladd,?_powf
  4536   00012E  C010  F061         	movff	?___fladd+1,?_powf+1
  4537   000132  C011  F062         	movff	?___fladd+2,?_powf+2
  4538   000136  C012  F063         	movff	?___fladd+3,?_powf+3
  4539   00013A  EF61  F012         	goto	l1340
  4540   00013E                     l7905:
  4541                           
  4542                           ; BSR set to: 1
  4543   00013E  0E00               	movlw	0
  4544   000140  6F54               	movwf	powf@yisint& (0+255),b
  4545   000142  0E00               	movlw	0
  4546   000144  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4547   000146  0E00               	movlw	0
  4548   000148  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4549   00014A  0E00               	movlw	0
  4550   00014C  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4551   00014E                     
  4552                           ; BSR set to: 1
  4553   00014E  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4554   000150  EFAE  F000         	goto	u10060
  4555   000154  EFAC  F000         	goto	u10061
  4556   000158                     u10061:
  4557   000158  EF7A  F001         	goto	l1345
  4558   00015C                     u10060:
  4559   00015C                     
  4560                           ; BSR set to: 1
  4561   00015C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4562   00015E  EFBA  F000         	goto	u10071
  4563   000162  0E80               	movlw	128
  4564   000164  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4565   000166  0E4B               	movlw	75
  4566   000168  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4567   00016A  A0D8               	btfss	status,0,c
  4568   00016C  EFBA  F000         	goto	u10071
  4569   000170  EFBC  F000         	goto	u10070
  4570   000174                     u10071:
  4571   000174  EFC6  F000         	goto	l7913
  4572   000178                     u10070:
  4573   000178                     
  4574                           ; BSR set to: 1
  4575   000178  0E02               	movlw	2
  4576   00017A  6F54               	movwf	powf@yisint& (0+255),b
  4577   00017C  0E00               	movlw	0
  4578   00017E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4579   000180  0E00               	movlw	0
  4580   000182  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4581   000184  0E00               	movlw	0
  4582   000186  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4583   000188  EF7A  F001         	goto	l1345
  4584   00018C                     l7913:
  4585                           
  4586                           ; BSR set to: 1
  4587   00018C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4588   00018E  EFD2  F000         	goto	u10081
  4589   000192  0E80               	movlw	128
  4590   000194  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  4591   000196  0E3F               	movlw	63
  4592   000198  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4593   00019A  A0D8               	btfss	status,0,c
  4594   00019C  EFD2  F000         	goto	u10081
  4595   0001A0  EFD4  F000         	goto	u10080
  4596   0001A4                     u10081:
  4597   0001A4  EF7A  F001         	goto	l1345
  4598   0001A8                     u10080:
  4599   0001A8                     
  4600                           ; BSR set to: 1
  4601   0001A8  0E17               	movlw	23
  4602   0001AA  0100               	movlb	0	; () banked
  4603   0001AC  6F68               	movwf	??_powf& (0+255),b
  4604   0001AE  C194  F069         	movff	powf@iy,??_powf+1
  4605   0001B2  C195  F06A         	movff	powf@iy+1,??_powf+2
  4606   0001B6  C196  F06B         	movff	powf@iy+2,??_powf+3
  4607   0001BA  C197  F06C         	movff	powf@iy+3,??_powf+4
  4608   0001BE                     u10095:
  4609   0001BE  6768               	tstfsz	??_powf& (0+255),b
  4610   0001C0  EFE4  F000         	goto	u10096
  4611   0001C4  EFEC  F000         	goto	u10097
  4612   0001C8                     u10096:
  4613   0001C8  356C               	rlcf	(??_powf+4)& (0+255),w,b
  4614   0001CA  336C               	rrcf	(??_powf+4)& (0+255),f,b
  4615   0001CC  336B               	rrcf	(??_powf+3)& (0+255),f,b
  4616   0001CE  336A               	rrcf	(??_powf+2)& (0+255),f,b
  4617   0001D0  3369               	rrcf	(??_powf+1)& (0+255),f,b
  4618   0001D2  2F68               	decfsz	??_powf& (0+255),f,b
  4619   0001D4  EFDF  F000         	goto	u10095
  4620   0001D8                     u10097:
  4621   0001D8  0E81               	movlw	129
  4622   0001DA  0100               	movlb	0	; () banked
  4623   0001DC  2569               	addwf	(??_powf+1)& (0+255),w,b
  4624   0001DE  0101               	movlb	1	; () banked
  4625   0001E0  6FA4               	movwf	powf@k& (0+255),b
  4626   0001E2  0EFF               	movlw	255
  4627   0001E4  0100               	movlb	0	; () banked
  4628   0001E6  216A               	addwfc	(??_powf+2)& (0+255),w,b
  4629   0001E8  0101               	movlb	1	; () banked
  4630   0001EA  6FA5               	movwf	(powf@k+1)& (0+255),b
  4631   0001EC  0EFF               	movlw	255
  4632   0001EE  0100               	movlb	0	; () banked
  4633   0001F0  216B               	addwfc	(??_powf+3)& (0+255),w,b
  4634   0001F2  0101               	movlb	1	; () banked
  4635   0001F4  6FA6               	movwf	(powf@k+2)& (0+255),b
  4636   0001F6  0EFF               	movlw	255
  4637   0001F8  0100               	movlb	0	; () banked
  4638   0001FA  216C               	addwfc	(??_powf+4)& (0+255),w,b
  4639   0001FC  0101               	movlb	1	; () banked
  4640   0001FE  6FA7               	movwf	(powf@k+3)& (0+255),b
  4641   000200  51A4               	movf	powf@k& (0+255),w,b
  4642   000202  0817               	sublw	23
  4643   000204  0100               	movlb	0	; () banked
  4644   000206  6F68               	movwf	??_powf& (0+255),b
  4645   000208  C194  F069         	movff	powf@iy,??_powf+1
  4646   00020C  C195  F06A         	movff	powf@iy+1,??_powf+2
  4647   000210  C196  F06B         	movff	powf@iy+2,??_powf+3
  4648   000214  C197  F06C         	movff	powf@iy+3,??_powf+4
  4649   000218                     u10105:
  4650   000218  6768               	tstfsz	??_powf& (0+255),b
  4651   00021A  EF11  F001         	goto	u10106
  4652   00021E  EF19  F001         	goto	u10107
  4653   000222                     u10106:
  4654   000222  356C               	rlcf	(??_powf+4)& (0+255),w,b
  4655   000224  336C               	rrcf	(??_powf+4)& (0+255),f,b
  4656   000226  336B               	rrcf	(??_powf+3)& (0+255),f,b
  4657   000228  336A               	rrcf	(??_powf+2)& (0+255),f,b
  4658   00022A  3369               	rrcf	(??_powf+1)& (0+255),f,b
  4659   00022C  2F68               	decfsz	??_powf& (0+255),f,b
  4660   00022E  EF0C  F001         	goto	u10105
  4661   000232                     u10107:
  4662   000232  C069  F1A8         	movff	??_powf+1,powf@j
  4663   000236  C06A  F1A9         	movff	??_powf+2,powf@j+1
  4664   00023A  C06B  F1AA         	movff	??_powf+3,powf@j+2
  4665   00023E  C06C  F1AB         	movff	??_powf+4,powf@j+3
  4666   000242  0101               	movlb	1	; () banked
  4667   000244  51A4               	movf	powf@k& (0+255),w,b
  4668   000246  0817               	sublw	23
  4669   000248  0100               	movlb	0	; () banked
  4670   00024A  6F68               	movwf	??_powf& (0+255),b
  4671   00024C  C1A8  F069         	movff	powf@j,??_powf+1
  4672   000250  C1A9  F06A         	movff	powf@j+1,??_powf+2
  4673   000254  C1AA  F06B         	movff	powf@j+2,??_powf+3
  4674   000258  C1AB  F06C         	movff	powf@j+3,??_powf+4
  4675   00025C  2B68               	incf	??_powf& (0+255),f,b
  4676   00025E  EF36  F001         	goto	u10110
  4677   000262                     u10115:
  4678   000262  90D8               	bcf	status,0,c
  4679   000264  3769               	rlcf	(??_powf+1)& (0+255),f,b
  4680   000266  376A               	rlcf	(??_powf+2)& (0+255),f,b
  4681   000268  376B               	rlcf	(??_powf+3)& (0+255),f,b
  4682   00026A  376C               	rlcf	(??_powf+4)& (0+255),f,b
  4683   00026C                     u10110:
  4684   00026C  2F68               	decfsz	??_powf& (0+255),f,b
  4685   00026E  EF31  F001         	goto	u10115
  4686   000272  0101               	movlb	1	; () banked
  4687   000274  5194               	movf	powf@iy& (0+255),w,b
  4688   000276  0100               	movlb	0	; () banked
  4689   000278  1969               	xorwf	(??_powf+1)& (0+255),w,b
  4690   00027A  E113               	bnz	u10121
  4691   00027C  0101               	movlb	1	; () banked
  4692   00027E  5195               	movf	(powf@iy+1)& (0+255),w,b
  4693   000280  0100               	movlb	0	; () banked
  4694   000282  196A               	xorwf	(??_powf+2)& (0+255),w,b
  4695   000284  E10E               	bnz	u10121
  4696   000286  0101               	movlb	1	; () banked
  4697   000288  5196               	movf	(powf@iy+2)& (0+255),w,b
  4698   00028A  0100               	movlb	0	; () banked
  4699   00028C  196B               	xorwf	(??_powf+3)& (0+255),w,b
  4700   00028E  E109               	bnz	u10121
  4701   000290  0101               	movlb	1	; () banked
  4702   000292  5197               	movf	(powf@iy+3)& (0+255),w,b
  4703   000294  0100               	movlb	0	; () banked
  4704   000296  196C               	xorwf	(??_powf+4)& (0+255),w,b
  4705   000298  A4D8               	btfss	status,2,c
  4706   00029A  EF51  F001         	goto	u10121
  4707   00029E  EF53  F001         	goto	u10120
  4708   0002A2                     u10121:
  4709   0002A2  EF7A  F001         	goto	l1345
  4710   0002A6                     u10120:
  4711   0002A6                     
  4712                           ; BSR set to: 0
  4713   0002A6  0E01               	movlw	1
  4714   0002A8  0101               	movlb	1	; () banked
  4715   0002AA  15A8               	andwf	powf@j& (0+255),w,b
  4716   0002AC  0100               	movlb	0	; () banked
  4717   0002AE  6F68               	movwf	??_powf& (0+255),b
  4718   0002B0  0E00               	movlw	0
  4719   0002B2  0101               	movlb	1	; () banked
  4720   0002B4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  4721   0002B6  0100               	movlb	0	; () banked
  4722   0002B8  6F69               	movwf	(??_powf+1)& (0+255),b
  4723   0002BA  0E00               	movlw	0
  4724   0002BC  0101               	movlb	1	; () banked
  4725   0002BE  15AA               	andwf	(powf@j+2)& (0+255),w,b
  4726   0002C0  0100               	movlb	0	; () banked
  4727   0002C2  6F6A               	movwf	(??_powf+2)& (0+255),b
  4728   0002C4  0E00               	movlw	0
  4729   0002C6  0101               	movlb	1	; () banked
  4730   0002C8  15AB               	andwf	(powf@j+3)& (0+255),w,b
  4731   0002CA  0100               	movlb	0	; () banked
  4732   0002CC  6F6B               	movwf	(??_powf+3)& (0+255),b
  4733   0002CE  5168               	movf	??_powf& (0+255),w,b
  4734   0002D0  0802               	sublw	2
  4735   0002D2  0101               	movlb	1	; () banked
  4736   0002D4  6F54               	movwf	powf@yisint& (0+255),b
  4737   0002D6  0E00               	movlw	0
  4738   0002D8  0100               	movlb	0	; () banked
  4739   0002DA  5569               	subfwb	(??_powf+1)& (0+255),w,b
  4740   0002DC  0101               	movlb	1	; () banked
  4741   0002DE  6F55               	movwf	(powf@yisint+1)& (0+255),b
  4742   0002E0  0E00               	movlw	0
  4743   0002E2  0100               	movlb	0	; () banked
  4744   0002E4  556A               	subfwb	(??_powf+2)& (0+255),w,b
  4745   0002E6  0101               	movlb	1	; () banked
  4746   0002E8  6F56               	movwf	(powf@yisint+2)& (0+255),b
  4747   0002EA  0E00               	movlw	0
  4748   0002EC  0100               	movlb	0	; () banked
  4749   0002EE  556B               	subfwb	(??_powf+3)& (0+255),w,b
  4750   0002F0  0101               	movlb	1	; () banked
  4751   0002F2  6F57               	movwf	(powf@yisint+3)& (0+255),b
  4752   0002F4                     l1345:
  4753   0002F4  0E80               	movlw	128
  4754   0002F6  0101               	movlb	1	; () banked
  4755   0002F8  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4756   0002FA  E109               	bnz	u10131
  4757   0002FC  0E7F               	movlw	127
  4758   0002FE  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4759   000300  1194               	iorwf	powf@iy& (0+255),w,b
  4760   000302  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4761   000304  A4D8               	btfss	status,2,c
  4762   000306  EF87  F001         	goto	u10131
  4763   00030A  EF89  F001         	goto	u10130
  4764   00030E                     u10131:
  4765   00030E  EFF5  F001         	goto	l7943
  4766   000312                     u10130:
  4767   000312                     
  4768                           ; BSR set to: 1
  4769   000312  0E80               	movlw	128
  4770   000314  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4771   000316  E109               	bnz	u10141
  4772   000318  0E3F               	movlw	63
  4773   00031A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4774   00031C  11AC               	iorwf	powf@ix& (0+255),w,b
  4775   00031E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4776   000320  A4D8               	btfss	status,2,c
  4777   000322  EF95  F001         	goto	u10141
  4778   000326  EF97  F001         	goto	u10140
  4779   00032A                     u10141:
  4780   00032A  EFA2  F001         	goto	l7927
  4781   00032E                     u10140:
  4782   00032E                     
  4783                           ; BSR set to: 1
  4784   00032E  0E00               	movlw	0
  4785   000330  0100               	movlb	0	; () banked
  4786   000332  6F60               	movwf	?_powf& (0+255),b
  4787   000334  0E00               	movlw	0
  4788   000336  6F61               	movwf	(?_powf+1)& (0+255),b
  4789   000338  0E80               	movlw	128
  4790   00033A  6F62               	movwf	(?_powf+2)& (0+255),b
  4791   00033C  0E3F               	movlw	63
  4792   00033E  6F63               	movwf	(?_powf+3)& (0+255),b
  4793   000340  EF61  F012         	goto	l1340
  4794   000344                     l7927:
  4795                           
  4796                           ; BSR set to: 1
  4797   000344  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4798   000346  EFB1  F001         	goto	u10151
  4799   00034A  05AC               	decf	powf@ix& (0+255),w,b
  4800   00034C  0E00               	movlw	0
  4801   00034E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4802   000350  0E80               	movlw	128
  4803   000352  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4804   000354  0E3F               	movlw	63
  4805   000356  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4806   000358  A0D8               	btfss	status,0,c
  4807   00035A  EFB1  F001         	goto	u10151
  4808   00035E  EFB3  F001         	goto	u10150
  4809   000362                     u10151:
  4810   000362  EFCF  F001         	goto	l7935
  4811   000366                     u10150:
  4812   000366                     
  4813                           ; BSR set to: 1
  4814   000366  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4815   000368  EFBA  F001         	goto	u10160
  4816   00036C  EFB8  F001         	goto	u10161
  4817   000370                     u10161:
  4818   000370  EFC5  F001         	goto	l1355
  4819   000374                     u10160:
  4820   000374                     
  4821                           ; BSR set to: 1
  4822   000374  0E00               	movlw	0
  4823   000376  0100               	movlb	0	; () banked
  4824   000378  6F60               	movwf	?_powf& (0+255),b
  4825   00037A  0E00               	movlw	0
  4826   00037C  6F61               	movwf	(?_powf+1)& (0+255),b
  4827   00037E  0E00               	movlw	0
  4828   000380  6F62               	movwf	(?_powf+2)& (0+255),b
  4829   000382  0E00               	movlw	0
  4830   000384  6F63               	movwf	(?_powf+3)& (0+255),b
  4831   000386  EF61  F012         	goto	l1340
  4832   00038A                     l1355:
  4833                           
  4834                           ; BSR set to: 1
  4835   00038A  C064  F060         	movff	powf@y,?_powf
  4836   00038E  C065  F061         	movff	powf@y+1,?_powf+1
  4837   000392  C066  F062         	movff	powf@y+2,?_powf+2
  4838   000396  C067  F063         	movff	powf@y+3,?_powf+3
  4839   00039A  EF61  F012         	goto	l1340
  4840   00039E                     l7935:
  4841                           
  4842                           ; BSR set to: 1
  4843   00039E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4844   0003A0  EFD6  F001         	goto	u10170
  4845   0003A4  EFD4  F001         	goto	u10171
  4846   0003A8                     u10171:
  4847   0003A8  EFEA  F001         	goto	l7939
  4848   0003AC                     u10170:
  4849   0003AC                     
  4850                           ; BSR set to: 1
  4851   0003AC  C064  F001         	movff	powf@y,___flneg@f1
  4852   0003B0  C065  F002         	movff	powf@y+1,___flneg@f1+1
  4853   0003B4  C066  F003         	movff	powf@y+2,___flneg@f1+2
  4854   0003B8  C067  F004         	movff	powf@y+3,___flneg@f1+3
  4855   0003BC  ECA4  F038         	call	___flneg	;wreg free
  4856   0003C0  C001  F060         	movff	?___flneg,?_powf
  4857   0003C4  C002  F061         	movff	?___flneg+1,?_powf+1
  4858   0003C8  C003  F062         	movff	?___flneg+2,?_powf+2
  4859   0003CC  C004  F063         	movff	?___flneg+3,?_powf+3
  4860   0003D0  EF61  F012         	goto	l1340
  4861   0003D4                     l7939:
  4862                           
  4863                           ; BSR set to: 1
  4864   0003D4  0E00               	movlw	0
  4865   0003D6  0100               	movlb	0	; () banked
  4866   0003D8  6F60               	movwf	?_powf& (0+255),b
  4867   0003DA  0E00               	movlw	0
  4868   0003DC  6F61               	movwf	(?_powf+1)& (0+255),b
  4869   0003DE  0E00               	movlw	0
  4870   0003E0  6F62               	movwf	(?_powf+2)& (0+255),b
  4871   0003E2  0E00               	movlw	0
  4872   0003E4  6F63               	movwf	(?_powf+3)& (0+255),b
  4873   0003E6  EF61  F012         	goto	l1340
  4874   0003EA                     l7943:
  4875                           
  4876                           ; BSR set to: 1
  4877   0003EA  0E80               	movlw	128
  4878   0003EC  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  4879   0003EE  E109               	bnz	u10181
  4880   0003F0  0E3F               	movlw	63
  4881   0003F2  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  4882   0003F4  1194               	iorwf	powf@iy& (0+255),w,b
  4883   0003F6  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4884   0003F8  A4D8               	btfss	status,2,c
  4885   0003FA  EF01  F002         	goto	u10181
  4886   0003FE  EF03  F002         	goto	u10180
  4887   000402                     u10181:
  4888   000402  EF30  F002         	goto	l7949
  4889   000406                     u10180:
  4890   000406                     
  4891                           ; BSR set to: 1
  4892   000406  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4893   000408  EF0A  F002         	goto	u10190
  4894   00040C  EF08  F002         	goto	u10191
  4895   000410                     u10191:
  4896   000410  EF26  F002         	goto	l1365
  4897   000414                     u10190:
  4898   000414                     
  4899                           ; BSR set to: 1
  4900   000414  0E00               	movlw	0
  4901   000416  6E40               	movwf	___fldiv@b^0,c
  4902   000418  0E00               	movlw	0
  4903   00041A  6E41               	movwf	(___fldiv@b+1)^0,c
  4904   00041C  0E80               	movlw	128
  4905   00041E  6E42               	movwf	(___fldiv@b+2)^0,c
  4906   000420  0E3F               	movlw	63
  4907   000422  6E43               	movwf	(___fldiv@b+3)^0,c
  4908   000424  C060  F044         	movff	powf@x,___fldiv@a
  4909   000428  C061  F045         	movff	powf@x+1,___fldiv@a+1
  4910   00042C  C062  F046         	movff	powf@x+2,___fldiv@a+2
  4911   000430  C063  F047         	movff	powf@x+3,___fldiv@a+3
  4912   000434  ECA4  F022         	call	___fldiv	;wreg free
  4913   000438  C040  F060         	movff	?___fldiv,?_powf
  4914   00043C  C041  F061         	movff	?___fldiv+1,?_powf+1
  4915   000440  C042  F062         	movff	?___fldiv+2,?_powf+2
  4916   000444  C043  F063         	movff	?___fldiv+3,?_powf+3
  4917   000448  EF61  F012         	goto	l1340
  4918   00044C                     l1365:
  4919                           
  4920                           ; BSR set to: 1
  4921   00044C  C060  F060         	movff	powf@x,?_powf
  4922   000450  C061  F061         	movff	powf@x+1,?_powf+1
  4923   000454  C062  F062         	movff	powf@x+2,?_powf+2
  4924   000458  C063  F063         	movff	powf@x+3,?_powf+3
  4925   00045C  EF61  F012         	goto	l1340
  4926   000460                     l7949:
  4927                           
  4928                           ; BSR set to: 1
  4929   000460  0E40               	movlw	64
  4930   000462  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4931   000464  1184               	iorwf	powf@hy& (0+255),w,b
  4932   000466  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4933   000468  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4934   00046A  A4D8               	btfss	status,2,c
  4935   00046C  EF3A  F002         	goto	u10201
  4936   000470  EF3C  F002         	goto	u10200
  4937   000474                     u10201:
  4938   000474  EF58  F002         	goto	l7955
  4939   000478                     u10200:
  4940   000478                     
  4941                           ; BSR set to: 1
  4942   000478  C060  F01F         	movff	powf@x,___flmul@b
  4943   00047C  C061  F020         	movff	powf@x+1,___flmul@b+1
  4944   000480  C062  F021         	movff	powf@x+2,___flmul@b+2
  4945   000484  C063  F022         	movff	powf@x+3,___flmul@b+3
  4946   000488  C060  F023         	movff	powf@x,___flmul@a
  4947   00048C  C061  F024         	movff	powf@x+1,___flmul@a+1
  4948   000490  C062  F025         	movff	powf@x+2,___flmul@a+2
  4949   000494  C063  F026         	movff	powf@x+3,___flmul@a+3
  4950   000498  ECA2  F01E         	call	___flmul	;wreg free
  4951   00049C  C01F  F060         	movff	?___flmul,?_powf
  4952   0004A0  C020  F061         	movff	?___flmul+1,?_powf+1
  4953   0004A4  C021  F062         	movff	?___flmul+2,?_powf+2
  4954   0004A8  C022  F063         	movff	?___flmul+3,?_powf+3
  4955   0004AC  EF61  F012         	goto	l1340
  4956   0004B0                     l7955:
  4957                           
  4958                           ; BSR set to: 1
  4959   0004B0  0E3F               	movlw	63
  4960   0004B2  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4961   0004B4  1184               	iorwf	powf@hy& (0+255),w,b
  4962   0004B6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4963   0004B8  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4964   0004BA  A4D8               	btfss	status,2,c
  4965   0004BC  EF62  F002         	goto	u10211
  4966   0004C0  EF64  F002         	goto	u10210
  4967   0004C4                     u10211:
  4968   0004C4  EF7F  F002         	goto	l1369
  4969   0004C8                     u10210:
  4970   0004C8                     
  4971                           ; BSR set to: 1
  4972   0004C8  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4973   0004CA  EF69  F002         	goto	u10221
  4974   0004CE  EF6B  F002         	goto	u10220
  4975   0004D2                     u10221:
  4976   0004D2  EF7F  F002         	goto	l1369
  4977   0004D6                     u10220:
  4978   0004D6                     
  4979                           ; BSR set to: 1
  4980   0004D6  C060  F001         	movff	powf@x,sqrtf@x
  4981   0004DA  C061  F002         	movff	powf@x+1,sqrtf@x+1
  4982   0004DE  C062  F003         	movff	powf@x+2,sqrtf@x+2
  4983   0004E2  C063  F004         	movff	powf@x+3,sqrtf@x+3
  4984   0004E6  ECB5  F020         	call	_sqrtf	;wreg free
  4985   0004EA  C001  F060         	movff	?_sqrtf,?_powf
  4986   0004EE  C002  F061         	movff	?_sqrtf+1,?_powf+1
  4987   0004F2  C003  F062         	movff	?_sqrtf+2,?_powf+2
  4988   0004F6  C004  F063         	movff	?_sqrtf+3,?_powf+3
  4989   0004FA  EF61  F012         	goto	l1340
  4990   0004FE                     l1369:
  4991                           
  4992                           ; BSR set to: 1
  4993   0004FE  C1AC  F178         	movff	powf@ix,powf@ax
  4994   000502  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  4995   000506  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  4996   00050A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  4997   00050E                     
  4998                           ; BSR set to: 1
  4999   00050E  0E80               	movlw	128
  5000   000510  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  5001   000512  E10B               	bnz	u10230
  5002   000514  0E7F               	movlw	127
  5003   000516  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  5004   000518  11AC               	iorwf	powf@ix& (0+255),w,b
  5005   00051A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  5006   00051C  B4D8               	btfsc	status,2,c
  5007   00051E  EF93  F002         	goto	u10231
  5008   000522  EF95  F002         	goto	u10230
  5009   000526                     u10231:
  5010   000526  EFAE  F002         	goto	l1373
  5011   00052A                     u10230:
  5012   00052A                     
  5013                           ; BSR set to: 1
  5014   00052A  51AC               	movf	powf@ix& (0+255),w,b
  5015   00052C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  5016   00052E  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  5017   000530  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  5018   000532  B4D8               	btfsc	status,2,c
  5019   000534  EF9E  F002         	goto	u10241
  5020   000538  EFA0  F002         	goto	u10240
  5021   00053C                     u10241:
  5022   00053C  EFAE  F002         	goto	l1373
  5023   000540                     u10240:
  5024   000540                     
  5025                           ; BSR set to: 1
  5026   000540  0E80               	movlw	128
  5027   000542  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  5028   000544  E109               	bnz	u10251
  5029   000546  0E3F               	movlw	63
  5030   000548  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  5031   00054A  11AC               	iorwf	powf@ix& (0+255),w,b
  5032   00054C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  5033   00054E  A4D8               	btfss	status,2,c
  5034   000550  EFAC  F002         	goto	u10251
  5035   000554  EFAE  F002         	goto	u10250
  5036   000558                     u10251:
  5037   000558  EF48  F003         	goto	l7987
  5038   00055C                     u10250:
  5039   00055C                     l1373:
  5040                           
  5041                           ; BSR set to: 1
  5042   00055C  C178  F1B4         	movff	powf@ax,powf@z
  5043   000560  C179  F1B5         	movff	powf@ax+1,powf@z+1
  5044   000564  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  5045   000568  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  5046   00056C                     
  5047                           ; BSR set to: 1
  5048   00056C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  5049   00056E  EFBD  F002         	goto	u10260
  5050   000572  EFBB  F002         	goto	u10261
  5051   000576                     u10261:
  5052   000576  EFD7  F002         	goto	l7973
  5053   00057A                     u10260:
  5054   00057A                     
  5055                           ; BSR set to: 1
  5056   00057A  0E00               	movlw	0
  5057   00057C  6E40               	movwf	___fldiv@b^0,c
  5058   00057E  0E00               	movlw	0
  5059   000580  6E41               	movwf	(___fldiv@b+1)^0,c
  5060   000582  0E80               	movlw	128
  5061   000584  6E42               	movwf	(___fldiv@b+2)^0,c
  5062   000586  0E3F               	movlw	63
  5063   000588  6E43               	movwf	(___fldiv@b+3)^0,c
  5064   00058A  C1B4  F044         	movff	powf@z,___fldiv@a
  5065   00058E  C1B5  F045         	movff	powf@z+1,___fldiv@a+1
  5066   000592  C1B6  F046         	movff	powf@z+2,___fldiv@a+2
  5067   000596  C1B7  F047         	movff	powf@z+3,___fldiv@a+3
  5068   00059A  ECA4  F022         	call	___fldiv	;wreg free
  5069   00059E  C040  F1B4         	movff	?___fldiv,powf@z
  5070   0005A2  C041  F1B5         	movff	?___fldiv+1,powf@z+1
  5071   0005A6  C042  F1B6         	movff	?___fldiv+2,powf@z+2
  5072   0005AA  C043  F1B7         	movff	?___fldiv+3,powf@z+3
  5073   0005AE                     l7973:
  5074   0005AE  0101               	movlb	1	; () banked
  5075   0005B0  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  5076   0005B2  EFDF  F002         	goto	u10270
  5077   0005B6  EFDD  F002         	goto	u10271
  5078   0005BA                     u10271:
  5079   0005BA  EF3E  F003         	goto	l7983
  5080   0005BE                     u10270:
  5081   0005BE                     
  5082                           ; BSR set to: 1
  5083   0005BE  0E00               	movlw	0
  5084   0005C0  25AC               	addwf	powf@ix& (0+255),w,b
  5085   0005C2  0100               	movlb	0	; () banked
  5086   0005C4  6F68               	movwf	??_powf& (0+255),b
  5087   0005C6  0E00               	movlw	0
  5088   0005C8  0101               	movlb	1	; () banked
  5089   0005CA  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  5090   0005CC  0100               	movlb	0	; () banked
  5091   0005CE  6F69               	movwf	(??_powf+1)& (0+255),b
  5092   0005D0  0E80               	movlw	128
  5093   0005D2  0101               	movlb	1	; () banked
  5094   0005D4  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  5095   0005D6  0100               	movlb	0	; () banked
  5096   0005D8  6F6A               	movwf	(??_powf+2)& (0+255),b
  5097   0005DA  0EC0               	movlw	192
  5098   0005DC  0101               	movlb	1	; () banked
  5099   0005DE  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  5100   0005E0  0100               	movlb	0	; () banked
  5101   0005E2  6F6B               	movwf	(??_powf+3)& (0+255),b
  5102   0005E4  0101               	movlb	1	; () banked
  5103   0005E6  5154               	movf	powf@yisint& (0+255),w,b
  5104   0005E8  0100               	movlb	0	; () banked
  5105   0005EA  1168               	iorwf	??_powf& (0+255),w,b
  5106   0005EC  6F6C               	movwf	(??_powf+4)& (0+255),b
  5107   0005EE  0101               	movlb	1	; () banked
  5108   0005F0  5155               	movf	(powf@yisint+1)& (0+255),w,b
  5109   0005F2  0100               	movlb	0	; () banked
  5110   0005F4  1169               	iorwf	(??_powf+1)& (0+255),w,b
  5111   0005F6  6F6D               	movwf	(??_powf+5)& (0+255),b
  5112   0005F8  0101               	movlb	1	; () banked
  5113   0005FA  5156               	movf	(powf@yisint+2)& (0+255),w,b
  5114   0005FC  0100               	movlb	0	; () banked
  5115   0005FE  116A               	iorwf	(??_powf+2)& (0+255),w,b
  5116   000600  6F6E               	movwf	(??_powf+6)& (0+255),b
  5117   000602  0101               	movlb	1	; () banked
  5118   000604  5157               	movf	(powf@yisint+3)& (0+255),w,b
  5119   000606  0100               	movlb	0	; () banked
  5120   000608  116B               	iorwf	(??_powf+3)& (0+255),w,b
  5121   00060A  6F6F               	movwf	(??_powf+7)& (0+255),b
  5122   00060C  516C               	movf	(??_powf+4)& (0+255),w,b
  5123   00060E  116D               	iorwf	(??_powf+5)& (0+255),w,b
  5124   000610  116E               	iorwf	(??_powf+6)& (0+255),w,b
  5125   000612  116F               	iorwf	(??_powf+7)& (0+255),w,b
  5126   000614  A4D8               	btfss	status,2,c
  5127   000616  EF0F  F003         	goto	u10281
  5128   00061A  EF11  F003         	goto	u10280
  5129   00061E                     u10281:
  5130   00061E  EF20  F003         	goto	l7979
  5131   000622                     u10280:
  5132   000622                     l7977:
  5133   000622  0E00               	movlw	0
  5134   000624  0101               	movlb	1	; () banked
  5135   000626  6FED               	movwf	(_errno+1)& (0+255),b
  5136   000628  0E21               	movlw	33
  5137   00062A  6FEC               	movwf	_errno& (0+255),b
  5138   00062C  0EFF               	movlw	255
  5139   00062E  6FB4               	movwf	powf@z& (0+255),b
  5140   000630  0EFF               	movlw	255
  5141   000632  6FB5               	movwf	(powf@z+1)& (0+255),b
  5142   000634  0EFF               	movlw	255
  5143   000636  6FB6               	movwf	(powf@z+2)& (0+255),b
  5144   000638  0E7F               	movlw	127
  5145   00063A  6FB7               	movwf	(powf@z+3)& (0+255),b
  5146   00063C  EF3E  F003         	goto	l7983
  5147   000640                     l7979:
  5148                           
  5149                           ; BSR set to: 0
  5150   000640  0101               	movlb	1	; () banked
  5151   000642  0554               	decf	powf@yisint& (0+255),w,b
  5152   000644  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  5153   000646  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  5154   000648  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  5155   00064A  A4D8               	btfss	status,2,c
  5156   00064C  EF2A  F003         	goto	u10291
  5157   000650  EF2C  F003         	goto	u10290
  5158   000654                     u10291:
  5159   000654  EF3E  F003         	goto	l7983
  5160   000658                     u10290:
  5161   000658                     
  5162                           ; BSR set to: 1
  5163   000658  C1B4  F001         	movff	powf@z,___flneg@f1
  5164   00065C  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  5165   000660  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  5166   000664  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  5167   000668  ECA4  F038         	call	___flneg	;wreg free
  5168   00066C  C001  F1B4         	movff	?___flneg,powf@z
  5169   000670  C002  F1B5         	movff	?___flneg+1,powf@z+1
  5170   000674  C003  F1B6         	movff	?___flneg+2,powf@z+2
  5171   000678  C004  F1B7         	movff	?___flneg+3,powf@z+3
  5172   00067C                     l7983:
  5173   00067C  C1B4  F060         	movff	powf@z,?_powf
  5174   000680  C1B5  F061         	movff	powf@z+1,?_powf+1
  5175   000684  C1B6  F062         	movff	powf@z+2,?_powf+2
  5176   000688  C1B7  F063         	movff	powf@z+3,?_powf+3
  5177   00068C  EF61  F012         	goto	l1340
  5178   000690                     l7987:
  5179                           
  5180                           ; BSR set to: 1
  5181   000690  0E00               	movlw	0
  5182   000692  6F64               	movwf	powf@sn& (0+255),b
  5183   000694  0E00               	movlw	0
  5184   000696  6F65               	movwf	(powf@sn+1)& (0+255),b
  5185   000698  0E00               	movlw	0
  5186   00069A  6F66               	movwf	(powf@sn+2)& (0+255),b
  5187   00069C  0E00               	movlw	0
  5188   00069E  6F67               	movwf	(powf@sn+3)& (0+255),b
  5189   0006A0                     
  5190                           ; BSR set to: 1
  5191   0006A0  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  5192   0006A2  EF57  F003         	goto	u10300
  5193   0006A6  EF55  F003         	goto	u10301
  5194   0006AA                     u10301:
  5195   0006AA  EF77  F003         	goto	l8003
  5196   0006AE                     u10300:
  5197   0006AE                     
  5198                           ; BSR set to: 1
  5199   0006AE  5154               	movf	powf@yisint& (0+255),w,b
  5200   0006B0  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  5201   0006B2  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  5202   0006B4  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  5203   0006B6  A4D8               	btfss	status,2,c
  5204   0006B8  EF60  F003         	goto	u10311
  5205   0006BC  EF62  F003         	goto	u10310
  5206   0006C0                     u10311:
  5207   0006C0  EF64  F003         	goto	l7999
  5208   0006C4                     u10310:
  5209   0006C4  EF11  F003         	goto	l7977
  5210   0006C8                     l7999:
  5211                           
  5212                           ; BSR set to: 1
  5213   0006C8  0554               	decf	powf@yisint& (0+255),w,b
  5214   0006CA  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  5215   0006CC  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  5216   0006CE  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  5217   0006D0  A4D8               	btfss	status,2,c
  5218   0006D2  EF6D  F003         	goto	u10321
  5219   0006D6  EF6F  F003         	goto	u10320
  5220   0006DA                     u10321:
  5221   0006DA  EF77  F003         	goto	l8003
  5222   0006DE                     u10320:
  5223   0006DE                     
  5224                           ; BSR set to: 1
  5225   0006DE  0E00               	movlw	0
  5226   0006E0  6F64               	movwf	powf@sn& (0+255),b
  5227   0006E2  0E00               	movlw	0
  5228   0006E4  6F65               	movwf	(powf@sn+1)& (0+255),b
  5229   0006E6  0E00               	movlw	0
  5230   0006E8  6F66               	movwf	(powf@sn+2)& (0+255),b
  5231   0006EA  0E80               	movlw	128
  5232   0006EC  6F67               	movwf	(powf@sn+3)& (0+255),b
  5233   0006EE                     l8003:
  5234                           
  5235                           ; BSR set to: 1
  5236   0006EE  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  5237   0006F0  EF86  F003         	goto	u10331
  5238   0006F4  0594               	decf	powf@iy& (0+255),w,b
  5239   0006F6  0E00               	movlw	0
  5240   0006F8  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  5241   0006FA  0E00               	movlw	0
  5242   0006FC  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  5243   0006FE  0E4D               	movlw	77
  5244   000700  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  5245   000702  A0D8               	btfss	status,0,c
  5246   000704  EF86  F003         	goto	u10331
  5247   000708  EF88  F003         	goto	u10330
  5248   00070C                     u10331:
  5249   00070C  EF4C  F005         	goto	l8059
  5250   000710                     u10330:
  5251   000710                     
  5252                           ; BSR set to: 1
  5253   000710  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  5254   000712  EF9A  F003         	goto	u10340
  5255   000716  0EF8               	movlw	248
  5256   000718  5DAC               	subwf	powf@ix& (0+255),w,b
  5257   00071A  0EFF               	movlw	255
  5258   00071C  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  5259   00071E  0E7F               	movlw	127
  5260   000720  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  5261   000722  0E3F               	movlw	63
  5262   000724  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  5263   000726  B0D8               	btfsc	status,0,c
  5264   000728  EF98  F003         	goto	u10341
  5265   00072C  EF9A  F003         	goto	u10340
  5266   000730                     u10341:
  5267   000730  EFBB  F003         	goto	l8021
  5268   000734                     u10340:
  5269   000734                     
  5270                           ; BSR set to: 1
  5271   000734  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  5272   000736  EFA1  F003         	goto	u10350
  5273   00073A  EF9F  F003         	goto	u10351
  5274   00073E                     u10351:
  5275   00073E  EFB0  F003         	goto	l8017
  5276   000742                     u10350:
  5277   000742                     l8009:
  5278   000742  0E00               	movlw	0
  5279   000744  0101               	movlb	1	; () banked
  5280   000746  1164               	iorwf	powf@sn& (0+255),w,b
  5281   000748  6FB4               	movwf	powf@z& (0+255),b
  5282   00074A  0E00               	movlw	0
  5283   00074C  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  5284   00074E  6FB5               	movwf	(powf@z+1)& (0+255),b
  5285   000750  0E80               	movlw	128
  5286   000752  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  5287   000754  6FB6               	movwf	(powf@z+2)& (0+255),b
  5288   000756  0E7F               	movlw	127
  5289   000758  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  5290   00075A  6FB7               	movwf	(powf@z+3)& (0+255),b
  5291   00075C  EF3E  F003         	goto	l7983
  5292   000760                     l8017:
  5293                           
  5294                           ; BSR set to: 1
  5295   000760  0E00               	movlw	0
  5296   000762  0100               	movlb	0	; () banked
  5297   000764  6F60               	movwf	?_powf& (0+255),b
  5298   000766  0E00               	movlw	0
  5299   000768  6F61               	movwf	(?_powf+1)& (0+255),b
  5300   00076A  0E00               	movlw	0
  5301   00076C  6F62               	movwf	(?_powf+2)& (0+255),b
  5302   00076E  0E00               	movlw	0
  5303   000770  6F63               	movwf	(?_powf+3)& (0+255),b
  5304   000772  EF61  F012         	goto	l1340
  5305   000776                     l8021:
  5306                           
  5307                           ; BSR set to: 1
  5308   000776  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  5309   000778  EFCB  F003         	goto	u10361
  5310   00077C  0E08               	movlw	8
  5311   00077E  5DAC               	subwf	powf@ix& (0+255),w,b
  5312   000780  0E00               	movlw	0
  5313   000782  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  5314   000784  0E80               	movlw	128
  5315   000786  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  5316   000788  0E3F               	movlw	63
  5317   00078A  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  5318   00078C  A0D8               	btfss	status,0,c
  5319   00078E  EFCB  F003         	goto	u10361
  5320   000792  EFCD  F003         	goto	u10360
  5321   000796                     u10361:
  5322   000796  EFE9  F003         	goto	l8037
  5323   00079A                     u10360:
  5324   00079A                     
  5325                           ; BSR set to: 1
  5326   00079A  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  5327   00079C  EFDA  F003         	goto	u10371
  5328   0007A0  5187               	movf	(powf@hy+3)& (0+255),w,b
  5329   0007A2  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  5330   0007A4  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  5331   0007A6  E108               	bnz	u10370
  5332   0007A8  0584               	decf	powf@hy& (0+255),w,b
  5333   0007AA  A0D8               	btfss	status,0,c
  5334   0007AC  EFDA  F003         	goto	u10371
  5335   0007B0  EFDC  F003         	goto	u10370
  5336   0007B4                     u10371:
  5337   0007B4  EFDE  F003         	goto	l8033
  5338   0007B8                     u10370:
  5339   0007B8  EFA1  F003         	goto	l8009
  5340   0007BC                     l8033:
  5341                           
  5342                           ; BSR set to: 1
  5343   0007BC  0E00               	movlw	0
  5344   0007BE  0100               	movlb	0	; () banked
  5345   0007C0  6F60               	movwf	?_powf& (0+255),b
  5346   0007C2  0E00               	movlw	0
  5347   0007C4  6F61               	movwf	(?_powf+1)& (0+255),b
  5348   0007C6  0E00               	movlw	0
  5349   0007C8  6F62               	movwf	(?_powf+2)& (0+255),b
  5350   0007CA  0E00               	movlw	0
  5351   0007CC  6F63               	movwf	(?_powf+3)& (0+255),b
  5352   0007CE  EF61  F012         	goto	l1340
  5353   0007D2                     l8037:
  5354                           
  5355                           ; BSR set to: 1
  5356   0007D2  C178  F00F         	movff	powf@ax,___fladd@b
  5357   0007D6  C179  F010         	movff	powf@ax+1,___fladd@b+1
  5358   0007DA  C17A  F011         	movff	powf@ax+2,___fladd@b+2
  5359   0007DE  C17B  F012         	movff	powf@ax+3,___fladd@b+3
  5360   0007E2  0E00               	movlw	0
  5361   0007E4  6E13               	movwf	___fladd@a^0,c
  5362   0007E6  0E00               	movlw	0
  5363   0007E8  6E14               	movwf	(___fladd@a+1)^0,c
  5364   0007EA  0E80               	movlw	128
  5365   0007EC  6E15               	movwf	(___fladd@a+2)^0,c
  5366   0007EE  0EBF               	movlw	191
  5367   0007F0  6E16               	movwf	(___fladd@a+3)^0,c
  5368   0007F2  EC47  F01C         	call	___fladd	;wreg free
  5369   0007F6  C00F  F1B0         	movff	?___fladd,powf@t
  5370   0007FA  C010  F1B1         	movff	?___fladd+1,powf@t+1
  5371   0007FE  C011  F1B2         	movff	?___fladd+2,powf@t+2
  5372   000802  C012  F1B3         	movff	?___fladd+3,powf@t+3
  5373   000806  0E00               	movlw	0
  5374   000808  6E23               	movwf	___flmul@a^0,c
  5375   00080A  0E00               	movlw	0
  5376   00080C  6E24               	movwf	(___flmul@a+1)^0,c
  5377   00080E  0E80               	movlw	128
  5378   000810  6E25               	movwf	(___flmul@a+2)^0,c
  5379   000812  0E3E               	movlw	62
  5380   000814  6E26               	movwf	(___flmul@a+3)^0,c
  5381   000816  C1B0  F01F         	movff	powf@t,___flmul@b
  5382   00081A  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  5383   00081E  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  5384   000822  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  5385   000826  ECA2  F01E         	call	___flmul	;wreg free
  5386   00082A  C01F  F03C         	movff	?___flmul,___flsub@a
  5387   00082E  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  5388   000832  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  5389   000836  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  5390   00083A  0EAB               	movlw	171
  5391   00083C  6E38               	movwf	___flsub@b^0,c
  5392   00083E  0EAA               	movlw	170
  5393   000840  6E39               	movwf	(___flsub@b+1)^0,c
  5394   000842  0EAA               	movlw	170
  5395   000844  6E3A               	movwf	(___flsub@b+2)^0,c
  5396   000846  0E3E               	movlw	62
  5397   000848  6E3B               	movwf	(___flsub@b+3)^0,c
  5398   00084A  EC02  F038         	call	___flsub	;wreg free
  5399   00084E  C038  F148         	movff	?___flsub,_powf$1892
  5400   000852  C039  F149         	movff	?___flsub+1,_powf$1892+1
  5401   000856  C03A  F14A         	movff	?___flsub+2,_powf$1892+2
  5402   00085A  C03B  F14B         	movff	?___flsub+3,_powf$1892+3
  5403   00085E  C1B0  F023         	movff	powf@t,___flmul@a
  5404   000862  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  5405   000866  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  5406   00086A  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  5407   00086E  C1B0  F01F         	movff	powf@t,___flmul@b
  5408   000872  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  5409   000876  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  5410   00087A  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  5411   00087E  ECA2  F01E         	call	___flmul	;wreg free
  5412   000882  C01F  F158         	movff	?___flmul,_powf$1893
  5413   000886  C020  F159         	movff	?___flmul+1,_powf$1893+1
  5414   00088A  C021  F15A         	movff	?___flmul+2,_powf$1893+2
  5415   00088E  C022  F15B         	movff	?___flmul+3,_powf$1893+3
  5416   000892  C1B0  F023         	movff	powf@t,___flmul@a
  5417   000896  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  5418   00089A  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  5419   00089E  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  5420   0008A2  C148  F01F         	movff	_powf$1892,___flmul@b
  5421   0008A6  C149  F020         	movff	_powf$1892+1,___flmul@b+1
  5422   0008AA  C14A  F021         	movff	_powf$1892+2,___flmul@b+2
  5423   0008AE  C14B  F022         	movff	_powf$1892+3,___flmul@b+3
  5424   0008B2  ECA2  F01E         	call	___flmul	;wreg free
  5425   0008B6  C01F  F03C         	movff	?___flmul,___flsub@a
  5426   0008BA  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  5427   0008BE  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  5428   0008C2  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  5429   0008C6  0E00               	movlw	0
  5430   0008C8  6E38               	movwf	___flsub@b^0,c
  5431   0008CA  0E00               	movlw	0
  5432   0008CC  6E39               	movwf	(___flsub@b+1)^0,c
  5433   0008CE  0E00               	movlw	0
  5434   0008D0  6E3A               	movwf	(___flsub@b+2)^0,c
  5435   0008D2  0E3F               	movlw	63
  5436   0008D4  6E3B               	movwf	(___flsub@b+3)^0,c
  5437   0008D6  EC02  F038         	call	___flsub	;wreg free
  5438   0008DA  C038  F14C         	movff	?___flsub,_powf$1894
  5439   0008DE  C039  F14D         	movff	?___flsub+1,_powf$1894+1
  5440   0008E2  C03A  F14E         	movff	?___flsub+2,_powf$1894+2
  5441   0008E6  C03B  F14F         	movff	?___flsub+3,_powf$1894+3
  5442   0008EA  C158  F01F         	movff	_powf$1893,___flmul@b
  5443   0008EE  C159  F020         	movff	_powf$1893+1,___flmul@b+1
  5444   0008F2  C15A  F021         	movff	_powf$1893+2,___flmul@b+2
  5445   0008F6  C15B  F022         	movff	_powf$1893+3,___flmul@b+3
  5446   0008FA  C14C  F023         	movff	_powf$1894,___flmul@a
  5447   0008FE  C14D  F024         	movff	_powf$1894+1,___flmul@a+1
  5448   000902  C14E  F025         	movff	_powf$1894+2,___flmul@a+2
  5449   000906  C14F  F026         	movff	_powf$1894+3,___flmul@a+3
  5450   00090A  ECA2  F01E         	call	___flmul	;wreg free
  5451   00090E  C01F  F144         	movff	?___flmul,powf@w
  5452   000912  C020  F145         	movff	?___flmul+1,powf@w+1
  5453   000916  C021  F146         	movff	?___flmul+2,powf@w+2
  5454   00091A  C022  F147         	movff	?___flmul+3,powf@w+3
  5455   00091E  C1B0  F01F         	movff	powf@t,___flmul@b
  5456   000922  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  5457   000926  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  5458   00092A  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  5459   00092E  0E00               	movlw	0
  5460   000930  6E23               	movwf	___flmul@a^0,c
  5461   000932  0EAA               	movlw	170
  5462   000934  6E24               	movwf	(___flmul@a+1)^0,c
  5463   000936  0EB8               	movlw	184
  5464   000938  6E25               	movwf	(___flmul@a+2)^0,c
  5465   00093A  0E3F               	movlw	63
  5466   00093C  6E26               	movwf	(___flmul@a+3)^0,c
  5467   00093E  ECA2  F01E         	call	___flmul	;wreg free
  5468   000942  C01F  F17C         	movff	?___flmul,powf@u
  5469   000946  C020  F17D         	movff	?___flmul+1,powf@u+1
  5470   00094A  C021  F17E         	movff	?___flmul+2,powf@u+2
  5471   00094E  C022  F17F         	movff	?___flmul+3,powf@u+3
  5472   000952  0E70               	movlw	112
  5473   000954  6E23               	movwf	___flmul@a^0,c
  5474   000956  0EA5               	movlw	165
  5475   000958  6E24               	movwf	(___flmul@a+1)^0,c
  5476   00095A  0EEC               	movlw	236
  5477   00095C  6E25               	movwf	(___flmul@a+2)^0,c
  5478   00095E  0E36               	movlw	54
  5479   000960  6E26               	movwf	(___flmul@a+3)^0,c
  5480   000962  C1B0  F01F         	movff	powf@t,___flmul@b
  5481   000966  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  5482   00096A  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  5483   00096E  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  5484   000972  ECA2  F01E         	call	___flmul	;wreg free
  5485   000976  C01F  F038         	movff	?___flmul,___flsub@b
  5486   00097A  C020  F039         	movff	?___flmul+1,___flsub@b+1
  5487   00097E  C021  F03A         	movff	?___flmul+2,___flsub@b+2
  5488   000982  C022  F03B         	movff	?___flmul+3,___flsub@b+3
  5489   000986  0E3B               	movlw	59
  5490   000988  6E23               	movwf	___flmul@a^0,c
  5491   00098A  0EAA               	movlw	170
  5492   00098C  6E24               	movwf	(___flmul@a+1)^0,c
  5493   00098E  0EB8               	movlw	184
  5494   000990  6E25               	movwf	(___flmul@a+2)^0,c
  5495   000992  0E3F               	movlw	63
  5496   000994  6E26               	movwf	(___flmul@a+3)^0,c
  5497   000996  C144  F01F         	movff	powf@w,___flmul@b
  5498   00099A  C145  F020         	movff	powf@w+1,___flmul@b+1
  5499   00099E  C146  F021         	movff	powf@w+2,___flmul@b+2
  5500   0009A2  C147  F022         	movff	powf@w+3,___flmul@b+3
  5501   0009A6  ECA2  F01E         	call	___flmul	;wreg free
  5502   0009AA  C01F  F03C         	movff	?___flmul,___flsub@a
  5503   0009AE  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  5504   0009B2  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  5505   0009B6  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  5506   0009BA  EC02  F038         	call	___flsub	;wreg free
  5507   0009BE  C038  F180         	movff	?___flsub,powf@v
  5508   0009C2  C039  F181         	movff	?___flsub+1,powf@v+1
  5509   0009C6  C03A  F182         	movff	?___flsub+2,powf@v+2
  5510   0009CA  C03B  F183         	movff	?___flsub+3,powf@v+3
  5511   0009CE  C17C  F00F         	movff	powf@u,___fladd@b
  5512   0009D2  C17D  F010         	movff	powf@u+1,___fladd@b+1
  5513   0009D6  C17E  F011         	movff	powf@u+2,___fladd@b+2
  5514   0009DA  C17F  F012         	movff	powf@u+3,___fladd@b+3
  5515   0009DE  C180  F013         	movff	powf@v,___fladd@a
  5516   0009E2  C181  F014         	movff	powf@v+1,___fladd@a+1
  5517   0009E6  C182  F015         	movff	powf@v+2,___fladd@a+2
  5518   0009EA  C183  F016         	movff	powf@v+3,___fladd@a+3
  5519   0009EE  EC47  F01C         	call	___fladd	;wreg free
  5520   0009F2  C00F  F18C         	movff	?___fladd,powf@t1
  5521   0009F6  C010  F18D         	movff	?___fladd+1,powf@t1+1
  5522   0009FA  C011  F18E         	movff	?___fladd+2,powf@t1+2
  5523   0009FE  C012  F18F         	movff	?___fladd+3,powf@t1+3
  5524   000A02  C18C  F198         	movff	powf@t1,powf@is
  5525   000A06  C18D  F199         	movff	powf@t1+1,powf@is+1
  5526   000A0A  C18E  F19A         	movff	powf@t1+2,powf@is+2
  5527   000A0E  C18F  F19B         	movff	powf@t1+3,powf@is+3
  5528   000A12  0E00               	movlw	0
  5529   000A14  0101               	movlb	1	; () banked
  5530   000A16  1598               	andwf	powf@is& (0+255),w,b
  5531   000A18  6F8C               	movwf	powf@t1& (0+255),b
  5532   000A1A  0EF0               	movlw	240
  5533   000A1C  1599               	andwf	(powf@is+1)& (0+255),w,b
  5534   000A1E  6F8D               	movwf	(powf@t1+1)& (0+255),b
  5535   000A20  0EFF               	movlw	255
  5536   000A22  159A               	andwf	(powf@is+2)& (0+255),w,b
  5537   000A24  6F8E               	movwf	(powf@t1+2)& (0+255),b
  5538   000A26  0EFF               	movlw	255
  5539   000A28  159B               	andwf	(powf@is+3)& (0+255),w,b
  5540   000A2A  6F8F               	movwf	(powf@t1+3)& (0+255),b
  5541   000A2C                     
  5542                           ; BSR set to: 1
  5543   000A2C  C17C  F03C         	movff	powf@u,___flsub@a
  5544   000A30  C17D  F03D         	movff	powf@u+1,___flsub@a+1
  5545   000A34  C17E  F03E         	movff	powf@u+2,___flsub@a+2
  5546   000A38  C17F  F03F         	movff	powf@u+3,___flsub@a+3
  5547   000A3C  C18C  F038         	movff	powf@t1,___flsub@b
  5548   000A40  C18D  F039         	movff	powf@t1+1,___flsub@b+1
  5549   000A44  C18E  F03A         	movff	powf@t1+2,___flsub@b+2
  5550   000A48  C18F  F03B         	movff	powf@t1+3,___flsub@b+3
  5551   000A4C  EC02  F038         	call	___flsub	;wreg free
  5552   000A50  C038  F19C         	movff	?___flsub,_powf$1895
  5553   000A54  C039  F19D         	movff	?___flsub+1,_powf$1895+1
  5554   000A58  C03A  F19E         	movff	?___flsub+2,_powf$1895+2
  5555   000A5C  C03B  F19F         	movff	?___flsub+3,_powf$1895+3
  5556   000A60  C180  F038         	movff	powf@v,___flsub@b
  5557   000A64  C181  F039         	movff	powf@v+1,___flsub@b+1
  5558   000A68  C182  F03A         	movff	powf@v+2,___flsub@b+2
  5559   000A6C  C183  F03B         	movff	powf@v+3,___flsub@b+3
  5560   000A70  C19C  F03C         	movff	_powf$1895,___flsub@a
  5561   000A74  C19D  F03D         	movff	_powf$1895+1,___flsub@a+1
  5562   000A78  C19E  F03E         	movff	_powf$1895+2,___flsub@a+2
  5563   000A7C  C19F  F03F         	movff	_powf$1895+3,___flsub@a+3
  5564   000A80  EC02  F038         	call	___flsub	;wreg free
  5565   000A84  C038  F11C         	movff	?___flsub,powf@t2
  5566   000A88  C039  F11D         	movff	?___flsub+1,powf@t2+1
  5567   000A8C  C03A  F11E         	movff	?___flsub+2,powf@t2+2
  5568   000A90  C03B  F11F         	movff	?___flsub+3,powf@t2+3
  5569   000A94  EF5A  F00C         	goto	l8187
  5570   000A98                     l8059:
  5571                           
  5572                           ; BSR set to: 1
  5573   000A98  0E00               	movlw	0
  5574   000A9A  6F88               	movwf	powf@n& (0+255),b
  5575   000A9C  0E00               	movlw	0
  5576   000A9E  6F89               	movwf	(powf@n+1)& (0+255),b
  5577   000AA0  0E00               	movlw	0
  5578   000AA2  6F8A               	movwf	(powf@n+2)& (0+255),b
  5579   000AA4  0E00               	movlw	0
  5580   000AA6  6F8B               	movwf	(powf@n+3)& (0+255),b
  5581   000AA8                     
  5582                           ; BSR set to: 1
  5583   000AA8  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  5584   000AAA  EF62  F005         	goto	u10380
  5585   000AAE  51AF               	movf	(powf@ix+3)& (0+255),w,b
  5586   000AB0  E107               	bnz	u10381
  5587   000AB2  0E80               	movlw	128
  5588   000AB4  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  5589   000AB6  B0D8               	btfsc	status,0,c
  5590   000AB8  EF60  F005         	goto	u10381
  5591   000ABC  EF62  F005         	goto	u10380
  5592   000AC0                     u10381:
  5593   000AC0  EF8D  F005         	goto	l8069
  5594   000AC4                     u10380:
  5595   000AC4                     
  5596                           ; BSR set to: 1
  5597   000AC4  C178  F01F         	movff	powf@ax,___flmul@b
  5598   000AC8  C179  F020         	movff	powf@ax+1,___flmul@b+1
  5599   000ACC  C17A  F021         	movff	powf@ax+2,___flmul@b+2
  5600   000AD0  C17B  F022         	movff	powf@ax+3,___flmul@b+3
  5601   000AD4  0E00               	movlw	0
  5602   000AD6  6E23               	movwf	___flmul@a^0,c
  5603   000AD8  0E00               	movlw	0
  5604   000ADA  6E24               	movwf	(___flmul@a+1)^0,c
  5605   000ADC  0E80               	movlw	128
  5606   000ADE  6E25               	movwf	(___flmul@a+2)^0,c
  5607   000AE0  0E4B               	movlw	75
  5608   000AE2  6E26               	movwf	(___flmul@a+3)^0,c
  5609   000AE4  ECA2  F01E         	call	___flmul	;wreg free
  5610   000AE8  C01F  F178         	movff	?___flmul,powf@ax
  5611   000AEC  C020  F179         	movff	?___flmul+1,powf@ax+1
  5612   000AF0  C021  F17A         	movff	?___flmul+2,powf@ax+2
  5613   000AF4  C022  F17B         	movff	?___flmul+3,powf@ax+3
  5614   000AF8  0EE8               	movlw	232
  5615   000AFA  0101               	movlb	1	; () banked
  5616   000AFC  2788               	addwf	powf@n& (0+255),f,b
  5617   000AFE  0EFF               	movlw	255
  5618   000B00  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5619   000B02  0EFF               	movlw	255
  5620   000B04  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5621   000B06  0EFF               	movlw	255
  5622   000B08  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5623   000B0A                     
  5624                           ; BSR set to: 1
  5625   000B0A  C178  F1AC         	movff	powf@ax,powf@ix
  5626   000B0E  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  5627   000B12  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  5628   000B16  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  5629   000B1A                     l8069:
  5630                           
  5631                           ; BSR set to: 1
  5632   000B1A  0E17               	movlw	23
  5633   000B1C  0100               	movlb	0	; () banked
  5634   000B1E  6F68               	movwf	??_powf& (0+255),b
  5635   000B20  C1AC  F069         	movff	powf@ix,??_powf+1
  5636   000B24  C1AD  F06A         	movff	powf@ix+1,??_powf+2
  5637   000B28  C1AE  F06B         	movff	powf@ix+2,??_powf+3
  5638   000B2C  C1AF  F06C         	movff	powf@ix+3,??_powf+4
  5639   000B30                     u10395:
  5640   000B30  6768               	tstfsz	??_powf& (0+255),b
  5641   000B32  EF9D  F005         	goto	u10396
  5642   000B36  EFA5  F005         	goto	u10397
  5643   000B3A                     u10396:
  5644   000B3A  356C               	rlcf	(??_powf+4)& (0+255),w,b
  5645   000B3C  336C               	rrcf	(??_powf+4)& (0+255),f,b
  5646   000B3E  336B               	rrcf	(??_powf+3)& (0+255),f,b
  5647   000B40  336A               	rrcf	(??_powf+2)& (0+255),f,b
  5648   000B42  3369               	rrcf	(??_powf+1)& (0+255),f,b
  5649   000B44  2F68               	decfsz	??_powf& (0+255),f,b
  5650   000B46  EF98  F005         	goto	u10395
  5651   000B4A                     u10397:
  5652   000B4A  0E81               	movlw	129
  5653   000B4C  0100               	movlb	0	; () banked
  5654   000B4E  2569               	addwf	(??_powf+1)& (0+255),w,b
  5655   000B50  6F6D               	movwf	(??_powf+5)& (0+255),b
  5656   000B52  0EFF               	movlw	255
  5657   000B54  216A               	addwfc	(??_powf+2)& (0+255),w,b
  5658   000B56  6F6E               	movwf	(??_powf+6)& (0+255),b
  5659   000B58  0EFF               	movlw	255
  5660   000B5A  216B               	addwfc	(??_powf+3)& (0+255),w,b
  5661   000B5C  6F6F               	movwf	(??_powf+7)& (0+255),b
  5662   000B5E  0EFF               	movlw	255
  5663   000B60  216C               	addwfc	(??_powf+4)& (0+255),w,b
  5664   000B62  6F70               	movwf	(??_powf+8)& (0+255),b
  5665   000B64  516D               	movf	(??_powf+5)& (0+255),w,b
  5666   000B66  0101               	movlb	1	; () banked
  5667   000B68  2788               	addwf	powf@n& (0+255),f,b
  5668   000B6A  0100               	movlb	0	; () banked
  5669   000B6C  516E               	movf	(??_powf+6)& (0+255),w,b
  5670   000B6E  0101               	movlb	1	; () banked
  5671   000B70  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5672   000B72  0100               	movlb	0	; () banked
  5673   000B74  516F               	movf	(??_powf+7)& (0+255),w,b
  5674   000B76  0101               	movlb	1	; () banked
  5675   000B78  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5676   000B7A  0100               	movlb	0	; () banked
  5677   000B7C  5170               	movf	(??_powf+8)& (0+255),w,b
  5678   000B7E  0101               	movlb	1	; () banked
  5679   000B80  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5680   000B82                     
  5681                           ; BSR set to: 1
  5682   000B82  0EFF               	movlw	255
  5683   000B84  15AC               	andwf	powf@ix& (0+255),w,b
  5684   000B86  6FA8               	movwf	powf@j& (0+255),b
  5685   000B88  0EFF               	movlw	255
  5686   000B8A  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  5687   000B8C  6FA9               	movwf	(powf@j+1)& (0+255),b
  5688   000B8E  0E7F               	movlw	127
  5689   000B90  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  5690   000B92  6FAA               	movwf	(powf@j+2)& (0+255),b
  5691   000B94  0E00               	movlw	0
  5692   000B96  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  5693   000B98  6FAB               	movwf	(powf@j+3)& (0+255),b
  5694   000B9A                     
  5695                           ; BSR set to: 1
  5696   000B9A  0E00               	movlw	0
  5697   000B9C  6FA4               	movwf	powf@k& (0+255),b
  5698   000B9E  0E00               	movlw	0
  5699   000BA0  6FA5               	movwf	(powf@k+1)& (0+255),b
  5700   000BA2  0E00               	movlw	0
  5701   000BA4  6FA6               	movwf	(powf@k+2)& (0+255),b
  5702   000BA6  0E00               	movlw	0
  5703   000BA8  6FA7               	movwf	(powf@k+3)& (0+255),b
  5704   000BAA                     
  5705                           ; BSR set to: 1
  5706   000BAA  0E00               	movlw	0
  5707   000BAC  11A8               	iorwf	powf@j& (0+255),w,b
  5708   000BAE  6FAC               	movwf	powf@ix& (0+255),b
  5709   000BB0  0E00               	movlw	0
  5710   000BB2  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  5711   000BB4  6FAD               	movwf	(powf@ix+1)& (0+255),b
  5712   000BB6  0E80               	movlw	128
  5713   000BB8  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  5714   000BBA  6FAE               	movwf	(powf@ix+2)& (0+255),b
  5715   000BBC  0E3F               	movlw	63
  5716   000BBE  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  5717   000BC0  6FAF               	movwf	(powf@ix+3)& (0+255),b
  5718   000BC2                     
  5719                           ; BSR set to: 1
  5720   000BC2  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5721   000BC4  EFF3  F005         	goto	u10400
  5722   000BC8  51AB               	movf	(powf@j+3)& (0+255),w,b
  5723   000BCA  E10B               	bnz	u10401
  5724   000BCC  0E72               	movlw	114
  5725   000BCE  5DA8               	subwf	powf@j& (0+255),w,b
  5726   000BD0  0EC4               	movlw	196
  5727   000BD2  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5728   000BD4  0E1C               	movlw	28
  5729   000BD6  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5730   000BD8  B0D8               	btfsc	status,0,c
  5731   000BDA  EFF1  F005         	goto	u10401
  5732   000BDE  EFF3  F005         	goto	u10400
  5733   000BE2                     u10401:
  5734   000BE2  EFF5  F005         	goto	l8081
  5735   000BE6                     u10400:
  5736   000BE6  EF1F  F006         	goto	l8087
  5737   000BEA                     l8081:
  5738                           
  5739                           ; BSR set to: 1
  5740   000BEA  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5741   000BEC  EF07  F006         	goto	u10410
  5742   000BF0  51AB               	movf	(powf@j+3)& (0+255),w,b
  5743   000BF2  E10B               	bnz	u10411
  5744   000BF4  0ED7               	movlw	215
  5745   000BF6  5DA8               	subwf	powf@j& (0+255),w,b
  5746   000BF8  0EB3               	movlw	179
  5747   000BFA  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5748   000BFC  0E5D               	movlw	93
  5749   000BFE  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5750   000C00  B0D8               	btfsc	status,0,c
  5751   000C02  EF05  F006         	goto	u10411
  5752   000C06  EF07  F006         	goto	u10410
  5753   000C0A                     u10411:
  5754   000C0A  EF11  F006         	goto	l8085
  5755   000C0E                     u10410:
  5756   000C0E                     
  5757                           ; BSR set to: 1
  5758   000C0E  0E01               	movlw	1
  5759   000C10  6FA4               	movwf	powf@k& (0+255),b
  5760   000C12  0E00               	movlw	0
  5761   000C14  6FA5               	movwf	(powf@k+1)& (0+255),b
  5762   000C16  0E00               	movlw	0
  5763   000C18  6FA6               	movwf	(powf@k+2)& (0+255),b
  5764   000C1A  0E00               	movlw	0
  5765   000C1C  6FA7               	movwf	(powf@k+3)& (0+255),b
  5766   000C1E  EF1F  F006         	goto	l8087
  5767   000C22                     l8085:
  5768                           
  5769                           ; BSR set to: 1
  5770   000C22  0E01               	movlw	1
  5771   000C24  2788               	addwf	powf@n& (0+255),f,b
  5772   000C26  0E00               	movlw	0
  5773   000C28  2389               	addwfc	(powf@n+1)& (0+255),f,b
  5774   000C2A  238A               	addwfc	(powf@n+2)& (0+255),f,b
  5775   000C2C  238B               	addwfc	(powf@n+3)& (0+255),f,b
  5776   000C2E  0E00               	movlw	0
  5777   000C30  27AC               	addwf	powf@ix& (0+255),f,b
  5778   000C32  0E00               	movlw	0
  5779   000C34  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  5780   000C36  0E80               	movlw	128
  5781   000C38  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  5782   000C3A  0EFF               	movlw	255
  5783   000C3C  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  5784   000C3E                     l8087:
  5785                           
  5786                           ; BSR set to: 1
  5787   000C3E  C1AC  F178         	movff	powf@ix,powf@ax
  5788   000C42  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  5789   000C46  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  5790   000C4A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  5791   000C4E                     
  5792                           ; BSR set to: 1
  5793   000C4E  C178  F038         	movff	powf@ax,___flsub@b
  5794   000C52  C179  F039         	movff	powf@ax+1,___flsub@b+1
  5795   000C56  C17A  F03A         	movff	powf@ax+2,___flsub@b+2
  5796   000C5A  C17B  F03B         	movff	powf@ax+3,___flsub@b+3
  5797   000C5E  C1A4  F068         	movff	powf@k,??_powf
  5798   000C62  C1A5  F069         	movff	powf@k+1,??_powf+1
  5799   000C66  0100               	movlb	0	; () banked
  5800   000C68  90D8               	bcf	status,0,c
  5801   000C6A  3768               	rlcf	??_powf& (0+255),f,b
  5802   000C6C  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5803   000C6E  90D8               	bcf	status,0,c
  5804   000C70  3768               	rlcf	??_powf& (0+255),f,b
  5805   000C72  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5806   000C74  0E6B               	movlw	low _bp
  5807   000C76  2568               	addwf	??_powf& (0+255),w,b
  5808   000C78  6EF6               	movwf	tblptrl,c
  5809   000C7A  0E7E               	movlw	high _bp
  5810   000C7C  2169               	addwfc	(??_powf+1)& (0+255),w,b
  5811   000C7E  6EF7               	movwf	tblptrh,c
  5812   000C80                     	if	0	;There are less than 3 active tblptr bytes
  5813   000C80                     	endif
  5814   000C80  0009               	tblrd		*+
  5815   000C82  CFF5 F03C          	movff	tablat,___flsub@a
  5816   000C86  0009               	tblrd		*+
  5817   000C88  CFF5 F03D          	movff	tablat,___flsub@a+1
  5818   000C8C  0009               	tblrd		*+
  5819   000C8E  CFF5 F03E          	movff	tablat,___flsub@a+2
  5820   000C92  000A               	tblrd		*-
  5821   000C94  CFF5 F03F          	movff	tablat,___flsub@a+3
  5822   000C98  EC02  F038         	call	___flsub	;wreg free
  5823   000C9C  C038  F17C         	movff	?___flsub,powf@u
  5824   000CA0  C039  F17D         	movff	?___flsub+1,powf@u+1
  5825   000CA4  C03A  F17E         	movff	?___flsub+2,powf@u+2
  5826   000CA8  C03B  F17F         	movff	?___flsub+3,powf@u+3
  5827   000CAC  0E00               	movlw	0
  5828   000CAE  6E40               	movwf	___fldiv@b^0,c
  5829   000CB0  0E00               	movlw	0
  5830   000CB2  6E41               	movwf	(___fldiv@b+1)^0,c
  5831   000CB4  0E80               	movlw	128
  5832   000CB6  6E42               	movwf	(___fldiv@b+2)^0,c
  5833   000CB8  0E3F               	movlw	63
  5834   000CBA  6E43               	movwf	(___fldiv@b+3)^0,c
  5835   000CBC  C178  F013         	movff	powf@ax,___fladd@a
  5836   000CC0  C179  F014         	movff	powf@ax+1,___fladd@a+1
  5837   000CC4  C17A  F015         	movff	powf@ax+2,___fladd@a+2
  5838   000CC8  C17B  F016         	movff	powf@ax+3,___fladd@a+3
  5839   000CCC  C1A4  F068         	movff	powf@k,??_powf
  5840   000CD0  C1A5  F069         	movff	powf@k+1,??_powf+1
  5841   000CD4  0100               	movlb	0	; () banked
  5842   000CD6  90D8               	bcf	status,0,c
  5843   000CD8  3768               	rlcf	??_powf& (0+255),f,b
  5844   000CDA  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5845   000CDC  90D8               	bcf	status,0,c
  5846   000CDE  3768               	rlcf	??_powf& (0+255),f,b
  5847   000CE0  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5848   000CE2  0E6B               	movlw	low _bp
  5849   000CE4  2568               	addwf	??_powf& (0+255),w,b
  5850   000CE6  6EF6               	movwf	tblptrl,c
  5851   000CE8  0E7E               	movlw	high _bp
  5852   000CEA  2169               	addwfc	(??_powf+1)& (0+255),w,b
  5853   000CEC  6EF7               	movwf	tblptrh,c
  5854   000CEE                     	if	0	;There are less than 3 active tblptr bytes
  5855   000CEE                     	endif
  5856   000CEE  0009               	tblrd		*+
  5857   000CF0  CFF5 F00F          	movff	tablat,___fladd@b
  5858   000CF4  0009               	tblrd		*+
  5859   000CF6  CFF5 F010          	movff	tablat,___fladd@b+1
  5860   000CFA  0009               	tblrd		*+
  5861   000CFC  CFF5 F011          	movff	tablat,___fladd@b+2
  5862   000D00  000A               	tblrd		*-
  5863   000D02  CFF5 F012          	movff	tablat,___fladd@b+3
  5864   000D06  EC47  F01C         	call	___fladd	;wreg free
  5865   000D0A  C00F  F044         	movff	?___fladd,___fldiv@a
  5866   000D0E  C010  F045         	movff	?___fladd+1,___fldiv@a+1
  5867   000D12  C011  F046         	movff	?___fladd+2,___fldiv@a+2
  5868   000D16  C012  F047         	movff	?___fladd+3,___fldiv@a+3
  5869   000D1A  ECA4  F022         	call	___fldiv	;wreg free
  5870   000D1E  C040  F180         	movff	?___fldiv,powf@v
  5871   000D22  C041  F181         	movff	?___fldiv+1,powf@v+1
  5872   000D26  C042  F182         	movff	?___fldiv+2,powf@v+2
  5873   000D2A  C043  F183         	movff	?___fldiv+3,powf@v+3
  5874   000D2E  C17C  F01F         	movff	powf@u,___flmul@b
  5875   000D32  C17D  F020         	movff	powf@u+1,___flmul@b+1
  5876   000D36  C17E  F021         	movff	powf@u+2,___flmul@b+2
  5877   000D3A  C17F  F022         	movff	powf@u+3,___flmul@b+3
  5878   000D3E  C180  F023         	movff	powf@v,___flmul@a
  5879   000D42  C181  F024         	movff	powf@v+1,___flmul@a+1
  5880   000D46  C182  F025         	movff	powf@v+2,___flmul@a+2
  5881   000D4A  C183  F026         	movff	powf@v+3,___flmul@a+3
  5882   000D4E  ECA2  F01E         	call	___flmul	;wreg free
  5883   000D52  C01F  F160         	movff	?___flmul,powf@s
  5884   000D56  C020  F161         	movff	?___flmul+1,powf@s+1
  5885   000D5A  C021  F162         	movff	?___flmul+2,powf@s+2
  5886   000D5E  C022  F163         	movff	?___flmul+3,powf@s+3
  5887   000D62  C160  F174         	movff	powf@s,powf@s_h
  5888   000D66  C161  F175         	movff	powf@s+1,powf@s_h+1
  5889   000D6A  C162  F176         	movff	powf@s+2,powf@s_h+2
  5890   000D6E  C163  F177         	movff	powf@s+3,powf@s_h+3
  5891   000D72  C174  F198         	movff	powf@s_h,powf@is
  5892   000D76  C175  F199         	movff	powf@s_h+1,powf@is+1
  5893   000D7A  C176  F19A         	movff	powf@s_h+2,powf@is+2
  5894   000D7E  C177  F19B         	movff	powf@s_h+3,powf@is+3
  5895   000D82  0E00               	movlw	0
  5896   000D84  0101               	movlb	1	; () banked
  5897   000D86  1598               	andwf	powf@is& (0+255),w,b
  5898   000D88  6F74               	movwf	powf@s_h& (0+255),b
  5899   000D8A  0EF0               	movlw	240
  5900   000D8C  1599               	andwf	(powf@is+1)& (0+255),w,b
  5901   000D8E  6F75               	movwf	(powf@s_h+1)& (0+255),b
  5902   000D90  0EFF               	movlw	255
  5903   000D92  159A               	andwf	(powf@is+2)& (0+255),w,b
  5904   000D94  6F76               	movwf	(powf@s_h+2)& (0+255),b
  5905   000D96  0EFF               	movlw	255
  5906   000D98  159B               	andwf	(powf@is+3)& (0+255),w,b
  5907   000D9A  6F77               	movwf	(powf@s_h+3)& (0+255),b
  5908   000D9C                     
  5909                           ; BSR set to: 1
  5910   000D9C  C1AC  F068         	movff	powf@ix,??_powf
  5911   000DA0  C1AD  F069         	movff	powf@ix+1,??_powf+1
  5912   000DA4  C1AE  F06A         	movff	powf@ix+2,??_powf+2
  5913   000DA8  C1AF  F06B         	movff	powf@ix+3,??_powf+3
  5914   000DAC  0100               	movlb	0	; () banked
  5915   000DAE  356B               	rlcf	(??_powf+3)& (0+255),w,b
  5916   000DB0  336B               	rrcf	(??_powf+3)& (0+255),f,b
  5917   000DB2  336A               	rrcf	(??_powf+2)& (0+255),f,b
  5918   000DB4  3369               	rrcf	(??_powf+1)& (0+255),f,b
  5919   000DB6  3368               	rrcf	??_powf& (0+255),f,b
  5920   000DB8  0E00               	movlw	0
  5921   000DBA  1568               	andwf	??_powf& (0+255),w,b
  5922   000DBC  6F6C               	movwf	(??_powf+4)& (0+255),b
  5923   000DBE  0EF0               	movlw	240
  5924   000DC0  1569               	andwf	(??_powf+1)& (0+255),w,b
  5925   000DC2  6F6D               	movwf	(??_powf+5)& (0+255),b
  5926   000DC4  0EFF               	movlw	255
  5927   000DC6  156A               	andwf	(??_powf+2)& (0+255),w,b
  5928   000DC8  6F6E               	movwf	(??_powf+6)& (0+255),b
  5929   000DCA  0EFF               	movlw	255
  5930   000DCC  156B               	andwf	(??_powf+3)& (0+255),w,b
  5931   000DCE  6F6F               	movwf	(??_powf+7)& (0+255),b
  5932   000DD0  0E00               	movlw	0
  5933   000DD2  116C               	iorwf	(??_powf+4)& (0+255),w,b
  5934   000DD4  0101               	movlb	1	; () banked
  5935   000DD6  6F98               	movwf	powf@is& (0+255),b
  5936   000DD8  0E00               	movlw	0
  5937   000DDA  0100               	movlb	0	; () banked
  5938   000DDC  116D               	iorwf	(??_powf+5)& (0+255),w,b
  5939   000DDE  0101               	movlb	1	; () banked
  5940   000DE0  6F99               	movwf	(powf@is+1)& (0+255),b
  5941   000DE2  0E00               	movlw	0
  5942   000DE4  0100               	movlb	0	; () banked
  5943   000DE6  116E               	iorwf	(??_powf+6)& (0+255),w,b
  5944   000DE8  0101               	movlb	1	; () banked
  5945   000DEA  6F9A               	movwf	(powf@is+2)& (0+255),b
  5946   000DEC  0E20               	movlw	32
  5947   000DEE  0100               	movlb	0	; () banked
  5948   000DF0  116F               	iorwf	(??_powf+7)& (0+255),w,b
  5949   000DF2  0101               	movlb	1	; () banked
  5950   000DF4  6F9B               	movwf	(powf@is+3)& (0+255),b
  5951   000DF6                     
  5952                           ; BSR set to: 1
  5953   000DF6  C1A4  F068         	movff	powf@k,??_powf
  5954   000DFA  C1A5  F069         	movff	powf@k+1,??_powf+1
  5955   000DFE  C1A6  F06A         	movff	powf@k+2,??_powf+2
  5956   000E02  C1A7  F06B         	movff	powf@k+3,??_powf+3
  5957   000E06  0E15               	movlw	21
  5958   000E08                     u10425:
  5959   000E08  90D8               	bcf	status,0,c
  5960   000E0A  0100               	movlb	0	; () banked
  5961   000E0C  3768               	rlcf	??_powf& (0+255),f,b
  5962   000E0E  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5963   000E10  376A               	rlcf	(??_powf+2)& (0+255),f,b
  5964   000E12  376B               	rlcf	(??_powf+3)& (0+255),f,b
  5965   000E14  2EE8               	decfsz	wreg,f,c
  5966   000E16  EF04  F007         	goto	u10425
  5967   000E1A  0101               	movlb	1	; () banked
  5968   000E1C  5198               	movf	powf@is& (0+255),w,b
  5969   000E1E  0100               	movlb	0	; () banked
  5970   000E20  2568               	addwf	??_powf& (0+255),w,b
  5971   000E22  6F6C               	movwf	(??_powf+4)& (0+255),b
  5972   000E24  0101               	movlb	1	; () banked
  5973   000E26  5199               	movf	(powf@is+1)& (0+255),w,b
  5974   000E28  0100               	movlb	0	; () banked
  5975   000E2A  2169               	addwfc	(??_powf+1)& (0+255),w,b
  5976   000E2C  6F6D               	movwf	(??_powf+5)& (0+255),b
  5977   000E2E  0101               	movlb	1	; () banked
  5978   000E30  519A               	movf	(powf@is+2)& (0+255),w,b
  5979   000E32  0100               	movlb	0	; () banked
  5980   000E34  216A               	addwfc	(??_powf+2)& (0+255),w,b
  5981   000E36  6F6E               	movwf	(??_powf+6)& (0+255),b
  5982   000E38  0101               	movlb	1	; () banked
  5983   000E3A  519B               	movf	(powf@is+3)& (0+255),w,b
  5984   000E3C  0100               	movlb	0	; () banked
  5985   000E3E  216B               	addwfc	(??_powf+3)& (0+255),w,b
  5986   000E40  6F6F               	movwf	(??_powf+7)& (0+255),b
  5987   000E42  0E00               	movlw	0
  5988   000E44  256C               	addwf	(??_powf+4)& (0+255),w,b
  5989   000E46  0101               	movlb	1	; () banked
  5990   000E48  6F70               	movwf	powf@t_h& (0+255),b
  5991   000E4A  0E00               	movlw	0
  5992   000E4C  0100               	movlb	0	; () banked
  5993   000E4E  216D               	addwfc	(??_powf+5)& (0+255),w,b
  5994   000E50  0101               	movlb	1	; () banked
  5995   000E52  6F71               	movwf	(powf@t_h+1)& (0+255),b
  5996   000E54  0E40               	movlw	64
  5997   000E56  0100               	movlb	0	; () banked
  5998   000E58  216E               	addwfc	(??_powf+6)& (0+255),w,b
  5999   000E5A  0101               	movlb	1	; () banked
  6000   000E5C  6F72               	movwf	(powf@t_h+2)& (0+255),b
  6001   000E5E  0E00               	movlw	0
  6002   000E60  0100               	movlb	0	; () banked
  6003   000E62  216F               	addwfc	(??_powf+7)& (0+255),w,b
  6004   000E64  0101               	movlb	1	; () banked
  6005   000E66  6F73               	movwf	(powf@t_h+3)& (0+255),b
  6006   000E68                     
  6007                           ; BSR set to: 1
  6008   000E68  C1A4  F068         	movff	powf@k,??_powf
  6009   000E6C  C1A5  F069         	movff	powf@k+1,??_powf+1
  6010   000E70  0100               	movlb	0	; () banked
  6011   000E72  90D8               	bcf	status,0,c
  6012   000E74  3768               	rlcf	??_powf& (0+255),f,b
  6013   000E76  3769               	rlcf	(??_powf+1)& (0+255),f,b
  6014   000E78  90D8               	bcf	status,0,c
  6015   000E7A  3768               	rlcf	??_powf& (0+255),f,b
  6016   000E7C  3769               	rlcf	(??_powf+1)& (0+255),f,b
  6017   000E7E  0E6B               	movlw	low _bp
  6018   000E80  2568               	addwf	??_powf& (0+255),w,b
  6019   000E82  6EF6               	movwf	tblptrl,c
  6020   000E84  0E7E               	movlw	high _bp
  6021   000E86  2169               	addwfc	(??_powf+1)& (0+255),w,b
  6022   000E88  6EF7               	movwf	tblptrh,c
  6023   000E8A                     	if	0	;There are less than 3 active tblptr bytes
  6024   000E8A                     	endif
  6025   000E8A  0009               	tblrd		*+
  6026   000E8C  CFF5 F03C          	movff	tablat,___flsub@a
  6027   000E90  0009               	tblrd		*+
  6028   000E92  CFF5 F03D          	movff	tablat,___flsub@a+1
  6029   000E96  0009               	tblrd		*+
  6030   000E98  CFF5 F03E          	movff	tablat,___flsub@a+2
  6031   000E9C  000A               	tblrd		*-
  6032   000E9E  CFF5 F03F          	movff	tablat,___flsub@a+3
  6033   000EA2  C170  F038         	movff	powf@t_h,___flsub@b
  6034   000EA6  C171  F039         	movff	powf@t_h+1,___flsub@b+1
  6035   000EAA  C172  F03A         	movff	powf@t_h+2,___flsub@b+2
  6036   000EAE  C173  F03B         	movff	powf@t_h+3,___flsub@b+3
  6037   000EB2  EC02  F038         	call	___flsub	;wreg free
  6038   000EB6  C038  F19C         	movff	?___flsub,_powf$1895
  6039   000EBA  C039  F19D         	movff	?___flsub+1,_powf$1895+1
  6040   000EBE  C03A  F19E         	movff	?___flsub+2,_powf$1895+2
  6041   000EC2  C03B  F19F         	movff	?___flsub+3,_powf$1895+3
  6042   000EC6  C178  F038         	movff	powf@ax,___flsub@b
  6043   000ECA  C179  F039         	movff	powf@ax+1,___flsub@b+1
  6044   000ECE  C17A  F03A         	movff	powf@ax+2,___flsub@b+2
  6045   000ED2  C17B  F03B         	movff	powf@ax+3,___flsub@b+3
  6046   000ED6  C19C  F03C         	movff	_powf$1895,___flsub@a
  6047   000EDA  C19D  F03D         	movff	_powf$1895+1,___flsub@a+1
  6048   000EDE  C19E  F03E         	movff	_powf$1895+2,___flsub@a+2
  6049   000EE2  C19F  F03F         	movff	_powf$1895+3,___flsub@a+3
  6050   000EE6  EC02  F038         	call	___flsub	;wreg free
  6051   000EEA  C038  F134         	movff	?___flsub,powf@t_l
  6052   000EEE  C039  F135         	movff	?___flsub+1,powf@t_l+1
  6053   000EF2  C03A  F136         	movff	?___flsub+2,powf@t_l+2
  6054   000EF6  C03B  F137         	movff	?___flsub+3,powf@t_l+3
  6055   000EFA  C170  F023         	movff	powf@t_h,___flmul@a
  6056   000EFE  C171  F024         	movff	powf@t_h+1,___flmul@a+1
  6057   000F02  C172  F025         	movff	powf@t_h+2,___flmul@a+2
  6058   000F06  C173  F026         	movff	powf@t_h+3,___flmul@a+3
  6059   000F0A  C174  F01F         	movff	powf@s_h,___flmul@b
  6060   000F0E  C175  F020         	movff	powf@s_h+1,___flmul@b+1
  6061   000F12  C176  F021         	movff	powf@s_h+2,___flmul@b+2
  6062   000F16  C177  F022         	movff	powf@s_h+3,___flmul@b+3
  6063   000F1A  ECA2  F01E         	call	___flmul	;wreg free
  6064   000F1E  C01F  F03C         	movff	?___flmul,___flsub@a
  6065   000F22  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  6066   000F26  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  6067   000F2A  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  6068   000F2E  C17C  F038         	movff	powf@u,___flsub@b
  6069   000F32  C17D  F039         	movff	powf@u+1,___flsub@b+1
  6070   000F36  C17E  F03A         	movff	powf@u+2,___flsub@b+2
  6071   000F3A  C17F  F03B         	movff	powf@u+3,___flsub@b+3
  6072   000F3E  EC02  F038         	call	___flsub	;wreg free
  6073   000F42  C038  F19C         	movff	?___flsub,_powf$1895
  6074   000F46  C039  F19D         	movff	?___flsub+1,_powf$1895+1
  6075   000F4A  C03A  F19E         	movff	?___flsub+2,_powf$1895+2
  6076   000F4E  C03B  F19F         	movff	?___flsub+3,_powf$1895+3
  6077   000F52  C134  F023         	movff	powf@t_l,___flmul@a
  6078   000F56  C135  F024         	movff	powf@t_l+1,___flmul@a+1
  6079   000F5A  C136  F025         	movff	powf@t_l+2,___flmul@a+2
  6080   000F5E  C137  F026         	movff	powf@t_l+3,___flmul@a+3
  6081   000F62  C174  F01F         	movff	powf@s_h,___flmul@b
  6082   000F66  C175  F020         	movff	powf@s_h+1,___flmul@b+1
  6083   000F6A  C176  F021         	movff	powf@s_h+2,___flmul@b+2
  6084   000F6E  C177  F022         	movff	powf@s_h+3,___flmul@b+3
  6085   000F72  ECA2  F01E         	call	___flmul	;wreg free
  6086   000F76  C01F  F03C         	movff	?___flmul,___flsub@a
  6087   000F7A  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  6088   000F7E  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  6089   000F82  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  6090   000F86  C19C  F038         	movff	_powf$1895,___flsub@b
  6091   000F8A  C19D  F039         	movff	_powf$1895+1,___flsub@b+1
  6092   000F8E  C19E  F03A         	movff	_powf$1895+2,___flsub@b+2
  6093   000F92  C19F  F03B         	movff	_powf$1895+3,___flsub@b+3
  6094   000F96  EC02  F038         	call	___flsub	;wreg free
  6095   000F9A  C038  F158         	movff	?___flsub,_powf$1893
  6096   000F9E  C039  F159         	movff	?___flsub+1,_powf$1893+1
  6097   000FA2  C03A  F15A         	movff	?___flsub+2,_powf$1893+2
  6098   000FA6  C03B  F15B         	movff	?___flsub+3,_powf$1893+3
  6099   000FAA  C158  F01F         	movff	_powf$1893,___flmul@b
  6100   000FAE  C159  F020         	movff	_powf$1893+1,___flmul@b+1
  6101   000FB2  C15A  F021         	movff	_powf$1893+2,___flmul@b+2
  6102   000FB6  C15B  F022         	movff	_powf$1893+3,___flmul@b+3
  6103   000FBA  C180  F023         	movff	powf@v,___flmul@a
  6104   000FBE  C181  F024         	movff	powf@v+1,___flmul@a+1
  6105   000FC2  C182  F025         	movff	powf@v+2,___flmul@a+2
  6106   000FC6  C183  F026         	movff	powf@v+3,___flmul@a+3
  6107   000FCA  ECA2  F01E         	call	___flmul	;wreg free
  6108   000FCE  C01F  F130         	movff	?___flmul,powf@s_l
  6109   000FD2  C020  F131         	movff	?___flmul+1,powf@s_l+1
  6110   000FD6  C021  F132         	movff	?___flmul+2,powf@s_l+2
  6111   000FDA  C022  F133         	movff	?___flmul+3,powf@s_l+3
  6112   000FDE  C160  F01F         	movff	powf@s,___flmul@b
  6113   000FE2  C161  F020         	movff	powf@s+1,___flmul@b+1
  6114   000FE6  C162  F021         	movff	powf@s+2,___flmul@b+2
  6115   000FEA  C163  F022         	movff	powf@s+3,___flmul@b+3
  6116   000FEE  C160  F023         	movff	powf@s,___flmul@a
  6117   000FF2  C161  F024         	movff	powf@s+1,___flmul@a+1
  6118   000FF6  C162  F025         	movff	powf@s+2,___flmul@a+2
  6119   000FFA  C163  F026         	movff	powf@s+3,___flmul@a+3
  6120   000FFE  ECA2  F01E         	call	___flmul	;wreg free
  6121   001002  C01F  F190         	movff	?___flmul,powf@s2
  6122   001006  C020  F191         	movff	?___flmul+1,powf@s2+1
  6123   00100A  C021  F192         	movff	?___flmul+2,powf@s2+2
  6124   00100E  C022  F193         	movff	?___flmul+3,powf@s2+3
  6125   001012  0E55               	movlw	85
  6126   001014  6E13               	movwf	___fladd@a^0,c
  6127   001016  0E32               	movlw	50
  6128   001018  6E14               	movwf	(___fladd@a+1)^0,c
  6129   00101A  0E6C               	movlw	108
  6130   00101C  6E15               	movwf	(___fladd@a+2)^0,c
  6131   00101E  0E3E               	movlw	62
  6132   001020  6E16               	movwf	(___fladd@a+3)^0,c
  6133   001022  0E42               	movlw	66
  6134   001024  6E23               	movwf	___flmul@a^0,c
  6135   001026  0EF1               	movlw	241
  6136   001028  6E24               	movwf	(___flmul@a+1)^0,c
  6137   00102A  0E53               	movlw	83
  6138   00102C  6E25               	movwf	(___flmul@a+2)^0,c
  6139   00102E  0E3E               	movlw	62
  6140   001030  6E26               	movwf	(___flmul@a+3)^0,c
  6141   001032  C190  F01F         	movff	powf@s2,___flmul@b
  6142   001036  C191  F020         	movff	powf@s2+1,___flmul@b+1
  6143   00103A  C192  F021         	movff	powf@s2+2,___flmul@b+2
  6144   00103E  C193  F022         	movff	powf@s2+3,___flmul@b+3
  6145   001042  ECA2  F01E         	call	___flmul	;wreg free
  6146   001046  C01F  F00F         	movff	?___flmul,___fladd@b
  6147   00104A  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6148   00104E  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6149   001052  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6150   001056  EC47  F01C         	call	___fladd	;wreg free
  6151   00105A  C00F  F148         	movff	?___fladd,_powf$1892
  6152   00105E  C010  F149         	movff	?___fladd+1,_powf$1892+1
  6153   001062  C011  F14A         	movff	?___fladd+2,_powf$1892+2
  6154   001066  C012  F14B         	movff	?___fladd+3,_powf$1892+3
  6155   00106A  0E05               	movlw	5
  6156   00106C  6E13               	movwf	___fladd@a^0,c
  6157   00106E  0EA3               	movlw	163
  6158   001070  6E14               	movwf	(___fladd@a+1)^0,c
  6159   001072  0E8B               	movlw	139
  6160   001074  6E15               	movwf	(___fladd@a+2)^0,c
  6161   001076  0E3E               	movlw	62
  6162   001078  6E16               	movwf	(___fladd@a+3)^0,c
  6163   00107A  C190  F023         	movff	powf@s2,___flmul@a
  6164   00107E  C191  F024         	movff	powf@s2+1,___flmul@a+1
  6165   001082  C192  F025         	movff	powf@s2+2,___flmul@a+2
  6166   001086  C193  F026         	movff	powf@s2+3,___flmul@a+3
  6167   00108A  C148  F01F         	movff	_powf$1892,___flmul@b
  6168   00108E  C149  F020         	movff	_powf$1892+1,___flmul@b+1
  6169   001092  C14A  F021         	movff	_powf$1892+2,___flmul@b+2
  6170   001096  C14B  F022         	movff	_powf$1892+3,___flmul@b+3
  6171   00109A  ECA2  F01E         	call	___flmul	;wreg free
  6172   00109E  C01F  F00F         	movff	?___flmul,___fladd@b
  6173   0010A2  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6174   0010A6  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6175   0010AA  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6176   0010AE  EC47  F01C         	call	___fladd	;wreg free
  6177   0010B2  C00F  F158         	movff	?___fladd,_powf$1893
  6178   0010B6  C010  F159         	movff	?___fladd+1,_powf$1893+1
  6179   0010BA  C011  F15A         	movff	?___fladd+2,_powf$1893+2
  6180   0010BE  C012  F15B         	movff	?___fladd+3,_powf$1893+3
  6181   0010C2  0EAB               	movlw	171
  6182   0010C4  6E13               	movwf	___fladd@a^0,c
  6183   0010C6  0EAA               	movlw	170
  6184   0010C8  6E14               	movwf	(___fladd@a+1)^0,c
  6185   0010CA  0EAA               	movlw	170
  6186   0010CC  6E15               	movwf	(___fladd@a+2)^0,c
  6187   0010CE  0E3E               	movlw	62
  6188   0010D0  6E16               	movwf	(___fladd@a+3)^0,c
  6189   0010D2  C190  F023         	movff	powf@s2,___flmul@a
  6190   0010D6  C191  F024         	movff	powf@s2+1,___flmul@a+1
  6191   0010DA  C192  F025         	movff	powf@s2+2,___flmul@a+2
  6192   0010DE  C193  F026         	movff	powf@s2+3,___flmul@a+3
  6193   0010E2  C158  F01F         	movff	_powf$1893,___flmul@b
  6194   0010E6  C159  F020         	movff	_powf$1893+1,___flmul@b+1
  6195   0010EA  C15A  F021         	movff	_powf$1893+2,___flmul@b+2
  6196   0010EE  C15B  F022         	movff	_powf$1893+3,___flmul@b+3
  6197   0010F2  ECA2  F01E         	call	___flmul	;wreg free
  6198   0010F6  C01F  F00F         	movff	?___flmul,___fladd@b
  6199   0010FA  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6200   0010FE  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6201   001102  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6202   001106  EC47  F01C         	call	___fladd	;wreg free
  6203   00110A  C00F  F14C         	movff	?___fladd,_powf$1894
  6204   00110E  C010  F14D         	movff	?___fladd+1,_powf$1894+1
  6205   001112  C011  F14E         	movff	?___fladd+2,_powf$1894+2
  6206   001116  C012  F14F         	movff	?___fladd+3,_powf$1894+3
  6207   00111A  0EB7               	movlw	183
  6208   00111C  6E13               	movwf	___fladd@a^0,c
  6209   00111E  0E6D               	movlw	109
  6210   001120  6E14               	movwf	(___fladd@a+1)^0,c
  6211   001122  0EDB               	movlw	219
  6212   001124  6E15               	movwf	(___fladd@a+2)^0,c
  6213   001126  0E3E               	movlw	62
  6214   001128  6E16               	movwf	(___fladd@a+3)^0,c
  6215   00112A  C190  F023         	movff	powf@s2,___flmul@a
  6216   00112E  C191  F024         	movff	powf@s2+1,___flmul@a+1
  6217   001132  C192  F025         	movff	powf@s2+2,___flmul@a+2
  6218   001136  C193  F026         	movff	powf@s2+3,___flmul@a+3
  6219   00113A  C14C  F01F         	movff	_powf$1894,___flmul@b
  6220   00113E  C14D  F020         	movff	_powf$1894+1,___flmul@b+1
  6221   001142  C14E  F021         	movff	_powf$1894+2,___flmul@b+2
  6222   001146  C14F  F022         	movff	_powf$1894+3,___flmul@b+3
  6223   00114A  ECA2  F01E         	call	___flmul	;wreg free
  6224   00114E  C01F  F00F         	movff	?___flmul,___fladd@b
  6225   001152  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6226   001156  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6227   00115A  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6228   00115E  EC47  F01C         	call	___fladd	;wreg free
  6229   001162  C00F  F138         	movff	?___fladd,_powf$1896
  6230   001166  C010  F139         	movff	?___fladd+1,_powf$1896+1
  6231   00116A  C011  F13A         	movff	?___fladd+2,_powf$1896+2
  6232   00116E  C012  F13B         	movff	?___fladd+3,_powf$1896+3
  6233   001172  0E9A               	movlw	154
  6234   001174  6E13               	movwf	___fladd@a^0,c
  6235   001176  0E99               	movlw	153
  6236   001178  6E14               	movwf	(___fladd@a+1)^0,c
  6237   00117A  0E19               	movlw	25
  6238   00117C  6E15               	movwf	(___fladd@a+2)^0,c
  6239   00117E  0E3F               	movlw	63
  6240   001180  6E16               	movwf	(___fladd@a+3)^0,c
  6241   001182  C190  F023         	movff	powf@s2,___flmul@a
  6242   001186  C191  F024         	movff	powf@s2+1,___flmul@a+1
  6243   00118A  C192  F025         	movff	powf@s2+2,___flmul@a+2
  6244   00118E  C193  F026         	movff	powf@s2+3,___flmul@a+3
  6245   001192  C138  F01F         	movff	_powf$1896,___flmul@b
  6246   001196  C139  F020         	movff	_powf$1896+1,___flmul@b+1
  6247   00119A  C13A  F021         	movff	_powf$1896+2,___flmul@b+2
  6248   00119E  C13B  F022         	movff	_powf$1896+3,___flmul@b+3
  6249   0011A2  ECA2  F01E         	call	___flmul	;wreg free
  6250   0011A6  C01F  F00F         	movff	?___flmul,___fladd@b
  6251   0011AA  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6252   0011AE  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6253   0011B2  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6254   0011B6  EC47  F01C         	call	___fladd	;wreg free
  6255   0011BA  C00F  F100         	movff	?___fladd,_powf$1897
  6256   0011BE  C010  F101         	movff	?___fladd+1,_powf$1897+1
  6257   0011C2  C011  F102         	movff	?___fladd+2,_powf$1897+2
  6258   0011C6  C012  F103         	movff	?___fladd+3,_powf$1897+3
  6259   0011CA  C190  F023         	movff	powf@s2,___flmul@a
  6260   0011CE  C191  F024         	movff	powf@s2+1,___flmul@a+1
  6261   0011D2  C192  F025         	movff	powf@s2+2,___flmul@a+2
  6262   0011D6  C193  F026         	movff	powf@s2+3,___flmul@a+3
  6263   0011DA  C190  F01F         	movff	powf@s2,___flmul@b
  6264   0011DE  C191  F020         	movff	powf@s2+1,___flmul@b+1
  6265   0011E2  C192  F021         	movff	powf@s2+2,___flmul@b+2
  6266   0011E6  C193  F022         	movff	powf@s2+3,___flmul@b+3
  6267   0011EA  ECA2  F01E         	call	___flmul	;wreg free
  6268   0011EE  C01F  F104         	movff	?___flmul,_powf$1898
  6269   0011F2  C020  F105         	movff	?___flmul+1,_powf$1898+1
  6270   0011F6  C021  F106         	movff	?___flmul+2,_powf$1898+2
  6271   0011FA  C022  F107         	movff	?___flmul+3,_powf$1898+3
  6272   0011FE  C100  F01F         	movff	_powf$1897,___flmul@b
  6273   001202  C101  F020         	movff	_powf$1897+1,___flmul@b+1
  6274   001206  C102  F021         	movff	_powf$1897+2,___flmul@b+2
  6275   00120A  C103  F022         	movff	_powf$1897+3,___flmul@b+3
  6276   00120E  C104  F023         	movff	_powf$1898,___flmul@a
  6277   001212  C105  F024         	movff	_powf$1898+1,___flmul@a+1
  6278   001216  C106  F025         	movff	_powf$1898+2,___flmul@a+2
  6279   00121A  C107  F026         	movff	_powf$1898+3,___flmul@a+3
  6280   00121E  ECA2  F01E         	call	___flmul	;wreg free
  6281   001222  C01F  F150         	movff	?___flmul,powf@r
  6282   001226  C020  F151         	movff	?___flmul+1,powf@r+1
  6283   00122A  C021  F152         	movff	?___flmul+2,powf@r+2
  6284   00122E  C022  F153         	movff	?___flmul+3,powf@r+3
  6285   001232  C130  F023         	movff	powf@s_l,___flmul@a
  6286   001236  C131  F024         	movff	powf@s_l+1,___flmul@a+1
  6287   00123A  C132  F025         	movff	powf@s_l+2,___flmul@a+2
  6288   00123E  C133  F026         	movff	powf@s_l+3,___flmul@a+3
  6289   001242  C160  F013         	movff	powf@s,___fladd@a
  6290   001246  C161  F014         	movff	powf@s+1,___fladd@a+1
  6291   00124A  C162  F015         	movff	powf@s+2,___fladd@a+2
  6292   00124E  C163  F016         	movff	powf@s+3,___fladd@a+3
  6293   001252  C174  F00F         	movff	powf@s_h,___fladd@b
  6294   001256  C175  F010         	movff	powf@s_h+1,___fladd@b+1
  6295   00125A  C176  F011         	movff	powf@s_h+2,___fladd@b+2
  6296   00125E  C177  F012         	movff	powf@s_h+3,___fladd@b+3
  6297   001262  EC47  F01C         	call	___fladd	;wreg free
  6298   001266  C00F  F01F         	movff	?___fladd,___flmul@b
  6299   00126A  C010  F020         	movff	?___fladd+1,___flmul@b+1
  6300   00126E  C011  F021         	movff	?___fladd+2,___flmul@b+2
  6301   001272  C012  F022         	movff	?___fladd+3,___flmul@b+3
  6302   001276  ECA2  F01E         	call	___flmul	;wreg free
  6303   00127A  C01F  F15C         	movff	?___flmul,_powf$1899
  6304   00127E  C020  F15D         	movff	?___flmul+1,_powf$1899+1
  6305   001282  C021  F15E         	movff	?___flmul+2,_powf$1899+2
  6306   001286  C022  F15F         	movff	?___flmul+3,_powf$1899+3
  6307   00128A  C150  F00F         	movff	powf@r,___fladd@b
  6308   00128E  C151  F010         	movff	powf@r+1,___fladd@b+1
  6309   001292  C152  F011         	movff	powf@r+2,___fladd@b+2
  6310   001296  C153  F012         	movff	powf@r+3,___fladd@b+3
  6311   00129A  C15C  F013         	movff	_powf$1899,___fladd@a
  6312   00129E  C15D  F014         	movff	_powf$1899+1,___fladd@a+1
  6313   0012A2  C15E  F015         	movff	_powf$1899+2,___fladd@a+2
  6314   0012A6  C15F  F016         	movff	_powf$1899+3,___fladd@a+3
  6315   0012AA  EC47  F01C         	call	___fladd	;wreg free
  6316   0012AE  C00F  F150         	movff	?___fladd,powf@r
  6317   0012B2  C010  F151         	movff	?___fladd+1,powf@r+1
  6318   0012B6  C011  F152         	movff	?___fladd+2,powf@r+2
  6319   0012BA  C012  F153         	movff	?___fladd+3,powf@r+3
  6320   0012BE  C174  F01F         	movff	powf@s_h,___flmul@b
  6321   0012C2  C175  F020         	movff	powf@s_h+1,___flmul@b+1
  6322   0012C6  C176  F021         	movff	powf@s_h+2,___flmul@b+2
  6323   0012CA  C177  F022         	movff	powf@s_h+3,___flmul@b+3
  6324   0012CE  C174  F023         	movff	powf@s_h,___flmul@a
  6325   0012D2  C175  F024         	movff	powf@s_h+1,___flmul@a+1
  6326   0012D6  C176  F025         	movff	powf@s_h+2,___flmul@a+2
  6327   0012DA  C177  F026         	movff	powf@s_h+3,___flmul@a+3
  6328   0012DE  ECA2  F01E         	call	___flmul	;wreg free
  6329   0012E2  C01F  F190         	movff	?___flmul,powf@s2
  6330   0012E6  C020  F191         	movff	?___flmul+1,powf@s2+1
  6331   0012EA  C021  F192         	movff	?___flmul+2,powf@s2+2
  6332   0012EE  C022  F193         	movff	?___flmul+3,powf@s2+3
  6333   0012F2  0E00               	movlw	0
  6334   0012F4  6E13               	movwf	___fladd@a^0,c
  6335   0012F6  0E00               	movlw	0
  6336   0012F8  6E14               	movwf	(___fladd@a+1)^0,c
  6337   0012FA  0E40               	movlw	64
  6338   0012FC  6E15               	movwf	(___fladd@a+2)^0,c
  6339   0012FE  0E40               	movlw	64
  6340   001300  6E16               	movwf	(___fladd@a+3)^0,c
  6341   001302  C190  F00F         	movff	powf@s2,___fladd@b
  6342   001306  C191  F010         	movff	powf@s2+1,___fladd@b+1
  6343   00130A  C192  F011         	movff	powf@s2+2,___fladd@b+2
  6344   00130E  C193  F012         	movff	powf@s2+3,___fladd@b+3
  6345   001312  EC47  F01C         	call	___fladd	;wreg free
  6346   001316  C00F  F15C         	movff	?___fladd,_powf$1899
  6347   00131A  C010  F15D         	movff	?___fladd+1,_powf$1899+1
  6348   00131E  C011  F15E         	movff	?___fladd+2,_powf$1899+2
  6349   001322  C012  F15F         	movff	?___fladd+3,_powf$1899+3
  6350   001326  C15C  F00F         	movff	_powf$1899,___fladd@b
  6351   00132A  C15D  F010         	movff	_powf$1899+1,___fladd@b+1
  6352   00132E  C15E  F011         	movff	_powf$1899+2,___fladd@b+2
  6353   001332  C15F  F012         	movff	_powf$1899+3,___fladd@b+3
  6354   001336  C150  F013         	movff	powf@r,___fladd@a
  6355   00133A  C151  F014         	movff	powf@r+1,___fladd@a+1
  6356   00133E  C152  F015         	movff	powf@r+2,___fladd@a+2
  6357   001342  C153  F016         	movff	powf@r+3,___fladd@a+3
  6358   001346  EC47  F01C         	call	___fladd	;wreg free
  6359   00134A  C00F  F170         	movff	?___fladd,powf@t_h
  6360   00134E  C010  F171         	movff	?___fladd+1,powf@t_h+1
  6361   001352  C011  F172         	movff	?___fladd+2,powf@t_h+2
  6362   001356  C012  F173         	movff	?___fladd+3,powf@t_h+3
  6363   00135A  C170  F198         	movff	powf@t_h,powf@is
  6364   00135E  C171  F199         	movff	powf@t_h+1,powf@is+1
  6365   001362  C172  F19A         	movff	powf@t_h+2,powf@is+2
  6366   001366  C173  F19B         	movff	powf@t_h+3,powf@is+3
  6367   00136A  0E00               	movlw	0
  6368   00136C  0101               	movlb	1	; () banked
  6369   00136E  1598               	andwf	powf@is& (0+255),w,b
  6370   001370  6F70               	movwf	powf@t_h& (0+255),b
  6371   001372  0EF0               	movlw	240
  6372   001374  1599               	andwf	(powf@is+1)& (0+255),w,b
  6373   001376  6F71               	movwf	(powf@t_h+1)& (0+255),b
  6374   001378  0EFF               	movlw	255
  6375   00137A  159A               	andwf	(powf@is+2)& (0+255),w,b
  6376   00137C  6F72               	movwf	(powf@t_h+2)& (0+255),b
  6377   00137E  0EFF               	movlw	255
  6378   001380  159B               	andwf	(powf@is+3)& (0+255),w,b
  6379   001382  6F73               	movwf	(powf@t_h+3)& (0+255),b
  6380   001384                     
  6381                           ; BSR set to: 1
  6382   001384  0E00               	movlw	0
  6383   001386  6E13               	movwf	___fladd@a^0,c
  6384   001388  0E00               	movlw	0
  6385   00138A  6E14               	movwf	(___fladd@a+1)^0,c
  6386   00138C  0E40               	movlw	64
  6387   00138E  6E15               	movwf	(___fladd@a+2)^0,c
  6388   001390  0EC0               	movlw	192
  6389   001392  6E16               	movwf	(___fladd@a+3)^0,c
  6390   001394  C170  F00F         	movff	powf@t_h,___fladd@b
  6391   001398  C171  F010         	movff	powf@t_h+1,___fladd@b+1
  6392   00139C  C172  F011         	movff	powf@t_h+2,___fladd@b+2
  6393   0013A0  C173  F012         	movff	powf@t_h+3,___fladd@b+3
  6394   0013A4  EC47  F01C         	call	___fladd	;wreg free
  6395   0013A8  C00F  F13C         	movff	?___fladd,_powf$1900
  6396   0013AC  C010  F13D         	movff	?___fladd+1,_powf$1900+1
  6397   0013B0  C011  F13E         	movff	?___fladd+2,_powf$1900+2
  6398   0013B4  C012  F13F         	movff	?___fladd+3,_powf$1900+3
  6399   0013B8  C190  F03C         	movff	powf@s2,___flsub@a
  6400   0013BC  C191  F03D         	movff	powf@s2+1,___flsub@a+1
  6401   0013C0  C192  F03E         	movff	powf@s2+2,___flsub@a+2
  6402   0013C4  C193  F03F         	movff	powf@s2+3,___flsub@a+3
  6403   0013C8  C13C  F038         	movff	_powf$1900,___flsub@b
  6404   0013CC  C13D  F039         	movff	_powf$1900+1,___flsub@b+1
  6405   0013D0  C13E  F03A         	movff	_powf$1900+2,___flsub@b+2
  6406   0013D4  C13F  F03B         	movff	_powf$1900+3,___flsub@b+3
  6407   0013D8  EC02  F038         	call	___flsub	;wreg free
  6408   0013DC  C038  F140         	movff	?___flsub,_powf$1901
  6409   0013E0  C039  F141         	movff	?___flsub+1,_powf$1901+1
  6410   0013E4  C03A  F142         	movff	?___flsub+2,_powf$1901+2
  6411   0013E8  C03B  F143         	movff	?___flsub+3,_powf$1901+3
  6412   0013EC  C150  F038         	movff	powf@r,___flsub@b
  6413   0013F0  C151  F039         	movff	powf@r+1,___flsub@b+1
  6414   0013F4  C152  F03A         	movff	powf@r+2,___flsub@b+2
  6415   0013F8  C153  F03B         	movff	powf@r+3,___flsub@b+3
  6416   0013FC  C140  F03C         	movff	_powf$1901,___flsub@a
  6417   001400  C141  F03D         	movff	_powf$1901+1,___flsub@a+1
  6418   001404  C142  F03E         	movff	_powf$1901+2,___flsub@a+2
  6419   001408  C143  F03F         	movff	_powf$1901+3,___flsub@a+3
  6420   00140C  EC02  F038         	call	___flsub	;wreg free
  6421   001410  C038  F134         	movff	?___flsub,powf@t_l
  6422   001414  C039  F135         	movff	?___flsub+1,powf@t_l+1
  6423   001418  C03A  F136         	movff	?___flsub+2,powf@t_l+2
  6424   00141C  C03B  F137         	movff	?___flsub+3,powf@t_l+3
  6425   001420  C174  F01F         	movff	powf@s_h,___flmul@b
  6426   001424  C175  F020         	movff	powf@s_h+1,___flmul@b+1
  6427   001428  C176  F021         	movff	powf@s_h+2,___flmul@b+2
  6428   00142C  C177  F022         	movff	powf@s_h+3,___flmul@b+3
  6429   001430  C170  F023         	movff	powf@t_h,___flmul@a
  6430   001434  C171  F024         	movff	powf@t_h+1,___flmul@a+1
  6431   001438  C172  F025         	movff	powf@t_h+2,___flmul@a+2
  6432   00143C  C173  F026         	movff	powf@t_h+3,___flmul@a+3
  6433   001440  ECA2  F01E         	call	___flmul	;wreg free
  6434   001444  C01F  F17C         	movff	?___flmul,powf@u
  6435   001448  C020  F17D         	movff	?___flmul+1,powf@u+1
  6436   00144C  C021  F17E         	movff	?___flmul+2,powf@u+2
  6437   001450  C022  F17F         	movff	?___flmul+3,powf@u+3
  6438   001454  C130  F023         	movff	powf@s_l,___flmul@a
  6439   001458  C131  F024         	movff	powf@s_l+1,___flmul@a+1
  6440   00145C  C132  F025         	movff	powf@s_l+2,___flmul@a+2
  6441   001460  C133  F026         	movff	powf@s_l+3,___flmul@a+3
  6442   001464  C170  F01F         	movff	powf@t_h,___flmul@b
  6443   001468  C171  F020         	movff	powf@t_h+1,___flmul@b+1
  6444   00146C  C172  F021         	movff	powf@t_h+2,___flmul@b+2
  6445   001470  C173  F022         	movff	powf@t_h+3,___flmul@b+3
  6446   001474  ECA2  F01E         	call	___flmul	;wreg free
  6447   001478  C01F  F00F         	movff	?___flmul,___fladd@b
  6448   00147C  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6449   001480  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6450   001484  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6451   001488  C160  F023         	movff	powf@s,___flmul@a
  6452   00148C  C161  F024         	movff	powf@s+1,___flmul@a+1
  6453   001490  C162  F025         	movff	powf@s+2,___flmul@a+2
  6454   001494  C163  F026         	movff	powf@s+3,___flmul@a+3
  6455   001498  C134  F01F         	movff	powf@t_l,___flmul@b
  6456   00149C  C135  F020         	movff	powf@t_l+1,___flmul@b+1
  6457   0014A0  C136  F021         	movff	powf@t_l+2,___flmul@b+2
  6458   0014A4  C137  F022         	movff	powf@t_l+3,___flmul@b+3
  6459   0014A8  ECA2  F01E         	call	___flmul	;wreg free
  6460   0014AC  C01F  F013         	movff	?___flmul,___fladd@a
  6461   0014B0  C020  F014         	movff	?___flmul+1,___fladd@a+1
  6462   0014B4  C021  F015         	movff	?___flmul+2,___fladd@a+2
  6463   0014B8  C022  F016         	movff	?___flmul+3,___fladd@a+3
  6464   0014BC  EC47  F01C         	call	___fladd	;wreg free
  6465   0014C0  C00F  F180         	movff	?___fladd,powf@v
  6466   0014C4  C010  F181         	movff	?___fladd+1,powf@v+1
  6467   0014C8  C011  F182         	movff	?___fladd+2,powf@v+2
  6468   0014CC  C012  F183         	movff	?___fladd+3,powf@v+3
  6469   0014D0  C17C  F00F         	movff	powf@u,___fladd@b
  6470   0014D4  C17D  F010         	movff	powf@u+1,___fladd@b+1
  6471   0014D8  C17E  F011         	movff	powf@u+2,___fladd@b+2
  6472   0014DC  C17F  F012         	movff	powf@u+3,___fladd@b+3
  6473   0014E0  C180  F013         	movff	powf@v,___fladd@a
  6474   0014E4  C181  F014         	movff	powf@v+1,___fladd@a+1
  6475   0014E8  C182  F015         	movff	powf@v+2,___fladd@a+2
  6476   0014EC  C183  F016         	movff	powf@v+3,___fladd@a+3
  6477   0014F0  EC47  F01C         	call	___fladd	;wreg free
  6478   0014F4  C00F  F1A0         	movff	?___fladd,powf@p_h
  6479   0014F8  C010  F1A1         	movff	?___fladd+1,powf@p_h+1
  6480   0014FC  C011  F1A2         	movff	?___fladd+2,powf@p_h+2
  6481   001500  C012  F1A3         	movff	?___fladd+3,powf@p_h+3
  6482   001504  C1A0  F198         	movff	powf@p_h,powf@is
  6483   001508  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  6484   00150C  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  6485   001510  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  6486   001514  0E00               	movlw	0
  6487   001516  0101               	movlb	1	; () banked
  6488   001518  1598               	andwf	powf@is& (0+255),w,b
  6489   00151A  6FA0               	movwf	powf@p_h& (0+255),b
  6490   00151C  0EF0               	movlw	240
  6491   00151E  1599               	andwf	(powf@is+1)& (0+255),w,b
  6492   001520  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  6493   001522  0EFF               	movlw	255
  6494   001524  159A               	andwf	(powf@is+2)& (0+255),w,b
  6495   001526  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  6496   001528  0EFF               	movlw	255
  6497   00152A  159B               	andwf	(powf@is+3)& (0+255),w,b
  6498   00152C  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  6499   00152E                     
  6500                           ; BSR set to: 1
  6501   00152E  C17C  F03C         	movff	powf@u,___flsub@a
  6502   001532  C17D  F03D         	movff	powf@u+1,___flsub@a+1
  6503   001536  C17E  F03E         	movff	powf@u+2,___flsub@a+2
  6504   00153A  C17F  F03F         	movff	powf@u+3,___flsub@a+3
  6505   00153E  C1A0  F038         	movff	powf@p_h,___flsub@b
  6506   001542  C1A1  F039         	movff	powf@p_h+1,___flsub@b+1
  6507   001546  C1A2  F03A         	movff	powf@p_h+2,___flsub@b+2
  6508   00154A  C1A3  F03B         	movff	powf@p_h+3,___flsub@b+3
  6509   00154E  EC02  F038         	call	___flsub	;wreg free
  6510   001552  C038  F19C         	movff	?___flsub,_powf$1895
  6511   001556  C039  F19D         	movff	?___flsub+1,_powf$1895+1
  6512   00155A  C03A  F19E         	movff	?___flsub+2,_powf$1895+2
  6513   00155E  C03B  F19F         	movff	?___flsub+3,_powf$1895+3
  6514   001562  C180  F038         	movff	powf@v,___flsub@b
  6515   001566  C181  F039         	movff	powf@v+1,___flsub@b+1
  6516   00156A  C182  F03A         	movff	powf@v+2,___flsub@b+2
  6517   00156E  C183  F03B         	movff	powf@v+3,___flsub@b+3
  6518   001572  C19C  F03C         	movff	_powf$1895,___flsub@a
  6519   001576  C19D  F03D         	movff	_powf$1895+1,___flsub@a+1
  6520   00157A  C19E  F03E         	movff	_powf$1895+2,___flsub@a+2
  6521   00157E  C19F  F03F         	movff	_powf$1895+3,___flsub@a+3
  6522   001582  EC02  F038         	call	___flsub	;wreg free
  6523   001586  C038  F16C         	movff	?___flsub,powf@p_l
  6524   00158A  C039  F16D         	movff	?___flsub+1,powf@p_l+1
  6525   00158E  C03A  F16E         	movff	?___flsub+2,powf@p_l+2
  6526   001592  C03B  F16F         	movff	?___flsub+3,powf@p_l+3
  6527   001596  C1A0  F01F         	movff	powf@p_h,___flmul@b
  6528   00159A  C1A1  F020         	movff	powf@p_h+1,___flmul@b+1
  6529   00159E  C1A2  F021         	movff	powf@p_h+2,___flmul@b+2
  6530   0015A2  C1A3  F022         	movff	powf@p_h+3,___flmul@b+3
  6531   0015A6  0E00               	movlw	0
  6532   0015A8  6E23               	movwf	___flmul@a^0,c
  6533   0015AA  0E40               	movlw	64
  6534   0015AC  6E24               	movwf	(___flmul@a+1)^0,c
  6535   0015AE  0E76               	movlw	118
  6536   0015B0  6E25               	movwf	(___flmul@a+2)^0,c
  6537   0015B2  0E3F               	movlw	63
  6538   0015B4  6E26               	movwf	(___flmul@a+3)^0,c
  6539   0015B6  ECA2  F01E         	call	___flmul	;wreg free
  6540   0015BA  C01F  F120         	movff	?___flmul,powf@z_h
  6541   0015BE  C020  F121         	movff	?___flmul+1,powf@z_h+1
  6542   0015C2  C021  F122         	movff	?___flmul+2,powf@z_h+2
  6543   0015C6  C022  F123         	movff	?___flmul+3,powf@z_h+3
  6544   0015CA  0E4F               	movlw	79
  6545   0015CC  6E23               	movwf	___flmul@a^0,c
  6546   0015CE  0E38               	movlw	56
  6547   0015D0  6E24               	movwf	(___flmul@a+1)^0,c
  6548   0015D2  0E76               	movlw	118
  6549   0015D4  6E25               	movwf	(___flmul@a+2)^0,c
  6550   0015D6  0E3F               	movlw	63
  6551   0015D8  6E26               	movwf	(___flmul@a+3)^0,c
  6552   0015DA  C16C  F01F         	movff	powf@p_l,___flmul@b
  6553   0015DE  C16D  F020         	movff	powf@p_l+1,___flmul@b+1
  6554   0015E2  C16E  F021         	movff	powf@p_l+2,___flmul@b+2
  6555   0015E6  C16F  F022         	movff	powf@p_l+3,___flmul@b+3
  6556   0015EA  ECA2  F01E         	call	___flmul	;wreg free
  6557   0015EE  C01F  F013         	movff	?___flmul,___fladd@a
  6558   0015F2  C020  F014         	movff	?___flmul+1,___fladd@a+1
  6559   0015F6  C021  F015         	movff	?___flmul+2,___fladd@a+2
  6560   0015FA  C022  F016         	movff	?___flmul+3,___fladd@a+3
  6561   0015FE  0EC6               	movlw	198
  6562   001600  6E23               	movwf	___flmul@a^0,c
  6563   001602  0E23               	movlw	35
  6564   001604  6E24               	movwf	(___flmul@a+1)^0,c
  6565   001606  0EF6               	movlw	246
  6566   001608  6E25               	movwf	(___flmul@a+2)^0,c
  6567   00160A  0EB8               	movlw	184
  6568   00160C  6E26               	movwf	(___flmul@a+3)^0,c
  6569   00160E  C1A0  F01F         	movff	powf@p_h,___flmul@b
  6570   001612  C1A1  F020         	movff	powf@p_h+1,___flmul@b+1
  6571   001616  C1A2  F021         	movff	powf@p_h+2,___flmul@b+2
  6572   00161A  C1A3  F022         	movff	powf@p_h+3,___flmul@b+3
  6573   00161E  ECA2  F01E         	call	___flmul	;wreg free
  6574   001622  C01F  F00F         	movff	?___flmul,___fladd@b
  6575   001626  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6576   00162A  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6577   00162E  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6578   001632  EC47  F01C         	call	___fladd	;wreg free
  6579   001636  C00F  F15C         	movff	?___fladd,_powf$1899
  6580   00163A  C010  F15D         	movff	?___fladd+1,_powf$1899+1
  6581   00163E  C011  F15E         	movff	?___fladd+2,_powf$1899+2
  6582   001642  C012  F15F         	movff	?___fladd+3,_powf$1899+3
  6583   001646  C15C  F00F         	movff	_powf$1899,___fladd@b
  6584   00164A  C15D  F010         	movff	_powf$1899+1,___fladd@b+1
  6585   00164E  C15E  F011         	movff	_powf$1899+2,___fladd@b+2
  6586   001652  C15F  F012         	movff	_powf$1899+3,___fladd@b+3
  6587   001656  C1A4  F068         	movff	powf@k,??_powf
  6588   00165A  C1A5  F069         	movff	powf@k+1,??_powf+1
  6589   00165E  0100               	movlb	0	; () banked
  6590   001660  90D8               	bcf	status,0,c
  6591   001662  3768               	rlcf	??_powf& (0+255),f,b
  6592   001664  3769               	rlcf	(??_powf+1)& (0+255),f,b
  6593   001666  90D8               	bcf	status,0,c
  6594   001668  3768               	rlcf	??_powf& (0+255),f,b
  6595   00166A  3769               	rlcf	(??_powf+1)& (0+255),f,b
  6596   00166C  0E5B               	movlw	low _dp_l
  6597   00166E  2568               	addwf	??_powf& (0+255),w,b
  6598   001670  6EF6               	movwf	tblptrl,c
  6599   001672  0E7E               	movlw	high _dp_l
  6600   001674  2169               	addwfc	(??_powf+1)& (0+255),w,b
  6601   001676  6EF7               	movwf	tblptrh,c
  6602   001678                     	if	0	;There are less than 3 active tblptr bytes
  6603   001678                     	endif
  6604   001678  0009               	tblrd		*+
  6605   00167A  CFF5 F013          	movff	tablat,___fladd@a
  6606   00167E  0009               	tblrd		*+
  6607   001680  CFF5 F014          	movff	tablat,___fladd@a+1
  6608   001684  0009               	tblrd		*+
  6609   001686  CFF5 F015          	movff	tablat,___fladd@a+2
  6610   00168A  000A               	tblrd		*-
  6611   00168C  CFF5 F016          	movff	tablat,___fladd@a+3
  6612   001690  EC47  F01C         	call	___fladd	;wreg free
  6613   001694  C00F  F124         	movff	?___fladd,powf@z_l
  6614   001698  C010  F125         	movff	?___fladd+1,powf@z_l+1
  6615   00169C  C011  F126         	movff	?___fladd+2,powf@z_l+2
  6616   0016A0  C012  F127         	movff	?___fladd+3,powf@z_l+3
  6617   0016A4  C188  F001         	movff	powf@n,___xxtofl@val
  6618   0016A8  C189  F002         	movff	powf@n+1,___xxtofl@val+1
  6619   0016AC  C18A  F003         	movff	powf@n+2,___xxtofl@val+2
  6620   0016B0  C18B  F004         	movff	powf@n+3,___xxtofl@val+3
  6621   0016B4  0E01               	movlw	1
  6622   0016B6  EC66  F02A         	call	___xxtofl
  6623   0016BA  C001  F1B0         	movff	?___xxtofl,powf@t
  6624   0016BE  C002  F1B1         	movff	?___xxtofl+1,powf@t+1
  6625   0016C2  C003  F1B2         	movff	?___xxtofl+2,powf@t+2
  6626   0016C6  C004  F1B3         	movff	?___xxtofl+3,powf@t+3
  6627   0016CA  C124  F013         	movff	powf@z_l,___fladd@a
  6628   0016CE  C125  F014         	movff	powf@z_l+1,___fladd@a+1
  6629   0016D2  C126  F015         	movff	powf@z_l+2,___fladd@a+2
  6630   0016D6  C127  F016         	movff	powf@z_l+3,___fladd@a+3
  6631   0016DA  C120  F00F         	movff	powf@z_h,___fladd@b
  6632   0016DE  C121  F010         	movff	powf@z_h+1,___fladd@b+1
  6633   0016E2  C122  F011         	movff	powf@z_h+2,___fladd@b+2
  6634   0016E6  C123  F012         	movff	powf@z_h+3,___fladd@b+3
  6635   0016EA  EC47  F01C         	call	___fladd	;wreg free
  6636   0016EE  C00F  F15C         	movff	?___fladd,_powf$1899
  6637   0016F2  C010  F15D         	movff	?___fladd+1,_powf$1899+1
  6638   0016F6  C011  F15E         	movff	?___fladd+2,_powf$1899+2
  6639   0016FA  C012  F15F         	movff	?___fladd+3,_powf$1899+3
  6640   0016FE  C1A4  F068         	movff	powf@k,??_powf
  6641   001702  C1A5  F069         	movff	powf@k+1,??_powf+1
  6642   001706  0100               	movlb	0	; () banked
  6643   001708  90D8               	bcf	status,0,c
  6644   00170A  3768               	rlcf	??_powf& (0+255),f,b
  6645   00170C  3769               	rlcf	(??_powf+1)& (0+255),f,b
  6646   00170E  90D8               	bcf	status,0,c
  6647   001710  3768               	rlcf	??_powf& (0+255),f,b
  6648   001712  3769               	rlcf	(??_powf+1)& (0+255),f,b
  6649   001714  0E63               	movlw	low _dp_h
  6650   001716  2568               	addwf	??_powf& (0+255),w,b
  6651   001718  6EF6               	movwf	tblptrl,c
  6652   00171A  0E7E               	movlw	high _dp_h
  6653   00171C  2169               	addwfc	(??_powf+1)& (0+255),w,b
  6654   00171E  6EF7               	movwf	tblptrh,c
  6655   001720                     	if	0	;There are less than 3 active tblptr bytes
  6656   001720                     	endif
  6657   001720  0009               	tblrd		*+
  6658   001722  CFF5 F013          	movff	tablat,___fladd@a
  6659   001726  0009               	tblrd		*+
  6660   001728  CFF5 F014          	movff	tablat,___fladd@a+1
  6661   00172C  0009               	tblrd		*+
  6662   00172E  CFF5 F015          	movff	tablat,___fladd@a+2
  6663   001732  000A               	tblrd		*-
  6664   001734  CFF5 F016          	movff	tablat,___fladd@a+3
  6665   001738  C15C  F00F         	movff	_powf$1899,___fladd@b
  6666   00173C  C15D  F010         	movff	_powf$1899+1,___fladd@b+1
  6667   001740  C15E  F011         	movff	_powf$1899+2,___fladd@b+2
  6668   001744  C15F  F012         	movff	_powf$1899+3,___fladd@b+3
  6669   001748  EC47  F01C         	call	___fladd	;wreg free
  6670   00174C  C00F  F108         	movff	?___fladd,_powf$1902
  6671   001750  C010  F109         	movff	?___fladd+1,_powf$1902+1
  6672   001754  C011  F10A         	movff	?___fladd+2,_powf$1902+2
  6673   001758  C012  F10B         	movff	?___fladd+3,_powf$1902+3
  6674   00175C  C108  F00F         	movff	_powf$1902,___fladd@b
  6675   001760  C109  F010         	movff	_powf$1902+1,___fladd@b+1
  6676   001764  C10A  F011         	movff	_powf$1902+2,___fladd@b+2
  6677   001768  C10B  F012         	movff	_powf$1902+3,___fladd@b+3
  6678   00176C  C1B0  F013         	movff	powf@t,___fladd@a
  6679   001770  C1B1  F014         	movff	powf@t+1,___fladd@a+1
  6680   001774  C1B2  F015         	movff	powf@t+2,___fladd@a+2
  6681   001778  C1B3  F016         	movff	powf@t+3,___fladd@a+3
  6682   00177C  EC47  F01C         	call	___fladd	;wreg free
  6683   001780  C00F  F18C         	movff	?___fladd,powf@t1
  6684   001784  C010  F18D         	movff	?___fladd+1,powf@t1+1
  6685   001788  C011  F18E         	movff	?___fladd+2,powf@t1+2
  6686   00178C  C012  F18F         	movff	?___fladd+3,powf@t1+3
  6687   001790  C18C  F198         	movff	powf@t1,powf@is
  6688   001794  C18D  F199         	movff	powf@t1+1,powf@is+1
  6689   001798  C18E  F19A         	movff	powf@t1+2,powf@is+2
  6690   00179C  C18F  F19B         	movff	powf@t1+3,powf@is+3
  6691   0017A0  0E00               	movlw	0
  6692   0017A2  0101               	movlb	1	; () banked
  6693   0017A4  1598               	andwf	powf@is& (0+255),w,b
  6694   0017A6  6F8C               	movwf	powf@t1& (0+255),b
  6695   0017A8  0EF0               	movlw	240
  6696   0017AA  1599               	andwf	(powf@is+1)& (0+255),w,b
  6697   0017AC  6F8D               	movwf	(powf@t1+1)& (0+255),b
  6698   0017AE  0EFF               	movlw	255
  6699   0017B0  159A               	andwf	(powf@is+2)& (0+255),w,b
  6700   0017B2  6F8E               	movwf	(powf@t1+2)& (0+255),b
  6701   0017B4  0EFF               	movlw	255
  6702   0017B6  159B               	andwf	(powf@is+3)& (0+255),w,b
  6703   0017B8  6F8F               	movwf	(powf@t1+3)& (0+255),b
  6704   0017BA                     
  6705                           ; BSR set to: 1
  6706   0017BA  C1B0  F03C         	movff	powf@t,___flsub@a
  6707   0017BE  C1B1  F03D         	movff	powf@t+1,___flsub@a+1
  6708   0017C2  C1B2  F03E         	movff	powf@t+2,___flsub@a+2
  6709   0017C6  C1B3  F03F         	movff	powf@t+3,___flsub@a+3
  6710   0017CA  C18C  F038         	movff	powf@t1,___flsub@b
  6711   0017CE  C18D  F039         	movff	powf@t1+1,___flsub@b+1
  6712   0017D2  C18E  F03A         	movff	powf@t1+2,___flsub@b+2
  6713   0017D6  C18F  F03B         	movff	powf@t1+3,___flsub@b+3
  6714   0017DA  EC02  F038         	call	___flsub	;wreg free
  6715   0017DE  C038  F19C         	movff	?___flsub,_powf$1895
  6716   0017E2  C039  F19D         	movff	?___flsub+1,_powf$1895+1
  6717   0017E6  C03A  F19E         	movff	?___flsub+2,_powf$1895+2
  6718   0017EA  C03B  F19F         	movff	?___flsub+3,_powf$1895+3
  6719   0017EE  C1A4  F068         	movff	powf@k,??_powf
  6720   0017F2  C1A5  F069         	movff	powf@k+1,??_powf+1
  6721   0017F6  0100               	movlb	0	; () banked
  6722   0017F8  90D8               	bcf	status,0,c
  6723   0017FA  3768               	rlcf	??_powf& (0+255),f,b
  6724   0017FC  3769               	rlcf	(??_powf+1)& (0+255),f,b
  6725   0017FE  90D8               	bcf	status,0,c
  6726   001800  3768               	rlcf	??_powf& (0+255),f,b
  6727   001802  3769               	rlcf	(??_powf+1)& (0+255),f,b
  6728   001804  0E63               	movlw	low _dp_h
  6729   001806  2568               	addwf	??_powf& (0+255),w,b
  6730   001808  6EF6               	movwf	tblptrl,c
  6731   00180A  0E7E               	movlw	high _dp_h
  6732   00180C  2169               	addwfc	(??_powf+1)& (0+255),w,b
  6733   00180E  6EF7               	movwf	tblptrh,c
  6734   001810                     	if	0	;There are less than 3 active tblptr bytes
  6735   001810                     	endif
  6736   001810  0009               	tblrd		*+
  6737   001812  CFF5 F03C          	movff	tablat,___flsub@a
  6738   001816  0009               	tblrd		*+
  6739   001818  CFF5 F03D          	movff	tablat,___flsub@a+1
  6740   00181C  0009               	tblrd		*+
  6741   00181E  CFF5 F03E          	movff	tablat,___flsub@a+2
  6742   001822  000A               	tblrd		*-
  6743   001824  CFF5 F03F          	movff	tablat,___flsub@a+3
  6744   001828  C19C  F038         	movff	_powf$1895,___flsub@b
  6745   00182C  C19D  F039         	movff	_powf$1895+1,___flsub@b+1
  6746   001830  C19E  F03A         	movff	_powf$1895+2,___flsub@b+2
  6747   001834  C19F  F03B         	movff	_powf$1895+3,___flsub@b+3
  6748   001838  EC02  F038         	call	___flsub	;wreg free
  6749   00183C  C038  F140         	movff	?___flsub,_powf$1901
  6750   001840  C039  F141         	movff	?___flsub+1,_powf$1901+1
  6751   001844  C03A  F142         	movff	?___flsub+2,_powf$1901+2
  6752   001848  C03B  F143         	movff	?___flsub+3,_powf$1901+3
  6753   00184C  C120  F03C         	movff	powf@z_h,___flsub@a
  6754   001850  C121  F03D         	movff	powf@z_h+1,___flsub@a+1
  6755   001854  C122  F03E         	movff	powf@z_h+2,___flsub@a+2
  6756   001858  C123  F03F         	movff	powf@z_h+3,___flsub@a+3
  6757   00185C  C140  F038         	movff	_powf$1901,___flsub@b
  6758   001860  C141  F039         	movff	_powf$1901+1,___flsub@b+1
  6759   001864  C142  F03A         	movff	_powf$1901+2,___flsub@b+2
  6760   001868  C143  F03B         	movff	_powf$1901+3,___flsub@b+3
  6761   00186C  EC02  F038         	call	___flsub	;wreg free
  6762   001870  C038  F10C         	movff	?___flsub,_powf$1903
  6763   001874  C039  F10D         	movff	?___flsub+1,_powf$1903+1
  6764   001878  C03A  F10E         	movff	?___flsub+2,_powf$1903+2
  6765   00187C  C03B  F10F         	movff	?___flsub+3,_powf$1903+3
  6766   001880  C124  F038         	movff	powf@z_l,___flsub@b
  6767   001884  C125  F039         	movff	powf@z_l+1,___flsub@b+1
  6768   001888  C126  F03A         	movff	powf@z_l+2,___flsub@b+2
  6769   00188C  C127  F03B         	movff	powf@z_l+3,___flsub@b+3
  6770   001890  C10C  F03C         	movff	_powf$1903,___flsub@a
  6771   001894  C10D  F03D         	movff	_powf$1903+1,___flsub@a+1
  6772   001898  C10E  F03E         	movff	_powf$1903+2,___flsub@a+2
  6773   00189C  C10F  F03F         	movff	_powf$1903+3,___flsub@a+3
  6774   0018A0  EC02  F038         	call	___flsub	;wreg free
  6775   0018A4  C038  F11C         	movff	?___flsub,powf@t2
  6776   0018A8  C039  F11D         	movff	?___flsub+1,powf@t2+1
  6777   0018AC  C03A  F11E         	movff	?___flsub+2,powf@t2+2
  6778   0018B0  C03B  F11F         	movff	?___flsub+3,powf@t2+3
  6779   0018B4                     l8187:
  6780   0018B4  C064  F198         	movff	powf@y,powf@is
  6781   0018B8  C065  F199         	movff	powf@y+1,powf@is+1
  6782   0018BC  C066  F19A         	movff	powf@y+2,powf@is+2
  6783   0018C0  C067  F19B         	movff	powf@y+3,powf@is+3
  6784   0018C4  0E00               	movlw	0
  6785   0018C6  0101               	movlb	1	; () banked
  6786   0018C8  1598               	andwf	powf@is& (0+255),w,b
  6787   0018CA  6F2C               	movwf	powf@y1& (0+255),b
  6788   0018CC  0EF0               	movlw	240
  6789   0018CE  1599               	andwf	(powf@is+1)& (0+255),w,b
  6790   0018D0  6F2D               	movwf	(powf@y1+1)& (0+255),b
  6791   0018D2  0EFF               	movlw	255
  6792   0018D4  159A               	andwf	(powf@is+2)& (0+255),w,b
  6793   0018D6  6F2E               	movwf	(powf@y1+2)& (0+255),b
  6794   0018D8  0EFF               	movlw	255
  6795   0018DA  159B               	andwf	(powf@is+3)& (0+255),w,b
  6796   0018DC  6F2F               	movwf	(powf@y1+3)& (0+255),b
  6797   0018DE                     
  6798                           ; BSR set to: 1
  6799   0018DE  C18C  F023         	movff	powf@t1,___flmul@a
  6800   0018E2  C18D  F024         	movff	powf@t1+1,___flmul@a+1
  6801   0018E6  C18E  F025         	movff	powf@t1+2,___flmul@a+2
  6802   0018EA  C18F  F026         	movff	powf@t1+3,___flmul@a+3
  6803   0018EE  C12C  F03C         	movff	powf@y1,___flsub@a
  6804   0018F2  C12D  F03D         	movff	powf@y1+1,___flsub@a+1
  6805   0018F6  C12E  F03E         	movff	powf@y1+2,___flsub@a+2
  6806   0018FA  C12F  F03F         	movff	powf@y1+3,___flsub@a+3
  6807   0018FE  C064  F038         	movff	powf@y,___flsub@b
  6808   001902  C065  F039         	movff	powf@y+1,___flsub@b+1
  6809   001906  C066  F03A         	movff	powf@y+2,___flsub@b+2
  6810   00190A  C067  F03B         	movff	powf@y+3,___flsub@b+3
  6811   00190E  EC02  F038         	call	___flsub	;wreg free
  6812   001912  C038  F01F         	movff	?___flsub,___flmul@b
  6813   001916  C039  F020         	movff	?___flsub+1,___flmul@b+1
  6814   00191A  C03A  F021         	movff	?___flsub+2,___flmul@b+2
  6815   00191E  C03B  F022         	movff	?___flsub+3,___flmul@b+3
  6816   001922  ECA2  F01E         	call	___flmul	;wreg free
  6817   001926  C01F  F110         	movff	?___flmul,_powf$1904
  6818   00192A  C020  F111         	movff	?___flmul+1,_powf$1904+1
  6819   00192E  C021  F112         	movff	?___flmul+2,_powf$1904+2
  6820   001932  C022  F113         	movff	?___flmul+3,_powf$1904+3
  6821   001936  C110  F00F         	movff	_powf$1904,___fladd@b
  6822   00193A  C111  F010         	movff	_powf$1904+1,___fladd@b+1
  6823   00193E  C112  F011         	movff	_powf$1904+2,___fladd@b+2
  6824   001942  C113  F012         	movff	_powf$1904+3,___fladd@b+3
  6825   001946  C11C  F023         	movff	powf@t2,___flmul@a
  6826   00194A  C11D  F024         	movff	powf@t2+1,___flmul@a+1
  6827   00194E  C11E  F025         	movff	powf@t2+2,___flmul@a+2
  6828   001952  C11F  F026         	movff	powf@t2+3,___flmul@a+3
  6829   001956  C064  F01F         	movff	powf@y,___flmul@b
  6830   00195A  C065  F020         	movff	powf@y+1,___flmul@b+1
  6831   00195E  C066  F021         	movff	powf@y+2,___flmul@b+2
  6832   001962  C067  F022         	movff	powf@y+3,___flmul@b+3
  6833   001966  ECA2  F01E         	call	___flmul	;wreg free
  6834   00196A  C01F  F013         	movff	?___flmul,___fladd@a
  6835   00196E  C020  F014         	movff	?___flmul+1,___fladd@a+1
  6836   001972  C021  F015         	movff	?___flmul+2,___fladd@a+2
  6837   001976  C022  F016         	movff	?___flmul+3,___fladd@a+3
  6838   00197A  EC47  F01C         	call	___fladd	;wreg free
  6839   00197E  C00F  F16C         	movff	?___fladd,powf@p_l
  6840   001982  C010  F16D         	movff	?___fladd+1,powf@p_l+1
  6841   001986  C011  F16E         	movff	?___fladd+2,powf@p_l+2
  6842   00198A  C012  F16F         	movff	?___fladd+3,powf@p_l+3
  6843   00198E  C12C  F01F         	movff	powf@y1,___flmul@b
  6844   001992  C12D  F020         	movff	powf@y1+1,___flmul@b+1
  6845   001996  C12E  F021         	movff	powf@y1+2,___flmul@b+2
  6846   00199A  C12F  F022         	movff	powf@y1+3,___flmul@b+3
  6847   00199E  C18C  F023         	movff	powf@t1,___flmul@a
  6848   0019A2  C18D  F024         	movff	powf@t1+1,___flmul@a+1
  6849   0019A6  C18E  F025         	movff	powf@t1+2,___flmul@a+2
  6850   0019AA  C18F  F026         	movff	powf@t1+3,___flmul@a+3
  6851   0019AE  ECA2  F01E         	call	___flmul	;wreg free
  6852   0019B2  C01F  F1A0         	movff	?___flmul,powf@p_h
  6853   0019B6  C020  F1A1         	movff	?___flmul+1,powf@p_h+1
  6854   0019BA  C021  F1A2         	movff	?___flmul+2,powf@p_h+2
  6855   0019BE  C022  F1A3         	movff	?___flmul+3,powf@p_h+3
  6856   0019C2  C1A0  F00F         	movff	powf@p_h,___fladd@b
  6857   0019C6  C1A1  F010         	movff	powf@p_h+1,___fladd@b+1
  6858   0019CA  C1A2  F011         	movff	powf@p_h+2,___fladd@b+2
  6859   0019CE  C1A3  F012         	movff	powf@p_h+3,___fladd@b+3
  6860   0019D2  C16C  F013         	movff	powf@p_l,___fladd@a
  6861   0019D6  C16D  F014         	movff	powf@p_l+1,___fladd@a+1
  6862   0019DA  C16E  F015         	movff	powf@p_l+2,___fladd@a+2
  6863   0019DE  C16F  F016         	movff	powf@p_l+3,___fladd@a+3
  6864   0019E2  EC47  F01C         	call	___fladd	;wreg free
  6865   0019E6  C00F  F1B4         	movff	?___fladd,powf@z
  6866   0019EA  C010  F1B5         	movff	?___fladd+1,powf@z+1
  6867   0019EE  C011  F1B6         	movff	?___fladd+2,powf@z+2
  6868   0019F2  C012  F1B7         	movff	?___fladd+3,powf@z+3
  6869   0019F6  C1B4  F1A8         	movff	powf@z,powf@j
  6870   0019FA  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  6871   0019FE  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  6872   001A02  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  6873   001A06  0101               	movlb	1	; () banked
  6874   001A08  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  6875   001A0A  EF13  F00D         	goto	u10431
  6876   001A0E  05A8               	decf	powf@j& (0+255),w,b
  6877   001A10  0E00               	movlw	0
  6878   001A12  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  6879   001A14  0E00               	movlw	0
  6880   001A16  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  6881   001A18  0E43               	movlw	67
  6882   001A1A  59AB               	subwfb	(powf@j+3)& (0+255),w,b
  6883   001A1C  A0D8               	btfss	status,0,c
  6884   001A1E  EF13  F00D         	goto	u10431
  6885   001A22  EF15  F00D         	goto	u10430
  6886   001A26                     u10431:
  6887   001A26  EF17  F00D         	goto	l8209
  6888   001A2A                     u10430:
  6889   001A2A  EFA1  F003         	goto	l8009
  6890   001A2E                     l8209:
  6891                           
  6892                           ; BSR set to: 1
  6893   001A2E  0E43               	movlw	67
  6894   001A30  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6895   001A32  11A8               	iorwf	powf@j& (0+255),w,b
  6896   001A34  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6897   001A36  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  6898   001A38  A4D8               	btfss	status,2,c
  6899   001A3A  EF21  F00D         	goto	u10441
  6900   001A3E  EF23  F00D         	goto	u10440
  6901   001A42                     u10441:
  6902   001A42  EF62  F00D         	goto	l8219
  6903   001A46                     u10440:
  6904   001A46                     
  6905                           ; BSR set to: 1
  6906   001A46  C1A0  F03C         	movff	powf@p_h,___flsub@a
  6907   001A4A  C1A1  F03D         	movff	powf@p_h+1,___flsub@a+1
  6908   001A4E  C1A2  F03E         	movff	powf@p_h+2,___flsub@a+2
  6909   001A52  C1A3  F03F         	movff	powf@p_h+3,___flsub@a+3
  6910   001A56  C1B4  F038         	movff	powf@z,___flsub@b
  6911   001A5A  C1B5  F039         	movff	powf@z+1,___flsub@b+1
  6912   001A5E  C1B6  F03A         	movff	powf@z+2,___flsub@b+2
  6913   001A62  C1B7  F03B         	movff	powf@z+3,___flsub@b+3
  6914   001A66  EC02  F038         	call	___flsub	;wreg free
  6915   001A6A  C038  F040         	movff	?___flsub,___flge@ff1
  6916   001A6E  C039  F041         	movff	?___flsub+1,___flge@ff1+1
  6917   001A72  C03A  F042         	movff	?___flsub+2,___flge@ff1+2
  6918   001A76  C03B  F043         	movff	?___flsub+3,___flge@ff1+3
  6919   001A7A  0E3C               	movlw	60
  6920   001A7C  6E13               	movwf	___fladd@a^0,c
  6921   001A7E  0EAA               	movlw	170
  6922   001A80  6E14               	movwf	(___fladd@a+1)^0,c
  6923   001A82  0E38               	movlw	56
  6924   001A84  6E15               	movwf	(___fladd@a+2)^0,c
  6925   001A86  0E33               	movlw	51
  6926   001A88  6E16               	movwf	(___fladd@a+3)^0,c
  6927   001A8A  C16C  F00F         	movff	powf@p_l,___fladd@b
  6928   001A8E  C16D  F010         	movff	powf@p_l+1,___fladd@b+1
  6929   001A92  C16E  F011         	movff	powf@p_l+2,___fladd@b+2
  6930   001A96  C16F  F012         	movff	powf@p_l+3,___fladd@b+3
  6931   001A9A  EC47  F01C         	call	___fladd	;wreg free
  6932   001A9E  C00F  F044         	movff	?___fladd,___flge@ff2
  6933   001AA2  C010  F045         	movff	?___fladd+1,___flge@ff2+1
  6934   001AA6  C011  F046         	movff	?___fladd+2,___flge@ff2+2
  6935   001AAA  C012  F047         	movff	?___fladd+3,___flge@ff2+3
  6936   001AAE  ECBA  F031         	call	___flge	;wreg free
  6937   001AB2  B0D8               	btfsc	status,0,c
  6938   001AB4  EF5E  F00D         	goto	u10451
  6939   001AB8  EF60  F00D         	goto	u10450
  6940   001ABC                     u10451:
  6941   001ABC  EFD5  F00D         	goto	l8235
  6942   001AC0                     u10450:
  6943   001AC0  EFA1  F003         	goto	l8009
  6944   001AC4                     l8219:
  6945                           
  6946                           ; BSR set to: 1
  6947   001AC4  0EFF               	movlw	255
  6948   001AC6  15A8               	andwf	powf@j& (0+255),w,b
  6949   001AC8  0100               	movlb	0	; () banked
  6950   001ACA  6F68               	movwf	??_powf& (0+255),b
  6951   001ACC  0EFF               	movlw	255
  6952   001ACE  0101               	movlb	1	; () banked
  6953   001AD0  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6954   001AD2  0100               	movlb	0	; () banked
  6955   001AD4  6F69               	movwf	(??_powf+1)& (0+255),b
  6956   001AD6  0EFF               	movlw	255
  6957   001AD8  0101               	movlb	1	; () banked
  6958   001ADA  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6959   001ADC  0100               	movlb	0	; () banked
  6960   001ADE  6F6A               	movwf	(??_powf+2)& (0+255),b
  6961   001AE0  0E7F               	movlw	127
  6962   001AE2  0101               	movlb	1	; () banked
  6963   001AE4  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6964   001AE6  0100               	movlb	0	; () banked
  6965   001AE8  6F6B               	movwf	(??_powf+3)& (0+255),b
  6966   001AEA  BF6B               	btfsc	(??_powf+3)& (0+255),7,b
  6967   001AEC  EF84  F00D         	goto	u10461
  6968   001AF0  0568               	decf	??_powf& (0+255),w,b
  6969   001AF2  0E00               	movlw	0
  6970   001AF4  5969               	subwfb	(??_powf+1)& (0+255),w,b
  6971   001AF6  0E16               	movlw	22
  6972   001AF8  596A               	subwfb	(??_powf+2)& (0+255),w,b
  6973   001AFA  0E43               	movlw	67
  6974   001AFC  596B               	subwfb	(??_powf+3)& (0+255),w,b
  6975   001AFE  A0D8               	btfss	status,0,c
  6976   001B00  EF84  F00D         	goto	u10461
  6977   001B04  EF86  F00D         	goto	u10460
  6978   001B08                     u10461:
  6979   001B08  EF90  F00D         	goto	l8227
  6980   001B0C                     u10460:
  6981   001B0C                     
  6982                           ; BSR set to: 0
  6983   001B0C  0E00               	movlw	0
  6984   001B0E  6F60               	movwf	?_powf& (0+255),b
  6985   001B10  0E00               	movlw	0
  6986   001B12  6F61               	movwf	(?_powf+1)& (0+255),b
  6987   001B14  0E00               	movlw	0
  6988   001B16  6F62               	movwf	(?_powf+2)& (0+255),b
  6989   001B18  0E00               	movlw	0
  6990   001B1A  6F63               	movwf	(?_powf+3)& (0+255),b
  6991   001B1C  EF61  F012         	goto	l1340
  6992   001B20                     l8227:
  6993                           
  6994                           ; BSR set to: 0
  6995   001B20  0E16               	movlw	22
  6996   001B22  0101               	movlb	1	; () banked
  6997   001B24  19AA               	xorwf	(powf@j+2)& (0+255),w,b
  6998   001B26  E109               	bnz	u10471
  6999   001B28  0EC3               	movlw	195
  7000   001B2A  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  7001   001B2C  11A8               	iorwf	powf@j& (0+255),w,b
  7002   001B2E  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  7003   001B30  A4D8               	btfss	status,2,c
  7004   001B32  EF9D  F00D         	goto	u10471
  7005   001B36  EF9F  F00D         	goto	u10470
  7006   001B3A                     u10471:
  7007   001B3A  EFD5  F00D         	goto	l8235
  7008   001B3E                     u10470:
  7009   001B3E                     
  7010                           ; BSR set to: 1
  7011   001B3E  C1A0  F03C         	movff	powf@p_h,___flsub@a
  7012   001B42  C1A1  F03D         	movff	powf@p_h+1,___flsub@a+1
  7013   001B46  C1A2  F03E         	movff	powf@p_h+2,___flsub@a+2
  7014   001B4A  C1A3  F03F         	movff	powf@p_h+3,___flsub@a+3
  7015   001B4E  C1B4  F038         	movff	powf@z,___flsub@b
  7016   001B52  C1B5  F039         	movff	powf@z+1,___flsub@b+1
  7017   001B56  C1B6  F03A         	movff	powf@z+2,___flsub@b+2
  7018   001B5A  C1B7  F03B         	movff	powf@z+3,___flsub@b+3
  7019   001B5E  EC02  F038         	call	___flsub	;wreg free
  7020   001B62  C038  F040         	movff	?___flsub,___flge@ff1
  7021   001B66  C039  F041         	movff	?___flsub+1,___flge@ff1+1
  7022   001B6A  C03A  F042         	movff	?___flsub+2,___flge@ff1+2
  7023   001B6E  C03B  F043         	movff	?___flsub+3,___flge@ff1+3
  7024   001B72  C16C  F044         	movff	powf@p_l,___flge@ff2
  7025   001B76  C16D  F045         	movff	powf@p_l+1,___flge@ff2+1
  7026   001B7A  C16E  F046         	movff	powf@p_l+2,___flge@ff2+2
  7027   001B7E  C16F  F047         	movff	powf@p_l+3,___flge@ff2+3
  7028   001B82  ECBA  F031         	call	___flge	;wreg free
  7029   001B86  A0D8               	btfss	status,0,c
  7030   001B88  EFC8  F00D         	goto	u10481
  7031   001B8C  EFCA  F00D         	goto	u10480
  7032   001B90                     u10481:
  7033   001B90  EFD5  F00D         	goto	l8235
  7034   001B94                     u10480:
  7035   001B94  0E00               	movlw	0
  7036   001B96  0100               	movlb	0	; () banked
  7037   001B98  6F60               	movwf	?_powf& (0+255),b
  7038   001B9A  0E00               	movlw	0
  7039   001B9C  6F61               	movwf	(?_powf+1)& (0+255),b
  7040   001B9E  0E00               	movlw	0
  7041   001BA0  6F62               	movwf	(?_powf+2)& (0+255),b
  7042   001BA2  0E00               	movlw	0
  7043   001BA4  6F63               	movwf	(?_powf+3)& (0+255),b
  7044   001BA6  EF61  F012         	goto	l1340
  7045   001BAA                     l8235:
  7046   001BAA  0EFF               	movlw	255
  7047   001BAC  0101               	movlb	1	; () banked
  7048   001BAE  15A8               	andwf	powf@j& (0+255),w,b
  7049   001BB0  6F28               	movwf	powf@i& (0+255),b
  7050   001BB2  0EFF               	movlw	255
  7051   001BB4  15A9               	andwf	(powf@j+1)& (0+255),w,b
  7052   001BB6  6F29               	movwf	(powf@i+1)& (0+255),b
  7053   001BB8  0EFF               	movlw	255
  7054   001BBA  15AA               	andwf	(powf@j+2)& (0+255),w,b
  7055   001BBC  6F2A               	movwf	(powf@i+2)& (0+255),b
  7056   001BBE  0E7F               	movlw	127
  7057   001BC0  15AB               	andwf	(powf@j+3)& (0+255),w,b
  7058   001BC2  6F2B               	movwf	(powf@i+3)& (0+255),b
  7059   001BC4  0E17               	movlw	23
  7060   001BC6  0100               	movlb	0	; () banked
  7061   001BC8  6F68               	movwf	??_powf& (0+255),b
  7062   001BCA  C128  F069         	movff	powf@i,??_powf+1
  7063   001BCE  C129  F06A         	movff	powf@i+1,??_powf+2
  7064   001BD2  C12A  F06B         	movff	powf@i+2,??_powf+3
  7065   001BD6  C12B  F06C         	movff	powf@i+3,??_powf+4
  7066   001BDA                     u10495:
  7067   001BDA  6768               	tstfsz	??_powf& (0+255),b
  7068   001BDC  EFF2  F00D         	goto	u10496
  7069   001BE0  EFFA  F00D         	goto	u10497
  7070   001BE4                     u10496:
  7071   001BE4  356C               	rlcf	(??_powf+4)& (0+255),w,b
  7072   001BE6  336C               	rrcf	(??_powf+4)& (0+255),f,b
  7073   001BE8  336B               	rrcf	(??_powf+3)& (0+255),f,b
  7074   001BEA  336A               	rrcf	(??_powf+2)& (0+255),f,b
  7075   001BEC  3369               	rrcf	(??_powf+1)& (0+255),f,b
  7076   001BEE  2F68               	decfsz	??_powf& (0+255),f,b
  7077   001BF0  EFED  F00D         	goto	u10495
  7078   001BF4                     u10497:
  7079   001BF4  0E81               	movlw	129
  7080   001BF6  0100               	movlb	0	; () banked
  7081   001BF8  2569               	addwf	(??_powf+1)& (0+255),w,b
  7082   001BFA  0101               	movlb	1	; () banked
  7083   001BFC  6FA4               	movwf	powf@k& (0+255),b
  7084   001BFE  0EFF               	movlw	255
  7085   001C00  0100               	movlb	0	; () banked
  7086   001C02  216A               	addwfc	(??_powf+2)& (0+255),w,b
  7087   001C04  0101               	movlb	1	; () banked
  7088   001C06  6FA5               	movwf	(powf@k+1)& (0+255),b
  7089   001C08  0EFF               	movlw	255
  7090   001C0A  0100               	movlb	0	; () banked
  7091   001C0C  216B               	addwfc	(??_powf+3)& (0+255),w,b
  7092   001C0E  0101               	movlb	1	; () banked
  7093   001C10  6FA6               	movwf	(powf@k+2)& (0+255),b
  7094   001C12  0EFF               	movlw	255
  7095   001C14  0100               	movlb	0	; () banked
  7096   001C16  216C               	addwfc	(??_powf+4)& (0+255),w,b
  7097   001C18  0101               	movlb	1	; () banked
  7098   001C1A  6FA7               	movwf	(powf@k+3)& (0+255),b
  7099   001C1C                     
  7100                           ; BSR set to: 1
  7101   001C1C  0E00               	movlw	0
  7102   001C1E  6F88               	movwf	powf@n& (0+255),b
  7103   001C20  0E00               	movlw	0
  7104   001C22  6F89               	movwf	(powf@n+1)& (0+255),b
  7105   001C24  0E00               	movlw	0
  7106   001C26  6F8A               	movwf	(powf@n+2)& (0+255),b
  7107   001C28  0E00               	movlw	0
  7108   001C2A  6F8B               	movwf	(powf@n+3)& (0+255),b
  7109   001C2C                     
  7110                           ; BSR set to: 1
  7111   001C2C  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
  7112   001C2E  EF25  F00E         	goto	u10501
  7113   001C32  0528               	decf	powf@i& (0+255),w,b
  7114   001C34  0E00               	movlw	0
  7115   001C36  5929               	subwfb	(powf@i+1)& (0+255),w,b
  7116   001C38  0E00               	movlw	0
  7117   001C3A  592A               	subwfb	(powf@i+2)& (0+255),w,b
  7118   001C3C  0E3F               	movlw	63
  7119   001C3E  592B               	subwfb	(powf@i+3)& (0+255),w,b
  7120   001C40  A0D8               	btfss	status,0,c
  7121   001C42  EF25  F00E         	goto	u10501
  7122   001C46  EF27  F00E         	goto	u10500
  7123   001C4A                     u10501:
  7124   001C4A  EF23  F00F         	goto	l8247
  7125   001C4E                     u10500:
  7126   001C4E                     
  7127                           ; BSR set to: 1
  7128   001C4E  C1A4  F068         	movff	powf@k,??_powf
  7129   001C52  0E01               	movlw	1
  7130   001C54  0100               	movlb	0	; () banked
  7131   001C56  2768               	addwf	??_powf& (0+255),f,b
  7132   001C58  0E00               	movlw	0
  7133   001C5A  6F69               	movwf	(??_powf+1)& (0+255),b
  7134   001C5C  0E00               	movlw	0
  7135   001C5E  6F6A               	movwf	(??_powf+2)& (0+255),b
  7136   001C60  0E80               	movlw	128
  7137   001C62  6F6B               	movwf	(??_powf+3)& (0+255),b
  7138   001C64  0E00               	movlw	0
  7139   001C66  6F6C               	movwf	(??_powf+4)& (0+255),b
  7140   001C68                     u10515:
  7141   001C68  6768               	tstfsz	??_powf& (0+255),b
  7142   001C6A  EF39  F00E         	goto	u10516
  7143   001C6E  EF41  F00E         	goto	u10517
  7144   001C72                     u10516:
  7145   001C72  356C               	rlcf	(??_powf+4)& (0+255),w,b
  7146   001C74  336C               	rrcf	(??_powf+4)& (0+255),f,b
  7147   001C76  336B               	rrcf	(??_powf+3)& (0+255),f,b
  7148   001C78  336A               	rrcf	(??_powf+2)& (0+255),f,b
  7149   001C7A  3369               	rrcf	(??_powf+1)& (0+255),f,b
  7150   001C7C  2F68               	decfsz	??_powf& (0+255),f,b
  7151   001C7E  EF34  F00E         	goto	u10515
  7152   001C82                     u10517:
  7153   001C82  0101               	movlb	1	; () banked
  7154   001C84  51A8               	movf	powf@j& (0+255),w,b
  7155   001C86  0100               	movlb	0	; () banked
  7156   001C88  2569               	addwf	(??_powf+1)& (0+255),w,b
  7157   001C8A  0101               	movlb	1	; () banked
  7158   001C8C  6F88               	movwf	powf@n& (0+255),b
  7159   001C8E  51A9               	movf	(powf@j+1)& (0+255),w,b
  7160   001C90  0100               	movlb	0	; () banked
  7161   001C92  216A               	addwfc	(??_powf+2)& (0+255),w,b
  7162   001C94  0101               	movlb	1	; () banked
  7163   001C96  6F89               	movwf	(powf@n+1)& (0+255),b
  7164   001C98  51AA               	movf	(powf@j+2)& (0+255),w,b
  7165   001C9A  0100               	movlb	0	; () banked
  7166   001C9C  216B               	addwfc	(??_powf+3)& (0+255),w,b
  7167   001C9E  0101               	movlb	1	; () banked
  7168   001CA0  6F8A               	movwf	(powf@n+2)& (0+255),b
  7169   001CA2  51AB               	movf	(powf@j+3)& (0+255),w,b
  7170   001CA4  0100               	movlb	0	; () banked
  7171   001CA6  216C               	addwfc	(??_powf+4)& (0+255),w,b
  7172   001CA8  0101               	movlb	1	; () banked
  7173   001CAA  6F8B               	movwf	(powf@n+3)& (0+255),b
  7174   001CAC  0E81               	movlw	129
  7175   001CAE  0100               	movlb	0	; () banked
  7176   001CB0  6F68               	movwf	??_powf& (0+255),b
  7177   001CB2  0EFF               	movlw	255
  7178   001CB4  6F69               	movwf	(??_powf+1)& (0+255),b
  7179   001CB6  0EFF               	movlw	255
  7180   001CB8  6F6A               	movwf	(??_powf+2)& (0+255),b
  7181   001CBA  0EFF               	movlw	255
  7182   001CBC  6F6B               	movwf	(??_powf+3)& (0+255),b
  7183   001CBE  0E17               	movlw	23
  7184   001CC0  6F6C               	movwf	(??_powf+4)& (0+255),b
  7185   001CC2  C188  F06D         	movff	powf@n,??_powf+5
  7186   001CC6  C189  F06E         	movff	powf@n+1,??_powf+6
  7187   001CCA  C18A  F06F         	movff	powf@n+2,??_powf+7
  7188   001CCE  C18B  F070         	movff	powf@n+3,??_powf+8
  7189   001CD2                     u10525:
  7190   001CD2  676C               	tstfsz	(??_powf+4)& (0+255),b
  7191   001CD4  EF6E  F00E         	goto	u10526
  7192   001CD8  EF76  F00E         	goto	u10527
  7193   001CDC                     u10526:
  7194   001CDC  3570               	rlcf	(??_powf+8)& (0+255),w,b
  7195   001CDE  3370               	rrcf	(??_powf+8)& (0+255),f,b
  7196   001CE0  336F               	rrcf	(??_powf+7)& (0+255),f,b
  7197   001CE2  336E               	rrcf	(??_powf+6)& (0+255),f,b
  7198   001CE4  336D               	rrcf	(??_powf+5)& (0+255),f,b
  7199   001CE6  2F6C               	decfsz	(??_powf+4)& (0+255),f,b
  7200   001CE8  EF69  F00E         	goto	u10525
  7201   001CEC                     u10527:
  7202   001CEC  0100               	movlb	0	; () banked
  7203   001CEE  516D               	movf	(??_powf+5)& (0+255),w,b
  7204   001CF0  2568               	addwf	??_powf& (0+255),w,b
  7205   001CF2  0101               	movlb	1	; () banked
  7206   001CF4  6FA4               	movwf	powf@k& (0+255),b
  7207   001CF6  0E00               	movlw	0
  7208   001CF8  0100               	movlb	0	; () banked
  7209   001CFA  2169               	addwfc	(??_powf+1)& (0+255),w,b
  7210   001CFC  0101               	movlb	1	; () banked
  7211   001CFE  6FA5               	movwf	(powf@k+1)& (0+255),b
  7212   001D00  0E00               	movlw	0
  7213   001D02  0100               	movlb	0	; () banked
  7214   001D04  216A               	addwfc	(??_powf+2)& (0+255),w,b
  7215   001D06  0101               	movlb	1	; () banked
  7216   001D08  6FA6               	movwf	(powf@k+2)& (0+255),b
  7217   001D0A  0E00               	movlw	0
  7218   001D0C  0100               	movlb	0	; () banked
  7219   001D0E  216B               	addwfc	(??_powf+3)& (0+255),w,b
  7220   001D10  0101               	movlb	1	; () banked
  7221   001D12  6FA7               	movwf	(powf@k+3)& (0+255),b
  7222   001D14  C1A4  F068         	movff	powf@k,??_powf
  7223   001D18  0EFF               	movlw	255
  7224   001D1A  0100               	movlb	0	; () banked
  7225   001D1C  6F69               	movwf	(??_powf+1)& (0+255),b
  7226   001D1E  0EFF               	movlw	255
  7227   001D20  6F6A               	movwf	(??_powf+2)& (0+255),b
  7228   001D22  0E7F               	movlw	127
  7229   001D24  6F6B               	movwf	(??_powf+3)& (0+255),b
  7230   001D26  0E00               	movlw	0
  7231   001D28  6F6C               	movwf	(??_powf+4)& (0+255),b
  7232   001D2A                     u10535:
  7233   001D2A  6768               	tstfsz	??_powf& (0+255),b
  7234   001D2C  EF9A  F00E         	goto	u10536
  7235   001D30  EFA2  F00E         	goto	u10537
  7236   001D34                     u10536:
  7237   001D34  356C               	rlcf	(??_powf+4)& (0+255),w,b
  7238   001D36  336C               	rrcf	(??_powf+4)& (0+255),f,b
  7239   001D38  336B               	rrcf	(??_powf+3)& (0+255),f,b
  7240   001D3A  336A               	rrcf	(??_powf+2)& (0+255),f,b
  7241   001D3C  3369               	rrcf	(??_powf+1)& (0+255),f,b
  7242   001D3E  2F68               	decfsz	??_powf& (0+255),f,b
  7243   001D40  EF95  F00E         	goto	u10535
  7244   001D44                     u10537:
  7245   001D44  0100               	movlb	0	; () banked
  7246   001D46  1D69               	comf	(??_powf+1)& (0+255),w,b
  7247   001D48  6F6D               	movwf	(??_powf+5)& (0+255),b
  7248   001D4A  1D6A               	comf	(??_powf+2)& (0+255),w,b
  7249   001D4C  6F6E               	movwf	(??_powf+6)& (0+255),b
  7250   001D4E  1D6B               	comf	(??_powf+3)& (0+255),w,b
  7251   001D50  6F6F               	movwf	(??_powf+7)& (0+255),b
  7252   001D52  1D6C               	comf	(??_powf+4)& (0+255),w,b
  7253   001D54  6F70               	movwf	(??_powf+8)& (0+255),b
  7254   001D56  0101               	movlb	1	; () banked
  7255   001D58  5188               	movf	powf@n& (0+255),w,b
  7256   001D5A  0100               	movlb	0	; () banked
  7257   001D5C  156D               	andwf	(??_powf+5)& (0+255),w,b
  7258   001D5E  0101               	movlb	1	; () banked
  7259   001D60  6FB0               	movwf	powf@t& (0+255),b
  7260   001D62  5189               	movf	(powf@n+1)& (0+255),w,b
  7261   001D64  0100               	movlb	0	; () banked
  7262   001D66  156E               	andwf	(??_powf+6)& (0+255),w,b
  7263   001D68  0101               	movlb	1	; () banked
  7264   001D6A  6FB1               	movwf	(powf@t+1)& (0+255),b
  7265   001D6C  518A               	movf	(powf@n+2)& (0+255),w,b
  7266   001D6E  0100               	movlb	0	; () banked
  7267   001D70  156F               	andwf	(??_powf+7)& (0+255),w,b
  7268   001D72  0101               	movlb	1	; () banked
  7269   001D74  6FB2               	movwf	(powf@t+2)& (0+255),b
  7270   001D76  518B               	movf	(powf@n+3)& (0+255),w,b
  7271   001D78  0100               	movlb	0	; () banked
  7272   001D7A  1570               	andwf	(??_powf+8)& (0+255),w,b
  7273   001D7C  0101               	movlb	1	; () banked
  7274   001D7E  6FB3               	movwf	(powf@t+3)& (0+255),b
  7275   001D80  51A4               	movf	powf@k& (0+255),w,b
  7276   001D82  0817               	sublw	23
  7277   001D84  0100               	movlb	0	; () banked
  7278   001D86  6F68               	movwf	??_powf& (0+255),b
  7279   001D88  0EFF               	movlw	255
  7280   001D8A  0101               	movlb	1	; () banked
  7281   001D8C  1588               	andwf	powf@n& (0+255),w,b
  7282   001D8E  0100               	movlb	0	; () banked
  7283   001D90  6F69               	movwf	(??_powf+1)& (0+255),b
  7284   001D92  0EFF               	movlw	255
  7285   001D94  0101               	movlb	1	; () banked
  7286   001D96  1589               	andwf	(powf@n+1)& (0+255),w,b
  7287   001D98  0100               	movlb	0	; () banked
  7288   001D9A  6F6A               	movwf	(??_powf+2)& (0+255),b
  7289   001D9C  0E7F               	movlw	127
  7290   001D9E  0101               	movlb	1	; () banked
  7291   001DA0  158A               	andwf	(powf@n+2)& (0+255),w,b
  7292   001DA2  0100               	movlb	0	; () banked
  7293   001DA4  6F6B               	movwf	(??_powf+3)& (0+255),b
  7294   001DA6  0E00               	movlw	0
  7295   001DA8  0101               	movlb	1	; () banked
  7296   001DAA  158B               	andwf	(powf@n+3)& (0+255),w,b
  7297   001DAC  0100               	movlb	0	; () banked
  7298   001DAE  6F6C               	movwf	(??_powf+4)& (0+255),b
  7299   001DB0  0E00               	movlw	0
  7300   001DB2  1169               	iorwf	(??_powf+1)& (0+255),w,b
  7301   001DB4  6F6D               	movwf	(??_powf+5)& (0+255),b
  7302   001DB6  0E00               	movlw	0
  7303   001DB8  116A               	iorwf	(??_powf+2)& (0+255),w,b
  7304   001DBA  6F6E               	movwf	(??_powf+6)& (0+255),b
  7305   001DBC  0E80               	movlw	128
  7306   001DBE  116B               	iorwf	(??_powf+3)& (0+255),w,b
  7307   001DC0  6F6F               	movwf	(??_powf+7)& (0+255),b
  7308   001DC2  0E00               	movlw	0
  7309   001DC4  116C               	iorwf	(??_powf+4)& (0+255),w,b
  7310   001DC6  6F70               	movwf	(??_powf+8)& (0+255),b
  7311   001DC8                     u10545:
  7312   001DC8  6768               	tstfsz	??_powf& (0+255),b
  7313   001DCA  EFE9  F00E         	goto	u10546
  7314   001DCE  EFF1  F00E         	goto	u10547
  7315   001DD2                     u10546:
  7316   001DD2  3570               	rlcf	(??_powf+8)& (0+255),w,b
  7317   001DD4  3370               	rrcf	(??_powf+8)& (0+255),f,b
  7318   001DD6  336F               	rrcf	(??_powf+7)& (0+255),f,b
  7319   001DD8  336E               	rrcf	(??_powf+6)& (0+255),f,b
  7320   001DDA  336D               	rrcf	(??_powf+5)& (0+255),f,b
  7321   001DDC  2F68               	decfsz	??_powf& (0+255),f,b
  7322   001DDE  EFE4  F00E         	goto	u10545
  7323   001DE2                     u10547:
  7324   001DE2  C06D  F188         	movff	??_powf+5,powf@n
  7325   001DE6  C06E  F189         	movff	??_powf+6,powf@n+1
  7326   001DEA  C06F  F18A         	movff	??_powf+7,powf@n+2
  7327   001DEE  C070  F18B         	movff	??_powf+8,powf@n+3
  7328   001DF2  0101               	movlb	1	; () banked
  7329   001DF4  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  7330   001DF6  EF01  F00F         	goto	u10550
  7331   001DFA  EFFF  F00E         	goto	u10551
  7332   001DFE                     u10551:
  7333   001DFE  EF09  F00F         	goto	l8245
  7334   001E02                     u10550:
  7335   001E02                     
  7336                           ; BSR set to: 1
  7337   001E02  1F8B               	comf	(powf@n+3)& (0+255),f,b
  7338   001E04  1F8A               	comf	(powf@n+2)& (0+255),f,b
  7339   001E06  1F89               	comf	(powf@n+1)& (0+255),f,b
  7340   001E08  6D88               	negf	powf@n& (0+255),b
  7341   001E0A  0E00               	movlw	0
  7342   001E0C  2389               	addwfc	(powf@n+1)& (0+255),f,b
  7343   001E0E  238A               	addwfc	(powf@n+2)& (0+255),f,b
  7344   001E10  238B               	addwfc	(powf@n+3)& (0+255),f,b
  7345   001E12                     l8245:
  7346                           
  7347                           ; BSR set to: 1
  7348   001E12  C1A0  F038         	movff	powf@p_h,___flsub@b
  7349   001E16  C1A1  F039         	movff	powf@p_h+1,___flsub@b+1
  7350   001E1A  C1A2  F03A         	movff	powf@p_h+2,___flsub@b+2
  7351   001E1E  C1A3  F03B         	movff	powf@p_h+3,___flsub@b+3
  7352   001E22  C1B0  F03C         	movff	powf@t,___flsub@a
  7353   001E26  C1B1  F03D         	movff	powf@t+1,___flsub@a+1
  7354   001E2A  C1B2  F03E         	movff	powf@t+2,___flsub@a+2
  7355   001E2E  C1B3  F03F         	movff	powf@t+3,___flsub@a+3
  7356   001E32  EC02  F038         	call	___flsub	;wreg free
  7357   001E36  C038  F1A0         	movff	?___flsub,powf@p_h
  7358   001E3A  C039  F1A1         	movff	?___flsub+1,powf@p_h+1
  7359   001E3E  C03A  F1A2         	movff	?___flsub+2,powf@p_h+2
  7360   001E42  C03B  F1A3         	movff	?___flsub+3,powf@p_h+3
  7361   001E46                     l8247:
  7362   001E46  C1A0  F00F         	movff	powf@p_h,___fladd@b
  7363   001E4A  C1A1  F010         	movff	powf@p_h+1,___fladd@b+1
  7364   001E4E  C1A2  F011         	movff	powf@p_h+2,___fladd@b+2
  7365   001E52  C1A3  F012         	movff	powf@p_h+3,___fladd@b+3
  7366   001E56  C16C  F013         	movff	powf@p_l,___fladd@a
  7367   001E5A  C16D  F014         	movff	powf@p_l+1,___fladd@a+1
  7368   001E5E  C16E  F015         	movff	powf@p_l+2,___fladd@a+2
  7369   001E62  C16F  F016         	movff	powf@p_l+3,___fladd@a+3
  7370   001E66  EC47  F01C         	call	___fladd	;wreg free
  7371   001E6A  C00F  F1B0         	movff	?___fladd,powf@t
  7372   001E6E  C010  F1B1         	movff	?___fladd+1,powf@t+1
  7373   001E72  C011  F1B2         	movff	?___fladd+2,powf@t+2
  7374   001E76  C012  F1B3         	movff	?___fladd+3,powf@t+3
  7375   001E7A  C1B0  F198         	movff	powf@t,powf@is
  7376   001E7E  C1B1  F199         	movff	powf@t+1,powf@is+1
  7377   001E82  C1B2  F19A         	movff	powf@t+2,powf@is+2
  7378   001E86  C1B3  F19B         	movff	powf@t+3,powf@is+3
  7379   001E8A  0E00               	movlw	0
  7380   001E8C  0101               	movlb	1	; () banked
  7381   001E8E  1598               	andwf	powf@is& (0+255),w,b
  7382   001E90  6FB0               	movwf	powf@t& (0+255),b
  7383   001E92  0E80               	movlw	128
  7384   001E94  1599               	andwf	(powf@is+1)& (0+255),w,b
  7385   001E96  6FB1               	movwf	(powf@t+1)& (0+255),b
  7386   001E98  0EFF               	movlw	255
  7387   001E9A  159A               	andwf	(powf@is+2)& (0+255),w,b
  7388   001E9C  6FB2               	movwf	(powf@t+2)& (0+255),b
  7389   001E9E  0EFF               	movlw	255
  7390   001EA0  159B               	andwf	(powf@is+3)& (0+255),w,b
  7391   001EA2  6FB3               	movwf	(powf@t+3)& (0+255),b
  7392   001EA4                     
  7393                           ; BSR set to: 1
  7394   001EA4  C1B0  F01F         	movff	powf@t,___flmul@b
  7395   001EA8  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  7396   001EAC  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  7397   001EB0  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  7398   001EB4  0E00               	movlw	0
  7399   001EB6  6E23               	movwf	___flmul@a^0,c
  7400   001EB8  0E72               	movlw	114
  7401   001EBA  6E24               	movwf	(___flmul@a+1)^0,c
  7402   001EBC  0E31               	movlw	49
  7403   001EBE  6E25               	movwf	(___flmul@a+2)^0,c
  7404   001EC0  0E3F               	movlw	63
  7405   001EC2  6E26               	movwf	(___flmul@a+3)^0,c
  7406   001EC4  ECA2  F01E         	call	___flmul	;wreg free
  7407   001EC8  C01F  F17C         	movff	?___flmul,powf@u
  7408   001ECC  C020  F17D         	movff	?___flmul+1,powf@u+1
  7409   001ED0  C021  F17E         	movff	?___flmul+2,powf@u+2
  7410   001ED4  C022  F17F         	movff	?___flmul+3,powf@u+3
  7411   001ED8  C1A0  F03C         	movff	powf@p_h,___flsub@a
  7412   001EDC  C1A1  F03D         	movff	powf@p_h+1,___flsub@a+1
  7413   001EE0  C1A2  F03E         	movff	powf@p_h+2,___flsub@a+2
  7414   001EE4  C1A3  F03F         	movff	powf@p_h+3,___flsub@a+3
  7415   001EE8  C1B0  F038         	movff	powf@t,___flsub@b
  7416   001EEC  C1B1  F039         	movff	powf@t+1,___flsub@b+1
  7417   001EF0  C1B2  F03A         	movff	powf@t+2,___flsub@b+2
  7418   001EF4  C1B3  F03B         	movff	powf@t+3,___flsub@b+3
  7419   001EF8  EC02  F038         	call	___flsub	;wreg free
  7420   001EFC  C038  F19C         	movff	?___flsub,_powf$1895
  7421   001F00  C039  F19D         	movff	?___flsub+1,_powf$1895+1
  7422   001F04  C03A  F19E         	movff	?___flsub+2,_powf$1895+2
  7423   001F08  C03B  F19F         	movff	?___flsub+3,_powf$1895+3
  7424   001F0C  0E18               	movlw	24
  7425   001F0E  6E23               	movwf	___flmul@a^0,c
  7426   001F10  0E72               	movlw	114
  7427   001F12  6E24               	movwf	(___flmul@a+1)^0,c
  7428   001F14  0E31               	movlw	49
  7429   001F16  6E25               	movwf	(___flmul@a+2)^0,c
  7430   001F18  0E3F               	movlw	63
  7431   001F1A  6E26               	movwf	(___flmul@a+3)^0,c
  7432   001F1C  C19C  F03C         	movff	_powf$1895,___flsub@a
  7433   001F20  C19D  F03D         	movff	_powf$1895+1,___flsub@a+1
  7434   001F24  C19E  F03E         	movff	_powf$1895+2,___flsub@a+2
  7435   001F28  C19F  F03F         	movff	_powf$1895+3,___flsub@a+3
  7436   001F2C  C16C  F038         	movff	powf@p_l,___flsub@b
  7437   001F30  C16D  F039         	movff	powf@p_l+1,___flsub@b+1
  7438   001F34  C16E  F03A         	movff	powf@p_l+2,___flsub@b+2
  7439   001F38  C16F  F03B         	movff	powf@p_l+3,___flsub@b+3
  7440   001F3C  EC02  F038         	call	___flsub	;wreg free
  7441   001F40  C038  F01F         	movff	?___flsub,___flmul@b
  7442   001F44  C039  F020         	movff	?___flsub+1,___flmul@b+1
  7443   001F48  C03A  F021         	movff	?___flsub+2,___flmul@b+2
  7444   001F4C  C03B  F022         	movff	?___flsub+3,___flmul@b+3
  7445   001F50  ECA2  F01E         	call	___flmul	;wreg free
  7446   001F54  C01F  F114         	movff	?___flmul,_powf$1905
  7447   001F58  C020  F115         	movff	?___flmul+1,_powf$1905+1
  7448   001F5C  C021  F116         	movff	?___flmul+2,_powf$1905+2
  7449   001F60  C022  F117         	movff	?___flmul+3,_powf$1905+3
  7450   001F64  C114  F00F         	movff	_powf$1905,___fladd@b
  7451   001F68  C115  F010         	movff	_powf$1905+1,___fladd@b+1
  7452   001F6C  C116  F011         	movff	_powf$1905+2,___fladd@b+2
  7453   001F70  C117  F012         	movff	_powf$1905+3,___fladd@b+3
  7454   001F74  0E8C               	movlw	140
  7455   001F76  6E23               	movwf	___flmul@a^0,c
  7456   001F78  0EBE               	movlw	190
  7457   001F7A  6E24               	movwf	(___flmul@a+1)^0,c
  7458   001F7C  0EBF               	movlw	191
  7459   001F7E  6E25               	movwf	(___flmul@a+2)^0,c
  7460   001F80  0E35               	movlw	53
  7461   001F82  6E26               	movwf	(___flmul@a+3)^0,c
  7462   001F84  C1B0  F01F         	movff	powf@t,___flmul@b
  7463   001F88  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  7464   001F8C  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  7465   001F90  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  7466   001F94  ECA2  F01E         	call	___flmul	;wreg free
  7467   001F98  C01F  F013         	movff	?___flmul,___fladd@a
  7468   001F9C  C020  F014         	movff	?___flmul+1,___fladd@a+1
  7469   001FA0  C021  F015         	movff	?___flmul+2,___fladd@a+2
  7470   001FA4  C022  F016         	movff	?___flmul+3,___fladd@a+3
  7471   001FA8  EC47  F01C         	call	___fladd	;wreg free
  7472   001FAC  C00F  F180         	movff	?___fladd,powf@v
  7473   001FB0  C010  F181         	movff	?___fladd+1,powf@v+1
  7474   001FB4  C011  F182         	movff	?___fladd+2,powf@v+2
  7475   001FB8  C012  F183         	movff	?___fladd+3,powf@v+3
  7476   001FBC  C17C  F00F         	movff	powf@u,___fladd@b
  7477   001FC0  C17D  F010         	movff	powf@u+1,___fladd@b+1
  7478   001FC4  C17E  F011         	movff	powf@u+2,___fladd@b+2
  7479   001FC8  C17F  F012         	movff	powf@u+3,___fladd@b+3
  7480   001FCC  C180  F013         	movff	powf@v,___fladd@a
  7481   001FD0  C181  F014         	movff	powf@v+1,___fladd@a+1
  7482   001FD4  C182  F015         	movff	powf@v+2,___fladd@a+2
  7483   001FD8  C183  F016         	movff	powf@v+3,___fladd@a+3
  7484   001FDC  EC47  F01C         	call	___fladd	;wreg free
  7485   001FE0  C00F  F1B4         	movff	?___fladd,powf@z
  7486   001FE4  C010  F1B5         	movff	?___fladd+1,powf@z+1
  7487   001FE8  C011  F1B6         	movff	?___fladd+2,powf@z+2
  7488   001FEC  C012  F1B7         	movff	?___fladd+3,powf@z+3
  7489   001FF0  C17C  F03C         	movff	powf@u,___flsub@a
  7490   001FF4  C17D  F03D         	movff	powf@u+1,___flsub@a+1
  7491   001FF8  C17E  F03E         	movff	powf@u+2,___flsub@a+2
  7492   001FFC  C17F  F03F         	movff	powf@u+3,___flsub@a+3
  7493   002000  C1B4  F038         	movff	powf@z,___flsub@b
  7494   002004  C1B5  F039         	movff	powf@z+1,___flsub@b+1
  7495   002008  C1B6  F03A         	movff	powf@z+2,___flsub@b+2
  7496   00200C  C1B7  F03B         	movff	powf@z+3,___flsub@b+3
  7497   002010  EC02  F038         	call	___flsub	;wreg free
  7498   002014  C038  F19C         	movff	?___flsub,_powf$1895
  7499   002018  C039  F19D         	movff	?___flsub+1,_powf$1895+1
  7500   00201C  C03A  F19E         	movff	?___flsub+2,_powf$1895+2
  7501   002020  C03B  F19F         	movff	?___flsub+3,_powf$1895+3
  7502   002024  C180  F038         	movff	powf@v,___flsub@b
  7503   002028  C181  F039         	movff	powf@v+1,___flsub@b+1
  7504   00202C  C182  F03A         	movff	powf@v+2,___flsub@b+2
  7505   002030  C183  F03B         	movff	powf@v+3,___flsub@b+3
  7506   002034  C19C  F03C         	movff	_powf$1895,___flsub@a
  7507   002038  C19D  F03D         	movff	_powf$1895+1,___flsub@a+1
  7508   00203C  C19E  F03E         	movff	_powf$1895+2,___flsub@a+2
  7509   002040  C19F  F03F         	movff	_powf$1895+3,___flsub@a+3
  7510   002044  EC02  F038         	call	___flsub	;wreg free
  7511   002048  C038  F144         	movff	?___flsub,powf@w
  7512   00204C  C039  F145         	movff	?___flsub+1,powf@w+1
  7513   002050  C03A  F146         	movff	?___flsub+2,powf@w+2
  7514   002054  C03B  F147         	movff	?___flsub+3,powf@w+3
  7515   002058  C1B4  F01F         	movff	powf@z,___flmul@b
  7516   00205C  C1B5  F020         	movff	powf@z+1,___flmul@b+1
  7517   002060  C1B6  F021         	movff	powf@z+2,___flmul@b+2
  7518   002064  C1B7  F022         	movff	powf@z+3,___flmul@b+3
  7519   002068  C1B4  F023         	movff	powf@z,___flmul@a
  7520   00206C  C1B5  F024         	movff	powf@z+1,___flmul@a+1
  7521   002070  C1B6  F025         	movff	powf@z+2,___flmul@a+2
  7522   002074  C1B7  F026         	movff	powf@z+3,___flmul@a+3
  7523   002078  ECA2  F01E         	call	___flmul	;wreg free
  7524   00207C  C01F  F1B0         	movff	?___flmul,powf@t
  7525   002080  C020  F1B1         	movff	?___flmul+1,powf@t+1
  7526   002084  C021  F1B2         	movff	?___flmul+2,powf@t+2
  7527   002088  C022  F1B3         	movff	?___flmul+3,powf@t+3
  7528   00208C  0E0E               	movlw	14
  7529   00208E  6E13               	movwf	___fladd@a^0,c
  7530   002090  0EEA               	movlw	234
  7531   002092  6E14               	movwf	(___fladd@a+1)^0,c
  7532   002094  0EDD               	movlw	221
  7533   002096  6E15               	movwf	(___fladd@a+2)^0,c
  7534   002098  0EB5               	movlw	181
  7535   00209A  6E16               	movwf	(___fladd@a+3)^0,c
  7536   00209C  0E4C               	movlw	76
  7537   00209E  6E23               	movwf	___flmul@a^0,c
  7538   0020A0  0EBB               	movlw	187
  7539   0020A2  6E24               	movwf	(___flmul@a+1)^0,c
  7540   0020A4  0E31               	movlw	49
  7541   0020A6  6E25               	movwf	(___flmul@a+2)^0,c
  7542   0020A8  0E33               	movlw	51
  7543   0020AA  6E26               	movwf	(___flmul@a+3)^0,c
  7544   0020AC  C1B0  F01F         	movff	powf@t,___flmul@b
  7545   0020B0  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  7546   0020B4  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  7547   0020B8  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  7548   0020BC  ECA2  F01E         	call	___flmul	;wreg free
  7549   0020C0  C01F  F00F         	movff	?___flmul,___fladd@b
  7550   0020C4  C020  F010         	movff	?___flmul+1,___fladd@b+1
  7551   0020C8  C021  F011         	movff	?___flmul+2,___fladd@b+2
  7552   0020CC  C022  F012         	movff	?___flmul+3,___fladd@b+3
  7553   0020D0  EC47  F01C         	call	___fladd	;wreg free
  7554   0020D4  C00F  F148         	movff	?___fladd,_powf$1892
  7555   0020D8  C010  F149         	movff	?___fladd+1,_powf$1892+1
  7556   0020DC  C011  F14A         	movff	?___fladd+2,_powf$1892+2
  7557   0020E0  C012  F14B         	movff	?___fladd+3,_powf$1892+3
  7558   0020E4  0E55               	movlw	85
  7559   0020E6  6E13               	movwf	___fladd@a^0,c
  7560   0020E8  0EB3               	movlw	179
  7561   0020EA  6E14               	movwf	(___fladd@a+1)^0,c
  7562   0020EC  0E8A               	movlw	138
  7563   0020EE  6E15               	movwf	(___fladd@a+2)^0,c
  7564   0020F0  0E38               	movlw	56
  7565   0020F2  6E16               	movwf	(___fladd@a+3)^0,c
  7566   0020F4  C1B0  F023         	movff	powf@t,___flmul@a
  7567   0020F8  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  7568   0020FC  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  7569   002100  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  7570   002104  C148  F01F         	movff	_powf$1892,___flmul@b
  7571   002108  C149  F020         	movff	_powf$1892+1,___flmul@b+1
  7572   00210C  C14A  F021         	movff	_powf$1892+2,___flmul@b+2
  7573   002110  C14B  F022         	movff	_powf$1892+3,___flmul@b+3
  7574   002114  ECA2  F01E         	call	___flmul	;wreg free
  7575   002118  C01F  F00F         	movff	?___flmul,___fladd@b
  7576   00211C  C020  F010         	movff	?___flmul+1,___fladd@b+1
  7577   002120  C021  F011         	movff	?___flmul+2,___fladd@b+2
  7578   002124  C022  F012         	movff	?___flmul+3,___fladd@b+3
  7579   002128  EC47  F01C         	call	___fladd	;wreg free
  7580   00212C  C00F  F158         	movff	?___fladd,_powf$1893
  7581   002130  C010  F159         	movff	?___fladd+1,_powf$1893+1
  7582   002134  C011  F15A         	movff	?___fladd+2,_powf$1893+2
  7583   002138  C012  F15B         	movff	?___fladd+3,_powf$1893+3
  7584   00213C  0E61               	movlw	97
  7585   00213E  6E13               	movwf	___fladd@a^0,c
  7586   002140  0E0B               	movlw	11
  7587   002142  6E14               	movwf	(___fladd@a+1)^0,c
  7588   002144  0E36               	movlw	54
  7589   002146  6E15               	movwf	(___fladd@a+2)^0,c
  7590   002148  0EBB               	movlw	187
  7591   00214A  6E16               	movwf	(___fladd@a+3)^0,c
  7592   00214C  C1B0  F023         	movff	powf@t,___flmul@a
  7593   002150  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  7594   002154  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  7595   002158  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  7596   00215C  C158  F01F         	movff	_powf$1893,___flmul@b
  7597   002160  C159  F020         	movff	_powf$1893+1,___flmul@b+1
  7598   002164  C15A  F021         	movff	_powf$1893+2,___flmul@b+2
  7599   002168  C15B  F022         	movff	_powf$1893+3,___flmul@b+3
  7600   00216C  ECA2  F01E         	call	___flmul	;wreg free
  7601   002170  C01F  F00F         	movff	?___flmul,___fladd@b
  7602   002174  C020  F010         	movff	?___flmul+1,___fladd@b+1
  7603   002178  C021  F011         	movff	?___flmul+2,___fladd@b+2
  7604   00217C  C022  F012         	movff	?___flmul+3,___fladd@b+3
  7605   002180  EC47  F01C         	call	___fladd	;wreg free
  7606   002184  C00F  F14C         	movff	?___fladd,_powf$1894
  7607   002188  C010  F14D         	movff	?___fladd+1,_powf$1894+1
  7608   00218C  C011  F14E         	movff	?___fladd+2,_powf$1894+2
  7609   002190  C012  F14F         	movff	?___fladd+3,_powf$1894+3
  7610   002194  0EAB               	movlw	171
  7611   002196  6E13               	movwf	___fladd@a^0,c
  7612   002198  0EAA               	movlw	170
  7613   00219A  6E14               	movwf	(___fladd@a+1)^0,c
  7614   00219C  0E2A               	movlw	42
  7615   00219E  6E15               	movwf	(___fladd@a+2)^0,c
  7616   0021A0  0E3E               	movlw	62
  7617   0021A2  6E16               	movwf	(___fladd@a+3)^0,c
  7618   0021A4  C1B0  F023         	movff	powf@t,___flmul@a
  7619   0021A8  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  7620   0021AC  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  7621   0021B0  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  7622   0021B4  C14C  F01F         	movff	_powf$1894,___flmul@b
  7623   0021B8  C14D  F020         	movff	_powf$1894+1,___flmul@b+1
  7624   0021BC  C14E  F021         	movff	_powf$1894+2,___flmul@b+2
  7625   0021C0  C14F  F022         	movff	_powf$1894+3,___flmul@b+3
  7626   0021C4  ECA2  F01E         	call	___flmul	;wreg free
  7627   0021C8  C01F  F00F         	movff	?___flmul,___fladd@b
  7628   0021CC  C020  F010         	movff	?___flmul+1,___fladd@b+1
  7629   0021D0  C021  F011         	movff	?___flmul+2,___fladd@b+2
  7630   0021D4  C022  F012         	movff	?___flmul+3,___fladd@b+3
  7631   0021D8  EC47  F01C         	call	___fladd	;wreg free
  7632   0021DC  C00F  F138         	movff	?___fladd,_powf$1896
  7633   0021E0  C010  F139         	movff	?___fladd+1,_powf$1896+1
  7634   0021E4  C011  F13A         	movff	?___fladd+2,_powf$1896+2
  7635   0021E8  C012  F13B         	movff	?___fladd+3,_powf$1896+3
  7636   0021EC  C1B4  F038         	movff	powf@z,___flsub@b
  7637   0021F0  C1B5  F039         	movff	powf@z+1,___flsub@b+1
  7638   0021F4  C1B6  F03A         	movff	powf@z+2,___flsub@b+2
  7639   0021F8  C1B7  F03B         	movff	powf@z+3,___flsub@b+3
  7640   0021FC  C1B0  F023         	movff	powf@t,___flmul@a
  7641   002200  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  7642   002204  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  7643   002208  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  7644   00220C  C138  F01F         	movff	_powf$1896,___flmul@b
  7645   002210  C139  F020         	movff	_powf$1896+1,___flmul@b+1
  7646   002214  C13A  F021         	movff	_powf$1896+2,___flmul@b+2
  7647   002218  C13B  F022         	movff	_powf$1896+3,___flmul@b+3
  7648   00221C  ECA2  F01E         	call	___flmul	;wreg free
  7649   002220  C01F  F03C         	movff	?___flmul,___flsub@a
  7650   002224  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  7651   002228  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  7652   00222C  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  7653   002230  EC02  F038         	call	___flsub	;wreg free
  7654   002234  C038  F18C         	movff	?___flsub,powf@t1
  7655   002238  C039  F18D         	movff	?___flsub+1,powf@t1+1
  7656   00223C  C03A  F18E         	movff	?___flsub+2,powf@t1+2
  7657   002240  C03B  F18F         	movff	?___flsub+3,powf@t1+3
  7658   002244  0E00               	movlw	0
  7659   002246  6E13               	movwf	___fladd@a^0,c
  7660   002248  0E00               	movlw	0
  7661   00224A  6E14               	movwf	(___fladd@a+1)^0,c
  7662   00224C  0E00               	movlw	0
  7663   00224E  6E15               	movwf	(___fladd@a+2)^0,c
  7664   002250  0EC0               	movlw	192
  7665   002252  6E16               	movwf	(___fladd@a+3)^0,c
  7666   002254  C18C  F00F         	movff	powf@t1,___fladd@b
  7667   002258  C18D  F010         	movff	powf@t1+1,___fladd@b+1
  7668   00225C  C18E  F011         	movff	powf@t1+2,___fladd@b+2
  7669   002260  C18F  F012         	movff	powf@t1+3,___fladd@b+3
  7670   002264  EC47  F01C         	call	___fladd	;wreg free
  7671   002268  C00F  F044         	movff	?___fladd,___fldiv@a
  7672   00226C  C010  F045         	movff	?___fladd+1,___fldiv@a+1
  7673   002270  C011  F046         	movff	?___fladd+2,___fldiv@a+2
  7674   002274  C012  F047         	movff	?___fladd+3,___fldiv@a+3
  7675   002278  C18C  F023         	movff	powf@t1,___flmul@a
  7676   00227C  C18D  F024         	movff	powf@t1+1,___flmul@a+1
  7677   002280  C18E  F025         	movff	powf@t1+2,___flmul@a+2
  7678   002284  C18F  F026         	movff	powf@t1+3,___flmul@a+3
  7679   002288  C1B4  F01F         	movff	powf@z,___flmul@b
  7680   00228C  C1B5  F020         	movff	powf@z+1,___flmul@b+1
  7681   002290  C1B6  F021         	movff	powf@z+2,___flmul@b+2
  7682   002294  C1B7  F022         	movff	powf@z+3,___flmul@b+3
  7683   002298  ECA2  F01E         	call	___flmul	;wreg free
  7684   00229C  C01F  F040         	movff	?___flmul,___fldiv@b
  7685   0022A0  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  7686   0022A4  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  7687   0022A8  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  7688   0022AC  ECA4  F022         	call	___fldiv	;wreg free
  7689   0022B0  C040  F13C         	movff	?___fldiv,_powf$1900
  7690   0022B4  C041  F13D         	movff	?___fldiv+1,_powf$1900+1
  7691   0022B8  C042  F13E         	movff	?___fldiv+2,_powf$1900+2
  7692   0022BC  C043  F13F         	movff	?___fldiv+3,_powf$1900+3
  7693   0022C0  C144  F013         	movff	powf@w,___fladd@a
  7694   0022C4  C145  F014         	movff	powf@w+1,___fladd@a+1
  7695   0022C8  C146  F015         	movff	powf@w+2,___fladd@a+2
  7696   0022CC  C147  F016         	movff	powf@w+3,___fladd@a+3
  7697   0022D0  C144  F023         	movff	powf@w,___flmul@a
  7698   0022D4  C145  F024         	movff	powf@w+1,___flmul@a+1
  7699   0022D8  C146  F025         	movff	powf@w+2,___flmul@a+2
  7700   0022DC  C147  F026         	movff	powf@w+3,___flmul@a+3
  7701   0022E0  C1B4  F01F         	movff	powf@z,___flmul@b
  7702   0022E4  C1B5  F020         	movff	powf@z+1,___flmul@b+1
  7703   0022E8  C1B6  F021         	movff	powf@z+2,___flmul@b+2
  7704   0022EC  C1B7  F022         	movff	powf@z+3,___flmul@b+3
  7705   0022F0  ECA2  F01E         	call	___flmul	;wreg free
  7706   0022F4  C01F  F00F         	movff	?___flmul,___fladd@b
  7707   0022F8  C020  F010         	movff	?___flmul+1,___fladd@b+1
  7708   0022FC  C021  F011         	movff	?___flmul+2,___fladd@b+2
  7709   002300  C022  F012         	movff	?___flmul+3,___fladd@b+3
  7710   002304  EC47  F01C         	call	___fladd	;wreg free
  7711   002308  C00F  F118         	movff	?___fladd,_powf$1906
  7712   00230C  C010  F119         	movff	?___fladd+1,_powf$1906+1
  7713   002310  C011  F11A         	movff	?___fladd+2,_powf$1906+2
  7714   002314  C012  F11B         	movff	?___fladd+3,_powf$1906+3
  7715   002318  C13C  F038         	movff	_powf$1900,___flsub@b
  7716   00231C  C13D  F039         	movff	_powf$1900+1,___flsub@b+1
  7717   002320  C13E  F03A         	movff	_powf$1900+2,___flsub@b+2
  7718   002324  C13F  F03B         	movff	_powf$1900+3,___flsub@b+3
  7719   002328  C118  F03C         	movff	_powf$1906,___flsub@a
  7720   00232C  C119  F03D         	movff	_powf$1906+1,___flsub@a+1
  7721   002330  C11A  F03E         	movff	_powf$1906+2,___flsub@a+2
  7722   002334  C11B  F03F         	movff	_powf$1906+3,___flsub@a+3
  7723   002338  EC02  F038         	call	___flsub	;wreg free
  7724   00233C  C038  F150         	movff	?___flsub,powf@r
  7725   002340  C039  F151         	movff	?___flsub+1,powf@r+1
  7726   002344  C03A  F152         	movff	?___flsub+2,powf@r+2
  7727   002348  C03B  F153         	movff	?___flsub+3,powf@r+3
  7728   00234C  C1B4  F03C         	movff	powf@z,___flsub@a
  7729   002350  C1B5  F03D         	movff	powf@z+1,___flsub@a+1
  7730   002354  C1B6  F03E         	movff	powf@z+2,___flsub@a+2
  7731   002358  C1B7  F03F         	movff	powf@z+3,___flsub@a+3
  7732   00235C  C150  F038         	movff	powf@r,___flsub@b
  7733   002360  C151  F039         	movff	powf@r+1,___flsub@b+1
  7734   002364  C152  F03A         	movff	powf@r+2,___flsub@b+2
  7735   002368  C153  F03B         	movff	powf@r+3,___flsub@b+3
  7736   00236C  EC02  F038         	call	___flsub	;wreg free
  7737   002370  C038  F19C         	movff	?___flsub,_powf$1895
  7738   002374  C039  F19D         	movff	?___flsub+1,_powf$1895+1
  7739   002378  C03A  F19E         	movff	?___flsub+2,_powf$1895+2
  7740   00237C  C03B  F19F         	movff	?___flsub+3,_powf$1895+3
  7741   002380  0E00               	movlw	0
  7742   002382  6E38               	movwf	___flsub@b^0,c
  7743   002384  0E00               	movlw	0
  7744   002386  6E39               	movwf	(___flsub@b+1)^0,c
  7745   002388  0E80               	movlw	128
  7746   00238A  6E3A               	movwf	(___flsub@b+2)^0,c
  7747   00238C  0E3F               	movlw	63
  7748   00238E  6E3B               	movwf	(___flsub@b+3)^0,c
  7749   002390  C19C  F03C         	movff	_powf$1895,___flsub@a
  7750   002394  C19D  F03D         	movff	_powf$1895+1,___flsub@a+1
  7751   002398  C19E  F03E         	movff	_powf$1895+2,___flsub@a+2
  7752   00239C  C19F  F03F         	movff	_powf$1895+3,___flsub@a+3
  7753   0023A0  EC02  F038         	call	___flsub	;wreg free
  7754   0023A4  C038  F1B4         	movff	?___flsub,powf@z
  7755   0023A8  C039  F1B5         	movff	?___flsub+1,powf@z+1
  7756   0023AC  C03A  F1B6         	movff	?___flsub+2,powf@z+2
  7757   0023B0  C03B  F1B7         	movff	?___flsub+3,powf@z+3
  7758   0023B4  C1B4  F1A8         	movff	powf@z,powf@j
  7759   0023B8  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  7760   0023BC  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  7761   0023C0  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  7762   0023C4  C188  F068         	movff	powf@n,??_powf
  7763   0023C8  C189  F069         	movff	powf@n+1,??_powf+1
  7764   0023CC  C18A  F06A         	movff	powf@n+2,??_powf+2
  7765   0023D0  C18B  F06B         	movff	powf@n+3,??_powf+3
  7766   0023D4  0E17               	movlw	23
  7767   0023D6                     u10565:
  7768   0023D6  90D8               	bcf	status,0,c
  7769   0023D8  0100               	movlb	0	; () banked
  7770   0023DA  3768               	rlcf	??_powf& (0+255),f,b
  7771   0023DC  3769               	rlcf	(??_powf+1)& (0+255),f,b
  7772   0023DE  376A               	rlcf	(??_powf+2)& (0+255),f,b
  7773   0023E0  376B               	rlcf	(??_powf+3)& (0+255),f,b
  7774   0023E2  2EE8               	decfsz	wreg,f,c
  7775   0023E4  EFEB  F011         	goto	u10565
  7776   0023E8  5168               	movf	??_powf& (0+255),w,b
  7777   0023EA  0101               	movlb	1	; () banked
  7778   0023EC  27A8               	addwf	powf@j& (0+255),f,b
  7779   0023EE  0100               	movlb	0	; () banked
  7780   0023F0  5169               	movf	(??_powf+1)& (0+255),w,b
  7781   0023F2  0101               	movlb	1	; () banked
  7782   0023F4  23A9               	addwfc	(powf@j+1)& (0+255),f,b
  7783   0023F6  0100               	movlb	0	; () banked
  7784   0023F8  516A               	movf	(??_powf+2)& (0+255),w,b
  7785   0023FA  0101               	movlb	1	; () banked
  7786   0023FC  23AA               	addwfc	(powf@j+2)& (0+255),f,b
  7787   0023FE  0100               	movlb	0	; () banked
  7788   002400  516B               	movf	(??_powf+3)& (0+255),w,b
  7789   002402  0101               	movlb	1	; () banked
  7790   002404  23AB               	addwfc	(powf@j+3)& (0+255),f,b
  7791   002406                     
  7792                           ; BSR set to: 1
  7793   002406  0E17               	movlw	23
  7794   002408  0100               	movlb	0	; () banked
  7795   00240A  6F68               	movwf	??_powf& (0+255),b
  7796   00240C  C1A8  F069         	movff	powf@j,??_powf+1
  7797   002410  C1A9  F06A         	movff	powf@j+1,??_powf+2
  7798   002414  C1AA  F06B         	movff	powf@j+2,??_powf+3
  7799   002418  C1AB  F06C         	movff	powf@j+3,??_powf+4
  7800   00241C                     u10575:
  7801   00241C  6768               	tstfsz	??_powf& (0+255),b
  7802   00241E  EF13  F012         	goto	u10576
  7803   002422  EF1B  F012         	goto	u10577
  7804   002426                     u10576:
  7805   002426  356C               	rlcf	(??_powf+4)& (0+255),w,b
  7806   002428  336C               	rrcf	(??_powf+4)& (0+255),f,b
  7807   00242A  336B               	rrcf	(??_powf+3)& (0+255),f,b
  7808   00242C  336A               	rrcf	(??_powf+2)& (0+255),f,b
  7809   00242E  3369               	rrcf	(??_powf+1)& (0+255),f,b
  7810   002430  2F68               	decfsz	??_powf& (0+255),f,b
  7811   002432  EF0E  F012         	goto	u10575
  7812   002436                     u10577:
  7813   002436  0100               	movlb	0	; () banked
  7814   002438  BF6C               	btfsc	(??_powf+4)& (0+255),7,b
  7815   00243A  EF2B  F012         	goto	u10580
  7816   00243E  516C               	movf	(??_powf+4)& (0+255),w,b
  7817   002440  116B               	iorwf	(??_powf+3)& (0+255),w,b
  7818   002442  116A               	iorwf	(??_powf+2)& (0+255),w,b
  7819   002444  E106               	bnz	u10581
  7820   002446  0569               	decf	(??_powf+1)& (0+255),w,b
  7821   002448  B0D8               	btfsc	status,0,c
  7822   00244A  EF29  F012         	goto	u10581
  7823   00244E  EF2B  F012         	goto	u10580
  7824   002452                     u10581:
  7825   002452  EF43  F012         	goto	l1406
  7826   002456                     u10580:
  7827   002456                     
  7828                           ; BSR set to: 0
  7829   002456  C1B4  F038         	movff	powf@z,scalbnf@x
  7830   00245A  C1B5  F039         	movff	powf@z+1,scalbnf@x+1
  7831   00245E  C1B6  F03A         	movff	powf@z+2,scalbnf@x+2
  7832   002462  C1B7  F03B         	movff	powf@z+3,scalbnf@x+3
  7833   002466  C188  F03C         	movff	powf@n,scalbnf@n
  7834   00246A  C189  F03D         	movff	powf@n+1,scalbnf@n+1
  7835   00246E  EC59  F027         	call	_scalbnf	;wreg free
  7836   002472  C038  F1B4         	movff	?_scalbnf,powf@z
  7837   002476  C039  F1B5         	movff	?_scalbnf+1,powf@z+1
  7838   00247A  C03A  F1B6         	movff	?_scalbnf+2,powf@z+2
  7839   00247E  C03B  F1B7         	movff	?_scalbnf+3,powf@z+3
  7840   002482  EF4B  F012         	goto	l8297
  7841   002486                     l1406:
  7842                           
  7843                           ; BSR set to: 0
  7844   002486  C1A8  F1B4         	movff	powf@j,powf@z
  7845   00248A  C1A9  F1B5         	movff	powf@j+1,powf@z+1
  7846   00248E  C1AA  F1B6         	movff	powf@j+2,powf@z+2
  7847   002492  C1AB  F1B7         	movff	powf@j+3,powf@z+3
  7848   002496                     l8297:
  7849   002496  0101               	movlb	1	; () banked
  7850   002498  51B4               	movf	powf@z& (0+255),w,b
  7851   00249A  11B5               	iorwf	(powf@z+1)& (0+255),w,b
  7852   00249C  11B6               	iorwf	(powf@z+2)& (0+255),w,b
  7853   00249E  11B7               	iorwf	(powf@z+3)& (0+255),w,b
  7854   0024A0  B4D8               	btfsc	status,2,c
  7855   0024A2  EF55  F012         	goto	u10591
  7856   0024A6  EF57  F012         	goto	u10590
  7857   0024AA                     u10591:
  7858   0024AA  EF3E  F003         	goto	l7983
  7859   0024AE                     u10590:
  7860   0024AE                     
  7861                           ; BSR set to: 1
  7862   0024AE  5164               	movf	powf@sn& (0+255),w,b
  7863   0024B0  1BB4               	xorwf	powf@z& (0+255),f,b
  7864   0024B2  5165               	movf	(powf@sn+1)& (0+255),w,b
  7865   0024B4  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
  7866   0024B6  5166               	movf	(powf@sn+2)& (0+255),w,b
  7867   0024B8  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
  7868   0024BA  5167               	movf	(powf@sn+3)& (0+255),w,b
  7869   0024BC  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
  7870   0024BE  EF3E  F003         	goto	l7983
  7871   0024C2                     l1340:
  7872   0024C2  0012               	return		;funcret
  7873   0024C4                     __end_of_powf:
  7874                           	callstack 0
  7875                           
  7876 ;; *************** function _sqrtf *****************
  7877 ;; Defined at:
  7878 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sqrtf.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  x               4    0[COMRAM] float 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  ix              4   33[COMRAM] struct .
  7883 ;;  r               4   29[COMRAM] unsigned long 
  7884 ;;  m               4   25[COMRAM] long 
  7885 ;;  t               4   21[COMRAM] long 
  7886 ;;  q               4   17[COMRAM] long 
  7887 ;;  i               4   13[COMRAM] long 
  7888 ;;  s               4    9[COMRAM] long 
  7889 ;;  z               4    0        float 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  4    0[COMRAM] float 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7899 ;;      Params:         4       0       0       0       0       0       0       0       0
  7900 ;;      Locals:        28       0       0       0       0       0       0       0       0
  7901 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7902 ;;      Totals:        37       0       0       0       0       0       0       0       0
  7903 ;;Total ram usage:       37 bytes
  7904 ;; Hardware stack levels used: 1
  7905 ;; Hardware stack levels required when called: 1
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_powf
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text11
  7914   00416A                     __ptext11:
  7915                           	callstack 0
  7916   00416A                     _sqrtf:
  7917                           	callstack 27
  7918   00416A  C001  F022         	movff	sqrtf@x,sqrtf@ix
  7919   00416E  C002  F023         	movff	sqrtf@x+1,sqrtf@ix+1
  7920   004172  C003  F024         	movff	sqrtf@x+2,sqrtf@ix+2
  7921   004176  C004  F025         	movff	sqrtf@x+3,sqrtf@ix+3
  7922   00417A  0E00               	movlw	0
  7923   00417C  1422               	andwf	sqrtf@ix^0,w,c
  7924   00417E  6E05               	movwf	??_sqrtf^0,c
  7925   004180  0E00               	movlw	0
  7926   004182  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7927   004184  6E06               	movwf	(??_sqrtf+1)^0,c
  7928   004186  0E80               	movlw	128
  7929   004188  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7930   00418A  6E07               	movwf	(??_sqrtf+2)^0,c
  7931   00418C  0E7F               	movlw	127
  7932   00418E  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7933   004190  6E08               	movwf	(??_sqrtf+3)^0,c
  7934   004192  0E80               	movlw	128
  7935   004194  1807               	xorwf	(??_sqrtf+2)^0,w,c
  7936   004196  E109               	bnz	u9751
  7937   004198  0E7F               	movlw	127
  7938   00419A  1808               	xorwf	(??_sqrtf+3)^0,w,c
  7939   00419C  1005               	iorwf	??_sqrtf^0,w,c
  7940   00419E  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7941   0041A0  A4D8               	btfss	status,2,c
  7942   0041A2  EFD5  F020         	goto	u9751
  7943   0041A6  EFD7  F020         	goto	u9750
  7944   0041AA                     u9751:
  7945   0041AA  EF07  F021         	goto	l7693
  7946   0041AE                     u9750:
  7947   0041AE  0EFF               	movlw	255
  7948   0041B0  1422               	andwf	sqrtf@ix^0,w,c
  7949   0041B2  6E05               	movwf	??_sqrtf^0,c
  7950   0041B4  0EFF               	movlw	255
  7951   0041B6  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7952   0041B8  6E06               	movwf	(??_sqrtf+1)^0,c
  7953   0041BA  0E7F               	movlw	127
  7954   0041BC  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7955   0041BE  6E07               	movwf	(??_sqrtf+2)^0,c
  7956   0041C0  0E00               	movlw	0
  7957   0041C2  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7958   0041C4  6E08               	movwf	(??_sqrtf+3)^0,c
  7959   0041C6  5005               	movf	??_sqrtf^0,w,c
  7960   0041C8  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7961   0041CA  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7962   0041CC  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7963   0041CE  A4D8               	btfss	status,2,c
  7964   0041D0  EFEC  F020         	goto	u9761
  7965   0041D4  EFEE  F020         	goto	u9760
  7966   0041D8                     u9761:
  7967   0041D8  EFF5  F020         	goto	l7687
  7968   0041DC                     u9760:
  7969   0041DC  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7970   0041DE  EFF5  F020         	goto	u9770
  7971   0041E2  EFF3  F020         	goto	u9771
  7972   0041E6                     u9771:
  7973   0041E6  EFFD  F020         	goto	l7689
  7974   0041EA                     u9770:
  7975   0041EA                     l7687:
  7976   0041EA  0EFF               	movlw	255
  7977   0041EC  1222               	iorwf	sqrtf@ix^0,f,c
  7978   0041EE  0EFF               	movlw	255
  7979   0041F0  1223               	iorwf	(sqrtf@ix+1)^0,f,c
  7980   0041F2  0E7F               	movlw	127
  7981   0041F4  1224               	iorwf	(sqrtf@ix+2)^0,f,c
  7982   0041F6  0E00               	movlw	0
  7983   0041F8  1225               	iorwf	(sqrtf@ix+3)^0,f,c
  7984   0041FA                     l7689:
  7985   0041FA  C022  F001         	movff	sqrtf@ix,?_sqrtf
  7986   0041FE  C023  F002         	movff	sqrtf@ix+1,?_sqrtf+1
  7987   004202  C024  F003         	movff	sqrtf@ix+2,?_sqrtf+2
  7988   004206  C025  F004         	movff	sqrtf@ix+3,?_sqrtf+3
  7989   00420A  EFA3  F022         	goto	l1432
  7990   00420E                     l7693:
  7991   00420E  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7992   004210  EF16  F021         	goto	u9780
  7993   004214  5025               	movf	(sqrtf@ix+3)^0,w,c
  7994   004216  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7995   004218  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7996   00421A  E106               	bnz	u9781
  7997   00421C  0422               	decf	sqrtf@ix^0,w,c
  7998   00421E  B0D8               	btfsc	status,0,c
  7999   004220  EF14  F021         	goto	u9781
  8000   004224  EF16  F021         	goto	u9780
  8001   004228                     u9781:
  8002   004228  EF4D  F021         	goto	l7709
  8003   00422C                     u9780:
  8004   00422C  0EFF               	movlw	255
  8005   00422E  1422               	andwf	sqrtf@ix^0,w,c
  8006   004230  6E05               	movwf	??_sqrtf^0,c
  8007   004232  0EFF               	movlw	255
  8008   004234  1423               	andwf	(sqrtf@ix+1)^0,w,c
  8009   004236  6E06               	movwf	(??_sqrtf+1)^0,c
  8010   004238  0EFF               	movlw	255
  8011   00423A  1424               	andwf	(sqrtf@ix+2)^0,w,c
  8012   00423C  6E07               	movwf	(??_sqrtf+2)^0,c
  8013   00423E  0E7F               	movlw	127
  8014   004240  1425               	andwf	(sqrtf@ix+3)^0,w,c
  8015   004242  6E08               	movwf	(??_sqrtf+3)^0,c
  8016   004244  5005               	movf	??_sqrtf^0,w,c
  8017   004246  1006               	iorwf	(??_sqrtf+1)^0,w,c
  8018   004248  1007               	iorwf	(??_sqrtf+2)^0,w,c
  8019   00424A  1008               	iorwf	(??_sqrtf+3)^0,w,c
  8020   00424C  A4D8               	btfss	status,2,c
  8021   00424E  EF2B  F021         	goto	u9791
  8022   004252  EF2D  F021         	goto	u9790
  8023   004256                     u9791:
  8024   004256  EF37  F021         	goto	l7701
  8025   00425A                     u9790:
  8026   00425A  0E00               	movlw	0
  8027   00425C  6E01               	movwf	?_sqrtf^0,c
  8028   00425E  0E00               	movlw	0
  8029   004260  6E02               	movwf	(?_sqrtf+1)^0,c
  8030   004262  0E00               	movlw	0
  8031   004264  6E03               	movwf	(?_sqrtf+2)^0,c
  8032   004266  0E00               	movlw	0
  8033   004268  6E04               	movwf	(?_sqrtf+3)^0,c
  8034   00426A  EFA3  F022         	goto	l1432
  8035   00426E                     l7701:
  8036   00426E  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  8037   004270  EF3E  F021         	goto	u9800
  8038   004274  EF3C  F021         	goto	u9801
  8039   004278                     u9801:
  8040   004278  EF4D  F021         	goto	l7709
  8041   00427C                     u9800:
  8042   00427C  0E00               	movlw	0
  8043   00427E  0101               	movlb	1	; () banked
  8044   004280  6FED               	movwf	(_errno+1)& (0+255),b
  8045   004282  0E21               	movlw	33
  8046   004284  6FEC               	movwf	_errno& (0+255),b
  8047   004286  0EFF               	movlw	255
  8048   004288  6E22               	movwf	sqrtf@ix^0,c
  8049   00428A  0EFF               	movlw	255
  8050   00428C  6E23               	movwf	(sqrtf@ix+1)^0,c
  8051   00428E  0EFF               	movlw	255
  8052   004290  6E24               	movwf	(sqrtf@ix+2)^0,c
  8053   004292  0E7F               	movlw	127
  8054   004294  6E25               	movwf	(sqrtf@ix+3)^0,c
  8055   004296  EFFD  F020         	goto	l7689
  8056   00429A                     l7709:
  8057   00429A  0E17               	movlw	23
  8058   00429C  6E05               	movwf	??_sqrtf^0,c
  8059   00429E  C022  F006         	movff	sqrtf@ix,??_sqrtf+1
  8060   0042A2  C023  F007         	movff	sqrtf@ix+1,??_sqrtf+2
  8061   0042A6  C024  F008         	movff	sqrtf@ix+2,??_sqrtf+3
  8062   0042AA  C025  F009         	movff	sqrtf@ix+3,??_sqrtf+4
  8063   0042AE                     u9815:
  8064   0042AE  6605               	tstfsz	??_sqrtf^0,c
  8065   0042B0  EF5C  F021         	goto	u9816
  8066   0042B4  EF64  F021         	goto	u9817
  8067   0042B8                     u9816:
  8068   0042B8  3409               	rlcf	(??_sqrtf+4)^0,w,c
  8069   0042BA  3209               	rrcf	(??_sqrtf+4)^0,f,c
  8070   0042BC  3208               	rrcf	(??_sqrtf+3)^0,f,c
  8071   0042BE  3207               	rrcf	(??_sqrtf+2)^0,f,c
  8072   0042C0  3206               	rrcf	(??_sqrtf+1)^0,f,c
  8073   0042C2  2E05               	decfsz	??_sqrtf^0,f,c
  8074   0042C4  EF57  F021         	goto	u9815
  8075   0042C8                     u9817:
  8076   0042C8  C006  F01A         	movff	??_sqrtf+1,sqrtf@m
  8077   0042CC  C007  F01B         	movff	??_sqrtf+2,sqrtf@m+1
  8078   0042D0  C008  F01C         	movff	??_sqrtf+3,sqrtf@m+2
  8079   0042D4  C009  F01D         	movff	??_sqrtf+4,sqrtf@m+3
  8080   0042D8  501A               	movf	sqrtf@m^0,w,c
  8081   0042DA  101B               	iorwf	(sqrtf@m+1)^0,w,c
  8082   0042DC  101C               	iorwf	(sqrtf@m+2)^0,w,c
  8083   0042DE  101D               	iorwf	(sqrtf@m+3)^0,w,c
  8084   0042E0  A4D8               	btfss	status,2,c
  8085   0042E2  EF75  F021         	goto	u9821
  8086   0042E6  EF77  F021         	goto	u9820
  8087   0042EA                     u9821:
  8088   0042EA  EFA7  F021         	goto	l1436
  8089   0042EE                     u9820:
  8090   0042EE  0E00               	movlw	0
  8091   0042F0  6E0E               	movwf	sqrtf@i^0,c
  8092   0042F2  0E00               	movlw	0
  8093   0042F4  6E0F               	movwf	(sqrtf@i+1)^0,c
  8094   0042F6  0E00               	movlw	0
  8095   0042F8  6E10               	movwf	(sqrtf@i+2)^0,c
  8096   0042FA  0E00               	movlw	0
  8097   0042FC  6E11               	movwf	(sqrtf@i+3)^0,c
  8098   0042FE  EF8C  F021         	goto	l7717
  8099   004302                     l7713:
  8100   004302  90D8               	bcf	status,0,c
  8101   004304  3622               	rlcf	sqrtf@ix^0,f,c
  8102   004306  3623               	rlcf	(sqrtf@ix+1)^0,f,c
  8103   004308  3624               	rlcf	(sqrtf@ix+2)^0,f,c
  8104   00430A  3625               	rlcf	(sqrtf@ix+3)^0,f,c
  8105   00430C  0E01               	movlw	1
  8106   00430E  260E               	addwf	sqrtf@i^0,f,c
  8107   004310  0E00               	movlw	0
  8108   004312  220F               	addwfc	(sqrtf@i+1)^0,f,c
  8109   004314  2210               	addwfc	(sqrtf@i+2)^0,f,c
  8110   004316  2211               	addwfc	(sqrtf@i+3)^0,f,c
  8111   004318                     l7717:
  8112   004318  AE24               	btfss	(sqrtf@ix+2)^0,7,c
  8113   00431A  EF91  F021         	goto	u9831
  8114   00431E  EF93  F021         	goto	u9830
  8115   004322                     u9831:
  8116   004322  EF81  F021         	goto	l7713
  8117   004326                     u9830:
  8118   004326  0EFF               	movlw	255
  8119   004328  240E               	addwf	sqrtf@i^0,w,c
  8120   00432A  6E05               	movwf	??_sqrtf^0,c
  8121   00432C  0EFF               	movlw	255
  8122   00432E  200F               	addwfc	(sqrtf@i+1)^0,w,c
  8123   004330  6E06               	movwf	(??_sqrtf+1)^0,c
  8124   004332  0EFF               	movlw	255
  8125   004334  2010               	addwfc	(sqrtf@i+2)^0,w,c
  8126   004336  6E07               	movwf	(??_sqrtf+2)^0,c
  8127   004338  0EFF               	movlw	255
  8128   00433A  2011               	addwfc	(sqrtf@i+3)^0,w,c
  8129   00433C  6E08               	movwf	(??_sqrtf+3)^0,c
  8130   00433E  5005               	movf	??_sqrtf^0,w,c
  8131   004340  5E1A               	subwf	sqrtf@m^0,f,c
  8132   004342  5006               	movf	(??_sqrtf+1)^0,w,c
  8133   004344  5A1B               	subwfb	(sqrtf@m+1)^0,f,c
  8134   004346  5007               	movf	(??_sqrtf+2)^0,w,c
  8135   004348  5A1C               	subwfb	(sqrtf@m+2)^0,f,c
  8136   00434A  5008               	movf	(??_sqrtf+3)^0,w,c
  8137   00434C  5A1D               	subwfb	(sqrtf@m+3)^0,f,c
  8138   00434E                     l1436:
  8139   00434E  0E81               	movlw	129
  8140   004350  261A               	addwf	sqrtf@m^0,f,c
  8141   004352  0EFF               	movlw	255
  8142   004354  221B               	addwfc	(sqrtf@m+1)^0,f,c
  8143   004356  0EFF               	movlw	255
  8144   004358  221C               	addwfc	(sqrtf@m+2)^0,f,c
  8145   00435A  0EFF               	movlw	255
  8146   00435C  221D               	addwfc	(sqrtf@m+3)^0,f,c
  8147   00435E  0EFF               	movlw	255
  8148   004360  1422               	andwf	sqrtf@ix^0,w,c
  8149   004362  6E05               	movwf	??_sqrtf^0,c
  8150   004364  0EFF               	movlw	255
  8151   004366  1423               	andwf	(sqrtf@ix+1)^0,w,c
  8152   004368  6E06               	movwf	(??_sqrtf+1)^0,c
  8153   00436A  0E7F               	movlw	127
  8154   00436C  1424               	andwf	(sqrtf@ix+2)^0,w,c
  8155   00436E  6E07               	movwf	(??_sqrtf+2)^0,c
  8156   004370  0E00               	movlw	0
  8157   004372  1425               	andwf	(sqrtf@ix+3)^0,w,c
  8158   004374  6E08               	movwf	(??_sqrtf+3)^0,c
  8159   004376  0E00               	movlw	0
  8160   004378  1005               	iorwf	??_sqrtf^0,w,c
  8161   00437A  6E22               	movwf	sqrtf@ix^0,c
  8162   00437C  0E00               	movlw	0
  8163   00437E  1006               	iorwf	(??_sqrtf+1)^0,w,c
  8164   004380  6E23               	movwf	(sqrtf@ix+1)^0,c
  8165   004382  0E80               	movlw	128
  8166   004384  1007               	iorwf	(??_sqrtf+2)^0,w,c
  8167   004386  6E24               	movwf	(sqrtf@ix+2)^0,c
  8168   004388  0E00               	movlw	0
  8169   00438A  1008               	iorwf	(??_sqrtf+3)^0,w,c
  8170   00438C  6E25               	movwf	(sqrtf@ix+3)^0,c
  8171   00438E  A01A               	btfss	sqrtf@m^0,0,c
  8172   004390  EFCC  F021         	goto	u9841
  8173   004394  EFCE  F021         	goto	u9840
  8174   004398                     u9841:
  8175   004398  EFD6  F021         	goto	l1440
  8176   00439C                     u9840:
  8177   00439C  5022               	movf	sqrtf@ix^0,w,c
  8178   00439E  2622               	addwf	sqrtf@ix^0,f,c
  8179   0043A0  5023               	movf	(sqrtf@ix+1)^0,w,c
  8180   0043A2  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  8181   0043A4  5024               	movf	(sqrtf@ix+2)^0,w,c
  8182   0043A6  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  8183   0043A8  5025               	movf	(sqrtf@ix+3)^0,w,c
  8184   0043AA  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  8185   0043AC                     l1440:
  8186   0043AC  341D               	rlcf	(sqrtf@m+3)^0,w,c
  8187   0043AE  321D               	rrcf	(sqrtf@m+3)^0,f,c
  8188   0043B0  321C               	rrcf	(sqrtf@m+2)^0,f,c
  8189   0043B2  321B               	rrcf	(sqrtf@m+1)^0,f,c
  8190   0043B4  321A               	rrcf	sqrtf@m^0,f,c
  8191   0043B6  5022               	movf	sqrtf@ix^0,w,c
  8192   0043B8  2622               	addwf	sqrtf@ix^0,f,c
  8193   0043BA  5023               	movf	(sqrtf@ix+1)^0,w,c
  8194   0043BC  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  8195   0043BE  5024               	movf	(sqrtf@ix+2)^0,w,c
  8196   0043C0  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  8197   0043C2  5025               	movf	(sqrtf@ix+3)^0,w,c
  8198   0043C4  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  8199   0043C6  0E00               	movlw	0
  8200   0043C8  6E0A               	movwf	sqrtf@s^0,c
  8201   0043CA  0E00               	movlw	0
  8202   0043CC  6E0B               	movwf	(sqrtf@s+1)^0,c
  8203   0043CE  0E00               	movlw	0
  8204   0043D0  6E0C               	movwf	(sqrtf@s+2)^0,c
  8205   0043D2  0E00               	movlw	0
  8206   0043D4  6E0D               	movwf	(sqrtf@s+3)^0,c
  8207   0043D6  C00A  F012         	movff	sqrtf@s,sqrtf@q
  8208   0043DA  C00B  F013         	movff	sqrtf@s+1,sqrtf@q+1
  8209   0043DE  C00C  F014         	movff	sqrtf@s+2,sqrtf@q+2
  8210   0043E2  C00D  F015         	movff	sqrtf@s+3,sqrtf@q+3
  8211   0043E6  0E00               	movlw	0
  8212   0043E8  6E1E               	movwf	sqrtf@r^0,c
  8213   0043EA  0E00               	movlw	0
  8214   0043EC  6E1F               	movwf	(sqrtf@r+1)^0,c
  8215   0043EE  0E00               	movlw	0
  8216   0043F0  6E20               	movwf	(sqrtf@r+2)^0,c
  8217   0043F2  0E01               	movlw	1
  8218   0043F4  6E21               	movwf	(sqrtf@r+3)^0,c
  8219   0043F6  EF45  F022         	goto	l7735
  8220   0043FA                     l7729:
  8221   0043FA  500A               	movf	sqrtf@s^0,w,c
  8222   0043FC  241E               	addwf	sqrtf@r^0,w,c
  8223   0043FE  6E16               	movwf	sqrtf@t^0,c
  8224   004400  500B               	movf	(sqrtf@s+1)^0,w,c
  8225   004402  201F               	addwfc	(sqrtf@r+1)^0,w,c
  8226   004404  6E17               	movwf	(sqrtf@t+1)^0,c
  8227   004406  500C               	movf	(sqrtf@s+2)^0,w,c
  8228   004408  2020               	addwfc	(sqrtf@r+2)^0,w,c
  8229   00440A  6E18               	movwf	(sqrtf@t+2)^0,c
  8230   00440C  500D               	movf	(sqrtf@s+3)^0,w,c
  8231   00440E  2021               	addwfc	(sqrtf@r+3)^0,w,c
  8232   004410  6E19               	movwf	(sqrtf@t+3)^0,c
  8233   004412  5016               	movf	sqrtf@t^0,w,c
  8234   004414  5C22               	subwf	sqrtf@ix^0,w,c
  8235   004416  5017               	movf	(sqrtf@t+1)^0,w,c
  8236   004418  5823               	subwfb	(sqrtf@ix+1)^0,w,c
  8237   00441A  5018               	movf	(sqrtf@t+2)^0,w,c
  8238   00441C  5824               	subwfb	(sqrtf@ix+2)^0,w,c
  8239   00441E  5025               	movf	(sqrtf@ix+3)^0,w,c
  8240   004420  0A80               	xorlw	128
  8241   004422  6E05               	movwf	??_sqrtf^0,c
  8242   004424  5019               	movf	(sqrtf@t+3)^0,w,c
  8243   004426  0A80               	xorlw	128
  8244   004428  5805               	subwfb	??_sqrtf^0,w,c
  8245   00442A  A0D8               	btfss	status,0,c
  8246   00442C  EF1A  F022         	goto	u9851
  8247   004430  EF1C  F022         	goto	u9850
  8248   004434                     u9851:
  8249   004434  EF38  F022         	goto	l1443
  8250   004438                     u9850:
  8251   004438  5016               	movf	sqrtf@t^0,w,c
  8252   00443A  241E               	addwf	sqrtf@r^0,w,c
  8253   00443C  6E0A               	movwf	sqrtf@s^0,c
  8254   00443E  5017               	movf	(sqrtf@t+1)^0,w,c
  8255   004440  201F               	addwfc	(sqrtf@r+1)^0,w,c
  8256   004442  6E0B               	movwf	(sqrtf@s+1)^0,c
  8257   004444  5018               	movf	(sqrtf@t+2)^0,w,c
  8258   004446  2020               	addwfc	(sqrtf@r+2)^0,w,c
  8259   004448  6E0C               	movwf	(sqrtf@s+2)^0,c
  8260   00444A  5019               	movf	(sqrtf@t+3)^0,w,c
  8261   00444C  2021               	addwfc	(sqrtf@r+3)^0,w,c
  8262   00444E  6E0D               	movwf	(sqrtf@s+3)^0,c
  8263   004450  5016               	movf	sqrtf@t^0,w,c
  8264   004452  5E22               	subwf	sqrtf@ix^0,f,c
  8265   004454  5017               	movf	(sqrtf@t+1)^0,w,c
  8266   004456  5A23               	subwfb	(sqrtf@ix+1)^0,f,c
  8267   004458  5018               	movf	(sqrtf@t+2)^0,w,c
  8268   00445A  5A24               	subwfb	(sqrtf@ix+2)^0,f,c
  8269   00445C  5019               	movf	(sqrtf@t+3)^0,w,c
  8270   00445E  5A25               	subwfb	(sqrtf@ix+3)^0,f,c
  8271   004460  501E               	movf	sqrtf@r^0,w,c
  8272   004462  2612               	addwf	sqrtf@q^0,f,c
  8273   004464  501F               	movf	(sqrtf@r+1)^0,w,c
  8274   004466  2213               	addwfc	(sqrtf@q+1)^0,f,c
  8275   004468  5020               	movf	(sqrtf@r+2)^0,w,c
  8276   00446A  2214               	addwfc	(sqrtf@q+2)^0,f,c
  8277   00446C  5021               	movf	(sqrtf@r+3)^0,w,c
  8278   00446E  2215               	addwfc	(sqrtf@q+3)^0,f,c
  8279   004470                     l1443:
  8280   004470  5022               	movf	sqrtf@ix^0,w,c
  8281   004472  2622               	addwf	sqrtf@ix^0,f,c
  8282   004474  5023               	movf	(sqrtf@ix+1)^0,w,c
  8283   004476  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  8284   004478  5024               	movf	(sqrtf@ix+2)^0,w,c
  8285   00447A  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  8286   00447C  5025               	movf	(sqrtf@ix+3)^0,w,c
  8287   00447E  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  8288   004480  90D8               	bcf	status,0,c
  8289   004482  3221               	rrcf	(sqrtf@r+3)^0,f,c
  8290   004484  3220               	rrcf	(sqrtf@r+2)^0,f,c
  8291   004486  321F               	rrcf	(sqrtf@r+1)^0,f,c
  8292   004488  321E               	rrcf	sqrtf@r^0,f,c
  8293   00448A                     l7735:
  8294   00448A  501E               	movf	sqrtf@r^0,w,c
  8295   00448C  101F               	iorwf	(sqrtf@r+1)^0,w,c
  8296   00448E  1020               	iorwf	(sqrtf@r+2)^0,w,c
  8297   004490  1021               	iorwf	(sqrtf@r+3)^0,w,c
  8298   004492  A4D8               	btfss	status,2,c
  8299   004494  EF4E  F022         	goto	u9861
  8300   004498  EF50  F022         	goto	u9860
  8301   00449C                     u9861:
  8302   00449C  EFFD  F021         	goto	l7729
  8303   0044A0                     u9860:
  8304   0044A0  5022               	movf	sqrtf@ix^0,w,c
  8305   0044A2  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  8306   0044A4  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  8307   0044A6  1025               	iorwf	(sqrtf@ix+3)^0,w,c
  8308   0044A8  B4D8               	btfsc	status,2,c
  8309   0044AA  EF59  F022         	goto	u9871
  8310   0044AE  EF5B  F022         	goto	u9870
  8311   0044B2                     u9871:
  8312   0044B2  EF6F  F022         	goto	l1445
  8313   0044B6                     u9870:
  8314   0044B6  0E01               	movlw	1
  8315   0044B8  1412               	andwf	sqrtf@q^0,w,c
  8316   0044BA  6E05               	movwf	??_sqrtf^0,c
  8317   0044BC  0E00               	movlw	0
  8318   0044BE  1413               	andwf	(sqrtf@q+1)^0,w,c
  8319   0044C0  6E06               	movwf	(??_sqrtf+1)^0,c
  8320   0044C2  0E00               	movlw	0
  8321   0044C4  1414               	andwf	(sqrtf@q+2)^0,w,c
  8322   0044C6  6E07               	movwf	(??_sqrtf+2)^0,c
  8323   0044C8  0E00               	movlw	0
  8324   0044CA  1415               	andwf	(sqrtf@q+3)^0,w,c
  8325   0044CC  6E08               	movwf	(??_sqrtf+3)^0,c
  8326   0044CE  5005               	movf	??_sqrtf^0,w,c
  8327   0044D0  2612               	addwf	sqrtf@q^0,f,c
  8328   0044D2  5006               	movf	(??_sqrtf+1)^0,w,c
  8329   0044D4  2213               	addwfc	(sqrtf@q+1)^0,f,c
  8330   0044D6  5007               	movf	(??_sqrtf+2)^0,w,c
  8331   0044D8  2214               	addwfc	(sqrtf@q+2)^0,f,c
  8332   0044DA  5008               	movf	(??_sqrtf+3)^0,w,c
  8333   0044DC  2215               	addwfc	(sqrtf@q+3)^0,f,c
  8334   0044DE                     l1445:
  8335   0044DE  C012  F005         	movff	sqrtf@q,??_sqrtf
  8336   0044E2  C013  F006         	movff	sqrtf@q+1,??_sqrtf+1
  8337   0044E6  C014  F007         	movff	sqrtf@q+2,??_sqrtf+2
  8338   0044EA  C015  F008         	movff	sqrtf@q+3,??_sqrtf+3
  8339   0044EE  3408               	rlcf	(??_sqrtf+3)^0,w,c
  8340   0044F0  3208               	rrcf	(??_sqrtf+3)^0,f,c
  8341   0044F2  3207               	rrcf	(??_sqrtf+2)^0,f,c
  8342   0044F4  3206               	rrcf	(??_sqrtf+1)^0,f,c
  8343   0044F6  3205               	rrcf	??_sqrtf^0,f,c
  8344   0044F8  0E00               	movlw	0
  8345   0044FA  2405               	addwf	??_sqrtf^0,w,c
  8346   0044FC  6E22               	movwf	sqrtf@ix^0,c
  8347   0044FE  0E00               	movlw	0
  8348   004500  2006               	addwfc	(??_sqrtf+1)^0,w,c
  8349   004502  6E23               	movwf	(sqrtf@ix+1)^0,c
  8350   004504  0E00               	movlw	0
  8351   004506  2007               	addwfc	(??_sqrtf+2)^0,w,c
  8352   004508  6E24               	movwf	(sqrtf@ix+2)^0,c
  8353   00450A  0E3F               	movlw	63
  8354   00450C  2008               	addwfc	(??_sqrtf+3)^0,w,c
  8355   00450E  6E25               	movwf	(sqrtf@ix+3)^0,c
  8356   004510  C01A  F005         	movff	sqrtf@m,??_sqrtf
  8357   004514  C01B  F006         	movff	sqrtf@m+1,??_sqrtf+1
  8358   004518  C01C  F007         	movff	sqrtf@m+2,??_sqrtf+2
  8359   00451C  C01D  F008         	movff	sqrtf@m+3,??_sqrtf+3
  8360   004520  0E17               	movlw	23
  8361   004522                     u9885:
  8362   004522  90D8               	bcf	status,0,c
  8363   004524  3605               	rlcf	??_sqrtf^0,f,c
  8364   004526  3606               	rlcf	(??_sqrtf+1)^0,f,c
  8365   004528  3607               	rlcf	(??_sqrtf+2)^0,f,c
  8366   00452A  3608               	rlcf	(??_sqrtf+3)^0,f,c
  8367   00452C  2EE8               	decfsz	wreg,f,c
  8368   00452E  EF91  F022         	goto	u9885
  8369   004532  5005               	movf	??_sqrtf^0,w,c
  8370   004534  2622               	addwf	sqrtf@ix^0,f,c
  8371   004536  5006               	movf	(??_sqrtf+1)^0,w,c
  8372   004538  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  8373   00453A  5007               	movf	(??_sqrtf+2)^0,w,c
  8374   00453C  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  8375   00453E  5008               	movf	(??_sqrtf+3)^0,w,c
  8376   004540  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  8377   004542  EFFD  F020         	goto	l7689
  8378   004546                     l1432:
  8379   004546  0012               	return		;funcret
  8380   004548                     __end_of_sqrtf:
  8381                           	callstack 0
  8382                           
  8383 ;; *************** function _scalbnf *****************
  8384 ;; Defined at:
  8385 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\scalbnf.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  x               4   55[COMRAM] float 
  8388 ;;  n               2   59[COMRAM] int 
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;  y               4   69[COMRAM] float 
  8391 ;;  u               4   65[COMRAM] struct .
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  4   55[COMRAM] float 
  8394 ;; Registers used:
  8395 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8401 ;;      Params:         6       0       0       0       0       0       0       0       0
  8402 ;;      Locals:         8       0       0       0       0       0       0       0       0
  8403 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8404 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8405 ;;Total ram usage:       18 bytes
  8406 ;; Hardware stack levels used: 1
  8407 ;; Hardware stack levels required when called: 2
  8408 ;; This function calls:
  8409 ;;		___flmul
  8410 ;; This function is called by:
  8411 ;;		_powf
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           	psect	text12
  8416   004EB2                     __ptext12:
  8417                           	callstack 0
  8418   004EB2                     _scalbnf:
  8419                           	callstack 26
  8420   004EB2  C038  F046         	movff	scalbnf@x,scalbnf@y
  8421   004EB6  C039  F047         	movff	scalbnf@x+1,scalbnf@y+1
  8422   004EBA  C03A  F048         	movff	scalbnf@x+2,scalbnf@y+2
  8423   004EBE  C03B  F049         	movff	scalbnf@x+3,scalbnf@y+3
  8424   004EC2  BE3D               	btfsc	(scalbnf@n+1)^0,7,c
  8425   004EC4  EF6D  F027         	goto	u9891
  8426   004EC8  503D               	movf	(scalbnf@n+1)^0,w,c
  8427   004ECA  E109               	bnz	u9890
  8428   004ECC  0E80               	movlw	128
  8429   004ECE  5C3C               	subwf	scalbnf@n^0,w,c
  8430   004ED0  A0D8               	btfss	status,0,c
  8431   004ED2  EF6D  F027         	goto	u9891
  8432   004ED6  EF6F  F027         	goto	u9890
  8433   004EDA                     u9891:
  8434   004EDA  EFCD  F027         	goto	l7763
  8435   004EDE                     u9890:
  8436   004EDE  C046  F01F         	movff	scalbnf@y,___flmul@b
  8437   004EE2  C047  F020         	movff	scalbnf@y+1,___flmul@b+1
  8438   004EE6  C048  F021         	movff	scalbnf@y+2,___flmul@b+2
  8439   004EEA  C049  F022         	movff	scalbnf@y+3,___flmul@b+3
  8440   004EEE  0E00               	movlw	0
  8441   004EF0  6E23               	movwf	___flmul@a^0,c
  8442   004EF2  0E00               	movlw	0
  8443   004EF4  6E24               	movwf	(___flmul@a+1)^0,c
  8444   004EF6  0E00               	movlw	0
  8445   004EF8  6E25               	movwf	(___flmul@a+2)^0,c
  8446   004EFA  0E7F               	movlw	127
  8447   004EFC  6E26               	movwf	(___flmul@a+3)^0,c
  8448   004EFE  ECA2  F01E         	call	___flmul	;wreg free
  8449   004F02  C01F  F046         	movff	?___flmul,scalbnf@y
  8450   004F06  C020  F047         	movff	?___flmul+1,scalbnf@y+1
  8451   004F0A  C021  F048         	movff	?___flmul+2,scalbnf@y+2
  8452   004F0E  C022  F049         	movff	?___flmul+3,scalbnf@y+3
  8453   004F12  0E81               	movlw	129
  8454   004F14  263C               	addwf	scalbnf@n^0,f,c
  8455   004F16  0EFF               	movlw	255
  8456   004F18  223D               	addwfc	(scalbnf@n+1)^0,f,c
  8457   004F1A  BE3D               	btfsc	(scalbnf@n+1)^0,7,c
  8458   004F1C  EF99  F027         	goto	u9901
  8459   004F20  503D               	movf	(scalbnf@n+1)^0,w,c
  8460   004F22  E109               	bnz	u9900
  8461   004F24  0E80               	movlw	128
  8462   004F26  5C3C               	subwf	scalbnf@n^0,w,c
  8463   004F28  A0D8               	btfss	status,0,c
  8464   004F2A  EF99  F027         	goto	u9901
  8465   004F2E  EF9B  F027         	goto	u9900
  8466   004F32                     u9901:
  8467   004F32  EF37  F028         	goto	l7779
  8468   004F36                     u9900:
  8469   004F36  C046  F01F         	movff	scalbnf@y,___flmul@b
  8470   004F3A  C047  F020         	movff	scalbnf@y+1,___flmul@b+1
  8471   004F3E  C048  F021         	movff	scalbnf@y+2,___flmul@b+2
  8472   004F42  C049  F022         	movff	scalbnf@y+3,___flmul@b+3
  8473   004F46  0E00               	movlw	0
  8474   004F48  6E23               	movwf	___flmul@a^0,c
  8475   004F4A  0E00               	movlw	0
  8476   004F4C  6E24               	movwf	(___flmul@a+1)^0,c
  8477   004F4E  0E00               	movlw	0
  8478   004F50  6E25               	movwf	(___flmul@a+2)^0,c
  8479   004F52  0E7F               	movlw	127
  8480   004F54  6E26               	movwf	(___flmul@a+3)^0,c
  8481   004F56  ECA2  F01E         	call	___flmul	;wreg free
  8482   004F5A  C01F  F046         	movff	?___flmul,scalbnf@y
  8483   004F5E  C020  F047         	movff	?___flmul+1,scalbnf@y+1
  8484   004F62  C021  F048         	movff	?___flmul+2,scalbnf@y+2
  8485   004F66  C022  F049         	movff	?___flmul+3,scalbnf@y+3
  8486   004F6A  0E81               	movlw	129
  8487   004F6C  263C               	addwf	scalbnf@n^0,f,c
  8488   004F6E  0EFF               	movlw	255
  8489   004F70  223D               	addwfc	(scalbnf@n+1)^0,f,c
  8490   004F72  BE3D               	btfsc	(scalbnf@n+1)^0,7,c
  8491   004F74  EFC5  F027         	goto	u9911
  8492   004F78  503D               	movf	(scalbnf@n+1)^0,w,c
  8493   004F7A  E109               	bnz	u9910
  8494   004F7C  0E80               	movlw	128
  8495   004F7E  5C3C               	subwf	scalbnf@n^0,w,c
  8496   004F80  A0D8               	btfss	status,0,c
  8497   004F82  EFC5  F027         	goto	u9911
  8498   004F86  EFC7  F027         	goto	u9910
  8499   004F8A                     u9911:
  8500   004F8A  EF37  F028         	goto	l7779
  8501   004F8E                     u9910:
  8502   004F8E  0E00               	movlw	0
  8503   004F90  6E3D               	movwf	(scalbnf@n+1)^0,c
  8504   004F92  0E7F               	movlw	127
  8505   004F94  6E3C               	movwf	scalbnf@n^0,c
  8506   004F96  EF37  F028         	goto	l7779
  8507   004F9A                     l7763:
  8508   004F9A  AE3D               	btfss	(scalbnf@n+1)^0,7,c
  8509   004F9C  EFD9  F027         	goto	u9921
  8510   004FA0  0E82               	movlw	130
  8511   004FA2  5C3C               	subwf	scalbnf@n^0,w,c
  8512   004FA4  0EFF               	movlw	255
  8513   004FA6  583D               	subwfb	(scalbnf@n+1)^0,w,c
  8514   004FA8  B0D8               	btfsc	status,0,c
  8515   004FAA  EFD9  F027         	goto	u9921
  8516   004FAE  EFDB  F027         	goto	u9920
  8517   004FB2                     u9921:
  8518   004FB2  EF37  F028         	goto	l7779
  8519   004FB6                     u9920:
  8520   004FB6  C046  F01F         	movff	scalbnf@y,___flmul@b
  8521   004FBA  C047  F020         	movff	scalbnf@y+1,___flmul@b+1
  8522   004FBE  C048  F021         	movff	scalbnf@y+2,___flmul@b+2
  8523   004FC2  C049  F022         	movff	scalbnf@y+3,___flmul@b+3
  8524   004FC6  0E00               	movlw	0
  8525   004FC8  6E23               	movwf	___flmul@a^0,c
  8526   004FCA  0E00               	movlw	0
  8527   004FCC  6E24               	movwf	(___flmul@a+1)^0,c
  8528   004FCE  0E80               	movlw	128
  8529   004FD0  6E25               	movwf	(___flmul@a+2)^0,c
  8530   004FD2  0E0C               	movlw	12
  8531   004FD4  6E26               	movwf	(___flmul@a+3)^0,c
  8532   004FD6  ECA2  F01E         	call	___flmul	;wreg free
  8533   004FDA  C01F  F046         	movff	?___flmul,scalbnf@y
  8534   004FDE  C020  F047         	movff	?___flmul+1,scalbnf@y+1
  8535   004FE2  C021  F048         	movff	?___flmul+2,scalbnf@y+2
  8536   004FE6  C022  F049         	movff	?___flmul+3,scalbnf@y+3
  8537   004FEA  0E66               	movlw	102
  8538   004FEC  263C               	addwf	scalbnf@n^0,f,c
  8539   004FEE  0E00               	movlw	0
  8540   004FF0  223D               	addwfc	(scalbnf@n+1)^0,f,c
  8541   004FF2  AE3D               	btfss	(scalbnf@n+1)^0,7,c
  8542   004FF4  EF05  F028         	goto	u9931
  8543   004FF8  0E82               	movlw	130
  8544   004FFA  5C3C               	subwf	scalbnf@n^0,w,c
  8545   004FFC  0EFF               	movlw	255
  8546   004FFE  583D               	subwfb	(scalbnf@n+1)^0,w,c
  8547   005000  B0D8               	btfsc	status,0,c
  8548   005002  EF05  F028         	goto	u9931
  8549   005006  EF07  F028         	goto	u9930
  8550   00500A                     u9931:
  8551   00500A  EF37  F028         	goto	l7779
  8552   00500E                     u9930:
  8553   00500E  C046  F01F         	movff	scalbnf@y,___flmul@b
  8554   005012  C047  F020         	movff	scalbnf@y+1,___flmul@b+1
  8555   005016  C048  F021         	movff	scalbnf@y+2,___flmul@b+2
  8556   00501A  C049  F022         	movff	scalbnf@y+3,___flmul@b+3
  8557   00501E  0E00               	movlw	0
  8558   005020  6E23               	movwf	___flmul@a^0,c
  8559   005022  0E00               	movlw	0
  8560   005024  6E24               	movwf	(___flmul@a+1)^0,c
  8561   005026  0E80               	movlw	128
  8562   005028  6E25               	movwf	(___flmul@a+2)^0,c
  8563   00502A  0E0C               	movlw	12
  8564   00502C  6E26               	movwf	(___flmul@a+3)^0,c
  8565   00502E  ECA2  F01E         	call	___flmul	;wreg free
  8566   005032  C01F  F046         	movff	?___flmul,scalbnf@y
  8567   005036  C020  F047         	movff	?___flmul+1,scalbnf@y+1
  8568   00503A  C021  F048         	movff	?___flmul+2,scalbnf@y+2
  8569   00503E  C022  F049         	movff	?___flmul+3,scalbnf@y+3
  8570   005042  0E66               	movlw	102
  8571   005044  263C               	addwf	scalbnf@n^0,f,c
  8572   005046  0E00               	movlw	0
  8573   005048  223D               	addwfc	(scalbnf@n+1)^0,f,c
  8574   00504A  AE3D               	btfss	(scalbnf@n+1)^0,7,c
  8575   00504C  EF31  F028         	goto	u9941
  8576   005050  0E82               	movlw	130
  8577   005052  5C3C               	subwf	scalbnf@n^0,w,c
  8578   005054  0EFF               	movlw	255
  8579   005056  583D               	subwfb	(scalbnf@n+1)^0,w,c
  8580   005058  B0D8               	btfsc	status,0,c
  8581   00505A  EF31  F028         	goto	u9941
  8582   00505E  EF33  F028         	goto	u9940
  8583   005062                     u9941:
  8584   005062  EF37  F028         	goto	l7779
  8585   005066                     u9940:
  8586   005066  0EFF               	movlw	255
  8587   005068  6E3D               	movwf	(scalbnf@n+1)^0,c
  8588   00506A  0E82               	movlw	130
  8589   00506C  6E3C               	movwf	scalbnf@n^0,c
  8590   00506E                     l7779:
  8591   00506E  0E7F               	movlw	127
  8592   005070  243C               	addwf	scalbnf@n^0,w,c
  8593   005072  6E3E               	movwf	??_scalbnf^0,c
  8594   005074  0E00               	movlw	0
  8595   005076  203D               	addwfc	(scalbnf@n+1)^0,w,c
  8596   005078  6E3F               	movwf	(??_scalbnf+1)^0,c
  8597   00507A  6A40               	clrf	(??_scalbnf+2)^0,c
  8598   00507C  6A41               	clrf	(??_scalbnf+3)^0,c
  8599   00507E  0E17               	movlw	23
  8600   005080                     u9955:
  8601   005080  90D8               	bcf	status,0,c
  8602   005082  363E               	rlcf	??_scalbnf^0,f,c
  8603   005084  363F               	rlcf	(??_scalbnf+1)^0,f,c
  8604   005086  3640               	rlcf	(??_scalbnf+2)^0,f,c
  8605   005088  3641               	rlcf	(??_scalbnf+3)^0,f,c
  8606   00508A  2EE8               	decfsz	wreg,f,c
  8607   00508C  EF40  F028         	goto	u9955
  8608   005090  C03E  F042         	movff	??_scalbnf,scalbnf@u
  8609   005094  C03F  F043         	movff	??_scalbnf+1,scalbnf@u+1
  8610   005098  C040  F044         	movff	??_scalbnf+2,scalbnf@u+2
  8611   00509C  C041  F045         	movff	??_scalbnf+3,scalbnf@u+3
  8612   0050A0  C042  F01F         	movff	scalbnf@u,___flmul@b
  8613   0050A4  C043  F020         	movff	scalbnf@u+1,___flmul@b+1
  8614   0050A8  C044  F021         	movff	scalbnf@u+2,___flmul@b+2
  8615   0050AC  C045  F022         	movff	scalbnf@u+3,___flmul@b+3
  8616   0050B0  C046  F023         	movff	scalbnf@y,___flmul@a
  8617   0050B4  C047  F024         	movff	scalbnf@y+1,___flmul@a+1
  8618   0050B8  C048  F025         	movff	scalbnf@y+2,___flmul@a+2
  8619   0050BC  C049  F026         	movff	scalbnf@y+3,___flmul@a+3
  8620   0050C0  ECA2  F01E         	call	___flmul	;wreg free
  8621   0050C4  C01F  F038         	movff	?___flmul,scalbnf@x
  8622   0050C8  C020  F039         	movff	?___flmul+1,scalbnf@x+1
  8623   0050CC  C021  F03A         	movff	?___flmul+2,scalbnf@x+2
  8624   0050D0  C022  F03B         	movff	?___flmul+3,scalbnf@x+3
  8625   0050D4  C038  F038         	movff	scalbnf@x,?_scalbnf
  8626   0050D8  C039  F039         	movff	scalbnf@x+1,?_scalbnf+1
  8627   0050DC  C03A  F03A         	movff	scalbnf@x+2,?_scalbnf+2
  8628   0050E0  C03B  F03B         	movff	scalbnf@x+3,?_scalbnf+3
  8629   0050E4  0012               	return		;funcret
  8630   0050E6                     __end_of_scalbnf:
  8631                           	callstack 0
  8632                           
  8633 ;; *************** function _Calibrate_MQ2 *****************
  8634 ;; Defined at:
  8635 ;;		line 400 in file "newmain.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;  voltage         4    6[BANK0 ] float 
  8640 ;;  Rs              4    0[BANK0 ] float 
  8641 ;;  adc_value       2    4[BANK0 ] unsigned int 
  8642 ;;  i               1   14[BANK0 ] unsigned char 
  8643 ;;  sum             4   10[BANK0 ] float 
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  1    wreg      void 
  8646 ;; Registers used:
  8647 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8653 ;;      Params:         0       0       0       0       0       0       0       0       0
  8654 ;;      Locals:         0      15       0       0       0       0       0       0       0
  8655 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8656 ;;      Totals:         2      15       0       0       0       0       0       0       0
  8657 ;;Total ram usage:       17 bytes
  8658 ;; Hardware stack levels used: 1
  8659 ;; Hardware stack levels required when called: 3
  8660 ;; This function calls:
  8661 ;;		_ADC_Read
  8662 ;;		___fladd
  8663 ;;		___fldiv
  8664 ;;		___flmul
  8665 ;;		___flsub
  8666 ;;		___xxtofl
  8667 ;; This function is called by:
  8668 ;;		_main
  8669 ;;		_Read_MQ2_Sensor
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           	psect	text13
  8674   005B5A                     __ptext13:
  8675                           	callstack 0
  8676   005B5A                     _Calibrate_MQ2:
  8677                           	callstack 26
  8678   005B5A                     
  8679                           ;newmain.c: 401:     float sum = 0;
  8680   005B5A  0E00               	movlw	0
  8681   005B5C  0100               	movlb	0	; () banked
  8682   005B5E  6F6A               	movwf	Calibrate_MQ2@sum& (0+255),b
  8683   005B60  0E00               	movlw	0
  8684   005B62  6F6B               	movwf	(Calibrate_MQ2@sum+1)& (0+255),b
  8685   005B64  0E00               	movlw	0
  8686   005B66  6F6C               	movwf	(Calibrate_MQ2@sum+2)& (0+255),b
  8687   005B68  0E00               	movlw	0
  8688   005B6A  6F6D               	movwf	(Calibrate_MQ2@sum+3)& (0+255),b
  8689   005B6C                     
  8690                           ; BSR set to: 0
  8691                           ;newmain.c: 402:     for(unsigned char i = 0; i < 70; i++) {
  8692   005B6C  6B6E               	clrf	Calibrate_MQ2@i& (0+255),b
  8693   005B6E                     l7851:
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;newmain.c: 403:         unsigned int adc_value = ADC_Read(2);
  8697   005B6E  0E02               	movlw	2
  8698   005B70  EC47  F038         	call	_ADC_Read
  8699   005B74  C001  F064         	movff	?_ADC_Read,Calibrate_MQ2@adc_value
  8700   005B78  C002  F065         	movff	?_ADC_Read+1,Calibrate_MQ2@adc_value+1
  8701   005B7C                     
  8702                           ;newmain.c: 404:         float voltage = (adc_value * 5.0) / 1024.0;
  8703   005B7C  0E00               	movlw	0
  8704   005B7E  6E23               	movwf	___flmul@a^0,c
  8705   005B80  0E00               	movlw	0
  8706   005B82  6E24               	movwf	(___flmul@a+1)^0,c
  8707   005B84  0EA0               	movlw	160
  8708   005B86  6E25               	movwf	(___flmul@a+2)^0,c
  8709   005B88  0E40               	movlw	64
  8710   005B8A  6E26               	movwf	(___flmul@a+3)^0,c
  8711   005B8C  C064  F001         	movff	Calibrate_MQ2@adc_value,___xxtofl@val
  8712   005B90  C065  F002         	movff	Calibrate_MQ2@adc_value+1,___xxtofl@val+1
  8713   005B94  6A03               	clrf	(___xxtofl@val+2)^0,c
  8714   005B96  6A04               	clrf	(___xxtofl@val+3)^0,c
  8715   005B98  0E00               	movlw	0
  8716   005B9A  EC66  F02A         	call	___xxtofl
  8717   005B9E  C001  F01F         	movff	?___xxtofl,___flmul@b
  8718   005BA2  C002  F020         	movff	?___xxtofl+1,___flmul@b+1
  8719   005BA6  C003  F021         	movff	?___xxtofl+2,___flmul@b+2
  8720   005BAA  C004  F022         	movff	?___xxtofl+3,___flmul@b+3
  8721   005BAE  ECA2  F01E         	call	___flmul	;wreg free
  8722   005BB2  C01F  F040         	movff	?___flmul,___fldiv@b
  8723   005BB6  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  8724   005BBA  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  8725   005BBE  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  8726   005BC2  0E00               	movlw	0
  8727   005BC4  6E44               	movwf	___fldiv@a^0,c
  8728   005BC6  0E00               	movlw	0
  8729   005BC8  6E45               	movwf	(___fldiv@a+1)^0,c
  8730   005BCA  0E80               	movlw	128
  8731   005BCC  6E46               	movwf	(___fldiv@a+2)^0,c
  8732   005BCE  0E44               	movlw	68
  8733   005BD0  6E47               	movwf	(___fldiv@a+3)^0,c
  8734   005BD2  ECA4  F022         	call	___fldiv	;wreg free
  8735   005BD6  C040  F066         	movff	?___fldiv,Calibrate_MQ2@voltage
  8736   005BDA  C041  F067         	movff	?___fldiv+1,Calibrate_MQ2@voltage+1
  8737   005BDE  C042  F068         	movff	?___fldiv+2,Calibrate_MQ2@voltage+2
  8738   005BE2  C043  F069         	movff	?___fldiv+3,Calibrate_MQ2@voltage+3
  8739   005BE6                     
  8740                           ;newmain.c: 405:         float Rs = (5.0 - voltage) / voltage;
  8741   005BE6  C066  F03C         	movff	Calibrate_MQ2@voltage,___flsub@a
  8742   005BEA  C067  F03D         	movff	Calibrate_MQ2@voltage+1,___flsub@a+1
  8743   005BEE  C068  F03E         	movff	Calibrate_MQ2@voltage+2,___flsub@a+2
  8744   005BF2  C069  F03F         	movff	Calibrate_MQ2@voltage+3,___flsub@a+3
  8745   005BF6  0E00               	movlw	0
  8746   005BF8  6E38               	movwf	___flsub@b^0,c
  8747   005BFA  0E00               	movlw	0
  8748   005BFC  6E39               	movwf	(___flsub@b+1)^0,c
  8749   005BFE  0EA0               	movlw	160
  8750   005C00  6E3A               	movwf	(___flsub@b+2)^0,c
  8751   005C02  0E40               	movlw	64
  8752   005C04  6E3B               	movwf	(___flsub@b+3)^0,c
  8753   005C06  EC02  F038         	call	___flsub	;wreg free
  8754   005C0A  C038  F040         	movff	?___flsub,___fldiv@b
  8755   005C0E  C039  F041         	movff	?___flsub+1,___fldiv@b+1
  8756   005C12  C03A  F042         	movff	?___flsub+2,___fldiv@b+2
  8757   005C16  C03B  F043         	movff	?___flsub+3,___fldiv@b+3
  8758   005C1A  C066  F044         	movff	Calibrate_MQ2@voltage,___fldiv@a
  8759   005C1E  C067  F045         	movff	Calibrate_MQ2@voltage+1,___fldiv@a+1
  8760   005C22  C068  F046         	movff	Calibrate_MQ2@voltage+2,___fldiv@a+2
  8761   005C26  C069  F047         	movff	Calibrate_MQ2@voltage+3,___fldiv@a+3
  8762   005C2A  ECA4  F022         	call	___fldiv	;wreg free
  8763   005C2E  C040  F060         	movff	?___fldiv,Calibrate_MQ2@Rs
  8764   005C32  C041  F061         	movff	?___fldiv+1,Calibrate_MQ2@Rs+1
  8765   005C36  C042  F062         	movff	?___fldiv+2,Calibrate_MQ2@Rs+2
  8766   005C3A  C043  F063         	movff	?___fldiv+3,Calibrate_MQ2@Rs+3
  8767   005C3E                     
  8768                           ;newmain.c: 406:         sum += Rs;
  8769   005C3E  C06A  F00F         	movff	Calibrate_MQ2@sum,___fladd@b
  8770   005C42  C06B  F010         	movff	Calibrate_MQ2@sum+1,___fladd@b+1
  8771   005C46  C06C  F011         	movff	Calibrate_MQ2@sum+2,___fladd@b+2
  8772   005C4A  C06D  F012         	movff	Calibrate_MQ2@sum+3,___fladd@b+3
  8773   005C4E  C060  F013         	movff	Calibrate_MQ2@Rs,___fladd@a
  8774   005C52  C061  F014         	movff	Calibrate_MQ2@Rs+1,___fladd@a+1
  8775   005C56  C062  F015         	movff	Calibrate_MQ2@Rs+2,___fladd@a+2
  8776   005C5A  C063  F016         	movff	Calibrate_MQ2@Rs+3,___fladd@a+3
  8777   005C5E  EC47  F01C         	call	___fladd	;wreg free
  8778   005C62  C00F  F06A         	movff	?___fladd,Calibrate_MQ2@sum
  8779   005C66  C010  F06B         	movff	?___fladd+1,Calibrate_MQ2@sum+1
  8780   005C6A  C011  F06C         	movff	?___fladd+2,Calibrate_MQ2@sum+2
  8781   005C6E  C012  F06D         	movff	?___fladd+3,Calibrate_MQ2@sum+3
  8782   005C72                     
  8783                           ;newmain.c: 407:         _delay((unsigned long)((200)*(8000000/4000.0)));
  8784   005C72  0E03               	movlw	3
  8785   005C74  6E5A               	movwf	(??_Calibrate_MQ2+1)^0,c
  8786   005C76  0E08               	movlw	8
  8787   005C78  6E59               	movwf	??_Calibrate_MQ2^0,c
  8788   005C7A  0E77               	movlw	119
  8789   005C7C                     u11337:
  8790   005C7C  2EE8               	decfsz	wreg,f,c
  8791   005C7E  D7FE               	bra	u11337
  8792   005C80  2E59               	decfsz	??_Calibrate_MQ2^0,f,c
  8793   005C82  D7FC               	bra	u11337
  8794   005C84  2E5A               	decfsz	(??_Calibrate_MQ2+1)^0,f,c
  8795   005C86  D7FA               	bra	u11337
  8796   005C88  0000               	nop	
  8797   005C8A                     
  8798                           ;newmain.c: 408:     }
  8799   005C8A  0100               	movlb	0	; () banked
  8800   005C8C  2B6E               	incf	Calibrate_MQ2@i& (0+255),f,b
  8801   005C8E                     
  8802                           ; BSR set to: 0
  8803   005C8E  0E45               	movlw	69
  8804   005C90  656E               	cpfsgt	Calibrate_MQ2@i& (0+255),b
  8805   005C92  EF4D  F02E         	goto	u10001
  8806   005C96  EF4F  F02E         	goto	u10000
  8807   005C9A                     u10001:
  8808   005C9A  EFB7  F02D         	goto	l7851
  8809   005C9E                     u10000:
  8810   005C9E                     
  8811                           ; BSR set to: 0
  8812                           ;newmain.c: 409:     MQ2_Ro = sum / 70.0;
  8813   005C9E  C06A  F040         	movff	Calibrate_MQ2@sum,___fldiv@b
  8814   005CA2  C06B  F041         	movff	Calibrate_MQ2@sum+1,___fldiv@b+1
  8815   005CA6  C06C  F042         	movff	Calibrate_MQ2@sum+2,___fldiv@b+2
  8816   005CAA  C06D  F043         	movff	Calibrate_MQ2@sum+3,___fldiv@b+3
  8817   005CAE  0E00               	movlw	0
  8818   005CB0  6E44               	movwf	___fldiv@a^0,c
  8819   005CB2  0E00               	movlw	0
  8820   005CB4  6E45               	movwf	(___fldiv@a+1)^0,c
  8821   005CB6  0E8C               	movlw	140
  8822   005CB8  6E46               	movwf	(___fldiv@a+2)^0,c
  8823   005CBA  0E42               	movlw	66
  8824   005CBC  6E47               	movwf	(___fldiv@a+3)^0,c
  8825   005CBE  ECA4  F022         	call	___fldiv	;wreg free
  8826   005CC2  C040  F1F9         	movff	?___fldiv,_MQ2_Ro
  8827   005CC6  C041  F1FA         	movff	?___fldiv+1,_MQ2_Ro+1
  8828   005CCA  C042  F1FB         	movff	?___fldiv+2,_MQ2_Ro+2
  8829   005CCE  C043  F1FC         	movff	?___fldiv+3,_MQ2_Ro+3
  8830   005CD2  0012               	return		;funcret
  8831   005CD4                     __end_of_Calibrate_MQ2:
  8832                           	callstack 0
  8833                           
  8834 ;; *************** function _Read_LM35 *****************
  8835 ;; Defined at:
  8836 ;;		line 412 in file "newmain.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;		None
  8839 ;; Auto vars:     Size  Location     Type
  8840 ;;  i               2   10[BANK0 ] int 
  8841 ;;  raw_temp        4    0[BANK0 ] float 
  8842 ;;  adc_value       2    8[BANK0 ] unsigned int 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      void 
  8845 ;; Registers used:
  8846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8852 ;;      Params:         0       0       0       0       0       0       0       0       0
  8853 ;;      Locals:         0      12       0       0       0       0       0       0       0
  8854 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8855 ;;      Totals:         2      12       0       0       0       0       0       0       0
  8856 ;;Total ram usage:       14 bytes
  8857 ;; Hardware stack levels used: 1
  8858 ;; Hardware stack levels required when called: 3
  8859 ;; This function calls:
  8860 ;;		_ADC_Read_Average
  8861 ;;		___fladd
  8862 ;;		___fldiv
  8863 ;;		___flmul
  8864 ;;		___xxtofl
  8865 ;; This function is called by:
  8866 ;;		_main
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text14
  8871   0059C4                     __ptext14:
  8872                           	callstack 0
  8873   0059C4                     _Read_LM35:
  8874                           	callstack 27
  8875   0059C4                     
  8876                           ;newmain.c: 413:     unsigned int adc_value = ADC_Read_Average(0, 10);
  8877   0059C4  0E0A               	movlw	10
  8878   0059C6  6E0E               	movwf	ADC_Read_Average@samples^0,c
  8879   0059C8  0E00               	movlw	0
  8880   0059CA  ECF6  F036         	call	_ADC_Read_Average
  8881   0059CE  C00E  F068         	movff	?_ADC_Read_Average,Read_LM35@adc_value
  8882   0059D2  C00F  F069         	movff	?_ADC_Read_Average+1,Read_LM35@adc_value+1
  8883   0059D6                     
  8884                           ;newmain.c: 414:     float raw_temp = (adc_value * 5.0 / 1024.0) / 0.01;
  8885   0059D6  0E00               	movlw	0
  8886   0059D8  6E44               	movwf	___fldiv@a^0,c
  8887   0059DA  0E00               	movlw	0
  8888   0059DC  6E45               	movwf	(___fldiv@a+1)^0,c
  8889   0059DE  0E80               	movlw	128
  8890   0059E0  6E46               	movwf	(___fldiv@a+2)^0,c
  8891   0059E2  0E44               	movlw	68
  8892   0059E4  6E47               	movwf	(___fldiv@a+3)^0,c
  8893   0059E6  0E00               	movlw	0
  8894   0059E8  6E23               	movwf	___flmul@a^0,c
  8895   0059EA  0E00               	movlw	0
  8896   0059EC  6E24               	movwf	(___flmul@a+1)^0,c
  8897   0059EE  0EA0               	movlw	160
  8898   0059F0  6E25               	movwf	(___flmul@a+2)^0,c
  8899   0059F2  0E40               	movlw	64
  8900   0059F4  6E26               	movwf	(___flmul@a+3)^0,c
  8901   0059F6  C068  F001         	movff	Read_LM35@adc_value,___xxtofl@val
  8902   0059FA  C069  F002         	movff	Read_LM35@adc_value+1,___xxtofl@val+1
  8903   0059FE  6A03               	clrf	(___xxtofl@val+2)^0,c
  8904   005A00  6A04               	clrf	(___xxtofl@val+3)^0,c
  8905   005A02  0E00               	movlw	0
  8906   005A04  EC66  F02A         	call	___xxtofl
  8907   005A08  C001  F01F         	movff	?___xxtofl,___flmul@b
  8908   005A0C  C002  F020         	movff	?___xxtofl+1,___flmul@b+1
  8909   005A10  C003  F021         	movff	?___xxtofl+2,___flmul@b+2
  8910   005A14  C004  F022         	movff	?___xxtofl+3,___flmul@b+3
  8911   005A18  ECA2  F01E         	call	___flmul	;wreg free
  8912   005A1C  C01F  F040         	movff	?___flmul,___fldiv@b
  8913   005A20  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  8914   005A24  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  8915   005A28  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  8916   005A2C  ECA4  F022         	call	___fldiv	;wreg free
  8917   005A30  C040  F064         	movff	?___fldiv,_Read_LM35$1889
  8918   005A34  C041  F065         	movff	?___fldiv+1,_Read_LM35$1889+1
  8919   005A38  C042  F066         	movff	?___fldiv+2,_Read_LM35$1889+2
  8920   005A3C  C043  F067         	movff	?___fldiv+3,_Read_LM35$1889+3
  8921   005A40                     
  8922                           ;newmain.c: 414:     float raw_temp = (adc_value * 5.0 / 1024.0) / 0.01;
  8923   005A40  C064  F040         	movff	_Read_LM35$1889,___fldiv@b
  8924   005A44  C065  F041         	movff	_Read_LM35$1889+1,___fldiv@b+1
  8925   005A48  C066  F042         	movff	_Read_LM35$1889+2,___fldiv@b+2
  8926   005A4C  C067  F043         	movff	_Read_LM35$1889+3,___fldiv@b+3
  8927   005A50  0E0A               	movlw	10
  8928   005A52  6E44               	movwf	___fldiv@a^0,c
  8929   005A54  0ED7               	movlw	215
  8930   005A56  6E45               	movwf	(___fldiv@a+1)^0,c
  8931   005A58  0E23               	movlw	35
  8932   005A5A  6E46               	movwf	(___fldiv@a+2)^0,c
  8933   005A5C  0E3C               	movlw	60
  8934   005A5E  6E47               	movwf	(___fldiv@a+3)^0,c
  8935   005A60  ECA4  F022         	call	___fldiv	;wreg free
  8936   005A64  C040  F060         	movff	?___fldiv,Read_LM35@raw_temp
  8937   005A68  C041  F061         	movff	?___fldiv+1,Read_LM35@raw_temp+1
  8938   005A6C  C042  F062         	movff	?___fldiv+2,Read_LM35@raw_temp+2
  8939   005A70  C043  F063         	movff	?___fldiv+3,Read_LM35@raw_temp+3
  8940   005A74                     
  8941                           ;newmain.c: 416:     temp_filter[filter_index] = raw_temp;
  8942   005A74  0100               	movlb	0	; () banked
  8943   005A76  51FB               	movf	_filter_index& (0+255),w,b
  8944   005A78  0D04               	mullw	4
  8945   005A7A  0E1C               	movlw	low _temp_filter
  8946   005A7C  24F3               	addwf	243,w,c
  8947   005A7E  6ED9               	movwf	fsr2l,c
  8948   005A80  0E02               	movlw	high _temp_filter
  8949   005A82  20F4               	addwfc	prodh,w,c
  8950   005A84  6EDA               	movwf	fsr2h,c
  8951   005A86  C060  FFDE         	movff	Read_LM35@raw_temp,postinc2
  8952   005A8A  C061  FFDE         	movff	Read_LM35@raw_temp+1,postinc2
  8953   005A8E  C062  FFDE         	movff	Read_LM35@raw_temp+2,postinc2
  8954   005A92  C063  FFDE         	movff	Read_LM35@raw_temp+3,postinc2
  8955   005A96                     
  8956                           ; BSR set to: 0
  8957                           ;newmain.c: 417:     temperature = 0;
  8958   005A96  0E00               	movlw	0
  8959   005A98  6FEF               	movwf	_temperature& (0+255),b
  8960   005A9A  0E00               	movlw	0
  8961   005A9C  6FF0               	movwf	(_temperature+1)& (0+255),b
  8962   005A9E  0E00               	movlw	0
  8963   005AA0  6FF1               	movwf	(_temperature+2)& (0+255),b
  8964   005AA2  0E00               	movlw	0
  8965   005AA4  6FF2               	movwf	(_temperature+3)& (0+255),b
  8966   005AA6                     
  8967                           ; BSR set to: 0
  8968                           ;newmain.c: 418:     for(int i = 0; i < 7; i++) {
  8969   005AA6  0E00               	movlw	0
  8970   005AA8  6F6B               	movwf	(Read_LM35@i+1)& (0+255),b
  8971   005AAA  0E00               	movlw	0
  8972   005AAC  6F6A               	movwf	Read_LM35@i& (0+255),b
  8973   005AAE                     l8371:
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;newmain.c: 419:         temperature += temp_filter[i];
  8977   005AAE  C0EF  F00F         	movff	_temperature,___fladd@b
  8978   005AB2  C0F0  F010         	movff	_temperature+1,___fladd@b+1
  8979   005AB6  C0F1  F011         	movff	_temperature+2,___fladd@b+2
  8980   005ABA  C0F2  F012         	movff	_temperature+3,___fladd@b+3
  8981   005ABE  0E1C               	movlw	low _temp_filter
  8982   005AC0  6E59               	movwf	??_Read_LM35^0,c
  8983   005AC2  0E02               	movlw	high _temp_filter
  8984   005AC4  6E5A               	movwf	(??_Read_LM35+1)^0,c
  8985   005AC6  90D8               	bcf	status,0,c
  8986   005AC8  356A               	rlcf	Read_LM35@i& (0+255),w,b
  8987   005ACA  6ED9               	movwf	fsr2l,c
  8988   005ACC  356B               	rlcf	(Read_LM35@i+1)& (0+255),w,b
  8989   005ACE  6EDA               	movwf	fsr2h,c
  8990   005AD0  90D8               	bcf	status,0,c
  8991   005AD2  36D9               	rlcf	fsr2l,f,c
  8992   005AD4  36DA               	rlcf	fsr2h,f,c
  8993   005AD6  5059               	movf	??_Read_LM35^0,w,c
  8994   005AD8  26D9               	addwf	fsr2l,f,c
  8995   005ADA  505A               	movf	(??_Read_LM35+1)^0,w,c
  8996   005ADC  22DA               	addwfc	fsr2h,f,c
  8997   005ADE  CFDE F013          	movff	postinc2,___fladd@a
  8998   005AE2  CFDE F014          	movff	postinc2,___fladd@a+1
  8999   005AE6  CFDE F015          	movff	postinc2,___fladd@a+2
  9000   005AEA  CFDE F016          	movff	postinc2,___fladd@a+3
  9001   005AEE  EC47  F01C         	call	___fladd	;wreg free
  9002   005AF2  C00F  F0EF         	movff	?___fladd,_temperature
  9003   005AF6  C010  F0F0         	movff	?___fladd+1,_temperature+1
  9004   005AFA  C011  F0F1         	movff	?___fladd+2,_temperature+2
  9005   005AFE  C012  F0F2         	movff	?___fladd+3,_temperature+3
  9006   005B02                     
  9007                           ;newmain.c: 420:     }
  9008   005B02  0100               	movlb	0	; () banked
  9009   005B04  4B6A               	infsnz	Read_LM35@i& (0+255),f,b
  9010   005B06  2B6B               	incf	(Read_LM35@i+1)& (0+255),f,b
  9011   005B08                     
  9012                           ; BSR set to: 0
  9013   005B08  BF6B               	btfsc	(Read_LM35@i+1)& (0+255),7,b
  9014   005B0A  EF90  F02D         	goto	u10661
  9015   005B0E  516B               	movf	(Read_LM35@i+1)& (0+255),w,b
  9016   005B10  E109               	bnz	u10660
  9017   005B12  0E07               	movlw	7
  9018   005B14  5D6A               	subwf	Read_LM35@i& (0+255),w,b
  9019   005B16  A0D8               	btfss	status,0,c
  9020   005B18  EF90  F02D         	goto	u10661
  9021   005B1C  EF92  F02D         	goto	u10660
  9022   005B20                     u10661:
  9023   005B20  EF57  F02D         	goto	l8371
  9024   005B24                     u10660:
  9025   005B24                     
  9026                           ; BSR set to: 0
  9027                           ;newmain.c: 421:     temperature /= 7;
  9028   005B24  C0EF  F040         	movff	_temperature,___fldiv@b
  9029   005B28  C0F0  F041         	movff	_temperature+1,___fldiv@b+1
  9030   005B2C  C0F1  F042         	movff	_temperature+2,___fldiv@b+2
  9031   005B30  C0F2  F043         	movff	_temperature+3,___fldiv@b+3
  9032   005B34  0E00               	movlw	0
  9033   005B36  6E44               	movwf	___fldiv@a^0,c
  9034   005B38  0E00               	movlw	0
  9035   005B3A  6E45               	movwf	(___fldiv@a+1)^0,c
  9036   005B3C  0EE0               	movlw	224
  9037   005B3E  6E46               	movwf	(___fldiv@a+2)^0,c
  9038   005B40  0E40               	movlw	64
  9039   005B42  6E47               	movwf	(___fldiv@a+3)^0,c
  9040   005B44  ECA4  F022         	call	___fldiv	;wreg free
  9041   005B48  C040  F0EF         	movff	?___fldiv,_temperature
  9042   005B4C  C041  F0F0         	movff	?___fldiv+1,_temperature+1
  9043   005B50  C042  F0F1         	movff	?___fldiv+2,_temperature+2
  9044   005B54  C043  F0F2         	movff	?___fldiv+3,_temperature+3
  9045   005B58  0012               	return		;funcret
  9046   005B5A                     __end_of_Read_LM35:
  9047                           	callstack 0
  9048                           
  9049 ;; *************** function _Read_Flame_Sensor *****************
  9050 ;; Defined at:
  9051 ;;		line 424 in file "newmain.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;		None
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;  intensity       4   17[BANK0 ] float 
  9056 ;;  voltage         4    7[BANK0 ] float 
  9057 ;;  adc_value       2   11[BANK0 ] unsigned int 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      void 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9067 ;;      Params:         0       0       0       0       0       0       0       0       0
  9068 ;;      Locals:         0      14       0       0       0       0       0       0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9070 ;;      Totals:         0      14       0       0       0       0       0       0       0
  9071 ;;Total ram usage:       14 bytes
  9072 ;; Hardware stack levels used: 1
  9073 ;; Hardware stack levels required when called: 3
  9074 ;; This function calls:
  9075 ;;		_ADC_Read_Average
  9076 ;;		_Calibrate_Flame_Sensor
  9077 ;;		___fldiv
  9078 ;;		___flge
  9079 ;;		___flmul
  9080 ;;		___flsub
  9081 ;;		___xxtofl
  9082 ;; This function is called by:
  9083 ;;		_main
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           	psect	text15
  9088   004C58                     __ptext15:
  9089                           	callstack 0
  9090   004C58                     _Read_Flame_Sensor:
  9091                           	callstack 27
  9092   004C58                     
  9093                           ;newmain.c: 425:     if(!flame_calibrated) {
  9094   004C58  0101               	movlb	1	; () banked
  9095   004C5A  51F8               	movf	_flame_calibrated& (0+255),w,b
  9096   004C5C  A4D8               	btfss	status,2,c
  9097   004C5E  EF33  F026         	goto	u10671
  9098   004C62  EF35  F026         	goto	u10670
  9099   004C66                     u10671:
  9100   004C66  EF39  F026         	goto	l8385
  9101   004C6A                     u10670:
  9102   004C6A                     
  9103                           ; BSR set to: 1
  9104                           ;newmain.c: 426:         Calibrate_Flame_Sensor();
  9105   004C6A  EC03  F02F         	call	_Calibrate_Flame_Sensor	;wreg free
  9106   004C6E  EF58  F027         	goto	l273
  9107   004C72                     l8385:
  9108                           
  9109                           ; BSR set to: 1
  9110                           ;newmain.c: 430:     unsigned int adc_value = ADC_Read_Average(1, 10);
  9111   004C72  0E0A               	movlw	10
  9112   004C74  6E0E               	movwf	ADC_Read_Average@samples^0,c
  9113   004C76  0E01               	movlw	1
  9114   004C78  ECF6  F036         	call	_ADC_Read_Average
  9115   004C7C  C00E  F06B         	movff	?_ADC_Read_Average,Read_Flame_Sensor@adc_value
  9116   004C80  C00F  F06C         	movff	?_ADC_Read_Average+1,Read_Flame_Sensor@adc_value+1
  9117   004C84                     
  9118                           ;newmain.c: 431:     float voltage = (adc_value * 5.0) / 1024.0;
  9119   004C84  0E00               	movlw	0
  9120   004C86  6E23               	movwf	___flmul@a^0,c
  9121   004C88  0E00               	movlw	0
  9122   004C8A  6E24               	movwf	(___flmul@a+1)^0,c
  9123   004C8C  0EA0               	movlw	160
  9124   004C8E  6E25               	movwf	(___flmul@a+2)^0,c
  9125   004C90  0E40               	movlw	64
  9126   004C92  6E26               	movwf	(___flmul@a+3)^0,c
  9127   004C94  C06B  F001         	movff	Read_Flame_Sensor@adc_value,___xxtofl@val
  9128   004C98  C06C  F002         	movff	Read_Flame_Sensor@adc_value+1,___xxtofl@val+1
  9129   004C9C  6A03               	clrf	(___xxtofl@val+2)^0,c
  9130   004C9E  6A04               	clrf	(___xxtofl@val+3)^0,c
  9131   004CA0  0E00               	movlw	0
  9132   004CA2  EC66  F02A         	call	___xxtofl
  9133   004CA6  C001  F01F         	movff	?___xxtofl,___flmul@b
  9134   004CAA  C002  F020         	movff	?___xxtofl+1,___flmul@b+1
  9135   004CAE  C003  F021         	movff	?___xxtofl+2,___flmul@b+2
  9136   004CB2  C004  F022         	movff	?___xxtofl+3,___flmul@b+3
  9137   004CB6  ECA2  F01E         	call	___flmul	;wreg free
  9138   004CBA  C01F  F040         	movff	?___flmul,___fldiv@b
  9139   004CBE  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  9140   004CC2  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  9141   004CC6  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  9142   004CCA  0E00               	movlw	0
  9143   004CCC  6E44               	movwf	___fldiv@a^0,c
  9144   004CCE  0E00               	movlw	0
  9145   004CD0  6E45               	movwf	(___fldiv@a+1)^0,c
  9146   004CD2  0E80               	movlw	128
  9147   004CD4  6E46               	movwf	(___fldiv@a+2)^0,c
  9148   004CD6  0E44               	movlw	68
  9149   004CD8  6E47               	movwf	(___fldiv@a+3)^0,c
  9150   004CDA  ECA4  F022         	call	___fldiv	;wreg free
  9151   004CDE  C040  F067         	movff	?___fldiv,Read_Flame_Sensor@voltage
  9152   004CE2  C041  F068         	movff	?___fldiv+1,Read_Flame_Sensor@voltage+1
  9153   004CE6  C042  F069         	movff	?___fldiv+2,Read_Flame_Sensor@voltage+2
  9154   004CEA  C043  F06A         	movff	?___fldiv+3,Read_Flame_Sensor@voltage+3
  9155   004CEE                     
  9156                           ;newmain.c: 432:     float intensity = (flame_base_voltage - voltage) * 100.0 / flame_ba
      +                          se_voltage;
  9157   004CEE  0E00               	movlw	0
  9158   004CF0  6E23               	movwf	___flmul@a^0,c
  9159   004CF2  0E00               	movlw	0
  9160   004CF4  6E24               	movwf	(___flmul@a+1)^0,c
  9161   004CF6  0EC8               	movlw	200
  9162   004CF8  6E25               	movwf	(___flmul@a+2)^0,c
  9163   004CFA  0E42               	movlw	66
  9164   004CFC  6E26               	movwf	(___flmul@a+3)^0,c
  9165   004CFE  C067  F03C         	movff	Read_Flame_Sensor@voltage,___flsub@a
  9166   004D02  C068  F03D         	movff	Read_Flame_Sensor@voltage+1,___flsub@a+1
  9167   004D06  C069  F03E         	movff	Read_Flame_Sensor@voltage+2,___flsub@a+2
  9168   004D0A  C06A  F03F         	movff	Read_Flame_Sensor@voltage+3,___flsub@a+3
  9169   004D0E  C1E4  F038         	movff	_flame_base_voltage,___flsub@b
  9170   004D12  C1E5  F039         	movff	_flame_base_voltage+1,___flsub@b+1
  9171   004D16  C1E6  F03A         	movff	_flame_base_voltage+2,___flsub@b+2
  9172   004D1A  C1E7  F03B         	movff	_flame_base_voltage+3,___flsub@b+3
  9173   004D1E  EC02  F038         	call	___flsub	;wreg free
  9174   004D22  C038  F01F         	movff	?___flsub,___flmul@b
  9175   004D26  C039  F020         	movff	?___flsub+1,___flmul@b+1
  9176   004D2A  C03A  F021         	movff	?___flsub+2,___flmul@b+2
  9177   004D2E  C03B  F022         	movff	?___flsub+3,___flmul@b+3
  9178   004D32  ECA2  F01E         	call	___flmul	;wreg free
  9179   004D36  C01F  F040         	movff	?___flmul,___fldiv@b
  9180   004D3A  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  9181   004D3E  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  9182   004D42  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  9183   004D46  C1E4  F044         	movff	_flame_base_voltage,___fldiv@a
  9184   004D4A  C1E5  F045         	movff	_flame_base_voltage+1,___fldiv@a+1
  9185   004D4E  C1E6  F046         	movff	_flame_base_voltage+2,___fldiv@a+2
  9186   004D52  C1E7  F047         	movff	_flame_base_voltage+3,___fldiv@a+3
  9187   004D56  ECA4  F022         	call	___fldiv	;wreg free
  9188   004D5A  C040  F071         	movff	?___fldiv,Read_Flame_Sensor@intensity
  9189   004D5E  C041  F072         	movff	?___fldiv+1,Read_Flame_Sensor@intensity+1
  9190   004D62  C042  F073         	movff	?___fldiv+2,Read_Flame_Sensor@intensity+2
  9191   004D66  C043  F074         	movff	?___fldiv+3,Read_Flame_Sensor@intensity+3
  9192   004D6A                     
  9193                           ;newmain.c: 434:     if(intensity < 0) intensity = 0;
  9194   004D6A  0100               	movlb	0	; () banked
  9195   004D6C  BF74               	btfsc	(Read_Flame_Sensor@intensity+3)& (0+255),7,b
  9196   004D6E  EFBD  F026         	goto	u10680
  9197   004D72  EFBB  F026         	goto	u10681
  9198   004D76                     u10681:
  9199   004D76  EFC5  F026         	goto	l8395
  9200   004D7A                     u10680:
  9201   004D7A                     
  9202                           ; BSR set to: 0
  9203   004D7A  0E00               	movlw	0
  9204   004D7C  6F71               	movwf	Read_Flame_Sensor@intensity& (0+255),b
  9205   004D7E  0E00               	movlw	0
  9206   004D80  6F72               	movwf	(Read_Flame_Sensor@intensity+1)& (0+255),b
  9207   004D82  0E00               	movlw	0
  9208   004D84  6F73               	movwf	(Read_Flame_Sensor@intensity+2)& (0+255),b
  9209   004D86  0E00               	movlw	0
  9210   004D88  6F74               	movwf	(Read_Flame_Sensor@intensity+3)& (0+255),b
  9211   004D8A                     l8395:
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;newmain.c: 435:     if(intensity > 100) intensity = 100;
  9215   004D8A  0E00               	movlw	0
  9216   004D8C  6E40               	movwf	___flge@ff1^0,c
  9217   004D8E  0E00               	movlw	0
  9218   004D90  6E41               	movwf	(___flge@ff1+1)^0,c
  9219   004D92  0EC8               	movlw	200
  9220   004D94  6E42               	movwf	(___flge@ff1+2)^0,c
  9221   004D96  0E42               	movlw	66
  9222   004D98  6E43               	movwf	(___flge@ff1+3)^0,c
  9223   004D9A  C071  F044         	movff	Read_Flame_Sensor@intensity,___flge@ff2
  9224   004D9E  C072  F045         	movff	Read_Flame_Sensor@intensity+1,___flge@ff2+1
  9225   004DA2  C073  F046         	movff	Read_Flame_Sensor@intensity+2,___flge@ff2+2
  9226   004DA6  C074  F047         	movff	Read_Flame_Sensor@intensity+3,___flge@ff2+3
  9227   004DAA  ECBA  F031         	call	___flge	;wreg free
  9228   004DAE  B0D8               	btfsc	status,0,c
  9229   004DB0  EFDC  F026         	goto	u10691
  9230   004DB4  EFDE  F026         	goto	u10690
  9231   004DB8                     u10691:
  9232   004DB8  EFE7  F026         	goto	l275
  9233   004DBC                     u10690:
  9234   004DBC  0E00               	movlw	0
  9235   004DBE  0100               	movlb	0	; () banked
  9236   004DC0  6F71               	movwf	Read_Flame_Sensor@intensity& (0+255),b
  9237   004DC2  0E00               	movlw	0
  9238   004DC4  6F72               	movwf	(Read_Flame_Sensor@intensity+1)& (0+255),b
  9239   004DC6  0EC8               	movlw	200
  9240   004DC8  6F73               	movwf	(Read_Flame_Sensor@intensity+2)& (0+255),b
  9241   004DCA  0E42               	movlw	66
  9242   004DCC  6F74               	movwf	(Read_Flame_Sensor@intensity+3)& (0+255),b
  9243   004DCE                     l275:
  9244                           
  9245                           ;newmain.c: 437:     static bool last_detected = 0;;newmain.c: 439:     if (!last_detect
      +                          ed && intensity >= 18.0) {
  9246   004DCE  0100               	movlb	0	; () banked
  9247   004DD0  51F7               	movf	Read_Flame_Sensor@last_detected& (0+255),w,b
  9248   004DD2  A4D8               	btfss	status,2,c
  9249   004DD4  EFEE  F026         	goto	u10701
  9250   004DD8  EFF0  F026         	goto	u10700
  9251   004DDC                     u10701:
  9252   004DDC  EF10  F027         	goto	l8403
  9253   004DE0                     u10700:
  9254   004DE0                     
  9255                           ; BSR set to: 0
  9256   004DE0  C071  F040         	movff	Read_Flame_Sensor@intensity,___flge@ff1
  9257   004DE4  C072  F041         	movff	Read_Flame_Sensor@intensity+1,___flge@ff1+1
  9258   004DE8  C073  F042         	movff	Read_Flame_Sensor@intensity+2,___flge@ff1+2
  9259   004DEC  C074  F043         	movff	Read_Flame_Sensor@intensity+3,___flge@ff1+3
  9260   004DF0  0E00               	movlw	0
  9261   004DF2  6E44               	movwf	___flge@ff2^0,c
  9262   004DF4  0E00               	movlw	0
  9263   004DF6  6E45               	movwf	(___flge@ff2+1)^0,c
  9264   004DF8  0E90               	movlw	144
  9265   004DFA  6E46               	movwf	(___flge@ff2+2)^0,c
  9266   004DFC  0E41               	movlw	65
  9267   004DFE  6E47               	movwf	(___flge@ff2+3)^0,c
  9268   004E00  ECBA  F031         	call	___flge	;wreg free
  9269   004E04  A0D8               	btfss	status,0,c
  9270   004E06  EF07  F027         	goto	u10711
  9271   004E0A  EF09  F027         	goto	u10710
  9272   004E0E                     u10711:
  9273   004E0E  EF10  F027         	goto	l8403
  9274   004E12                     u10710:
  9275   004E12                     
  9276                           ;newmain.c: 440:         flame_detected = 1;
  9277   004E12  0E01               	movlw	1
  9278   004E14  0100               	movlb	0	; () banked
  9279   004E16  6FFD               	movwf	_flame_detected& (0+255),b
  9280                           
  9281                           ;newmain.c: 441:         last_detected = 1;
  9282   004E18  0E01               	movlw	1
  9283   004E1A  6FF7               	movwf	Read_Flame_Sensor@last_detected& (0+255),b
  9284                           
  9285                           ;newmain.c: 442:     }
  9286   004E1C  EF35  F027         	goto	l8409
  9287   004E20                     l8403:
  9288   004E20  0100               	movlb	0	; () banked
  9289   004E22  51F7               	movf	Read_Flame_Sensor@last_detected& (0+255),w,b
  9290   004E24  B4D8               	btfsc	status,2,c
  9291   004E26  EF17  F027         	goto	u10721
  9292   004E2A  EF19  F027         	goto	u10720
  9293   004E2E                     u10721:
  9294   004E2E  EF35  F027         	goto	l8409
  9295   004E32                     u10720:
  9296   004E32                     
  9297                           ; BSR set to: 0
  9298   004E32  0E00               	movlw	0
  9299   004E34  6E40               	movwf	___flge@ff1^0,c
  9300   004E36  0E00               	movlw	0
  9301   004E38  6E41               	movwf	(___flge@ff1+1)^0,c
  9302   004E3A  0E40               	movlw	64
  9303   004E3C  6E42               	movwf	(___flge@ff1+2)^0,c
  9304   004E3E  0E41               	movlw	65
  9305   004E40  6E43               	movwf	(___flge@ff1+3)^0,c
  9306   004E42  C071  F044         	movff	Read_Flame_Sensor@intensity,___flge@ff2
  9307   004E46  C072  F045         	movff	Read_Flame_Sensor@intensity+1,___flge@ff2+1
  9308   004E4A  C073  F046         	movff	Read_Flame_Sensor@intensity+2,___flge@ff2+2
  9309   004E4E  C074  F047         	movff	Read_Flame_Sensor@intensity+3,___flge@ff2+3
  9310   004E52  ECBA  F031         	call	___flge	;wreg free
  9311   004E56  A0D8               	btfss	status,0,c
  9312   004E58  EF30  F027         	goto	u10731
  9313   004E5C  EF32  F027         	goto	u10730
  9314   004E60                     u10731:
  9315   004E60  EF35  F027         	goto	l8409
  9316   004E64                     u10730:
  9317   004E64                     
  9318                           ;newmain.c: 444:         flame_detected = 0;
  9319   004E64  0100               	movlb	0	; () banked
  9320   004E66  6BFD               	clrf	_flame_detected& (0+255),b
  9321                           
  9322                           ;newmain.c: 445:         last_detected = 0;
  9323   004E68  6BF7               	clrf	Read_Flame_Sensor@last_detected& (0+255),b
  9324   004E6A                     l8409:
  9325                           
  9326                           ;newmain.c: 448:     flame_intensity = flame_detected ? intensity : 0.0;
  9327   004E6A  0100               	movlb	0	; () banked
  9328   004E6C  51FD               	movf	_flame_detected& (0+255),w,b
  9329   004E6E  A4D8               	btfss	status,2,c
  9330   004E70  EF3C  F027         	goto	u10741
  9331   004E74  EF3E  F027         	goto	u10740
  9332   004E78                     u10741:
  9333   004E78  EF48  F027         	goto	l282
  9334   004E7C                     u10740:
  9335   004E7C                     
  9336                           ; BSR set to: 0
  9337   004E7C  0E00               	movlw	0
  9338   004E7E  6F6D               	movwf	_Read_Flame_Sensor$806& (0+255),b
  9339   004E80  0E00               	movlw	0
  9340   004E82  6F6E               	movwf	(_Read_Flame_Sensor$806+1)& (0+255),b
  9341   004E84  0E00               	movlw	0
  9342   004E86  6F6F               	movwf	(_Read_Flame_Sensor$806+2)& (0+255),b
  9343   004E88  0E00               	movlw	0
  9344   004E8A  6F70               	movwf	(_Read_Flame_Sensor$806+3)& (0+255),b
  9345   004E8C  EF50  F027         	goto	l284
  9346   004E90                     l282:
  9347                           
  9348                           ; BSR set to: 0
  9349   004E90  C071  F06D         	movff	Read_Flame_Sensor@intensity,_Read_Flame_Sensor$806
  9350   004E94  C072  F06E         	movff	Read_Flame_Sensor@intensity+1,_Read_Flame_Sensor$806+1
  9351   004E98  C073  F06F         	movff	Read_Flame_Sensor@intensity+2,_Read_Flame_Sensor$806+2
  9352   004E9C  C074  F070         	movff	Read_Flame_Sensor@intensity+3,_Read_Flame_Sensor$806+3
  9353   004EA0                     l284:
  9354                           
  9355                           ; BSR set to: 0
  9356   004EA0  C06D  F1E8         	movff	_Read_Flame_Sensor$806,_flame_intensity
  9357   004EA4  C06E  F1E9         	movff	_Read_Flame_Sensor$806+1,_flame_intensity+1
  9358   004EA8  C06F  F1EA         	movff	_Read_Flame_Sensor$806+2,_flame_intensity+2
  9359   004EAC  C070  F1EB         	movff	_Read_Flame_Sensor$806+3,_flame_intensity+3
  9360   004EB0                     l273:
  9361   004EB0  0012               	return		;funcret
  9362   004EB2                     __end_of_Read_Flame_Sensor:
  9363                           	callstack 0
  9364                           
  9365 ;; *************** function _Calibrate_Flame_Sensor *****************
  9366 ;; Defined at:
  9367 ;;		line 387 in file "newmain.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;		None
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;  adc_value       2    0[BANK0 ] unsigned int 
  9372 ;;  i               1    6[BANK0 ] unsigned char 
  9373 ;;  sum             4    2[BANK0 ] float 
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      void 
  9376 ;; Registers used:
  9377 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9383 ;;      Params:         0       0       0       0       0       0       0       0       0
  9384 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9385 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9386 ;;      Totals:         2       7       0       0       0       0       0       0       0
  9387 ;;Total ram usage:        9 bytes
  9388 ;; Hardware stack levels used: 1
  9389 ;; Hardware stack levels required when called: 2
  9390 ;; This function calls:
  9391 ;;		_ADC_Read
  9392 ;;		___fladd
  9393 ;;		___fldiv
  9394 ;;		___flmul
  9395 ;;		___xxtofl
  9396 ;; This function is called by:
  9397 ;;		_main
  9398 ;;		_Read_Flame_Sensor
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           	psect	text16
  9403   005E06                     __ptext16:
  9404                           	callstack 0
  9405   005E06                     _Calibrate_Flame_Sensor:
  9406                           	callstack 27
  9407   005E06                     
  9408                           ;newmain.c: 388:     float sum = 0;
  9409   005E06  0E00               	movlw	0
  9410   005E08  0100               	movlb	0	; () banked
  9411   005E0A  6F62               	movwf	Calibrate_Flame_Sensor@sum& (0+255),b
  9412   005E0C  0E00               	movlw	0
  9413   005E0E  6F63               	movwf	(Calibrate_Flame_Sensor@sum+1)& (0+255),b
  9414   005E10  0E00               	movlw	0
  9415   005E12  6F64               	movwf	(Calibrate_Flame_Sensor@sum+2)& (0+255),b
  9416   005E14  0E00               	movlw	0
  9417   005E16  6F65               	movwf	(Calibrate_Flame_Sensor@sum+3)& (0+255),b
  9418   005E18                     
  9419                           ; BSR set to: 0
  9420                           ;newmain.c: 389:     for(unsigned char i = 0; i < 20; i++) {
  9421   005E18  6B66               	clrf	Calibrate_Flame_Sensor@i& (0+255),b
  9422   005E1A                     l7825:
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;newmain.c: 390:         unsigned int adc_value = ADC_Read(1);
  9426   005E1A  0E01               	movlw	1
  9427   005E1C  EC47  F038         	call	_ADC_Read
  9428   005E20  C001  F060         	movff	?_ADC_Read,Calibrate_Flame_Sensor@adc_value
  9429   005E24  C002  F061         	movff	?_ADC_Read+1,Calibrate_Flame_Sensor@adc_value+1
  9430   005E28                     
  9431                           ;newmain.c: 391:         sum += (adc_value * 5.0) / 1024.0;
  9432   005E28  C062  F00F         	movff	Calibrate_Flame_Sensor@sum,___fladd@b
  9433   005E2C  C063  F010         	movff	Calibrate_Flame_Sensor@sum+1,___fladd@b+1
  9434   005E30  C064  F011         	movff	Calibrate_Flame_Sensor@sum+2,___fladd@b+2
  9435   005E34  C065  F012         	movff	Calibrate_Flame_Sensor@sum+3,___fladd@b+3
  9436   005E38  0E00               	movlw	0
  9437   005E3A  6E44               	movwf	___fldiv@a^0,c
  9438   005E3C  0E00               	movlw	0
  9439   005E3E  6E45               	movwf	(___fldiv@a+1)^0,c
  9440   005E40  0E80               	movlw	128
  9441   005E42  6E46               	movwf	(___fldiv@a+2)^0,c
  9442   005E44  0E44               	movlw	68
  9443   005E46  6E47               	movwf	(___fldiv@a+3)^0,c
  9444   005E48  0E00               	movlw	0
  9445   005E4A  6E23               	movwf	___flmul@a^0,c
  9446   005E4C  0E00               	movlw	0
  9447   005E4E  6E24               	movwf	(___flmul@a+1)^0,c
  9448   005E50  0EA0               	movlw	160
  9449   005E52  6E25               	movwf	(___flmul@a+2)^0,c
  9450   005E54  0E40               	movlw	64
  9451   005E56  6E26               	movwf	(___flmul@a+3)^0,c
  9452   005E58  C060  F001         	movff	Calibrate_Flame_Sensor@adc_value,___xxtofl@val
  9453   005E5C  C061  F002         	movff	Calibrate_Flame_Sensor@adc_value+1,___xxtofl@val+1
  9454   005E60  6A03               	clrf	(___xxtofl@val+2)^0,c
  9455   005E62  6A04               	clrf	(___xxtofl@val+3)^0,c
  9456   005E64  0E00               	movlw	0
  9457   005E66  EC66  F02A         	call	___xxtofl
  9458   005E6A  C001  F01F         	movff	?___xxtofl,___flmul@b
  9459   005E6E  C002  F020         	movff	?___xxtofl+1,___flmul@b+1
  9460   005E72  C003  F021         	movff	?___xxtofl+2,___flmul@b+2
  9461   005E76  C004  F022         	movff	?___xxtofl+3,___flmul@b+3
  9462   005E7A  ECA2  F01E         	call	___flmul	;wreg free
  9463   005E7E  C01F  F040         	movff	?___flmul,___fldiv@b
  9464   005E82  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  9465   005E86  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  9466   005E8A  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  9467   005E8E  ECA4  F022         	call	___fldiv	;wreg free
  9468   005E92  C040  F013         	movff	?___fldiv,___fladd@a
  9469   005E96  C041  F014         	movff	?___fldiv+1,___fladd@a+1
  9470   005E9A  C042  F015         	movff	?___fldiv+2,___fladd@a+2
  9471   005E9E  C043  F016         	movff	?___fldiv+3,___fladd@a+3
  9472   005EA2  EC47  F01C         	call	___fladd	;wreg free
  9473   005EA6  C00F  F062         	movff	?___fladd,Calibrate_Flame_Sensor@sum
  9474   005EAA  C010  F063         	movff	?___fladd+1,Calibrate_Flame_Sensor@sum+1
  9475   005EAE  C011  F064         	movff	?___fladd+2,Calibrate_Flame_Sensor@sum+2
  9476   005EB2  C012  F065         	movff	?___fladd+3,Calibrate_Flame_Sensor@sum+3
  9477   005EB6                     
  9478                           ;newmain.c: 392:         _delay((unsigned long)((150)*(8000000/4000.0)));
  9479   005EB6  0E02               	movlw	2
  9480   005EB8  6E5A               	movwf	(??_Calibrate_Flame_Sensor+1)^0,c
  9481   005EBA  0E86               	movlw	134
  9482   005EBC  6E59               	movwf	??_Calibrate_Flame_Sensor^0,c
  9483   005EBE  0E99               	movlw	153
  9484   005EC0                     u11347:
  9485   005EC0  2EE8               	decfsz	wreg,f,c
  9486   005EC2  D7FE               	bra	u11347
  9487   005EC4  2E59               	decfsz	??_Calibrate_Flame_Sensor^0,f,c
  9488   005EC6  D7FC               	bra	u11347
  9489   005EC8  2E5A               	decfsz	(??_Calibrate_Flame_Sensor+1)^0,f,c
  9490   005ECA  D7FA               	bra	u11347
  9491   005ECC  0000               	nop	
  9492   005ECE                     
  9493                           ;newmain.c: 393:     }
  9494   005ECE  0100               	movlb	0	; () banked
  9495   005ED0  2B66               	incf	Calibrate_Flame_Sensor@i& (0+255),f,b
  9496   005ED2                     
  9497                           ; BSR set to: 0
  9498   005ED2  0E13               	movlw	19
  9499   005ED4  6566               	cpfsgt	Calibrate_Flame_Sensor@i& (0+255),b
  9500   005ED6  EF6F  F02F         	goto	u9991
  9501   005EDA  EF71  F02F         	goto	u9990
  9502   005EDE                     u9991:
  9503   005EDE  EF0D  F02F         	goto	l7825
  9504   005EE2                     u9990:
  9505   005EE2                     
  9506                           ; BSR set to: 0
  9507                           ;newmain.c: 394:     flame_base_voltage = sum / 20.0;
  9508   005EE2  C062  F040         	movff	Calibrate_Flame_Sensor@sum,___fldiv@b
  9509   005EE6  C063  F041         	movff	Calibrate_Flame_Sensor@sum+1,___fldiv@b+1
  9510   005EEA  C064  F042         	movff	Calibrate_Flame_Sensor@sum+2,___fldiv@b+2
  9511   005EEE  C065  F043         	movff	Calibrate_Flame_Sensor@sum+3,___fldiv@b+3
  9512   005EF2  0E00               	movlw	0
  9513   005EF4  6E44               	movwf	___fldiv@a^0,c
  9514   005EF6  0E00               	movlw	0
  9515   005EF8  6E45               	movwf	(___fldiv@a+1)^0,c
  9516   005EFA  0EA0               	movlw	160
  9517   005EFC  6E46               	movwf	(___fldiv@a+2)^0,c
  9518   005EFE  0E41               	movlw	65
  9519   005F00  6E47               	movwf	(___fldiv@a+3)^0,c
  9520   005F02  ECA4  F022         	call	___fldiv	;wreg free
  9521   005F06  C040  F1E4         	movff	?___fldiv,_flame_base_voltage
  9522   005F0A  C041  F1E5         	movff	?___fldiv+1,_flame_base_voltage+1
  9523   005F0E  C042  F1E6         	movff	?___fldiv+2,_flame_base_voltage+2
  9524   005F12  C043  F1E7         	movff	?___fldiv+3,_flame_base_voltage+3
  9525   005F16                     
  9526                           ;newmain.c: 395:     flame_calibrated = 1;
  9527   005F16  0E01               	movlw	1
  9528   005F18  0101               	movlb	1	; () banked
  9529   005F1A  6FF8               	movwf	_flame_calibrated& (0+255),b
  9530   005F1C                     
  9531                           ; BSR set to: 1
  9532                           ;newmain.c: 396:     flame_detected = 0;
  9533   005F1C  0100               	movlb	0	; () banked
  9534   005F1E  6BFD               	clrf	_flame_detected& (0+255),b
  9535   005F20                     
  9536                           ; BSR set to: 0
  9537                           ;newmain.c: 397:     flame_intensity = 0.0;
  9538   005F20  0E00               	movlw	0
  9539   005F22  0101               	movlb	1	; () banked
  9540   005F24  6FE8               	movwf	_flame_intensity& (0+255),b
  9541   005F26  0E00               	movlw	0
  9542   005F28  6FE9               	movwf	(_flame_intensity+1)& (0+255),b
  9543   005F2A  0E00               	movlw	0
  9544   005F2C  6FEA               	movwf	(_flame_intensity+2)& (0+255),b
  9545   005F2E  0E00               	movlw	0
  9546   005F30  6FEB               	movwf	(_flame_intensity+3)& (0+255),b
  9547   005F32                     
  9548                           ; BSR set to: 1
  9549   005F32  0012               	return		;funcret
  9550   005F34                     __end_of_Calibrate_Flame_Sensor:
  9551                           	callstack 0
  9552                           
  9553 ;; *************** function _ADC_Read_Average *****************
  9554 ;; Defined at:
  9555 ;;		line 378 in file "newmain.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;  channel         1    wreg     unsigned char 
  9558 ;;  samples         1   13[COMRAM] unsigned char 
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;  channel         1   15[COMRAM] unsigned char 
  9561 ;;  i               1   20[COMRAM] unsigned char 
  9562 ;;  sum             4   16[COMRAM] unsigned long 
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  2   13[COMRAM] unsigned int 
  9565 ;; Registers used:
  9566 ;;		wreg, status,2, status,0, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9572 ;;      Params:         2       0       0       0       0       0       0       0       0
  9573 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9575 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9576 ;;Total ram usage:        8 bytes
  9577 ;; Hardware stack levels used: 1
  9578 ;; Hardware stack levels required when called: 2
  9579 ;; This function calls:
  9580 ;;		_ADC_Read
  9581 ;;		___lldiv
  9582 ;; This function is called by:
  9583 ;;		_Read_LM35
  9584 ;;		_Read_Flame_Sensor
  9585 ;;		_Read_MQ2_Sensor
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text17
  9590   006DEC                     __ptext17:
  9591                           	callstack 0
  9592   006DEC                     _ADC_Read_Average:
  9593                           	callstack 27
  9594                           
  9595                           ; BSR set to: 1
  9596                           ;incstack = 0
  9597                           ;ADC_Read_Average@channel stored from wreg
  9598   006DEC  6E10               	movwf	ADC_Read_Average@channel^0,c
  9599   006DEE                     
  9600                           ;newmain.c: 379:     unsigned long sum = 0;
  9601   006DEE  0E00               	movlw	0
  9602   006DF0  6E11               	movwf	ADC_Read_Average@sum^0,c
  9603   006DF2  0E00               	movlw	0
  9604   006DF4  6E12               	movwf	(ADC_Read_Average@sum+1)^0,c
  9605   006DF6  0E00               	movlw	0
  9606   006DF8  6E13               	movwf	(ADC_Read_Average@sum+2)^0,c
  9607   006DFA  0E00               	movlw	0
  9608   006DFC  6E14               	movwf	(ADC_Read_Average@sum+3)^0,c
  9609   006DFE                     
  9610                           ;newmain.c: 380:     for(unsigned char i = 0; i < samples; i++) {
  9611   006DFE  6A15               	clrf	ADC_Read_Average@i^0,c
  9612   006E00  EF12  F037         	goto	l7877
  9613   006E04                     l7871:
  9614                           
  9615                           ;newmain.c: 381:         sum += ADC_Read(channel);
  9616   006E04  5010               	movf	ADC_Read_Average@channel^0,w,c
  9617   006E06  EC47  F038         	call	_ADC_Read
  9618   006E0A  5001               	movf	?_ADC_Read^0,w,c
  9619   006E0C  2611               	addwf	ADC_Read_Average@sum^0,f,c
  9620   006E0E  5002               	movf	(?_ADC_Read+1)^0,w,c
  9621   006E10  2212               	addwfc	(ADC_Read_Average@sum+1)^0,f,c
  9622   006E12  0E00               	movlw	0
  9623   006E14  2213               	addwfc	(ADC_Read_Average@sum+2)^0,f,c
  9624   006E16  0E00               	movlw	0
  9625   006E18  2214               	addwfc	(ADC_Read_Average@sum+3)^0,f,c
  9626   006E1A                     
  9627                           ;newmain.c: 382:         _delay((unsigned long)((25)*(8000000/4000000.0)));
  9628   006E1A  0E10               	movlw	16
  9629   006E1C                     u11357:
  9630   006E1C  2EE8               	decfsz	wreg,f,c
  9631   006E1E  D7FE               	bra	u11357
  9632   006E20  D000               	nop2	
  9633   006E22                     
  9634                           ;newmain.c: 383:     }
  9635   006E22  2A15               	incf	ADC_Read_Average@i^0,f,c
  9636   006E24                     l7877:
  9637   006E24  500E               	movf	ADC_Read_Average@samples^0,w,c
  9638   006E26  5C15               	subwf	ADC_Read_Average@i^0,w,c
  9639   006E28  A0D8               	btfss	status,0,c
  9640   006E2A  EF19  F037         	goto	u10011
  9641   006E2E  EF1B  F037         	goto	u10010
  9642   006E32                     u10011:
  9643   006E32  EF02  F037         	goto	l7871
  9644   006E36                     u10010:
  9645   006E36                     
  9646                           ;newmain.c: 384:     return (unsigned int)(sum / samples);
  9647   006E36  C011  F001         	movff	ADC_Read_Average@sum,___lldiv@dividend
  9648   006E3A  C012  F002         	movff	ADC_Read_Average@sum+1,___lldiv@dividend+1
  9649   006E3E  C013  F003         	movff	ADC_Read_Average@sum+2,___lldiv@dividend+2
  9650   006E42  C014  F004         	movff	ADC_Read_Average@sum+3,___lldiv@dividend+3
  9651   006E46  500E               	movf	ADC_Read_Average@samples^0,w,c
  9652   006E48  6E05               	movwf	___lldiv@divisor^0,c
  9653   006E4A  6A06               	clrf	(___lldiv@divisor+1)^0,c
  9654   006E4C  6A07               	clrf	(___lldiv@divisor+2)^0,c
  9655   006E4E  6A08               	clrf	(___lldiv@divisor+3)^0,c
  9656   006E50  ECE7  F035         	call	___lldiv	;wreg free
  9657   006E54  C001  F00E         	movff	?___lldiv,?_ADC_Read_Average
  9658   006E58  C002  F00F         	movff	?___lldiv+1,?_ADC_Read_Average+1
  9659   006E5C  0012               	return		;funcret
  9660   006E5E                     __end_of_ADC_Read_Average:
  9661                           	callstack 0
  9662                           
  9663 ;; *************** function _ADC_Read *****************
  9664 ;; Defined at:
  9665 ;;		line 370 in file "newmain.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  channel         1    wreg     unsigned char 
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;  channel         1    4[COMRAM] unsigned char 
  9670 ;; Return value:  Size  Location     Type
  9671 ;;                  2    0[COMRAM] unsigned int 
  9672 ;; Registers used:
  9673 ;;		wreg, status,2, status,0
  9674 ;; Tracked objects:
  9675 ;;		On entry : 0/0
  9676 ;;		On exit  : 0/0
  9677 ;;		Unchanged: 0/0
  9678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9679 ;;      Params:         2       0       0       0       0       0       0       0       0
  9680 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9681 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9682 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9683 ;;Total ram usage:        5 bytes
  9684 ;; Hardware stack levels used: 1
  9685 ;; Hardware stack levels required when called: 1
  9686 ;; This function calls:
  9687 ;;		Nothing
  9688 ;; This function is called by:
  9689 ;;		_ADC_Read_Average
  9690 ;;		_Calibrate_Flame_Sensor
  9691 ;;		_Calibrate_MQ2
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text18
  9696   00708E                     __ptext18:
  9697                           	callstack 0
  9698   00708E                     _ADC_Read:
  9699                           	callstack 27
  9700                           
  9701                           ;incstack = 0
  9702                           ;ADC_Read@channel stored from wreg
  9703   00708E  6E05               	movwf	ADC_Read@channel^0,c
  9704   007090                     
  9705                           ;newmain.c: 371:     ADCON0bits.CHS = channel;
  9706   007090  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  9707   007094  4603               	rlncf	??_ADC_Read^0,f,c
  9708   007096  4603               	rlncf	??_ADC_Read^0,f,c
  9709   007098  50C2               	movf	194,w,c	;volatile
  9710   00709A  1803               	xorwf	??_ADC_Read^0,w,c
  9711   00709C  0BC3               	andlw	-61
  9712   00709E  1803               	xorwf	??_ADC_Read^0,w,c
  9713   0070A0  6EC2               	movwf	194,c	;volatile
  9714   0070A2                     
  9715                           ;newmain.c: 372:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  9716   0070A2  0E14               	movlw	20
  9717   0070A4                     u11367:
  9718   0070A4  2EE8               	decfsz	wreg,f,c
  9719   0070A6  D7FE               	bra	u11367
  9720   0070A8                     
  9721                           ;newmain.c: 373:     ADCON0bits.GO = 1;
  9722   0070A8  82C2               	bsf	194,1,c	;volatile
  9723   0070AA                     l245:
  9724   0070AA  B2C2               	btfsc	194,1,c	;volatile
  9725   0070AC  EF5A  F038         	goto	u9641
  9726   0070B0  EF5C  F038         	goto	u9640
  9727   0070B4                     u9641:
  9728   0070B4  EF55  F038         	goto	l245
  9729   0070B8                     u9640:
  9730   0070B8                     
  9731                           ;newmain.c: 375:     return (ADRESH << 8) | ADRESL;
  9732   0070B8  50C3               	movf	195,w,c	;volatile
  9733   0070BA  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  9734   0070BE  6A04               	clrf	(??_ADC_Read+1)^0,c
  9735   0070C0  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  9736   0070C4  6A03               	clrf	??_ADC_Read^0,c
  9737   0070C6  1003               	iorwf	??_ADC_Read^0,w,c
  9738   0070C8  6E01               	movwf	?_ADC_Read^0,c
  9739   0070CA  5004               	movf	(??_ADC_Read+1)^0,w,c
  9740   0070CC  6E02               	movwf	(?_ADC_Read+1)^0,c
  9741   0070CE  0012               	return		;funcret
  9742   0070D0                     __end_of_ADC_Read:
  9743                           	callstack 0
  9744                           
  9745 ;; *************** function _Interrupt_Init *****************
  9746 ;; Defined at:
  9747 ;;		line 352 in file "newmain.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;		None
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;		None
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  1    wreg      void 
  9754 ;; Registers used:
  9755 ;;		None
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9761 ;;      Params:         0       0       0       0       0       0       0       0       0
  9762 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9763 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9764 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9765 ;;Total ram usage:        0 bytes
  9766 ;; Hardware stack levels used: 1
  9767 ;; Hardware stack levels required when called: 1
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_main
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           	psect	text19
  9776   007222                     __ptext19:
  9777                           	callstack 0
  9778   007222                     _Interrupt_Init:
  9779                           	callstack 29
  9780   007222                     
  9781                           ;newmain.c: 353:     TRISBbits.TRISB1 = 1;
  9782   007222  8293               	bsf	147,1,c	;volatile
  9783                           
  9784                           ;newmain.c: 354:     INTCON2bits.INTEDG1 = 0;
  9785   007224  9AF1               	bcf	241,5,c	;volatile
  9786                           
  9787                           ;newmain.c: 355:     INTCON3bits.INT1IE = 1;
  9788   007226  86F0               	bsf	240,3,c	;volatile
  9789                           
  9790                           ;newmain.c: 356:     INTCON3bits.INT1IP = 1;
  9791   007228  8CF0               	bsf	240,6,c	;volatile
  9792                           
  9793                           ;newmain.c: 358:     RCONbits.IPEN = 1;
  9794   00722A  8ED0               	bsf	208,7,c	;volatile
  9795                           
  9796                           ;newmain.c: 359:     INTCONbits.GIEH = 1;
  9797   00722C  8EF2               	bsf	242,7,c	;volatile
  9798                           
  9799                           ;newmain.c: 360:     INTCONbits.GIEL = 1;
  9800   00722E  8CF2               	bsf	242,6,c	;volatile
  9801   007230  0012               	return		;funcret
  9802   007232                     __end_of_Interrupt_Init:
  9803                           	callstack 0
  9804                           
  9805 ;; *************** function _Handle_Test_Command *****************
  9806 ;; Defined at:
  9807 ;;		line 327 in file "newmain.c"
  9808 ;; Parameters:    Size  Location     Type
  9809 ;;		None
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;		None
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  1    wreg      void 
  9814 ;; Registers used:
  9815 ;;		wreg, status,2, status,0
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9821 ;;      Params:         0       0       0       0       0       0       0       0       0
  9822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9823 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9824 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9825 ;;Total ram usage:        4 bytes
  9826 ;; Hardware stack levels used: 1
  9827 ;; Hardware stack levels required when called: 1
  9828 ;; This function calls:
  9829 ;;		Nothing
  9830 ;; This function is called by:
  9831 ;;		_main
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text20
  9836   006842                     __ptext20:
  9837                           	callstack 0
  9838   006842                     _Handle_Test_Command:
  9839                           	callstack 29
  9840   006842                     
  9841                           ;newmain.c: 329:     trigger_test = 1;
  9842   006842  0E01               	movlw	1
  9843   006844  0100               	movlb	0	; () banked
  9844   006846  6FF9               	movwf	_trigger_test& (0+255),b
  9845   006848                     
  9846                           ; BSR set to: 0
  9847                           ;newmain.c: 332:     PORTBbits.RB0 = 1;
  9848   006848  8081               	bsf	129,0,c	;volatile
  9849                           
  9850                           ;newmain.c: 333:     pump_active = 1;
  9851   00684A  0E01               	movlw	1
  9852   00684C  0101               	movlb	1	; () banked
  9853   00684E  6FF7               	movwf	_pump_active& (0+255),b
  9854   006850                     
  9855                           ; BSR set to: 1
  9856                           ;newmain.c: 336:     if(system_millis - test_last_toggle >= TEST_BLINK_INTERVAL) {
  9857   006850  0102               	movlb	2	; () banked
  9858   006852  5161               	movf	_test_last_toggle& (0+255),w,b
  9859   006854  0101               	movlb	1	; () banked
  9860   006856  5DD0               	subwf	_system_millis& (0+255),w,b
  9861   006858  6E01               	movwf	??_Handle_Test_Command^0,c
  9862   00685A  0102               	movlb	2	; () banked
  9863   00685C  5162               	movf	(_test_last_toggle+1)& (0+255),w,b
  9864   00685E  0101               	movlb	1	; () banked
  9865   006860  59D1               	subwfb	(_system_millis+1)& (0+255),w,b
  9866   006862  6E02               	movwf	(??_Handle_Test_Command+1)^0,c
  9867   006864  0102               	movlb	2	; () banked
  9868   006866  5163               	movf	(_test_last_toggle+2)& (0+255),w,b
  9869   006868  0101               	movlb	1	; () banked
  9870   00686A  59D2               	subwfb	(_system_millis+2)& (0+255),w,b
  9871   00686C  6E03               	movwf	(??_Handle_Test_Command+2)^0,c
  9872   00686E  0102               	movlb	2	; () banked
  9873   006870  5164               	movf	(_test_last_toggle+3)& (0+255),w,b
  9874   006872  0101               	movlb	1	; () banked
  9875   006874  59D3               	subwfb	(_system_millis+3)& (0+255),w,b
  9876   006876  6E04               	movwf	(??_Handle_Test_Command+3)^0,c
  9877   006878  5004               	movf	(??_Handle_Test_Command+3)^0,w,c
  9878   00687A  1003               	iorwf	(??_Handle_Test_Command+2)^0,w,c
  9879   00687C  E10B               	bnz	u10620
  9880   00687E  0EF4               	movlw	244
  9881   006880  5C01               	subwf	??_Handle_Test_Command^0,w,c
  9882   006882  0E01               	movlw	1
  9883   006884  5802               	subwfb	(??_Handle_Test_Command+1)^0,w,c
  9884   006886  A0D8               	btfss	status,0,c
  9885   006888  EF48  F034         	goto	u10621
  9886   00688C  EF4A  F034         	goto	u10620
  9887   006890                     u10621:
  9888   006890  EF63  F034         	goto	l8349
  9889   006894                     u10620:
  9890   006894                     
  9891                           ; BSR set to: 1
  9892                           ;newmain.c: 337:         PORTBbits.RB5 = !PORTBbits.RB5;
  9893   006894  AA81               	btfss	129,5,c	;volatile
  9894   006896  EF4F  F034         	goto	u10631
  9895   00689A  EF53  F034         	goto	u10630
  9896   00689E                     u10631:
  9897   00689E  6A01               	clrf	??_Handle_Test_Command^0,c
  9898   0068A0  2A01               	incf	??_Handle_Test_Command^0,f,c
  9899   0068A2  EF54  F034         	goto	u10648
  9900   0068A6                     u10630:
  9901   0068A6  6A01               	clrf	??_Handle_Test_Command^0,c
  9902   0068A8                     u10648:
  9903   0068A8  3A01               	swapf	??_Handle_Test_Command^0,f,c
  9904   0068AA  4601               	rlncf	??_Handle_Test_Command^0,f,c
  9905   0068AC  5081               	movf	129,w,c	;volatile
  9906   0068AE  1801               	xorwf	??_Handle_Test_Command^0,w,c
  9907   0068B0  0BDF               	andlw	-33
  9908   0068B2  1801               	xorwf	??_Handle_Test_Command^0,w,c
  9909   0068B4  6E81               	movwf	129,c	;volatile
  9910   0068B6                     
  9911                           ;newmain.c: 338:         test_last_toggle = system_millis;
  9912   0068B6  C1D0  F261         	movff	_system_millis,_test_last_toggle
  9913   0068BA  C1D1  F262         	movff	_system_millis+1,_test_last_toggle+1
  9914   0068BE  C1D2  F263         	movff	_system_millis+2,_test_last_toggle+2
  9915   0068C2  C1D3  F264         	movff	_system_millis+3,_test_last_toggle+3
  9916   0068C6                     l8349:
  9917                           
  9918                           ;newmain.c: 340:     alarm_active = 1;
  9919   0068C6  0E01               	movlw	1
  9920   0068C8  0101               	movlb	1	; () banked
  9921   0068CA  6FF6               	movwf	_alarm_active& (0+255),b
  9922   0068CC                     
  9923                           ; BSR set to: 1
  9924                           ;newmain.c: 343:     if((system_millis - test_start_time) >= TEST_DURATION) {
  9925   0068CC  51D4               	movf	_test_start_time& (0+255),w,b
  9926   0068CE  5DD0               	subwf	_system_millis& (0+255),w,b
  9927   0068D0  6E01               	movwf	??_Handle_Test_Command^0,c
  9928   0068D2  51D5               	movf	(_test_start_time+1)& (0+255),w,b
  9929   0068D4  59D1               	subwfb	(_system_millis+1)& (0+255),w,b
  9930   0068D6  6E02               	movwf	(??_Handle_Test_Command+1)^0,c
  9931   0068D8  51D6               	movf	(_test_start_time+2)& (0+255),w,b
  9932   0068DA  59D2               	subwfb	(_system_millis+2)& (0+255),w,b
  9933   0068DC  6E03               	movwf	(??_Handle_Test_Command+2)^0,c
  9934   0068DE  51D7               	movf	(_test_start_time+3)& (0+255),w,b
  9935   0068E0  59D3               	subwfb	(_system_millis+3)& (0+255),w,b
  9936   0068E2  6E04               	movwf	(??_Handle_Test_Command+3)^0,c
  9937   0068E4  5004               	movf	(??_Handle_Test_Command+3)^0,w,c
  9938   0068E6  1003               	iorwf	(??_Handle_Test_Command+2)^0,w,c
  9939   0068E8  E10B               	bnz	u10650
  9940   0068EA  0E10               	movlw	16
  9941   0068EC  5C01               	subwf	??_Handle_Test_Command^0,w,c
  9942   0068EE  0E27               	movlw	39
  9943   0068F0  5802               	subwfb	(??_Handle_Test_Command+1)^0,w,c
  9944   0068F2  A0D8               	btfss	status,0,c
  9945   0068F4  EF7E  F034         	goto	u10651
  9946   0068F8  EF80  F034         	goto	u10650
  9947   0068FC                     u10651:
  9948   0068FC  EF87  F034         	goto	l236
  9949   006900                     u10650:
  9950   006900                     
  9951                           ; BSR set to: 1
  9952                           ;newmain.c: 344:         trigger_test = 0;
  9953   006900  0100               	movlb	0	; () banked
  9954   006902  6BF9               	clrf	_trigger_test& (0+255),b
  9955                           
  9956                           ;newmain.c: 345:         PORTBbits.RB0 = 0;
  9957   006904  9081               	bcf	129,0,c	;volatile
  9958                           
  9959                           ;newmain.c: 346:         PORTBbits.RB5 = 1;
  9960   006906  8A81               	bsf	129,5,c	;volatile
  9961                           
  9962                           ;newmain.c: 347:         pump_active = 0;
  9963   006908  0101               	movlb	1	; () banked
  9964   00690A  6BF7               	clrf	_pump_active& (0+255),b
  9965                           
  9966                           ;newmain.c: 348:         alarm_active = 0;
  9967   00690C  6BF6               	clrf	_alarm_active& (0+255),b
  9968   00690E                     l236:
  9969                           
  9970                           ; BSR set to: 1
  9971   00690E  0012               	return		;funcret
  9972   006910                     __end_of_Handle_Test_Command:
  9973                           	callstack 0
  9974                           
  9975 ;; *************** function _End_Event *****************
  9976 ;; Defined at:
  9977 ;;		line 277 in file "newmain.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;		None
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;  i               2  202[BANK1 ] int 
  9982 ;;  event_buffer  200    0[BANK1 ] unsigned char [200]
  9983 ;;  event_type_s    2  200[BANK1 ] PTR const unsigned char 
  9984 ;;		 -> STR_12(8), STR_11(13), STR_10(9), STR_9(9), 
  9985 ;;		 -> STR_8(1), 
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  1    wreg      void 
  9988 ;; Registers used:
  9989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9995 ;;      Params:         0       0       0       0       0       0       0       0       0
  9996 ;;      Locals:         0       0     204       0       0       0       0       0       0
  9997 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9998 ;;      Totals:         0       2     204       0       0       0       0       0       0
  9999 ;;Total ram usage:      206 bytes
 10000 ;; Hardware stack levels used: 1
 10001 ;; Hardware stack levels required when called: 9
 10002 ;; This function calls:
 10003 ;;		___flsub
 10004 ;;		_sprintf
 10005 ;; This function is called by:
 10006 ;;		_main
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           	psect	text21
 10011   005824                     __ptext21:
 10012                           	callstack 0
 10013   005824                     _End_Event:
 10014                           	callstack 21
 10015   005824                     
 10016                           ;newmain.c: 278:     if (!event_active) return;
 10017   005824  0100               	movlb	0	; () banked
 10018   005826  51F8               	movf	_event_active& (0+255),w,b
 10019   005828  A4D8               	btfss	status,2,c
 10020   00582A  EF19  F02C         	goto	u10971
 10021   00582E  EF1B  F02C         	goto	u10970
 10022   005832                     u10971:
 10023   005832  EF1D  F02C         	goto	l8547
 10024   005836                     u10970:
 10025   005836  EFE1  F02C         	goto	l212
 10026   00583A                     l8547:
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;newmain.c: 281:     current_event.water_used = total_flow - current_event.start_total_f
      +                          low;
 10030   00583A  C1DC  F038         	movff	_total_flow,___flsub@b
 10031   00583E  C1DD  F039         	movff	_total_flow+1,___flsub@b+1
 10032   005842  C1DE  F03A         	movff	_total_flow+2,___flsub@b+2
 10033   005846  C1DF  F03B         	movff	_total_flow+3,___flsub@b+3
 10034   00584A  C249  F03C         	movff	_current_event+17,___flsub@a
 10035   00584E  C24A  F03D         	movff	_current_event+18,___flsub@a+1
 10036   005852  C24B  F03E         	movff	_current_event+19,___flsub@a+2
 10037   005856  C24C  F03F         	movff	_current_event+20,___flsub@a+3
 10038   00585A  EC02  F038         	call	___flsub	;wreg free
 10039   00585E  C038  F24D         	movff	?___flsub,_current_event+21
 10040   005862  C039  F24E         	movff	?___flsub+1,_current_event+22
 10041   005866  C03A  F24F         	movff	?___flsub+2,_current_event+23
 10042   00586A  C03B  F250         	movff	?___flsub+3,_current_event+24
 10043   00586E                     
 10044                           ;newmain.c: 286:     switch(current_event.type) {
 10045   00586E  EF55  F02C         	goto	l8559
 10046   005872                     l8551:
 10047                           
 10048                           ; BSR set to: 0
 10049   005872  0EC3               	movlw	low STR_9
 10050   005874  0101               	movlb	1	; () banked
 10051   005876  6FC8               	movwf	End_Event@event_type_str& (0+255),b
 10052   005878  0E7F               	movlw	high STR_9
 10053   00587A  6FC9               	movwf	(End_Event@event_type_str+1)& (0+255),b
 10054   00587C  EF70  F02C         	goto	l8561
 10055   005880                     l8553:
 10056                           
 10057                           ; BSR set to: 0
 10058   005880  0ECC               	movlw	low STR_10
 10059   005882  0101               	movlb	1	; () banked
 10060   005884  6FC8               	movwf	End_Event@event_type_str& (0+255),b
 10061   005886  0E7F               	movlw	high STR_10
 10062   005888  6FC9               	movwf	(End_Event@event_type_str+1)& (0+255),b
 10063   00588A  EF70  F02C         	goto	l8561
 10064   00588E                     l8555:
 10065                           
 10066                           ; BSR set to: 0
 10067   00588E  0EA9               	movlw	low STR_11
 10068   005890  0101               	movlb	1	; () banked
 10069   005892  6FC8               	movwf	End_Event@event_type_str& (0+255),b
 10070   005894  0E7F               	movlw	high STR_11
 10071   005896  6FC9               	movwf	(End_Event@event_type_str+1)& (0+255),b
 10072   005898  EF70  F02C         	goto	l8561
 10073   00589C                     l8557:
 10074                           
 10075                           ; BSR set to: 0
 10076   00589C  0EDE               	movlw	low STR_6
 10077   00589E  0101               	movlb	1	; () banked
 10078   0058A0  6FC8               	movwf	End_Event@event_type_str& (0+255),b
 10079   0058A2  0E7F               	movlw	high STR_6
 10080   0058A4  6FC9               	movwf	(End_Event@event_type_str+1)& (0+255),b
 10081                           
 10082                           ;newmain.c: 291:     }
 10083   0058A6  EF70  F02C         	goto	l8561
 10084   0058AA                     l8559:
 10085   0058AA  0102               	movlb	2	; () banked
 10086   0058AC  5138               	movf	_current_event& (0+255),w,b
 10087   0058AE  0100               	movlb	0	; () banked
 10088   0058B0  6FE4               	movwf	??_End_Event& (0+255),b
 10089   0058B2  6BE5               	clrf	(??_End_Event+1)& (0+255),b
 10090                           
 10091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10092                           ; Switch size 1, requested type "simple"
 10093                           ; Number of cases is 1, Range of values is 0 to 0
 10094                           ; switch strategies available:
 10095                           ; Name         Instructions Cycles
 10096                           ; simple_byte            4     3 (average)
 10097                           ;	Chosen strategy is simple_byte
 10098   0058B4  51E5               	movf	(??_End_Event+1)& (0+255),w,b
 10099   0058B6  0A00               	xorlw	0	; case 0
 10100   0058B8  B4D8               	btfsc	status,2,c
 10101   0058BA  EF61  F02C         	goto	l8809
 10102   0058BE  EF4E  F02C         	goto	l8557
 10103   0058C2                     l8809:
 10104                           
 10105                           ; BSR set to: 0
 10106                           ; Switch size 1, requested type "simple"
 10107                           ; Number of cases is 3, Range of values is 1 to 3
 10108                           ; switch strategies available:
 10109                           ; Name         Instructions Cycles
 10110                           ; simple_byte           10     6 (average)
 10111                           ;	Chosen strategy is simple_byte
 10112   0058C2  51E4               	movf	??_End_Event& (0+255),w,b
 10113   0058C4  0A01               	xorlw	1	; case 1
 10114   0058C6  B4D8               	btfsc	status,2,c
 10115   0058C8  EF39  F02C         	goto	l8551
 10116   0058CC  0A03               	xorlw	3	; case 2
 10117   0058CE  B4D8               	btfsc	status,2,c
 10118   0058D0  EF40  F02C         	goto	l8553
 10119   0058D4  0A01               	xorlw	1	; case 3
 10120   0058D6  B4D8               	btfsc	status,2,c
 10121   0058D8  EF47  F02C         	goto	l8555
 10122   0058DC  EF4E  F02C         	goto	l8557
 10123   0058E0                     l8561:
 10124                           
 10125                           ; BSR set to: 1
 10126                           ;newmain.c: 293:     sprintf(event_buffer,
 10127   0058E0  0E00               	movlw	low End_Event@event_buffer
 10128   0058E2  0100               	movlb	0	; () banked
 10129   0058E4  6FB6               	movwf	sprintf@s& (0+255),b
 10130   0058E6  0E01               	movlw	high End_Event@event_buffer
 10131   0058E8  6FB7               	movwf	(sprintf@s+1)& (0+255),b
 10132   0058EA  0E3E               	movlw	low STR_13
 10133   0058EC  6FB8               	movwf	sprintf@fmt& (0+255),b
 10134   0058EE  0E7F               	movlw	high STR_13
 10135   0058F0  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
 10136   0058F2  C1C8  F0BA         	movff	End_Event@event_type_str,?_sprintf+4
 10137   0058F6  C1C9  F0BB         	movff	End_Event@event_type_str+1,?_sprintf+5
 10138   0058FA  C239  F0BC         	movff	_current_event+1,?_sprintf+6
 10139   0058FE  C23A  F0BD         	movff	_current_event+2,?_sprintf+7
 10140   005902  C23B  F0BE         	movff	_current_event+3,?_sprintf+8
 10141   005906  C23C  F0BF         	movff	_current_event+4,?_sprintf+9
 10142   00590A  C23D  F0C0         	movff	_current_event+5,?_sprintf+10
 10143   00590E  C23E  F0C1         	movff	_current_event+6,?_sprintf+11
 10144   005912  C23F  F0C2         	movff	_current_event+7,?_sprintf+12
 10145   005916  C240  F0C3         	movff	_current_event+8,?_sprintf+13
 10146   00591A  C241  F0C4         	movff	_current_event+9,?_sprintf+14
 10147   00591E  C242  F0C5         	movff	_current_event+10,?_sprintf+15
 10148   005922  C243  F0C6         	movff	_current_event+11,?_sprintf+16
 10149   005926  C244  F0C7         	movff	_current_event+12,?_sprintf+17
 10150   00592A  C245  F0C8         	movff	_current_event+13,?_sprintf+18
 10151   00592E  C246  F0C9         	movff	_current_event+14,?_sprintf+19
 10152   005932  C247  F0CA         	movff	_current_event+15,?_sprintf+20
 10153   005936  C248  F0CB         	movff	_current_event+16,?_sprintf+21
 10154   00593A  C24D  F0CC         	movff	_current_event+21,?_sprintf+22
 10155   00593E  C24E  F0CD         	movff	_current_event+22,?_sprintf+23
 10156   005942  C24F  F0CE         	movff	_current_event+23,?_sprintf+24
 10157   005946  C250  F0CF         	movff	_current_event+24,?_sprintf+25
 10158   00594A  EC25  F038         	call	_sprintf	;wreg free
 10159   00594E                     l219:
 10160   00594E  A2AC               	btfss	172,1,c	;volatile
 10161   005950  EFAC  F02C         	goto	u10981
 10162   005954  EFAE  F02C         	goto	u10980
 10163   005958                     u10981:
 10164   005958  EFA7  F02C         	goto	l219
 10165   00595C                     u10980:
 10166   00595C                     
 10167                           ;newmain.c: 304:     for(int i = 0; event_buffer[i]; i++) {
 10168   00595C  0E00               	movlw	0
 10169   00595E  0101               	movlb	1	; () banked
 10170   005960  6FCB               	movwf	(End_Event@i+1)& (0+255),b
 10171   005962  0E00               	movlw	0
 10172   005964  6FCA               	movwf	End_Event@i& (0+255),b
 10173   005966  EFC7  F02C         	goto	l8569
 10174   00596A                     l8565:
 10175                           
 10176                           ; BSR set to: 1
 10177                           ;newmain.c: 305:         TXREG = event_buffer[i];
 10178   00596A  0E00               	movlw	low End_Event@event_buffer
 10179   00596C  25CA               	addwf	End_Event@i& (0+255),w,b
 10180   00596E  6ED9               	movwf	fsr2l,c
 10181   005970  0E01               	movlw	high End_Event@event_buffer
 10182   005972  21CB               	addwfc	(End_Event@i+1)& (0+255),w,b
 10183   005974  6EDA               	movwf	fsr2h,c
 10184   005976  50DF               	movf	indf2,w,c
 10185   005978  6EAD               	movwf	173,c	;volatile
 10186   00597A                     l224:
 10187   00597A  A2AC               	btfss	172,1,c	;volatile
 10188   00597C  EFC2  F02C         	goto	u10991
 10189   005980  EFC4  F02C         	goto	u10990
 10190   005984                     u10991:
 10191   005984  EFBD  F02C         	goto	l224
 10192   005988                     u10990:
 10193   005988                     
 10194                           ;newmain.c: 307:     }
 10195   005988  0101               	movlb	1	; () banked
 10196   00598A  4BCA               	infsnz	End_Event@i& (0+255),f,b
 10197   00598C  2BCB               	incf	(End_Event@i+1)& (0+255),f,b
 10198   00598E                     l8569:
 10199                           
 10200                           ; BSR set to: 1
 10201   00598E  0E00               	movlw	low End_Event@event_buffer
 10202   005990  25CA               	addwf	End_Event@i& (0+255),w,b
 10203   005992  6ED9               	movwf	fsr2l,c
 10204   005994  0E01               	movlw	high End_Event@event_buffer
 10205   005996  21CB               	addwfc	(End_Event@i+1)& (0+255),w,b
 10206   005998  6EDA               	movwf	fsr2h,c
 10207   00599A  50DF               	movf	indf2,w,c
 10208   00599C  A4D8               	btfss	status,2,c
 10209   00599E  EFD3  F02C         	goto	u11001
 10210   0059A2  EFD5  F02C         	goto	u11000
 10211   0059A6                     u11001:
 10212   0059A6  EFB5  F02C         	goto	l8565
 10213   0059AA                     u11000:
 10214   0059AA                     
 10215                           ; BSR set to: 1
 10216                           ;newmain.c: 310:     event_active = 0;
 10217   0059AA  0100               	movlb	0	; () banked
 10218   0059AC  6BF8               	clrf	_event_active& (0+255),b
 10219                           
 10220                           ;newmain.c: 311:     current_event.type = EVENT_NONE;
 10221   0059AE  0102               	movlb	2	; () banked
 10222   0059B0  6B38               	clrf	_current_event& (0+255),b
 10223                           
 10224                           ;newmain.c: 314:     last_flow_reset_time = system_millis;
 10225   0059B2  C1D0  F1CC         	movff	_system_millis,_last_flow_reset_time
 10226   0059B6  C1D1  F1CD         	movff	_system_millis+1,_last_flow_reset_time+1
 10227   0059BA  C1D2  F1CE         	movff	_system_millis+2,_last_flow_reset_time+2
 10228   0059BE  C1D3  F1CF         	movff	_system_millis+3,_last_flow_reset_time+3
 10229   0059C2                     l212:
 10230   0059C2  0012               	return		;funcret
 10231   0059C4                     __end_of_End_Event:
 10232                           	callstack 0
 10233                           
 10234 ;; *************** function _sprintf *****************
 10235 ;; Defined at:
 10236 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;  s               2   86[BANK0 ] PTR unsigned char 
 10239 ;;		 -> Send_Sensor_Data@buffer(200), End_Event@event_buffer(200), Send_Event_Data@event_buffer(100), 
 10240 ;;  fmt             2   88[BANK0 ] PTR const unsigned char 
 10241 ;;		 -> STR_14(107), STR_13(79), STR_7(28), 
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;  f              11  121[BANK0 ] struct _IO_FILE
 10244 ;;  ret             2    0        int 
 10245 ;;  ap              1  120[BANK0 ] PTR void [1]
 10246 ;;		 -> ?_sprintf(2), 
 10247 ;; Return value:  Size  Location     Type
 10248 ;;                  2   86[BANK0 ] int 
 10249 ;; Registers used:
 10250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10256 ;;      Params:         0      34       0       0       0       0       0       0       0
 10257 ;;      Locals:         0      12       0       0       0       0       0       0       0
 10258 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10259 ;;      Totals:         0      46       0       0       0       0       0       0       0
 10260 ;;Total ram usage:       46 bytes
 10261 ;; Hardware stack levels used: 1
 10262 ;; Hardware stack levels required when called: 8
 10263 ;; This function calls:
 10264 ;;		_vfprintf
 10265 ;; This function is called by:
 10266 ;;		_Send_Event_Data
 10267 ;;		_End_Event
 10268 ;;		_Send_Sensor_Data
 10269 ;; This function uses a non-reentrant model
 10270 ;;
 10271                           
 10272                           	psect	text22
 10273   00704A                     __ptext22:
 10274                           	callstack 0
 10275   00704A                     _sprintf:
 10276                           	callstack 20
 10277   00704A  0EBA               	movlw	low (?_sprintf+4)
 10278   00704C  0100               	movlb	0	; () banked
 10279   00704E  6FD8               	movwf	sprintf@ap& (0+255),b
 10280   007050  C0B6  F0D9         	movff	sprintf@s,sprintf@f
 10281   007054  C0B7  F0DA         	movff	sprintf@s+1,sprintf@f+1
 10282   007058                     
 10283                           ; BSR set to: 0
 10284   007058  0E00               	movlw	0
 10285   00705A  6FDC               	movwf	(sprintf@f+3)& (0+255),b
 10286   00705C  0E00               	movlw	0
 10287   00705E  6FDB               	movwf	(sprintf@f+2)& (0+255),b
 10288   007060                     
 10289                           ; BSR set to: 0
 10290   007060  0E00               	movlw	0
 10291   007062  6FE3               	movwf	(sprintf@f+10)& (0+255),b
 10292   007064  0E00               	movlw	0
 10293   007066  6FE2               	movwf	(sprintf@f+9)& (0+255),b
 10294   007068                     
 10295                           ; BSR set to: 0
 10296   007068  0ED9               	movlw	low sprintf@f
 10297   00706A  6FB0               	movwf	vfprintf@fp& (0+255),b
 10298   00706C  C0B8  F0B1         	movff	sprintf@fmt,vfprintf@fmt
 10299   007070  C0B9  F0B2         	movff	sprintf@fmt+1,vfprintf@fmt+1
 10300   007074  0ED8               	movlw	low sprintf@ap
 10301   007076  6FB3               	movwf	vfprintf@ap& (0+255),b
 10302   007078  ECDE  F037         	call	_vfprintf	;wreg free
 10303   00707C  0100               	movlb	0	; () banked
 10304   00707E  51DB               	movf	(sprintf@f+2)& (0+255),w,b
 10305   007080  25B6               	addwf	sprintf@s& (0+255),w,b
 10306   007082  6ED9               	movwf	fsr2l,c
 10307   007084  51DC               	movf	(sprintf@f+3)& (0+255),w,b
 10308   007086  21B7               	addwfc	(sprintf@s+1)& (0+255),w,b
 10309   007088  6EDA               	movwf	fsr2h,c
 10310   00708A  6ADF               	clrf	indf2,c
 10311   00708C                     
 10312                           ; BSR set to: 0
 10313   00708C  0012               	return		;funcret
 10314   00708E                     __end_of_sprintf:
 10315                           	callstack 0
 10316                           
 10317 ;; *************** function _vfprintf *****************
 10318 ;; Defined at:
 10319 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  fp              1   80[BANK0 ] PTR struct _IO_FILE
 10322 ;;		 -> sprintf@f(11), 
 10323 ;;  fmt             2   81[BANK0 ] PTR const unsigned char 
 10324 ;;		 -> STR_14(107), STR_13(79), STR_7(28), 
 10325 ;;  ap              1   83[BANK0 ] PTR PTR void 
 10326 ;;		 -> sprintf@ap(1), 
 10327 ;; Auto vars:     Size  Location     Type
 10328 ;;  cfmt            2   84[BANK0 ] PTR unsigned char 
 10329 ;;		 -> STR_14(107), STR_13(79), STR_7(28), 
 10330 ;; Return value:  Size  Location     Type
 10331 ;;                  2   80[BANK0 ] int 
 10332 ;; Registers used:
 10333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10334 ;; Tracked objects:
 10335 ;;		On entry : 0/0
 10336 ;;		On exit  : 0/0
 10337 ;;		Unchanged: 0/0
 10338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10339 ;;      Params:         0       4       0       0       0       0       0       0       0
 10340 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10341 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10342 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10343 ;;Total ram usage:        6 bytes
 10344 ;; Hardware stack levels used: 1
 10345 ;; Hardware stack levels required when called: 7
 10346 ;; This function calls:
 10347 ;;		_vfpfcnvrt
 10348 ;; This function is called by:
 10349 ;;		_sprintf
 10350 ;; This function uses a non-reentrant model
 10351 ;;
 10352                           
 10353                           	psect	text23
 10354   006FBC                     __ptext23:
 10355                           	callstack 0
 10356   006FBC                     _vfprintf:
 10357                           	callstack 20
 10358   006FBC                     
 10359                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 10360   006FBC  C0B1  F0B4         	movff	vfprintf@fmt,vfprintf@cfmt
 10361   006FC0  C0B2  F0B5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10362                           
 10363                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10364   006FC4  EFEE  F037         	goto	l7605
 10365   006FC8                     l7603:
 10366                           
 10367                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 10368   006FC8  C0B0  F0A2         	movff	vfprintf@fp,vfpfcnvrt@fp
 10369   006FCC  0EB4               	movlw	low vfprintf@cfmt
 10370   006FCE  0100               	movlb	0	; () banked
 10371   006FD0  6FA3               	movwf	vfpfcnvrt@fmt& (0+255),b
 10372   006FD2  C0B3  F0A4         	movff	vfprintf@ap,vfpfcnvrt@ap
 10373   006FD6  6BA5               	clrf	(vfpfcnvrt@ap+1)& (0+255),b
 10374   006FD8  EC58  F017         	call	_vfpfcnvrt	;wreg free
 10375   006FDC                     l7605:
 10376                           
 10377                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10378   006FDC  C0B4  FFF6         	movff	vfprintf@cfmt,tblptrl
 10379   006FE0  C0B5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 10380   006FE4                     	if	0	;tblptru may be non-zero
 10381   006FE4                     	endif
 10382   006FE4                     	if	0	;tblptru may be non-zero
 10383   006FE4                     	endif
 10384   006FE4  0008               	tblrd		*
 10385   006FE6  50F5               	movf	tablat,w,c
 10386   006FE8  0900               	iorlw	0
 10387   006FEA  A4D8               	btfss	status,2,c
 10388   006FEC  EFFA  F037         	goto	u9631
 10389   006FF0  EFFC  F037         	goto	u9630
 10390   006FF4                     u9631:
 10391   006FF4  EFE4  F037         	goto	l7603
 10392   006FF8                     u9630:
 10393   006FF8                     
 10394                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 10395   006FF8  0E00               	movlw	0
 10396   006FFA  0100               	movlb	0	; () banked
 10397   006FFC  6FB1               	movwf	(?_vfprintf+1)& (0+255),b
 10398   006FFE  0E00               	movlw	0
 10399   007000  6FB0               	movwf	?_vfprintf& (0+255),b
 10400   007002                     
 10401                           ; BSR set to: 0
 10402   007002  0012               	return		;funcret
 10403   007004                     __end_of_vfprintf:
 10404                           	callstack 0
 10405                           
 10406 ;; *************** function _vfpfcnvrt *****************
 10407 ;; Defined at:
 10408 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
 10411 ;;		 -> sprintf@f(11), 
 10412 ;;  fmt             1   67[BANK0 ] PTR PTR unsigned char 
 10413 ;;		 -> vfprintf@cfmt(2), 
 10414 ;;  ap              2   68[BANK0 ] PTR PTR void 
 10415 ;;		 -> sprintf@ap(1), 
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;  convarg         4   73[BANK0 ] struct .
 10418 ;;  cp              2   78[BANK0 ] PTR unsigned char 
 10419 ;;		 -> STR_14(107), STR_13(79), STR_7(28), 
 10420 ;;  c               1   77[BANK0 ] unsigned char 
 10421 ;;  done            1   72[BANK0 ] _Bool 
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      void 
 10424 ;; Registers used:
 10425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10431 ;;      Params:         0       4       0       0       0       0       0       0       0
 10432 ;;      Locals:         0       8       0       0       0       0       0       0       0
 10433 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10434 ;;      Totals:         0      14       0       0       0       0       0       0       0
 10435 ;;Total ram usage:       14 bytes
 10436 ;; Hardware stack levels used: 1
 10437 ;; Hardware stack levels required when called: 6
 10438 ;; This function calls:
 10439 ;;		_dtoa
 10440 ;;		_efgtoa
 10441 ;;		_fputc
 10442 ;;		_read_prec_or_width
 10443 ;;		_stoa
 10444 ;;		_utoa
 10445 ;; This function is called by:
 10446 ;;		_vfprintf
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text24
 10451   002EB0                     __ptext24:
 10452                           	callstack 0
 10453   002EB0                     _vfpfcnvrt:
 10454                           	callstack 20
 10455   002EB0                     
 10456                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 10457   002EB0  0100               	movlb	0	; () banked
 10458   002EB2  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10459   002EB4  6ED9               	movwf	fsr2l,c
 10460   002EB6  6ADA               	clrf	fsr2h,c
 10461   002EB8  CFDE FFF6          	movff	postinc2,tblptrl
 10462   002EBC  CFDD FFF7          	movff	postdec2,tblptrh
 10463   002EC0                     	if	0	;tblptru may be non-zero
 10464   002EC0                     	endif
 10465   002EC0                     	if	0	;tblptru may be non-zero
 10466   002EC0                     	endif
 10467   002EC0  0008               	tblrd		*
 10468   002EC2  50F5               	movf	tablat,w,c
 10469   002EC4  0A25               	xorlw	37
 10470   002EC6  A4D8               	btfss	status,2,c
 10471   002EC8  EF68  F017         	goto	u9521
 10472   002ECC  EF6A  F017         	goto	u9520
 10473   002ED0                     u9521:
 10474   002ED0  EFCC  F019         	goto	l7595
 10475   002ED4                     u9520:
 10476   002ED4                     
 10477                           ; BSR set to: 0
 10478                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 10479   002ED4  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10480   002ED6  6ED9               	movwf	fsr2l,c
 10481   002ED8  6ADA               	clrf	fsr2h,c
 10482   002EDA  2ADE               	incf	postinc2,f,c
 10483   002EDC  0E00               	movlw	0
 10484   002EDE  22DD               	addwfc	postdec2,f,c
 10485   002EE0                     
 10486                           ; BSR set to: 0
 10487                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 10488   002EE0  0E00               	movlw	0
 10489   002EE2  0101               	movlb	1	; () banked
 10490   002EE4  6FEF               	movwf	(_width+1)& (0+255),b
 10491   002EE6  0E00               	movlw	0
 10492   002EE8  6FEE               	movwf	_width& (0+255),b
 10493   002EEA  C1EE  F1F2         	movff	_width,_flags
 10494   002EEE                     
 10495                           ; BSR set to: 1
 10496                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 10497   002EEE  0100               	movlb	0	; () banked
 10498   002EF0  69F3               	setf	_prec& (0+255),b
 10499   002EF2  69F4               	setf	(_prec+1)& (0+255),b
 10500   002EF4                     
 10501                           ; BSR set to: 0
 10502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 10503   002EF4  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10504   002EF6  6ED9               	movwf	fsr2l,c
 10505   002EF8  6ADA               	clrf	fsr2h,c
 10506   002EFA  CFDE FFF6          	movff	postinc2,tblptrl
 10507   002EFE  CFDD FFF7          	movff	postdec2,tblptrh
 10508   002F02                     	if	0	;tblptru may be non-zero
 10509   002F02                     	endif
 10510   002F02                     	if	0	;tblptru may be non-zero
 10511   002F02                     	endif
 10512   002F02  0008               	tblrd		*
 10513   002F04  50F5               	movf	tablat,w,c
 10514   002F06  0A2E               	xorlw	46
 10515   002F08  A4D8               	btfss	status,2,c
 10516   002F0A  EF89  F017         	goto	u9531
 10517   002F0E  EF8B  F017         	goto	u9530
 10518   002F12                     u9531:
 10519   002F12  EF9B  F017         	goto	l7487
 10520   002F16                     u9530:
 10521   002F16                     
 10522                           ; BSR set to: 0
 10523                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 10524   002F16  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10525   002F18  6ED9               	movwf	fsr2l,c
 10526   002F1A  6ADA               	clrf	fsr2h,c
 10527   002F1C  2ADE               	incf	postinc2,f,c
 10528   002F1E  0E00               	movlw	0
 10529   002F20  22DD               	addwfc	postdec2,f,c
 10530   002F22                     
 10531                           ; BSR set to: 0
 10532                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 10533   002F22  C0A3  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 10534   002F26  C0A4  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 10535   002F2A  EC3C  F035         	call	_read_prec_or_width	;wreg free
 10536   002F2E  C001  F0F3         	movff	?_read_prec_or_width,_prec
 10537   002F32  C002  F0F4         	movff	?_read_prec_or_width+1,_prec+1
 10538   002F36                     l7487:
 10539                           
 10540                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 10541   002F36  0100               	movlb	0	; () banked
 10542   002F38  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10543   002F3A  6ED9               	movwf	fsr2l,c
 10544   002F3C  6ADA               	clrf	fsr2h,c
 10545   002F3E  CFDE F0AE          	movff	postinc2,vfpfcnvrt@cp
 10546   002F42  CFDD F0AF          	movff	postdec2,vfpfcnvrt@cp+1
 10547   002F46                     
 10548                           ; BSR set to: 0
 10549                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 10550   002F46  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10551   002F4A  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10552   002F4E                     	if	0	;tblptru may be non-zero
 10553   002F4E                     	endif
 10554   002F4E                     	if	0	;tblptru may be non-zero
 10555   002F4E                     	endif
 10556   002F4E  0008               	tblrd		*
 10557   002F50  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
 10558                           
 10559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 10560   002F54  EFB7  F017         	goto	l7497
 10561   002F58                     l7491:
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1309:     cp++;
 10565   002F58  4BAE               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 10566   002F5A  2BAF               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 10567                           
 10568                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1316:     break;
 10569   002F5C  EFCA  F017         	goto	l7499
 10570   002F60                     l7493:
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 10574   002F60  0E69               	movlw	105
 10575   002F62  6FAD               	movwf	vfpfcnvrt@c& (0+255),b
 10576                           
 10577                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1351:     break;
 10578   002F64  EFCA  F017         	goto	l7499
 10579   002F68                     l1172:
 10580                           
 10581                           ; BSR set to: 0
 10582                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 10583   002F68  6BAD               	clrf	vfpfcnvrt@c& (0+255),b
 10584                           
 10585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1354:     break;
 10586   002F6A  EFCA  F017         	goto	l7499
 10587   002F6E                     l7497:
 10588                           
 10589                           ; BSR set to: 0
 10590   002F6E  51AD               	movf	vfpfcnvrt@c& (0+255),w,b
 10591                           
 10592                           ; Switch size 1, requested type "simple"
 10593                           ; Number of cases is 4, Range of values is 100 to 117
 10594                           ; switch strategies available:
 10595                           ; Name         Instructions Cycles
 10596                           ; simple_byte           13     7 (average)
 10597                           ;	Chosen strategy is simple_byte
 10598   002F70  0A64               	xorlw	100	; case 100
 10599   002F72  B4D8               	btfsc	status,2,c
 10600   002F74  EFB0  F017         	goto	l7493
 10601   002F78  0A0D               	xorlw	13	; case 105
 10602   002F7A  B4D8               	btfsc	status,2,c
 10603   002F7C  EFB0  F017         	goto	l7493
 10604   002F80  0A05               	xorlw	5	; case 108
 10605   002F82  B4D8               	btfsc	status,2,c
 10606   002F84  EFAC  F017         	goto	l7491
 10607   002F88  0A19               	xorlw	25	; case 117
 10608   002F8A  B4D8               	btfsc	status,2,c
 10609   002F8C  EFB0  F017         	goto	l7493
 10610   002F90  EFB4  F017         	goto	l1172
 10611   002F94                     l7499:
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 10615   002F94  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10616   002F98  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10617   002F9C                     	if	0	;tblptru may be non-zero
 10618   002F9C                     	endif
 10619   002F9C                     	if	0	;tblptru may be non-zero
 10620   002F9C                     	endif
 10621   002F9C  0008               	tblrd		*
 10622   002F9E  50F5               	movf	tablat,w,c
 10623   002FA0  0A64               	xorlw	100
 10624   002FA2  B4D8               	btfsc	status,2,c
 10625   002FA4  EFD6  F017         	goto	u9541
 10626   002FA8  EFD8  F017         	goto	u9540
 10627   002FAC                     u9541:
 10628   002FAC  EF0F  F018         	goto	l7509
 10629   002FB0                     u9540:
 10630   002FB0                     
 10631                           ; BSR set to: 0
 10632   002FB0  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10633   002FB4  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10634   002FB8                     	if	0	;tblptru may be non-zero
 10635   002FB8                     	endif
 10636   002FB8                     	if	0	;tblptru may be non-zero
 10637   002FB8                     	endif
 10638   002FB8  0008               	tblrd		*
 10639   002FBA  50F5               	movf	tablat,w,c
 10640   002FBC  0A69               	xorlw	105
 10641   002FBE  A4D8               	btfss	status,2,c
 10642   002FC0  EFE4  F017         	goto	u9551
 10643   002FC4  EFE6  F017         	goto	u9550
 10644   002FC8                     u9551:
 10645   002FC8  EF35  F018         	goto	l7517
 10646   002FCC                     u9550:
 10647   002FCC  EF0F  F018         	goto	l7509
 10648   002FD0                     l7503:
 10649                           
 10650                           ; BSR set to: 0
 10651                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 10652   002FD0  C0A4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10653   002FD4  C0A5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10654   002FD8  50DF               	movf	indf2,w,c
 10655   002FDA  2ADF               	incf	indf2,f,c
 10656   002FDC  2ADF               	incf	indf2,f,c
 10657   002FDE  6ED9               	movwf	fsr2l,c
 10658   002FE0  6ADA               	clrf	fsr2h,c
 10659   002FE2  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
 10660   002FE6  CFDD F0AA          	movff	postdec2,vfpfcnvrt@convarg+1
 10661   002FEA  0E00               	movlw	0
 10662   002FEC  BFAA               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
 10663   002FEE  0EFF               	movlw	-1
 10664   002FF0  6FAB               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
 10665   002FF2  6FAC               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
 10666                           
 10667                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1366:      break;
 10668   002FF4  EF1A  F018         	goto	l7511
 10669   002FF8                     l7505:
 10670                           
 10671                           ; BSR set to: 0
 10672                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 10673   002FF8  C0A4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10674   002FFC  C0A5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10675   003000  0E04               	movlw	4
 10676   003002  26DF               	addwf	indf2,f,c
 10677   003004  5CDF               	subwf	indf2,w,c
 10678   003006  6ED9               	movwf	fsr2l,c
 10679   003008  6ADA               	clrf	fsr2h,c
 10680   00300A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
 10681   00300E  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+1
 10682   003012  CFDE F0AB          	movff	postinc2,vfpfcnvrt@convarg+2
 10683   003016  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg+3
 10684                           
 10685                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1380:      break;
 10686   00301A  EF1A  F018         	goto	l7511
 10687   00301E                     l7509:
 10688                           
 10689                           ; BSR set to: 0
 10690   00301E  51AD               	movf	vfpfcnvrt@c& (0+255),w,b
 10691                           
 10692                           ; Switch size 1, requested type "simple"
 10693                           ; Number of cases is 2, Range of values is 105 to 108
 10694                           ; switch strategies available:
 10695                           ; Name         Instructions Cycles
 10696                           ; simple_byte            7     4 (average)
 10697                           ;	Chosen strategy is simple_byte
 10698   003020  0A69               	xorlw	105	; case 105
 10699   003022  B4D8               	btfsc	status,2,c
 10700   003024  EFE8  F017         	goto	l7503
 10701   003028  0A05               	xorlw	5	; case 108
 10702   00302A  B4D8               	btfsc	status,2,c
 10703   00302C  EFFC  F017         	goto	l7505
 10704   003030  EF1A  F018         	goto	l7511
 10705   003034                     l7511:
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10709   003034  0E01               	movlw	1
 10710   003036  25AE               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10711   003038  6FA6               	movwf	??_vfpfcnvrt& (0+255),b
 10712   00303A  0E00               	movlw	0
 10713   00303C  21AF               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10714   00303E  6FA7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10715   003040  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10716   003042  6ED9               	movwf	fsr2l,c
 10717   003044  6ADA               	clrf	fsr2h,c
 10718   003046  C0A6  FFDE         	movff	??_vfpfcnvrt,postinc2
 10719   00304A  C0A7  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10720   00304E                     
 10721                           ; BSR set to: 0
 10722                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 10723   00304E  C0A2  F017         	movff	vfpfcnvrt@fp,dtoa@fp
 10724   003052  C0A9  F018         	movff	vfpfcnvrt@convarg,dtoa@d
 10725   003056  C0AA  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 10726   00305A  C0AB  F01A         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 10727   00305E  C0AC  F01B         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 10728   003062  EC40  F02B         	call	_dtoa	;wreg free
 10729   003066  EFDD  F019         	goto	l1180
 10730   00306A                     l7517:
 10731                           
 10732                           ; BSR set to: 0
 10733   00306A  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10734   00306E  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10735   003072                     	if	0	;tblptru may be non-zero
 10736   003072                     	endif
 10737   003072                     	if	0	;tblptru may be non-zero
 10738   003072                     	endif
 10739   003072  0008               	tblrd		*
 10740   003074  50F5               	movf	tablat,w,c
 10741   003076  0A75               	xorlw	117
 10742   003078  A4D8               	btfss	status,2,c
 10743   00307A  EF41  F018         	goto	u9561
 10744   00307E  EF43  F018         	goto	u9560
 10745   003082                     u9561:
 10746   003082  EFA1  F018         	goto	l1181
 10747   003086                     u9560:
 10748   003086  EF6D  F018         	goto	l7525
 10749   00308A                     l7519:
 10750                           
 10751                           ; BSR set to: 0
 10752                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 10753   00308A  C0A4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10754   00308E  C0A5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10755   003092  50DF               	movf	indf2,w,c
 10756   003094  2ADF               	incf	indf2,f,c
 10757   003096  2ADF               	incf	indf2,f,c
 10758   003098  6ED9               	movwf	fsr2l,c
 10759   00309A  6ADA               	clrf	fsr2h,c
 10760   00309C  CFDE F0A6          	movff	postinc2,??_vfpfcnvrt
 10761   0030A0  CFDD F0A7          	movff	postdec2,??_vfpfcnvrt+1
 10762   0030A4  C0A6  F0A9         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
 10763   0030A8  C0A7  F0AA         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
 10764   0030AC  6BAB               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 10765   0030AE  6BAC               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 10766                           
 10767                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1457:      break;
 10768   0030B0  EF78  F018         	goto	l7527
 10769   0030B4                     l7521:
 10770                           
 10771                           ; BSR set to: 0
 10772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 10773   0030B4  C0A4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10774   0030B8  C0A5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10775   0030BC  0E04               	movlw	4
 10776   0030BE  26DF               	addwf	indf2,f,c
 10777   0030C0  5CDF               	subwf	indf2,w,c
 10778   0030C2  6ED9               	movwf	fsr2l,c
 10779   0030C4  6ADA               	clrf	fsr2h,c
 10780   0030C6  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
 10781   0030CA  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+1
 10782   0030CE  CFDE F0AB          	movff	postinc2,vfpfcnvrt@convarg+2
 10783   0030D2  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg+3
 10784                           
 10785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1471:      break;
 10786   0030D6  EF78  F018         	goto	l7527
 10787   0030DA                     l7525:
 10788                           
 10789                           ; BSR set to: 0
 10790   0030DA  51AD               	movf	vfpfcnvrt@c& (0+255),w,b
 10791                           
 10792                           ; Switch size 1, requested type "simple"
 10793                           ; Number of cases is 2, Range of values is 105 to 108
 10794                           ; switch strategies available:
 10795                           ; Name         Instructions Cycles
 10796                           ; simple_byte            7     4 (average)
 10797                           ;	Chosen strategy is simple_byte
 10798   0030DC  0A69               	xorlw	105	; case 105
 10799   0030DE  B4D8               	btfsc	status,2,c
 10800   0030E0  EF45  F018         	goto	l7519
 10801   0030E4  0A05               	xorlw	5	; case 108
 10802   0030E6  B4D8               	btfsc	status,2,c
 10803   0030E8  EF5A  F018         	goto	l7521
 10804   0030EC  EF78  F018         	goto	l7527
 10805   0030F0                     l7527:
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 10809   0030F0  0E01               	movlw	1
 10810   0030F2  25AE               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10811   0030F4  6FA6               	movwf	??_vfpfcnvrt& (0+255),b
 10812   0030F6  0E00               	movlw	0
 10813   0030F8  21AF               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10814   0030FA  6FA7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10815   0030FC  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10816   0030FE  6ED9               	movwf	fsr2l,c
 10817   003100  6ADA               	clrf	fsr2h,c
 10818   003102  C0A6  FFDE         	movff	??_vfpfcnvrt,postinc2
 10819   003106  C0A7  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 10820                           
 10821                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 10822   00310A  EF95  F018         	goto	l7535
 10823   00310E                     l7529:
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 10827   00310E  C0A2  F017         	movff	vfpfcnvrt@fp,utoa@fp
 10828   003112  C0A9  F018         	movff	vfpfcnvrt@convarg,utoa@d
 10829   003116  C0AA  F019         	movff	vfpfcnvrt@convarg+1,utoa@d+1
 10830   00311A  C0AB  F01A         	movff	vfpfcnvrt@convarg+2,utoa@d+2
 10831   00311E  C0AC  F01B         	movff	vfpfcnvrt@convarg+3,utoa@d+3
 10832   003122  EC26  F030         	call	_utoa	;wreg free
 10833   003126  EFDD  F019         	goto	l1180
 10834   00312A                     l7535:
 10835                           
 10836                           ; BSR set to: 0
 10837   00312A  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10838   00312E  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 10839   003132                     	if	0	;tblptru may be non-zero
 10840   003132                     	endif
 10841   003132                     	if	0	;tblptru may be non-zero
 10842   003132                     	endif
 10843   003132  0008               	tblrd		*
 10844   003134  50F5               	movf	tablat,w,c
 10845                           
 10846                           ; Switch size 1, requested type "simple"
 10847                           ; Number of cases is 1, Range of values is 117 to 117
 10848                           ; switch strategies available:
 10849                           ; Name         Instructions Cycles
 10850                           ; simple_byte            4     3 (average)
 10851                           ;	Chosen strategy is simple_byte
 10852   003136  0A75               	xorlw	117	; case 117
 10853   003138  B4D8               	btfsc	status,2,c
 10854   00313A  EF87  F018         	goto	l7529
 10855   00313E  EFA1  F018         	goto	l1181
 10856   003142                     l1181:
 10857                           
 10858                           ; BSR set to: 0
 10859                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 10860   003142  6BA8               	clrf	vfpfcnvrt@done& (0+255),b
 10861   003144                     
 10862                           ; BSR set to: 0
 10863                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 10864   003144  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10865   003146  6ED9               	movwf	fsr2l,c
 10866   003148  6ADA               	clrf	fsr2h,c
 10867   00314A  CFDE FFF6          	movff	postinc2,tblptrl
 10868   00314E  CFDD FFF7          	movff	postdec2,tblptrh
 10869   003152                     	if	0	;tblptru may be non-zero
 10870   003152                     	endif
 10871   003152                     	if	0	;tblptru may be non-zero
 10872   003152                     	endif
 10873   003152  0008               	tblrd		*
 10874   003154  50F5               	movf	tablat,w,c
 10875   003156  0A73               	xorlw	115
 10876   003158  A4D8               	btfss	status,2,c
 10877   00315A  EFB1  F018         	goto	u9571
 10878   00315E  EFB3  F018         	goto	u9570
 10879   003162                     u9571:
 10880   003162  EFBD  F018         	goto	l7543
 10881   003166                     u9570:
 10882   003166                     
 10883                           ; BSR set to: 0
 10884                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 10885   003166  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10886   003168  6ED9               	movwf	fsr2l,c
 10887   00316A  6ADA               	clrf	fsr2h,c
 10888   00316C  2ADE               	incf	postinc2,f,c
 10889   00316E  0E00               	movlw	0
 10890   003170  22DD               	addwfc	postdec2,f,c
 10891   003172                     l7541:
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 10895   003172  0E01               	movlw	1
 10896   003174  6FA8               	movwf	vfpfcnvrt@done& (0+255),b
 10897                           
 10898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1660:   }
 10899   003176  EF09  F019         	goto	l7553
 10900   00317A                     l7543:
 10901                           
 10902                           ; BSR set to: 0
 10903   00317A  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10904   00317C  6ED9               	movwf	fsr2l,c
 10905   00317E  6ADA               	clrf	fsr2h,c
 10906   003180  CFDE FFF6          	movff	postinc2,tblptrl
 10907   003184  CFDD FFF7          	movff	postdec2,tblptrh
 10908   003188                     	if	0	;tblptru may be non-zero
 10909   003188                     	endif
 10910   003188                     	if	0	;tblptru may be non-zero
 10911   003188                     	endif
 10912   003188  0008               	tblrd		*
 10913   00318A  50F5               	movf	tablat,w,c
 10914   00318C  0A6C               	xorlw	108
 10915   00318E  A4D8               	btfss	status,2,c
 10916   003190  EFCC  F018         	goto	u9581
 10917   003194  EFCE  F018         	goto	u9580
 10918   003198                     u9581:
 10919   003198  EF09  F019         	goto	l7553
 10920   00319C                     u9580:
 10921   00319C                     
 10922                           ; BSR set to: 0
 10923   00319C  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10924   00319E  6ED9               	movwf	fsr2l,c
 10925   0031A0  6ADA               	clrf	fsr2h,c
 10926   0031A2  CFDE F0A6          	movff	postinc2,??_vfpfcnvrt
 10927   0031A6  CFDD F0A7          	movff	postdec2,??_vfpfcnvrt+1
 10928   0031AA  0E01               	movlw	1
 10929   0031AC  27A6               	addwf	??_vfpfcnvrt& (0+255),f,b
 10930   0031AE  0E00               	movlw	0
 10931   0031B0  23A7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10932   0031B2  C0A6  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10933   0031B6  C0A7  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10934   0031BA                     	if	0	;tblptru may be non-zero
 10935   0031BA                     	endif
 10936   0031BA                     	if	0	;tblptru may be non-zero
 10937   0031BA                     	endif
 10938   0031BA  0008               	tblrd		*
 10939   0031BC  50F5               	movf	tablat,w,c
 10940   0031BE  0A6C               	xorlw	108
 10941   0031C0  A4D8               	btfss	status,2,c
 10942   0031C2  EFE5  F018         	goto	u9591
 10943   0031C6  EFE7  F018         	goto	u9590
 10944   0031CA                     u9591:
 10945   0031CA  EF09  F019         	goto	l7553
 10946   0031CE                     u9590:
 10947   0031CE                     
 10948                           ; BSR set to: 0
 10949   0031CE  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10950   0031D0  6ED9               	movwf	fsr2l,c
 10951   0031D2  6ADA               	clrf	fsr2h,c
 10952   0031D4  CFDE F0A6          	movff	postinc2,??_vfpfcnvrt
 10953   0031D8  CFDD F0A7          	movff	postdec2,??_vfpfcnvrt+1
 10954   0031DC  0E02               	movlw	2
 10955   0031DE  27A6               	addwf	??_vfpfcnvrt& (0+255),f,b
 10956   0031E0  0E00               	movlw	0
 10957   0031E2  23A7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10958   0031E4  C0A6  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10959   0031E8  C0A7  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10960   0031EC                     	if	0	;tblptru may be non-zero
 10961   0031EC                     	endif
 10962   0031EC                     	if	0	;tblptru may be non-zero
 10963   0031EC                     	endif
 10964   0031EC  0008               	tblrd		*
 10965   0031EE  50F5               	movf	tablat,w,c
 10966   0031F0  0A73               	xorlw	115
 10967   0031F2  A4D8               	btfss	status,2,c
 10968   0031F4  EFFE  F018         	goto	u9601
 10969   0031F8  EF00  F019         	goto	u9600
 10970   0031FC                     u9601:
 10971   0031FC  EF09  F019         	goto	l7553
 10972   003200                     u9600:
 10973   003200                     
 10974                           ; BSR set to: 0
 10975                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 10976   003200  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 10977   003202  6ED9               	movwf	fsr2l,c
 10978   003204  6ADA               	clrf	fsr2h,c
 10979   003206  0E03               	movlw	3
 10980   003208  26DE               	addwf	postinc2,f,c
 10981   00320A  0E00               	movlw	0
 10982   00320C  22DD               	addwfc	postdec2,f,c
 10983   00320E  EFB9  F018         	goto	l7541
 10984   003212                     l7553:
 10985                           
 10986                           ; BSR set to: 0
 10987                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 10988   003212  51A8               	movf	vfpfcnvrt@done& (0+255),w,b
 10989   003214  B4D8               	btfsc	status,2,c
 10990   003216  EF0F  F019         	goto	u9611
 10991   00321A  EF11  F019         	goto	u9610
 10992   00321E                     u9611:
 10993   00321E  EF24  F019         	goto	l7559
 10994   003222                     u9610:
 10995   003222                     
 10996                           ; BSR set to: 0
 10997                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 10998   003222  C0A2  F009         	movff	vfpfcnvrt@fp,stoa@fp
 10999   003226  C0A4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11000   00322A  C0A5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11001   00322E  0E02               	movlw	2
 11002   003230  26DF               	addwf	indf2,f,c
 11003   003232  5CDF               	subwf	indf2,w,c
 11004   003234  6ED9               	movwf	fsr2l,c
 11005   003236  6ADA               	clrf	fsr2h,c
 11006   003238  CFDE F00A          	movff	postinc2,stoa@s
 11007   00323C  CFDE F00B          	movff	postinc2,stoa@s+1
 11008   003240  EC3C  F032         	call	_stoa	;wreg free
 11009   003244  EFDD  F019         	goto	l1180
 11010   003248                     l7559:
 11011                           
 11012                           ; BSR set to: 0
 11013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 11014   003248  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 11015   00324A  6ED9               	movwf	fsr2l,c
 11016   00324C  6ADA               	clrf	fsr2h,c
 11017   00324E  CFDE F0AE          	movff	postinc2,vfpfcnvrt@cp
 11018   003252  CFDD F0AF          	movff	postdec2,vfpfcnvrt@cp+1
 11019   003256                     
 11020                           ; BSR set to: 0
 11021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 11022   003256  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 11023   00325A  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 11024   00325E                     	if	0	;tblptru may be non-zero
 11025   00325E                     	endif
 11026   00325E                     	if	0	;tblptru may be non-zero
 11027   00325E                     	endif
 11028   00325E  0008               	tblrd		*
 11029   003260  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
 11030                           
 11031                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 11032   003264  EF3F  F019         	goto	l7569
 11033   003268                     l7563:
 11034                           
 11035                           ; BSR set to: 0
 11036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 11037   003268  4BAE               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 11038   00326A  2BAF               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 11039                           
 11040                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
 11041   00326C  EF4E  F019         	goto	l7571
 11042   003270                     l7565:
 11043                           
 11044                           ; BSR set to: 0
 11045                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 11046   003270  0E6C               	movlw	108
 11047   003272  6FAD               	movwf	vfpfcnvrt@c& (0+255),b
 11048                           
 11049                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
 11050   003274  EF4E  F019         	goto	l7571
 11051   003278                     l1200:
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 11055   003278  6BAD               	clrf	vfpfcnvrt@c& (0+255),b
 11056                           
 11057                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
 11058   00327A  EF4E  F019         	goto	l7571
 11059   00327E                     l7569:
 11060                           
 11061                           ; BSR set to: 0
 11062   00327E  51AD               	movf	vfpfcnvrt@c& (0+255),w,b
 11063                           
 11064                           ; Switch size 1, requested type "simple"
 11065                           ; Number of cases is 3, Range of values is 76 to 108
 11066                           ; switch strategies available:
 11067                           ; Name         Instructions Cycles
 11068                           ; simple_byte           10     6 (average)
 11069                           ;	Chosen strategy is simple_byte
 11070   003280  0A4C               	xorlw	76	; case 76
 11071   003282  B4D8               	btfsc	status,2,c
 11072   003284  EF34  F019         	goto	l7563
 11073   003288  0A2A               	xorlw	42	; case 102
 11074   00328A  B4D8               	btfsc	status,2,c
 11075   00328C  EF38  F019         	goto	l7565
 11076   003290  0A0A               	xorlw	10	; case 108
 11077   003292  B4D8               	btfsc	status,2,c
 11078   003294  EF34  F019         	goto	l7563
 11079   003298  EF3C  F019         	goto	l1200
 11080   00329C                     l7571:
 11081                           
 11082                           ; BSR set to: 0
 11083   00329C  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 11084   0032A0  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 11085   0032A4                     	if	0	;tblptru may be non-zero
 11086   0032A4                     	endif
 11087   0032A4                     	if	0	;tblptru may be non-zero
 11088   0032A4                     	endif
 11089   0032A4  0008               	tblrd		*
 11090   0032A6  50F5               	movf	tablat,w,c
 11091   0032A8  0A66               	xorlw	102
 11092   0032AA  A4D8               	btfss	status,2,c
 11093   0032AC  EF5A  F019         	goto	u9621
 11094   0032B0  EF5C  F019         	goto	u9620
 11095   0032B4                     u9621:
 11096   0032B4  EFC3  F019         	goto	l7591
 11097   0032B8                     u9620:
 11098   0032B8  EF88  F019         	goto	l7579
 11099   0032BC                     l7573:
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 11103   0032BC  C0A4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11104   0032C0  C0A5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11105   0032C4  CFDF F0A6          	movff	indf2,??_vfpfcnvrt
 11106   0032C8  0E04               	movlw	4
 11107   0032CA  26DF               	addwf	indf2,f,c
 11108   0032CC  51A6               	movf	??_vfpfcnvrt& (0+255),w,b
 11109   0032CE  6ED9               	movwf	fsr2l,c
 11110   0032D0  6ADA               	clrf	fsr2h,c
 11111   0032D2  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
 11112   0032D6  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+1
 11113   0032DA  CFDE F0AB          	movff	postinc2,vfpfcnvrt@convarg+2
 11114   0032DE  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg+3
 11115                           
 11116                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
 11117   0032E2  EF93  F019         	goto	l7581
 11118   0032E6                     l7575:
 11119                           
 11120                           ; BSR set to: 0
 11121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 11122   0032E6  C0A4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11123   0032EA  C0A5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11124   0032EE  CFDF F0A6          	movff	indf2,??_vfpfcnvrt
 11125   0032F2  0E04               	movlw	4
 11126   0032F4  26DF               	addwf	indf2,f,c
 11127   0032F6  51A6               	movf	??_vfpfcnvrt& (0+255),w,b
 11128   0032F8  6ED9               	movwf	fsr2l,c
 11129   0032FA  6ADA               	clrf	fsr2h,c
 11130   0032FC  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
 11131   003300  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+1
 11132   003304  CFDE F0AB          	movff	postinc2,vfpfcnvrt@convarg+2
 11133   003308  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg+3
 11134                           
 11135                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
 11136   00330C  EF93  F019         	goto	l7581
 11137   003310                     l7579:
 11138                           
 11139                           ; BSR set to: 0
 11140   003310  51AD               	movf	vfpfcnvrt@c& (0+255),w,b
 11141                           
 11142                           ; Switch size 1, requested type "simple"
 11143                           ; Number of cases is 2, Range of values is 76 to 108
 11144                           ; switch strategies available:
 11145                           ; Name         Instructions Cycles
 11146                           ; simple_byte            7     4 (average)
 11147                           ;	Chosen strategy is simple_byte
 11148   003312  0A4C               	xorlw	76	; case 76
 11149   003314  B4D8               	btfsc	status,2,c
 11150   003316  EF73  F019         	goto	l7575
 11151   00331A  0A20               	xorlw	32	; case 108
 11152   00331C  B4D8               	btfsc	status,2,c
 11153   00331E  EF5E  F019         	goto	l7573
 11154   003322  EF93  F019         	goto	l7581
 11155   003326                     l7581:
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 11159   003326  0E01               	movlw	1
 11160   003328  25AE               	addwf	vfpfcnvrt@cp& (0+255),w,b
 11161   00332A  6FA6               	movwf	??_vfpfcnvrt& (0+255),b
 11162   00332C  0E00               	movlw	0
 11163   00332E  21AF               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 11164   003330  6FA7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 11165   003332  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 11166   003334  6ED9               	movwf	fsr2l,c
 11167   003336  6ADA               	clrf	fsr2h,c
 11168   003338  C0A6  FFDE         	movff	??_vfpfcnvrt,postinc2
 11169   00333C  C0A7  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 11170                           
 11171                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 11172   003340  EFB7  F019         	goto	l7589
 11173   003344                     l7583:
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 11177   003344  C0A2  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
 11178   003348  C0A9  F071         	movff	vfpfcnvrt@convarg,efgtoa@f
 11179   00334C  C0AA  F072         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 11180   003350  C0AB  F073         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 11181   003354  C0AC  F074         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 11182   003358  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 11183   00335C  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 11184   003360                     	if	0	;tblptru may be non-zero
 11185   003360                     	endif
 11186   003360                     	if	0	;tblptru may be non-zero
 11187   003360                     	endif
 11188   003360  0008               	tblrd		*
 11189   003362  CFF5 F075          	movff	tablat,efgtoa@c
 11190   003366  EC62  F012         	call	_efgtoa	;wreg free
 11191   00336A  EFDD  F019         	goto	l1180
 11192   00336E                     l7589:
 11193                           
 11194                           ; BSR set to: 0
 11195   00336E  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 11196   003372  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 11197   003376                     	if	0	;tblptru may be non-zero
 11198   003376                     	endif
 11199   003376                     	if	0	;tblptru may be non-zero
 11200   003376                     	endif
 11201   003376  0008               	tblrd		*
 11202   003378  50F5               	movf	tablat,w,c
 11203                           
 11204                           ; Switch size 1, requested type "simple"
 11205                           ; Number of cases is 1, Range of values is 102 to 102
 11206                           ; switch strategies available:
 11207                           ; Name         Instructions Cycles
 11208                           ; simple_byte            4     3 (average)
 11209                           ;	Chosen strategy is simple_byte
 11210   00337A  0A66               	xorlw	102	; case 102
 11211   00337C  B4D8               	btfsc	status,2,c
 11212   00337E  EFA2  F019         	goto	l7583
 11213   003382  EFC3  F019         	goto	l7591
 11214   003386                     l7591:
 11215                           
 11216                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 11217   003386  0100               	movlb	0	; () banked
 11218   003388  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 11219   00338A  6ED9               	movwf	fsr2l,c
 11220   00338C  6ADA               	clrf	fsr2h,c
 11221   00338E  2ADE               	incf	postinc2,f,c
 11222   003390  0E00               	movlw	0
 11223   003392  22DD               	addwfc	postdec2,f,c
 11224   003394  EFDD  F019         	goto	l1180
 11225   003398                     l7595:
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 11229   003398  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
 11230   00339A  6ED9               	movwf	fsr2l,c
 11231   00339C  6ADA               	clrf	fsr2h,c
 11232   00339E  CFDE FFF6          	movff	postinc2,tblptrl
 11233   0033A2  CFDD FFF7          	movff	postdec2,tblptrh
 11234   0033A6                     	if	0	;tblptru may be non-zero
 11235   0033A6                     	endif
 11236   0033A6                     	if	0	;tblptru may be non-zero
 11237   0033A6                     	endif
 11238   0033A6  0008               	tblrd		*
 11239   0033A8  50F5               	movf	tablat,w,c
 11240   0033AA  6E01               	movwf	fputc@c^0,c
 11241   0033AC  6A02               	clrf	(fputc@c+1)^0,c
 11242   0033AE  C0A2  F003         	movff	vfpfcnvrt@fp,fputc@fp
 11243   0033B2  EC88  F034         	call	_fputc	;wreg free
 11244   0033B6  EFC3  F019         	goto	l7591
 11245   0033BA                     l1180:
 11246   0033BA  0012               	return		;funcret
 11247   0033BC                     __end_of_vfpfcnvrt:
 11248                           	callstack 0
 11249                           
 11250 ;; *************** function _utoa *****************
 11251 ;; Defined at:
 11252 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 11255 ;;		 -> sprintf@f(11), 
 11256 ;;  d               4   23[COMRAM] unsigned long 
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;  i               2   31[COMRAM] int 
 11259 ;;  p               2   29[COMRAM] int 
 11260 ;;  w               2   27[COMRAM] int 
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  1    wreg      void 
 11263 ;; Registers used:
 11264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11265 ;; Tracked objects:
 11266 ;;		On entry : 0/0
 11267 ;;		On exit  : 0/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11270 ;;      Params:         5       0       0       0       0       0       0       0       0
 11271 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11272 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11273 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11274 ;;Total ram usage:       11 bytes
 11275 ;; Hardware stack levels used: 1
 11276 ;; Hardware stack levels required when called: 5
 11277 ;; This function calls:
 11278 ;;		___lldiv
 11279 ;;		___llmod
 11280 ;;		_pad
 11281 ;; This function is called by:
 11282 ;;		_vfpfcnvrt
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           	psect	text25
 11287   00604C                     __ptext25:
 11288                           	callstack 0
 11289   00604C                     _utoa:
 11290                           	callstack 20
 11291   00604C                     
 11292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
 11293   00604C  0100               	movlb	0	; () banked
 11294   00604E  BFF4               	btfsc	(_prec+1)& (0+255),7,b
 11295   006050  EF2E  F030         	goto	u9460
 11296   006054  EF2C  F030         	goto	u9461
 11297   006058                     u9461:
 11298   006058  EF34  F030         	goto	l1145
 11299   00605C                     u9460:
 11300   00605C                     
 11301                           ; BSR set to: 0
 11302   00605C  0E00               	movlw	0
 11303   00605E  6E1F               	movwf	(utoa@p+1)^0,c
 11304   006060  0E01               	movlw	1
 11305   006062  6E1E               	movwf	utoa@p^0,c
 11306   006064  EF38  F030         	goto	l1147
 11307   006068                     l1145:
 11308                           
 11309                           ; BSR set to: 0
 11310   006068  C0F3  F01E         	movff	_prec,utoa@p
 11311   00606C  C0F4  F01F         	movff	_prec+1,utoa@p+1
 11312   006070                     l1147:
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 11316   006070  C1EE  F01C         	movff	_width,utoa@w
 11317   006074  C1EF  F01D         	movff	_width+1,utoa@w+1
 11318   006078                     
 11319                           ; BSR set to: 0
 11320                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 11321   006078  0E00               	movlw	0
 11322   00607A  6E21               	movwf	(utoa@i+1)^0,c
 11323   00607C  0E4F               	movlw	79
 11324   00607E  6E20               	movwf	utoa@i^0,c
 11325   006080                     
 11326                           ; BSR set to: 0
 11327                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 11328   006080  0102               	movlb	2	; () banked
 11329   006082  6BB4               	clrf	(_dbuf+79)& (0+255),b
 11330                           
 11331                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 11332   006084  EF82  F030         	goto	l7449
 11333   006088                     l7439:
 11334                           
 11335                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 11336   006088  0620               	decf	utoa@i^0,f,c
 11337   00608A  A0D8               	btfss	status,0,c
 11338   00608C  0621               	decf	(utoa@i+1)^0,f,c
 11339   00608E                     
 11340                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 11341   00608E  0E65               	movlw	low _dbuf
 11342   006090  2420               	addwf	utoa@i^0,w,c
 11343   006092  6ED9               	movwf	fsr2l,c
 11344   006094  0E02               	movlw	high _dbuf
 11345   006096  2021               	addwfc	(utoa@i+1)^0,w,c
 11346   006098  6EDA               	movwf	fsr2h,c
 11347   00609A  C018  F001         	movff	utoa@d,___llmod@dividend
 11348   00609E  C019  F002         	movff	utoa@d+1,___llmod@dividend+1
 11349   0060A2  C01A  F003         	movff	utoa@d+2,___llmod@dividend+2
 11350   0060A6  C01B  F004         	movff	utoa@d+3,___llmod@dividend+3
 11351   0060AA  0E0A               	movlw	10
 11352   0060AC  6E05               	movwf	___llmod@divisor^0,c
 11353   0060AE  0E00               	movlw	0
 11354   0060B0  6E06               	movwf	(___llmod@divisor+1)^0,c
 11355   0060B2  0E00               	movlw	0
 11356   0060B4  6E07               	movwf	(___llmod@divisor+2)^0,c
 11357   0060B6  0E00               	movlw	0
 11358   0060B8  6E08               	movwf	(___llmod@divisor+3)^0,c
 11359   0060BA  EC39  F036         	call	___llmod	;wreg free
 11360   0060BE  5001               	movf	?___llmod^0,w,c
 11361   0060C0  0F30               	addlw	48
 11362   0060C2  6EDF               	movwf	indf2,c
 11363   0060C4                     
 11364                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
 11365   0060C4  061E               	decf	utoa@p^0,f,c
 11366   0060C6  A0D8               	btfss	status,0,c
 11367   0060C8  061F               	decf	(utoa@p+1)^0,f,c
 11368   0060CA                     
 11369                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 11370   0060CA  061C               	decf	utoa@w^0,f,c
 11371   0060CC  A0D8               	btfss	status,0,c
 11372   0060CE  061D               	decf	(utoa@w+1)^0,f,c
 11373   0060D0                     
 11374                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 11375   0060D0  C018  F001         	movff	utoa@d,___lldiv@dividend
 11376   0060D4  C019  F002         	movff	utoa@d+1,___lldiv@dividend+1
 11377   0060D8  C01A  F003         	movff	utoa@d+2,___lldiv@dividend+2
 11378   0060DC  C01B  F004         	movff	utoa@d+3,___lldiv@dividend+3
 11379   0060E0  0E0A               	movlw	10
 11380   0060E2  6E05               	movwf	___lldiv@divisor^0,c
 11381   0060E4  0E00               	movlw	0
 11382   0060E6  6E06               	movwf	(___lldiv@divisor+1)^0,c
 11383   0060E8  0E00               	movlw	0
 11384   0060EA  6E07               	movwf	(___lldiv@divisor+2)^0,c
 11385   0060EC  0E00               	movlw	0
 11386   0060EE  6E08               	movwf	(___lldiv@divisor+3)^0,c
 11387   0060F0  ECE7  F035         	call	___lldiv	;wreg free
 11388   0060F4  C001  F018         	movff	?___lldiv,utoa@d
 11389   0060F8  C002  F019         	movff	?___lldiv+1,utoa@d+1
 11390   0060FC  C003  F01A         	movff	?___lldiv+2,utoa@d+2
 11391   006100  C004  F01B         	movff	?___lldiv+3,utoa@d+3
 11392   006104                     l7449:
 11393                           
 11394                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 11395   006104  5020               	movf	utoa@i^0,w,c
 11396   006106  1021               	iorwf	(utoa@i+1)^0,w,c
 11397   006108  B4D8               	btfsc	status,2,c
 11398   00610A  EF89  F030         	goto	u9471
 11399   00610E  EF8B  F030         	goto	u9470
 11400   006112                     u9471:
 11401   006112  EFA3  F030         	goto	l7455
 11402   006116                     u9470:
 11403   006116  5018               	movf	utoa@d^0,w,c
 11404   006118  1019               	iorwf	(utoa@d+1)^0,w,c
 11405   00611A  101A               	iorwf	(utoa@d+2)^0,w,c
 11406   00611C  101B               	iorwf	(utoa@d+3)^0,w,c
 11407   00611E  A4D8               	btfss	status,2,c
 11408   006120  EF94  F030         	goto	u9481
 11409   006124  EF96  F030         	goto	u9480
 11410   006128                     u9481:
 11411   006128  EF44  F030         	goto	l7439
 11412   00612C                     u9480:
 11413   00612C  BE1F               	btfsc	(utoa@p+1)^0,7,c
 11414   00612E  EFA3  F030         	goto	u9490
 11415   006132  501F               	movf	(utoa@p+1)^0,w,c
 11416   006134  E106               	bnz	u9491
 11417   006136  041E               	decf	utoa@p^0,w,c
 11418   006138  B0D8               	btfsc	status,0,c
 11419   00613A  EFA1  F030         	goto	u9491
 11420   00613E  EFA3  F030         	goto	u9490
 11421   006142                     u9491:
 11422   006142  EF44  F030         	goto	l7439
 11423   006146                     u9490:
 11424   006146                     l7455:
 11425                           
 11426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 11427   006146  C017  F00F         	movff	utoa@fp,pad@fp
 11428   00614A  0E65               	movlw	low _dbuf
 11429   00614C  2420               	addwf	utoa@i^0,w,c
 11430   00614E  6E10               	movwf	pad@buf^0,c
 11431   006150  0E02               	movlw	high _dbuf
 11432   006152  2021               	addwfc	(utoa@i+1)^0,w,c
 11433   006154  6E11               	movwf	(pad@buf+1)^0,c
 11434   006156  C01C  F012         	movff	utoa@w,pad@p
 11435   00615A  C01D  F013         	movff	utoa@w+1,pad@p+1
 11436   00615E  EC2F  F037         	call	_pad	;wreg free
 11437   006162  0012               	return		;funcret
 11438   006164                     __end_of_utoa:
 11439                           	callstack 0
 11440                           
 11441 ;; *************** function ___llmod *****************
 11442 ;; Defined at:
 11443 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\llmod.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;  dividend        4    0[COMRAM] unsigned long 
 11446 ;;  divisor         4    4[COMRAM] unsigned long 
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;  counter         1    8[COMRAM] unsigned char 
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  4    0[COMRAM] unsigned long 
 11451 ;; Registers used:
 11452 ;;		wreg, status,2, status,0
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11458 ;;      Params:         8       0       0       0       0       0       0       0       0
 11459 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11461 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11462 ;;Total ram usage:        9 bytes
 11463 ;; Hardware stack levels used: 1
 11464 ;; Hardware stack levels required when called: 1
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		_utoa
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text26
 11473   006C72                     __ptext26:
 11474                           	callstack 0
 11475   006C72                     ___llmod:
 11476                           	callstack 23
 11477   006C72  5005               	movf	___llmod@divisor^0,w,c
 11478   006C74  1006               	iorwf	(___llmod@divisor+1)^0,w,c
 11479   006C76  1007               	iorwf	(___llmod@divisor+2)^0,w,c
 11480   006C78  1008               	iorwf	(___llmod@divisor+3)^0,w,c
 11481   006C7A  B4D8               	btfsc	status,2,c
 11482   006C7C  EF42  F036         	goto	u8721
 11483   006C80  EF44  F036         	goto	u8720
 11484   006C84                     u8721:
 11485   006C84  EF74  F036         	goto	l768
 11486   006C88                     u8720:
 11487   006C88  0E01               	movlw	1
 11488   006C8A  6E09               	movwf	___llmod@counter^0,c
 11489   006C8C  EF4E  F036         	goto	l7045
 11490   006C90                     l7043:
 11491   006C90  90D8               	bcf	status,0,c
 11492   006C92  3605               	rlcf	___llmod@divisor^0,f,c
 11493   006C94  3606               	rlcf	(___llmod@divisor+1)^0,f,c
 11494   006C96  3607               	rlcf	(___llmod@divisor+2)^0,f,c
 11495   006C98  3608               	rlcf	(___llmod@divisor+3)^0,f,c
 11496   006C9A  2A09               	incf	___llmod@counter^0,f,c
 11497   006C9C                     l7045:
 11498   006C9C  AE08               	btfss	(___llmod@divisor+3)^0,7,c
 11499   006C9E  EF53  F036         	goto	u8731
 11500   006CA2  EF55  F036         	goto	u8730
 11501   006CA6                     u8731:
 11502   006CA6  EF48  F036         	goto	l7043
 11503   006CAA                     u8730:
 11504   006CAA                     l7047:
 11505   006CAA  5005               	movf	___llmod@divisor^0,w,c
 11506   006CAC  5C01               	subwf	___llmod@dividend^0,w,c
 11507   006CAE  5006               	movf	(___llmod@divisor+1)^0,w,c
 11508   006CB0  5802               	subwfb	(___llmod@dividend+1)^0,w,c
 11509   006CB2  5007               	movf	(___llmod@divisor+2)^0,w,c
 11510   006CB4  5803               	subwfb	(___llmod@dividend+2)^0,w,c
 11511   006CB6  5008               	movf	(___llmod@divisor+3)^0,w,c
 11512   006CB8  5804               	subwfb	(___llmod@dividend+3)^0,w,c
 11513   006CBA  A0D8               	btfss	status,0,c
 11514   006CBC  EF62  F036         	goto	u8741
 11515   006CC0  EF64  F036         	goto	u8740
 11516   006CC4                     u8741:
 11517   006CC4  EF6C  F036         	goto	l7051
 11518   006CC8                     u8740:
 11519   006CC8  5005               	movf	___llmod@divisor^0,w,c
 11520   006CCA  5E01               	subwf	___llmod@dividend^0,f,c
 11521   006CCC  5006               	movf	(___llmod@divisor+1)^0,w,c
 11522   006CCE  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
 11523   006CD0  5007               	movf	(___llmod@divisor+2)^0,w,c
 11524   006CD2  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
 11525   006CD4  5008               	movf	(___llmod@divisor+3)^0,w,c
 11526   006CD6  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
 11527   006CD8                     l7051:
 11528   006CD8  90D8               	bcf	status,0,c
 11529   006CDA  3208               	rrcf	(___llmod@divisor+3)^0,f,c
 11530   006CDC  3207               	rrcf	(___llmod@divisor+2)^0,f,c
 11531   006CDE  3206               	rrcf	(___llmod@divisor+1)^0,f,c
 11532   006CE0  3205               	rrcf	___llmod@divisor^0,f,c
 11533   006CE2  2E09               	decfsz	___llmod@counter^0,f,c
 11534   006CE4  EF55  F036         	goto	l7047
 11535   006CE8                     l768:
 11536   006CE8  C001  F001         	movff	___llmod@dividend,?___llmod
 11537   006CEC  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 11538   006CF0  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 11539   006CF4  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 11540   006CF8  0012               	return		;funcret
 11541   006CFA                     __end_of___llmod:
 11542                           	callstack 0
 11543                           
 11544 ;; *************** function ___lldiv *****************
 11545 ;; Defined at:
 11546 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;  dividend        4    0[COMRAM] unsigned long 
 11549 ;;  divisor         4    4[COMRAM] unsigned long 
 11550 ;; Auto vars:     Size  Location     Type
 11551 ;;  quotient        4    8[COMRAM] unsigned long 
 11552 ;;  counter         1   12[COMRAM] unsigned char 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  4    0[COMRAM] unsigned long 
 11555 ;; Registers used:
 11556 ;;		wreg, status,2, status,0
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11562 ;;      Params:         8       0       0       0       0       0       0       0       0
 11563 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11564 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11565 ;;      Totals:        13       0       0       0       0       0       0       0       0
 11566 ;;Total ram usage:       13 bytes
 11567 ;; Hardware stack levels used: 1
 11568 ;; Hardware stack levels required when called: 1
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_ADC_Read_Average
 11573 ;;		_utoa
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           	psect	text27
 11578   006BCE                     __ptext27:
 11579                           	callstack 0
 11580   006BCE                     ___lldiv:
 11581                           	callstack 23
 11582   006BCE  0E00               	movlw	0
 11583   006BD0  6E09               	movwf	___lldiv@quotient^0,c
 11584   006BD2  0E00               	movlw	0
 11585   006BD4  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 11586   006BD6  0E00               	movlw	0
 11587   006BD8  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 11588   006BDA  0E00               	movlw	0
 11589   006BDC  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 11590   006BDE  5005               	movf	___lldiv@divisor^0,w,c
 11591   006BE0  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 11592   006BE2  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 11593   006BE4  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 11594   006BE6  B4D8               	btfsc	status,2,c
 11595   006BE8  EFF8  F035         	goto	u7991
 11596   006BEC  EFFA  F035         	goto	u7990
 11597   006BF0                     u7991:
 11598   006BF0  EF30  F036         	goto	l375
 11599   006BF4                     u7990:
 11600   006BF4  0E01               	movlw	1
 11601   006BF6  6E0D               	movwf	___lldiv@counter^0,c
 11602   006BF8  EF04  F036         	goto	l6585
 11603   006BFC                     l6583:
 11604   006BFC  90D8               	bcf	status,0,c
 11605   006BFE  3605               	rlcf	___lldiv@divisor^0,f,c
 11606   006C00  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 11607   006C02  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 11608   006C04  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 11609   006C06  2A0D               	incf	___lldiv@counter^0,f,c
 11610   006C08                     l6585:
 11611   006C08  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 11612   006C0A  EF09  F036         	goto	u8001
 11613   006C0E  EF0B  F036         	goto	u8000
 11614   006C12                     u8001:
 11615   006C12  EFFE  F035         	goto	l6583
 11616   006C16                     u8000:
 11617   006C16                     l6587:
 11618   006C16  90D8               	bcf	status,0,c
 11619   006C18  3609               	rlcf	___lldiv@quotient^0,f,c
 11620   006C1A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 11621   006C1C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 11622   006C1E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 11623   006C20  5005               	movf	___lldiv@divisor^0,w,c
 11624   006C22  5C01               	subwf	___lldiv@dividend^0,w,c
 11625   006C24  5006               	movf	(___lldiv@divisor+1)^0,w,c
 11626   006C26  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 11627   006C28  5007               	movf	(___lldiv@divisor+2)^0,w,c
 11628   006C2A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 11629   006C2C  5008               	movf	(___lldiv@divisor+3)^0,w,c
 11630   006C2E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 11631   006C30  A0D8               	btfss	status,0,c
 11632   006C32  EF1D  F036         	goto	u8011
 11633   006C36  EF1F  F036         	goto	u8010
 11634   006C3A                     u8011:
 11635   006C3A  EF28  F036         	goto	l6595
 11636   006C3E                     u8010:
 11637   006C3E  5005               	movf	___lldiv@divisor^0,w,c
 11638   006C40  5E01               	subwf	___lldiv@dividend^0,f,c
 11639   006C42  5006               	movf	(___lldiv@divisor+1)^0,w,c
 11640   006C44  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 11641   006C46  5007               	movf	(___lldiv@divisor+2)^0,w,c
 11642   006C48  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 11643   006C4A  5008               	movf	(___lldiv@divisor+3)^0,w,c
 11644   006C4C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 11645   006C4E  8009               	bsf	___lldiv@quotient^0,0,c
 11646   006C50                     l6595:
 11647   006C50  90D8               	bcf	status,0,c
 11648   006C52  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 11649   006C54  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 11650   006C56  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 11651   006C58  3205               	rrcf	___lldiv@divisor^0,f,c
 11652   006C5A  2E0D               	decfsz	___lldiv@counter^0,f,c
 11653   006C5C  EF0B  F036         	goto	l6587
 11654   006C60                     l375:
 11655   006C60  C009  F001         	movff	___lldiv@quotient,?___lldiv
 11656   006C64  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 11657   006C68  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 11658   006C6C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 11659   006C70  0012               	return		;funcret
 11660   006C72                     __end_of___lldiv:
 11661                           	callstack 0
 11662                           
 11663 ;; *************** function _stoa *****************
 11664 ;; Defined at:
 11665 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
 11668 ;;		 -> sprintf@f(11), 
 11669 ;;  s               2    9[COMRAM] PTR unsigned char 
 11670 ;;		 -> ?_sprintf(2), STR_12(8), STR_11(13), STR_10(9), 
 11671 ;;		 -> STR_9(9), STR_8(1), STR_6(8), STR_5(13), 
 11672 ;;		 -> STR_4(9), STR_3(5), STR_2(5), STR_1(1), 
 11673 ;; Auto vars:     Size  Location     Type
 11674 ;;  l               2   17[COMRAM] int 
 11675 ;;  cp              2   15[COMRAM] PTR unsigned char 
 11676 ;;		 -> STR_21(7), ?_sprintf(2), STR_12(8), STR_11(13), 
 11677 ;;		 -> STR_10(9), STR_9(9), STR_8(1), STR_6(8), 
 11678 ;;		 -> STR_5(13), STR_4(9), STR_3(5), STR_2(5), 
 11679 ;;		 -> STR_1(1), 
 11680 ;;  p               2   13[COMRAM] int 
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  1    wreg      void 
 11683 ;; Registers used:
 11684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 0/0
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11690 ;;      Params:         3       0       0       0       0       0       0       0       0
 11691 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11692 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11693 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11694 ;;Total ram usage:       11 bytes
 11695 ;; Hardware stack levels used: 1
 11696 ;; Hardware stack levels required when called: 3
 11697 ;; This function calls:
 11698 ;;		_fputc
 11699 ;; This function is called by:
 11700 ;;		_vfpfcnvrt
 11701 ;; This function uses a non-reentrant model
 11702 ;;
 11703                           
 11704                           	psect	text28
 11705   006478                     __ptext28:
 11706                           	callstack 0
 11707   006478                     _stoa:
 11708                           	callstack 22
 11709   006478                     
 11710                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 951
      +                          :     cp = s;
 11711   006478  C00A  F010         	movff	stoa@s,stoa@cp
 11712   00647C  C00B  F011         	movff	stoa@s+1,stoa@cp+1
 11713                           
 11714                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 11715   006480  5010               	movf	stoa@cp^0,w,c
 11716   006482  1011               	iorwf	(stoa@cp+1)^0,w,c
 11717   006484  A4D8               	btfss	status,2,c
 11718   006486  EF47  F032         	goto	u9391
 11719   00648A  EF49  F032         	goto	u9390
 11720   00648E                     u9391:
 11721   00648E  EF4D  F032         	goto	l7413
 11722   006492                     u9390:
 11723   006492                     
 11724                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 11725   006492  0EE6               	movlw	low STR_21
 11726   006494  6E10               	movwf	stoa@cp^0,c
 11727   006496  0E7F               	movlw	high STR_21
 11728   006498  6E11               	movwf	(stoa@cp+1)^0,c
 11729   00649A                     l7413:
 11730                           
 11731                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 11732   00649A  0E00               	movlw	0
 11733   00649C  6E13               	movwf	(stoa@l+1)^0,c
 11734   00649E  0E00               	movlw	0
 11735   0064A0  6E12               	movwf	stoa@l^0,c
 11736   0064A2  EF55  F032         	goto	l7417
 11737   0064A6                     l7415:
 11738   0064A6  4A12               	infsnz	stoa@l^0,f,c
 11739   0064A8  2A13               	incf	(stoa@l+1)^0,f,c
 11740   0064AA                     l7417:
 11741   0064AA  5012               	movf	stoa@l^0,w,c
 11742   0064AC  2410               	addwf	stoa@cp^0,w,c
 11743   0064AE  6E0C               	movwf	??_stoa^0,c
 11744   0064B0  5013               	movf	(stoa@l+1)^0,w,c
 11745   0064B2  2011               	addwfc	(stoa@cp+1)^0,w,c
 11746   0064B4  6E0D               	movwf	(??_stoa+1)^0,c
 11747   0064B6  C00C  FFF6         	movff	??_stoa,tblptrl
 11748   0064BA  C00D  FFF7         	movff	??_stoa+1,tblptrh
 11749   0064BE  6AF8               	clrf	tblptru,c
 11750   0064C0  0E07               	movlw	(high __ramtop+-1)
 11751   0064C2  64F7               	cpfsgt	tblptrh,c
 11752   0064C4  D003               	bra	u9407
 11753   0064C6  0008               	tblrd		*
 11754   0064C8  50F5               	movf	tablat,w,c
 11755   0064CA  D005               	bra	u9400
 11756   0064CC                     u9407:
 11757   0064CC  CFF6 FFE1          	movff	tblptrl,fsr1l
 11758   0064D0  CFF7 FFE2          	movff	tblptrh,fsr1h
 11759   0064D4  50E7               	movf	indf1,w,c
 11760   0064D6                     u9400:
 11761   0064D6  0900               	iorlw	0
 11762   0064D8  A4D8               	btfss	status,2,c
 11763   0064DA  EF71  F032         	goto	u9411
 11764   0064DE  EF73  F032         	goto	u9410
 11765   0064E2                     u9411:
 11766   0064E2  EF53  F032         	goto	l7415
 11767   0064E6                     u9410:
 11768   0064E6                     
 11769                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 11770   0064E6  0100               	movlb	0	; () banked
 11771   0064E8  BFF4               	btfsc	(_prec+1)& (0+255),7,b
 11772   0064EA  EF79  F032         	goto	u9421
 11773   0064EE  EF7B  F032         	goto	u9420
 11774   0064F2                     u9421:
 11775   0064F2  EF8E  F032         	goto	l1137
 11776   0064F6                     u9420:
 11777   0064F6                     
 11778                           ; BSR set to: 0
 11779   0064F6  5012               	movf	stoa@l^0,w,c
 11780   0064F8  5DF3               	subwf	_prec& (0+255),w,b
 11781   0064FA  51F4               	movf	(_prec+1)& (0+255),w,b
 11782   0064FC  0A80               	xorlw	128
 11783   0064FE  6E0C               	movwf	??_stoa^0,c
 11784   006500  5013               	movf	(stoa@l+1)^0,w,c
 11785   006502  0A80               	xorlw	128
 11786   006504  580C               	subwfb	??_stoa^0,w,c
 11787   006506  B0D8               	btfsc	status,0,c
 11788   006508  EF88  F032         	goto	u9431
 11789   00650C  EF8A  F032         	goto	u9430
 11790   006510                     u9431:
 11791   006510  EF8E  F032         	goto	l1137
 11792   006514                     u9430:
 11793   006514                     
 11794                           ; BSR set to: 0
 11795                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 11796   006514  C0F3  F012         	movff	_prec,stoa@l
 11797   006518  C0F4  F013         	movff	_prec+1,stoa@l+1
 11798   00651C                     l1137:
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 965:     p = l;
 11802   00651C  C012  F00E         	movff	stoa@l,stoa@p
 11803   006520  C013  F00F         	movff	stoa@l+1,stoa@p+1
 11804                           
 11805                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11806   006524  EFAE  F032         	goto	l7429
 11807   006528                     l7425:
 11808                           
 11809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 11810   006528  C010  FFF6         	movff	stoa@cp,tblptrl
 11811   00652C  C011  FFF7         	movff	stoa@cp+1,tblptrh
 11812   006530  6AF8               	clrf	tblptru,c
 11813   006532  0E07               	movlw	(high __ramtop+-1)
 11814   006534  64F7               	cpfsgt	tblptrh,c
 11815   006536  D003               	bra	u9447
 11816   006538  0008               	tblrd		*
 11817   00653A  50F5               	movf	tablat,w,c
 11818   00653C  D005               	bra	u9440
 11819   00653E                     u9447:
 11820   00653E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11821   006542  CFF7 FFE2          	movff	tblptrh,fsr1h
 11822   006546  50E7               	movf	indf1,w,c
 11823   006548                     u9440:
 11824   006548  6E0C               	movwf	??_stoa^0,c
 11825   00654A  500C               	movf	??_stoa^0,w,c
 11826   00654C  6E01               	movwf	fputc@c^0,c
 11827   00654E  6A02               	clrf	(fputc@c+1)^0,c
 11828   006550  C009  F003         	movff	stoa@fp,fputc@fp
 11829   006554  EC88  F034         	call	_fputc	;wreg free
 11830   006558                     
 11831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 11832   006558  4A10               	infsnz	stoa@cp^0,f,c
 11833   00655A  2A11               	incf	(stoa@cp+1)^0,f,c
 11834   00655C                     l7429:
 11835                           
 11836                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11837   00655C  060E               	decf	stoa@p^0,f,c
 11838   00655E  A0D8               	btfss	status,0,c
 11839   006560  060F               	decf	(stoa@p+1)^0,f,c
 11840   006562  280E               	incf	stoa@p^0,w,c
 11841   006564  E106               	bnz	u9451
 11842   006566  280F               	incf	(stoa@p+1)^0,w,c
 11843   006568  A4D8               	btfss	status,2,c
 11844   00656A  EFB9  F032         	goto	u9451
 11845   00656E  EFBB  F032         	goto	u9450
 11846   006572                     u9451:
 11847   006572  EF94  F032         	goto	l7425
 11848   006576                     u9450:
 11849   006576  0012               	return		;funcret
 11850   006578                     __end_of_stoa:
 11851                           	callstack 0
 11852                           
 11853 ;; *************** function _read_prec_or_width *****************
 11854 ;; Defined at:
 11855 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
 11858 ;;		 -> vfprintf@cfmt(2), 
 11859 ;;  ap              1    1[COMRAM] PTR PTR void [1]
 11860 ;;		 -> sprintf@ap(1), 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;  c               1    4[COMRAM] unsigned char 
 11863 ;;  n               2    5[COMRAM] int 
 11864 ;; Return value:  Size  Location     Type
 11865 ;;                  2    0[COMRAM] int 
 11866 ;; Registers used:
 11867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11873 ;;      Params:         2       0       0       0       0       0       0       0       0
 11874 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11875 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11876 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11877 ;;Total ram usage:        7 bytes
 11878 ;; Hardware stack levels used: 1
 11879 ;; Hardware stack levels required when called: 1
 11880 ;; This function calls:
 11881 ;;		Nothing
 11882 ;; This function is called by:
 11883 ;;		_vfpfcnvrt
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887                           	psect	text29
 11888   006A78                     __ptext29:
 11889                           	callstack 0
 11890   006A78                     _read_prec_or_width:
 11891                           	callstack 24
 11892   006A78                     
 11893                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11894   006A78  0E00               	movlw	0
 11895   006A7A  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11896   006A7C  0E00               	movlw	0
 11897   006A7E  6E06               	movwf	read_prec_or_width@n^0,c
 11898   006A80                     
 11899                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11900   006A80  5001               	movf	read_prec_or_width@fmt^0,w,c
 11901   006A82  6ED9               	movwf	fsr2l,c
 11902   006A84  6ADA               	clrf	fsr2h,c
 11903   006A86  CFDE FFF6          	movff	postinc2,tblptrl
 11904   006A8A  CFDD FFF7          	movff	postdec2,tblptrh
 11905   006A8E                     	if	0	;tblptru may be non-zero
 11906   006A8E                     	endif
 11907   006A8E                     	if	0	;tblptru may be non-zero
 11908   006A8E                     	endif
 11909   006A8E  0008               	tblrd		*
 11910   006A90  50F5               	movf	tablat,w,c
 11911   006A92  0A2A               	xorlw	42
 11912   006A94  A4D8               	btfss	status,2,c
 11913   006A96  EF4F  F035         	goto	u9501
 11914   006A9A  EF51  F035         	goto	u9500
 11915   006A9E                     u9501:
 11916   006A9E  EF7A  F035         	goto	l7471
 11917   006AA2                     u9500:
 11918   006AA2                     
 11919                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11920   006AA2  5001               	movf	read_prec_or_width@fmt^0,w,c
 11921   006AA4  6ED9               	movwf	fsr2l,c
 11922   006AA6  6ADA               	clrf	fsr2h,c
 11923   006AA8  2ADE               	incf	postinc2,f,c
 11924   006AAA  0E00               	movlw	0
 11925   006AAC  22DD               	addwfc	postdec2,f,c
 11926   006AAE                     
 11927                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11928   006AAE  5002               	movf	read_prec_or_width@ap^0,w,c
 11929   006AB0  6ED9               	movwf	fsr2l,c
 11930   006AB2  6ADA               	clrf	fsr2h,c
 11931   006AB4  0E02               	movlw	2
 11932   006AB6  26DF               	addwf	indf2,f,c
 11933   006AB8  5CDF               	subwf	indf2,w,c
 11934   006ABA  6ED9               	movwf	fsr2l,c
 11935   006ABC  6ADA               	clrf	fsr2h,c
 11936   006ABE  CFDE F006          	movff	postinc2,read_prec_or_width@n
 11937   006AC2  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
 11938                           
 11939                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11940   006AC6  EF8D  F035         	goto	l1157
 11941   006ACA                     l7467:
 11942                           
 11943                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11944   006ACA  0E0A               	movlw	10
 11945   006ACC  0206               	mulwf	read_prec_or_width@n^0,c
 11946   006ACE  CFF3 F003          	movff	prodl,??_read_prec_or_width
 11947   006AD2  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
 11948   006AD6  0207               	mulwf	(read_prec_or_width@n+1)^0,c
 11949   006AD8  50F3               	movf	prodl,w,c
 11950   006ADA  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
 11951   006ADC  5005               	movf	read_prec_or_width@c^0,w,c
 11952   006ADE  2403               	addwf	??_read_prec_or_width^0,w,c
 11953   006AE0  6E06               	movwf	read_prec_or_width@n^0,c
 11954   006AE2  0E00               	movlw	0
 11955   006AE4  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
 11956   006AE6  6E07               	movwf	(read_prec_or_width@n+1)^0,c
 11957   006AE8                     
 11958                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11959   006AE8  5001               	movf	read_prec_or_width@fmt^0,w,c
 11960   006AEA  6ED9               	movwf	fsr2l,c
 11961   006AEC  6ADA               	clrf	fsr2h,c
 11962   006AEE  2ADE               	incf	postinc2,f,c
 11963   006AF0  0E00               	movlw	0
 11964   006AF2  22DD               	addwfc	postdec2,f,c
 11965   006AF4                     l7471:
 11966                           
 11967                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11968   006AF4  5001               	movf	read_prec_or_width@fmt^0,w,c
 11969   006AF6  6ED9               	movwf	fsr2l,c
 11970   006AF8  6ADA               	clrf	fsr2h,c
 11971   006AFA  CFDE FFF6          	movff	postinc2,tblptrl
 11972   006AFE  CFDD FFF7          	movff	postdec2,tblptrh
 11973   006B02                     	if	0	;tblptru may be non-zero
 11974   006B02                     	endif
 11975   006B02                     	if	0	;tblptru may be non-zero
 11976   006B02                     	endif
 11977   006B02  0008               	tblrd		*
 11978   006B04  50F5               	movf	tablat,w,c
 11979   006B06  0FD0               	addlw	208
 11980   006B08  6E05               	movwf	read_prec_or_width@c^0,c
 11981   006B0A  0E09               	movlw	9
 11982   006B0C  6405               	cpfsgt	read_prec_or_width@c^0,c
 11983   006B0E  EF8B  F035         	goto	u9511
 11984   006B12  EF8D  F035         	goto	u9510
 11985   006B16                     u9511:
 11986   006B16  EF65  F035         	goto	l7467
 11987   006B1A                     u9510:
 11988   006B1A                     l1157:
 11989                           
 11990                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11991   006B1A  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
 11992   006B1E  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 11993   006B22  0012               	return		;funcret
 11994   006B24                     __end_of_read_prec_or_width:
 11995                           	callstack 0
 11996                           
 11997 ;; *************** function _efgtoa *****************
 11998 ;; Defined at:
 11999 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12000 ;; Parameters:    Size  Location     Type
 12001 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
 12002 ;;		 -> sprintf@f(11), 
 12003 ;;  f               4   17[BANK0 ] PTR struct _IO_FILE
 12004 ;;  c               1   21[BANK0 ] unsigned char 
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;  u               4   62[BANK0 ] struct flui
 12007 ;;  g               4   56[BANK0 ] struct flui
 12008 ;;  l               4   51[BANK0 ] struct flui
 12009 ;;  h               4   47[BANK0 ] struct flui
 12010 ;;  ou              4   41[BANK0 ] struct flui
 12011 ;;  n               2   60[BANK0 ] int 
 12012 ;;  i               2   45[BANK0 ] int 
 12013 ;;  w               2   39[BANK0 ] int 
 12014 ;;  e               2   37[BANK0 ] int 
 12015 ;;  m               2   35[BANK0 ] int 
 12016 ;;  d               2   33[BANK0 ] int 
 12017 ;;  t               2   26[BANK0 ] int 
 12018 ;;  p               2   24[BANK0 ] int 
 12019 ;;  ne              2   22[BANK0 ] int 
 12020 ;;  sign            1   55[BANK0 ] unsigned char 
 12021 ;;  nmode           1   32[BANK0 ] unsigned char 
 12022 ;;  mode            1   31[BANK0 ] unsigned char 
 12023 ;;  pp              1   30[BANK0 ] unsigned char 
 12024 ;;  esign           1    0        unsigned char 
 12025 ;; Return value:  Size  Location     Type
 12026 ;;                  1    wreg      void 
 12027 ;; Registers used:
 12028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12029 ;; Tracked objects:
 12030 ;;		On entry : 0/0
 12031 ;;		On exit  : 0/0
 12032 ;;		Unchanged: 0/0
 12033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12034 ;;      Params:         0       6       0       0       0       0       0       0       0
 12035 ;;      Locals:         0      44       0       0       0       0       0       0       0
 12036 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12037 ;;      Totals:         2      50       0       0       0       0       0       0       0
 12038 ;;Total ram usage:       52 bytes
 12039 ;; Hardware stack levels used: 1
 12040 ;; Hardware stack levels required when called: 5
 12041 ;; This function calls:
 12042 ;;		___fladd
 12043 ;;		___fldiv
 12044 ;;		___fleq
 12045 ;;		___flge
 12046 ;;		___flmul
 12047 ;;		___flneg
 12048 ;;		___flsub
 12049 ;;		___fltol
 12050 ;;		___fpclassifyf
 12051 ;;		_floorf
 12052 ;;		_labs
 12053 ;;		_memcpy
 12054 ;;		_pad
 12055 ;;		_strcpy
 12056 ;; This function is called by:
 12057 ;;		_vfpfcnvrt
 12058 ;; This function uses a non-reentrant model
 12059 ;;
 12060                           
 12061                           	psect	text30
 12062   0024C4                     __ptext30:
 12063                           	callstack 0
 12064   0024C4                     _efgtoa:
 12065                           	callstack 20
 12066   0024C4                     
 12067                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 12068   0024C4  0100               	movlb	0	; () banked
 12069   0024C6  6B97               	clrf	efgtoa@sign& (0+255),b
 12070                           
 12071                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 12072   0024C8  C071  F098         	movff	efgtoa@f,efgtoa@g
 12073   0024CC  C072  F099         	movff	efgtoa@f+1,efgtoa@g+1
 12074   0024D0  C073  F09A         	movff	efgtoa@f+2,efgtoa@g+2
 12075   0024D4  C074  F09B         	movff	efgtoa@f+3,efgtoa@g+3
 12076   0024D8                     
 12077                           ; BSR set to: 0
 12078                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 12079   0024D8  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
 12080   0024DA  EF73  F012         	goto	u9070
 12081   0024DE  EF71  F012         	goto	u9071
 12082   0024E2                     u9071:
 12083   0024E2  EF87  F012         	goto	l7197
 12084   0024E6                     u9070:
 12085   0024E6                     
 12086                           ; BSR set to: 0
 12087                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 12088   0024E6  0E01               	movlw	1
 12089   0024E8  6F97               	movwf	efgtoa@sign& (0+255),b
 12090   0024EA                     
 12091                           ; BSR set to: 0
 12092                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 12093   0024EA  C098  F001         	movff	efgtoa@g,___flneg@f1
 12094   0024EE  C099  F002         	movff	efgtoa@g+1,___flneg@f1+1
 12095   0024F2  C09A  F003         	movff	efgtoa@g+2,___flneg@f1+2
 12096   0024F6  C09B  F004         	movff	efgtoa@g+3,___flneg@f1+3
 12097   0024FA  ECA4  F038         	call	___flneg	;wreg free
 12098   0024FE  C001  F098         	movff	?___flneg,efgtoa@g
 12099   002502  C002  F099         	movff	?___flneg+1,efgtoa@g+1
 12100   002506  C003  F09A         	movff	?___flneg+2,efgtoa@g+2
 12101   00250A  C004  F09B         	movff	?___flneg+3,efgtoa@g+3
 12102   00250E                     l7197:
 12103                           
 12104                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 12105   00250E  0E00               	movlw	0
 12106   002510  0100               	movlb	0	; () banked
 12107   002512  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
 12108   002514  0E00               	movlw	0
 12109   002516  6F9C               	movwf	efgtoa@n& (0+255),b
 12110   002518                     
 12111                           ; BSR set to: 0
 12112                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 12113   002518  C1EE  F087         	movff	_width,efgtoa@w
 12114   00251C  C1EF  F088         	movff	_width+1,efgtoa@w+1
 12115   002520                     
 12116                           ; BSR set to: 0
 12117                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
 12118   002520  5197               	movf	efgtoa@sign& (0+255),w,b
 12119   002522  B4D8               	btfsc	status,2,c
 12120   002524  EF96  F012         	goto	u9081
 12121   002528  EF98  F012         	goto	u9080
 12122   00252C                     u9081:
 12123   00252C  EFAC  F012         	goto	l7211
 12124   002530                     u9080:
 12125   002530                     
 12126                           ; BSR set to: 0
 12127                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 12128   002530  5197               	movf	efgtoa@sign& (0+255),w,b
 12129   002532  A4D8               	btfss	status,2,c
 12130   002534  EF9E  F012         	goto	u9091
 12131   002538  EFA0  F012         	goto	u9090
 12132   00253C                     u9091:
 12133   00253C  EFA6  F012         	goto	l7207
 12134   002540                     u9090:
 12135   002540                     
 12136                           ; BSR set to: 0
 12137   002540  0E00               	movlw	0
 12138   002542  6F7D               	movwf	(_efgtoa$1427+1)& (0+255),b
 12139   002544  0E2B               	movlw	43
 12140   002546  6F7C               	movwf	_efgtoa$1427& (0+255),b
 12141   002548  EFAA  F012         	goto	l7209
 12142   00254C                     l7207:
 12143                           
 12144                           ; BSR set to: 0
 12145   00254C  0E00               	movlw	0
 12146   00254E  6F7D               	movwf	(_efgtoa$1427+1)& (0+255),b
 12147   002550  0E2D               	movlw	45
 12148   002552  6F7C               	movwf	_efgtoa$1427& (0+255),b
 12149   002554                     l7209:
 12150                           
 12151                           ; BSR set to: 0
 12152   002554  C07C  F097         	movff	_efgtoa$1427,efgtoa@sign
 12153   002558                     l7211:
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 12157   002558  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
 12158   00255C  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 12159   002560  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 12160   002564  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 12161   002568  ECBC  F032         	call	___fpclassifyf	;wreg free
 12162   00256C  0401               	decf	?___fpclassifyf^0,w,c
 12163   00256E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 12164   002570  A4D8               	btfss	status,2,c
 12165   002572  EFBD  F012         	goto	u9101
 12166   002576  EFBF  F012         	goto	u9100
 12167   00257A                     u9101:
 12168   00257A  EFF0  F012         	goto	l7229
 12169   00257E                     u9100:
 12170   00257E                     
 12171                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 12172   00257E  0100               	movlb	0	; () banked
 12173   002580  5197               	movf	efgtoa@sign& (0+255),w,b
 12174   002582  B4D8               	btfsc	status,2,c
 12175   002584  EFC6  F012         	goto	u9111
 12176   002588  EFC8  F012         	goto	u9110
 12177   00258C                     u9111:
 12178   00258C  EFD1  F012         	goto	l7221
 12179   002590                     u9110:
 12180   002590                     
 12181                           ; BSR set to: 0
 12182                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 12183   002590  C097  F265         	movff	efgtoa@sign,_dbuf
 12184   002594                     
 12185                           ; BSR set to: 0
 12186                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
 12187   002594  0787               	decf	efgtoa@w& (0+255),f,b
 12188   002596  A0D8               	btfss	status,0,c
 12189   002598  0788               	decf	(efgtoa@w+1)& (0+255),f,b
 12190   00259A                     
 12191                           ; BSR set to: 0
 12192                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 12193   00259A  0E00               	movlw	0
 12194   00259C  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
 12195   00259E  0E01               	movlw	1
 12196   0025A0  6F9C               	movwf	efgtoa@n& (0+255),b
 12197   0025A2                     l7221:
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 12201   0025A2  0E65               	movlw	low _dbuf
 12202   0025A4  259C               	addwf	efgtoa@n& (0+255),w,b
 12203   0025A6  6E01               	movwf	strcpy@dest^0,c
 12204   0025A8  0E02               	movlw	high _dbuf
 12205   0025AA  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12206   0025AC  6E02               	movwf	(strcpy@dest+1)^0,c
 12207   0025AE  0EF7               	movlw	low STR_15
 12208   0025B0  6E03               	movwf	strcpy@src^0,c
 12209   0025B2  0E7F               	movlw	high STR_15
 12210   0025B4  6E04               	movwf	(strcpy@src+1)^0,c
 12211   0025B6  EC88  F038         	call	_strcpy	;wreg free
 12212   0025BA                     l7223:
 12213                           
 12214                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 12215   0025BA  0100               	movlb	0	; () banked
 12216   0025BC  0EFD               	movlw	253
 12217   0025BE  2787               	addwf	efgtoa@w& (0+255),f,b
 12218   0025C0  0EFF               	movlw	255
 12219   0025C2  2388               	addwfc	(efgtoa@w+1)& (0+255),f,b
 12220   0025C4                     
 12221                           ; BSR set to: 0
 12222                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 12223   0025C4  C070  F00F         	movff	efgtoa@fp,pad@fp
 12224   0025C8  0E65               	movlw	low _dbuf
 12225   0025CA  6E10               	movwf	pad@buf^0,c
 12226   0025CC  0E02               	movlw	high _dbuf
 12227   0025CE  6E11               	movwf	(pad@buf+1)^0,c
 12228   0025D0  C087  F012         	movff	efgtoa@w,pad@p
 12229   0025D4  C088  F013         	movff	efgtoa@w+1,pad@p+1
 12230   0025D8  EC2F  F037         	call	_pad	;wreg free
 12231   0025DC  EF57  F017         	goto	l1088
 12232   0025E0                     l7229:
 12233                           
 12234                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 12235   0025E0  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
 12236   0025E4  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 12237   0025E8  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 12238   0025EC  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 12239   0025F0  ECBC  F032         	call	___fpclassifyf	;wreg free
 12240   0025F4  5001               	movf	?___fpclassifyf^0,w,c
 12241   0025F6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 12242   0025F8  A4D8               	btfss	status,2,c
 12243   0025FA  EF01  F013         	goto	u9121
 12244   0025FE  EF03  F013         	goto	u9120
 12245   002602                     u9121:
 12246   002602  EF23  F013         	goto	l7247
 12247   002606                     u9120:
 12248   002606                     
 12249                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 12250   002606  0100               	movlb	0	; () banked
 12251   002608  5197               	movf	efgtoa@sign& (0+255),w,b
 12252   00260A  B4D8               	btfsc	status,2,c
 12253   00260C  EF0A  F013         	goto	u9131
 12254   002610  EF0C  F013         	goto	u9130
 12255   002614                     u9131:
 12256   002614  EF15  F013         	goto	l7239
 12257   002618                     u9130:
 12258   002618                     
 12259                           ; BSR set to: 0
 12260                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 12261   002618  C097  F265         	movff	efgtoa@sign,_dbuf
 12262   00261C                     
 12263                           ; BSR set to: 0
 12264                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
 12265   00261C  0787               	decf	efgtoa@w& (0+255),f,b
 12266   00261E  A0D8               	btfss	status,0,c
 12267   002620  0788               	decf	(efgtoa@w+1)& (0+255),f,b
 12268   002622                     
 12269                           ; BSR set to: 0
 12270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 12271   002622  0E00               	movlw	0
 12272   002624  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
 12273   002626  0E01               	movlw	1
 12274   002628  6F9C               	movwf	efgtoa@n& (0+255),b
 12275   00262A                     l7239:
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 12279   00262A  0E65               	movlw	low _dbuf
 12280   00262C  259C               	addwf	efgtoa@n& (0+255),w,b
 12281   00262E  6E01               	movwf	strcpy@dest^0,c
 12282   002630  0E02               	movlw	high _dbuf
 12283   002632  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12284   002634  6E02               	movwf	(strcpy@dest+1)^0,c
 12285   002636  0EFB               	movlw	low STR_18
 12286   002638  6E03               	movwf	strcpy@src^0,c
 12287   00263A  0E7F               	movlw	high STR_18
 12288   00263C  6E04               	movwf	(strcpy@src+1)^0,c
 12289   00263E  EC88  F038         	call	_strcpy	;wreg free
 12290   002642  EFDD  F012         	goto	l7223
 12291   002646                     l7247:
 12292                           
 12293                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 12294   002646  0E00               	movlw	0
 12295   002648  0100               	movlb	0	; () banked
 12296   00264A  6F9E               	movwf	efgtoa@u& (0+255),b
 12297   00264C  0E00               	movlw	0
 12298   00264E  6F9F               	movwf	(efgtoa@u+1)& (0+255),b
 12299   002650  0E80               	movlw	128
 12300   002652  6FA0               	movwf	(efgtoa@u+2)& (0+255),b
 12301   002654  0E3F               	movlw	63
 12302   002656  6FA1               	movwf	(efgtoa@u+3)& (0+255),b
 12303                           
 12304                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 12305   002658  0E00               	movlw	0
 12306   00265A  6F86               	movwf	(efgtoa@e+1)& (0+255),b
 12307   00265C  0E00               	movlw	0
 12308   00265E  6F85               	movwf	efgtoa@e& (0+255),b
 12309   002660                     
 12310                           ; BSR set to: 0
 12311                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 12312   002660  C098  F001         	movff	efgtoa@g,___fleq@ff1
 12313   002664  C099  F002         	movff	efgtoa@g+1,___fleq@ff1+1
 12314   002668  C09A  F003         	movff	efgtoa@g+2,___fleq@ff1+2
 12315   00266C  C09B  F004         	movff	efgtoa@g+3,___fleq@ff1+3
 12316   002670  0E00               	movlw	0
 12317   002672  6E05               	movwf	___fleq@ff2^0,c
 12318   002674  0E00               	movlw	0
 12319   002676  6E06               	movwf	(___fleq@ff2+1)^0,c
 12320   002678  0E00               	movlw	0
 12321   00267A  6E07               	movwf	(___fleq@ff2+2)^0,c
 12322   00267C  0E00               	movlw	0
 12323   00267E  6E08               	movwf	(___fleq@ff2+3)^0,c
 12324   002680  EC92  F035         	call	___fleq	;wreg free
 12325   002684  B0D8               	btfsc	status,0,c
 12326   002686  EF47  F013         	goto	u9141
 12327   00268A  EF49  F013         	goto	u9140
 12328   00268E                     u9141:
 12329   00268E  EF28  F014         	goto	l1091
 12330   002692                     u9140:
 12331   002692  EF56  F013         	goto	l7255
 12332   002696                     l1093:
 12333                           
 12334                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 12335   002696  C089  F09E         	movff	efgtoa@ou,efgtoa@u
 12336   00269A  C08A  F09F         	movff	efgtoa@ou+1,efgtoa@u+1
 12337   00269E  C08B  F0A0         	movff	efgtoa@ou+2,efgtoa@u+2
 12338   0026A2  C08C  F0A1         	movff	efgtoa@ou+3,efgtoa@u+3
 12339   0026A6                     
 12340                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
 12341   0026A6  0100               	movlb	0	; () banked
 12342   0026A8  4B85               	infsnz	efgtoa@e& (0+255),f,b
 12343   0026AA  2B86               	incf	(efgtoa@e+1)& (0+255),f,b
 12344   0026AC                     l7255:
 12345                           
 12346                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 12347   0026AC  C09E  F01F         	movff	efgtoa@u,___flmul@b
 12348   0026B0  C09F  F020         	movff	efgtoa@u+1,___flmul@b+1
 12349   0026B4  C0A0  F021         	movff	efgtoa@u+2,___flmul@b+2
 12350   0026B8  C0A1  F022         	movff	efgtoa@u+3,___flmul@b+3
 12351   0026BC  0E00               	movlw	0
 12352   0026BE  6E23               	movwf	___flmul@a^0,c
 12353   0026C0  0E00               	movlw	0
 12354   0026C2  6E24               	movwf	(___flmul@a+1)^0,c
 12355   0026C4  0E20               	movlw	32
 12356   0026C6  6E25               	movwf	(___flmul@a+2)^0,c
 12357   0026C8  0E41               	movlw	65
 12358   0026CA  6E26               	movwf	(___flmul@a+3)^0,c
 12359   0026CC  ECA2  F01E         	call	___flmul	;wreg free
 12360   0026D0  C01F  F089         	movff	?___flmul,efgtoa@ou
 12361   0026D4  C020  F08A         	movff	?___flmul+1,efgtoa@ou+1
 12362   0026D8  C021  F08B         	movff	?___flmul+2,efgtoa@ou+2
 12363   0026DC  C022  F08C         	movff	?___flmul+3,efgtoa@ou+3
 12364   0026E0  0100               	movlb	0	; () banked
 12365   0026E2  5189               	movf	efgtoa@ou& (0+255),w,b
 12366   0026E4  5D98               	subwf	efgtoa@g& (0+255),w,b
 12367   0026E6  6E01               	movwf	labs@a^0,c
 12368   0026E8  518A               	movf	(efgtoa@ou+1)& (0+255),w,b
 12369   0026EA  5999               	subwfb	(efgtoa@g+1)& (0+255),w,b
 12370   0026EC  6E02               	movwf	(labs@a+1)^0,c
 12371   0026EE  518B               	movf	(efgtoa@ou+2)& (0+255),w,b
 12372   0026F0  599A               	subwfb	(efgtoa@g+2)& (0+255),w,b
 12373   0026F2  6E03               	movwf	(labs@a+2)^0,c
 12374   0026F4  518C               	movf	(efgtoa@ou+3)& (0+255),w,b
 12375   0026F6  599B               	subwfb	(efgtoa@g+3)& (0+255),w,b
 12376   0026F8  6E04               	movwf	(labs@a+3)^0,c
 12377   0026FA  EC62  F037         	call	_labs	;wreg free
 12378   0026FE  BE04               	btfsc	(?_labs+3)^0,7,c
 12379   002700  EF8D  F013         	goto	u9151
 12380   002704  5004               	movf	(?_labs+3)^0,w,c
 12381   002706  1003               	iorwf	(?_labs+2)^0,w,c
 12382   002708  1002               	iorwf	(?_labs+1)^0,w,c
 12383   00270A  E109               	bnz	u9150
 12384   00270C  0E02               	movlw	2
 12385   00270E  5C01               	subwf	?_labs^0,w,c
 12386   002710  A0D8               	btfss	status,0,c
 12387   002712  EF8D  F013         	goto	u9151
 12388   002716  EF8F  F013         	goto	u9150
 12389   00271A                     u9151:
 12390   00271A  EF4B  F013         	goto	l1093
 12391   00271E                     u9150:
 12392   00271E  C089  F040         	movff	efgtoa@ou,___flge@ff1
 12393   002722  C08A  F041         	movff	efgtoa@ou+1,___flge@ff1+1
 12394   002726  C08B  F042         	movff	efgtoa@ou+2,___flge@ff1+2
 12395   00272A  C08C  F043         	movff	efgtoa@ou+3,___flge@ff1+3
 12396   00272E  C098  F044         	movff	efgtoa@g,___flge@ff2
 12397   002732  C099  F045         	movff	efgtoa@g+1,___flge@ff2+1
 12398   002736  C09A  F046         	movff	efgtoa@g+2,___flge@ff2+2
 12399   00273A  C09B  F047         	movff	efgtoa@g+3,___flge@ff2+3
 12400   00273E  ECBA  F031         	call	___flge	;wreg free
 12401   002742  A0D8               	btfss	status,0,c
 12402   002744  EFA6  F013         	goto	u9161
 12403   002748  EFA8  F013         	goto	u9160
 12404   00274C                     u9161:
 12405   00274C  EF4B  F013         	goto	l1093
 12406   002750                     u9160:
 12407   002750                     
 12408                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 12409   002750  0100               	movlb	0	; () banked
 12410   002752  519E               	movf	efgtoa@u& (0+255),w,b
 12411   002754  5D98               	subwf	efgtoa@g& (0+255),w,b
 12412   002756  6E01               	movwf	labs@a^0,c
 12413   002758  519F               	movf	(efgtoa@u+1)& (0+255),w,b
 12414   00275A  5999               	subwfb	(efgtoa@g+1)& (0+255),w,b
 12415   00275C  6E02               	movwf	(labs@a+1)^0,c
 12416   00275E  51A0               	movf	(efgtoa@u+2)& (0+255),w,b
 12417   002760  599A               	subwfb	(efgtoa@g+2)& (0+255),w,b
 12418   002762  6E03               	movwf	(labs@a+2)^0,c
 12419   002764  51A1               	movf	(efgtoa@u+3)& (0+255),w,b
 12420   002766  599B               	subwfb	(efgtoa@g+3)& (0+255),w,b
 12421   002768  6E04               	movwf	(labs@a+3)^0,c
 12422   00276A  EC62  F037         	call	_labs	;wreg free
 12423   00276E  BE04               	btfsc	(?_labs+3)^0,7,c
 12424   002770  EFC7  F013         	goto	u9170
 12425   002774  5004               	movf	(?_labs+3)^0,w,c
 12426   002776  1003               	iorwf	(?_labs+2)^0,w,c
 12427   002778  1002               	iorwf	(?_labs+1)^0,w,c
 12428   00277A  E107               	bnz	u9171
 12429   00277C  0E02               	movlw	2
 12430   00277E  5C01               	subwf	?_labs^0,w,c
 12431   002780  B0D8               	btfsc	status,0,c
 12432   002782  EFC5  F013         	goto	u9171
 12433   002786  EFC7  F013         	goto	u9170
 12434   00278A                     u9171:
 12435   00278A  EF0F  F014         	goto	l7273
 12436   00278E                     u9170:
 12437   00278E                     l7263:
 12438                           
 12439                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
 12440   00278E  C09E  F098         	movff	efgtoa@u,efgtoa@g
 12441   002792  C09F  F099         	movff	efgtoa@u+1,efgtoa@g+1
 12442   002796  C0A0  F09A         	movff	efgtoa@u+2,efgtoa@g+2
 12443   00279A  C0A1  F09B         	movff	efgtoa@u+3,efgtoa@g+3
 12444                           
 12445                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
 12446   00279E  EF28  F014         	goto	l1091
 12447   0027A2                     l7265:
 12448                           
 12449                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 12450   0027A2  C09E  F040         	movff	efgtoa@u,___fldiv@b
 12451   0027A6  C09F  F041         	movff	efgtoa@u+1,___fldiv@b+1
 12452   0027AA  C0A0  F042         	movff	efgtoa@u+2,___fldiv@b+2
 12453   0027AE  C0A1  F043         	movff	efgtoa@u+3,___fldiv@b+3
 12454   0027B2  0E00               	movlw	0
 12455   0027B4  6E44               	movwf	___fldiv@a^0,c
 12456   0027B6  0E00               	movlw	0
 12457   0027B8  6E45               	movwf	(___fldiv@a+1)^0,c
 12458   0027BA  0E20               	movlw	32
 12459   0027BC  6E46               	movwf	(___fldiv@a+2)^0,c
 12460   0027BE  0E41               	movlw	65
 12461   0027C0  6E47               	movwf	(___fldiv@a+3)^0,c
 12462   0027C2  ECA4  F022         	call	___fldiv	;wreg free
 12463   0027C6  C040  F09E         	movff	?___fldiv,efgtoa@u
 12464   0027CA  C041  F09F         	movff	?___fldiv+1,efgtoa@u+1
 12465   0027CE  C042  F0A0         	movff	?___fldiv+2,efgtoa@u+2
 12466   0027D2  C043  F0A1         	movff	?___fldiv+3,efgtoa@u+3
 12467   0027D6                     
 12468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
 12469   0027D6  0100               	movlb	0	; () banked
 12470   0027D8  0785               	decf	efgtoa@e& (0+255),f,b
 12471   0027DA  A0D8               	btfss	status,0,c
 12472   0027DC  0786               	decf	(efgtoa@e+1)& (0+255),f,b
 12473   0027DE                     
 12474                           ; BSR set to: 0
 12475                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 12476   0027DE  519E               	movf	efgtoa@u& (0+255),w,b
 12477   0027E0  5D98               	subwf	efgtoa@g& (0+255),w,b
 12478   0027E2  6E01               	movwf	labs@a^0,c
 12479   0027E4  519F               	movf	(efgtoa@u+1)& (0+255),w,b
 12480   0027E6  5999               	subwfb	(efgtoa@g+1)& (0+255),w,b
 12481   0027E8  6E02               	movwf	(labs@a+1)^0,c
 12482   0027EA  51A0               	movf	(efgtoa@u+2)& (0+255),w,b
 12483   0027EC  599A               	subwfb	(efgtoa@g+2)& (0+255),w,b
 12484   0027EE  6E03               	movwf	(labs@a+2)^0,c
 12485   0027F0  51A1               	movf	(efgtoa@u+3)& (0+255),w,b
 12486   0027F2  599B               	subwfb	(efgtoa@g+3)& (0+255),w,b
 12487   0027F4  6E04               	movwf	(labs@a+3)^0,c
 12488   0027F6  EC62  F037         	call	_labs	;wreg free
 12489   0027FA  BE04               	btfsc	(?_labs+3)^0,7,c
 12490   0027FC  EF0D  F014         	goto	u9180
 12491   002800  5004               	movf	(?_labs+3)^0,w,c
 12492   002802  1003               	iorwf	(?_labs+2)^0,w,c
 12493   002804  1002               	iorwf	(?_labs+1)^0,w,c
 12494   002806  E107               	bnz	u9181
 12495   002808  0E02               	movlw	2
 12496   00280A  5C01               	subwf	?_labs^0,w,c
 12497   00280C  B0D8               	btfsc	status,0,c
 12498   00280E  EF0B  F014         	goto	u9181
 12499   002812  EF0D  F014         	goto	u9180
 12500   002816                     u9181:
 12501   002816  EF0F  F014         	goto	l7273
 12502   00281A                     u9180:
 12503   00281A  EFC7  F013         	goto	l7263
 12504   00281E                     l7273:
 12505                           
 12506                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 12507   00281E  C098  F040         	movff	efgtoa@g,___flge@ff1
 12508   002822  C099  F041         	movff	efgtoa@g+1,___flge@ff1+1
 12509   002826  C09A  F042         	movff	efgtoa@g+2,___flge@ff1+2
 12510   00282A  C09B  F043         	movff	efgtoa@g+3,___flge@ff1+3
 12511   00282E  C09E  F044         	movff	efgtoa@u,___flge@ff2
 12512   002832  C09F  F045         	movff	efgtoa@u+1,___flge@ff2+1
 12513   002836  C0A0  F046         	movff	efgtoa@u+2,___flge@ff2+2
 12514   00283A  C0A1  F047         	movff	efgtoa@u+3,___flge@ff2+3
 12515   00283E  ECBA  F031         	call	___flge	;wreg free
 12516   002842  A0D8               	btfss	status,0,c
 12517   002844  EF26  F014         	goto	u9191
 12518   002848  EF28  F014         	goto	u9190
 12519   00284C                     u9191:
 12520   00284C  EFD1  F013         	goto	l7265
 12521   002850                     u9190:
 12522   002850                     l1091:
 12523                           
 12524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 12525   002850  C075  F07F         	movff	efgtoa@c,efgtoa@mode
 12526                           
 12527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 12528   002854  C07F  F080         	movff	efgtoa@mode,efgtoa@nmode
 12529   002858                     
 12530                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 12531   002858  0100               	movlb	0	; () banked
 12532   00285A  BFF4               	btfsc	(_prec+1)& (0+255),7,b
 12533   00285C  EF32  F014         	goto	u9201
 12534   002860  EF34  F014         	goto	u9200
 12535   002864                     u9201:
 12536   002864  EF3A  F014         	goto	l7279
 12537   002868                     u9200:
 12538   002868                     
 12539                           ; BSR set to: 0
 12540   002868  C0F3  F078         	movff	_prec,efgtoa@p
 12541   00286C  C0F4  F079         	movff	_prec+1,efgtoa@p+1
 12542   002870  EF3E  F014         	goto	l7281
 12543   002874                     l7279:
 12544                           
 12545                           ; BSR set to: 0
 12546   002874  0E00               	movlw	0
 12547   002876  6F79               	movwf	(efgtoa@p+1)& (0+255),b
 12548   002878  0E06               	movlw	6
 12549   00287A  6F78               	movwf	efgtoa@p& (0+255),b
 12550   00287C                     l7281:
 12551                           
 12552                           ; BSR set to: 0
 12553                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 12554   00287C  C078  F083         	movff	efgtoa@p,efgtoa@m
 12555   002880  C079  F084         	movff	efgtoa@p+1,efgtoa@m+1
 12556   002884                     
 12557                           ; BSR set to: 0
 12558                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 12559   002884  4B83               	infsnz	efgtoa@m& (0+255),f,b
 12560   002886  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
 12561   002888                     
 12562                           ; BSR set to: 0
 12563                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 12564   002888  0E66               	movlw	102
 12565   00288A  1980               	xorwf	efgtoa@nmode& (0+255),w,b
 12566   00288C  A4D8               	btfss	status,2,c
 12567   00288E  EF4B  F014         	goto	u9211
 12568   002892  EF4D  F014         	goto	u9210
 12569   002896                     u9211:
 12570   002896  EF6D  F014         	goto	l7295
 12571   00289A                     u9210:
 12572   00289A                     
 12573                           ; BSR set to: 0
 12574                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 12575   00289A  BF86               	btfsc	(efgtoa@e+1)& (0+255),7,b
 12576   00289C  EF54  F014         	goto	u9220
 12577   0028A0  EF52  F014         	goto	u9221
 12578   0028A4                     u9221:
 12579   0028A4  EF60  F014         	goto	l7291
 12580   0028A8                     u9220:
 12581   0028A8                     
 12582                           ; BSR set to: 0
 12583                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 12584   0028A8  0E00               	movlw	0
 12585   0028AA  6F9E               	movwf	efgtoa@u& (0+255),b
 12586   0028AC  0E00               	movlw	0
 12587   0028AE  6F9F               	movwf	(efgtoa@u+1)& (0+255),b
 12588   0028B0  0E80               	movlw	128
 12589   0028B2  6FA0               	movwf	(efgtoa@u+2)& (0+255),b
 12590   0028B4  0E3F               	movlw	63
 12591   0028B6  6FA1               	movwf	(efgtoa@u+3)& (0+255),b
 12592                           
 12593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 12594   0028B8  0E00               	movlw	0
 12595   0028BA  6F86               	movwf	(efgtoa@e+1)& (0+255),b
 12596   0028BC  0E00               	movlw	0
 12597   0028BE  6F85               	movwf	efgtoa@e& (0+255),b
 12598   0028C0                     l7291:
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 12602   0028C0  0E67               	movlw	103
 12603   0028C2  197F               	xorwf	efgtoa@mode& (0+255),w,b
 12604   0028C4  B4D8               	btfsc	status,2,c
 12605   0028C6  EF67  F014         	goto	u9231
 12606   0028CA  EF69  F014         	goto	u9230
 12607   0028CE                     u9231:
 12608   0028CE  EF6D  F014         	goto	l7295
 12609   0028D2                     u9230:
 12610   0028D2                     
 12611                           ; BSR set to: 0
 12612                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 12613   0028D2  5185               	movf	efgtoa@e& (0+255),w,b
 12614   0028D4  2783               	addwf	efgtoa@m& (0+255),f,b
 12615   0028D6  5186               	movf	(efgtoa@e+1)& (0+255),w,b
 12616   0028D8  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
 12617   0028DA                     l7295:
 12618                           
 12619                           ; BSR set to: 0
 12620                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 12621   0028DA  0E00               	movlw	0
 12622   0028DC  6F8E               	movwf	(efgtoa@i+1)& (0+255),b
 12623   0028DE  0E00               	movlw	0
 12624   0028E0  6F8D               	movwf	efgtoa@i& (0+255),b
 12625   0028E2                     
 12626                           ; BSR set to: 0
 12627                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 12628   0028E2  C098  F08F         	movff	efgtoa@g,efgtoa@h
 12629   0028E6  C099  F090         	movff	efgtoa@g+1,efgtoa@h+1
 12630   0028EA  C09A  F091         	movff	efgtoa@g+2,efgtoa@h+2
 12631   0028EE  C09B  F092         	movff	efgtoa@g+3,efgtoa@h+3
 12632   0028F2                     
 12633                           ; BSR set to: 0
 12634                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 12635   0028F2  C09E  F089         	movff	efgtoa@u,efgtoa@ou
 12636   0028F6  C09F  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
 12637   0028FA  C0A0  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
 12638   0028FE  C0A1  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
 12639                           
 12640                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12641   002902  EFFE  F014         	goto	l7309
 12642   002906                     l7301:
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 12646   002906  C08F  F040         	movff	efgtoa@h,___fldiv@b
 12647   00290A  C090  F041         	movff	efgtoa@h+1,___fldiv@b+1
 12648   00290E  C091  F042         	movff	efgtoa@h+2,___fldiv@b+2
 12649   002912  C092  F043         	movff	efgtoa@h+3,___fldiv@b+3
 12650   002916  C09E  F044         	movff	efgtoa@u,___fldiv@a
 12651   00291A  C09F  F045         	movff	efgtoa@u+1,___fldiv@a+1
 12652   00291E  C0A0  F046         	movff	efgtoa@u+2,___fldiv@a+2
 12653   002922  C0A1  F047         	movff	efgtoa@u+3,___fldiv@a+3
 12654   002926  ECA4  F022         	call	___fldiv	;wreg free
 12655   00292A  C040  F059         	movff	?___fldiv,floorf@x
 12656   00292E  C041  F05A         	movff	?___fldiv+1,floorf@x+1
 12657   002932  C042  F05B         	movff	?___fldiv+2,floorf@x+2
 12658   002936  C043  F05C         	movff	?___fldiv+3,floorf@x+3
 12659   00293A  EC73  F028         	call	_floorf	;wreg free
 12660   00293E  C059  F093         	movff	?_floorf,efgtoa@l
 12661   002942  C05A  F094         	movff	?_floorf+1,efgtoa@l+1
 12662   002946  C05B  F095         	movff	?_floorf+2,efgtoa@l+2
 12663   00294A  C05C  F096         	movff	?_floorf+3,efgtoa@l+3
 12664                           
 12665                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 12666   00294E  C093  F001         	movff	efgtoa@l,___fltol@f1
 12667   002952  C094  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12668   002956  C095  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12669   00295A  C096  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12670   00295E  EC37  F031         	call	___fltol	;wreg free
 12671   002962  C001  F081         	movff	?___fltol,efgtoa@d
 12672   002966  C002  F082         	movff	?___fltol+1,efgtoa@d+1
 12673   00296A                     
 12674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 12675   00296A  C08F  F038         	movff	efgtoa@h,___flsub@b
 12676   00296E  C090  F039         	movff	efgtoa@h+1,___flsub@b+1
 12677   002972  C091  F03A         	movff	efgtoa@h+2,___flsub@b+2
 12678   002976  C092  F03B         	movff	efgtoa@h+3,___flsub@b+3
 12679   00297A  C093  F023         	movff	efgtoa@l,___flmul@a
 12680   00297E  C094  F024         	movff	efgtoa@l+1,___flmul@a+1
 12681   002982  C095  F025         	movff	efgtoa@l+2,___flmul@a+2
 12682   002986  C096  F026         	movff	efgtoa@l+3,___flmul@a+3
 12683   00298A  C09E  F01F         	movff	efgtoa@u,___flmul@b
 12684   00298E  C09F  F020         	movff	efgtoa@u+1,___flmul@b+1
 12685   002992  C0A0  F021         	movff	efgtoa@u+2,___flmul@b+2
 12686   002996  C0A1  F022         	movff	efgtoa@u+3,___flmul@b+3
 12687   00299A  ECA2  F01E         	call	___flmul	;wreg free
 12688   00299E  C01F  F03C         	movff	?___flmul,___flsub@a
 12689   0029A2  C020  F03D         	movff	?___flmul+1,___flsub@a+1
 12690   0029A6  C021  F03E         	movff	?___flmul+2,___flsub@a+2
 12691   0029AA  C022  F03F         	movff	?___flmul+3,___flsub@a+3
 12692   0029AE  EC02  F038         	call	___flsub	;wreg free
 12693   0029B2  C038  F08F         	movff	?___flsub,efgtoa@h
 12694   0029B6  C039  F090         	movff	?___flsub+1,efgtoa@h+1
 12695   0029BA  C03A  F091         	movff	?___flsub+2,efgtoa@h+2
 12696   0029BE  C03B  F092         	movff	?___flsub+3,efgtoa@h+3
 12697   0029C2                     
 12698                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 12699   0029C2  C09E  F040         	movff	efgtoa@u,___fldiv@b
 12700   0029C6  C09F  F041         	movff	efgtoa@u+1,___fldiv@b+1
 12701   0029CA  C0A0  F042         	movff	efgtoa@u+2,___fldiv@b+2
 12702   0029CE  C0A1  F043         	movff	efgtoa@u+3,___fldiv@b+3
 12703   0029D2  0E00               	movlw	0
 12704   0029D4  6E44               	movwf	___fldiv@a^0,c
 12705   0029D6  0E00               	movlw	0
 12706   0029D8  6E45               	movwf	(___fldiv@a+1)^0,c
 12707   0029DA  0E20               	movlw	32
 12708   0029DC  6E46               	movwf	(___fldiv@a+2)^0,c
 12709   0029DE  0E41               	movlw	65
 12710   0029E0  6E47               	movwf	(___fldiv@a+3)^0,c
 12711   0029E2  ECA4  F022         	call	___fldiv	;wreg free
 12712   0029E6  C040  F09E         	movff	?___fldiv,efgtoa@u
 12713   0029EA  C041  F09F         	movff	?___fldiv+1,efgtoa@u+1
 12714   0029EE  C042  F0A0         	movff	?___fldiv+2,efgtoa@u+2
 12715   0029F2  C043  F0A1         	movff	?___fldiv+3,efgtoa@u+3
 12716   0029F6                     
 12717                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 12718   0029F6  0100               	movlb	0	; () banked
 12719   0029F8  4B8D               	infsnz	efgtoa@i& (0+255),f,b
 12720   0029FA  2B8E               	incf	(efgtoa@i+1)& (0+255),f,b
 12721   0029FC                     l7309:
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12725   0029FC  5183               	movf	efgtoa@m& (0+255),w,b
 12726   0029FE  5D8D               	subwf	efgtoa@i& (0+255),w,b
 12727   002A00  518E               	movf	(efgtoa@i+1)& (0+255),w,b
 12728   002A02  0A80               	xorlw	128
 12729   002A04  6E5D               	movwf	??_efgtoa^0,c
 12730   002A06  5184               	movf	(efgtoa@m+1)& (0+255),w,b
 12731   002A08  0A80               	xorlw	128
 12732   002A0A  585D               	subwfb	??_efgtoa^0,w,c
 12733   002A0C  A0D8               	btfss	status,0,c
 12734   002A0E  EF0B  F015         	goto	u9241
 12735   002A12  EF0D  F015         	goto	u9240
 12736   002A16                     u9241:
 12737   002A16  EF83  F014         	goto	l7301
 12738   002A1A                     u9240:
 12739   002A1A                     
 12740                           ; BSR set to: 0
 12741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 12742   002A1A  C09E  F01F         	movff	efgtoa@u,___flmul@b
 12743   002A1E  C09F  F020         	movff	efgtoa@u+1,___flmul@b+1
 12744   002A22  C0A0  F021         	movff	efgtoa@u+2,___flmul@b+2
 12745   002A26  C0A1  F022         	movff	efgtoa@u+3,___flmul@b+3
 12746   002A2A  0E00               	movlw	0
 12747   002A2C  6E23               	movwf	___flmul@a^0,c
 12748   002A2E  0E00               	movlw	0
 12749   002A30  6E24               	movwf	(___flmul@a+1)^0,c
 12750   002A32  0EA0               	movlw	160
 12751   002A34  6E25               	movwf	(___flmul@a+2)^0,c
 12752   002A36  0E40               	movlw	64
 12753   002A38  6E26               	movwf	(___flmul@a+3)^0,c
 12754   002A3A  ECA2  F01E         	call	___flmul	;wreg free
 12755   002A3E  C01F  F093         	movff	?___flmul,efgtoa@l
 12756   002A42  C020  F094         	movff	?___flmul+1,efgtoa@l+1
 12757   002A46  C021  F095         	movff	?___flmul+2,efgtoa@l+2
 12758   002A4A  C022  F096         	movff	?___flmul+3,efgtoa@l+3
 12759   002A4E                     
 12760                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 12761   002A4E  C08F  F040         	movff	efgtoa@h,___flge@ff1
 12762   002A52  C090  F041         	movff	efgtoa@h+1,___flge@ff1+1
 12763   002A56  C091  F042         	movff	efgtoa@h+2,___flge@ff1+2
 12764   002A5A  C092  F043         	movff	efgtoa@h+3,___flge@ff1+3
 12765   002A5E  C093  F044         	movff	efgtoa@l,___flge@ff2
 12766   002A62  C094  F045         	movff	efgtoa@l+1,___flge@ff2+1
 12767   002A66  C095  F046         	movff	efgtoa@l+2,___flge@ff2+2
 12768   002A6A  C096  F047         	movff	efgtoa@l+3,___flge@ff2+3
 12769   002A6E  ECBA  F031         	call	___flge	;wreg free
 12770   002A72  B0D8               	btfsc	status,0,c
 12771   002A74  EF3E  F015         	goto	u9251
 12772   002A78  EF40  F015         	goto	u9250
 12773   002A7C                     u9251:
 12774   002A7C  EF4B  F015         	goto	l7317
 12775   002A80                     u9250:
 12776   002A80                     
 12777                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 12778   002A80  0E00               	movlw	0
 12779   002A82  0100               	movlb	0	; () banked
 12780   002A84  6F93               	movwf	efgtoa@l& (0+255),b
 12781   002A86  0E00               	movlw	0
 12782   002A88  6F94               	movwf	(efgtoa@l+1)& (0+255),b
 12783   002A8A  0E00               	movlw	0
 12784   002A8C  6F95               	movwf	(efgtoa@l+2)& (0+255),b
 12785   002A8E  0E00               	movlw	0
 12786   002A90  6F96               	movwf	(efgtoa@l+3)& (0+255),b
 12787                           
 12788                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 12789   002A92  EF74  F015         	goto	l7323
 12790   002A96                     l7317:
 12791                           
 12792                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 12793   002A96  C08F  F001         	movff	efgtoa@h,___fleq@ff1
 12794   002A9A  C090  F002         	movff	efgtoa@h+1,___fleq@ff1+1
 12795   002A9E  C091  F003         	movff	efgtoa@h+2,___fleq@ff1+2
 12796   002AA2  C092  F004         	movff	efgtoa@h+3,___fleq@ff1+3
 12797   002AA6  C093  F005         	movff	efgtoa@l,___fleq@ff2
 12798   002AAA  C094  F006         	movff	efgtoa@l+1,___fleq@ff2+1
 12799   002AAE  C095  F007         	movff	efgtoa@l+2,___fleq@ff2+2
 12800   002AB2  C096  F008         	movff	efgtoa@l+3,___fleq@ff2+3
 12801   002AB6  EC92  F035         	call	___fleq	;wreg free
 12802   002ABA  A0D8               	btfss	status,0,c
 12803   002ABC  EF62  F015         	goto	u9261
 12804   002AC0  EF64  F015         	goto	u9260
 12805   002AC4                     u9261:
 12806   002AC4  EF74  F015         	goto	l7323
 12807   002AC8                     u9260:
 12808   002AC8  0100               	movlb	0	; () banked
 12809   002ACA  B181               	btfsc	efgtoa@d& (0+255),0,b
 12810   002ACC  EF6A  F015         	goto	u9271
 12811   002AD0  EF6C  F015         	goto	u9270
 12812   002AD4                     u9271:
 12813   002AD4  EF74  F015         	goto	l7323
 12814   002AD8                     u9270:
 12815   002AD8                     
 12816                           ; BSR set to: 0
 12817                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 12818   002AD8  0E00               	movlw	0
 12819   002ADA  6F93               	movwf	efgtoa@l& (0+255),b
 12820   002ADC  0E00               	movlw	0
 12821   002ADE  6F94               	movwf	(efgtoa@l+1)& (0+255),b
 12822   002AE0  0E00               	movlw	0
 12823   002AE2  6F95               	movwf	(efgtoa@l+2)& (0+255),b
 12824   002AE4  0E00               	movlw	0
 12825   002AE6  6F96               	movwf	(efgtoa@l+3)& (0+255),b
 12826   002AE8                     l7323:
 12827                           
 12828                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 12829   002AE8  C098  F00F         	movff	efgtoa@g,___fladd@b
 12830   002AEC  C099  F010         	movff	efgtoa@g+1,___fladd@b+1
 12831   002AF0  C09A  F011         	movff	efgtoa@g+2,___fladd@b+2
 12832   002AF4  C09B  F012         	movff	efgtoa@g+3,___fladd@b+3
 12833   002AF8  C093  F013         	movff	efgtoa@l,___fladd@a
 12834   002AFC  C094  F014         	movff	efgtoa@l+1,___fladd@a+1
 12835   002B00  C095  F015         	movff	efgtoa@l+2,___fladd@a+2
 12836   002B04  C096  F016         	movff	efgtoa@l+3,___fladd@a+3
 12837   002B08  EC47  F01C         	call	___fladd	;wreg free
 12838   002B0C  C00F  F08F         	movff	?___fladd,efgtoa@h
 12839   002B10  C010  F090         	movff	?___fladd+1,efgtoa@h+1
 12840   002B14  C011  F091         	movff	?___fladd+2,efgtoa@h+2
 12841   002B18  C012  F092         	movff	?___fladd+3,efgtoa@h+3
 12842   002B1C                     
 12843                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 12844   002B1C  C08F  F040         	movff	efgtoa@h,___flge@ff1
 12845   002B20  C090  F041         	movff	efgtoa@h+1,___flge@ff1+1
 12846   002B24  C091  F042         	movff	efgtoa@h+2,___flge@ff1+2
 12847   002B28  C092  F043         	movff	efgtoa@h+3,___flge@ff1+3
 12848   002B2C  0E00               	movlw	0
 12849   002B2E  6E23               	movwf	___flmul@a^0,c
 12850   002B30  0E00               	movlw	0
 12851   002B32  6E24               	movwf	(___flmul@a+1)^0,c
 12852   002B34  0E20               	movlw	32
 12853   002B36  6E25               	movwf	(___flmul@a+2)^0,c
 12854   002B38  0E41               	movlw	65
 12855   002B3A  6E26               	movwf	(___flmul@a+3)^0,c
 12856   002B3C  C089  F01F         	movff	efgtoa@ou,___flmul@b
 12857   002B40  C08A  F020         	movff	efgtoa@ou+1,___flmul@b+1
 12858   002B44  C08B  F021         	movff	efgtoa@ou+2,___flmul@b+2
 12859   002B48  C08C  F022         	movff	efgtoa@ou+3,___flmul@b+3
 12860   002B4C  ECA2  F01E         	call	___flmul	;wreg free
 12861   002B50  C01F  F044         	movff	?___flmul,___flge@ff2
 12862   002B54  C020  F045         	movff	?___flmul+1,___flge@ff2+1
 12863   002B58  C021  F046         	movff	?___flmul+2,___flge@ff2+2
 12864   002B5C  C022  F047         	movff	?___flmul+3,___flge@ff2+3
 12865   002B60  ECBA  F031         	call	___flge	;wreg free
 12866   002B64  A0D8               	btfss	status,0,c
 12867   002B66  EFB7  F015         	goto	u9281
 12868   002B6A  EFB9  F015         	goto	u9280
 12869   002B6E                     u9281:
 12870   002B6E  EFE2  F015         	goto	l7335
 12871   002B72                     u9280:
 12872   002B72                     
 12873                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 12874   002B72  0100               	movlb	0	; () banked
 12875   002B74  4B85               	infsnz	efgtoa@e& (0+255),f,b
 12876   002B76  2B86               	incf	(efgtoa@e+1)& (0+255),f,b
 12877   002B78                     
 12878                           ; BSR set to: 0
 12879                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 12880   002B78  C089  F01F         	movff	efgtoa@ou,___flmul@b
 12881   002B7C  C08A  F020         	movff	efgtoa@ou+1,___flmul@b+1
 12882   002B80  C08B  F021         	movff	efgtoa@ou+2,___flmul@b+2
 12883   002B84  C08C  F022         	movff	efgtoa@ou+3,___flmul@b+3
 12884   002B88  0E00               	movlw	0
 12885   002B8A  6E23               	movwf	___flmul@a^0,c
 12886   002B8C  0E00               	movlw	0
 12887   002B8E  6E24               	movwf	(___flmul@a+1)^0,c
 12888   002B90  0E20               	movlw	32
 12889   002B92  6E25               	movwf	(___flmul@a+2)^0,c
 12890   002B94  0E41               	movlw	65
 12891   002B96  6E26               	movwf	(___flmul@a+3)^0,c
 12892   002B98  ECA2  F01E         	call	___flmul	;wreg free
 12893   002B9C  C01F  F089         	movff	?___flmul,efgtoa@ou
 12894   002BA0  C020  F08A         	movff	?___flmul+1,efgtoa@ou+1
 12895   002BA4  C021  F08B         	movff	?___flmul+2,efgtoa@ou+2
 12896   002BA8  C022  F08C         	movff	?___flmul+3,efgtoa@ou+3
 12897   002BAC                     
 12898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 12899   002BAC  0E66               	movlw	102
 12900   002BAE  0100               	movlb	0	; () banked
 12901   002BB0  1980               	xorwf	efgtoa@nmode& (0+255),w,b
 12902   002BB2  A4D8               	btfss	status,2,c
 12903   002BB4  EFDE  F015         	goto	u9291
 12904   002BB8  EFE0  F015         	goto	u9290
 12905   002BBC                     u9291:
 12906   002BBC  EFE2  F015         	goto	l7335
 12907   002BC0                     u9290:
 12908   002BC0                     
 12909                           ; BSR set to: 0
 12910                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 12911   002BC0  4B83               	infsnz	efgtoa@m& (0+255),f,b
 12912   002BC2  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
 12913   002BC4                     l7335:
 12914                           
 12915                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 12916   002BC4  C089  F09E         	movff	efgtoa@ou,efgtoa@u
 12917   002BC8  C08A  F09F         	movff	efgtoa@ou+1,efgtoa@u+1
 12918   002BCC  C08B  F0A0         	movff	efgtoa@ou+2,efgtoa@u+2
 12919   002BD0  C08C  F0A1         	movff	efgtoa@ou+3,efgtoa@u+3
 12920   002BD4                     
 12921                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 12922   002BD4  C085  F076         	movff	efgtoa@e,efgtoa@ne
 12923   002BD8  C086  F077         	movff	efgtoa@e+1,efgtoa@ne+1
 12924   002BDC                     
 12925                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 12926   002BDC  0100               	movlb	0	; () banked
 12927   002BDE  6B7E               	clrf	efgtoa@pp& (0+255),b
 12928   002BE0                     
 12929                           ; BSR set to: 0
 12930                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 12931   002BE0  0E00               	movlw	0
 12932   002BE2  6F7B               	movwf	(efgtoa@t+1)& (0+255),b
 12933   002BE4  0E00               	movlw	0
 12934   002BE6  6F7A               	movwf	efgtoa@t& (0+255),b
 12935   002BE8                     
 12936                           ; BSR set to: 0
 12937                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 12938   002BE8  0E00               	movlw	0
 12939   002BEA  6F8E               	movwf	(efgtoa@i+1)& (0+255),b
 12940   002BEC  0E00               	movlw	0
 12941   002BEE  6F8D               	movwf	efgtoa@i& (0+255),b
 12942                           
 12943                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12944   002BF0  EFDF  F016         	goto	l7385
 12945   002BF4                     l7345:
 12946                           
 12947                           ; BSR set to: 0
 12948                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 12949   002BF4  C08F  F040         	movff	efgtoa@h,___fldiv@b
 12950   002BF8  C090  F041         	movff	efgtoa@h+1,___fldiv@b+1
 12951   002BFC  C091  F042         	movff	efgtoa@h+2,___fldiv@b+2
 12952   002C00  C092  F043         	movff	efgtoa@h+3,___fldiv@b+3
 12953   002C04  C09E  F044         	movff	efgtoa@u,___fldiv@a
 12954   002C08  C09F  F045         	movff	efgtoa@u+1,___fldiv@a+1
 12955   002C0C  C0A0  F046         	movff	efgtoa@u+2,___fldiv@a+2
 12956   002C10  C0A1  F047         	movff	efgtoa@u+3,___fldiv@a+3
 12957   002C14  ECA4  F022         	call	___fldiv	;wreg free
 12958   002C18  C040  F059         	movff	?___fldiv,floorf@x
 12959   002C1C  C041  F05A         	movff	?___fldiv+1,floorf@x+1
 12960   002C20  C042  F05B         	movff	?___fldiv+2,floorf@x+2
 12961   002C24  C043  F05C         	movff	?___fldiv+3,floorf@x+3
 12962   002C28  EC73  F028         	call	_floorf	;wreg free
 12963   002C2C  C059  F093         	movff	?_floorf,efgtoa@l
 12964   002C30  C05A  F094         	movff	?_floorf+1,efgtoa@l+1
 12965   002C34  C05B  F095         	movff	?_floorf+2,efgtoa@l+2
 12966   002C38  C05C  F096         	movff	?_floorf+3,efgtoa@l+3
 12967                           
 12968                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 12969   002C3C  C093  F001         	movff	efgtoa@l,___fltol@f1
 12970   002C40  C094  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12971   002C44  C095  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12972   002C48  C096  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12973   002C4C  EC37  F031         	call	___fltol	;wreg free
 12974   002C50  BE02               	btfsc	(?___fltol+1)^0,7,c
 12975   002C52  EF36  F016         	goto	u9300
 12976   002C56  5002               	movf	(?___fltol+1)^0,w,c
 12977   002C58  E107               	bnz	u9301
 12978   002C5A  0E0A               	movlw	10
 12979   002C5C  5C01               	subwf	?___fltol^0,w,c
 12980   002C5E  B0D8               	btfsc	status,0,c
 12981   002C60  EF34  F016         	goto	u9301
 12982   002C64  EF36  F016         	goto	u9300
 12983   002C68                     u9301:
 12984   002C68  EF46  F016         	goto	l7349
 12985   002C6C                     u9300:
 12986   002C6C  C093  F001         	movff	efgtoa@l,___fltol@f1
 12987   002C70  C094  F002         	movff	efgtoa@l+1,___fltol@f1+1
 12988   002C74  C095  F003         	movff	efgtoa@l+2,___fltol@f1+2
 12989   002C78  C096  F004         	movff	efgtoa@l+3,___fltol@f1+3
 12990   002C7C  EC37  F031         	call	___fltol	;wreg free
 12991   002C80  C001  F081         	movff	?___fltol,efgtoa@d
 12992   002C84  C002  F082         	movff	?___fltol+1,efgtoa@d+1
 12993   002C88  EF4B  F016         	goto	l1121
 12994   002C8C                     l7349:
 12995   002C8C  0E00               	movlw	0
 12996   002C8E  0100               	movlb	0	; () banked
 12997   002C90  6F82               	movwf	(efgtoa@d+1)& (0+255),b
 12998   002C92  0E09               	movlw	9
 12999   002C94  6F81               	movwf	efgtoa@d& (0+255),b
 13000   002C96                     l1121:
 13001                           
 13002                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 13003   002C96  0100               	movlb	0	; () banked
 13004   002C98  517E               	movf	efgtoa@pp& (0+255),w,b
 13005   002C9A  A4D8               	btfss	status,2,c
 13006   002C9C  EF52  F016         	goto	u9311
 13007   002CA0  EF54  F016         	goto	u9310
 13008   002CA4                     u9311:
 13009   002CA4  EF7C  F016         	goto	l7369
 13010   002CA8                     u9310:
 13011   002CA8                     
 13012                           ; BSR set to: 0
 13013   002CA8  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 13014   002CAA  EF5B  F016         	goto	u9320
 13015   002CAE  EF59  F016         	goto	u9321
 13016   002CB2                     u9321:
 13017   002CB2  EF7C  F016         	goto	l7369
 13018   002CB6                     u9320:
 13019   002CB6                     
 13020                           ; BSR set to: 0
 13021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 13022   002CB6  0E65               	movlw	low _dbuf
 13023   002CB8  259C               	addwf	efgtoa@n& (0+255),w,b
 13024   002CBA  6ED9               	movwf	fsr2l,c
 13025   002CBC  0E02               	movlw	high _dbuf
 13026   002CBE  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13027   002CC0  6EDA               	movwf	fsr2h,c
 13028   002CC2  0E2E               	movlw	46
 13029   002CC4  6EDF               	movwf	indf2,c
 13030   002CC6                     
 13031                           ; BSR set to: 0
 13032   002CC6  4B9C               	infsnz	efgtoa@n& (0+255),f,b
 13033   002CC8  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
 13034   002CCA                     
 13035                           ; BSR set to: 0
 13036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 13037   002CCA  0787               	decf	efgtoa@w& (0+255),f,b
 13038   002CCC  A0D8               	btfss	status,0,c
 13039   002CCE  0788               	decf	(efgtoa@w+1)& (0+255),f,b
 13040   002CD0                     
 13041                           ; BSR set to: 0
 13042                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 13043   002CD0  0E01               	movlw	1
 13044   002CD2  6F7E               	movwf	efgtoa@pp& (0+255),b
 13045   002CD4  EF7C  F016         	goto	l7369
 13046   002CD8                     l7361:
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 13050   002CD8  0E65               	movlw	low _dbuf
 13051   002CDA  259C               	addwf	efgtoa@n& (0+255),w,b
 13052   002CDC  6ED9               	movwf	fsr2l,c
 13053   002CDE  0E02               	movlw	high _dbuf
 13054   002CE0  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13055   002CE2  6EDA               	movwf	fsr2h,c
 13056   002CE4  0E30               	movlw	48
 13057   002CE6  6EDF               	movwf	indf2,c
 13058   002CE8                     
 13059                           ; BSR set to: 0
 13060   002CE8  4B9C               	infsnz	efgtoa@n& (0+255),f,b
 13061   002CEA  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
 13062   002CEC                     
 13063                           ; BSR set to: 0
 13064                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 13065   002CEC  0787               	decf	efgtoa@w& (0+255),f,b
 13066   002CEE  A0D8               	btfss	status,0,c
 13067   002CF0  0788               	decf	(efgtoa@w+1)& (0+255),f,b
 13068   002CF2                     
 13069                           ; BSR set to: 0
 13070                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 13071   002CF2  077A               	decf	efgtoa@t& (0+255),f,b
 13072   002CF4  A0D8               	btfss	status,0,c
 13073   002CF6  077B               	decf	(efgtoa@t+1)& (0+255),f,b
 13074   002CF8                     l7369:
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 13078   002CF8  517A               	movf	efgtoa@t& (0+255),w,b
 13079   002CFA  117B               	iorwf	(efgtoa@t+1)& (0+255),w,b
 13080   002CFC  A4D8               	btfss	status,2,c
 13081   002CFE  EF83  F016         	goto	u9331
 13082   002D02  EF85  F016         	goto	u9330
 13083   002D06                     u9331:
 13084   002D06  EF6C  F016         	goto	l7361
 13085   002D0A                     u9330:
 13086   002D0A                     
 13087                           ; BSR set to: 0
 13088                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 13089   002D0A  0E65               	movlw	low _dbuf
 13090   002D0C  259C               	addwf	efgtoa@n& (0+255),w,b
 13091   002D0E  6ED9               	movwf	fsr2l,c
 13092   002D10  0E02               	movlw	high _dbuf
 13093   002D12  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13094   002D14  6EDA               	movwf	fsr2h,c
 13095   002D16  5181               	movf	efgtoa@d& (0+255),w,b
 13096   002D18  0F30               	addlw	48
 13097   002D1A  6EDF               	movwf	indf2,c
 13098   002D1C                     
 13099                           ; BSR set to: 0
 13100   002D1C  4B9C               	infsnz	efgtoa@n& (0+255),f,b
 13101   002D1E  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
 13102   002D20                     
 13103                           ; BSR set to: 0
 13104                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 13105   002D20  0787               	decf	efgtoa@w& (0+255),f,b
 13106   002D22  A0D8               	btfss	status,0,c
 13107   002D24  0788               	decf	(efgtoa@w+1)& (0+255),f,b
 13108   002D26                     
 13109                           ; BSR set to: 0
 13110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 13111   002D26  C08F  F038         	movff	efgtoa@h,___flsub@b
 13112   002D2A  C090  F039         	movff	efgtoa@h+1,___flsub@b+1
 13113   002D2E  C091  F03A         	movff	efgtoa@h+2,___flsub@b+2
 13114   002D32  C092  F03B         	movff	efgtoa@h+3,___flsub@b+3
 13115   002D36  C093  F023         	movff	efgtoa@l,___flmul@a
 13116   002D3A  C094  F024         	movff	efgtoa@l+1,___flmul@a+1
 13117   002D3E  C095  F025         	movff	efgtoa@l+2,___flmul@a+2
 13118   002D42  C096  F026         	movff	efgtoa@l+3,___flmul@a+3
 13119   002D46  C09E  F01F         	movff	efgtoa@u,___flmul@b
 13120   002D4A  C09F  F020         	movff	efgtoa@u+1,___flmul@b+1
 13121   002D4E  C0A0  F021         	movff	efgtoa@u+2,___flmul@b+2
 13122   002D52  C0A1  F022         	movff	efgtoa@u+3,___flmul@b+3
 13123   002D56  ECA2  F01E         	call	___flmul	;wreg free
 13124   002D5A  C01F  F03C         	movff	?___flmul,___flsub@a
 13125   002D5E  C020  F03D         	movff	?___flmul+1,___flsub@a+1
 13126   002D62  C021  F03E         	movff	?___flmul+2,___flsub@a+2
 13127   002D66  C022  F03F         	movff	?___flmul+3,___flsub@a+3
 13128   002D6A  EC02  F038         	call	___flsub	;wreg free
 13129   002D6E  C038  F08F         	movff	?___flsub,efgtoa@h
 13130   002D72  C039  F090         	movff	?___flsub+1,efgtoa@h+1
 13131   002D76  C03A  F091         	movff	?___flsub+2,efgtoa@h+2
 13132   002D7A  C03B  F092         	movff	?___flsub+3,efgtoa@h+3
 13133   002D7E                     
 13134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 13135   002D7E  C09E  F040         	movff	efgtoa@u,___fldiv@b
 13136   002D82  C09F  F041         	movff	efgtoa@u+1,___fldiv@b+1
 13137   002D86  C0A0  F042         	movff	efgtoa@u+2,___fldiv@b+2
 13138   002D8A  C0A1  F043         	movff	efgtoa@u+3,___fldiv@b+3
 13139   002D8E  0E00               	movlw	0
 13140   002D90  6E44               	movwf	___fldiv@a^0,c
 13141   002D92  0E00               	movlw	0
 13142   002D94  6E45               	movwf	(___fldiv@a+1)^0,c
 13143   002D96  0E20               	movlw	32
 13144   002D98  6E46               	movwf	(___fldiv@a+2)^0,c
 13145   002D9A  0E41               	movlw	65
 13146   002D9C  6E47               	movwf	(___fldiv@a+3)^0,c
 13147   002D9E  ECA4  F022         	call	___fldiv	;wreg free
 13148   002DA2  C040  F09E         	movff	?___fldiv,efgtoa@u
 13149   002DA6  C041  F09F         	movff	?___fldiv+1,efgtoa@u+1
 13150   002DAA  C042  F0A0         	movff	?___fldiv+2,efgtoa@u+2
 13151   002DAE  C043  F0A1         	movff	?___fldiv+3,efgtoa@u+3
 13152   002DB2                     
 13153                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 13154   002DB2  0100               	movlb	0	; () banked
 13155   002DB4  0776               	decf	efgtoa@ne& (0+255),f,b
 13156   002DB6  A0D8               	btfss	status,0,c
 13157   002DB8  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
 13158   002DBA                     
 13159                           ; BSR set to: 0
 13160                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 13161   002DBA  4B8D               	infsnz	efgtoa@i& (0+255),f,b
 13162   002DBC  2B8E               	incf	(efgtoa@i+1)& (0+255),f,b
 13163   002DBE                     l7385:
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 13167   002DBE  5183               	movf	efgtoa@m& (0+255),w,b
 13168   002DC0  5D8D               	subwf	efgtoa@i& (0+255),w,b
 13169   002DC2  518E               	movf	(efgtoa@i+1)& (0+255),w,b
 13170   002DC4  0A80               	xorlw	128
 13171   002DC6  6E5D               	movwf	??_efgtoa^0,c
 13172   002DC8  5184               	movf	(efgtoa@m+1)& (0+255),w,b
 13173   002DCA  0A80               	xorlw	128
 13174   002DCC  585D               	subwfb	??_efgtoa^0,w,c
 13175   002DCE  B0D8               	btfsc	status,0,c
 13176   002DD0  EFEC  F016         	goto	u9341
 13177   002DD4  EFEE  F016         	goto	u9340
 13178   002DD8                     u9341:
 13179   002DD8  EFFC  F016         	goto	l7389
 13180   002DDC                     u9340:
 13181   002DDC                     
 13182                           ; BSR set to: 0
 13183   002DDC  BF9D               	btfsc	(efgtoa@n+1)& (0+255),7,b
 13184   002DDE  EFFA  F016         	goto	u9351
 13185   002DE2  519D               	movf	(efgtoa@n+1)& (0+255),w,b
 13186   002DE4  E109               	bnz	u9350
 13187   002DE6  0E4B               	movlw	75
 13188   002DE8  5D9C               	subwf	efgtoa@n& (0+255),w,b
 13189   002DEA  A0D8               	btfss	status,0,c
 13190   002DEC  EFFA  F016         	goto	u9351
 13191   002DF0  EFFC  F016         	goto	u9350
 13192   002DF4                     u9351:
 13193   002DF4  EFFA  F015         	goto	l7345
 13194   002DF8                     u9350:
 13195   002DF8                     l7389:
 13196                           
 13197                           ; BSR set to: 0
 13198                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 13199   002DF8  0E00               	movlw	0
 13200   002DFA  6F8E               	movwf	(efgtoa@i+1)& (0+255),b
 13201   002DFC  0E4F               	movlw	79
 13202   002DFE  6F8D               	movwf	efgtoa@i& (0+255),b
 13203   002E00                     
 13204                           ; BSR set to: 0
 13205                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 13206   002E00  0E65               	movlw	low _dbuf
 13207   002E02  258D               	addwf	efgtoa@i& (0+255),w,b
 13208   002E04  6ED9               	movwf	fsr2l,c
 13209   002E06  0E02               	movlw	high _dbuf
 13210   002E08  218E               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13211   002E0A  6EDA               	movwf	fsr2h,c
 13212   002E0C  6ADF               	clrf	indf2,c
 13213   002E0E                     
 13214                           ; BSR set to: 0
 13215                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 13216   002E0E  0E65               	movlw	low _dbuf
 13217   002E10  6E5D               	movwf	??_efgtoa^0,c
 13218   002E12  0E02               	movlw	high _dbuf
 13219   002E14  6E5E               	movwf	(??_efgtoa+1)^0,c
 13220   002E16  519C               	movf	efgtoa@n& (0+255),w,b
 13221   002E18  5E5D               	subwf	??_efgtoa^0,f,c
 13222   002E1A  519D               	movf	(efgtoa@n+1)& (0+255),w,b
 13223   002E1C  5A5E               	subwfb	(??_efgtoa+1)^0,f,c
 13224   002E1E  518D               	movf	efgtoa@i& (0+255),w,b
 13225   002E20  245D               	addwf	??_efgtoa^0,w,c
 13226   002E22  6E01               	movwf	memcpy@d1^0,c
 13227   002E24  518E               	movf	(efgtoa@i+1)& (0+255),w,b
 13228   002E26  205E               	addwfc	(??_efgtoa+1)^0,w,c
 13229   002E28  6E02               	movwf	(memcpy@d1+1)^0,c
 13230   002E2A  0E65               	movlw	low _dbuf
 13231   002E2C  6E03               	movwf	memcpy@s1^0,c
 13232   002E2E  0E02               	movlw	high _dbuf
 13233   002E30  6E04               	movwf	(memcpy@s1+1)^0,c
 13234   002E32  C09C  F005         	movff	efgtoa@n,memcpy@n
 13235   002E36  C09D  F006         	movff	efgtoa@n+1,memcpy@n+1
 13236   002E3A  ECB6  F037         	call	_memcpy	;wreg free
 13237   002E3E                     
 13238                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 13239   002E3E  0100               	movlb	0	; () banked
 13240   002E40  519C               	movf	efgtoa@n& (0+255),w,b
 13241   002E42  5D8D               	subwf	efgtoa@i& (0+255),w,b
 13242   002E44  6F9C               	movwf	efgtoa@n& (0+255),b
 13243   002E46  519D               	movf	(efgtoa@n+1)& (0+255),w,b
 13244   002E48  598E               	subwfb	(efgtoa@i+1)& (0+255),w,b
 13245   002E4A  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
 13246   002E4C                     
 13247                           ; BSR set to: 0
 13248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 13249   002E4C  5197               	movf	efgtoa@sign& (0+255),w,b
 13250   002E4E  A4D8               	btfss	status,2,c
 13251   002E50  EF2C  F017         	goto	u9361
 13252   002E54  EF2F  F017         	goto	u9360
 13253   002E58                     u9361:
 13254   002E58  0E01               	movlw	1
 13255   002E5A  EF30  F017         	goto	u9370
 13256   002E5E                     u9360:
 13257   002E5E  0E00               	movlw	0
 13258   002E60                     u9370:
 13259   002E60  6F8D               	movwf	efgtoa@i& (0+255),b
 13260   002E62  6B8E               	clrf	(efgtoa@i+1)& (0+255),b
 13261   002E64                     
 13262                           ; BSR set to: 0
 13263                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 13264   002E64  5197               	movf	efgtoa@sign& (0+255),w,b
 13265   002E66  B4D8               	btfsc	status,2,c
 13266   002E68  EF38  F017         	goto	u9381
 13267   002E6C  EF3A  F017         	goto	u9380
 13268   002E70                     u9381:
 13269   002E70  EF45  F017         	goto	l7403
 13270   002E74                     u9380:
 13271   002E74                     
 13272                           ; BSR set to: 0
 13273                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 13274   002E74  079C               	decf	efgtoa@n& (0+255),f,b
 13275   002E76  A0D8               	btfss	status,0,c
 13276   002E78  079D               	decf	(efgtoa@n+1)& (0+255),f,b
 13277   002E7A  0E65               	movlw	low _dbuf
 13278   002E7C  259C               	addwf	efgtoa@n& (0+255),w,b
 13279   002E7E  6ED9               	movwf	fsr2l,c
 13280   002E80  0E02               	movlw	high _dbuf
 13281   002E82  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13282   002E84  6EDA               	movwf	fsr2h,c
 13283   002E86  C097  FFDF         	movff	efgtoa@sign,indf2
 13284   002E8A                     l7403:
 13285                           
 13286                           ; BSR set to: 0
 13287                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 13288   002E8A  518D               	movf	efgtoa@i& (0+255),w,b
 13289   002E8C  5F87               	subwf	efgtoa@w& (0+255),f,b
 13290   002E8E  518E               	movf	(efgtoa@i+1)& (0+255),w,b
 13291   002E90  5B88               	subwfb	(efgtoa@w+1)& (0+255),f,b
 13292   002E92                     
 13293                           ; BSR set to: 0
 13294                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 13295   002E92  C070  F00F         	movff	efgtoa@fp,pad@fp
 13296   002E96  0E65               	movlw	low _dbuf
 13297   002E98  259C               	addwf	efgtoa@n& (0+255),w,b
 13298   002E9A  6E10               	movwf	pad@buf^0,c
 13299   002E9C  0E02               	movlw	high _dbuf
 13300   002E9E  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13301   002EA0  6E11               	movwf	(pad@buf+1)^0,c
 13302   002EA2  C087  F012         	movff	efgtoa@w,pad@p
 13303   002EA6  C088  F013         	movff	efgtoa@w+1,pad@p+1
 13304   002EAA  EC2F  F037         	call	_pad	;wreg free
 13305   002EAE                     l1088:
 13306   002EAE  0012               	return		;funcret
 13307   002EB0                     __end_of_efgtoa:
 13308                           	callstack 0
 13309                           
 13310 ;; *************** function _strcpy *****************
 13311 ;; Defined at:
 13312 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;  dest            2    0[COMRAM] PTR unsigned char 
 13315 ;;		 -> dbuf(80), 
 13316 ;;  src             2    2[COMRAM] PTR const unsigned char 
 13317 ;;		 -> STR_18(4), STR_15(4), 
 13318 ;; Auto vars:     Size  Location     Type
 13319 ;;  d               2    4[COMRAM] PTR unsigned char 
 13320 ;;		 -> dbuf(80), 
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  2    0[COMRAM] PTR unsigned char 
 13323 ;; Registers used:
 13324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13325 ;; Tracked objects:
 13326 ;;		On entry : 0/0
 13327 ;;		On exit  : 0/0
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13330 ;;      Params:         4       0       0       0       0       0       0       0       0
 13331 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13332 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13333 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13334 ;;Total ram usage:        6 bytes
 13335 ;; Hardware stack levels used: 1
 13336 ;; Hardware stack levels required when called: 1
 13337 ;; This function calls:
 13338 ;;		Nothing
 13339 ;; This function is called by:
 13340 ;;		_efgtoa
 13341 ;; This function uses a non-reentrant model
 13342 ;;
 13343                           
 13344                           	psect	text31
 13345   007110                     __ptext31:
 13346                           	callstack 0
 13347   007110                     _strcpy:
 13348                           	callstack 23
 13349   007110  C001  F005         	movff	strcpy@dest,strcpy@d
 13350   007114  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
 13351   007118                     l7095:
 13352   007118  C003  FFF6         	movff	strcpy@src,tblptrl
 13353   00711C  C004  FFF7         	movff	strcpy@src+1,tblptrh
 13354   007120  4A03               	infsnz	strcpy@src^0,f,c
 13355   007122  2A04               	incf	(strcpy@src+1)^0,f,c
 13356   007124                     	if	0	;tblptru may be non-zero
 13357   007124                     	endif
 13358   007124                     	if	0	;tblptru may be non-zero
 13359   007124                     	endif
 13360   007124  C005  FFD9         	movff	strcpy@d,fsr2l
 13361   007128  C006  FFDA         	movff	strcpy@d+1,fsr2h
 13362   00712C  4A05               	infsnz	strcpy@d^0,f,c
 13363   00712E  2A06               	incf	(strcpy@d+1)^0,f,c
 13364   007130  0008               	tblrd		*
 13365   007132  CFF5 FFDF          	movff	tablat,indf2
 13366   007136  50DF               	movf	indf2,w,c
 13367   007138  A4D8               	btfss	status,2,c
 13368   00713A  EFA1  F038         	goto	u8851
 13369   00713E  EFA3  F038         	goto	u8850
 13370   007142                     u8851:
 13371   007142  EF8C  F038         	goto	l7095
 13372   007146                     u8850:
 13373   007146  0012               	return		;funcret
 13374   007148                     __end_of_strcpy:
 13375                           	callstack 0
 13376                           
 13377 ;; *************** function _memcpy *****************
 13378 ;; Defined at:
 13379 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;  d1              2    0[COMRAM] PTR void 
 13382 ;;		 -> dbuf(80), 
 13383 ;;  s1              2    2[COMRAM] PTR const void 
 13384 ;;		 -> dbuf(80), 
 13385 ;;  n               2    4[COMRAM] unsigned int 
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;  s               2    9[COMRAM] PTR const unsigned char 
 13388 ;;		 -> dbuf(80), 
 13389 ;;  d               2    7[COMRAM] PTR unsigned char 
 13390 ;;		 -> dbuf(80), 
 13391 ;;  tmp             1    6[COMRAM] unsigned char 
 13392 ;; Return value:  Size  Location     Type
 13393 ;;                  2    0[COMRAM] PTR void 
 13394 ;; Registers used:
 13395 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13396 ;; Tracked objects:
 13397 ;;		On entry : 0/0
 13398 ;;		On exit  : 0/0
 13399 ;;		Unchanged: 0/0
 13400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13401 ;;      Params:         6       0       0       0       0       0       0       0       0
 13402 ;;      Locals:         5       0       0       0       0       0       0       0       0
 13403 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13404 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13405 ;;Total ram usage:       11 bytes
 13406 ;; Hardware stack levels used: 1
 13407 ;; Hardware stack levels required when called: 1
 13408 ;; This function calls:
 13409 ;;		Nothing
 13410 ;; This function is called by:
 13411 ;;		_efgtoa
 13412 ;; This function uses a non-reentrant model
 13413 ;;
 13414                           
 13415                           	psect	text32
 13416   006F6C                     __ptext32:
 13417                           	callstack 0
 13418   006F6C                     _memcpy:
 13419                           	callstack 23
 13420   006F6C  C003  F00A         	movff	memcpy@s1,memcpy@s
 13421   006F70  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
 13422   006F74  C001  F008         	movff	memcpy@d1,memcpy@d
 13423   006F78  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
 13424   006F7C  EFD0  F037         	goto	l7143
 13425   006F80                     l7135:
 13426   006F80  C00A  FFD9         	movff	memcpy@s,fsr2l
 13427   006F84  C00B  FFDA         	movff	memcpy@s+1,fsr2h
 13428   006F88  50DF               	movf	indf2,w,c
 13429   006F8A  6E07               	movwf	memcpy@tmp^0,c
 13430   006F8C  4A0A               	infsnz	memcpy@s^0,f,c
 13431   006F8E  2A0B               	incf	(memcpy@s+1)^0,f,c
 13432   006F90  C008  FFD9         	movff	memcpy@d,fsr2l
 13433   006F94  C009  FFDA         	movff	memcpy@d+1,fsr2h
 13434   006F98  C007  FFDF         	movff	memcpy@tmp,indf2
 13435   006F9C  4A08               	infsnz	memcpy@d^0,f,c
 13436   006F9E  2A09               	incf	(memcpy@d+1)^0,f,c
 13437   006FA0                     l7143:
 13438   006FA0  0605               	decf	memcpy@n^0,f,c
 13439   006FA2  A0D8               	btfss	status,0,c
 13440   006FA4  0606               	decf	(memcpy@n+1)^0,f,c
 13441   006FA6  2805               	incf	memcpy@n^0,w,c
 13442   006FA8  E106               	bnz	u8971
 13443   006FAA  2806               	incf	(memcpy@n+1)^0,w,c
 13444   006FAC  A4D8               	btfss	status,2,c
 13445   006FAE  EFDB  F037         	goto	u8971
 13446   006FB2  EFDD  F037         	goto	u8970
 13447   006FB6                     u8971:
 13448   006FB6  EFC0  F037         	goto	l7135
 13449   006FBA                     u8970:
 13450   006FBA  0012               	return		;funcret
 13451   006FBC                     __end_of_memcpy:
 13452                           	callstack 0
 13453                           
 13454 ;; *************** function _labs *****************
 13455 ;; Defined at:
 13456 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
 13457 ;; Parameters:    Size  Location     Type
 13458 ;;  a               4    0[COMRAM] long 
 13459 ;; Auto vars:     Size  Location     Type
 13460 ;;		None
 13461 ;; Return value:  Size  Location     Type
 13462 ;;                  4    0[COMRAM] long 
 13463 ;; Registers used:
 13464 ;;		wreg, status,2, status,0
 13465 ;; Tracked objects:
 13466 ;;		On entry : 0/0
 13467 ;;		On exit  : 0/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13470 ;;      Params:         4       0       0       0       0       0       0       0       0
 13471 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13472 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13473 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13474 ;;Total ram usage:        8 bytes
 13475 ;; Hardware stack levels used: 1
 13476 ;; Hardware stack levels required when called: 1
 13477 ;; This function calls:
 13478 ;;		Nothing
 13479 ;; This function is called by:
 13480 ;;		_efgtoa
 13481 ;; This function uses a non-reentrant model
 13482 ;;
 13483                           
 13484                           	psect	text33
 13485   006EC4                     __ptext33:
 13486                           	callstack 0
 13487   006EC4                     _labs:
 13488                           	callstack 23
 13489   006EC4  BE04               	btfsc	(labs@a+3)^0,7,c
 13490   006EC6  EF67  F037         	goto	u8861
 13491   006ECA  EF69  F037         	goto	u8860
 13492   006ECE                     u8861:
 13493   006ECE  EF73  F037         	goto	l7101
 13494   006ED2                     u8860:
 13495   006ED2  C001  F001         	movff	labs@a,?_labs
 13496   006ED6  C002  F002         	movff	labs@a+1,?_labs+1
 13497   006EDA  C003  F003         	movff	labs@a+2,?_labs+2
 13498   006EDE  C004  F004         	movff	labs@a+3,?_labs+3
 13499   006EE2  EF8C  F037         	goto	l1254
 13500   006EE6                     l7101:
 13501   006EE6  C001  F005         	movff	labs@a,??_labs
 13502   006EEA  C002  F006         	movff	labs@a+1,??_labs+1
 13503   006EEE  C003  F007         	movff	labs@a+2,??_labs+2
 13504   006EF2  C004  F008         	movff	labs@a+3,??_labs+3
 13505   006EF6  1E05               	comf	??_labs^0,f,c
 13506   006EF8  1E06               	comf	(??_labs+1)^0,f,c
 13507   006EFA  1E07               	comf	(??_labs+2)^0,f,c
 13508   006EFC  1E08               	comf	(??_labs+3)^0,f,c
 13509   006EFE  2A05               	incf	??_labs^0,f,c
 13510   006F00  0E00               	movlw	0
 13511   006F02  2206               	addwfc	(??_labs+1)^0,f,c
 13512   006F04  2207               	addwfc	(??_labs+2)^0,f,c
 13513   006F06  2208               	addwfc	(??_labs+3)^0,f,c
 13514   006F08  C005  F001         	movff	??_labs,?_labs
 13515   006F0C  C006  F002         	movff	??_labs+1,?_labs+1
 13516   006F10  C007  F003         	movff	??_labs+2,?_labs+2
 13517   006F14  C008  F004         	movff	??_labs+3,?_labs+3
 13518   006F18                     l1254:
 13519   006F18  0012               	return		;funcret
 13520   006F1A                     __end_of_labs:
 13521                           	callstack 0
 13522                           
 13523 ;; *************** function _floorf *****************
 13524 ;; Defined at:
 13525 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
 13526 ;; Parameters:    Size  Location     Type
 13527 ;;  x               4   88[COMRAM] float 
 13528 ;; Auto vars:     Size  Location     Type
 13529 ;;  u               4   12[BANK0 ] struct .
 13530 ;;  m               4    6[BANK0 ] unsigned long 
 13531 ;;  e               2   10[BANK0 ] int 
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  4   88[COMRAM] float 
 13534 ;; Registers used:
 13535 ;;		wreg, status,2, status,0
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13541 ;;      Params:         4       0       0       0       0       0       0       0       0
 13542 ;;      Locals:         0      10       0       0       0       0       0       0       0
 13543 ;;      Temps:          0       6       0       0       0       0       0       0       0
 13544 ;;      Totals:         4      16       0       0       0       0       0       0       0
 13545 ;;Total ram usage:       20 bytes
 13546 ;; Hardware stack levels used: 1
 13547 ;; Hardware stack levels required when called: 1
 13548 ;; This function calls:
 13549 ;;		Nothing
 13550 ;; This function is called by:
 13551 ;;		_efgtoa
 13552 ;; This function uses a non-reentrant model
 13553 ;;
 13554                           
 13555                           	psect	text34
 13556   0050E6                     __ptext34:
 13557                           	callstack 0
 13558   0050E6                     _floorf:
 13559                           	callstack 23
 13560   0050E6  C251  F06C         	movff	floorf@F521,floorf@u
 13561   0050EA  C252  F06D         	movff	floorf@F521+1,floorf@u+1
 13562   0050EE  C253  F06E         	movff	floorf@F521+2,floorf@u+2
 13563   0050F2  C254  F06F         	movff	floorf@F521+3,floorf@u+3
 13564   0050F6  C059  F06C         	movff	floorf@x,floorf@u
 13565   0050FA  C05A  F06D         	movff	floorf@x+1,floorf@u+1
 13566   0050FE  C05B  F06E         	movff	floorf@x+2,floorf@u+2
 13567   005102  C05C  F06F         	movff	floorf@x+3,floorf@u+3
 13568   005106  0E81               	movlw	129
 13569   005108  0100               	movlb	0	; () banked
 13570   00510A  6F60               	movwf	??_floorf& (0+255),b
 13571   00510C  0EFF               	movlw	255
 13572   00510E  6F61               	movwf	(??_floorf+1)& (0+255),b
 13573   005110  C06C  F062         	movff	floorf@u,??_floorf+2
 13574   005114  C06D  F063         	movff	floorf@u+1,??_floorf+3
 13575   005118  C06E  F064         	movff	floorf@u+2,??_floorf+4
 13576   00511C  C06F  F065         	movff	floorf@u+3,??_floorf+5
 13577   005120  0E18               	movlw	24
 13578   005122  EF98  F028         	goto	u8870
 13579   005126                     u8875:
 13580   005126  90D8               	bcf	status,0,c
 13581   005128  3365               	rrcf	(??_floorf+5)& (0+255),f,b
 13582   00512A  3364               	rrcf	(??_floorf+4)& (0+255),f,b
 13583   00512C  3363               	rrcf	(??_floorf+3)& (0+255),f,b
 13584   00512E  3362               	rrcf	(??_floorf+2)& (0+255),f,b
 13585   005130                     u8870:
 13586   005130  2EE8               	decfsz	wreg,f,c
 13587   005132  EF93  F028         	goto	u8875
 13588   005136  5162               	movf	(??_floorf+2)& (0+255),w,b
 13589   005138  2560               	addwf	??_floorf& (0+255),w,b
 13590   00513A  6F6A               	movwf	floorf@e& (0+255),b
 13591   00513C  0E00               	movlw	0
 13592   00513E  2161               	addwfc	(??_floorf+1)& (0+255),w,b
 13593   005140  6F6B               	movwf	(floorf@e+1)& (0+255),b
 13594   005142  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
 13595   005144  EFAD  F028         	goto	u8881
 13596   005148  516B               	movf	(floorf@e+1)& (0+255),w,b
 13597   00514A  E109               	bnz	u8880
 13598   00514C  0E17               	movlw	23
 13599   00514E  5D6A               	subwf	floorf@e& (0+255),w,b
 13600   005150  A0D8               	btfss	status,0,c
 13601   005152  EFAD  F028         	goto	u8881
 13602   005156  EFAF  F028         	goto	u8880
 13603   00515A                     u8881:
 13604   00515A  EFB9  F028         	goto	l7111
 13605   00515E                     u8880:
 13606   00515E                     l7109:
 13607                           
 13608                           ; BSR set to: 0
 13609   00515E  C059  F059         	movff	floorf@x,?_floorf
 13610   005162  C05A  F05A         	movff	floorf@x+1,?_floorf+1
 13611   005166  C05B  F05B         	movff	floorf@x+2,?_floorf+2
 13612   00516A  C05C  F05C         	movff	floorf@x+3,?_floorf+3
 13613   00516E  EF7D  F029         	goto	l1240
 13614   005172                     l7111:
 13615                           
 13616                           ; BSR set to: 0
 13617   005172  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
 13618   005174  EFBE  F028         	goto	u8891
 13619   005178  EFC0  F028         	goto	u8890
 13620   00517C                     u8891:
 13621   00517C  EF31  F029         	goto	l7121
 13622   005180                     u8890:
 13623   005180                     
 13624                           ; BSR set to: 0
 13625   005180  C06A  F060         	movff	floorf@e,??_floorf
 13626   005184  0EFF               	movlw	255
 13627   005186  6F61               	movwf	(??_floorf+1)& (0+255),b
 13628   005188  0EFF               	movlw	255
 13629   00518A  6F62               	movwf	(??_floorf+2)& (0+255),b
 13630   00518C  0E7F               	movlw	127
 13631   00518E  6F63               	movwf	(??_floorf+3)& (0+255),b
 13632   005190  0E00               	movlw	0
 13633   005192  6F64               	movwf	(??_floorf+4)& (0+255),b
 13634   005194                     u8905:
 13635   005194  6760               	tstfsz	??_floorf& (0+255),b
 13636   005196  EFCF  F028         	goto	u8906
 13637   00519A  EFD7  F028         	goto	u8907
 13638   00519E                     u8906:
 13639   00519E  3564               	rlcf	(??_floorf+4)& (0+255),w,b
 13640   0051A0  3364               	rrcf	(??_floorf+4)& (0+255),f,b
 13641   0051A2  3363               	rrcf	(??_floorf+3)& (0+255),f,b
 13642   0051A4  3362               	rrcf	(??_floorf+2)& (0+255),f,b
 13643   0051A6  3361               	rrcf	(??_floorf+1)& (0+255),f,b
 13644   0051A8  2F60               	decfsz	??_floorf& (0+255),f,b
 13645   0051AA  EFCA  F028         	goto	u8905
 13646   0051AE                     u8907:
 13647   0051AE  C061  F066         	movff	??_floorf+1,floorf@m
 13648   0051B2  C062  F067         	movff	??_floorf+2,floorf@m+1
 13649   0051B6  C063  F068         	movff	??_floorf+3,floorf@m+2
 13650   0051BA  C064  F069         	movff	??_floorf+4,floorf@m+3
 13651   0051BE  0100               	movlb	0	; () banked
 13652   0051C0  5166               	movf	floorf@m& (0+255),w,b
 13653   0051C2  156C               	andwf	floorf@u& (0+255),w,b
 13654   0051C4  6F60               	movwf	??_floorf& (0+255),b
 13655   0051C6  5167               	movf	(floorf@m+1)& (0+255),w,b
 13656   0051C8  156D               	andwf	(floorf@u+1)& (0+255),w,b
 13657   0051CA  6F61               	movwf	(??_floorf+1)& (0+255),b
 13658   0051CC  5168               	movf	(floorf@m+2)& (0+255),w,b
 13659   0051CE  156E               	andwf	(floorf@u+2)& (0+255),w,b
 13660   0051D0  6F62               	movwf	(??_floorf+2)& (0+255),b
 13661   0051D2  5169               	movf	(floorf@m+3)& (0+255),w,b
 13662   0051D4  156F               	andwf	(floorf@u+3)& (0+255),w,b
 13663   0051D6  6F63               	movwf	(??_floorf+3)& (0+255),b
 13664   0051D8  5160               	movf	??_floorf& (0+255),w,b
 13665   0051DA  1161               	iorwf	(??_floorf+1)& (0+255),w,b
 13666   0051DC  1162               	iorwf	(??_floorf+2)& (0+255),w,b
 13667   0051DE  1163               	iorwf	(??_floorf+3)& (0+255),w,b
 13668   0051E0  A4D8               	btfss	status,2,c
 13669   0051E2  EFF5  F028         	goto	u8911
 13670   0051E6  EFF7  F028         	goto	u8910
 13671   0051EA                     u8911:
 13672   0051EA  EFF9  F028         	goto	l7117
 13673   0051EE                     u8910:
 13674   0051EE  EFAF  F028         	goto	l7109
 13675   0051F2                     l7117:
 13676                           
 13677                           ; BSR set to: 0
 13678   0051F2  C06C  F060         	movff	floorf@u,??_floorf
 13679   0051F6  C06D  F061         	movff	floorf@u+1,??_floorf+1
 13680   0051FA  C06E  F062         	movff	floorf@u+2,??_floorf+2
 13681   0051FE  C06F  F063         	movff	floorf@u+3,??_floorf+3
 13682   005202  0E20               	movlw	32
 13683   005204  EF09  F029         	goto	u8920
 13684   005208                     u8925:
 13685   005208  90D8               	bcf	status,0,c
 13686   00520A  3363               	rrcf	(??_floorf+3)& (0+255),f,b
 13687   00520C  3362               	rrcf	(??_floorf+2)& (0+255),f,b
 13688   00520E  3361               	rrcf	(??_floorf+1)& (0+255),f,b
 13689   005210  3360               	rrcf	??_floorf& (0+255),f,b
 13690   005212                     u8920:
 13691   005212  2EE8               	decfsz	wreg,f,c
 13692   005214  EF04  F029         	goto	u8925
 13693   005218  5160               	movf	??_floorf& (0+255),w,b
 13694   00521A  1161               	iorwf	(??_floorf+1)& (0+255),w,b
 13695   00521C  1162               	iorwf	(??_floorf+2)& (0+255),w,b
 13696   00521E  1163               	iorwf	(??_floorf+3)& (0+255),w,b
 13697   005220  B4D8               	btfsc	status,2,c
 13698   005222  EF15  F029         	goto	u8931
 13699   005226  EF17  F029         	goto	u8930
 13700   00522A                     u8931:
 13701   00522A  EF1F  F029         	goto	l1243
 13702   00522E                     u8930:
 13703   00522E                     
 13704                           ; BSR set to: 0
 13705   00522E  5166               	movf	floorf@m& (0+255),w,b
 13706   005230  276C               	addwf	floorf@u& (0+255),f,b
 13707   005232  5167               	movf	(floorf@m+1)& (0+255),w,b
 13708   005234  236D               	addwfc	(floorf@u+1)& (0+255),f,b
 13709   005236  5168               	movf	(floorf@m+2)& (0+255),w,b
 13710   005238  236E               	addwfc	(floorf@u+2)& (0+255),f,b
 13711   00523A  5169               	movf	(floorf@m+3)& (0+255),w,b
 13712   00523C  236F               	addwfc	(floorf@u+3)& (0+255),f,b
 13713   00523E                     l1243:
 13714                           
 13715                           ; BSR set to: 0
 13716   00523E  1D66               	comf	floorf@m& (0+255),w,b
 13717   005240  6F60               	movwf	??_floorf& (0+255),b
 13718   005242  1D67               	comf	(floorf@m+1)& (0+255),w,b
 13719   005244  6F61               	movwf	(??_floorf+1)& (0+255),b
 13720   005246  1D68               	comf	(floorf@m+2)& (0+255),w,b
 13721   005248  6F62               	movwf	(??_floorf+2)& (0+255),b
 13722   00524A  1D69               	comf	(floorf@m+3)& (0+255),w,b
 13723   00524C  6F63               	movwf	(??_floorf+3)& (0+255),b
 13724   00524E  5160               	movf	??_floorf& (0+255),w,b
 13725   005250  176C               	andwf	floorf@u& (0+255),f,b
 13726   005252  5161               	movf	(??_floorf+1)& (0+255),w,b
 13727   005254  176D               	andwf	(floorf@u+1)& (0+255),f,b
 13728   005256  5162               	movf	(??_floorf+2)& (0+255),w,b
 13729   005258  176E               	andwf	(floorf@u+2)& (0+255),f,b
 13730   00525A  5163               	movf	(??_floorf+3)& (0+255),w,b
 13731   00525C  176F               	andwf	(floorf@u+3)& (0+255),f,b
 13732   00525E  EF75  F029         	goto	l7129
 13733   005262                     l7121:
 13734                           
 13735                           ; BSR set to: 0
 13736   005262  C06C  F060         	movff	floorf@u,??_floorf
 13737   005266  C06D  F061         	movff	floorf@u+1,??_floorf+1
 13738   00526A  C06E  F062         	movff	floorf@u+2,??_floorf+2
 13739   00526E  C06F  F063         	movff	floorf@u+3,??_floorf+3
 13740   005272  0E20               	movlw	32
 13741   005274  EF41  F029         	goto	u8940
 13742   005278                     u8945:
 13743   005278  90D8               	bcf	status,0,c
 13744   00527A  3363               	rrcf	(??_floorf+3)& (0+255),f,b
 13745   00527C  3362               	rrcf	(??_floorf+2)& (0+255),f,b
 13746   00527E  3361               	rrcf	(??_floorf+1)& (0+255),f,b
 13747   005280  3360               	rrcf	??_floorf& (0+255),f,b
 13748   005282                     u8940:
 13749   005282  2EE8               	decfsz	wreg,f,c
 13750   005284  EF3C  F029         	goto	u8945
 13751   005288  5160               	movf	??_floorf& (0+255),w,b
 13752   00528A  1161               	iorwf	(??_floorf+1)& (0+255),w,b
 13753   00528C  1162               	iorwf	(??_floorf+2)& (0+255),w,b
 13754   00528E  1163               	iorwf	(??_floorf+3)& (0+255),w,b
 13755   005290  A4D8               	btfss	status,2,c
 13756   005292  EF4D  F029         	goto	u8951
 13757   005296  EF4F  F029         	goto	u8950
 13758   00529A                     u8951:
 13759   00529A  EF59  F029         	goto	l7125
 13760   00529E                     u8950:
 13761   00529E                     
 13762                           ; BSR set to: 0
 13763   00529E  0E00               	movlw	0
 13764   0052A0  6F6C               	movwf	floorf@u& (0+255),b
 13765   0052A2  0E00               	movlw	0
 13766   0052A4  6F6D               	movwf	(floorf@u+1)& (0+255),b
 13767   0052A6  0E00               	movlw	0
 13768   0052A8  6F6E               	movwf	(floorf@u+2)& (0+255),b
 13769   0052AA  0E00               	movlw	0
 13770   0052AC  6F6F               	movwf	(floorf@u+3)& (0+255),b
 13771   0052AE  EF75  F029         	goto	l7129
 13772   0052B2                     l7125:
 13773                           
 13774                           ; BSR set to: 0
 13775   0052B2  90D8               	bcf	status,0,c
 13776   0052B4  356C               	rlcf	floorf@u& (0+255),w,b
 13777   0052B6  6F60               	movwf	??_floorf& (0+255),b
 13778   0052B8  356D               	rlcf	(floorf@u+1)& (0+255),w,b
 13779   0052BA  6F61               	movwf	(??_floorf+1)& (0+255),b
 13780   0052BC  356E               	rlcf	(floorf@u+2)& (0+255),w,b
 13781   0052BE  6F62               	movwf	(??_floorf+2)& (0+255),b
 13782   0052C0  356F               	rlcf	(floorf@u+3)& (0+255),w,b
 13783   0052C2  6F63               	movwf	(??_floorf+3)& (0+255),b
 13784   0052C4  5160               	movf	??_floorf& (0+255),w,b
 13785   0052C6  1161               	iorwf	(??_floorf+1)& (0+255),w,b
 13786   0052C8  1162               	iorwf	(??_floorf+2)& (0+255),w,b
 13787   0052CA  1163               	iorwf	(??_floorf+3)& (0+255),w,b
 13788   0052CC  B4D8               	btfsc	status,2,c
 13789   0052CE  EF6B  F029         	goto	u8961
 13790   0052D2  EF6D  F029         	goto	u8960
 13791   0052D6                     u8961:
 13792   0052D6  EF75  F029         	goto	l7129
 13793   0052DA                     u8960:
 13794   0052DA                     
 13795                           ; BSR set to: 0
 13796   0052DA  0E00               	movlw	0
 13797   0052DC  6F6C               	movwf	floorf@u& (0+255),b
 13798   0052DE  0E00               	movlw	0
 13799   0052E0  6F6D               	movwf	(floorf@u+1)& (0+255),b
 13800   0052E2  0E80               	movlw	128
 13801   0052E4  6F6E               	movwf	(floorf@u+2)& (0+255),b
 13802   0052E6  0EBF               	movlw	191
 13803   0052E8  6F6F               	movwf	(floorf@u+3)& (0+255),b
 13804   0052EA                     l7129:
 13805                           
 13806                           ; BSR set to: 0
 13807   0052EA  C06C  F059         	movff	floorf@u,?_floorf
 13808   0052EE  C06D  F05A         	movff	floorf@u+1,?_floorf+1
 13809   0052F2  C06E  F05B         	movff	floorf@u+2,?_floorf+2
 13810   0052F6  C06F  F05C         	movff	floorf@u+3,?_floorf+3
 13811   0052FA                     l1240:
 13812                           
 13813                           ; BSR set to: 0
 13814   0052FA  0012               	return		;funcret
 13815   0052FC                     __end_of_floorf:
 13816                           	callstack 0
 13817                           
 13818 ;; *************** function ___fpclassifyf *****************
 13819 ;; Defined at:
 13820 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
 13821 ;; Parameters:    Size  Location     Type
 13822 ;;  x               4    0[COMRAM] float 
 13823 ;; Auto vars:     Size  Location     Type
 13824 ;;  u               4   10[COMRAM] struct .
 13825 ;;  e               2    8[COMRAM] int 
 13826 ;; Return value:  Size  Location     Type
 13827 ;;                  2    0[COMRAM] int 
 13828 ;; Registers used:
 13829 ;;		wreg, status,2, status,0
 13830 ;; Tracked objects:
 13831 ;;		On entry : 0/0
 13832 ;;		On exit  : 0/0
 13833 ;;		Unchanged: 0/0
 13834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13835 ;;      Params:         4       0       0       0       0       0       0       0       0
 13836 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13837 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13838 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13839 ;;Total ram usage:       14 bytes
 13840 ;; Hardware stack levels used: 1
 13841 ;; Hardware stack levels required when called: 1
 13842 ;; This function calls:
 13843 ;;		Nothing
 13844 ;; This function is called by:
 13845 ;;		_efgtoa
 13846 ;; This function uses a non-reentrant model
 13847 ;;
 13848                           
 13849                           	psect	text35
 13850   006578                     __ptext35:
 13851                           	callstack 0
 13852   006578                     ___fpclassifyf:
 13853                           	callstack 23
 13854   006578  C255  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 13855   00657C  C256  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 13856   006580  C257  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 13857   006584  C258  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 13858   006588  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 13859   00658C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 13860   006590  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 13861   006594  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 13862   006598  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13863   00659C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13864   0065A0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13865   0065A4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13866   0065A8  0E18               	movlw	24
 13867   0065AA  EFDC  F032         	goto	u8780
 13868   0065AE                     u8785:
 13869   0065AE  90D8               	bcf	status,0,c
 13870   0065B0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 13871   0065B2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 13872   0065B4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 13873   0065B6  3205               	rrcf	??___fpclassifyf^0,f,c
 13874   0065B8                     u8780:
 13875   0065B8  2EE8               	decfsz	wreg,f,c
 13876   0065BA  EFD7  F032         	goto	u8785
 13877   0065BE  5005               	movf	??___fpclassifyf^0,w,c
 13878   0065C0  6E09               	movwf	___fpclassifyf@e^0,c
 13879   0065C2  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 13880   0065C4  5009               	movf	___fpclassifyf@e^0,w,c
 13881   0065C6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13882   0065C8  A4D8               	btfss	status,2,c
 13883   0065CA  EFE9  F032         	goto	u8791
 13884   0065CE  EFEB  F032         	goto	u8790
 13885   0065D2                     u8791:
 13886   0065D2  EF0B  F033         	goto	l7083
 13887   0065D6                     u8790:
 13888   0065D6  90D8               	bcf	status,0,c
 13889   0065D8  340B               	rlcf	___fpclassifyf@u^0,w,c
 13890   0065DA  6E05               	movwf	??___fpclassifyf^0,c
 13891   0065DC  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 13892   0065DE  6E06               	movwf	(??___fpclassifyf+1)^0,c
 13893   0065E0  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 13894   0065E2  6E07               	movwf	(??___fpclassifyf+2)^0,c
 13895   0065E4  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 13896   0065E6  6E08               	movwf	(??___fpclassifyf+3)^0,c
 13897   0065E8  5005               	movf	??___fpclassifyf^0,w,c
 13898   0065EA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13899   0065EC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13900   0065EE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13901   0065F0  A4D8               	btfss	status,2,c
 13902   0065F2  EFFD  F032         	goto	u8801
 13903   0065F6  EFFF  F032         	goto	u8800
 13904   0065FA                     u8801:
 13905   0065FA  EF05  F033         	goto	l7079
 13906   0065FE                     u8800:
 13907   0065FE  0E00               	movlw	0
 13908   006600  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13909   006602  0E02               	movlw	2
 13910   006604  6E01               	movwf	?___fpclassifyf^0,c
 13911   006606  EF3A  F033         	goto	l1226
 13912   00660A                     l7079:
 13913   00660A  0E00               	movlw	0
 13914   00660C  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13915   00660E  0E03               	movlw	3
 13916   006610  6E01               	movwf	?___fpclassifyf^0,c
 13917   006612  EF3A  F033         	goto	l1226
 13918   006616                     l7083:
 13919   006616  2809               	incf	___fpclassifyf@e^0,w,c
 13920   006618  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13921   00661A  A4D8               	btfss	status,2,c
 13922   00661C  EF12  F033         	goto	u8811
 13923   006620  EF14  F033         	goto	u8810
 13924   006624                     u8811:
 13925   006624  EF36  F033         	goto	l7089
 13926   006628                     u8810:
 13927   006628  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 13928   00662C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13929   006630  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13930   006634  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13931   006638  0E09               	movlw	9
 13932   00663A                     u8825:
 13933   00663A  90D8               	bcf	status,0,c
 13934   00663C  3605               	rlcf	??___fpclassifyf^0,f,c
 13935   00663E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 13936   006640  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 13937   006642  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 13938   006644  2EE8               	decfsz	wreg,f,c
 13939   006646  EF1D  F033         	goto	u8825
 13940   00664A  5005               	movf	??___fpclassifyf^0,w,c
 13941   00664C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 13942   00664E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 13943   006650  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 13944   006652  B4D8               	btfsc	status,2,c
 13945   006654  EF2E  F033         	goto	u8831
 13946   006658  EF31  F033         	goto	u8830
 13947   00665C                     u8831:
 13948   00665C  0E01               	movlw	1
 13949   00665E  EF32  F033         	goto	u8840
 13950   006662                     u8830:
 13951   006662  0E00               	movlw	0
 13952   006664                     u8840:
 13953   006664  6E01               	movwf	?___fpclassifyf^0,c
 13954   006666  6A02               	clrf	(?___fpclassifyf+1)^0,c
 13955   006668  EF3A  F033         	goto	l1226
 13956   00666C                     l7089:
 13957   00666C  0E00               	movlw	0
 13958   00666E  6E02               	movwf	(?___fpclassifyf+1)^0,c
 13959   006670  0E04               	movlw	4
 13960   006672  6E01               	movwf	?___fpclassifyf^0,c
 13961   006674                     l1226:
 13962   006674  0012               	return		;funcret
 13963   006676                     __end_of___fpclassifyf:
 13964                           	callstack 0
 13965                           
 13966 ;; *************** function ___fltol *****************
 13967 ;; Defined at:
 13968 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 13969 ;; Parameters:    Size  Location     Type
 13970 ;;  f1              4    0[COMRAM] int 
 13971 ;; Auto vars:     Size  Location     Type
 13972 ;;  exp1            1    9[COMRAM] unsigned char 
 13973 ;;  sign1           1    8[COMRAM] unsigned char 
 13974 ;; Return value:  Size  Location     Type
 13975 ;;                  4    0[COMRAM] long 
 13976 ;; Registers used:
 13977 ;;		wreg, status,2, status,0
 13978 ;; Tracked objects:
 13979 ;;		On entry : 0/0
 13980 ;;		On exit  : 0/0
 13981 ;;		Unchanged: 0/0
 13982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13983 ;;      Params:         4       0       0       0       0       0       0       0       0
 13984 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13985 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13986 ;;      Totals:        10       0       0       0       0       0       0       0       0
 13987 ;;Total ram usage:       10 bytes
 13988 ;; Hardware stack levels used: 1
 13989 ;; Hardware stack levels required when called: 1
 13990 ;; This function calls:
 13991 ;;		Nothing
 13992 ;; This function is called by:
 13993 ;;		_efgtoa
 13994 ;; This function uses a non-reentrant model
 13995 ;;
 13996                           
 13997                           	psect	text36
 13998   00626E                     __ptext36:
 13999                           	callstack 0
 14000   00626E                     ___fltol:
 14001                           	callstack 23
 14002   00626E  3403               	rlcf	(___fltol@f1+2)^0,w,c
 14003   006270  3404               	rlcf	(___fltol@f1+3)^0,w,c
 14004   006272  6E0A               	movwf	___fltol@exp1^0,c
 14005   006274  500A               	movf	___fltol@exp1^0,w,c
 14006   006276  A4D8               	btfss	status,2,c
 14007   006278  EF40  F031         	goto	u8651
 14008   00627C  EF42  F031         	goto	u8650
 14009   006280                     u8651:
 14010   006280  EF4C  F031         	goto	l7001
 14011   006284                     u8650:
 14012   006284                     l6997:
 14013   006284  0E00               	movlw	0
 14014   006286  6E01               	movwf	?___fltol^0,c
 14015   006288  0E00               	movlw	0
 14016   00628A  6E02               	movwf	(?___fltol+1)^0,c
 14017   00628C  0E00               	movlw	0
 14018   00628E  6E03               	movwf	(?___fltol+2)^0,c
 14019   006290  0E00               	movlw	0
 14020   006292  6E04               	movwf	(?___fltol+3)^0,c
 14021   006294  EFB9  F031         	goto	l645
 14022   006298                     l7001:
 14023   006298  C001  F005         	movff	___fltol@f1,??___fltol
 14024   00629C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
 14025   0062A0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
 14026   0062A4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
 14027   0062A8  0E20               	movlw	32
 14028   0062AA  EF5C  F031         	goto	u8660
 14029   0062AE                     u8665:
 14030   0062AE  90D8               	bcf	status,0,c
 14031   0062B0  3208               	rrcf	(??___fltol+3)^0,f,c
 14032   0062B2  3207               	rrcf	(??___fltol+2)^0,f,c
 14033   0062B4  3206               	rrcf	(??___fltol+1)^0,f,c
 14034   0062B6  3205               	rrcf	??___fltol^0,f,c
 14035   0062B8                     u8660:
 14036   0062B8  2EE8               	decfsz	wreg,f,c
 14037   0062BA  EF57  F031         	goto	u8665
 14038   0062BE  5005               	movf	??___fltol^0,w,c
 14039   0062C0  6E09               	movwf	___fltol@sign1^0,c
 14040   0062C2  8E03               	bsf	(___fltol@f1+2)^0,7,c
 14041   0062C4  0EFF               	movlw	255
 14042   0062C6  1601               	andwf	___fltol@f1^0,f,c
 14043   0062C8  0EFF               	movlw	255
 14044   0062CA  1602               	andwf	(___fltol@f1+1)^0,f,c
 14045   0062CC  0EFF               	movlw	255
 14046   0062CE  1603               	andwf	(___fltol@f1+2)^0,f,c
 14047   0062D0  0E00               	movlw	0
 14048   0062D2  1604               	andwf	(___fltol@f1+3)^0,f,c
 14049   0062D4  0E96               	movlw	150
 14050   0062D6  5E0A               	subwf	___fltol@exp1^0,f,c
 14051   0062D8  BE0A               	btfsc	___fltol@exp1^0,7,c
 14052   0062DA  EF73  F031         	goto	u8670
 14053   0062DE  EF71  F031         	goto	u8671
 14054   0062E2                     u8671:
 14055   0062E2  EF89  F031         	goto	l7021
 14056   0062E6                     u8670:
 14057   0062E6  500A               	movf	___fltol@exp1^0,w,c
 14058   0062E8  0A80               	xorlw	128
 14059   0062EA  0F97               	addlw	151
 14060   0062EC  B0D8               	btfsc	status,0,c
 14061   0062EE  EF7B  F031         	goto	u8681
 14062   0062F2  EF7D  F031         	goto	u8680
 14063   0062F6                     u8681:
 14064   0062F6  EF7F  F031         	goto	l7017
 14065   0062FA                     u8680:
 14066   0062FA  EF42  F031         	goto	l6997
 14067   0062FE                     l7017:
 14068   0062FE  90D8               	bcf	status,0,c
 14069   006300  3204               	rrcf	(___fltol@f1+3)^0,f,c
 14070   006302  3203               	rrcf	(___fltol@f1+2)^0,f,c
 14071   006304  3202               	rrcf	(___fltol@f1+1)^0,f,c
 14072   006306  3201               	rrcf	___fltol@f1^0,f,c
 14073   006308  3E0A               	incfsz	___fltol@exp1^0,f,c
 14074   00630A  EF7F  F031         	goto	l7017
 14075   00630E  EFA1  F031         	goto	l7031
 14076   006312                     l7021:
 14077   006312  0E1F               	movlw	31
 14078   006314  640A               	cpfsgt	___fltol@exp1^0,c
 14079   006316  EF8F  F031         	goto	u8691
 14080   00631A  EF91  F031         	goto	u8690
 14081   00631E                     u8691:
 14082   00631E  EF99  F031         	goto	l7029
 14083   006322                     u8690:
 14084   006322  EF42  F031         	goto	l6997
 14085   006326                     l7027:
 14086   006326  90D8               	bcf	status,0,c
 14087   006328  3601               	rlcf	___fltol@f1^0,f,c
 14088   00632A  3602               	rlcf	(___fltol@f1+1)^0,f,c
 14089   00632C  3603               	rlcf	(___fltol@f1+2)^0,f,c
 14090   00632E  3604               	rlcf	(___fltol@f1+3)^0,f,c
 14091   006330  060A               	decf	___fltol@exp1^0,f,c
 14092   006332                     l7029:
 14093   006332  500A               	movf	___fltol@exp1^0,w,c
 14094   006334  A4D8               	btfss	status,2,c
 14095   006336  EF9F  F031         	goto	u8701
 14096   00633A  EFA1  F031         	goto	u8700
 14097   00633E                     u8701:
 14098   00633E  EF93  F031         	goto	l7027
 14099   006342                     u8700:
 14100   006342                     l7031:
 14101   006342  5009               	movf	___fltol@sign1^0,w,c
 14102   006344  B4D8               	btfsc	status,2,c
 14103   006346  EFA7  F031         	goto	u8711
 14104   00634A  EFA9  F031         	goto	u8710
 14105   00634E                     u8711:
 14106   00634E  EFB1  F031         	goto	l7035
 14107   006352                     u8710:
 14108   006352  1E04               	comf	(___fltol@f1+3)^0,f,c
 14109   006354  1E03               	comf	(___fltol@f1+2)^0,f,c
 14110   006356  1E02               	comf	(___fltol@f1+1)^0,f,c
 14111   006358  6C01               	negf	___fltol@f1^0,c
 14112   00635A  0E00               	movlw	0
 14113   00635C  2202               	addwfc	(___fltol@f1+1)^0,f,c
 14114   00635E  2203               	addwfc	(___fltol@f1+2)^0,f,c
 14115   006360  2204               	addwfc	(___fltol@f1+3)^0,f,c
 14116   006362                     l7035:
 14117   006362  C001  F001         	movff	___fltol@f1,?___fltol
 14118   006366  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 14119   00636A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 14120   00636E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 14121   006372                     l645:
 14122   006372  0012               	return		;funcret
 14123   006374                     __end_of___fltol:
 14124                           	callstack 0
 14125                           
 14126 ;; *************** function ___flsub *****************
 14127 ;; Defined at:
 14128 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 14129 ;; Parameters:    Size  Location     Type
 14130 ;;  b               4   55[COMRAM] long 
 14131 ;;  a               4   59[COMRAM] long 
 14132 ;; Auto vars:     Size  Location     Type
 14133 ;;		None
 14134 ;; Return value:  Size  Location     Type
 14135 ;;                  4   55[COMRAM] long 
 14136 ;; Registers used:
 14137 ;;		wreg, status,2, status,0, cstack
 14138 ;; Tracked objects:
 14139 ;;		On entry : 0/0
 14140 ;;		On exit  : 0/0
 14141 ;;		Unchanged: 0/0
 14142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14143 ;;      Params:         8       0       0       0       0       0       0       0       0
 14144 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14145 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14146 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14147 ;;Total ram usage:        8 bytes
 14148 ;; Hardware stack levels used: 1
 14149 ;; Hardware stack levels required when called: 2
 14150 ;; This function calls:
 14151 ;;		___fladd
 14152 ;; This function is called by:
 14153 ;;		_End_Event
 14154 ;;		_Calibrate_MQ2
 14155 ;;		_Read_Flame_Sensor
 14156 ;;		_Read_MQ2_Sensor
 14157 ;;		_efgtoa
 14158 ;;		_powf
 14159 ;; This function uses a non-reentrant model
 14160 ;;
 14161                           
 14162                           	psect	text37
 14163   007004                     __ptext37:
 14164                           	callstack 0
 14165   007004                     ___flsub:
 14166                           	callstack 22
 14167   007004  0E00               	movlw	0
 14168   007006  1A3C               	xorwf	___flsub@a^0,f,c
 14169   007008  0E00               	movlw	0
 14170   00700A  1A3D               	xorwf	(___flsub@a+1)^0,f,c
 14171   00700C  0E00               	movlw	0
 14172   00700E  1A3E               	xorwf	(___flsub@a+2)^0,f,c
 14173   007010  0E80               	movlw	128
 14174   007012  1A3F               	xorwf	(___flsub@a+3)^0,f,c
 14175   007014  C038  F00F         	movff	___flsub@b,___fladd@b
 14176   007018  C039  F010         	movff	___flsub@b+1,___fladd@b+1
 14177   00701C  C03A  F011         	movff	___flsub@b+2,___fladd@b+2
 14178   007020  C03B  F012         	movff	___flsub@b+3,___fladd@b+3
 14179   007024  C03C  F013         	movff	___flsub@a,___fladd@a
 14180   007028  C03D  F014         	movff	___flsub@a+1,___fladd@a+1
 14181   00702C  C03E  F015         	movff	___flsub@a+2,___fladd@a+2
 14182   007030  C03F  F016         	movff	___flsub@a+3,___fladd@a+3
 14183   007034  EC47  F01C         	call	___fladd	;wreg free
 14184   007038  C00F  F038         	movff	?___fladd,?___flsub
 14185   00703C  C010  F039         	movff	?___fladd+1,?___flsub+1
 14186   007040  C011  F03A         	movff	?___fladd+2,?___flsub+2
 14187   007044  C012  F03B         	movff	?___fladd+3,?___flsub+3
 14188   007048  0012               	return		;funcret
 14189   00704A                     __end_of___flsub:
 14190                           	callstack 0
 14191                           
 14192 ;; *************** function ___flneg *****************
 14193 ;; Defined at:
 14194 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 14195 ;; Parameters:    Size  Location     Type
 14196 ;;  f1              4    0[COMRAM] long 
 14197 ;; Auto vars:     Size  Location     Type
 14198 ;;		None
 14199 ;; Return value:  Size  Location     Type
 14200 ;;                  4    0[COMRAM] long 
 14201 ;; Registers used:
 14202 ;;		wreg, status,2, status,0
 14203 ;; Tracked objects:
 14204 ;;		On entry : 0/0
 14205 ;;		On exit  : 0/0
 14206 ;;		Unchanged: 0/0
 14207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14208 ;;      Params:         4       0       0       0       0       0       0       0       0
 14209 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14210 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14211 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14212 ;;Total ram usage:        4 bytes
 14213 ;; Hardware stack levels used: 1
 14214 ;; Hardware stack levels required when called: 1
 14215 ;; This function calls:
 14216 ;;		Nothing
 14217 ;; This function is called by:
 14218 ;;		_efgtoa
 14219 ;;		_powf
 14220 ;; This function uses a non-reentrant model
 14221 ;;
 14222                           
 14223                           	psect	text38
 14224   007148                     __ptext38:
 14225                           	callstack 0
 14226   007148                     ___flneg:
 14227                           	callstack 23
 14228   007148  5001               	movf	___flneg@f1^0,w,c
 14229   00714A  1002               	iorwf	(___flneg@f1+1)^0,w,c
 14230   00714C  1003               	iorwf	(___flneg@f1+2)^0,w,c
 14231   00714E  1004               	iorwf	(___flneg@f1+3)^0,w,c
 14232   007150  B4D8               	btfsc	status,2,c
 14233   007152  EFAD  F038         	goto	u8641
 14234   007156  EFAF  F038         	goto	u8640
 14235   00715A                     u8641:
 14236   00715A  EFB7  F038         	goto	l6991
 14237   00715E                     u8640:
 14238   00715E  0E00               	movlw	0
 14239   007160  1A01               	xorwf	___flneg@f1^0,f,c
 14240   007162  0E00               	movlw	0
 14241   007164  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 14242   007166  0E00               	movlw	0
 14243   007168  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 14244   00716A  0E80               	movlw	128
 14245   00716C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 14246   00716E                     l6991:
 14247   00716E  C001  F001         	movff	___flneg@f1,?___flneg
 14248   007172  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 14249   007176  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 14250   00717A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 14251   00717E  0012               	return		;funcret
 14252   007180                     __end_of___flneg:
 14253                           	callstack 0
 14254                           
 14255 ;; *************** function ___flge *****************
 14256 ;; Defined at:
 14257 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 14258 ;; Parameters:    Size  Location     Type
 14259 ;;  ff1             4   63[COMRAM] long 
 14260 ;;  ff2             4   67[COMRAM] long 
 14261 ;; Auto vars:     Size  Location     Type
 14262 ;;		None
 14263 ;; Return value:  Size  Location     Type
 14264 ;;		None               void
 14265 ;; Registers used:
 14266 ;;		wreg, status,2, status,0
 14267 ;; Tracked objects:
 14268 ;;		On entry : 0/0
 14269 ;;		On exit  : 0/0
 14270 ;;		Unchanged: 0/0
 14271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14272 ;;      Params:         8       0       0       0       0       0       0       0       0
 14273 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14274 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14275 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14276 ;;Total ram usage:       12 bytes
 14277 ;; Hardware stack levels used: 1
 14278 ;; Hardware stack levels required when called: 1
 14279 ;; This function calls:
 14280 ;;		Nothing
 14281 ;; This function is called by:
 14282 ;;		_Read_Flame_Sensor
 14283 ;;		_Read_MQ2_Sensor
 14284 ;;		_Update_Actuators
 14285 ;;		_efgtoa
 14286 ;;		_powf
 14287 ;; This function uses a non-reentrant model
 14288 ;;
 14289                           
 14290                           	psect	text39
 14291   006374                     __ptext39:
 14292                           	callstack 0
 14293   006374                     ___flge:
 14294                           	callstack 28
 14295   006374  0E00               	movlw	0
 14296   006376  1440               	andwf	___flge@ff1^0,w,c
 14297   006378  6E48               	movwf	??___flge^0,c
 14298   00637A  0E00               	movlw	0
 14299   00637C  1441               	andwf	(___flge@ff1+1)^0,w,c
 14300   00637E  6E49               	movwf	(??___flge+1)^0,c
 14301   006380  0E80               	movlw	128
 14302   006382  1442               	andwf	(___flge@ff1+2)^0,w,c
 14303   006384  6E4A               	movwf	(??___flge+2)^0,c
 14304   006386  0E7F               	movlw	127
 14305   006388  1443               	andwf	(___flge@ff1+3)^0,w,c
 14306   00638A  6E4B               	movwf	(??___flge+3)^0,c
 14307   00638C  5048               	movf	??___flge^0,w,c
 14308   00638E  1049               	iorwf	(??___flge+1)^0,w,c
 14309   006390  104A               	iorwf	(??___flge+2)^0,w,c
 14310   006392  104B               	iorwf	(??___flge+3)^0,w,c
 14311   006394  A4D8               	btfss	status,2,c
 14312   006396  EFCF  F031         	goto	u8591
 14313   00639A  EFD1  F031         	goto	u8590
 14314   00639E                     u8591:
 14315   00639E  EFD9  F031         	goto	l6969
 14316   0063A2                     u8590:
 14317   0063A2  0E00               	movlw	0
 14318   0063A4  6E40               	movwf	___flge@ff1^0,c
 14319   0063A6  0E00               	movlw	0
 14320   0063A8  6E41               	movwf	(___flge@ff1+1)^0,c
 14321   0063AA  0E00               	movlw	0
 14322   0063AC  6E42               	movwf	(___flge@ff1+2)^0,c
 14323   0063AE  0E00               	movlw	0
 14324   0063B0  6E43               	movwf	(___flge@ff1+3)^0,c
 14325   0063B2                     l6969:
 14326   0063B2  0E00               	movlw	0
 14327   0063B4  1444               	andwf	___flge@ff2^0,w,c
 14328   0063B6  6E48               	movwf	??___flge^0,c
 14329   0063B8  0E00               	movlw	0
 14330   0063BA  1445               	andwf	(___flge@ff2+1)^0,w,c
 14331   0063BC  6E49               	movwf	(??___flge+1)^0,c
 14332   0063BE  0E80               	movlw	128
 14333   0063C0  1446               	andwf	(___flge@ff2+2)^0,w,c
 14334   0063C2  6E4A               	movwf	(??___flge+2)^0,c
 14335   0063C4  0E7F               	movlw	127
 14336   0063C6  1447               	andwf	(___flge@ff2+3)^0,w,c
 14337   0063C8  6E4B               	movwf	(??___flge+3)^0,c
 14338   0063CA  5048               	movf	??___flge^0,w,c
 14339   0063CC  1049               	iorwf	(??___flge+1)^0,w,c
 14340   0063CE  104A               	iorwf	(??___flge+2)^0,w,c
 14341   0063D0  104B               	iorwf	(??___flge+3)^0,w,c
 14342   0063D2  A4D8               	btfss	status,2,c
 14343   0063D4  EFEE  F031         	goto	u8601
 14344   0063D8  EFF0  F031         	goto	u8600
 14345   0063DC                     u8601:
 14346   0063DC  EFF8  F031         	goto	l6973
 14347   0063E0                     u8600:
 14348   0063E0  0E00               	movlw	0
 14349   0063E2  6E44               	movwf	___flge@ff2^0,c
 14350   0063E4  0E00               	movlw	0
 14351   0063E6  6E45               	movwf	(___flge@ff2+1)^0,c
 14352   0063E8  0E00               	movlw	0
 14353   0063EA  6E46               	movwf	(___flge@ff2+2)^0,c
 14354   0063EC  0E00               	movlw	0
 14355   0063EE  6E47               	movwf	(___flge@ff2+3)^0,c
 14356   0063F0                     l6973:
 14357   0063F0  AE43               	btfss	(___flge@ff1+3)^0,7,c
 14358   0063F2  EFFD  F031         	goto	u8611
 14359   0063F6  EFFF  F031         	goto	u8610
 14360   0063FA                     u8611:
 14361   0063FA  EF08  F032         	goto	l6977
 14362   0063FE                     u8610:
 14363   0063FE  6C40               	negf	___flge@ff1^0,c
 14364   006400  1E41               	comf	(___flge@ff1+1)^0,f,c
 14365   006402  B0D8               	btfsc	status,0,c
 14366   006404  2A41               	incf	(___flge@ff1+1)^0,f,c
 14367   006406  1E42               	comf	(___flge@ff1+2)^0,f,c
 14368   006408  B0D8               	btfsc	status,0,c
 14369   00640A  2A42               	incf	(___flge@ff1+2)^0,f,c
 14370   00640C  0E80               	movlw	128
 14371   00640E  5643               	subfwb	(___flge@ff1+3)^0,f,c
 14372   006410                     l6977:
 14373   006410  AE47               	btfss	(___flge@ff2+3)^0,7,c
 14374   006412  EF0D  F032         	goto	u8621
 14375   006416  EF0F  F032         	goto	u8620
 14376   00641A                     u8621:
 14377   00641A  EF18  F032         	goto	l613
 14378   00641E                     u8620:
 14379   00641E  6C44               	negf	___flge@ff2^0,c
 14380   006420  1E45               	comf	(___flge@ff2+1)^0,f,c
 14381   006422  B0D8               	btfsc	status,0,c
 14382   006424  2A45               	incf	(___flge@ff2+1)^0,f,c
 14383   006426  1E46               	comf	(___flge@ff2+2)^0,f,c
 14384   006428  B0D8               	btfsc	status,0,c
 14385   00642A  2A46               	incf	(___flge@ff2+2)^0,f,c
 14386   00642C  0E80               	movlw	128
 14387   00642E  5647               	subfwb	(___flge@ff2+3)^0,f,c
 14388   006430                     l613:
 14389   006430  0E00               	movlw	0
 14390   006432  1A40               	xorwf	___flge@ff1^0,f,c
 14391   006434  0E00               	movlw	0
 14392   006436  1A41               	xorwf	(___flge@ff1+1)^0,f,c
 14393   006438  0E00               	movlw	0
 14394   00643A  1A42               	xorwf	(___flge@ff1+2)^0,f,c
 14395   00643C  0E80               	movlw	128
 14396   00643E  1A43               	xorwf	(___flge@ff1+3)^0,f,c
 14397   006440  0E00               	movlw	0
 14398   006442  1A44               	xorwf	___flge@ff2^0,f,c
 14399   006444  0E00               	movlw	0
 14400   006446  1A45               	xorwf	(___flge@ff2+1)^0,f,c
 14401   006448  0E00               	movlw	0
 14402   00644A  1A46               	xorwf	(___flge@ff2+2)^0,f,c
 14403   00644C  0E80               	movlw	128
 14404   00644E  1A47               	xorwf	(___flge@ff2+3)^0,f,c
 14405   006450  5044               	movf	___flge@ff2^0,w,c
 14406   006452  5C40               	subwf	___flge@ff1^0,w,c
 14407   006454  5045               	movf	(___flge@ff2+1)^0,w,c
 14408   006456  5841               	subwfb	(___flge@ff1+1)^0,w,c
 14409   006458  5046               	movf	(___flge@ff2+2)^0,w,c
 14410   00645A  5842               	subwfb	(___flge@ff1+2)^0,w,c
 14411   00645C  5047               	movf	(___flge@ff2+3)^0,w,c
 14412   00645E  5843               	subwfb	(___flge@ff1+3)^0,w,c
 14413   006460  B0D8               	btfsc	status,0,c
 14414   006462  EF35  F032         	goto	u8631
 14415   006466  EF37  F032         	goto	u8630
 14416   00646A                     u8631:
 14417   00646A  EF3A  F032         	goto	l6983
 14418   00646E                     u8630:
 14419   00646E  90D8               	bcf	status,0,c
 14420   006470  EF3B  F032         	goto	l618
 14421   006474                     l6983:
 14422   006474  80D8               	bsf	status,0,c
 14423   006476                     l618:
 14424   006476  0012               	return		;funcret
 14425   006478                     __end_of___flge:
 14426                           	callstack 0
 14427                           
 14428 ;; *************** function ___fleq *****************
 14429 ;; Defined at:
 14430 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 14431 ;; Parameters:    Size  Location     Type
 14432 ;;  ff1             4    0[COMRAM] long 
 14433 ;;  ff2             4    4[COMRAM] long 
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;		None
 14436 ;; Return value:  Size  Location     Type
 14437 ;;		None               void
 14438 ;; Registers used:
 14439 ;;		wreg, status,2, status,0
 14440 ;; Tracked objects:
 14441 ;;		On entry : 0/0
 14442 ;;		On exit  : 0/0
 14443 ;;		Unchanged: 0/0
 14444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14445 ;;      Params:         8       0       0       0       0       0       0       0       0
 14446 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14447 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14448 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14449 ;;Total ram usage:       12 bytes
 14450 ;; Hardware stack levels used: 1
 14451 ;; Hardware stack levels required when called: 1
 14452 ;; This function calls:
 14453 ;;		Nothing
 14454 ;; This function is called by:
 14455 ;;		_efgtoa
 14456 ;; This function uses a non-reentrant model
 14457 ;;
 14458                           
 14459                           	psect	text40
 14460   006B24                     __ptext40:
 14461                           	callstack 0
 14462   006B24                     ___fleq:
 14463                           	callstack 23
 14464   006B24  0E00               	movlw	0
 14465   006B26  1401               	andwf	___fleq@ff1^0,w,c
 14466   006B28  6E09               	movwf	??___fleq^0,c
 14467   006B2A  0E00               	movlw	0
 14468   006B2C  1402               	andwf	(___fleq@ff1+1)^0,w,c
 14469   006B2E  6E0A               	movwf	(??___fleq+1)^0,c
 14470   006B30  0E80               	movlw	128
 14471   006B32  1403               	andwf	(___fleq@ff1+2)^0,w,c
 14472   006B34  6E0B               	movwf	(??___fleq+2)^0,c
 14473   006B36  0E7F               	movlw	127
 14474   006B38  1404               	andwf	(___fleq@ff1+3)^0,w,c
 14475   006B3A  6E0C               	movwf	(??___fleq+3)^0,c
 14476   006B3C  5009               	movf	??___fleq^0,w,c
 14477   006B3E  100A               	iorwf	(??___fleq+1)^0,w,c
 14478   006B40  100B               	iorwf	(??___fleq+2)^0,w,c
 14479   006B42  100C               	iorwf	(??___fleq+3)^0,w,c
 14480   006B44  A4D8               	btfss	status,2,c
 14481   006B46  EFA7  F035         	goto	u8561
 14482   006B4A  EFA9  F035         	goto	u8560
 14483   006B4E                     u8561:
 14484   006B4E  EFB1  F035         	goto	l6953
 14485   006B52                     u8560:
 14486   006B52  0E00               	movlw	0
 14487   006B54  6E01               	movwf	___fleq@ff1^0,c
 14488   006B56  0E00               	movlw	0
 14489   006B58  6E02               	movwf	(___fleq@ff1+1)^0,c
 14490   006B5A  0E00               	movlw	0
 14491   006B5C  6E03               	movwf	(___fleq@ff1+2)^0,c
 14492   006B5E  0E00               	movlw	0
 14493   006B60  6E04               	movwf	(___fleq@ff1+3)^0,c
 14494   006B62                     l6953:
 14495   006B62  0E00               	movlw	0
 14496   006B64  1405               	andwf	___fleq@ff2^0,w,c
 14497   006B66  6E09               	movwf	??___fleq^0,c
 14498   006B68  0E00               	movlw	0
 14499   006B6A  1406               	andwf	(___fleq@ff2+1)^0,w,c
 14500   006B6C  6E0A               	movwf	(??___fleq+1)^0,c
 14501   006B6E  0E80               	movlw	128
 14502   006B70  1407               	andwf	(___fleq@ff2+2)^0,w,c
 14503   006B72  6E0B               	movwf	(??___fleq+2)^0,c
 14504   006B74  0E7F               	movlw	127
 14505   006B76  1408               	andwf	(___fleq@ff2+3)^0,w,c
 14506   006B78  6E0C               	movwf	(??___fleq+3)^0,c
 14507   006B7A  5009               	movf	??___fleq^0,w,c
 14508   006B7C  100A               	iorwf	(??___fleq+1)^0,w,c
 14509   006B7E  100B               	iorwf	(??___fleq+2)^0,w,c
 14510   006B80  100C               	iorwf	(??___fleq+3)^0,w,c
 14511   006B82  A4D8               	btfss	status,2,c
 14512   006B84  EFC6  F035         	goto	u8571
 14513   006B88  EFC8  F035         	goto	u8570
 14514   006B8C                     u8571:
 14515   006B8C  EFD0  F035         	goto	l6957
 14516   006B90                     u8570:
 14517   006B90  0E00               	movlw	0
 14518   006B92  6E05               	movwf	___fleq@ff2^0,c
 14519   006B94  0E00               	movlw	0
 14520   006B96  6E06               	movwf	(___fleq@ff2+1)^0,c
 14521   006B98  0E00               	movlw	0
 14522   006B9A  6E07               	movwf	(___fleq@ff2+2)^0,c
 14523   006B9C  0E00               	movlw	0
 14524   006B9E  6E08               	movwf	(___fleq@ff2+3)^0,c
 14525   006BA0                     l6957:
 14526   006BA0  5005               	movf	___fleq@ff2^0,w,c
 14527   006BA2  1801               	xorwf	___fleq@ff1^0,w,c
 14528   006BA4  E10F               	bnz	u8580
 14529   006BA6  5006               	movf	(___fleq@ff2+1)^0,w,c
 14530   006BA8  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 14531   006BAA  E10C               	bnz	u8580
 14532   006BAC  5007               	movf	(___fleq@ff2+2)^0,w,c
 14533   006BAE  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 14534   006BB0  E109               	bnz	u8580
 14535   006BB2  5008               	movf	(___fleq@ff2+3)^0,w,c
 14536   006BB4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 14537   006BB6  B4D8               	btfsc	status,2,c
 14538   006BB8  EFE0  F035         	goto	u8581
 14539   006BBC  EFE2  F035         	goto	u8580
 14540   006BC0                     u8581:
 14541   006BC0  EFE5  F035         	goto	l6961
 14542   006BC4                     u8580:
 14543   006BC4  90D8               	bcf	status,0,c
 14544   006BC6  EFE6  F035         	goto	l607
 14545   006BCA                     l6961:
 14546   006BCA  80D8               	bsf	status,0,c
 14547   006BCC                     l607:
 14548   006BCC  0012               	return		;funcret
 14549   006BCE                     __end_of___fleq:
 14550                           	callstack 0
 14551                           
 14552 ;; *************** function _dtoa *****************
 14553 ;; Defined at:
 14554 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 14555 ;; Parameters:    Size  Location     Type
 14556 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 14557 ;;		 -> sprintf@f(11), 
 14558 ;;  d               4   23[COMRAM] long 
 14559 ;; Auto vars:     Size  Location     Type
 14560 ;;  i               2   34[COMRAM] int 
 14561 ;;  p               2   31[COMRAM] int 
 14562 ;;  w               2   29[COMRAM] int 
 14563 ;;  s               1   33[COMRAM] unsigned char 
 14564 ;; Return value:  Size  Location     Type
 14565 ;;                  1    wreg      void 
 14566 ;; Registers used:
 14567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14568 ;; Tracked objects:
 14569 ;;		On entry : 0/0
 14570 ;;		On exit  : 0/0
 14571 ;;		Unchanged: 0/0
 14572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14573 ;;      Params:         5       0       0       0       0       0       0       0       0
 14574 ;;      Locals:         9       0       0       0       0       0       0       0       0
 14575 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14576 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14577 ;;Total ram usage:       14 bytes
 14578 ;; Hardware stack levels used: 1
 14579 ;; Hardware stack levels required when called: 5
 14580 ;; This function calls:
 14581 ;;		___aldiv
 14582 ;;		___almod
 14583 ;;		_abs
 14584 ;;		_pad
 14585 ;; This function is called by:
 14586 ;;		_vfpfcnvrt
 14587 ;; This function uses a non-reentrant model
 14588 ;;
 14589                           
 14590                           	psect	text41
 14591   005680                     __ptext41:
 14592                           	callstack 0
 14593   005680                     _dtoa:
 14594                           	callstack 20
 14595   005680                     
 14596                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 14597   005680  BE1B               	btfsc	(dtoa@d+3)^0,7,c
 14598   005682  EF45  F02B         	goto	u8981
 14599   005686  EF48  F02B         	goto	u8980
 14600   00568A                     u8981:
 14601   00568A  0E01               	movlw	1
 14602   00568C  EF49  F02B         	goto	u8990
 14603   005690                     u8980:
 14604   005690  0E00               	movlw	0
 14605   005692                     u8990:
 14606   005692  6E22               	movwf	dtoa@s^0,c
 14607                           
 14608                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 14609   005694  0100               	movlb	0	; () banked
 14610   005696  BFF4               	btfsc	(_prec+1)& (0+255),7,b
 14611   005698  EF52  F02B         	goto	u9000
 14612   00569C  EF50  F02B         	goto	u9001
 14613   0056A0                     u9001:
 14614   0056A0  EF58  F02B         	goto	l1063
 14615   0056A4                     u9000:
 14616   0056A4                     
 14617                           ; BSR set to: 0
 14618   0056A4  0E00               	movlw	0
 14619   0056A6  6E21               	movwf	(dtoa@p+1)^0,c
 14620   0056A8  0E01               	movlw	1
 14621   0056AA  6E20               	movwf	dtoa@p^0,c
 14622   0056AC  EF5C  F02B         	goto	l1065
 14623   0056B0                     l1063:
 14624                           
 14625                           ; BSR set to: 0
 14626   0056B0  C0F3  F020         	movff	_prec,dtoa@p
 14627   0056B4  C0F4  F021         	movff	_prec+1,dtoa@p+1
 14628   0056B8                     l1065:
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 14632   0056B8  C1EE  F01E         	movff	_width,dtoa@w
 14633   0056BC  C1EF  F01F         	movff	_width+1,dtoa@w+1
 14634   0056C0                     
 14635                           ; BSR set to: 0
 14636                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 14637   0056C0  5022               	movf	dtoa@s^0,w,c
 14638   0056C2  B4D8               	btfsc	status,2,c
 14639   0056C4  EF66  F02B         	goto	u9011
 14640   0056C8  EF68  F02B         	goto	u9010
 14641   0056CC                     u9011:
 14642   0056CC  EF7F  F02B         	goto	l1066
 14643   0056D0                     u9010:
 14644   0056D0                     
 14645                           ; BSR set to: 0
 14646                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 14647   0056D0  061E               	decf	dtoa@w^0,f,c
 14648   0056D2  A0D8               	btfss	status,0,c
 14649   0056D4  061F               	decf	(dtoa@w+1)^0,f,c
 14650   0056D6                     
 14651                           ; BSR set to: 0
 14652                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 14653   0056D6  5022               	movf	dtoa@s^0,w,c
 14654   0056D8  A4D8               	btfss	status,2,c
 14655   0056DA  EF71  F02B         	goto	u9021
 14656   0056DE  EF73  F02B         	goto	u9020
 14657   0056E2                     u9021:
 14658   0056E2  EF79  F02B         	goto	l7157
 14659   0056E6                     u9020:
 14660   0056E6                     
 14661                           ; BSR set to: 0
 14662   0056E6  0E00               	movlw	0
 14663   0056E8  6E1D               	movwf	(_dtoa$1396+1)^0,c
 14664   0056EA  0E2B               	movlw	43
 14665   0056EC  6E1C               	movwf	_dtoa$1396^0,c
 14666   0056EE  EF7D  F02B         	goto	l7159
 14667   0056F2                     l7157:
 14668                           
 14669                           ; BSR set to: 0
 14670   0056F2  0E00               	movlw	0
 14671   0056F4  6E1D               	movwf	(_dtoa$1396+1)^0,c
 14672   0056F6  0E2D               	movlw	45
 14673   0056F8  6E1C               	movwf	_dtoa$1396^0,c
 14674   0056FA                     l7159:
 14675                           
 14676                           ; BSR set to: 0
 14677   0056FA  C01C  F022         	movff	_dtoa$1396,dtoa@s
 14678   0056FE                     l1066:
 14679                           
 14680                           ; BSR set to: 0
 14681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 14682   0056FE  0E00               	movlw	0
 14683   005700  6E24               	movwf	(dtoa@i+1)^0,c
 14684   005702  0E4F               	movlw	79
 14685   005704  6E23               	movwf	dtoa@i^0,c
 14686   005706                     
 14687                           ; BSR set to: 0
 14688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 14689   005706  0102               	movlb	2	; () banked
 14690   005708  6BB4               	clrf	(_dbuf+79)& (0+255),b
 14691                           
 14692                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 14693   00570A  EFCB  F02B         	goto	l7173
 14694   00570E                     l7163:
 14695                           
 14696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 14697   00570E  0623               	decf	dtoa@i^0,f,c
 14698   005710  A0D8               	btfss	status,0,c
 14699   005712  0624               	decf	(dtoa@i+1)^0,f,c
 14700   005714                     
 14701                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 14702   005714  0E65               	movlw	low _dbuf
 14703   005716  2423               	addwf	dtoa@i^0,w,c
 14704   005718  6ED9               	movwf	fsr2l,c
 14705   00571A  0E02               	movlw	high _dbuf
 14706   00571C  2024               	addwfc	(dtoa@i+1)^0,w,c
 14707   00571E  6EDA               	movwf	fsr2h,c
 14708   005720  C018  F001         	movff	dtoa@d,___almod@dividend
 14709   005724  C019  F002         	movff	dtoa@d+1,___almod@dividend+1
 14710   005728  C01A  F003         	movff	dtoa@d+2,___almod@dividend+2
 14711   00572C  C01B  F004         	movff	dtoa@d+3,___almod@dividend+3
 14712   005730  0E0A               	movlw	10
 14713   005732  6E05               	movwf	___almod@divisor^0,c
 14714   005734  0E00               	movlw	0
 14715   005736  6E06               	movwf	(___almod@divisor+1)^0,c
 14716   005738  0E00               	movlw	0
 14717   00573A  6E07               	movwf	(___almod@divisor+2)^0,c
 14718   00573C  0E00               	movlw	0
 14719   00573E  6E08               	movwf	(___almod@divisor+3)^0,c
 14720   005740  EC3B  F033         	call	___almod	;wreg free
 14721   005744  C001  F00B         	movff	?___almod,abs@a
 14722   005748  C002  F00C         	movff	?___almod+1,abs@a+1
 14723   00574C  ECC0  F038         	call	_abs	;wreg free
 14724   005750  500B               	movf	?_abs^0,w,c
 14725   005752  0F30               	addlw	48
 14726   005754  6EDF               	movwf	indf2,c
 14727   005756                     
 14728                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
 14729   005756  0620               	decf	dtoa@p^0,f,c
 14730   005758  A0D8               	btfss	status,0,c
 14731   00575A  0621               	decf	(dtoa@p+1)^0,f,c
 14732   00575C                     
 14733                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 14734   00575C  061E               	decf	dtoa@w^0,f,c
 14735   00575E  A0D8               	btfss	status,0,c
 14736   005760  061F               	decf	(dtoa@w+1)^0,f,c
 14737   005762                     
 14738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 14739   005762  C018  F001         	movff	dtoa@d,___aldiv@dividend
 14740   005766  C019  F002         	movff	dtoa@d+1,___aldiv@dividend+1
 14741   00576A  C01A  F003         	movff	dtoa@d+2,___aldiv@dividend+2
 14742   00576E  C01B  F004         	movff	dtoa@d+3,___aldiv@dividend+3
 14743   005772  0E0A               	movlw	10
 14744   005774  6E05               	movwf	___aldiv@divisor^0,c
 14745   005776  0E00               	movlw	0
 14746   005778  6E06               	movwf	(___aldiv@divisor+1)^0,c
 14747   00577A  0E00               	movlw	0
 14748   00577C  6E07               	movwf	(___aldiv@divisor+2)^0,c
 14749   00577E  0E00               	movlw	0
 14750   005780  6E08               	movwf	(___aldiv@divisor+3)^0,c
 14751   005782  ECB2  F030         	call	___aldiv	;wreg free
 14752   005786  C001  F018         	movff	?___aldiv,dtoa@d
 14753   00578A  C002  F019         	movff	?___aldiv+1,dtoa@d+1
 14754   00578E  C003  F01A         	movff	?___aldiv+2,dtoa@d+2
 14755   005792  C004  F01B         	movff	?___aldiv+3,dtoa@d+3
 14756   005796                     l7173:
 14757                           
 14758                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 14759   005796  BE24               	btfsc	(dtoa@i+1)^0,7,c
 14760   005798  EFD6  F02B         	goto	u9031
 14761   00579C  5024               	movf	(dtoa@i+1)^0,w,c
 14762   00579E  E108               	bnz	u9030
 14763   0057A0  0423               	decf	dtoa@i^0,w,c
 14764   0057A2  A0D8               	btfss	status,0,c
 14765   0057A4  EFD6  F02B         	goto	u9031
 14766   0057A8  EFD8  F02B         	goto	u9030
 14767   0057AC                     u9031:
 14768   0057AC  EFF0  F02B         	goto	l7179
 14769   0057B0                     u9030:
 14770   0057B0  5018               	movf	dtoa@d^0,w,c
 14771   0057B2  1019               	iorwf	(dtoa@d+1)^0,w,c
 14772   0057B4  101A               	iorwf	(dtoa@d+2)^0,w,c
 14773   0057B6  101B               	iorwf	(dtoa@d+3)^0,w,c
 14774   0057B8  A4D8               	btfss	status,2,c
 14775   0057BA  EFE1  F02B         	goto	u9041
 14776   0057BE  EFE3  F02B         	goto	u9040
 14777   0057C2                     u9041:
 14778   0057C2  EF87  F02B         	goto	l7163
 14779   0057C6                     u9040:
 14780   0057C6  BE21               	btfsc	(dtoa@p+1)^0,7,c
 14781   0057C8  EFF0  F02B         	goto	u9050
 14782   0057CC  5021               	movf	(dtoa@p+1)^0,w,c
 14783   0057CE  E106               	bnz	u9051
 14784   0057D0  0420               	decf	dtoa@p^0,w,c
 14785   0057D2  B0D8               	btfsc	status,0,c
 14786   0057D4  EFEE  F02B         	goto	u9051
 14787   0057D8  EFF0  F02B         	goto	u9050
 14788   0057DC                     u9051:
 14789   0057DC  EF87  F02B         	goto	l7163
 14790   0057E0                     u9050:
 14791   0057E0                     l7179:
 14792                           
 14793                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 14794   0057E0  5022               	movf	dtoa@s^0,w,c
 14795   0057E2  B4D8               	btfsc	status,2,c
 14796   0057E4  EFF6  F02B         	goto	u9061
 14797   0057E8  EFF8  F02B         	goto	u9060
 14798   0057EC                     u9061:
 14799   0057EC  EF03  F02C         	goto	l7185
 14800   0057F0                     u9060:
 14801   0057F0                     
 14802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 14803   0057F0  0623               	decf	dtoa@i^0,f,c
 14804   0057F2  A0D8               	btfss	status,0,c
 14805   0057F4  0624               	decf	(dtoa@i+1)^0,f,c
 14806   0057F6                     
 14807                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 14808   0057F6  0E65               	movlw	low _dbuf
 14809   0057F8  2423               	addwf	dtoa@i^0,w,c
 14810   0057FA  6ED9               	movwf	fsr2l,c
 14811   0057FC  0E02               	movlw	high _dbuf
 14812   0057FE  2024               	addwfc	(dtoa@i+1)^0,w,c
 14813   005800  6EDA               	movwf	fsr2h,c
 14814   005802  C022  FFDF         	movff	dtoa@s,indf2
 14815   005806                     l7185:
 14816                           
 14817                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 14818   005806  C017  F00F         	movff	dtoa@fp,pad@fp
 14819   00580A  0E65               	movlw	low _dbuf
 14820   00580C  2423               	addwf	dtoa@i^0,w,c
 14821   00580E  6E10               	movwf	pad@buf^0,c
 14822   005810  0E02               	movlw	high _dbuf
 14823   005812  2024               	addwfc	(dtoa@i+1)^0,w,c
 14824   005814  6E11               	movwf	(pad@buf+1)^0,c
 14825   005816  C01E  F012         	movff	dtoa@w,pad@p
 14826   00581A  C01F  F013         	movff	dtoa@w+1,pad@p+1
 14827   00581E  EC2F  F037         	call	_pad	;wreg free
 14828   005822  0012               	return		;funcret
 14829   005824                     __end_of_dtoa:
 14830                           	callstack 0
 14831                           
 14832 ;; *************** function _pad *****************
 14833 ;; Defined at:
 14834 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 14835 ;; Parameters:    Size  Location     Type
 14836 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
 14837 ;;		 -> sprintf@f(11), 
 14838 ;;  buf             2   15[COMRAM] PTR unsigned char 
 14839 ;;		 -> dbuf(80), 
 14840 ;;  p               2   17[COMRAM] int 
 14841 ;; Auto vars:     Size  Location     Type
 14842 ;;  i               2   20[COMRAM] int 
 14843 ;; Return value:  Size  Location     Type
 14844 ;;                  1    wreg      void 
 14845 ;; Registers used:
 14846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14847 ;; Tracked objects:
 14848 ;;		On entry : 0/0
 14849 ;;		On exit  : 0/0
 14850 ;;		Unchanged: 0/0
 14851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14852 ;;      Params:         5       0       0       0       0       0       0       0       0
 14853 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14854 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14855 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14856 ;;Total ram usage:        8 bytes
 14857 ;; Hardware stack levels used: 1
 14858 ;; Hardware stack levels required when called: 4
 14859 ;; This function calls:
 14860 ;;		_fputc
 14861 ;;		_fputs
 14862 ;; This function is called by:
 14863 ;;		_dtoa
 14864 ;;		_efgtoa
 14865 ;;		_utoa
 14866 ;; This function uses a non-reentrant model
 14867 ;;
 14868                           
 14869                           	psect	text42
 14870   006E5E                     __ptext42:
 14871                           	callstack 0
 14872   006E5E                     _pad:
 14873                           	callstack 20
 14874   006E5E                     
 14875                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 14876   006E5E  BE13               	btfsc	(pad@p+1)^0,7,c
 14877   006E60  EF36  F037         	goto	u8750
 14878   006E64  EF34  F037         	goto	u8751
 14879   006E68                     u8751:
 14880   006E68  EF3A  F037         	goto	l1055
 14881   006E6C                     u8750:
 14882   006E6C                     
 14883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 14884   006E6C  0E00               	movlw	0
 14885   006E6E  6E13               	movwf	(pad@p+1)^0,c
 14886   006E70  0E00               	movlw	0
 14887   006E72  6E12               	movwf	pad@p^0,c
 14888   006E74                     l1055:
 14889                           
 14890                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 14891   006E74  0E00               	movlw	0
 14892   006E76  6E16               	movwf	(pad@i+1)^0,c
 14893   006E78  0E00               	movlw	0
 14894   006E7A  6E15               	movwf	pad@i^0,c
 14895                           
 14896                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 14897   006E7C  EF4A  F037         	goto	l7063
 14898   006E80                     l7059:
 14899                           
 14900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 14901   006E80  0E00               	movlw	0
 14902   006E82  6E02               	movwf	(fputc@c+1)^0,c
 14903   006E84  0E20               	movlw	32
 14904   006E86  6E01               	movwf	fputc@c^0,c
 14905   006E88  C00F  F003         	movff	pad@fp,fputc@fp
 14906   006E8C  EC88  F034         	call	_fputc	;wreg free
 14907   006E90                     
 14908                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 14909   006E90  4A15               	infsnz	pad@i^0,f,c
 14910   006E92  2A16               	incf	(pad@i+1)^0,f,c
 14911   006E94                     l7063:
 14912                           
 14913                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 14914   006E94  5012               	movf	pad@p^0,w,c
 14915   006E96  5C15               	subwf	pad@i^0,w,c
 14916   006E98  5016               	movf	(pad@i+1)^0,w,c
 14917   006E9A  0A80               	xorlw	128
 14918   006E9C  6E14               	movwf	??_pad^0,c
 14919   006E9E  5013               	movf	(pad@p+1)^0,w,c
 14920   006EA0  0A80               	xorlw	128
 14921   006EA2  5814               	subwfb	??_pad^0,w,c
 14922   006EA4  A0D8               	btfss	status,0,c
 14923   006EA6  EF57  F037         	goto	u8761
 14924   006EAA  EF59  F037         	goto	u8760
 14925   006EAE                     u8761:
 14926   006EAE  EF40  F037         	goto	l7059
 14927   006EB2                     u8760:
 14928   006EB2                     
 14929                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 14930   006EB2  C010  F009         	movff	pad@buf,fputs@s
 14931   006EB6  C011  F00A         	movff	pad@buf+1,fputs@s+1
 14932   006EBA  C00F  F00B         	movff	pad@fp,fputs@fp
 14933   006EBE  EC68  F038         	call	_fputs	;wreg free
 14934   006EC2  0012               	return		;funcret
 14935   006EC4                     __end_of_pad:
 14936                           	callstack 0
 14937                           
 14938 ;; *************** function _fputs *****************
 14939 ;; Defined at:
 14940 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 14941 ;; Parameters:    Size  Location     Type
 14942 ;;  s               2    8[COMRAM] PTR const unsigned char 
 14943 ;;		 -> dbuf(80), 
 14944 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
 14945 ;;		 -> sprintf@f(11), 
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;  i               2   12[COMRAM] int 
 14948 ;;  c               1   11[COMRAM] unsigned char 
 14949 ;; Return value:  Size  Location     Type
 14950 ;;                  2    8[COMRAM] int 
 14951 ;; Registers used:
 14952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14953 ;; Tracked objects:
 14954 ;;		On entry : 0/0
 14955 ;;		On exit  : 0/0
 14956 ;;		Unchanged: 0/0
 14957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14958 ;;      Params:         3       0       0       0       0       0       0       0       0
 14959 ;;      Locals:         3       0       0       0       0       0       0       0       0
 14960 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14961 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14962 ;;Total ram usage:        6 bytes
 14963 ;; Hardware stack levels used: 1
 14964 ;; Hardware stack levels required when called: 3
 14965 ;; This function calls:
 14966 ;;		_fputc
 14967 ;; This function is called by:
 14968 ;;		_pad
 14969 ;; This function uses a non-reentrant model
 14970 ;;
 14971                           
 14972                           	psect	text43
 14973   0070D0                     __ptext43:
 14974                           	callstack 0
 14975   0070D0                     _fputs:
 14976                           	callstack 20
 14977   0070D0  0E00               	movlw	0
 14978   0070D2  6E0E               	movwf	(fputs@i+1)^0,c
 14979   0070D4  0E00               	movlw	0
 14980   0070D6  6E0D               	movwf	fputs@i^0,c
 14981   0070D8  EF77  F038         	goto	l6575
 14982   0070DC                     l6571:
 14983   0070DC  C00C  F001         	movff	fputs@c,fputc@c
 14984   0070E0  6A02               	clrf	(fputc@c+1)^0,c
 14985   0070E2  C00B  F003         	movff	fputs@fp,fputc@fp
 14986   0070E6  EC88  F034         	call	_fputc	;wreg free
 14987   0070EA  4A0D               	infsnz	fputs@i^0,f,c
 14988   0070EC  2A0E               	incf	(fputs@i+1)^0,f,c
 14989   0070EE                     l6575:
 14990   0070EE  500D               	movf	fputs@i^0,w,c
 14991   0070F0  2409               	addwf	fputs@s^0,w,c
 14992   0070F2  6ED9               	movwf	fsr2l,c
 14993   0070F4  500E               	movf	(fputs@i+1)^0,w,c
 14994   0070F6  200A               	addwfc	(fputs@s+1)^0,w,c
 14995   0070F8  6EDA               	movwf	fsr2h,c
 14996   0070FA  50DF               	movf	indf2,w,c
 14997   0070FC  6E0C               	movwf	fputs@c^0,c
 14998   0070FE  500C               	movf	fputs@c^0,w,c
 14999   007100  A4D8               	btfss	status,2,c
 15000   007102  EF85  F038         	goto	u7981
 15001   007106  EF87  F038         	goto	u7980
 15002   00710A                     u7981:
 15003   00710A  EF6E  F038         	goto	l6571
 15004   00710E                     u7980:
 15005   00710E  0012               	return		;funcret
 15006   007110                     __end_of_fputs:
 15007                           	callstack 0
 15008                           
 15009 ;; *************** function _fputc *****************
 15010 ;; Defined at:
 15011 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 15012 ;; Parameters:    Size  Location     Type
 15013 ;;  c               2    0[COMRAM] int 
 15014 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
 15015 ;;		 -> sprintf@f(11), 
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;		None
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  2    0[COMRAM] int 
 15020 ;; Registers used:
 15021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15027 ;;      Params:         3       0       0       0       0       0       0       0       0
 15028 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15029 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15030 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15031 ;;Total ram usage:        8 bytes
 15032 ;; Hardware stack levels used: 1
 15033 ;; Hardware stack levels required when called: 2
 15034 ;; This function calls:
 15035 ;;		_putch
 15036 ;; This function is called by:
 15037 ;;		_pad
 15038 ;;		_stoa
 15039 ;;		_vfpfcnvrt
 15040 ;;		_fputs
 15041 ;; This function uses a non-reentrant model
 15042 ;;
 15043                           
 15044                           	psect	text44
 15045   006910                     __ptext44:
 15046                           	callstack 0
 15047   006910                     _fputc:
 15048                           	callstack 20
 15049   006910  5003               	movf	fputc@fp^0,w,c
 15050   006912  B4D8               	btfsc	status,2,c
 15051   006914  EF8E  F034         	goto	u7551
 15052   006918  EF90  F034         	goto	u7550
 15053   00691C                     u7551:
 15054   00691C  EF98  F034         	goto	l6365
 15055   006920                     u7550:
 15056   006920  5003               	movf	fputc@fp^0,w,c
 15057   006922  A4D8               	btfss	status,2,c
 15058   006924  EF96  F034         	goto	u7561
 15059   006928  EF98  F034         	goto	u7560
 15060   00692C                     u7561:
 15061   00692C  EF9D  F034         	goto	l6367
 15062   006930                     u7560:
 15063   006930                     l6365:
 15064   006930  5001               	movf	fputc@c^0,w,c
 15065   006932  EC1B  F039         	call	_putch
 15066   006936  EFE4  F034         	goto	l1272
 15067   00693A                     l6367:
 15068   00693A  5003               	movf	fputc@fp^0,w,c
 15069   00693C  6ED9               	movwf	fsr2l,c
 15070   00693E  6ADA               	clrf	fsr2h,c
 15071   006940  0E09               	movlw	9
 15072   006942  26D9               	addwf	fsr2l,f,c
 15073   006944  50DE               	movf	postinc2,w,c
 15074   006946  10DE               	iorwf	postinc2,w,c
 15075   006948  B4D8               	btfsc	status,2,c
 15076   00694A  EFA9  F034         	goto	u7571
 15077   00694E  EFAB  F034         	goto	u7570
 15078   006952                     u7571:
 15079   006952  EFC4  F034         	goto	l6371
 15080   006956                     u7570:
 15081   006956  5003               	movf	fputc@fp^0,w,c
 15082   006958  6ED9               	movwf	fsr2l,c
 15083   00695A  6ADA               	clrf	fsr2h,c
 15084   00695C  0E09               	movlw	9
 15085   00695E  26D9               	addwf	fsr2l,f,c
 15086   006960  5003               	movf	fputc@fp^0,w,c
 15087   006962  6EE1               	movwf	fsr1l,c
 15088   006964  6AE2               	clrf	fsr1h,c
 15089   006966  0E02               	movlw	2
 15090   006968  26E1               	addwf	fsr1l,f,c
 15091   00696A  50DE               	movf	postinc2,w,c
 15092   00696C  5CE6               	subwf	postinc1,w,c
 15093   00696E  50E6               	movf	postinc1,w,c
 15094   006970  0A80               	xorlw	128
 15095   006972  6E08               	movwf	(??_fputc+4)^0,c
 15096   006974  50DE               	movf	postinc2,w,c
 15097   006976  0A80               	xorlw	128
 15098   006978  5808               	subwfb	(??_fputc+4)^0,w,c
 15099   00697A  B0D8               	btfsc	status,0,c
 15100   00697C  EFC2  F034         	goto	u7581
 15101   006980  EFC4  F034         	goto	u7580
 15102   006984                     u7581:
 15103   006984  EFE4  F034         	goto	l1272
 15104   006988                     u7580:
 15105   006988                     l6371:
 15106   006988  5003               	movf	fputc@fp^0,w,c
 15107   00698A  6ED9               	movwf	fsr2l,c
 15108   00698C  6ADA               	clrf	fsr2h,c
 15109   00698E  0E02               	movlw	2
 15110   006990  26D9               	addwf	fsr2l,f,c
 15111   006992  CFDE F004          	movff	postinc2,??_fputc
 15112   006996  CFDD F005          	movff	postdec2,??_fputc+1
 15113   00699A  5003               	movf	fputc@fp^0,w,c
 15114   00699C  6ED9               	movwf	fsr2l,c
 15115   00699E  6ADA               	clrf	fsr2h,c
 15116   0069A0  CFDE F006          	movff	postinc2,??_fputc+2
 15117   0069A4  CFDD F007          	movff	postdec2,??_fputc+3
 15118   0069A8  5004               	movf	??_fputc^0,w,c
 15119   0069AA  2406               	addwf	(??_fputc+2)^0,w,c
 15120   0069AC  6ED9               	movwf	fsr2l,c
 15121   0069AE  5005               	movf	(??_fputc+1)^0,w,c
 15122   0069B0  2007               	addwfc	(??_fputc+3)^0,w,c
 15123   0069B2  6EDA               	movwf	fsr2h,c
 15124   0069B4  C001  FFDF         	movff	fputc@c,indf2
 15125   0069B8  5003               	movf	fputc@fp^0,w,c
 15126   0069BA  6ED9               	movwf	fsr2l,c
 15127   0069BC  6ADA               	clrf	fsr2h,c
 15128   0069BE  0E02               	movlw	2
 15129   0069C0  26D9               	addwf	fsr2l,f,c
 15130   0069C2  2ADE               	incf	postinc2,f,c
 15131   0069C4  0E00               	movlw	0
 15132   0069C6  22DD               	addwfc	postdec2,f,c
 15133   0069C8                     l1272:
 15134   0069C8  0012               	return		;funcret
 15135   0069CA                     __end_of_fputc:
 15136                           	callstack 0
 15137                           
 15138 ;; *************** function _putch *****************
 15139 ;; Defined at:
 15140 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 15141 ;; Parameters:    Size  Location     Type
 15142 ;;  c               1    wreg     unsigned char 
 15143 ;; Auto vars:     Size  Location     Type
 15144 ;;  c               1    0[COMRAM] unsigned char 
 15145 ;; Return value:  Size  Location     Type
 15146 ;;                  1    wreg      void 
 15147 ;; Registers used:
 15148 ;;		wreg
 15149 ;; Tracked objects:
 15150 ;;		On entry : 0/0
 15151 ;;		On exit  : 0/0
 15152 ;;		Unchanged: 0/0
 15153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15154 ;;      Params:         0       0       0       0       0       0       0       0       0
 15155 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15156 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15157 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15158 ;;Total ram usage:        0 bytes
 15159 ;; Hardware stack levels used: 1
 15160 ;; Hardware stack levels required when called: 1
 15161 ;; This function calls:
 15162 ;;		Nothing
 15163 ;; This function is called by:
 15164 ;;		_fputc
 15165 ;; This function uses a non-reentrant model
 15166 ;;
 15167                           
 15168                           	psect	text45
 15169   007236                     __ptext45:
 15170                           	callstack 0
 15171   007236                     _putch:
 15172                           	callstack 20
 15173   007236  0012               	return		;funcret
 15174   007238                     __end_of_putch:
 15175                           	callstack 0
 15176                           
 15177 ;; *************** function _abs *****************
 15178 ;; Defined at:
 15179 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 15180 ;; Parameters:    Size  Location     Type
 15181 ;;  a               2   10[COMRAM] int 
 15182 ;; Auto vars:     Size  Location     Type
 15183 ;;		None
 15184 ;; Return value:  Size  Location     Type
 15185 ;;                  2   10[COMRAM] int 
 15186 ;; Registers used:
 15187 ;;		wreg, status,2, status,0
 15188 ;; Tracked objects:
 15189 ;;		On entry : 0/0
 15190 ;;		On exit  : 0/0
 15191 ;;		Unchanged: 0/0
 15192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15193 ;;      Params:         2       0       0       0       0       0       0       0       0
 15194 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15195 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15196 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15197 ;;Total ram usage:        4 bytes
 15198 ;; Hardware stack levels used: 1
 15199 ;; Hardware stack levels required when called: 1
 15200 ;; This function calls:
 15201 ;;		Nothing
 15202 ;; This function is called by:
 15203 ;;		_dtoa
 15204 ;; This function uses a non-reentrant model
 15205 ;;
 15206                           
 15207                           	psect	text46
 15208   007180                     __ptext46:
 15209                           	callstack 0
 15210   007180                     _abs:
 15211                           	callstack 23
 15212   007180  BE0C               	btfsc	(abs@a+1)^0,7,c
 15213   007182  EFC5  F038         	goto	u8771
 15214   007186  EFC7  F038         	goto	u8770
 15215   00718A                     u8771:
 15216   00718A  EFCD  F038         	goto	l1231
 15217   00718E                     u8770:
 15218   00718E  C00B  F00B         	movff	abs@a,?_abs
 15219   007192  C00C  F00C         	movff	abs@a+1,?_abs+1
 15220   007196  EFD9  F038         	goto	l1234
 15221   00719A                     l1231:
 15222   00719A  C00B  F00D         	movff	abs@a,??_abs
 15223   00719E  C00C  F00E         	movff	abs@a+1,??_abs+1
 15224   0071A2  1E0D               	comf	??_abs^0,f,c
 15225   0071A4  1E0E               	comf	(??_abs+1)^0,f,c
 15226   0071A6  4A0D               	infsnz	??_abs^0,f,c
 15227   0071A8  2A0E               	incf	(??_abs+1)^0,f,c
 15228   0071AA  C00D  F00B         	movff	??_abs,?_abs
 15229   0071AE  C00E  F00C         	movff	??_abs+1,?_abs+1
 15230   0071B2                     l1234:
 15231   0071B2  0012               	return		;funcret
 15232   0071B4                     __end_of_abs:
 15233                           	callstack 0
 15234                           
 15235 ;; *************** function ___almod *****************
 15236 ;; Defined at:
 15237 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
 15238 ;; Parameters:    Size  Location     Type
 15239 ;;  dividend        4    0[COMRAM] long 
 15240 ;;  divisor         4    4[COMRAM] long 
 15241 ;; Auto vars:     Size  Location     Type
 15242 ;;  sign            1    9[COMRAM] unsigned char 
 15243 ;;  counter         1    8[COMRAM] unsigned char 
 15244 ;; Return value:  Size  Location     Type
 15245 ;;                  4    0[COMRAM] long 
 15246 ;; Registers used:
 15247 ;;		wreg, status,2, status,0
 15248 ;; Tracked objects:
 15249 ;;		On entry : 0/0
 15250 ;;		On exit  : 0/0
 15251 ;;		Unchanged: 0/0
 15252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15253 ;;      Params:         8       0       0       0       0       0       0       0       0
 15254 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15255 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15256 ;;      Totals:        10       0       0       0       0       0       0       0       0
 15257 ;;Total ram usage:       10 bytes
 15258 ;; Hardware stack levels used: 1
 15259 ;; Hardware stack levels required when called: 1
 15260 ;; This function calls:
 15261 ;;		Nothing
 15262 ;; This function is called by:
 15263 ;;		_dtoa
 15264 ;; This function uses a non-reentrant model
 15265 ;;
 15266                           
 15267                           	psect	text47
 15268   006676                     __ptext47:
 15269                           	callstack 0
 15270   006676                     ___almod:
 15271                           	callstack 23
 15272   006676  6A0A               	clrf	___almod@sign^0,c
 15273   006678  BE04               	btfsc	(___almod@dividend+3)^0,7,c
 15274   00667A  EF43  F033         	goto	u8080
 15275   00667E  EF41  F033         	goto	u8081
 15276   006682                     u8081:
 15277   006682  EF4D  F033         	goto	l6651
 15278   006686                     u8080:
 15279   006686  1E04               	comf	(___almod@dividend+3)^0,f,c
 15280   006688  1E03               	comf	(___almod@dividend+2)^0,f,c
 15281   00668A  1E02               	comf	(___almod@dividend+1)^0,f,c
 15282   00668C  6C01               	negf	___almod@dividend^0,c
 15283   00668E  0E00               	movlw	0
 15284   006690  2202               	addwfc	(___almod@dividend+1)^0,f,c
 15285   006692  2203               	addwfc	(___almod@dividend+2)^0,f,c
 15286   006694  2204               	addwfc	(___almod@dividend+3)^0,f,c
 15287   006696  0E01               	movlw	1
 15288   006698  6E0A               	movwf	___almod@sign^0,c
 15289   00669A                     l6651:
 15290   00669A  BE08               	btfsc	(___almod@divisor+3)^0,7,c
 15291   00669C  EF54  F033         	goto	u8090
 15292   0066A0  EF52  F033         	goto	u8091
 15293   0066A4                     u8091:
 15294   0066A4  EF5C  F033         	goto	l6655
 15295   0066A8                     u8090:
 15296   0066A8  1E08               	comf	(___almod@divisor+3)^0,f,c
 15297   0066AA  1E07               	comf	(___almod@divisor+2)^0,f,c
 15298   0066AC  1E06               	comf	(___almod@divisor+1)^0,f,c
 15299   0066AE  6C05               	negf	___almod@divisor^0,c
 15300   0066B0  0E00               	movlw	0
 15301   0066B2  2206               	addwfc	(___almod@divisor+1)^0,f,c
 15302   0066B4  2207               	addwfc	(___almod@divisor+2)^0,f,c
 15303   0066B6  2208               	addwfc	(___almod@divisor+3)^0,f,c
 15304   0066B8                     l6655:
 15305   0066B8  5005               	movf	___almod@divisor^0,w,c
 15306   0066BA  1006               	iorwf	(___almod@divisor+1)^0,w,c
 15307   0066BC  1007               	iorwf	(___almod@divisor+2)^0,w,c
 15308   0066BE  1008               	iorwf	(___almod@divisor+3)^0,w,c
 15309   0066C0  B4D8               	btfsc	status,2,c
 15310   0066C2  EF65  F033         	goto	u8101
 15311   0066C6  EF67  F033         	goto	u8100
 15312   0066CA                     u8101:
 15313   0066CA  EF97  F033         	goto	l6671
 15314   0066CE                     u8100:
 15315   0066CE  0E01               	movlw	1
 15316   0066D0  6E09               	movwf	___almod@counter^0,c
 15317   0066D2  EF71  F033         	goto	l6661
 15318   0066D6                     l6659:
 15319   0066D6  90D8               	bcf	status,0,c
 15320   0066D8  3605               	rlcf	___almod@divisor^0,f,c
 15321   0066DA  3606               	rlcf	(___almod@divisor+1)^0,f,c
 15322   0066DC  3607               	rlcf	(___almod@divisor+2)^0,f,c
 15323   0066DE  3608               	rlcf	(___almod@divisor+3)^0,f,c
 15324   0066E0  2A09               	incf	___almod@counter^0,f,c
 15325   0066E2                     l6661:
 15326   0066E2  AE08               	btfss	(___almod@divisor+3)^0,7,c
 15327   0066E4  EF76  F033         	goto	u8111
 15328   0066E8  EF78  F033         	goto	u8110
 15329   0066EC                     u8111:
 15330   0066EC  EF6B  F033         	goto	l6659
 15331   0066F0                     u8110:
 15332   0066F0                     l6663:
 15333   0066F0  5005               	movf	___almod@divisor^0,w,c
 15334   0066F2  5C01               	subwf	___almod@dividend^0,w,c
 15335   0066F4  5006               	movf	(___almod@divisor+1)^0,w,c
 15336   0066F6  5802               	subwfb	(___almod@dividend+1)^0,w,c
 15337   0066F8  5007               	movf	(___almod@divisor+2)^0,w,c
 15338   0066FA  5803               	subwfb	(___almod@dividend+2)^0,w,c
 15339   0066FC  5008               	movf	(___almod@divisor+3)^0,w,c
 15340   0066FE  5804               	subwfb	(___almod@dividend+3)^0,w,c
 15341   006700  A0D8               	btfss	status,0,c
 15342   006702  EF85  F033         	goto	u8121
 15343   006706  EF87  F033         	goto	u8120
 15344   00670A                     u8121:
 15345   00670A  EF8F  F033         	goto	l6667
 15346   00670E                     u8120:
 15347   00670E  5005               	movf	___almod@divisor^0,w,c
 15348   006710  5E01               	subwf	___almod@dividend^0,f,c
 15349   006712  5006               	movf	(___almod@divisor+1)^0,w,c
 15350   006714  5A02               	subwfb	(___almod@dividend+1)^0,f,c
 15351   006716  5007               	movf	(___almod@divisor+2)^0,w,c
 15352   006718  5A03               	subwfb	(___almod@dividend+2)^0,f,c
 15353   00671A  5008               	movf	(___almod@divisor+3)^0,w,c
 15354   00671C  5A04               	subwfb	(___almod@dividend+3)^0,f,c
 15355   00671E                     l6667:
 15356   00671E  90D8               	bcf	status,0,c
 15357   006720  3208               	rrcf	(___almod@divisor+3)^0,f,c
 15358   006722  3207               	rrcf	(___almod@divisor+2)^0,f,c
 15359   006724  3206               	rrcf	(___almod@divisor+1)^0,f,c
 15360   006726  3205               	rrcf	___almod@divisor^0,f,c
 15361   006728  2E09               	decfsz	___almod@counter^0,f,c
 15362   00672A  EF78  F033         	goto	l6663
 15363   00672E                     l6671:
 15364   00672E  500A               	movf	___almod@sign^0,w,c
 15365   006730  B4D8               	btfsc	status,2,c
 15366   006732  EF9D  F033         	goto	u8131
 15367   006736  EF9F  F033         	goto	u8130
 15368   00673A                     u8131:
 15369   00673A  EFA7  F033         	goto	l6675
 15370   00673E                     u8130:
 15371   00673E  1E04               	comf	(___almod@dividend+3)^0,f,c
 15372   006740  1E03               	comf	(___almod@dividend+2)^0,f,c
 15373   006742  1E02               	comf	(___almod@dividend+1)^0,f,c
 15374   006744  6C01               	negf	___almod@dividend^0,c
 15375   006746  0E00               	movlw	0
 15376   006748  2202               	addwfc	(___almod@dividend+1)^0,f,c
 15377   00674A  2203               	addwfc	(___almod@dividend+2)^0,f,c
 15378   00674C  2204               	addwfc	(___almod@dividend+3)^0,f,c
 15379   00674E                     l6675:
 15380   00674E  C001  F001         	movff	___almod@dividend,?___almod
 15381   006752  C002  F002         	movff	___almod@dividend+1,?___almod+1
 15382   006756  C003  F003         	movff	___almod@dividend+2,?___almod+2
 15383   00675A  C004  F004         	movff	___almod@dividend+3,?___almod+3
 15384   00675E  0012               	return		;funcret
 15385   006760                     __end_of___almod:
 15386                           	callstack 0
 15387                           
 15388 ;; *************** function ___aldiv *****************
 15389 ;; Defined at:
 15390 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
 15391 ;; Parameters:    Size  Location     Type
 15392 ;;  dividend        4    0[COMRAM] long 
 15393 ;;  divisor         4    4[COMRAM] long 
 15394 ;; Auto vars:     Size  Location     Type
 15395 ;;  quotient        4   10[COMRAM] long 
 15396 ;;  sign            1    9[COMRAM] unsigned char 
 15397 ;;  counter         1    8[COMRAM] unsigned char 
 15398 ;; Return value:  Size  Location     Type
 15399 ;;                  4    0[COMRAM] long 
 15400 ;; Registers used:
 15401 ;;		wreg, status,2, status,0
 15402 ;; Tracked objects:
 15403 ;;		On entry : 0/0
 15404 ;;		On exit  : 0/0
 15405 ;;		Unchanged: 0/0
 15406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15407 ;;      Params:         8       0       0       0       0       0       0       0       0
 15408 ;;      Locals:         6       0       0       0       0       0       0       0       0
 15409 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15410 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15411 ;;Total ram usage:       14 bytes
 15412 ;; Hardware stack levels used: 1
 15413 ;; Hardware stack levels required when called: 1
 15414 ;; This function calls:
 15415 ;;		Nothing
 15416 ;; This function is called by:
 15417 ;;		_dtoa
 15418 ;; This function uses a non-reentrant model
 15419 ;;
 15420                           
 15421                           	psect	text48
 15422   006164                     __ptext48:
 15423                           	callstack 0
 15424   006164                     ___aldiv:
 15425                           	callstack 23
 15426   006164  6A0A               	clrf	___aldiv@sign^0,c
 15427   006166  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 15428   006168  EFBA  F030         	goto	u8020
 15429   00616C  EFB8  F030         	goto	u8021
 15430   006170                     u8021:
 15431   006170  EFC4  F030         	goto	l6607
 15432   006174                     u8020:
 15433   006174  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 15434   006176  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 15435   006178  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 15436   00617A  6C05               	negf	___aldiv@divisor^0,c
 15437   00617C  0E00               	movlw	0
 15438   00617E  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 15439   006180  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 15440   006182  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 15441   006184  0E01               	movlw	1
 15442   006186  6E0A               	movwf	___aldiv@sign^0,c
 15443   006188                     l6607:
 15444   006188  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 15445   00618A  EFCB  F030         	goto	u8030
 15446   00618E  EFC9  F030         	goto	u8031
 15447   006192                     u8031:
 15448   006192  EFD5  F030         	goto	l6613
 15449   006196                     u8030:
 15450   006196  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 15451   006198  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 15452   00619A  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 15453   00619C  6C01               	negf	___aldiv@dividend^0,c
 15454   00619E  0E00               	movlw	0
 15455   0061A0  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 15456   0061A2  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 15457   0061A4  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 15458   0061A6  0E01               	movlw	1
 15459   0061A8  1A0A               	xorwf	___aldiv@sign^0,f,c
 15460   0061AA                     l6613:
 15461   0061AA  0E00               	movlw	0
 15462   0061AC  6E0B               	movwf	___aldiv@quotient^0,c
 15463   0061AE  0E00               	movlw	0
 15464   0061B0  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 15465   0061B2  0E00               	movlw	0
 15466   0061B4  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 15467   0061B6  0E00               	movlw	0
 15468   0061B8  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 15469   0061BA  5005               	movf	___aldiv@divisor^0,w,c
 15470   0061BC  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 15471   0061BE  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 15472   0061C0  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 15473   0061C2  B4D8               	btfsc	status,2,c
 15474   0061C4  EFE6  F030         	goto	u8041
 15475   0061C8  EFE8  F030         	goto	u8040
 15476   0061CC                     u8041:
 15477   0061CC  EF1E  F031         	goto	l6635
 15478   0061D0                     u8040:
 15479   0061D0  0E01               	movlw	1
 15480   0061D2  6E09               	movwf	___aldiv@counter^0,c
 15481   0061D4  EFF2  F030         	goto	l6621
 15482   0061D8                     l6619:
 15483   0061D8  90D8               	bcf	status,0,c
 15484   0061DA  3605               	rlcf	___aldiv@divisor^0,f,c
 15485   0061DC  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 15486   0061DE  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 15487   0061E0  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 15488   0061E2  2A09               	incf	___aldiv@counter^0,f,c
 15489   0061E4                     l6621:
 15490   0061E4  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 15491   0061E6  EFF7  F030         	goto	u8051
 15492   0061EA  EFF9  F030         	goto	u8050
 15493   0061EE                     u8051:
 15494   0061EE  EFEC  F030         	goto	l6619
 15495   0061F2                     u8050:
 15496   0061F2                     l6623:
 15497   0061F2  90D8               	bcf	status,0,c
 15498   0061F4  360B               	rlcf	___aldiv@quotient^0,f,c
 15499   0061F6  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 15500   0061F8  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 15501   0061FA  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 15502   0061FC  5005               	movf	___aldiv@divisor^0,w,c
 15503   0061FE  5C01               	subwf	___aldiv@dividend^0,w,c
 15504   006200  5006               	movf	(___aldiv@divisor+1)^0,w,c
 15505   006202  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 15506   006204  5007               	movf	(___aldiv@divisor+2)^0,w,c
 15507   006206  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 15508   006208  5008               	movf	(___aldiv@divisor+3)^0,w,c
 15509   00620A  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 15510   00620C  A0D8               	btfss	status,0,c
 15511   00620E  EF0B  F031         	goto	u8061
 15512   006212  EF0D  F031         	goto	u8060
 15513   006216                     u8061:
 15514   006216  EF16  F031         	goto	l6631
 15515   00621A                     u8060:
 15516   00621A  5005               	movf	___aldiv@divisor^0,w,c
 15517   00621C  5E01               	subwf	___aldiv@dividend^0,f,c
 15518   00621E  5006               	movf	(___aldiv@divisor+1)^0,w,c
 15519   006220  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 15520   006222  5007               	movf	(___aldiv@divisor+2)^0,w,c
 15521   006224  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 15522   006226  5008               	movf	(___aldiv@divisor+3)^0,w,c
 15523   006228  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 15524   00622A  800B               	bsf	___aldiv@quotient^0,0,c
 15525   00622C                     l6631:
 15526   00622C  90D8               	bcf	status,0,c
 15527   00622E  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 15528   006230  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 15529   006232  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 15530   006234  3205               	rrcf	___aldiv@divisor^0,f,c
 15531   006236  2E09               	decfsz	___aldiv@counter^0,f,c
 15532   006238  EFF9  F030         	goto	l6623
 15533   00623C                     l6635:
 15534   00623C  500A               	movf	___aldiv@sign^0,w,c
 15535   00623E  B4D8               	btfsc	status,2,c
 15536   006240  EF24  F031         	goto	u8071
 15537   006244  EF26  F031         	goto	u8070
 15538   006248                     u8071:
 15539   006248  EF2E  F031         	goto	l6639
 15540   00624C                     u8070:
 15541   00624C  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 15542   00624E  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 15543   006250  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 15544   006252  6C0B               	negf	___aldiv@quotient^0,c
 15545   006254  0E00               	movlw	0
 15546   006256  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 15547   006258  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 15548   00625A  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 15549   00625C                     l6639:
 15550   00625C  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 15551   006260  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 15552   006264  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 15553   006268  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 15554   00626C  0012               	return		;funcret
 15555   00626E                     __end_of___aldiv:
 15556                           	callstack 0
 15557                           
 15558 ;; *************** function _Check_Flow_Reset *****************
 15559 ;; Defined at:
 15560 ;;		line 317 in file "newmain.c"
 15561 ;; Parameters:    Size  Location     Type
 15562 ;;		None
 15563 ;; Auto vars:     Size  Location     Type
 15564 ;;		None
 15565 ;; Return value:  Size  Location     Type
 15566 ;;                  1    wreg      void 
 15567 ;; Registers used:
 15568 ;;		wreg, status,2, status,0
 15569 ;; Tracked objects:
 15570 ;;		On entry : 0/0
 15571 ;;		On exit  : 0/0
 15572 ;;		Unchanged: 0/0
 15573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15574 ;;      Params:         0       0       0       0       0       0       0       0       0
 15575 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15576 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15577 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15578 ;;Total ram usage:        4 bytes
 15579 ;; Hardware stack levels used: 1
 15580 ;; Hardware stack levels required when called: 1
 15581 ;; This function calls:
 15582 ;;		Nothing
 15583 ;; This function is called by:
 15584 ;;		_main
 15585 ;; This function uses a non-reentrant model
 15586 ;;
 15587                           
 15588                           	psect	text49
 15589   006CFA                     __ptext49:
 15590                           	callstack 0
 15591   006CFA                     _Check_Flow_Reset:
 15592                           	callstack 29
 15593   006CFA                     
 15594                           ;newmain.c: 318:     if (last_flow_reset_time > 0 &&
 15595   006CFA  0101               	movlb	1	; () banked
 15596   006CFC  51CC               	movf	_last_flow_reset_time& (0+255),w,b
 15597   006CFE  11CD               	iorwf	(_last_flow_reset_time+1)& (0+255),w,b
 15598   006D00  11CE               	iorwf	(_last_flow_reset_time+2)& (0+255),w,b
 15599   006D02  11CF               	iorwf	(_last_flow_reset_time+3)& (0+255),w,b
 15600   006D04  B4D8               	btfsc	status,2,c
 15601   006D06  EF87  F036         	goto	u11011
 15602   006D0A  EF89  F036         	goto	u11010
 15603   006D0E                     u11011:
 15604   006D0E  EFB9  F036         	goto	l231
 15605   006D12                     u11010:
 15606   006D12                     
 15607                           ; BSR set to: 1
 15608   006D12  51CC               	movf	_last_flow_reset_time& (0+255),w,b
 15609   006D14  5DD0               	subwf	_system_millis& (0+255),w,b
 15610   006D16  6E01               	movwf	??_Check_Flow_Reset^0,c
 15611   006D18  51CD               	movf	(_last_flow_reset_time+1)& (0+255),w,b
 15612   006D1A  59D1               	subwfb	(_system_millis+1)& (0+255),w,b
 15613   006D1C  6E02               	movwf	(??_Check_Flow_Reset+1)^0,c
 15614   006D1E  51CE               	movf	(_last_flow_reset_time+2)& (0+255),w,b
 15615   006D20  59D2               	subwfb	(_system_millis+2)& (0+255),w,b
 15616   006D22  6E03               	movwf	(??_Check_Flow_Reset+2)^0,c
 15617   006D24  51CF               	movf	(_last_flow_reset_time+3)& (0+255),w,b
 15618   006D26  59D3               	subwfb	(_system_millis+3)& (0+255),w,b
 15619   006D28  6E04               	movwf	(??_Check_Flow_Reset+3)^0,c
 15620   006D2A  5004               	movf	(??_Check_Flow_Reset+3)^0,w,c
 15621   006D2C  1003               	iorwf	(??_Check_Flow_Reset+2)^0,w,c
 15622   006D2E  E10B               	bnz	u11020
 15623   006D30  0E88               	movlw	136
 15624   006D32  5C01               	subwf	??_Check_Flow_Reset^0,w,c
 15625   006D34  0E13               	movlw	19
 15626   006D36  5802               	subwfb	(??_Check_Flow_Reset+1)^0,w,c
 15627   006D38  A0D8               	btfss	status,0,c
 15628   006D3A  EFA1  F036         	goto	u11021
 15629   006D3E  EFA3  F036         	goto	u11020
 15630   006D42                     u11021:
 15631   006D42  EFB9  F036         	goto	l231
 15632   006D46                     u11020:
 15633   006D46                     
 15634                           ; BSR set to: 1
 15635                           ;newmain.c: 319:         (system_millis - last_flow_reset_time) >= 5000) {;newmain.c: 32
      +                          0:         total_flow = 0.0;
 15636   006D46  0E00               	movlw	0
 15637   006D48  6FDC               	movwf	_total_flow& (0+255),b
 15638   006D4A  0E00               	movlw	0
 15639   006D4C  6FDD               	movwf	(_total_flow+1)& (0+255),b
 15640   006D4E  0E00               	movlw	0
 15641   006D50  6FDE               	movwf	(_total_flow+2)& (0+255),b
 15642   006D52  0E00               	movlw	0
 15643   006D54  6FDF               	movwf	(_total_flow+3)& (0+255),b
 15644                           
 15645                           ;newmain.c: 321:         pulse_count = 0;
 15646   006D56  0E00               	movlw	0
 15647   006D58  0100               	movlb	0	; () banked
 15648   006D5A  6FF6               	movwf	(_pulse_count+1)& (0+255),b	;volatile
 15649   006D5C  0E00               	movlw	0
 15650   006D5E  6FF5               	movwf	_pulse_count& (0+255),b	;volatile
 15651                           
 15652                           ;newmain.c: 322:         last_flow_reset_time = 0;
 15653   006D60  0E00               	movlw	0
 15654   006D62  0101               	movlb	1	; () banked
 15655   006D64  6FCC               	movwf	_last_flow_reset_time& (0+255),b
 15656   006D66  0E00               	movlw	0
 15657   006D68  6FCD               	movwf	(_last_flow_reset_time+1)& (0+255),b
 15658   006D6A  0E00               	movlw	0
 15659   006D6C  6FCE               	movwf	(_last_flow_reset_time+2)& (0+255),b
 15660   006D6E  0E00               	movlw	0
 15661   006D70  6FCF               	movwf	(_last_flow_reset_time+3)& (0+255),b
 15662   006D72                     l231:
 15663                           
 15664                           ; BSR set to: 1
 15665   006D72  0012               	return		;funcret
 15666   006D74                     __end_of_Check_Flow_Reset:
 15667                           	callstack 0
 15668                           
 15669 ;; *************** function _Calculate_Flow *****************
 15670 ;; Defined at:
 15671 ;;		line 485 in file "newmain.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;		None
 15674 ;; Auto vars:     Size  Location     Type
 15675 ;;  pulses          2   92[COMRAM] unsigned int 
 15676 ;; Return value:  Size  Location     Type
 15677 ;;                  1    wreg      void 
 15678 ;; Registers used:
 15679 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15680 ;; Tracked objects:
 15681 ;;		On entry : 0/0
 15682 ;;		On exit  : 0/0
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15685 ;;      Params:         0       0       0       0       0       0       0       0       0
 15686 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15687 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15688 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15689 ;;Total ram usage:        6 bytes
 15690 ;; Hardware stack levels used: 1
 15691 ;; Hardware stack levels required when called: 2
 15692 ;; This function calls:
 15693 ;;		___fladd
 15694 ;;		___fldiv
 15695 ;;		___flmul
 15696 ;;		___xxtofl
 15697 ;; This function is called by:
 15698 ;;		_main
 15699 ;; This function uses a non-reentrant model
 15700 ;;
 15701                           
 15702                           	psect	text50
 15703   005CD4                     __ptext50:
 15704                           	callstack 0
 15705   005CD4                     _Calculate_Flow:
 15706                           	callstack 28
 15707   005CD4                     
 15708                           ;newmain.c: 486:     static unsigned int last_pulse_count = 0;;newmain.c: 487:     stati
      +                          c unsigned long last_calc_time = 0;;newmain.c: 490:     if(system_millis - last_calc_tim
      +                          e >= 1000) {
 15709   005CD4  0102               	movlb	2	; () banked
 15710   005CD6  515D               	movf	Calculate_Flow@last_calc_time& (0+255),w,b
 15711   005CD8  0101               	movlb	1	; () banked
 15712   005CDA  5DD0               	subwf	_system_millis& (0+255),w,b
 15713   005CDC  6E59               	movwf	??_Calculate_Flow^0,c
 15714   005CDE  0102               	movlb	2	; () banked
 15715   005CE0  515E               	movf	(Calculate_Flow@last_calc_time+1)& (0+255),w,b
 15716   005CE2  0101               	movlb	1	; () banked
 15717   005CE4  59D1               	subwfb	(_system_millis+1)& (0+255),w,b
 15718   005CE6  6E5A               	movwf	(??_Calculate_Flow+1)^0,c
 15719   005CE8  0102               	movlb	2	; () banked
 15720   005CEA  515F               	movf	(Calculate_Flow@last_calc_time+2)& (0+255),w,b
 15721   005CEC  0101               	movlb	1	; () banked
 15722   005CEE  59D2               	subwfb	(_system_millis+2)& (0+255),w,b
 15723   005CF0  6E5B               	movwf	(??_Calculate_Flow+2)^0,c
 15724   005CF2  0102               	movlb	2	; () banked
 15725   005CF4  5160               	movf	(Calculate_Flow@last_calc_time+3)& (0+255),w,b
 15726   005CF6  0101               	movlb	1	; () banked
 15727   005CF8  59D3               	subwfb	(_system_millis+3)& (0+255),w,b
 15728   005CFA  6E5C               	movwf	(??_Calculate_Flow+3)^0,c
 15729   005CFC  505C               	movf	(??_Calculate_Flow+3)^0,w,c
 15730   005CFE  105B               	iorwf	(??_Calculate_Flow+2)^0,w,c
 15731   005D00  E10B               	bnz	u10820
 15732   005D02  0EE8               	movlw	232
 15733   005D04  5C59               	subwf	??_Calculate_Flow^0,w,c
 15734   005D06  0E03               	movlw	3
 15735   005D08  585A               	subwfb	(??_Calculate_Flow+1)^0,w,c
 15736   005D0A  A0D8               	btfss	status,0,c
 15737   005D0C  EF8A  F02E         	goto	u10821
 15738   005D10  EF8C  F02E         	goto	u10820
 15739   005D14                     u10821:
 15740   005D14  EF02  F02F         	goto	l310
 15741   005D18                     u10820:
 15742   005D18                     
 15743                           ; BSR set to: 1
 15744                           ;newmain.c: 491:         unsigned int pulses = pulse_count - last_pulse_count;
 15745   005D18  51F0               	movf	Calculate_Flow@last_pulse_count& (0+255),w,b
 15746   005D1A  0100               	movlb	0	; () banked
 15747   005D1C  5DF5               	subwf	_pulse_count& (0+255),w,b	;volatile
 15748   005D1E  6E5D               	movwf	Calculate_Flow@pulses^0,c
 15749   005D20  0101               	movlb	1	; () banked
 15750   005D22  51F1               	movf	(Calculate_Flow@last_pulse_count+1)& (0+255),w,b
 15751   005D24  0100               	movlb	0	; () banked
 15752   005D26  59F6               	subwfb	(_pulse_count+1)& (0+255),w,b	;volatile
 15753   005D28  6E5E               	movwf	(Calculate_Flow@pulses+1)^0,c
 15754   005D2A                     
 15755                           ; BSR set to: 0
 15756                           ;newmain.c: 492:         flow_rate = (pulses / (float)450) * 60.0;
 15757   005D2A  0E00               	movlw	0
 15758   005D2C  6E44               	movwf	___fldiv@a^0,c
 15759   005D2E  0E00               	movlw	0
 15760   005D30  6E45               	movwf	(___fldiv@a+1)^0,c
 15761   005D32  0EE1               	movlw	225
 15762   005D34  6E46               	movwf	(___fldiv@a+2)^0,c
 15763   005D36  0E43               	movlw	67
 15764   005D38  6E47               	movwf	(___fldiv@a+3)^0,c
 15765   005D3A  C05D  F001         	movff	Calculate_Flow@pulses,___xxtofl@val
 15766   005D3E  C05E  F002         	movff	Calculate_Flow@pulses+1,___xxtofl@val+1
 15767   005D42  6A03               	clrf	(___xxtofl@val+2)^0,c
 15768   005D44  6A04               	clrf	(___xxtofl@val+3)^0,c
 15769   005D46  0E00               	movlw	0
 15770   005D48  EC66  F02A         	call	___xxtofl
 15771   005D4C  C001  F040         	movff	?___xxtofl,___fldiv@b
 15772   005D50  C002  F041         	movff	?___xxtofl+1,___fldiv@b+1
 15773   005D54  C003  F042         	movff	?___xxtofl+2,___fldiv@b+2
 15774   005D58  C004  F043         	movff	?___xxtofl+3,___fldiv@b+3
 15775   005D5C  ECA4  F022         	call	___fldiv	;wreg free
 15776   005D60  C040  F01F         	movff	?___fldiv,___flmul@b
 15777   005D64  C041  F020         	movff	?___fldiv+1,___flmul@b+1
 15778   005D68  C042  F021         	movff	?___fldiv+2,___flmul@b+2
 15779   005D6C  C043  F022         	movff	?___fldiv+3,___flmul@b+3
 15780   005D70  0E00               	movlw	0
 15781   005D72  6E23               	movwf	___flmul@a^0,c
 15782   005D74  0E00               	movlw	0
 15783   005D76  6E24               	movwf	(___flmul@a+1)^0,c
 15784   005D78  0E70               	movlw	112
 15785   005D7A  6E25               	movwf	(___flmul@a+2)^0,c
 15786   005D7C  0E42               	movlw	66
 15787   005D7E  6E26               	movwf	(___flmul@a+3)^0,c
 15788   005D80  ECA2  F01E         	call	___flmul	;wreg free
 15789   005D84  C01F  F1E0         	movff	?___flmul,_flow_rate
 15790   005D88  C020  F1E1         	movff	?___flmul+1,_flow_rate+1
 15791   005D8C  C021  F1E2         	movff	?___flmul+2,_flow_rate+2
 15792   005D90  C022  F1E3         	movff	?___flmul+3,_flow_rate+3
 15793   005D94                     
 15794                           ;newmain.c: 493:         total_flow += flow_rate / 60.0;
 15795   005D94  C1DC  F00F         	movff	_total_flow,___fladd@b
 15796   005D98  C1DD  F010         	movff	_total_flow+1,___fladd@b+1
 15797   005D9C  C1DE  F011         	movff	_total_flow+2,___fladd@b+2
 15798   005DA0  C1DF  F012         	movff	_total_flow+3,___fladd@b+3
 15799   005DA4  0E00               	movlw	0
 15800   005DA6  6E44               	movwf	___fldiv@a^0,c
 15801   005DA8  0E00               	movlw	0
 15802   005DAA  6E45               	movwf	(___fldiv@a+1)^0,c
 15803   005DAC  0E70               	movlw	112
 15804   005DAE  6E46               	movwf	(___fldiv@a+2)^0,c
 15805   005DB0  0E42               	movlw	66
 15806   005DB2  6E47               	movwf	(___fldiv@a+3)^0,c
 15807   005DB4  C1E0  F040         	movff	_flow_rate,___fldiv@b
 15808   005DB8  C1E1  F041         	movff	_flow_rate+1,___fldiv@b+1
 15809   005DBC  C1E2  F042         	movff	_flow_rate+2,___fldiv@b+2
 15810   005DC0  C1E3  F043         	movff	_flow_rate+3,___fldiv@b+3
 15811   005DC4  ECA4  F022         	call	___fldiv	;wreg free
 15812   005DC8  C040  F013         	movff	?___fldiv,___fladd@a
 15813   005DCC  C041  F014         	movff	?___fldiv+1,___fladd@a+1
 15814   005DD0  C042  F015         	movff	?___fldiv+2,___fladd@a+2
 15815   005DD4  C043  F016         	movff	?___fldiv+3,___fladd@a+3
 15816   005DD8  EC47  F01C         	call	___fladd	;wreg free
 15817   005DDC  C00F  F1DC         	movff	?___fladd,_total_flow
 15818   005DE0  C010  F1DD         	movff	?___fladd+1,_total_flow+1
 15819   005DE4  C011  F1DE         	movff	?___fladd+2,_total_flow+2
 15820   005DE8  C012  F1DF         	movff	?___fladd+3,_total_flow+3
 15821   005DEC                     
 15822                           ;newmain.c: 495:         last_pulse_count = pulse_count;
 15823   005DEC  C0F5  F1F0         	movff	_pulse_count,Calculate_Flow@last_pulse_count	;volatile
 15824   005DF0  C0F6  F1F1         	movff	_pulse_count+1,Calculate_Flow@last_pulse_count+1	;volatile
 15825   005DF4                     
 15826                           ;newmain.c: 496:         last_calc_time = system_millis;
 15827   005DF4  C1D0  F25D         	movff	_system_millis,Calculate_Flow@last_calc_time
 15828   005DF8  C1D1  F25E         	movff	_system_millis+1,Calculate_Flow@last_calc_time+1
 15829   005DFC  C1D2  F25F         	movff	_system_millis+2,Calculate_Flow@last_calc_time+2
 15830   005E00  C1D3  F260         	movff	_system_millis+3,Calculate_Flow@last_calc_time+3
 15831   005E04                     l310:
 15832   005E04  0012               	return		;funcret
 15833   005E06                     __end_of_Calculate_Flow:
 15834                           	callstack 0
 15835                           
 15836 ;; *************** function ___xxtofl *****************
 15837 ;; Defined at:
 15838 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;  sign            1    wreg     unsigned char 
 15841 ;;  val             4    0[COMRAM] long 
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;  sign            1    8[COMRAM] unsigned char 
 15844 ;;  arg             4   10[COMRAM] unsigned long 
 15845 ;;  exp             1    9[COMRAM] unsigned char 
 15846 ;; Return value:  Size  Location     Type
 15847 ;;                  4    0[COMRAM] unsigned char 
 15848 ;; Registers used:
 15849 ;;		wreg, status,2, status,0
 15850 ;; Tracked objects:
 15851 ;;		On entry : 0/0
 15852 ;;		On exit  : 0/0
 15853 ;;		Unchanged: 0/0
 15854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15855 ;;      Params:         4       0       0       0       0       0       0       0       0
 15856 ;;      Locals:         6       0       0       0       0       0       0       0       0
 15857 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15858 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15859 ;;Total ram usage:       14 bytes
 15860 ;; Hardware stack levels used: 1
 15861 ;; Hardware stack levels required when called: 1
 15862 ;; This function calls:
 15863 ;;		Nothing
 15864 ;; This function is called by:
 15865 ;;		_Calibrate_Flame_Sensor
 15866 ;;		_Calibrate_MQ2
 15867 ;;		_Read_LM35
 15868 ;;		_Read_Flame_Sensor
 15869 ;;		_Read_MQ2_Sensor
 15870 ;;		_Calculate_Flow
 15871 ;;		_powf
 15872 ;; This function uses a non-reentrant model
 15873 ;;
 15874                           
 15875                           	psect	text51
 15876   0054CC                     __ptext51:
 15877                           	callstack 0
 15878   0054CC                     ___xxtofl:
 15879                           	callstack 27
 15880                           
 15881                           ;incstack = 0
 15882                           ;___xxtofl@sign stored from wreg
 15883   0054CC  6E09               	movwf	___xxtofl@sign^0,c
 15884   0054CE  5009               	movf	___xxtofl@sign^0,w,c
 15885   0054D0  B4D8               	btfsc	status,2,c
 15886   0054D2  EF6D  F02A         	goto	u9651
 15887   0054D6  EF6F  F02A         	goto	u9650
 15888   0054DA                     u9651:
 15889   0054DA  EF91  F02A         	goto	l1003
 15890   0054DE                     u9650:
 15891   0054DE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 15892   0054E0  EF76  F02A         	goto	u9660
 15893   0054E4  EF74  F02A         	goto	u9661
 15894   0054E8                     u9661:
 15895   0054E8  EF91  F02A         	goto	l1003
 15896   0054EC                     u9660:
 15897   0054EC  C001  F005         	movff	___xxtofl@val,??___xxtofl
 15898   0054F0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 15899   0054F4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 15900   0054F8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 15901   0054FC  1E05               	comf	??___xxtofl^0,f,c
 15902   0054FE  1E06               	comf	(??___xxtofl+1)^0,f,c
 15903   005500  1E07               	comf	(??___xxtofl+2)^0,f,c
 15904   005502  1E08               	comf	(??___xxtofl+3)^0,f,c
 15905   005504  2A05               	incf	??___xxtofl^0,f,c
 15906   005506  0E00               	movlw	0
 15907   005508  2206               	addwfc	(??___xxtofl+1)^0,f,c
 15908   00550A  2207               	addwfc	(??___xxtofl+2)^0,f,c
 15909   00550C  2208               	addwfc	(??___xxtofl+3)^0,f,c
 15910   00550E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 15911   005512  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 15912   005516  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 15913   00551A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 15914   00551E  EF99  F02A         	goto	l7639
 15915   005522                     l1003:
 15916   005522  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 15917   005526  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15918   00552A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15919   00552E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15920   005532                     l7639:
 15921   005532  5001               	movf	___xxtofl@val^0,w,c
 15922   005534  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 15923   005536  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 15924   005538  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 15925   00553A  A4D8               	btfss	status,2,c
 15926   00553C  EFA2  F02A         	goto	u9671
 15927   005540  EFA4  F02A         	goto	u9670
 15928   005544                     u9671:
 15929   005544  EFAE  F02A         	goto	l7645
 15930   005548                     u9670:
 15931   005548  0E00               	movlw	0
 15932   00554A  6E01               	movwf	?___xxtofl^0,c
 15933   00554C  0E00               	movlw	0
 15934   00554E  6E02               	movwf	(?___xxtofl+1)^0,c
 15935   005550  0E00               	movlw	0
 15936   005552  6E03               	movwf	(?___xxtofl+2)^0,c
 15937   005554  0E00               	movlw	0
 15938   005556  6E04               	movwf	(?___xxtofl+3)^0,c
 15939   005558  EF3F  F02B         	goto	l1006
 15940   00555C                     l7645:
 15941   00555C  0E96               	movlw	150
 15942   00555E  6E0A               	movwf	___xxtofl@exp^0,c
 15943   005560  EFB8  F02A         	goto	l7649
 15944   005564                     l7647:
 15945   005564  2A0A               	incf	___xxtofl@exp^0,f,c
 15946   005566  90D8               	bcf	status,0,c
 15947   005568  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 15948   00556A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 15949   00556C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 15950   00556E  320B               	rrcf	___xxtofl@arg^0,f,c
 15951   005570                     l7649:
 15952   005570  0E00               	movlw	0
 15953   005572  140B               	andwf	___xxtofl@arg^0,w,c
 15954   005574  6E05               	movwf	??___xxtofl^0,c
 15955   005576  0E00               	movlw	0
 15956   005578  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 15957   00557A  6E06               	movwf	(??___xxtofl+1)^0,c
 15958   00557C  0E00               	movlw	0
 15959   00557E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 15960   005580  6E07               	movwf	(??___xxtofl+2)^0,c
 15961   005582  0EFE               	movlw	254
 15962   005584  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 15963   005586  6E08               	movwf	(??___xxtofl+3)^0,c
 15964   005588  5005               	movf	??___xxtofl^0,w,c
 15965   00558A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 15966   00558C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 15967   00558E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 15968   005590  A4D8               	btfss	status,2,c
 15969   005592  EFCD  F02A         	goto	u9681
 15970   005596  EFCF  F02A         	goto	u9680
 15971   00559A                     u9681:
 15972   00559A  EFB2  F02A         	goto	l7647
 15973   00559E                     u9680:
 15974   00559E  EFDD  F02A         	goto	l1010
 15975   0055A2                     l7651:
 15976   0055A2  2A0A               	incf	___xxtofl@exp^0,f,c
 15977   0055A4  0E01               	movlw	1
 15978   0055A6  260B               	addwf	___xxtofl@arg^0,f,c
 15979   0055A8  0E00               	movlw	0
 15980   0055AA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 15981   0055AC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 15982   0055AE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 15983   0055B0  90D8               	bcf	status,0,c
 15984   0055B2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 15985   0055B4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 15986   0055B6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 15987   0055B8  320B               	rrcf	___xxtofl@arg^0,f,c
 15988   0055BA                     l1010:
 15989   0055BA  0E00               	movlw	0
 15990   0055BC  140B               	andwf	___xxtofl@arg^0,w,c
 15991   0055BE  6E05               	movwf	??___xxtofl^0,c
 15992   0055C0  0E00               	movlw	0
 15993   0055C2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 15994   0055C4  6E06               	movwf	(??___xxtofl+1)^0,c
 15995   0055C6  0E00               	movlw	0
 15996   0055C8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 15997   0055CA  6E07               	movwf	(??___xxtofl+2)^0,c
 15998   0055CC  0EFF               	movlw	255
 15999   0055CE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 16000   0055D0  6E08               	movwf	(??___xxtofl+3)^0,c
 16001   0055D2  5005               	movf	??___xxtofl^0,w,c
 16002   0055D4  1006               	iorwf	(??___xxtofl+1)^0,w,c
 16003   0055D6  1007               	iorwf	(??___xxtofl+2)^0,w,c
 16004   0055D8  1008               	iorwf	(??___xxtofl+3)^0,w,c
 16005   0055DA  A4D8               	btfss	status,2,c
 16006   0055DC  EFF2  F02A         	goto	u9691
 16007   0055E0  EFF4  F02A         	goto	u9690
 16008   0055E4                     u9691:
 16009   0055E4  EFD1  F02A         	goto	l7651
 16010   0055E8                     u9690:
 16011   0055E8  EFFC  F02A         	goto	l7659
 16012   0055EC                     l7657:
 16013   0055EC  060A               	decf	___xxtofl@exp^0,f,c
 16014   0055EE  90D8               	bcf	status,0,c
 16015   0055F0  360B               	rlcf	___xxtofl@arg^0,f,c
 16016   0055F2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 16017   0055F4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 16018   0055F6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 16019   0055F8                     l7659:
 16020   0055F8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 16021   0055FA  EF01  F02B         	goto	u9701
 16022   0055FE  EF03  F02B         	goto	u9700
 16023   005602                     u9701:
 16024   005602  EF0B  F02B         	goto	l1017
 16025   005606                     u9700:
 16026   005606  0E02               	movlw	2
 16027   005608  600A               	cpfslt	___xxtofl@exp^0,c
 16028   00560A  EF09  F02B         	goto	u9711
 16029   00560E  EF0B  F02B         	goto	u9710
 16030   005612                     u9711:
 16031   005612  EFF6  F02A         	goto	l7657
 16032   005616                     u9710:
 16033   005616                     l1017:
 16034   005616  B00A               	btfsc	___xxtofl@exp^0,0,c
 16035   005618  EF10  F02B         	goto	u9721
 16036   00561C  EF12  F02B         	goto	u9720
 16037   005620                     u9721:
 16038   005620  EF13  F02B         	goto	l7665
 16039   005624                     u9720:
 16040   005624  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 16041   005626                     l7665:
 16042   005626  90D8               	bcf	status,0,c
 16043   005628  320A               	rrcf	___xxtofl@exp^0,f,c
 16044   00562A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 16045   00562E  6A06               	clrf	(??___xxtofl+1)^0,c
 16046   005630  6A07               	clrf	(??___xxtofl+2)^0,c
 16047   005632  6A08               	clrf	(??___xxtofl+3)^0,c
 16048   005634  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 16049   005638  6A07               	clrf	(??___xxtofl+2)^0,c
 16050   00563A  6A06               	clrf	(??___xxtofl+1)^0,c
 16051   00563C  6A05               	clrf	??___xxtofl^0,c
 16052   00563E  5005               	movf	??___xxtofl^0,w,c
 16053   005640  120B               	iorwf	___xxtofl@arg^0,f,c
 16054   005642  5006               	movf	(??___xxtofl+1)^0,w,c
 16055   005644  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 16056   005646  5007               	movf	(??___xxtofl+2)^0,w,c
 16057   005648  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 16058   00564A  5008               	movf	(??___xxtofl+3)^0,w,c
 16059   00564C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 16060   00564E  5009               	movf	___xxtofl@sign^0,w,c
 16061   005650  B4D8               	btfsc	status,2,c
 16062   005652  EF2D  F02B         	goto	u9731
 16063   005656  EF2F  F02B         	goto	u9730
 16064   00565A                     u9731:
 16065   00565A  EF37  F02B         	goto	l7675
 16066   00565E                     u9730:
 16067   00565E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 16068   005660  EF36  F02B         	goto	u9740
 16069   005664  EF34  F02B         	goto	u9741
 16070   005668                     u9741:
 16071   005668  EF37  F02B         	goto	l7675
 16072   00566C                     u9740:
 16073   00566C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 16074   00566E                     l7675:
 16075   00566E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 16076   005672  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 16077   005676  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 16078   00567A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 16079   00567E                     l1006:
 16080   00567E  0012               	return		;funcret
 16081   005680                     __end_of___xxtofl:
 16082                           	callstack 0
 16083                           
 16084 ;; *************** function ___flmul *****************
 16085 ;; Defined at:
 16086 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 16087 ;; Parameters:    Size  Location     Type
 16088 ;;  b               4   30[COMRAM] unsigned char 
 16089 ;;  a               4   34[COMRAM] unsigned char 
 16090 ;; Auto vars:     Size  Location     Type
 16091 ;;  prod            4   49[COMRAM] struct .
 16092 ;;  grs             4   44[COMRAM] unsigned long 
 16093 ;;  temp            2   53[COMRAM] struct .
 16094 ;;  bexp            1   48[COMRAM] unsigned char 
 16095 ;;  aexp            1   43[COMRAM] unsigned char 
 16096 ;;  sign            1   42[COMRAM] unsigned char 
 16097 ;; Return value:  Size  Location     Type
 16098 ;;                  4   30[COMRAM] unsigned char 
 16099 ;; Registers used:
 16100 ;;		wreg, status,2, status,0, prodl, prodh
 16101 ;; Tracked objects:
 16102 ;;		On entry : 0/0
 16103 ;;		On exit  : 0/0
 16104 ;;		Unchanged: 0/0
 16105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16106 ;;      Params:         8       0       0       0       0       0       0       0       0
 16107 ;;      Locals:        13       0       0       0       0       0       0       0       0
 16108 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16109 ;;      Totals:        25       0       0       0       0       0       0       0       0
 16110 ;;Total ram usage:       25 bytes
 16111 ;; Hardware stack levels used: 1
 16112 ;; Hardware stack levels required when called: 1
 16113 ;; This function calls:
 16114 ;;		Nothing
 16115 ;; This function is called by:
 16116 ;;		_Calibrate_Flame_Sensor
 16117 ;;		_Calibrate_MQ2
 16118 ;;		_Read_LM35
 16119 ;;		_Read_Flame_Sensor
 16120 ;;		_Read_MQ2_Sensor
 16121 ;;		_Calculate_Flow
 16122 ;;		_efgtoa
 16123 ;;		_powf
 16124 ;;		_scalbnf
 16125 ;; This function uses a non-reentrant model
 16126 ;;
 16127                           
 16128                           	psect	text52
 16129   003D44                     __ptext52:
 16130                           	callstack 0
 16131   003D44                     ___flmul:
 16132                           	callstack 23
 16133   003D44  5022               	movf	(___flmul@b+3)^0,w,c
 16134   003D46  0B80               	andlw	128
 16135   003D48  6E2B               	movwf	___flmul@sign^0,c
 16136   003D4A  5022               	movf	(___flmul@b+3)^0,w,c
 16137   003D4C  2422               	addwf	(___flmul@b+3)^0,w,c
 16138   003D4E  6E31               	movwf	___flmul@bexp^0,c
 16139   003D50  AE21               	btfss	(___flmul@b+2)^0,7,c
 16140   003D52  EFAD  F01E         	goto	u8371
 16141   003D56  EFAF  F01E         	goto	u8370
 16142   003D5A                     u8371:
 16143   003D5A  EFB0  F01E         	goto	l6821
 16144   003D5E                     u8370:
 16145   003D5E  8031               	bsf	___flmul@bexp^0,0,c
 16146   003D60                     l6821:
 16147   003D60  5031               	movf	___flmul@bexp^0,w,c
 16148   003D62  B4D8               	btfsc	status,2,c
 16149   003D64  EFB6  F01E         	goto	u8381
 16150   003D68  EFB8  F01E         	goto	u8380
 16151   003D6C                     u8381:
 16152   003D6C  EFCB  F01E         	goto	l6829
 16153   003D70                     u8380:
 16154   003D70  2831               	incf	___flmul@bexp^0,w,c
 16155   003D72  A4D8               	btfss	status,2,c
 16156   003D74  EFBE  F01E         	goto	u8391
 16157   003D78  EFC0  F01E         	goto	u8390
 16158   003D7C                     u8391:
 16159   003D7C  EFC8  F01E         	goto	l6827
 16160   003D80                     u8390:
 16161   003D80  0E00               	movlw	0
 16162   003D82  6E1F               	movwf	___flmul@b^0,c
 16163   003D84  0E00               	movlw	0
 16164   003D86  6E20               	movwf	(___flmul@b+1)^0,c
 16165   003D88  0E00               	movlw	0
 16166   003D8A  6E21               	movwf	(___flmul@b+2)^0,c
 16167   003D8C  0E00               	movlw	0
 16168   003D8E  6E22               	movwf	(___flmul@b+3)^0,c
 16169   003D90                     l6827:
 16170   003D90  8E21               	bsf	(___flmul@b+2)^0,7,c
 16171   003D92  EFD3  F01E         	goto	l6831
 16172   003D96                     l6829:
 16173   003D96  0E00               	movlw	0
 16174   003D98  6E1F               	movwf	___flmul@b^0,c
 16175   003D9A  0E00               	movlw	0
 16176   003D9C  6E20               	movwf	(___flmul@b+1)^0,c
 16177   003D9E  0E00               	movlw	0
 16178   003DA0  6E21               	movwf	(___flmul@b+2)^0,c
 16179   003DA2  0E00               	movlw	0
 16180   003DA4  6E22               	movwf	(___flmul@b+3)^0,c
 16181   003DA6                     l6831:
 16182   003DA6  5026               	movf	(___flmul@a+3)^0,w,c
 16183   003DA8  0B80               	andlw	128
 16184   003DAA  1A2B               	xorwf	___flmul@sign^0,f,c
 16185   003DAC  5026               	movf	(___flmul@a+3)^0,w,c
 16186   003DAE  2426               	addwf	(___flmul@a+3)^0,w,c
 16187   003DB0  6E2C               	movwf	___flmul@aexp^0,c
 16188   003DB2  AE25               	btfss	(___flmul@a+2)^0,7,c
 16189   003DB4  EFDE  F01E         	goto	u8401
 16190   003DB8  EFE0  F01E         	goto	u8400
 16191   003DBC                     u8401:
 16192   003DBC  EFE1  F01E         	goto	l6839
 16193   003DC0                     u8400:
 16194   003DC0  802C               	bsf	___flmul@aexp^0,0,c
 16195   003DC2                     l6839:
 16196   003DC2  502C               	movf	___flmul@aexp^0,w,c
 16197   003DC4  B4D8               	btfsc	status,2,c
 16198   003DC6  EFE7  F01E         	goto	u8411
 16199   003DCA  EFE9  F01E         	goto	u8410
 16200   003DCE                     u8411:
 16201   003DCE  EFFC  F01E         	goto	l6847
 16202   003DD2                     u8410:
 16203   003DD2  282C               	incf	___flmul@aexp^0,w,c
 16204   003DD4  A4D8               	btfss	status,2,c
 16205   003DD6  EFEF  F01E         	goto	u8421
 16206   003DDA  EFF1  F01E         	goto	u8420
 16207   003DDE                     u8421:
 16208   003DDE  EFF9  F01E         	goto	l6845
 16209   003DE2                     u8420:
 16210   003DE2  0E00               	movlw	0
 16211   003DE4  6E23               	movwf	___flmul@a^0,c
 16212   003DE6  0E00               	movlw	0
 16213   003DE8  6E24               	movwf	(___flmul@a+1)^0,c
 16214   003DEA  0E00               	movlw	0
 16215   003DEC  6E25               	movwf	(___flmul@a+2)^0,c
 16216   003DEE  0E00               	movlw	0
 16217   003DF0  6E26               	movwf	(___flmul@a+3)^0,c
 16218   003DF2                     l6845:
 16219   003DF2  8E25               	bsf	(___flmul@a+2)^0,7,c
 16220   003DF4  EF04  F01F         	goto	l962
 16221   003DF8                     l6847:
 16222   003DF8  0E00               	movlw	0
 16223   003DFA  6E23               	movwf	___flmul@a^0,c
 16224   003DFC  0E00               	movlw	0
 16225   003DFE  6E24               	movwf	(___flmul@a+1)^0,c
 16226   003E00  0E00               	movlw	0
 16227   003E02  6E25               	movwf	(___flmul@a+2)^0,c
 16228   003E04  0E00               	movlw	0
 16229   003E06  6E26               	movwf	(___flmul@a+3)^0,c
 16230   003E08                     l962:
 16231   003E08  502C               	movf	___flmul@aexp^0,w,c
 16232   003E0A  B4D8               	btfsc	status,2,c
 16233   003E0C  EF0A  F01F         	goto	u8431
 16234   003E10  EF0C  F01F         	goto	u8430
 16235   003E14                     u8431:
 16236   003E14  EF14  F01F         	goto	l6851
 16237   003E18                     u8430:
 16238   003E18  5031               	movf	___flmul@bexp^0,w,c
 16239   003E1A  A4D8               	btfss	status,2,c
 16240   003E1C  EF12  F01F         	goto	u8441
 16241   003E20  EF14  F01F         	goto	u8440
 16242   003E24                     u8441:
 16243   003E24  EF1E  F01F         	goto	l6855
 16244   003E28                     u8440:
 16245   003E28                     l6851:
 16246   003E28  0E00               	movlw	0
 16247   003E2A  6E1F               	movwf	?___flmul^0,c
 16248   003E2C  0E00               	movlw	0
 16249   003E2E  6E20               	movwf	(?___flmul+1)^0,c
 16250   003E30  0E00               	movlw	0
 16251   003E32  6E21               	movwf	(?___flmul+2)^0,c
 16252   003E34  0E00               	movlw	0
 16253   003E36  6E22               	movwf	(?___flmul+3)^0,c
 16254   003E38  EFB4  F020         	goto	l966
 16255   003E3C                     l6855:
 16256   003E3C  5025               	movf	(___flmul@a+2)^0,w,c
 16257   003E3E  021F               	mulwf	___flmul@b^0,c
 16258   003E40  CFF3 F036          	movff	prodl,___flmul@temp
 16259   003E44  CFF4 F037          	movff	prodh,___flmul@temp+1
 16260   003E48  5036               	movf	___flmul@temp^0,w,c
 16261   003E4A  6E2D               	movwf	___flmul@grs^0,c
 16262   003E4C  6A2E               	clrf	(___flmul@grs+1)^0,c
 16263   003E4E  6A2F               	clrf	(___flmul@grs+2)^0,c
 16264   003E50  6A30               	clrf	(___flmul@grs+3)^0,c
 16265   003E52  5037               	movf	(___flmul@temp+1)^0,w,c
 16266   003E54  6E32               	movwf	___flmul@prod^0,c
 16267   003E56  6A33               	clrf	(___flmul@prod+1)^0,c
 16268   003E58  6A34               	clrf	(___flmul@prod+2)^0,c
 16269   003E5A  6A35               	clrf	(___flmul@prod+3)^0,c
 16270   003E5C  5024               	movf	(___flmul@a+1)^0,w,c
 16271   003E5E  0220               	mulwf	(___flmul@b+1)^0,c
 16272   003E60  CFF3 F036          	movff	prodl,___flmul@temp
 16273   003E64  CFF4 F037          	movff	prodh,___flmul@temp+1
 16274   003E68  5036               	movf	___flmul@temp^0,w,c
 16275   003E6A  262D               	addwf	___flmul@grs^0,f,c
 16276   003E6C  0E00               	movlw	0
 16277   003E6E  222E               	addwfc	(___flmul@grs+1)^0,f,c
 16278   003E70  222F               	addwfc	(___flmul@grs+2)^0,f,c
 16279   003E72  2230               	addwfc	(___flmul@grs+3)^0,f,c
 16280   003E74  5037               	movf	(___flmul@temp+1)^0,w,c
 16281   003E76  2632               	addwf	___flmul@prod^0,f,c
 16282   003E78  0E00               	movlw	0
 16283   003E7A  2233               	addwfc	(___flmul@prod+1)^0,f,c
 16284   003E7C  2234               	addwfc	(___flmul@prod+2)^0,f,c
 16285   003E7E  2235               	addwfc	(___flmul@prod+3)^0,f,c
 16286   003E80  5023               	movf	___flmul@a^0,w,c
 16287   003E82  0221               	mulwf	(___flmul@b+2)^0,c
 16288   003E84  CFF3 F036          	movff	prodl,___flmul@temp
 16289   003E88  CFF4 F037          	movff	prodh,___flmul@temp+1
 16290   003E8C  5036               	movf	___flmul@temp^0,w,c
 16291   003E8E  262D               	addwf	___flmul@grs^0,f,c
 16292   003E90  0E00               	movlw	0
 16293   003E92  222E               	addwfc	(___flmul@grs+1)^0,f,c
 16294   003E94  222F               	addwfc	(___flmul@grs+2)^0,f,c
 16295   003E96  2230               	addwfc	(___flmul@grs+3)^0,f,c
 16296   003E98  5037               	movf	(___flmul@temp+1)^0,w,c
 16297   003E9A  2632               	addwf	___flmul@prod^0,f,c
 16298   003E9C  0E00               	movlw	0
 16299   003E9E  2233               	addwfc	(___flmul@prod+1)^0,f,c
 16300   003EA0  2234               	addwfc	(___flmul@prod+2)^0,f,c
 16301   003EA2  2235               	addwfc	(___flmul@prod+3)^0,f,c
 16302   003EA4  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
 16303   003EA8  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
 16304   003EAC  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
 16305   003EB0  6A2D               	clrf	___flmul@grs^0,c
 16306   003EB2  5023               	movf	___flmul@a^0,w,c
 16307   003EB4  0220               	mulwf	(___flmul@b+1)^0,c
 16308   003EB6  CFF3 F036          	movff	prodl,___flmul@temp
 16309   003EBA  CFF4 F037          	movff	prodh,___flmul@temp+1
 16310   003EBE  5036               	movf	___flmul@temp^0,w,c
 16311   003EC0  262D               	addwf	___flmul@grs^0,f,c
 16312   003EC2  5037               	movf	(___flmul@temp+1)^0,w,c
 16313   003EC4  222E               	addwfc	(___flmul@grs+1)^0,f,c
 16314   003EC6  0E00               	movlw	0
 16315   003EC8  222F               	addwfc	(___flmul@grs+2)^0,f,c
 16316   003ECA  0E00               	movlw	0
 16317   003ECC  2230               	addwfc	(___flmul@grs+3)^0,f,c
 16318   003ECE  5024               	movf	(___flmul@a+1)^0,w,c
 16319   003ED0  021F               	mulwf	___flmul@b^0,c
 16320   003ED2  CFF3 F036          	movff	prodl,___flmul@temp
 16321   003ED6  CFF4 F037          	movff	prodh,___flmul@temp+1
 16322   003EDA  5036               	movf	___flmul@temp^0,w,c
 16323   003EDC  262D               	addwf	___flmul@grs^0,f,c
 16324   003EDE  5037               	movf	(___flmul@temp+1)^0,w,c
 16325   003EE0  222E               	addwfc	(___flmul@grs+1)^0,f,c
 16326   003EE2  0E00               	movlw	0
 16327   003EE4  222F               	addwfc	(___flmul@grs+2)^0,f,c
 16328   003EE6  0E00               	movlw	0
 16329   003EE8  2230               	addwfc	(___flmul@grs+3)^0,f,c
 16330   003EEA  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
 16331   003EEE  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
 16332   003EF2  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
 16333   003EF6  6A2D               	clrf	___flmul@grs^0,c
 16334   003EF8  5023               	movf	___flmul@a^0,w,c
 16335   003EFA  021F               	mulwf	___flmul@b^0,c
 16336   003EFC  CFF3 F036          	movff	prodl,___flmul@temp
 16337   003F00  CFF4 F037          	movff	prodh,___flmul@temp+1
 16338   003F04  5036               	movf	___flmul@temp^0,w,c
 16339   003F06  262D               	addwf	___flmul@grs^0,f,c
 16340   003F08  5037               	movf	(___flmul@temp+1)^0,w,c
 16341   003F0A  222E               	addwfc	(___flmul@grs+1)^0,f,c
 16342   003F0C  0E00               	movlw	0
 16343   003F0E  222F               	addwfc	(___flmul@grs+2)^0,f,c
 16344   003F10  0E00               	movlw	0
 16345   003F12  2230               	addwfc	(___flmul@grs+3)^0,f,c
 16346   003F14  5025               	movf	(___flmul@a+2)^0,w,c
 16347   003F16  0220               	mulwf	(___flmul@b+1)^0,c
 16348   003F18  CFF3 F036          	movff	prodl,___flmul@temp
 16349   003F1C  CFF4 F037          	movff	prodh,___flmul@temp+1
 16350   003F20  5036               	movf	___flmul@temp^0,w,c
 16351   003F22  2632               	addwf	___flmul@prod^0,f,c
 16352   003F24  5037               	movf	(___flmul@temp+1)^0,w,c
 16353   003F26  2233               	addwfc	(___flmul@prod+1)^0,f,c
 16354   003F28  0E00               	movlw	0
 16355   003F2A  2234               	addwfc	(___flmul@prod+2)^0,f,c
 16356   003F2C  0E00               	movlw	0
 16357   003F2E  2235               	addwfc	(___flmul@prod+3)^0,f,c
 16358   003F30  5024               	movf	(___flmul@a+1)^0,w,c
 16359   003F32  0221               	mulwf	(___flmul@b+2)^0,c
 16360   003F34  CFF3 F036          	movff	prodl,___flmul@temp
 16361   003F38  CFF4 F037          	movff	prodh,___flmul@temp+1
 16362   003F3C  5036               	movf	___flmul@temp^0,w,c
 16363   003F3E  2632               	addwf	___flmul@prod^0,f,c
 16364   003F40  5037               	movf	(___flmul@temp+1)^0,w,c
 16365   003F42  2233               	addwfc	(___flmul@prod+1)^0,f,c
 16366   003F44  0E00               	movlw	0
 16367   003F46  2234               	addwfc	(___flmul@prod+2)^0,f,c
 16368   003F48  0E00               	movlw	0
 16369   003F4A  2235               	addwfc	(___flmul@prod+3)^0,f,c
 16370   003F4C  5025               	movf	(___flmul@a+2)^0,w,c
 16371   003F4E  0221               	mulwf	(___flmul@b+2)^0,c
 16372   003F50  CFF3 F036          	movff	prodl,___flmul@temp
 16373   003F54  CFF4 F037          	movff	prodh,___flmul@temp+1
 16374   003F58  5036               	movf	___flmul@temp^0,w,c
 16375   003F5A  6E27               	movwf	??___flmul^0,c
 16376   003F5C  5037               	movf	(___flmul@temp+1)^0,w,c
 16377   003F5E  6E28               	movwf	(??___flmul+1)^0,c
 16378   003F60  6A29               	clrf	(??___flmul+2)^0,c
 16379   003F62  6A2A               	clrf	(??___flmul+3)^0,c
 16380   003F64  C029  F02A         	movff	??___flmul+2,??___flmul+3
 16381   003F68  C028  F029         	movff	??___flmul+1,??___flmul+2
 16382   003F6C  C027  F028         	movff	??___flmul,??___flmul+1
 16383   003F70  6A27               	clrf	??___flmul^0,c
 16384   003F72  5027               	movf	??___flmul^0,w,c
 16385   003F74  2632               	addwf	___flmul@prod^0,f,c
 16386   003F76  5028               	movf	(??___flmul+1)^0,w,c
 16387   003F78  2233               	addwfc	(___flmul@prod+1)^0,f,c
 16388   003F7A  5029               	movf	(??___flmul+2)^0,w,c
 16389   003F7C  2234               	addwfc	(___flmul@prod+2)^0,f,c
 16390   003F7E  502A               	movf	(??___flmul+3)^0,w,c
 16391   003F80  2235               	addwfc	(___flmul@prod+3)^0,f,c
 16392   003F82  C02D  F027         	movff	___flmul@grs,??___flmul
 16393   003F86  C02E  F028         	movff	___flmul@grs+1,??___flmul+1
 16394   003F8A  C02F  F029         	movff	___flmul@grs+2,??___flmul+2
 16395   003F8E  C030  F02A         	movff	___flmul@grs+3,??___flmul+3
 16396   003F92  0E19               	movlw	25
 16397   003F94  EFD1  F01F         	goto	u8450
 16398   003F98                     u8455:
 16399   003F98  90D8               	bcf	status,0,c
 16400   003F9A  322A               	rrcf	(??___flmul+3)^0,f,c
 16401   003F9C  3229               	rrcf	(??___flmul+2)^0,f,c
 16402   003F9E  3228               	rrcf	(??___flmul+1)^0,f,c
 16403   003FA0  3227               	rrcf	??___flmul^0,f,c
 16404   003FA2                     u8450:
 16405   003FA2  2EE8               	decfsz	wreg,f,c
 16406   003FA4  EFCC  F01F         	goto	u8455
 16407   003FA8  5027               	movf	??___flmul^0,w,c
 16408   003FAA  2632               	addwf	___flmul@prod^0,f,c
 16409   003FAC  5028               	movf	(??___flmul+1)^0,w,c
 16410   003FAE  2233               	addwfc	(___flmul@prod+1)^0,f,c
 16411   003FB0  5029               	movf	(??___flmul+2)^0,w,c
 16412   003FB2  2234               	addwfc	(___flmul@prod+2)^0,f,c
 16413   003FB4  502A               	movf	(??___flmul+3)^0,w,c
 16414   003FB6  2235               	addwfc	(___flmul@prod+3)^0,f,c
 16415   003FB8  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
 16416   003FBC  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
 16417   003FC0  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
 16418   003FC4  6A2D               	clrf	___flmul@grs^0,c
 16419   003FC6  502C               	movf	___flmul@aexp^0,w,c
 16420   003FC8  C031  F027         	movff	___flmul@bexp,??___flmul
 16421   003FCC  6A28               	clrf	(??___flmul+1)^0,c
 16422   003FCE  2627               	addwf	??___flmul^0,f,c
 16423   003FD0  0E00               	movlw	0
 16424   003FD2  2228               	addwfc	(??___flmul+1)^0,f,c
 16425   003FD4  0E82               	movlw	130
 16426   003FD6  2427               	addwf	??___flmul^0,w,c
 16427   003FD8  6E36               	movwf	___flmul@temp^0,c
 16428   003FDA  0EFF               	movlw	255
 16429   003FDC  2028               	addwfc	(??___flmul+1)^0,w,c
 16430   003FDE  6E37               	movwf	(___flmul@temp+1)^0,c
 16431   003FE0  EF07  F020         	goto	l6903
 16432   003FE4                     l6897:
 16433   003FE4  90D8               	bcf	status,0,c
 16434   003FE6  3632               	rlcf	___flmul@prod^0,f,c
 16435   003FE8  3633               	rlcf	(___flmul@prod+1)^0,f,c
 16436   003FEA  3634               	rlcf	(___flmul@prod+2)^0,f,c
 16437   003FEC  3635               	rlcf	(___flmul@prod+3)^0,f,c
 16438   003FEE  AE30               	btfss	(___flmul@grs+3)^0,7,c
 16439   003FF0  EFFC  F01F         	goto	u8461
 16440   003FF4  EFFE  F01F         	goto	u8460
 16441   003FF8                     u8461:
 16442   003FF8  EFFF  F01F         	goto	l969
 16443   003FFC                     u8460:
 16444   003FFC  8032               	bsf	___flmul@prod^0,0,c
 16445   003FFE                     l969:
 16446   003FFE  90D8               	bcf	status,0,c
 16447   004000  362D               	rlcf	___flmul@grs^0,f,c
 16448   004002  362E               	rlcf	(___flmul@grs+1)^0,f,c
 16449   004004  362F               	rlcf	(___flmul@grs+2)^0,f,c
 16450   004006  3630               	rlcf	(___flmul@grs+3)^0,f,c
 16451   004008  0636               	decf	___flmul@temp^0,f,c
 16452   00400A  A0D8               	btfss	status,0,c
 16453   00400C  0637               	decf	(___flmul@temp+1)^0,f,c
 16454   00400E                     l6903:
 16455   00400E  AE34               	btfss	(___flmul@prod+2)^0,7,c
 16456   004010  EF0C  F020         	goto	u8471
 16457   004014  EF0E  F020         	goto	u8470
 16458   004018                     u8471:
 16459   004018  EFF2  F01F         	goto	l6897
 16460   00401C                     u8470:
 16461   00401C  6A2C               	clrf	___flmul@aexp^0,c
 16462   00401E  AE30               	btfss	(___flmul@grs+3)^0,7,c
 16463   004020  EF14  F020         	goto	u8481
 16464   004024  EF16  F020         	goto	u8480
 16465   004028                     u8481:
 16466   004028  EF3A  F020         	goto	l971
 16467   00402C                     u8480:
 16468   00402C  0EFF               	movlw	255
 16469   00402E  142D               	andwf	___flmul@grs^0,w,c
 16470   004030  6E27               	movwf	??___flmul^0,c
 16471   004032  0EFF               	movlw	255
 16472   004034  142E               	andwf	(___flmul@grs+1)^0,w,c
 16473   004036  6E28               	movwf	(??___flmul+1)^0,c
 16474   004038  0EFF               	movlw	255
 16475   00403A  142F               	andwf	(___flmul@grs+2)^0,w,c
 16476   00403C  6E29               	movwf	(??___flmul+2)^0,c
 16477   00403E  0E7F               	movlw	127
 16478   004040  1430               	andwf	(___flmul@grs+3)^0,w,c
 16479   004042  6E2A               	movwf	(??___flmul+3)^0,c
 16480   004044  5027               	movf	??___flmul^0,w,c
 16481   004046  1028               	iorwf	(??___flmul+1)^0,w,c
 16482   004048  1029               	iorwf	(??___flmul+2)^0,w,c
 16483   00404A  102A               	iorwf	(??___flmul+3)^0,w,c
 16484   00404C  B4D8               	btfsc	status,2,c
 16485   00404E  EF2B  F020         	goto	u8491
 16486   004052  EF2D  F020         	goto	u8490
 16487   004056                     u8491:
 16488   004056  EF31  F020         	goto	l972
 16489   00405A                     u8490:
 16490   00405A                     l6907:
 16491   00405A  0E01               	movlw	1
 16492   00405C  6E2C               	movwf	___flmul@aexp^0,c
 16493   00405E  EF3A  F020         	goto	l971
 16494   004062                     l972:
 16495   004062  A032               	btfss	___flmul@prod^0,0,c
 16496   004064  EF36  F020         	goto	u8501
 16497   004068  EF38  F020         	goto	u8500
 16498   00406C                     u8501:
 16499   00406C  EF3A  F020         	goto	l971
 16500   004070                     u8500:
 16501   004070  EF2D  F020         	goto	l6907
 16502   004074                     l971:
 16503   004074  502C               	movf	___flmul@aexp^0,w,c
 16504   004076  B4D8               	btfsc	status,2,c
 16505   004078  EF40  F020         	goto	u8511
 16506   00407C  EF42  F020         	goto	u8510
 16507   004080                     u8511:
 16508   004080  EF66  F020         	goto	l6919
 16509   004084                     u8510:
 16510   004084  0E01               	movlw	1
 16511   004086  2632               	addwf	___flmul@prod^0,f,c
 16512   004088  0E00               	movlw	0
 16513   00408A  2233               	addwfc	(___flmul@prod+1)^0,f,c
 16514   00408C  2234               	addwfc	(___flmul@prod+2)^0,f,c
 16515   00408E  2235               	addwfc	(___flmul@prod+3)^0,f,c
 16516   004090  A035               	btfss	(___flmul@prod+3)^0,0,c
 16517   004092  EF4D  F020         	goto	u8521
 16518   004096  EF4F  F020         	goto	u8520
 16519   00409A                     u8521:
 16520   00409A  EF66  F020         	goto	l6919
 16521   00409E                     u8520:
 16522   00409E  C032  F027         	movff	___flmul@prod,??___flmul
 16523   0040A2  C033  F028         	movff	___flmul@prod+1,??___flmul+1
 16524   0040A6  C034  F029         	movff	___flmul@prod+2,??___flmul+2
 16525   0040AA  C035  F02A         	movff	___flmul@prod+3,??___flmul+3
 16526   0040AE  342A               	rlcf	(??___flmul+3)^0,w,c
 16527   0040B0  322A               	rrcf	(??___flmul+3)^0,f,c
 16528   0040B2  3229               	rrcf	(??___flmul+2)^0,f,c
 16529   0040B4  3228               	rrcf	(??___flmul+1)^0,f,c
 16530   0040B6  3227               	rrcf	??___flmul^0,f,c
 16531   0040B8  C027  F032         	movff	??___flmul,___flmul@prod
 16532   0040BC  C028  F033         	movff	??___flmul+1,___flmul@prod+1
 16533   0040C0  C029  F034         	movff	??___flmul+2,___flmul@prod+2
 16534   0040C4  C02A  F035         	movff	??___flmul+3,___flmul@prod+3
 16535   0040C8  4A36               	infsnz	___flmul@temp^0,f,c
 16536   0040CA  2A37               	incf	(___flmul@temp+1)^0,f,c
 16537   0040CC                     l6919:
 16538   0040CC  BE37               	btfsc	(___flmul@temp+1)^0,7,c
 16539   0040CE  EF71  F020         	goto	u8531
 16540   0040D2  5037               	movf	(___flmul@temp+1)^0,w,c
 16541   0040D4  E108               	bnz	u8530
 16542   0040D6  2836               	incf	___flmul@temp^0,w,c
 16543   0040D8  A0D8               	btfss	status,0,c
 16544   0040DA  EF71  F020         	goto	u8531
 16545   0040DE  EF73  F020         	goto	u8530
 16546   0040E2                     u8531:
 16547   0040E2  EF7D  F020         	goto	l6923
 16548   0040E6                     u8530:
 16549   0040E6  0E00               	movlw	0
 16550   0040E8  6E32               	movwf	___flmul@prod^0,c
 16551   0040EA  0E00               	movlw	0
 16552   0040EC  6E33               	movwf	(___flmul@prod+1)^0,c
 16553   0040EE  0E80               	movlw	128
 16554   0040F0  6E34               	movwf	(___flmul@prod+2)^0,c
 16555   0040F2  0E7F               	movlw	127
 16556   0040F4  6E35               	movwf	(___flmul@prod+3)^0,c
 16557   0040F6  EFAA  F020         	goto	l6937
 16558   0040FA                     l6923:
 16559   0040FA  BE37               	btfsc	(___flmul@temp+1)^0,7,c
 16560   0040FC  EF8A  F020         	goto	u8540
 16561   004100  5037               	movf	(___flmul@temp+1)^0,w,c
 16562   004102  E106               	bnz	u8541
 16563   004104  0436               	decf	___flmul@temp^0,w,c
 16564   004106  B0D8               	btfsc	status,0,c
 16565   004108  EF88  F020         	goto	u8541
 16566   00410C  EF8A  F020         	goto	u8540
 16567   004110                     u8541:
 16568   004110  EF95  F020         	goto	l979
 16569   004114                     u8540:
 16570   004114  0E00               	movlw	0
 16571   004116  6E32               	movwf	___flmul@prod^0,c
 16572   004118  0E00               	movlw	0
 16573   00411A  6E33               	movwf	(___flmul@prod+1)^0,c
 16574   00411C  0E00               	movlw	0
 16575   00411E  6E34               	movwf	(___flmul@prod+2)^0,c
 16576   004120  0E00               	movlw	0
 16577   004122  6E35               	movwf	(___flmul@prod+3)^0,c
 16578   004124  6A2B               	clrf	___flmul@sign^0,c
 16579   004126  EFAA  F020         	goto	l6937
 16580   00412A                     l979:
 16581   00412A  C036  F031         	movff	___flmul@temp,___flmul@bexp
 16582   00412E  0EFF               	movlw	255
 16583   004130  1632               	andwf	___flmul@prod^0,f,c
 16584   004132  0EFF               	movlw	255
 16585   004134  1633               	andwf	(___flmul@prod+1)^0,f,c
 16586   004136  0E7F               	movlw	127
 16587   004138  1634               	andwf	(___flmul@prod+2)^0,f,c
 16588   00413A  0E00               	movlw	0
 16589   00413C  1635               	andwf	(___flmul@prod+3)^0,f,c
 16590   00413E  A031               	btfss	___flmul@bexp^0,0,c
 16591   004140  EFA4  F020         	goto	u8551
 16592   004144  EFA6  F020         	goto	u8550
 16593   004148                     u8551:
 16594   004148  EFA7  F020         	goto	l6935
 16595   00414C                     u8550:
 16596   00414C  8E34               	bsf	(___flmul@prod+2)^0,7,c
 16597   00414E                     l6935:
 16598   00414E  90D8               	bcf	status,0,c
 16599   004150  3031               	rrcf	___flmul@bexp^0,w,c
 16600   004152  6E35               	movwf	(___flmul@prod+3)^0,c
 16601   004154                     l6937:
 16602   004154  502B               	movf	___flmul@sign^0,w,c
 16603   004156  1235               	iorwf	(___flmul@prod+3)^0,f,c
 16604   004158  C032  F01F         	movff	___flmul@prod,?___flmul
 16605   00415C  C033  F020         	movff	___flmul@prod+1,?___flmul+1
 16606   004160  C034  F021         	movff	___flmul@prod+2,?___flmul+2
 16607   004164  C035  F022         	movff	___flmul@prod+3,?___flmul+3
 16608   004168                     l966:
 16609   004168  0012               	return		;funcret
 16610   00416A                     __end_of___flmul:
 16611                           	callstack 0
 16612                           
 16613 ;; *************** function ___fldiv *****************
 16614 ;; Defined at:
 16615 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 16616 ;; Parameters:    Size  Location     Type
 16617 ;;  b               4   63[COMRAM] unsigned char 
 16618 ;;  a               4   67[COMRAM] unsigned char 
 16619 ;; Auto vars:     Size  Location     Type
 16620 ;;  grs             4   82[COMRAM] unsigned long 
 16621 ;;  rem             4   75[COMRAM] unsigned long 
 16622 ;;  new_exp         2   80[COMRAM] short 
 16623 ;;  aexp            1   87[COMRAM] unsigned char 
 16624 ;;  bexp            1   86[COMRAM] unsigned char 
 16625 ;;  sign            1   79[COMRAM] unsigned char 
 16626 ;; Return value:  Size  Location     Type
 16627 ;;                  4   63[COMRAM] unsigned char 
 16628 ;; Registers used:
 16629 ;;		wreg, status,2, status,0
 16630 ;; Tracked objects:
 16631 ;;		On entry : 0/0
 16632 ;;		On exit  : 0/0
 16633 ;;		Unchanged: 0/0
 16634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16635 ;;      Params:         8       0       0       0       0       0       0       0       0
 16636 ;;      Locals:        13       0       0       0       0       0       0       0       0
 16637 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16638 ;;      Totals:        25       0       0       0       0       0       0       0       0
 16639 ;;Total ram usage:       25 bytes
 16640 ;; Hardware stack levels used: 1
 16641 ;; Hardware stack levels required when called: 1
 16642 ;; This function calls:
 16643 ;;		Nothing
 16644 ;; This function is called by:
 16645 ;;		_Calibrate_Flame_Sensor
 16646 ;;		_Calibrate_MQ2
 16647 ;;		_Read_LM35
 16648 ;;		_Read_Flame_Sensor
 16649 ;;		_Read_MQ2_Sensor
 16650 ;;		_Calculate_Flow
 16651 ;;		_efgtoa
 16652 ;;		_powf
 16653 ;; This function uses a non-reentrant model
 16654 ;;
 16655                           
 16656                           	psect	text53
 16657   004548                     __ptext53:
 16658                           	callstack 0
 16659   004548                     ___fldiv:
 16660                           	callstack 23
 16661   004548  5043               	movf	(___fldiv@b+3)^0,w,c
 16662   00454A  0B80               	andlw	128
 16663   00454C  6E50               	movwf	___fldiv@sign^0,c
 16664   00454E  5043               	movf	(___fldiv@b+3)^0,w,c
 16665   004550  2443               	addwf	(___fldiv@b+3)^0,w,c
 16666   004552  6E57               	movwf	___fldiv@bexp^0,c
 16667   004554  AE42               	btfss	(___fldiv@b+2)^0,7,c
 16668   004556  EFAF  F022         	goto	u8141
 16669   00455A  EFB1  F022         	goto	u8140
 16670   00455E                     u8141:
 16671   00455E  EFB2  F022         	goto	l6685
 16672   004562                     u8140:
 16673   004562  8057               	bsf	___fldiv@bexp^0,0,c
 16674   004564                     l6685:
 16675   004564  5057               	movf	___fldiv@bexp^0,w,c
 16676   004566  B4D8               	btfsc	status,2,c
 16677   004568  EFB8  F022         	goto	u8151
 16678   00456C  EFBA  F022         	goto	u8150
 16679   004570                     u8151:
 16680   004570  EFCE  F022         	goto	l6695
 16681   004574                     u8150:
 16682   004574  2857               	incf	___fldiv@bexp^0,w,c
 16683   004576  A4D8               	btfss	status,2,c
 16684   004578  EFC0  F022         	goto	u8161
 16685   00457C  EFC2  F022         	goto	u8160
 16686   004580                     u8161:
 16687   004580  EFCA  F022         	goto	l6691
 16688   004584                     u8160:
 16689   004584  0E00               	movlw	0
 16690   004586  6E40               	movwf	___fldiv@b^0,c
 16691   004588  0E00               	movlw	0
 16692   00458A  6E41               	movwf	(___fldiv@b+1)^0,c
 16693   00458C  0E00               	movlw	0
 16694   00458E  6E42               	movwf	(___fldiv@b+2)^0,c
 16695   004590  0E00               	movlw	0
 16696   004592  6E43               	movwf	(___fldiv@b+3)^0,c
 16697   004594                     l6691:
 16698   004594  8E42               	bsf	(___fldiv@b+2)^0,7,c
 16699   004596  6A43               	clrf	(___fldiv@b+3)^0,c
 16700   004598  EFD6  F022         	goto	l6697
 16701   00459C                     l6695:
 16702   00459C  0E00               	movlw	0
 16703   00459E  6E40               	movwf	___fldiv@b^0,c
 16704   0045A0  0E00               	movlw	0
 16705   0045A2  6E41               	movwf	(___fldiv@b+1)^0,c
 16706   0045A4  0E00               	movlw	0
 16707   0045A6  6E42               	movwf	(___fldiv@b+2)^0,c
 16708   0045A8  0E00               	movlw	0
 16709   0045AA  6E43               	movwf	(___fldiv@b+3)^0,c
 16710   0045AC                     l6697:
 16711   0045AC  5047               	movf	(___fldiv@a+3)^0,w,c
 16712   0045AE  0B80               	andlw	128
 16713   0045B0  1A50               	xorwf	___fldiv@sign^0,f,c
 16714   0045B2  5047               	movf	(___fldiv@a+3)^0,w,c
 16715   0045B4  2447               	addwf	(___fldiv@a+3)^0,w,c
 16716   0045B6  6E58               	movwf	___fldiv@aexp^0,c
 16717   0045B8  AE46               	btfss	(___fldiv@a+2)^0,7,c
 16718   0045BA  EFE1  F022         	goto	u8171
 16719   0045BE  EFE3  F022         	goto	u8170
 16720   0045C2                     u8171:
 16721   0045C2  EFE4  F022         	goto	l6705
 16722   0045C6                     u8170:
 16723   0045C6  8058               	bsf	___fldiv@aexp^0,0,c
 16724   0045C8                     l6705:
 16725   0045C8  5058               	movf	___fldiv@aexp^0,w,c
 16726   0045CA  B4D8               	btfsc	status,2,c
 16727   0045CC  EFEA  F022         	goto	u8181
 16728   0045D0  EFEC  F022         	goto	u8180
 16729   0045D4                     u8181:
 16730   0045D4  EF00  F023         	goto	l6715
 16731   0045D8                     u8180:
 16732   0045D8  2858               	incf	___fldiv@aexp^0,w,c
 16733   0045DA  A4D8               	btfss	status,2,c
 16734   0045DC  EFF2  F022         	goto	u8191
 16735   0045E0  EFF4  F022         	goto	u8190
 16736   0045E4                     u8191:
 16737   0045E4  EFFC  F022         	goto	l6711
 16738   0045E8                     u8190:
 16739   0045E8  0E00               	movlw	0
 16740   0045EA  6E44               	movwf	___fldiv@a^0,c
 16741   0045EC  0E00               	movlw	0
 16742   0045EE  6E45               	movwf	(___fldiv@a+1)^0,c
 16743   0045F0  0E00               	movlw	0
 16744   0045F2  6E46               	movwf	(___fldiv@a+2)^0,c
 16745   0045F4  0E00               	movlw	0
 16746   0045F6  6E47               	movwf	(___fldiv@a+3)^0,c
 16747   0045F8                     l6711:
 16748   0045F8  8E46               	bsf	(___fldiv@a+2)^0,7,c
 16749   0045FA  6A47               	clrf	(___fldiv@a+3)^0,c
 16750   0045FC  EF08  F023         	goto	l6717
 16751   004600                     l6715:
 16752   004600  0E00               	movlw	0
 16753   004602  6E44               	movwf	___fldiv@a^0,c
 16754   004604  0E00               	movlw	0
 16755   004606  6E45               	movwf	(___fldiv@a+1)^0,c
 16756   004608  0E00               	movlw	0
 16757   00460A  6E46               	movwf	(___fldiv@a+2)^0,c
 16758   00460C  0E00               	movlw	0
 16759   00460E  6E47               	movwf	(___fldiv@a+3)^0,c
 16760   004610                     l6717:
 16761   004610  5044               	movf	___fldiv@a^0,w,c
 16762   004612  1045               	iorwf	(___fldiv@a+1)^0,w,c
 16763   004614  1046               	iorwf	(___fldiv@a+2)^0,w,c
 16764   004616  1047               	iorwf	(___fldiv@a+3)^0,w,c
 16765   004618  A4D8               	btfss	status,2,c
 16766   00461A  EF11  F023         	goto	u8201
 16767   00461E  EF13  F023         	goto	u8200
 16768   004622                     u8201:
 16769   004622  EF2B  F023         	goto	l6729
 16770   004626                     u8200:
 16771   004626  0E00               	movlw	0
 16772   004628  6E40               	movwf	___fldiv@b^0,c
 16773   00462A  0E00               	movlw	0
 16774   00462C  6E41               	movwf	(___fldiv@b+1)^0,c
 16775   00462E  0E00               	movlw	0
 16776   004630  6E42               	movwf	(___fldiv@b+2)^0,c
 16777   004632  0E00               	movlw	0
 16778   004634  6E43               	movwf	(___fldiv@b+3)^0,c
 16779   004636  0E80               	movlw	128
 16780   004638  1242               	iorwf	(___fldiv@b+2)^0,f,c
 16781   00463A  0E7F               	movlw	127
 16782   00463C  1243               	iorwf	(___fldiv@b+3)^0,f,c
 16783   00463E                     l6723:
 16784   00463E  5050               	movf	___fldiv@sign^0,w,c
 16785   004640  1243               	iorwf	(___fldiv@b+3)^0,f,c
 16786   004642  C040  F040         	movff	___fldiv@b,?___fldiv
 16787   004646  C041  F041         	movff	___fldiv@b+1,?___fldiv+1
 16788   00464A  C042  F042         	movff	___fldiv@b+2,?___fldiv+2
 16789   00464E  C043  F043         	movff	___fldiv@b+3,?___fldiv+3
 16790   004652  EF6B  F024         	goto	l930
 16791   004656                     l6729:
 16792   004656  5057               	movf	___fldiv@bexp^0,w,c
 16793   004658  A4D8               	btfss	status,2,c
 16794   00465A  EF31  F023         	goto	u8211
 16795   00465E  EF33  F023         	goto	u8210
 16796   004662                     u8211:
 16797   004662  EF3D  F023         	goto	l6737
 16798   004666                     u8210:
 16799   004666  0E00               	movlw	0
 16800   004668  6E40               	movwf	?___fldiv^0,c
 16801   00466A  0E00               	movlw	0
 16802   00466C  6E41               	movwf	(?___fldiv+1)^0,c
 16803   00466E  0E00               	movlw	0
 16804   004670  6E42               	movwf	(?___fldiv+2)^0,c
 16805   004672  0E00               	movlw	0
 16806   004674  6E43               	movwf	(?___fldiv+3)^0,c
 16807   004676  EF6B  F024         	goto	l930
 16808   00467A                     l6737:
 16809   00467A  5058               	movf	___fldiv@aexp^0,w,c
 16810   00467C  C057  F048         	movff	___fldiv@bexp,??___fldiv
 16811   004680  6A49               	clrf	(??___fldiv+1)^0,c
 16812   004682  5E48               	subwf	??___fldiv^0,f,c
 16813   004684  0E00               	movlw	0
 16814   004686  5A49               	subwfb	(??___fldiv+1)^0,f,c
 16815   004688  0E7F               	movlw	127
 16816   00468A  2448               	addwf	??___fldiv^0,w,c
 16817   00468C  6E51               	movwf	___fldiv@new_exp^0,c
 16818   00468E  0E00               	movlw	0
 16819   004690  2049               	addwfc	(??___fldiv+1)^0,w,c
 16820   004692  6E52               	movwf	(___fldiv@new_exp+1)^0,c
 16821   004694  C040  F04C         	movff	___fldiv@b,___fldiv@rem
 16822   004698  C041  F04D         	movff	___fldiv@b+1,___fldiv@rem+1
 16823   00469C  C042  F04E         	movff	___fldiv@b+2,___fldiv@rem+2
 16824   0046A0  C043  F04F         	movff	___fldiv@b+3,___fldiv@rem+3
 16825   0046A4  0E00               	movlw	0
 16826   0046A6  6E40               	movwf	___fldiv@b^0,c
 16827   0046A8  0E00               	movlw	0
 16828   0046AA  6E41               	movwf	(___fldiv@b+1)^0,c
 16829   0046AC  0E00               	movlw	0
 16830   0046AE  6E42               	movwf	(___fldiv@b+2)^0,c
 16831   0046B0  0E00               	movlw	0
 16832   0046B2  6E43               	movwf	(___fldiv@b+3)^0,c
 16833   0046B4  0E00               	movlw	0
 16834   0046B6  6E53               	movwf	___fldiv@grs^0,c
 16835   0046B8  0E00               	movlw	0
 16836   0046BA  6E54               	movwf	(___fldiv@grs+1)^0,c
 16837   0046BC  0E00               	movlw	0
 16838   0046BE  6E55               	movwf	(___fldiv@grs+2)^0,c
 16839   0046C0  0E00               	movlw	0
 16840   0046C2  6E56               	movwf	(___fldiv@grs+3)^0,c
 16841   0046C4  6A58               	clrf	___fldiv@aexp^0,c
 16842   0046C6  EF9D  F023         	goto	l932
 16843   0046CA                     l6747:
 16844   0046CA  5058               	movf	___fldiv@aexp^0,w,c
 16845   0046CC  B4D8               	btfsc	status,2,c
 16846   0046CE  EF6B  F023         	goto	u8221
 16847   0046D2  EF6D  F023         	goto	u8220
 16848   0046D6                     u8221:
 16849   0046D6  EF84  F023         	goto	l6755
 16850   0046DA                     u8220:
 16851   0046DA  90D8               	bcf	status,0,c
 16852   0046DC  364C               	rlcf	___fldiv@rem^0,f,c
 16853   0046DE  364D               	rlcf	(___fldiv@rem+1)^0,f,c
 16854   0046E0  364E               	rlcf	(___fldiv@rem+2)^0,f,c
 16855   0046E2  364F               	rlcf	(___fldiv@rem+3)^0,f,c
 16856   0046E4  90D8               	bcf	status,0,c
 16857   0046E6  3640               	rlcf	___fldiv@b^0,f,c
 16858   0046E8  3641               	rlcf	(___fldiv@b+1)^0,f,c
 16859   0046EA  3642               	rlcf	(___fldiv@b+2)^0,f,c
 16860   0046EC  3643               	rlcf	(___fldiv@b+3)^0,f,c
 16861   0046EE  AE56               	btfss	(___fldiv@grs+3)^0,7,c
 16862   0046F0  EF7C  F023         	goto	u8231
 16863   0046F4  EF7E  F023         	goto	u8230
 16864   0046F8                     u8231:
 16865   0046F8  EF7F  F023         	goto	l935
 16866   0046FC                     u8230:
 16867   0046FC  8040               	bsf	___fldiv@b^0,0,c
 16868   0046FE                     l935:
 16869   0046FE  90D8               	bcf	status,0,c
 16870   004700  3653               	rlcf	___fldiv@grs^0,f,c
 16871   004702  3654               	rlcf	(___fldiv@grs+1)^0,f,c
 16872   004704  3655               	rlcf	(___fldiv@grs+2)^0,f,c
 16873   004706  3656               	rlcf	(___fldiv@grs+3)^0,f,c
 16874   004708                     l6755:
 16875   004708  5044               	movf	___fldiv@a^0,w,c
 16876   00470A  5C4C               	subwf	___fldiv@rem^0,w,c
 16877   00470C  5045               	movf	(___fldiv@a+1)^0,w,c
 16878   00470E  584D               	subwfb	(___fldiv@rem+1)^0,w,c
 16879   004710  5046               	movf	(___fldiv@a+2)^0,w,c
 16880   004712  584E               	subwfb	(___fldiv@rem+2)^0,w,c
 16881   004714  5047               	movf	(___fldiv@a+3)^0,w,c
 16882   004716  584F               	subwfb	(___fldiv@rem+3)^0,w,c
 16883   004718  A0D8               	btfss	status,0,c
 16884   00471A  EF91  F023         	goto	u8241
 16885   00471E  EF93  F023         	goto	u8240
 16886   004722                     u8241:
 16887   004722  EF9C  F023         	goto	l6761
 16888   004726                     u8240:
 16889   004726  8C56               	bsf	(___fldiv@grs+3)^0,6,c
 16890   004728  5044               	movf	___fldiv@a^0,w,c
 16891   00472A  5E4C               	subwf	___fldiv@rem^0,f,c
 16892   00472C  5045               	movf	(___fldiv@a+1)^0,w,c
 16893   00472E  5A4D               	subwfb	(___fldiv@rem+1)^0,f,c
 16894   004730  5046               	movf	(___fldiv@a+2)^0,w,c
 16895   004732  5A4E               	subwfb	(___fldiv@rem+2)^0,f,c
 16896   004734  5047               	movf	(___fldiv@a+3)^0,w,c
 16897   004736  5A4F               	subwfb	(___fldiv@rem+3)^0,f,c
 16898   004738                     l6761:
 16899   004738  2A58               	incf	___fldiv@aexp^0,f,c
 16900   00473A                     l932:
 16901   00473A  0E19               	movlw	25
 16902   00473C  6458               	cpfsgt	___fldiv@aexp^0,c
 16903   00473E  EFA3  F023         	goto	u8251
 16904   004742  EFA5  F023         	goto	u8250
 16905   004746                     u8251:
 16906   004746  EF65  F023         	goto	l6747
 16907   00474A                     u8250:
 16908   00474A  504C               	movf	___fldiv@rem^0,w,c
 16909   00474C  104D               	iorwf	(___fldiv@rem+1)^0,w,c
 16910   00474E  104E               	iorwf	(___fldiv@rem+2)^0,w,c
 16911   004750  104F               	iorwf	(___fldiv@rem+3)^0,w,c
 16912   004752  B4D8               	btfsc	status,2,c
 16913   004754  EFAE  F023         	goto	u8261
 16914   004758  EFB0  F023         	goto	u8260
 16915   00475C                     u8261:
 16916   00475C  EFC8  F023         	goto	l6773
 16917   004760                     u8260:
 16918   004760  8053               	bsf	___fldiv@grs^0,0,c
 16919   004762  EFC8  F023         	goto	l6773
 16920   004766                     l6767:
 16921   004766  90D8               	bcf	status,0,c
 16922   004768  3640               	rlcf	___fldiv@b^0,f,c
 16923   00476A  3641               	rlcf	(___fldiv@b+1)^0,f,c
 16924   00476C  3642               	rlcf	(___fldiv@b+2)^0,f,c
 16925   00476E  3643               	rlcf	(___fldiv@b+3)^0,f,c
 16926   004770  AE56               	btfss	(___fldiv@grs+3)^0,7,c
 16927   004772  EFBD  F023         	goto	u8271
 16928   004776  EFBF  F023         	goto	u8270
 16929   00477A                     u8271:
 16930   00477A  EFC0  F023         	goto	l941
 16931   00477E                     u8270:
 16932   00477E  8040               	bsf	___fldiv@b^0,0,c
 16933   004780                     l941:
 16934   004780  90D8               	bcf	status,0,c
 16935   004782  3653               	rlcf	___fldiv@grs^0,f,c
 16936   004784  3654               	rlcf	(___fldiv@grs+1)^0,f,c
 16937   004786  3655               	rlcf	(___fldiv@grs+2)^0,f,c
 16938   004788  3656               	rlcf	(___fldiv@grs+3)^0,f,c
 16939   00478A  0651               	decf	___fldiv@new_exp^0,f,c
 16940   00478C  A0D8               	btfss	status,0,c
 16941   00478E  0652               	decf	(___fldiv@new_exp+1)^0,f,c
 16942   004790                     l6773:
 16943   004790  AE42               	btfss	(___fldiv@b+2)^0,7,c
 16944   004792  EFCD  F023         	goto	u8281
 16945   004796  EFCF  F023         	goto	u8280
 16946   00479A                     u8281:
 16947   00479A  EFB3  F023         	goto	l6767
 16948   00479E                     u8280:
 16949   00479E  6A58               	clrf	___fldiv@aexp^0,c
 16950   0047A0  AE56               	btfss	(___fldiv@grs+3)^0,7,c
 16951   0047A2  EFD5  F023         	goto	u8291
 16952   0047A6  EFD7  F023         	goto	u8290
 16953   0047AA                     u8291:
 16954   0047AA  EFFB  F023         	goto	l943
 16955   0047AE                     u8290:
 16956   0047AE  0EFF               	movlw	255
 16957   0047B0  1453               	andwf	___fldiv@grs^0,w,c
 16958   0047B2  6E48               	movwf	??___fldiv^0,c
 16959   0047B4  0EFF               	movlw	255
 16960   0047B6  1454               	andwf	(___fldiv@grs+1)^0,w,c
 16961   0047B8  6E49               	movwf	(??___fldiv+1)^0,c
 16962   0047BA  0EFF               	movlw	255
 16963   0047BC  1455               	andwf	(___fldiv@grs+2)^0,w,c
 16964   0047BE  6E4A               	movwf	(??___fldiv+2)^0,c
 16965   0047C0  0E7F               	movlw	127
 16966   0047C2  1456               	andwf	(___fldiv@grs+3)^0,w,c
 16967   0047C4  6E4B               	movwf	(??___fldiv+3)^0,c
 16968   0047C6  5048               	movf	??___fldiv^0,w,c
 16969   0047C8  1049               	iorwf	(??___fldiv+1)^0,w,c
 16970   0047CA  104A               	iorwf	(??___fldiv+2)^0,w,c
 16971   0047CC  104B               	iorwf	(??___fldiv+3)^0,w,c
 16972   0047CE  B4D8               	btfsc	status,2,c
 16973   0047D0  EFEC  F023         	goto	u8301
 16974   0047D4  EFEE  F023         	goto	u8300
 16975   0047D8                     u8301:
 16976   0047D8  EFF2  F023         	goto	l944
 16977   0047DC                     u8300:
 16978   0047DC                     l6777:
 16979   0047DC  0E01               	movlw	1
 16980   0047DE  6E58               	movwf	___fldiv@aexp^0,c
 16981   0047E0  EFFB  F023         	goto	l943
 16982   0047E4                     l944:
 16983   0047E4  A040               	btfss	___fldiv@b^0,0,c
 16984   0047E6  EFF7  F023         	goto	u8311
 16985   0047EA  EFF9  F023         	goto	u8310
 16986   0047EE                     u8311:
 16987   0047EE  EFFB  F023         	goto	l943
 16988   0047F2                     u8310:
 16989   0047F2  EFEE  F023         	goto	l6777
 16990   0047F6                     l943:
 16991   0047F6  5058               	movf	___fldiv@aexp^0,w,c
 16992   0047F8  B4D8               	btfsc	status,2,c
 16993   0047FA  EF01  F024         	goto	u8321
 16994   0047FE  EF03  F024         	goto	u8320
 16995   004802                     u8321:
 16996   004802  EF27  F024         	goto	l6789
 16997   004806                     u8320:
 16998   004806  0E01               	movlw	1
 16999   004808  2640               	addwf	___fldiv@b^0,f,c
 17000   00480A  0E00               	movlw	0
 17001   00480C  2241               	addwfc	(___fldiv@b+1)^0,f,c
 17002   00480E  2242               	addwfc	(___fldiv@b+2)^0,f,c
 17003   004810  2243               	addwfc	(___fldiv@b+3)^0,f,c
 17004   004812  A043               	btfss	(___fldiv@b+3)^0,0,c
 17005   004814  EF0E  F024         	goto	u8331
 17006   004818  EF10  F024         	goto	u8330
 17007   00481C                     u8331:
 17008   00481C  EF27  F024         	goto	l6789
 17009   004820                     u8330:
 17010   004820  C040  F048         	movff	___fldiv@b,??___fldiv
 17011   004824  C041  F049         	movff	___fldiv@b+1,??___fldiv+1
 17012   004828  C042  F04A         	movff	___fldiv@b+2,??___fldiv+2
 17013   00482C  C043  F04B         	movff	___fldiv@b+3,??___fldiv+3
 17014   004830  344B               	rlcf	(??___fldiv+3)^0,w,c
 17015   004832  324B               	rrcf	(??___fldiv+3)^0,f,c
 17016   004834  324A               	rrcf	(??___fldiv+2)^0,f,c
 17017   004836  3249               	rrcf	(??___fldiv+1)^0,f,c
 17018   004838  3248               	rrcf	??___fldiv^0,f,c
 17019   00483A  C048  F040         	movff	??___fldiv,___fldiv@b
 17020   00483E  C049  F041         	movff	??___fldiv+1,___fldiv@b+1
 17021   004842  C04A  F042         	movff	??___fldiv+2,___fldiv@b+2
 17022   004846  C04B  F043         	movff	??___fldiv+3,___fldiv@b+3
 17023   00484A  4A51               	infsnz	___fldiv@new_exp^0,f,c
 17024   00484C  2A52               	incf	(___fldiv@new_exp+1)^0,f,c
 17025   00484E                     l6789:
 17026   00484E  BE52               	btfsc	(___fldiv@new_exp+1)^0,7,c
 17027   004850  EF32  F024         	goto	u8341
 17028   004854  5052               	movf	(___fldiv@new_exp+1)^0,w,c
 17029   004856  E108               	bnz	u8340
 17030   004858  2851               	incf	___fldiv@new_exp^0,w,c
 17031   00485A  A0D8               	btfss	status,0,c
 17032   00485C  EF32  F024         	goto	u8341
 17033   004860  EF34  F024         	goto	u8340
 17034   004864                     u8341:
 17035   004864  EF3F  F024         	goto	l6793
 17036   004868                     u8340:
 17037   004868  0E00               	movlw	0
 17038   00486A  6E52               	movwf	(___fldiv@new_exp+1)^0,c
 17039   00486C  6851               	setf	___fldiv@new_exp^0,c
 17040   00486E  0E00               	movlw	0
 17041   004870  6E40               	movwf	___fldiv@b^0,c
 17042   004872  0E00               	movlw	0
 17043   004874  6E41               	movwf	(___fldiv@b+1)^0,c
 17044   004876  0E00               	movlw	0
 17045   004878  6E42               	movwf	(___fldiv@b+2)^0,c
 17046   00487A  0E00               	movlw	0
 17047   00487C  6E43               	movwf	(___fldiv@b+3)^0,c
 17048   00487E                     l6793:
 17049   00487E  BE52               	btfsc	(___fldiv@new_exp+1)^0,7,c
 17050   004880  EF4C  F024         	goto	u8350
 17051   004884  5052               	movf	(___fldiv@new_exp+1)^0,w,c
 17052   004886  E106               	bnz	u8351
 17053   004888  0451               	decf	___fldiv@new_exp^0,w,c
 17054   00488A  B0D8               	btfsc	status,0,c
 17055   00488C  EF4A  F024         	goto	u8351
 17056   004890  EF4C  F024         	goto	u8350
 17057   004894                     u8351:
 17058   004894  EF59  F024         	goto	l6799
 17059   004898                     u8350:
 17060   004898  0E00               	movlw	0
 17061   00489A  6E52               	movwf	(___fldiv@new_exp+1)^0,c
 17062   00489C  0E00               	movlw	0
 17063   00489E  6E51               	movwf	___fldiv@new_exp^0,c
 17064   0048A0  0E00               	movlw	0
 17065   0048A2  6E40               	movwf	___fldiv@b^0,c
 17066   0048A4  0E00               	movlw	0
 17067   0048A6  6E41               	movwf	(___fldiv@b+1)^0,c
 17068   0048A8  0E00               	movlw	0
 17069   0048AA  6E42               	movwf	(___fldiv@b+2)^0,c
 17070   0048AC  0E00               	movlw	0
 17071   0048AE  6E43               	movwf	(___fldiv@b+3)^0,c
 17072   0048B0  6A50               	clrf	___fldiv@sign^0,c
 17073   0048B2                     l6799:
 17074   0048B2  C051  F057         	movff	___fldiv@new_exp,___fldiv@bexp
 17075   0048B6  A057               	btfss	___fldiv@bexp^0,0,c
 17076   0048B8  EF60  F024         	goto	u8361
 17077   0048BC  EF62  F024         	goto	u8360
 17078   0048C0                     u8361:
 17079   0048C0  EF65  F024         	goto	l6805
 17080   0048C4                     u8360:
 17081   0048C4  8E42               	bsf	(___fldiv@b+2)^0,7,c
 17082   0048C6  EF66  F024         	goto	l6807
 17083   0048CA                     l6805:
 17084   0048CA  9E42               	bcf	(___fldiv@b+2)^0,7,c
 17085   0048CC                     l6807:
 17086   0048CC  90D8               	bcf	status,0,c
 17087   0048CE  3057               	rrcf	___fldiv@bexp^0,w,c
 17088   0048D0  6E43               	movwf	(___fldiv@b+3)^0,c
 17089   0048D2  EF1F  F023         	goto	l6723
 17090   0048D6                     l930:
 17091   0048D6  0012               	return		;funcret
 17092   0048D8                     __end_of___fldiv:
 17093                           	callstack 0
 17094                           
 17095 ;; *************** function ___fladd *****************
 17096 ;; Defined at:
 17097 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 17098 ;; Parameters:    Size  Location     Type
 17099 ;;  b               4   14[COMRAM] unsigned char 
 17100 ;;  a               4   18[COMRAM] unsigned char 
 17101 ;; Auto vars:     Size  Location     Type
 17102 ;;  grs             1   29[COMRAM] unsigned char 
 17103 ;;  bexp            1   28[COMRAM] unsigned char 
 17104 ;;  aexp            1   27[COMRAM] unsigned char 
 17105 ;;  signs           1   26[COMRAM] unsigned char 
 17106 ;; Return value:  Size  Location     Type
 17107 ;;                  4   14[COMRAM] unsigned char 
 17108 ;; Registers used:
 17109 ;;		wreg, status,2, status,0
 17110 ;; Tracked objects:
 17111 ;;		On entry : 0/0
 17112 ;;		On exit  : 0/0
 17113 ;;		Unchanged: 0/0
 17114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17115 ;;      Params:         8       0       0       0       0       0       0       0       0
 17116 ;;      Locals:         4       0       0       0       0       0       0       0       0
 17117 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17118 ;;      Totals:        16       0       0       0       0       0       0       0       0
 17119 ;;Total ram usage:       16 bytes
 17120 ;; Hardware stack levels used: 1
 17121 ;; Hardware stack levels required when called: 1
 17122 ;; This function calls:
 17123 ;;		Nothing
 17124 ;; This function is called by:
 17125 ;;		_Calibrate_Flame_Sensor
 17126 ;;		_Calibrate_MQ2
 17127 ;;		_Read_LM35
 17128 ;;		_Read_MQ2_Sensor
 17129 ;;		_Calculate_Flow
 17130 ;;		___flsub
 17131 ;;		_efgtoa
 17132 ;;		_powf
 17133 ;; This function uses a non-reentrant model
 17134 ;;
 17135                           
 17136                           	psect	text54
 17137   00388E                     __ptext54:
 17138                           	callstack 0
 17139   00388E                     ___fladd:
 17140                           	callstack 22
 17141   00388E  5012               	movf	(___fladd@b+3)^0,w,c
 17142   003890  0B80               	andlw	128
 17143   003892  6E1B               	movwf	___fladd@signs^0,c
 17144   003894  5012               	movf	(___fladd@b+3)^0,w,c
 17145   003896  2412               	addwf	(___fladd@b+3)^0,w,c
 17146   003898  6E1D               	movwf	___fladd@bexp^0,c
 17147   00389A  AE11               	btfss	(___fladd@b+2)^0,7,c
 17148   00389C  EF52  F01C         	goto	u7591
 17149   0038A0  EF54  F01C         	goto	u7590
 17150   0038A4                     u7591:
 17151   0038A4  EF55  F01C         	goto	l6381
 17152   0038A8                     u7590:
 17153   0038A8  801D               	bsf	___fladd@bexp^0,0,c
 17154   0038AA                     l6381:
 17155   0038AA  501D               	movf	___fladd@bexp^0,w,c
 17156   0038AC  B4D8               	btfsc	status,2,c
 17157   0038AE  EF5B  F01C         	goto	u7601
 17158   0038B2  EF5D  F01C         	goto	u7600
 17159   0038B6                     u7601:
 17160   0038B6  EF71  F01C         	goto	l6391
 17161   0038BA                     u7600:
 17162   0038BA  281D               	incf	___fladd@bexp^0,w,c
 17163   0038BC  A4D8               	btfss	status,2,c
 17164   0038BE  EF63  F01C         	goto	u7611
 17165   0038C2  EF65  F01C         	goto	u7610
 17166   0038C6                     u7611:
 17167   0038C6  EF6D  F01C         	goto	l6387
 17168   0038CA                     u7610:
 17169   0038CA  0E00               	movlw	0
 17170   0038CC  6E0F               	movwf	___fladd@b^0,c
 17171   0038CE  0E00               	movlw	0
 17172   0038D0  6E10               	movwf	(___fladd@b+1)^0,c
 17173   0038D2  0E00               	movlw	0
 17174   0038D4  6E11               	movwf	(___fladd@b+2)^0,c
 17175   0038D6  0E00               	movlw	0
 17176   0038D8  6E12               	movwf	(___fladd@b+3)^0,c
 17177   0038DA                     l6387:
 17178   0038DA  8E11               	bsf	(___fladd@b+2)^0,7,c
 17179   0038DC  6A12               	clrf	(___fladd@b+3)^0,c
 17180   0038DE  EF79  F01C         	goto	l6393
 17181   0038E2                     l6391:
 17182   0038E2  0E00               	movlw	0
 17183   0038E4  6E0F               	movwf	___fladd@b^0,c
 17184   0038E6  0E00               	movlw	0
 17185   0038E8  6E10               	movwf	(___fladd@b+1)^0,c
 17186   0038EA  0E00               	movlw	0
 17187   0038EC  6E11               	movwf	(___fladd@b+2)^0,c
 17188   0038EE  0E00               	movlw	0
 17189   0038F0  6E12               	movwf	(___fladd@b+3)^0,c
 17190   0038F2                     l6393:
 17191   0038F2  5016               	movf	(___fladd@a+3)^0,w,c
 17192   0038F4  0B80               	andlw	128
 17193   0038F6  6E1C               	movwf	___fladd@aexp^0,c
 17194   0038F8  501B               	movf	___fladd@signs^0,w,c
 17195   0038FA  181C               	xorwf	___fladd@aexp^0,w,c
 17196   0038FC  B4D8               	btfsc	status,2,c
 17197   0038FE  EF83  F01C         	goto	u7621
 17198   003902  EF85  F01C         	goto	u7620
 17199   003906                     u7621:
 17200   003906  EF86  F01C         	goto	l6399
 17201   00390A                     u7620:
 17202   00390A  8C1B               	bsf	___fladd@signs^0,6,c
 17203   00390C                     l6399:
 17204   00390C  5016               	movf	(___fladd@a+3)^0,w,c
 17205   00390E  2416               	addwf	(___fladd@a+3)^0,w,c
 17206   003910  6E1C               	movwf	___fladd@aexp^0,c
 17207   003912  AE15               	btfss	(___fladd@a+2)^0,7,c
 17208   003914  EF8E  F01C         	goto	u7631
 17209   003918  EF90  F01C         	goto	u7630
 17210   00391C                     u7631:
 17211   00391C  EF91  F01C         	goto	l6405
 17212   003920                     u7630:
 17213   003920  801C               	bsf	___fladd@aexp^0,0,c
 17214   003922                     l6405:
 17215   003922  501C               	movf	___fladd@aexp^0,w,c
 17216   003924  B4D8               	btfsc	status,2,c
 17217   003926  EF97  F01C         	goto	u7641
 17218   00392A  EF99  F01C         	goto	u7640
 17219   00392E                     u7641:
 17220   00392E  EFAD  F01C         	goto	l6415
 17221   003932                     u7640:
 17222   003932  281C               	incf	___fladd@aexp^0,w,c
 17223   003934  A4D8               	btfss	status,2,c
 17224   003936  EF9F  F01C         	goto	u7651
 17225   00393A  EFA1  F01C         	goto	u7650
 17226   00393E                     u7651:
 17227   00393E  EFA9  F01C         	goto	l6411
 17228   003942                     u7650:
 17229   003942  0E00               	movlw	0
 17230   003944  6E13               	movwf	___fladd@a^0,c
 17231   003946  0E00               	movlw	0
 17232   003948  6E14               	movwf	(___fladd@a+1)^0,c
 17233   00394A  0E00               	movlw	0
 17234   00394C  6E15               	movwf	(___fladd@a+2)^0,c
 17235   00394E  0E00               	movlw	0
 17236   003950  6E16               	movwf	(___fladd@a+3)^0,c
 17237   003952                     l6411:
 17238   003952  8E15               	bsf	(___fladd@a+2)^0,7,c
 17239   003954  6A16               	clrf	(___fladd@a+3)^0,c
 17240   003956  EFB5  F01C         	goto	l6417
 17241   00395A                     l6415:
 17242   00395A  0E00               	movlw	0
 17243   00395C  6E13               	movwf	___fladd@a^0,c
 17244   00395E  0E00               	movlw	0
 17245   003960  6E14               	movwf	(___fladd@a+1)^0,c
 17246   003962  0E00               	movlw	0
 17247   003964  6E15               	movwf	(___fladd@a+2)^0,c
 17248   003966  0E00               	movlw	0
 17249   003968  6E16               	movwf	(___fladd@a+3)^0,c
 17250   00396A                     l6417:
 17251   00396A  501D               	movf	___fladd@bexp^0,w,c
 17252   00396C  5C1C               	subwf	___fladd@aexp^0,w,c
 17253   00396E  B0D8               	btfsc	status,0,c
 17254   003970  EFBC  F01C         	goto	u7661
 17255   003974  EFBE  F01C         	goto	u7660
 17256   003978                     u7661:
 17257   003978  EFE5  F01C         	goto	l6453
 17258   00397C                     u7660:
 17259   00397C  AC1B               	btfss	___fladd@signs^0,6,c
 17260   00397E  EFC3  F01C         	goto	u7671
 17261   003982  EFC5  F01C         	goto	u7670
 17262   003986                     u7671:
 17263   003986  EFC7  F01C         	goto	l6423
 17264   00398A                     u7670:
 17265   00398A  0E80               	movlw	128
 17266   00398C  1A1B               	xorwf	___fladd@signs^0,f,c
 17267   00398E                     l6423:
 17268   00398E  C01D  F01E         	movff	___fladd@bexp,___fladd@grs
 17269   003992  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
 17270   003996  C01E  F01C         	movff	___fladd@grs,___fladd@aexp
 17271   00399A  C00F  F01E         	movff	___fladd@b,___fladd@grs
 17272   00399E  C013  F00F         	movff	___fladd@a,___fladd@b
 17273   0039A2  C01E  F013         	movff	___fladd@grs,___fladd@a
 17274   0039A6  C010  F01E         	movff	___fladd@b+1,___fladd@grs
 17275   0039AA  C014  F010         	movff	___fladd@a+1,___fladd@b+1
 17276   0039AE  C01E  F014         	movff	___fladd@grs,___fladd@a+1
 17277   0039B2  C011  F01E         	movff	___fladd@b+2,___fladd@grs
 17278   0039B6  C015  F011         	movff	___fladd@a+2,___fladd@b+2
 17279   0039BA  C01E  F015         	movff	___fladd@grs,___fladd@a+2
 17280   0039BE  C012  F01E         	movff	___fladd@b+3,___fladd@grs
 17281   0039C2  C016  F012         	movff	___fladd@a+3,___fladd@b+3
 17282   0039C6  C01E  F016         	movff	___fladd@grs,___fladd@a+3
 17283   0039CA                     l6453:
 17284   0039CA  6A1E               	clrf	___fladd@grs^0,c
 17285   0039CC  501D               	movf	___fladd@bexp^0,w,c
 17286   0039CE  C01C  F017         	movff	___fladd@aexp,??___fladd
 17287   0039D2  6A18               	clrf	(??___fladd+1)^0,c
 17288   0039D4  5E17               	subwf	??___fladd^0,f,c
 17289   0039D6  0E00               	movlw	0
 17290   0039D8  5A18               	subwfb	(??___fladd+1)^0,f,c
 17291   0039DA  BE18               	btfsc	(??___fladd+1)^0,7,c
 17292   0039DC  EFF9  F01C         	goto	u7681
 17293   0039E0  5018               	movf	(??___fladd+1)^0,w,c
 17294   0039E2  E109               	bnz	u7680
 17295   0039E4  0E1A               	movlw	26
 17296   0039E6  5C17               	subwf	??___fladd^0,w,c
 17297   0039E8  A0D8               	btfss	status,0,c
 17298   0039EA  EFF9  F01C         	goto	u7681
 17299   0039EE  EFFB  F01C         	goto	u7680
 17300   0039F2                     u7681:
 17301   0039F2  EF32  F01D         	goto	l877
 17302   0039F6                     u7680:
 17303   0039F6  500F               	movf	___fladd@b^0,w,c
 17304   0039F8  1010               	iorwf	(___fladd@b+1)^0,w,c
 17305   0039FA  1011               	iorwf	(___fladd@b+2)^0,w,c
 17306   0039FC  1012               	iorwf	(___fladd@b+3)^0,w,c
 17307   0039FE  A4D8               	btfss	status,2,c
 17308   003A00  EF04  F01D         	goto	u7691
 17309   003A04  EF07  F01D         	goto	u7690
 17310   003A08                     u7691:
 17311   003A08  0E01               	movlw	1
 17312   003A0A  EF08  F01D         	goto	u7700
 17313   003A0E                     u7690:
 17314   003A0E  0E00               	movlw	0
 17315   003A10                     u7700:
 17316   003A10  6E1E               	movwf	___fladd@grs^0,c
 17317   003A12  0E00               	movlw	0
 17318   003A14  6E0F               	movwf	___fladd@b^0,c
 17319   003A16  0E00               	movlw	0
 17320   003A18  6E10               	movwf	(___fladd@b+1)^0,c
 17321   003A1A  0E00               	movlw	0
 17322   003A1C  6E11               	movwf	(___fladd@b+2)^0,c
 17323   003A1E  0E00               	movlw	0
 17324   003A20  6E12               	movwf	(___fladd@b+3)^0,c
 17325   003A22  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
 17326   003A26  EF3B  F01D         	goto	l876
 17327   003A2A                     l878:
 17328   003A2A  A01E               	btfss	___fladd@grs^0,0,c
 17329   003A2C  EF1A  F01D         	goto	u7711
 17330   003A30  EF1C  F01D         	goto	u7710
 17331   003A34                     u7711:
 17332   003A34  EF22  F01D         	goto	l6463
 17333   003A38                     u7710:
 17334   003A38  90D8               	bcf	status,0,c
 17335   003A3A  301E               	rrcf	___fladd@grs^0,w,c
 17336   003A3C  0901               	iorlw	1
 17337   003A3E  6E1E               	movwf	___fladd@grs^0,c
 17338   003A40  EF24  F01D         	goto	l6465
 17339   003A44                     l6463:
 17340   003A44  90D8               	bcf	status,0,c
 17341   003A46  321E               	rrcf	___fladd@grs^0,f,c
 17342   003A48                     l6465:
 17343   003A48  A00F               	btfss	___fladd@b^0,0,c
 17344   003A4A  EF29  F01D         	goto	u7721
 17345   003A4E  EF2B  F01D         	goto	u7720
 17346   003A52                     u7721:
 17347   003A52  EF2C  F01D         	goto	l6469
 17348   003A56                     u7720:
 17349   003A56  8E1E               	bsf	___fladd@grs^0,7,c
 17350   003A58                     l6469:
 17351   003A58  3412               	rlcf	(___fladd@b+3)^0,w,c
 17352   003A5A  3212               	rrcf	(___fladd@b+3)^0,f,c
 17353   003A5C  3211               	rrcf	(___fladd@b+2)^0,f,c
 17354   003A5E  3210               	rrcf	(___fladd@b+1)^0,f,c
 17355   003A60  320F               	rrcf	___fladd@b^0,f,c
 17356   003A62  2A1D               	incf	___fladd@bexp^0,f,c
 17357   003A64                     l877:
 17358   003A64  501C               	movf	___fladd@aexp^0,w,c
 17359   003A66  5C1D               	subwf	___fladd@bexp^0,w,c
 17360   003A68  A0D8               	btfss	status,0,c
 17361   003A6A  EF39  F01D         	goto	u7731
 17362   003A6E  EF3B  F01D         	goto	u7730
 17363   003A72                     u7731:
 17364   003A72  EF15  F01D         	goto	l878
 17365   003A76                     u7730:
 17366   003A76                     l876:
 17367   003A76  BC1B               	btfsc	___fladd@signs^0,6,c
 17368   003A78  EF40  F01D         	goto	u7741
 17369   003A7C  EF42  F01D         	goto	u7740
 17370   003A80                     u7741:
 17371   003A80  EF82  F01D         	goto	l6497
 17372   003A84                     u7740:
 17373   003A84  501D               	movf	___fladd@bexp^0,w,c
 17374   003A86  A4D8               	btfss	status,2,c
 17375   003A88  EF48  F01D         	goto	u7751
 17376   003A8C  EF4A  F01D         	goto	u7750
 17377   003A90                     u7751:
 17378   003A90  EF54  F01D         	goto	l6479
 17379   003A94                     u7750:
 17380   003A94  0E00               	movlw	0
 17381   003A96  6E0F               	movwf	?___fladd^0,c
 17382   003A98  0E00               	movlw	0
 17383   003A9A  6E10               	movwf	(?___fladd+1)^0,c
 17384   003A9C  0E00               	movlw	0
 17385   003A9E  6E11               	movwf	(?___fladd+2)^0,c
 17386   003AA0  0E00               	movlw	0
 17387   003AA2  6E12               	movwf	(?___fladd+3)^0,c
 17388   003AA4  EFA1  F01E         	goto	l885
 17389   003AA8                     l6479:
 17390   003AA8  5013               	movf	___fladd@a^0,w,c
 17391   003AAA  260F               	addwf	___fladd@b^0,f,c
 17392   003AAC  5014               	movf	(___fladd@a+1)^0,w,c
 17393   003AAE  2210               	addwfc	(___fladd@b+1)^0,f,c
 17394   003AB0  5015               	movf	(___fladd@a+2)^0,w,c
 17395   003AB2  2211               	addwfc	(___fladd@b+2)^0,f,c
 17396   003AB4  5016               	movf	(___fladd@a+3)^0,w,c
 17397   003AB6  2212               	addwfc	(___fladd@b+3)^0,f,c
 17398   003AB8  A012               	btfss	(___fladd@b+3)^0,0,c
 17399   003ABA  EF61  F01D         	goto	u7761
 17400   003ABE  EF63  F01D         	goto	u7760
 17401   003AC2                     u7761:
 17402   003AC2  EF0F  F01E         	goto	l890
 17403   003AC6                     u7760:
 17404   003AC6  A01E               	btfss	___fladd@grs^0,0,c
 17405   003AC8  EF68  F01D         	goto	u7771
 17406   003ACC  EF6A  F01D         	goto	u7770
 17407   003AD0                     u7771:
 17408   003AD0  EF70  F01D         	goto	l6487
 17409   003AD4                     u7770:
 17410   003AD4  90D8               	bcf	status,0,c
 17411   003AD6  301E               	rrcf	___fladd@grs^0,w,c
 17412   003AD8  0901               	iorlw	1
 17413   003ADA  6E1E               	movwf	___fladd@grs^0,c
 17414   003ADC  EF72  F01D         	goto	l6489
 17415   003AE0                     l6487:
 17416   003AE0  90D8               	bcf	status,0,c
 17417   003AE2  321E               	rrcf	___fladd@grs^0,f,c
 17418   003AE4                     l6489:
 17419   003AE4  A00F               	btfss	___fladd@b^0,0,c
 17420   003AE6  EF77  F01D         	goto	u7781
 17421   003AEA  EF79  F01D         	goto	u7780
 17422   003AEE                     u7781:
 17423   003AEE  EF7A  F01D         	goto	l6493
 17424   003AF2                     u7780:
 17425   003AF2  8E1E               	bsf	___fladd@grs^0,7,c
 17426   003AF4                     l6493:
 17427   003AF4  3412               	rlcf	(___fladd@b+3)^0,w,c
 17428   003AF6  3212               	rrcf	(___fladd@b+3)^0,f,c
 17429   003AF8  3211               	rrcf	(___fladd@b+2)^0,f,c
 17430   003AFA  3210               	rrcf	(___fladd@b+1)^0,f,c
 17431   003AFC  320F               	rrcf	___fladd@b^0,f,c
 17432   003AFE  2A1D               	incf	___fladd@bexp^0,f,c
 17433   003B00  EF0F  F01E         	goto	l890
 17434   003B04                     l6497:
 17435   003B04  5013               	movf	___fladd@a^0,w,c
 17436   003B06  5C0F               	subwf	___fladd@b^0,w,c
 17437   003B08  5014               	movf	(___fladd@a+1)^0,w,c
 17438   003B0A  5810               	subwfb	(___fladd@b+1)^0,w,c
 17439   003B0C  5015               	movf	(___fladd@a+2)^0,w,c
 17440   003B0E  5811               	subwfb	(___fladd@b+2)^0,w,c
 17441   003B10  5012               	movf	(___fladd@b+3)^0,w,c
 17442   003B12  0A80               	xorlw	128
 17443   003B14  6E17               	movwf	??___fladd^0,c
 17444   003B16  5016               	movf	(___fladd@a+3)^0,w,c
 17445   003B18  0A80               	xorlw	128
 17446   003B1A  5817               	subwfb	??___fladd^0,w,c
 17447   003B1C  B0D8               	btfsc	status,0,c
 17448   003B1E  EF93  F01D         	goto	u7791
 17449   003B22  EF95  F01D         	goto	u7790
 17450   003B26                     u7791:
 17451   003B26  EFC0  F01D         	goto	l6507
 17452   003B2A                     u7790:
 17453   003B2A  500F               	movf	___fladd@b^0,w,c
 17454   003B2C  5C13               	subwf	___fladd@a^0,w,c
 17455   003B2E  6E17               	movwf	??___fladd^0,c
 17456   003B30  5010               	movf	(___fladd@b+1)^0,w,c
 17457   003B32  5814               	subwfb	(___fladd@a+1)^0,w,c
 17458   003B34  6E18               	movwf	(??___fladd+1)^0,c
 17459   003B36  5011               	movf	(___fladd@b+2)^0,w,c
 17460   003B38  5815               	subwfb	(___fladd@a+2)^0,w,c
 17461   003B3A  6E19               	movwf	(??___fladd+2)^0,c
 17462   003B3C  5012               	movf	(___fladd@b+3)^0,w,c
 17463   003B3E  5816               	subwfb	(___fladd@a+3)^0,w,c
 17464   003B40  6E1A               	movwf	(??___fladd+3)^0,c
 17465   003B42  0EFF               	movlw	255
 17466   003B44  2417               	addwf	??___fladd^0,w,c
 17467   003B46  6E0F               	movwf	___fladd@b^0,c
 17468   003B48  0EFF               	movlw	255
 17469   003B4A  2018               	addwfc	(??___fladd+1)^0,w,c
 17470   003B4C  6E10               	movwf	(___fladd@b+1)^0,c
 17471   003B4E  0EFF               	movlw	255
 17472   003B50  2019               	addwfc	(??___fladd+2)^0,w,c
 17473   003B52  6E11               	movwf	(___fladd@b+2)^0,c
 17474   003B54  0EFF               	movlw	255
 17475   003B56  201A               	addwfc	(??___fladd+3)^0,w,c
 17476   003B58  6E12               	movwf	(___fladd@b+3)^0,c
 17477   003B5A  0E80               	movlw	128
 17478   003B5C  1A1B               	xorwf	___fladd@signs^0,f,c
 17479   003B5E  6C1E               	negf	___fladd@grs^0,c
 17480   003B60  501E               	movf	___fladd@grs^0,w,c
 17481   003B62  A4D8               	btfss	status,2,c
 17482   003B64  EFB6  F01D         	goto	u7801
 17483   003B68  EFB8  F01D         	goto	u7800
 17484   003B6C                     u7801:
 17485   003B6C  EFC8  F01D         	goto	l893
 17486   003B70                     u7800:
 17487   003B70  0E01               	movlw	1
 17488   003B72  260F               	addwf	___fladd@b^0,f,c
 17489   003B74  0E00               	movlw	0
 17490   003B76  2210               	addwfc	(___fladd@b+1)^0,f,c
 17491   003B78  2211               	addwfc	(___fladd@b+2)^0,f,c
 17492   003B7A  2212               	addwfc	(___fladd@b+3)^0,f,c
 17493   003B7C  EFC8  F01D         	goto	l893
 17494   003B80                     l6507:
 17495   003B80  5013               	movf	___fladd@a^0,w,c
 17496   003B82  5E0F               	subwf	___fladd@b^0,f,c
 17497   003B84  5014               	movf	(___fladd@a+1)^0,w,c
 17498   003B86  5A10               	subwfb	(___fladd@b+1)^0,f,c
 17499   003B88  5015               	movf	(___fladd@a+2)^0,w,c
 17500   003B8A  5A11               	subwfb	(___fladd@b+2)^0,f,c
 17501   003B8C  5016               	movf	(___fladd@a+3)^0,w,c
 17502   003B8E  5A12               	subwfb	(___fladd@b+3)^0,f,c
 17503   003B90                     l893:
 17504   003B90  500F               	movf	___fladd@b^0,w,c
 17505   003B92  1010               	iorwf	(___fladd@b+1)^0,w,c
 17506   003B94  1011               	iorwf	(___fladd@b+2)^0,w,c
 17507   003B96  1012               	iorwf	(___fladd@b+3)^0,w,c
 17508   003B98  A4D8               	btfss	status,2,c
 17509   003B9A  EFD1  F01D         	goto	u7811
 17510   003B9E  EFD3  F01D         	goto	u7810
 17511   003BA2                     u7811:
 17512   003BA2  EF08  F01E         	goto	l6531
 17513   003BA6                     u7810:
 17514   003BA6  501E               	movf	___fladd@grs^0,w,c
 17515   003BA8  A4D8               	btfss	status,2,c
 17516   003BAA  EFD9  F01D         	goto	u7821
 17517   003BAE  EFDB  F01D         	goto	u7820
 17518   003BB2                     u7821:
 17519   003BB2  EF08  F01E         	goto	l6531
 17520   003BB6                     u7820:
 17521   003BB6  0E00               	movlw	0
 17522   003BB8  6E0F               	movwf	?___fladd^0,c
 17523   003BBA  0E00               	movlw	0
 17524   003BBC  6E10               	movwf	(?___fladd+1)^0,c
 17525   003BBE  0E00               	movlw	0
 17526   003BC0  6E11               	movwf	(?___fladd+2)^0,c
 17527   003BC2  0E00               	movlw	0
 17528   003BC4  6E12               	movwf	(?___fladd+3)^0,c
 17529   003BC6  EFA1  F01E         	goto	l885
 17530   003BCA                     l6515:
 17531   003BCA  90D8               	bcf	status,0,c
 17532   003BCC  360F               	rlcf	___fladd@b^0,f,c
 17533   003BCE  3610               	rlcf	(___fladd@b+1)^0,f,c
 17534   003BD0  3611               	rlcf	(___fladd@b+2)^0,f,c
 17535   003BD2  3612               	rlcf	(___fladd@b+3)^0,f,c
 17536   003BD4  AE1E               	btfss	___fladd@grs^0,7,c
 17537   003BD6  EFEF  F01D         	goto	u7831
 17538   003BDA  EFF1  F01D         	goto	u7830
 17539   003BDE                     u7831:
 17540   003BDE  EFF2  F01D         	goto	l6521
 17541   003BE2                     u7830:
 17542   003BE2  800F               	bsf	___fladd@b^0,0,c
 17543   003BE4                     l6521:
 17544   003BE4  A01E               	btfss	___fladd@grs^0,0,c
 17545   003BE6  EFF7  F01D         	goto	u7841
 17546   003BEA  EFF9  F01D         	goto	u7840
 17547   003BEE                     u7841:
 17548   003BEE  EFFD  F01D         	goto	l6525
 17549   003BF2                     u7840:
 17550   003BF2  80D8               	bsf	status,0,c
 17551   003BF4  361E               	rlcf	___fladd@grs^0,f,c
 17552   003BF6  EFFF  F01D         	goto	l6527
 17553   003BFA                     l6525:
 17554   003BFA  90D8               	bcf	status,0,c
 17555   003BFC  361E               	rlcf	___fladd@grs^0,f,c
 17556   003BFE                     l6527:
 17557   003BFE  501D               	movf	___fladd@bexp^0,w,c
 17558   003C00  B4D8               	btfsc	status,2,c
 17559   003C02  EF05  F01E         	goto	u7851
 17560   003C06  EF07  F01E         	goto	u7850
 17561   003C0A                     u7851:
 17562   003C0A  EF08  F01E         	goto	l6531
 17563   003C0E                     u7850:
 17564   003C0E  061D               	decf	___fladd@bexp^0,f,c
 17565   003C10                     l6531:
 17566   003C10  AE11               	btfss	(___fladd@b+2)^0,7,c
 17567   003C12  EF0D  F01E         	goto	u7861
 17568   003C16  EF0F  F01E         	goto	u7860
 17569   003C1A                     u7861:
 17570   003C1A  EFE5  F01D         	goto	l6515
 17571   003C1E                     u7860:
 17572   003C1E                     l890:
 17573   003C1E  6A1C               	clrf	___fladd@aexp^0,c
 17574   003C20  AE1E               	btfss	___fladd@grs^0,7,c
 17575   003C22  EF15  F01E         	goto	u7871
 17576   003C26  EF17  F01E         	goto	u7870
 17577   003C2A                     u7871:
 17578   003C2A  EF2F  F01E         	goto	l902
 17579   003C2E                     u7870:
 17580   003C2E  C01E  F017         	movff	___fladd@grs,??___fladd
 17581   003C32  0E7F               	movlw	127
 17582   003C34  1617               	andwf	??___fladd^0,f,c
 17583   003C36  B4D8               	btfsc	status,2,c
 17584   003C38  EF20  F01E         	goto	u7881
 17585   003C3C  EF22  F01E         	goto	u7880
 17586   003C40                     u7881:
 17587   003C40  EF26  F01E         	goto	l903
 17588   003C44                     u7880:
 17589   003C44                     l6535:
 17590   003C44  0E01               	movlw	1
 17591   003C46  6E1C               	movwf	___fladd@aexp^0,c
 17592   003C48  EF2F  F01E         	goto	l902
 17593   003C4C                     l903:
 17594   003C4C  A00F               	btfss	___fladd@b^0,0,c
 17595   003C4E  EF2B  F01E         	goto	u7891
 17596   003C52  EF2D  F01E         	goto	u7890
 17597   003C56                     u7891:
 17598   003C56  EF2F  F01E         	goto	l902
 17599   003C5A                     u7890:
 17600   003C5A  EF22  F01E         	goto	l6535
 17601   003C5E                     l902:
 17602   003C5E  501C               	movf	___fladd@aexp^0,w,c
 17603   003C60  B4D8               	btfsc	status,2,c
 17604   003C62  EF35  F01E         	goto	u7901
 17605   003C66  EF37  F01E         	goto	u7900
 17606   003C6A                     u7901:
 17607   003C6A  EF62  F01E         	goto	l6547
 17608   003C6E                     u7900:
 17609   003C6E  0E01               	movlw	1
 17610   003C70  260F               	addwf	___fladd@b^0,f,c
 17611   003C72  0E00               	movlw	0
 17612   003C74  2210               	addwfc	(___fladd@b+1)^0,f,c
 17613   003C76  2211               	addwfc	(___fladd@b+2)^0,f,c
 17614   003C78  2212               	addwfc	(___fladd@b+3)^0,f,c
 17615   003C7A  A012               	btfss	(___fladd@b+3)^0,0,c
 17616   003C7C  EF42  F01E         	goto	u7911
 17617   003C80  EF44  F01E         	goto	u7910
 17618   003C84                     u7911:
 17619   003C84  EF62  F01E         	goto	l6547
 17620   003C88                     u7910:
 17621   003C88  C00F  F017         	movff	___fladd@b,??___fladd
 17622   003C8C  C010  F018         	movff	___fladd@b+1,??___fladd+1
 17623   003C90  C011  F019         	movff	___fladd@b+2,??___fladd+2
 17624   003C94  C012  F01A         	movff	___fladd@b+3,??___fladd+3
 17625   003C98  341A               	rlcf	(??___fladd+3)^0,w,c
 17626   003C9A  321A               	rrcf	(??___fladd+3)^0,f,c
 17627   003C9C  3219               	rrcf	(??___fladd+2)^0,f,c
 17628   003C9E  3218               	rrcf	(??___fladd+1)^0,f,c
 17629   003CA0  3217               	rrcf	??___fladd^0,f,c
 17630   003CA2  C017  F00F         	movff	??___fladd,___fladd@b
 17631   003CA6  C018  F010         	movff	??___fladd+1,___fladd@b+1
 17632   003CAA  C019  F011         	movff	??___fladd+2,___fladd@b+2
 17633   003CAE  C01A  F012         	movff	??___fladd+3,___fladd@b+3
 17634   003CB2  281D               	incf	___fladd@bexp^0,w,c
 17635   003CB4  B4D8               	btfsc	status,2,c
 17636   003CB6  EF5F  F01E         	goto	u7921
 17637   003CBA  EF61  F01E         	goto	u7920
 17638   003CBE                     u7921:
 17639   003CBE  EF62  F01E         	goto	l6547
 17640   003CC2                     u7920:
 17641   003CC2  2A1D               	incf	___fladd@bexp^0,f,c
 17642   003CC4                     l6547:
 17643   003CC4  281D               	incf	___fladd@bexp^0,w,c
 17644   003CC6  B4D8               	btfsc	status,2,c
 17645   003CC8  EF68  F01E         	goto	u7931
 17646   003CCC  EF6A  F01E         	goto	u7930
 17647   003CD0                     u7931:
 17648   003CD0  EF72  F01E         	goto	l6551
 17649   003CD4                     u7930:
 17650   003CD4  501D               	movf	___fladd@bexp^0,w,c
 17651   003CD6  A4D8               	btfss	status,2,c
 17652   003CD8  EF70  F01E         	goto	u7941
 17653   003CDC  EF72  F01E         	goto	u7940
 17654   003CE0                     u7941:
 17655   003CE0  EF83  F01E         	goto	l909
 17656   003CE4                     u7940:
 17657   003CE4                     l6551:
 17658   003CE4  0E00               	movlw	0
 17659   003CE6  6E0F               	movwf	___fladd@b^0,c
 17660   003CE8  0E00               	movlw	0
 17661   003CEA  6E10               	movwf	(___fladd@b+1)^0,c
 17662   003CEC  0E00               	movlw	0
 17663   003CEE  6E11               	movwf	(___fladd@b+2)^0,c
 17664   003CF0  0E00               	movlw	0
 17665   003CF2  6E12               	movwf	(___fladd@b+3)^0,c
 17666   003CF4  501D               	movf	___fladd@bexp^0,w,c
 17667   003CF6  A4D8               	btfss	status,2,c
 17668   003CF8  EF80  F01E         	goto	u7951
 17669   003CFC  EF82  F01E         	goto	u7950
 17670   003D00                     u7951:
 17671   003D00  EF83  F01E         	goto	l909
 17672   003D04                     u7950:
 17673   003D04  6A1B               	clrf	___fladd@signs^0,c
 17674   003D06                     l909:
 17675   003D06  A01D               	btfss	___fladd@bexp^0,0,c
 17676   003D08  EF88  F01E         	goto	u7961
 17677   003D0C  EF8A  F01E         	goto	u7960
 17678   003D10                     u7961:
 17679   003D10  EF8D  F01E         	goto	l6557
 17680   003D14                     u7960:
 17681   003D14  8E11               	bsf	(___fladd@b+2)^0,7,c
 17682   003D16  EF8E  F01E         	goto	l6559
 17683   003D1A                     l6557:
 17684   003D1A  9E11               	bcf	(___fladd@b+2)^0,7,c
 17685   003D1C                     l6559:
 17686   003D1C  90D8               	bcf	status,0,c
 17687   003D1E  301D               	rrcf	___fladd@bexp^0,w,c
 17688   003D20  6E12               	movwf	(___fladd@b+3)^0,c
 17689   003D22  AE1B               	btfss	___fladd@signs^0,7,c
 17690   003D24  EF96  F01E         	goto	u7971
 17691   003D28  EF98  F01E         	goto	u7970
 17692   003D2C                     u7971:
 17693   003D2C  EF99  F01E         	goto	l6565
 17694   003D30                     u7970:
 17695   003D30  8E12               	bsf	(___fladd@b+3)^0,7,c
 17696   003D32                     l6565:
 17697   003D32  C00F  F00F         	movff	___fladd@b,?___fladd
 17698   003D36  C010  F010         	movff	___fladd@b+1,?___fladd+1
 17699   003D3A  C011  F011         	movff	___fladd@b+2,?___fladd+2
 17700   003D3E  C012  F012         	movff	___fladd@b+3,?___fladd+3
 17701   003D42                     l885:
 17702   003D42  0012               	return		;funcret
 17703   003D44                     __end_of___fladd:
 17704                           	callstack 0
 17705                           
 17706 ;; *************** function _ADC_Init *****************
 17707 ;; Defined at:
 17708 ;;		line 363 in file "newmain.c"
 17709 ;; Parameters:    Size  Location     Type
 17710 ;;		None
 17711 ;; Auto vars:     Size  Location     Type
 17712 ;;		None
 17713 ;; Return value:  Size  Location     Type
 17714 ;;                  1    wreg      void 
 17715 ;; Registers used:
 17716 ;;		wreg, status,2
 17717 ;; Tracked objects:
 17718 ;;		On entry : 0/0
 17719 ;;		On exit  : 0/0
 17720 ;;		Unchanged: 0/0
 17721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17722 ;;      Params:         0       0       0       0       0       0       0       0       0
 17723 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17724 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17725 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17726 ;;Total ram usage:        0 bytes
 17727 ;; Hardware stack levels used: 1
 17728 ;; Hardware stack levels required when called: 1
 17729 ;; This function calls:
 17730 ;;		Nothing
 17731 ;; This function is called by:
 17732 ;;		_main
 17733 ;; This function uses a non-reentrant model
 17734 ;;
 17735                           
 17736                           	psect	text55
 17737   007210                     __ptext55:
 17738                           	callstack 0
 17739   007210                     _ADC_Init:
 17740                           	callstack 29
 17741   007210                     
 17742                           ;newmain.c: 364:     TRISA0 = TRISA1 = TRISA2 = 1;
 17743   007210  8492               	bsf	3986,2,c	;volatile
 17744   007212  8292               	bsf	3986,1,c	;volatile
 17745   007214  8092               	bsf	3986,0,c	;volatile
 17746                           
 17747                           ;newmain.c: 365:     ADCON0bits.ADON = 1;
 17748   007216  80C2               	bsf	194,0,c	;volatile
 17749   007218                     
 17750                           ;newmain.c: 366:     ADCON1 = 0x0C;
 17751   007218  0E0C               	movlw	12
 17752   00721A  6EC1               	movwf	193,c	;volatile
 17753                           
 17754                           ;newmain.c: 367:     ADCON2 = 0xBE;
 17755   00721C  0EBE               	movlw	190
 17756   00721E  6EC0               	movwf	192,c	;volatile
 17757   007220  0012               	return		;funcret
 17758   007222                     __end_of_ADC_Init:
 17759                           	callstack 0
 17760                           
 17761 ;; *************** function _HighISR *****************
 17762 ;; Defined at:
 17763 ;;		line 127 in file "newmain.c"
 17764 ;; Parameters:    Size  Location     Type
 17765 ;;		None
 17766 ;; Auto vars:     Size  Location     Type
 17767 ;;		None
 17768 ;; Return value:  Size  Location     Type
 17769 ;;                  1    wreg      void 
 17770 ;; Registers used:
 17771 ;;		status,2, status,0
 17772 ;; Tracked objects:
 17773 ;;		On entry : 0/0
 17774 ;;		On exit  : 0/0
 17775 ;;		Unchanged: 0/0
 17776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17777 ;;      Params:         0       0       0       0       0       0       0       0       0
 17778 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17779 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17780 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17781 ;;Total ram usage:        0 bytes
 17782 ;; Hardware stack levels used: 1
 17783 ;; This function calls:
 17784 ;;		Nothing
 17785 ;; This function is called by:
 17786 ;;		Interrupt level 2
 17787 ;; This function uses a non-reentrant model
 17788 ;;
 17789                           
 17790                           	psect	intcode
 17791   000008                     __pintcode:
 17792                           	callstack 0
 17793   000008                     _HighISR:
 17794                           	callstack 20
 17795                           
 17796                           ;incstack = 0
 17797   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17798   00000A  EDDA  F038         	call	int_func,f	;refresh shadow registers
 17799                           
 17800                           	psect	intcode_body
 17801   0071B4                     __pintcode_body:
 17802                           	callstack 20
 17803   0071B4                     int_func:
 17804                           	callstack 20
 17805   0071B4  0006               	pop		; remove dummy address from shadow register refresh
 17806   0071B6                     
 17807                           ;newmain.c: 128:     if (INTCON3bits.INT1IF) {
 17808   0071B6  A0F0               	btfss	240,0,c	;volatile
 17809   0071B8  EFE0  F038         	goto	i2u735_41
 17810   0071BC  EFE2  F038         	goto	i2u735_40
 17811   0071C0                     i2u735_41:
 17812   0071C0  EFE6  F038         	goto	i2l156
 17813   0071C4                     i2u735_40:
 17814   0071C4                     
 17815                           ;newmain.c: 129:         pulse_count++;
 17816   0071C4  0100               	movlb	0	; () banked
 17817   0071C6  4BF5               	infsnz	_pulse_count& (0+255),f,b	;volatile
 17818   0071C8  2BF6               	incf	(_pulse_count+1)& (0+255),f,b	;volatile
 17819   0071CA                     
 17820                           ; BSR set to: 0
 17821                           ;newmain.c: 130:         INTCON3bits.INT1IF = 0;
 17822   0071CA  90F0               	bcf	240,0,c	;volatile
 17823   0071CC                     i2l156:
 17824   0071CC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17825   0071CE  0011               	retfie		f
 17826   0071D0                     __end_of_HighISR:
 17827                           	callstack 0
 17828                           
 17829                           	psect	rparam
 17830   000001                     ___rparam_used  equ	1
 17831   000000                     ___param_bank   equ	0
 17832   000000                     __Lparam        equ	__Lrparam
 17833   000000                     __Hparam        equ	__Hrparam
 17834                           
 17835                           	psect	temp
 17836   00005F                     btemp:
 17837                           	callstack 0
 17838   00005F                     	ds	1
 17839   00005F                     int$flags       set	btemp
 17840   000060                     wtemp8          set	btemp+1
 17841   000060                     ttemp5          set	btemp+1
 17842   000063                     ttemp6          set	btemp+4
 17843   000067                     ttemp7          set	btemp+8
 17844                           
 17845                           	psect	idloc
 17846                           
 17847                           ;Config register IDLOC0 @ 0x200000
 17848                           ;	unspecified, using default values
 17849   200000                     	org	2097152
 17850   200000  FF                 	db	255
 17851                           
 17852                           ;Config register IDLOC1 @ 0x200001
 17853                           ;	unspecified, using default values
 17854   200001                     	org	2097153
 17855   200001  FF                 	db	255
 17856                           
 17857                           ;Config register IDLOC2 @ 0x200002
 17858                           ;	unspecified, using default values
 17859   200002                     	org	2097154
 17860   200002  FF                 	db	255
 17861                           
 17862                           ;Config register IDLOC3 @ 0x200003
 17863                           ;	unspecified, using default values
 17864   200003                     	org	2097155
 17865   200003  FF                 	db	255
 17866                           
 17867                           ;Config register IDLOC4 @ 0x200004
 17868                           ;	unspecified, using default values
 17869   200004                     	org	2097156
 17870   200004  FF                 	db	255
 17871                           
 17872                           ;Config register IDLOC5 @ 0x200005
 17873                           ;	unspecified, using default values
 17874   200005                     	org	2097157
 17875   200005  FF                 	db	255
 17876                           
 17877                           ;Config register IDLOC6 @ 0x200006
 17878                           ;	unspecified, using default values
 17879   200006                     	org	2097158
 17880   200006  FF                 	db	255
 17881                           
 17882                           ;Config register IDLOC7 @ 0x200007
 17883                           ;	unspecified, using default values
 17884   200007                     	org	2097159
 17885   200007  FF                 	db	255
 17886                           
 17887                           	psect	config
 17888                           
 17889                           ;Config register CONFIG1L @ 0x300000
 17890                           ;	unspecified, using default values
 17891                           ;	PLL Prescaler Selection bits
 17892                           ;	PLLDIV = 0x0, unprogrammed default
 17893                           ;	System Clock Postscaler Selection bits
 17894                           ;	CPUDIV = 0x0, unprogrammed default
 17895                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 17896                           ;	USBDIV = 0x0, unprogrammed default
 17897   300000                     	org	3145728
 17898   300000  00                 	db	0
 17899                           
 17900                           ;Config register CONFIG1H @ 0x300001
 17901                           ;	Oscillator Selection bits
 17902                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
 17903                           ;	Fail-Safe Clock Monitor Enable bit
 17904                           ;	FCMEN = 0x0, unprogrammed default
 17905                           ;	Internal/External Oscillator Switchover bit
 17906                           ;	IESO = 0x0, unprogrammed default
 17907   300001                     	org	3145729
 17908   300001  08                 	db	8
 17909                           
 17910                           ;Config register CONFIG2L @ 0x300002
 17911                           ;	Power-up Timer Enable bit
 17912                           ;	PWRT = ON, PWRT enabled
 17913                           ;	Brown-out Reset Enable bits
 17914                           ;	BOR = 0x3, unprogrammed default
 17915                           ;	Brown-out Reset Voltage bits
 17916                           ;	BORV = 0x3, unprogrammed default
 17917                           ;	USB Voltage Regulator Enable bit
 17918                           ;	VREGEN = 0x0, unprogrammed default
 17919   300002                     	org	3145730
 17920   300002  1E                 	db	30
 17921                           
 17922                           ;Config register CONFIG2H @ 0x300003
 17923                           ;	Watchdog Timer Enable bit
 17924                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 17925                           ;	Watchdog Timer Postscale Select bits
 17926                           ;	WDTPS = 0xF, unprogrammed default
 17927   300003                     	org	3145731
 17928   300003  1E                 	db	30
 17929                           
 17930                           ; Padding undefined space
 17931   300004                     	org	3145732
 17932   300004  FF                 	db	255
 17933                           
 17934                           ;Config register CONFIG3H @ 0x300005
 17935                           ;	CCP2 MUX bit
 17936                           ;	CCP2MX = 0x1, unprogrammed default
 17937                           ;	PORTB A/D Enable bit
 17938                           ;	PBADEN = 0x1, unprogrammed default
 17939                           ;	Low-Power Timer 1 Oscillator Enable bit
 17940                           ;	LPT1OSC = 0x0, unprogrammed default
 17941                           ;	MCLR Pin Enable bit
 17942                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 17943   300005                     	org	3145733
 17944   300005  83                 	db	131
 17945                           
 17946                           ;Config register CONFIG4L @ 0x300006
 17947                           ;	Stack Full/Underflow Reset Enable bit
 17948                           ;	STVREN = 0x1, unprogrammed default
 17949                           ;	Single-Supply ICSP Enable bit
 17950                           ;	LVP = OFF, Single-Supply ICSP disabled
 17951                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 17952                           ;	ICPRT = 0x0, unprogrammed default
 17953                           ;	Extended Instruction Set Enable bit
 17954                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17955                           ;	Background Debugger Enable bit
 17956                           ;	DEBUG = 0x1, unprogrammed default
 17957   300006                     	org	3145734
 17958   300006  81                 	db	129
 17959                           
 17960                           ; Padding undefined space
 17961   300007                     	org	3145735
 17962   300007  FF                 	db	255
 17963                           
 17964                           ;Config register CONFIG5L @ 0x300008
 17965                           ;	unspecified, using default values
 17966                           ;	Code Protection bit
 17967                           ;	CP0 = 0x1, unprogrammed default
 17968                           ;	Code Protection bit
 17969                           ;	CP1 = 0x1, unprogrammed default
 17970                           ;	Code Protection bit
 17971                           ;	CP2 = 0x1, unprogrammed default
 17972                           ;	Code Protection bit
 17973                           ;	CP3 = 0x1, unprogrammed default
 17974   300008                     	org	3145736
 17975   300008  0F                 	db	15
 17976                           
 17977                           ;Config register CONFIG5H @ 0x300009
 17978                           ;	unspecified, using default values
 17979                           ;	Boot Block Code Protection bit
 17980                           ;	CPB = 0x1, unprogrammed default
 17981                           ;	Data EEPROM Code Protection bit
 17982                           ;	CPD = 0x1, unprogrammed default
 17983   300009                     	org	3145737
 17984   300009  C0                 	db	192
 17985                           
 17986                           ;Config register CONFIG6L @ 0x30000A
 17987                           ;	unspecified, using default values
 17988                           ;	Write Protection bit
 17989                           ;	WRT0 = 0x1, unprogrammed default
 17990                           ;	Write Protection bit
 17991                           ;	WRT1 = 0x1, unprogrammed default
 17992                           ;	Write Protection bit
 17993                           ;	WRT2 = 0x1, unprogrammed default
 17994                           ;	Write Protection bit
 17995                           ;	WRT3 = 0x1, unprogrammed default
 17996   30000A                     	org	3145738
 17997   30000A  0F                 	db	15
 17998                           
 17999                           ;Config register CONFIG6H @ 0x30000B
 18000                           ;	unspecified, using default values
 18001                           ;	Configuration Register Write Protection bit
 18002                           ;	WRTC = 0x1, unprogrammed default
 18003                           ;	Boot Block Write Protection bit
 18004                           ;	WRTB = 0x1, unprogrammed default
 18005                           ;	Data EEPROM Write Protection bit
 18006                           ;	WRTD = 0x1, unprogrammed default
 18007   30000B                     	org	3145739
 18008   30000B  E0                 	db	224
 18009                           
 18010                           ;Config register CONFIG7L @ 0x30000C
 18011                           ;	unspecified, using default values
 18012                           ;	Table Read Protection bit
 18013                           ;	EBTR0 = 0x1, unprogrammed default
 18014                           ;	Table Read Protection bit
 18015                           ;	EBTR1 = 0x1, unprogrammed default
 18016                           ;	Table Read Protection bit
 18017                           ;	EBTR2 = 0x1, unprogrammed default
 18018                           ;	Table Read Protection bit
 18019                           ;	EBTR3 = 0x1, unprogrammed default
 18020   30000C                     	org	3145740
 18021   30000C  0F                 	db	15
 18022                           
 18023                           ;Config register CONFIG7H @ 0x30000D
 18024                           ;	unspecified, using default values
 18025                           ;	Boot Block Table Read Protection bit
 18026                           ;	EBTRB = 0x1, unprogrammed default
 18027   30000D                     	org	3145741
 18028   30000D  40                 	db	64
 18029                           tosu	equ	0xFFF
 18030                           tosh	equ	0xFFE
 18031                           tosl	equ	0xFFD
 18032                           stkptr	equ	0xFFC
 18033                           pclatu	equ	0xFFB
 18034                           pclath	equ	0xFFA
 18035                           pcl	equ	0xFF9
 18036                           tblptru	equ	0xFF8
 18037                           tblptrh	equ	0xFF7
 18038                           tblptrl	equ	0xFF6
 18039                           tablat	equ	0xFF5
 18040                           prodh	equ	0xFF4
 18041                           prodl	equ	0xFF3
 18042                           indf0	equ	0xFEF
 18043                           postinc0	equ	0xFEE
 18044                           postdec0	equ	0xFED
 18045                           preinc0	equ	0xFEC
 18046                           plusw0	equ	0xFEB
 18047                           fsr0h	equ	0xFEA
 18048                           fsr0l	equ	0xFE9
 18049                           wreg	equ	0xFE8
 18050                           indf1	equ	0xFE7
 18051                           postinc1	equ	0xFE6
 18052                           postdec1	equ	0xFE5
 18053                           preinc1	equ	0xFE4
 18054                           plusw1	equ	0xFE3
 18055                           fsr1h	equ	0xFE2
 18056                           fsr1l	equ	0xFE1
 18057                           bsr	equ	0xFE0
 18058                           indf2	equ	0xFDF
 18059                           postinc2	equ	0xFDE
 18060                           postdec2	equ	0xFDD
 18061                           preinc2	equ	0xFDC
 18062                           plusw2	equ	0xFDB
 18063                           fsr2h	equ	0xFDA
 18064                           fsr2l	equ	0xFD9
 18065                           status	equ	0xFD8

Data Sizes:
    Strings     300
    Constant    120
    Data        4
    BSS         245
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    139     158
    BANK1           256    204     253
    BANK2           256      5     186
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    End_Event@event_type_str	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_10(CODE[9]), STR_11(CODE[13]), STR_12(CODE[8]), STR_8(CODE[1]), 
		 -> STR_9(CODE[9]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> End_Event@event_buffer(BANK1[200]), Send_Event_Data@event_buffer(BANK1[100]), Send_Sensor_Data@buffer(BANK1[200]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> End_Event@event_buffer(BANK1[200]), Send_Event_Data@event_buffer(BANK1[100]), Send_Sensor_Data@buffer(BANK1[200]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1286$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> End_Event@event_buffer(BANK1[200]), Send_Event_Data@event_buffer(BANK1[100]), Send_Sensor_Data@buffer(BANK1[200]), 

    S1286$source	PTR const unsigned char  size(2) Largest target is 0

    Send_Event_Data@event_type_str	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[1]), STR_2(CODE[5]), STR_3(CODE[5]), STR_4(CODE[9]), 
		 -> STR_5(CODE[13]), STR_6(CODE[8]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 107
		 -> STR_13(CODE[79]), STR_14(CODE[107]), STR_7(CODE[28]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> End_Event@event_buffer(BANK1[200]), Send_Event_Data@event_buffer(BANK1[100]), Send_Sensor_Data@buffer(BANK1[200]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 13
		 -> ?_sprintf(BANK0[2]), STR_1(CODE[1]), STR_10(CODE[9]), STR_11(CODE[13]), 
		 -> STR_12(CODE[8]), STR_2(CODE[5]), STR_21(CODE[7]), STR_3(CODE[5]), 
		 -> STR_4(CODE[9]), STR_5(CODE[13]), STR_6(CODE[8]), STR_8(CODE[1]), 
		 -> STR_9(CODE[9]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 13
		 -> ?_sprintf(BANK0[2]), STR_1(CODE[1]), STR_10(CODE[9]), STR_11(CODE[13]), 
		 -> STR_12(CODE[8]), STR_2(CODE[5]), STR_3(CODE[5]), STR_4(CODE[9]), 
		 -> STR_5(CODE[13]), STR_6(CODE[8]), STR_8(CODE[1]), STR_9(CODE[9]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_15(CODE[4]), STR_18(CODE[4]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 107
		 -> STR_13(CODE[79]), STR_14(CODE[107]), STR_7(CODE[28]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 107
		 -> STR_13(CODE[79]), STR_14(CODE[107]), STR_7(CODE[28]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 107
		 -> STR_13(CODE[79]), STR_14(CODE[107]), STR_7(CODE[28]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _main->_Calculate_Flow
    _Update_Actuators->___flge
    _Read_MQ2_Sensor->_Calibrate_MQ2
    _powf->___fldiv
    _scalbnf->___flmul
    _Calibrate_MQ2->___fldiv
    _Read_LM35->___fldiv
    _Read_Flame_Sensor->_Calibrate_Flame_Sensor
    _Calibrate_Flame_Sensor->___fldiv
    _ADC_Read_Average->___lldiv
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flsub
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod
    _Calculate_Flow->___fldiv
    ___flmul->___fladd
    ___fldiv->___flsub
    ___fladd->___xxtofl

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Start_Event
    _Start_Event->_Send_Event_Data
    _Send_Event_Data->_sprintf
    _Send_Sensor_Data->_sprintf
    _Read_MQ2_Sensor->_powf
    _Read_Flame_Sensor->_Calibrate_Flame_Sensor
    _End_Event->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_End_Event
    _Start_Event->_Send_Event_Data
    _Read_MQ2_Sensor->_powf

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  213473
                                            135 BANK0      4     4      0
                                              0 BANK2      5     5      0
                           _ADC_Init
                     _Calculate_Flow
             _Calibrate_Flame_Sensor
                      _Calibrate_MQ2
                   _Check_Flow_Reset
                          _End_Event
                _Handle_Test_Command
                     _Interrupt_Init
                  _Read_Flame_Sensor
                          _Read_LM35
                    _Read_MQ2_Sensor
                    _Send_Event_Data
                   _Send_Sensor_Data
                        _Start_Event
                    _UART_Data_Ready
                          _UART_Init
                          _UART_Read
                   _Update_Actuators
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     439
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Update_Actuators                                     7     7      0     473
                                             75 COMRAM     7     7      0
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Start_Event                                          1     1      0   25968
                                            134 BANK0      1     1      0
                    _Send_Event_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Event_Data                                    107   107      0   25874
                                            132 BANK0      2     2      0
                                              0 BANK1    105   105      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Send_Sensor_Data                                   202   202      0   25778
                                              0 BANK1    202   202      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Read_MQ2_Sensor                                     38    38      0   50242
                                             90 COMRAM     2     2      0
                                             17 BANK0     36    36      0
                   _ADC_Read_Average
                      _Calibrate_MQ2
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   25102
                                              0 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               41    37      4    1070
                                              0 COMRAM    37    33      4
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    3087
                                             55 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _Calibrate_MQ2                                       17    17      0   11930
                                             88 COMRAM     2     2      0
                                              0 BANK0     15    15      0
                           _ADC_Read
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Read_LM35                                           14    14      0    8832
                                             88 COMRAM     2     2      0
                                              0 BANK0     12    12      0
                   _ADC_Read_Average
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Read_Flame_Sensor                                   14    14      0   17905
                                              7 BANK0     14    14      0
                   _ADC_Read_Average
             _Calibrate_Flame_Sensor
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _Calibrate_Flame_Sensor                               9     9      0    8356
                                             88 COMRAM     2     2      0
                                              0 BANK0      7     7      0
                           _ADC_Read
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _ADC_Read_Average                                     8     6      2     492
                                             13 COMRAM     8     6      2
                           _ADC_Read
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Test_Command                                  4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _End_Event                                          206   206      0   29299
                                            132 BANK0      2     2      0
                                              0 BANK1    204   204      0
                            ___flsub
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             48    14     34   25599
                                             86 BANK0     46    12     34
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             6     2      4   25233
                                             80 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           14    10      4   24967
                                             66 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                11     6      5    1899
                                             22 COMRAM    11     6      5
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     238
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8     253
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (6) _stoa                                                11     8      3     647
                                              8 COMRAM    11     8      3
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   7     5      2     266
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              53    47      6   17476
                                             92 COMRAM     2     2      0
                                             16 BANK0     50    44      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               6     2      4     115
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6     217
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _labs                                                 8     4      4     102
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     495
                                             88 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     201
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     346
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3475
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4      74
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     368
                                             63 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     142
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                14     9      5    2629
                                             22 COMRAM    14     9      5
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    1068
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                6     3      3     487
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                8     5      3     341
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      96
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___almod                                             10     2      8     439
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (7) ___aldiv                                             14     6      8     451
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Check_Flow_Reset                                     4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Calculate_Flow                                       6     6      0    8173
                                             88 COMRAM     6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     529
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    2577
                                             30 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    1839
                                             63 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3194
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Calculate_Flow
     ___fladd
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _Calibrate_Flame_Sensor
     _ADC_Read
     ___fladd
     ___fldiv
     ___flmul
     ___xxtofl
   _Calibrate_MQ2
     _ADC_Read
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
     ___xxtofl
   _Check_Flow_Reset
   _End_Event
     ___flsub
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aldiv
             ___almod
             _abs
               ___almod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
               ___flsub (ARG)
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
           _stoa
             _fputc
           _utoa
             ___lldiv
             ___llmod
             _pad
   _Handle_Test_Command
   _Interrupt_Init
   _Read_Flame_Sensor
     _ADC_Read_Average
       _ADC_Read
       ___lldiv
     _Calibrate_Flame_Sensor
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___xxtofl
   _Read_LM35
     _ADC_Read_Average
     ___fladd
     ___fldiv
     ___flmul
     ___xxtofl
   _Read_MQ2_Sensor
     _ADC_Read_Average
     _Calibrate_MQ2
     ___fladd
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___xxtofl
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
   _Send_Event_Data
     _sprintf
   _Send_Sensor_Data
     _sprintf
   _Start_Event
     _Send_Event_Data
   _UART_Data_Ready
   _UART_Init
   _UART_Read
   _Update_Actuators
     ___flge
   ___awmod

 _HighISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      5     186     72.7%
BITBANK1           256      0       0      0.0%
BANK1              256    204     253     98.8%
BITBANK0           160      0       0      0.0%
BANK0              160    139     158     98.8%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     94      94    100.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     688      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Jun 29 14:02:37 2025

               ??_Interrupt_Init 0001                ?_Check_Flow_Reset 0001                     ___fldiv@aexp 0058  
                   ___fldiv@bexp 0057                      _pump_active 01F7                     ___fldiv@sign 0050  
                             _L1 7EB7                               _L2 7EB3                               _L3 7EAF  
                             _L4 7EAB                               _L5 7EA7                               _L6 7EA3  
                             _P1 7E9F                               _P2 7E9B                               _P3 7E97  
                             _P4 7E93                               _P5 7E8F                               _bp 7E6B  
                             _cp 7E7B               ??_Check_Flow_Reset 0001                      _pulse_count 00F5  
        End_Event@event_type_str 01C8       Update_Actuators@temp_alarm 0050                              l201 601A  
                            l212 59C2                              l205 604A                              l310 5E04  
                            l302 388C                              l231 6D72                              l224 597A  
                            l208 6DEA                              l242 7220                              l314 53A8  
                            l170 4A40                              l227 59AA                              l219 594E  
                            l331 6810                              l323 54CA                              l315 5426  
                            l236 690E                              l245 70AA                              l254 6E5C  
                            l326 67E4                              l342 71E6                              l318 54C0  
                            l239 7230                              l335 6840                              l440 675E  
                            l248 70CE                              l264 5CD2                              l273 4EB0  
                            l345 720E                              l177 4B7C                              l282 4E90  
                            l338 71FA                              l427 626C                              l259 5F32  
                            l275 4DCE                              l284 4EA0                              l196 5FEE  
                            l613 6430                              l269 5B58                              l622 717E  
                            l382 6C70                              l607 6BCC                              l375 6C60  
                            l618 6476                              l645 6372                              l902 3C5E  
                            l903 3C4C                              l592 6A76                              l930 48D6  
                            l932 473A                              l909 3D06                              l941 4780  
                            l942 479E                              l918 7048                              l943 47F6  
                            l935 46FE                              l775 6CF8                              l944 47E4  
                            l768 6CE8                              l890 3C1E                              l970 401C  
                            l962 3E08                              l971 4074                              l876 3A76  
                            l972 4062                              l893 3B90                              l885 3D42  
                            l877 3A64                              l878 3A2A                              l966 4168  
                            l969 3FFE                              l979 412A                              _lg2 7E8B  
                            _abs 7180                              _pad 6E5E                              _ovt 7E7F  
                   ___awmod@sign 0006                              prod 0FF3                              wreg 0FE8  
                   ___flmul@aexp 002C                     ___flmul@bexp 0031                     ___flmul@sign 002B  
                   ___flmul@temp 0036                     ___flmul@prod 0032                     ___fltol@exp1 000A  
                     Read_LM35@i 006A                             l1010 55BA                             l1003 5522  
                           l1006 567E                             l1200 3278                             l1017 5616  
                           l1121 2C96                             l1026 708C                             ?_abs 000B  
                           l1141 6576                             l1231 719A                             l1055 6E74  
                           l1063 56B0                             l1240 52FA                             l1216 7002  
                           l1065 56B8                             l1161 6B22                             l1137 651C  
                           l1153 6162                             l1145 6068                             l1234 71B2  
                           l1066 56FE                             l1226 6674                             l1059 6EC2  
                           l1243 523E                             l1091 2850                             l1147 6070  
                           l1260 6FBA                             l1180 33BA                             l1172 2F68  
                           l1340 24C2                             l1413 7236                             l1077 5822  
                           l1093 2696                             l1157 6B1A                             l1181 3142  
                           l1254 6F18                             l1406 2486                             l1423 50E4  
                           l1272 69C8                             l1280 710E                             l1088 2EAE  
                           l1440 43AC                             l1432 4546                             l1345 02F4  
                           l1451 7146                             l1443 4470                             l1355 038A  
                           l1436 434E                             l1445 44DE                             l1373 055C  
                           l1365 044C                             l1369 04FE                             l7001 6298  
                           l7011 62E6                             l7003 62C2                             l7021 6312  
                           l7005 62C4                             l7101 6EE6                             ?_pad 000F  
                           l7031 6342                             l7007 62D4                             l7111 5172  
                           l6401 3912                             l7033 6352                             l7017 62FE  
                           l7009 62D8                             l7113 5180                             l7121 5262  
                           l7105 50E6                             l7201 2520                             l7041 6C88  
                           l8001 06DE                             l6411 3952                             l6403 3920  
                           l7035 6362                             l7027 6326                             l7019 6308  
                           l7123 529E                             l7107 5106                             l7203 2530  
                           l7211 2558                             l7051 6CD8                             l7043 6C90  
                           l8003 06EE                             l6501 3B5E                             l6421 398A  
                           l6413 3954                             l6405 3922                             l7061 6E90  
                           l7029 6332                             l7125 52B2                             l7117 51F2  
                           l7109 515E                             l7141 6F9C                             l7133 6F6C  
                           l7301 2906                             l7221 25A2                             l7213 257E  
                           l7205 2540                             l7053 6CE2                             l7045 6C9C  
                           l8101 0D9C                             l8021 0776                             l8005 0710  
                           l6511 3BB6                             l6503 3B60                             l6431 399E  
                           l6423 398E                             l6407 3932                             l6415 395A  
                           l7063 6E94                             l7055 6E5E                             l7151 56D0  
                           l7071 6578                             l7127 52DA                             l7119 522E  
                           l7135 6F80                             l7143 6FA0                             l7311 2A1A  
                           l7303 296A                             l7231 2606                             l7223 25BA  
                           l7215 2590                             l7207 254C                             l7047 6CAA  
                           l7039 6C72                             l8111 0F52                             l8103 0DF6  
                           l8023 079A                             l8007 0734                             l6521 3BE4  
                           l6505 3B70                             l6441 39B2                             l6433 39A2  
                           l6425 3992                             l6417 396A                             l6409 3942  
                           l6601 6166                             l6361 6910                             l7065 6EB2  
                           l7057 6E6C                             l7161 5706                             l7153 56D6  
                           l7145 5680                             l7073 6598                             l7129 52EA  
                           l7137 6F8C                             l7401 2E74                             l7321 2AD8  
                           l7313 2A4E                             l7305 29C2                             l7233 2618  
                           l7225 25C4                             l7217 2594                             l7209 2554  
                           l7049 6CC8                             l8121 10C2                             l8113 0FAA  
                           l8105 0E68                             l8041 085E                             l8033 07BC  
                           l8009 0742                             l8017 0760                             l6523 3BF2  
                           l6515 3BCA                             l6531 3C10                             l6507 3B80  
                           l6451 39C6                             l6443 39B6                             l6435 39A6  
                           l6427 3996                             l6419 397C                             l6611 61A6  
                           l6603 6174                             l7067 7180                             l6371 6988  
                           l6363 6920                             l7059 6E80                             l7171 5762  
                           l7163 570E                             l7155 56E6                             l7147 56A4  
                           l7075 65D6                             l7083 6616                             l7139 6F90  
                           l7403 2E8A                             l7331 2BAC                             l7323 2AE8  
                           l7315 2A80                             l7307 29F6                             l7235 261C  
                           l7219 259A                             l7411 6492                             l8211 1A46  
                           l8131 1232                             l8123 111A                             l8115 0FDE  
                           l8107 0EC6                             l8051 0A02                             l8043 0892  
                           l6541 3C7A                             l6533 3C2E                             l6525 3BFA  
                           l6517 3BD4                             l6509 3BA6                             l6461 3A38  
                           l6445 39BA                             l6437 39AA                             l6429 399A  
                           l6453 39CA                             l6381 38AA                             l6701 45B8  
                           l6621 61E4                             l6613 61AA                             l6605 6184  
                           l7069 718E                             l6365 6930                             l7181 57F0  
                           l7165 5714                             l7173 5796                             l7157 56F2  
                           l7149 56C0                             l7085 6628                             l7077 65FE  
                           l7093 7110                             l7405 2E92                             l7341 2BE0  
                           l7333 2BC0                             l7325 2B1C                             l7317 2A96  
                           l7309 29FC                             l7261 2750                             l7253 26A6  
                           l7237 2622                             l7229 25E0                             l7421 64F6  
                           l7413 649A                             l7501 2FB0                             l8221 1B0C  
                           l8141 135A                             l8133 128A                             l8125 1172  
                           l8117 1012                             l8109 0EFA                             l8061 0AA8  
                           l8053 0A12                             l8045 08EA                             l8037 07D2  
                           l6551 3CE4                             l6543 3C88                             l6535 3C44  
                           l6527 3BFE                             l6519 3BE2                             l6471 3A62  
                           l6463 3A44                             l6455 39F6                             l6447 39BE  
                           l6439 39AE                             l6383 38BA                             l6391 38E2  
                           l6375 388E                             l6711 45F8                             l6703 45C6  
                           l6631 622C                             l6623 61F2                             l6615 61BA  
                           l6607 6188                             l6367 693A                             l7183 57F6  
                           l7175 57B0                             l7167 5756                             l7159 56FA  
                           l7079 660A                             l7095 7118                             l7351 2CA8  
                           l7343 2BE8                             l7327 2B72                             l7335 2BC4  
                           l7319 2AC8                             l7263 278E                             l7255 26AC  
                           l7239 262A                             l7247 2646                             l7191 24D8  
                           l7423 6514                             l7415 64A6                             l7431 604C  
                           l7511 3034                             l7503 2FD0                             l8231 1B94  
                           l8151 1420                             l8143 136A                             l8135 12BE  
                           l8127 11CA                             l8119 106A                             l8071 0B82  
                           l8063 0AC4                             l8055 0A2C                             l8047 091E  
                           l8039 0806                             l8311 71F2                             l8321 7218  
                           l6561 3D22                             l6553 3D04                             l6545 3CC2  
                           l6529 3C0E                             l6481 3AB8                             l6473 3A84  
                           l6465 3A48                             l6457 3A12                             l6449 39C2  
                           l6393 38F2                             l6385 38CA                             l6377 389A  
                           l6801 48B6                             l6721 4636                             l6713 45FA  
                           l6705 45C8                             l6633 6236                             l6625 61FC  
                           l6617 61D0                             l6609 6196                             l6369 6956  
                           l7185 5806                             l7177 57C6                             l7169 575C  
                           l7089 666C                             l7097 6EC4                             l7361 2CD8  
                           l7353 2CB6                             l7345 2BF4                             l7337 2BD4  
                           l7329 2B78                             l7281 287C                             l7265 27A2  
                           l7273 281E                             l7257 26E0                             l7249 2660  
                           l7193 24E6                             l7425 6528                             l7417 64AA  
                           l7409 6478                             l7441 608E                             l7433 605C  
                           l7521 30B4                             l7513 304E                             l7505 2FF8  
                           l7601 6FBC                             l8401 4E12                             l8241 1C4E  
                           l8209 1A2E                             l8161 152E                             l8153 1454  
                           l8145 1384                             l8137 12F2                             l8129 11FE  
                           l8081 0BEA                             l8073 0B9A                             l8065 0AF8  
                           l8057 0A60                             l8049 0952                             l8313 71F4  
                           l8305 71E8                             l6563 3D30                             l6555 3D14  
                           l6539 3C6E                             l6547 3CC4                             l6491 3AF2  
                           l6483 3AC6                             l6475 3A94                             l6467 3A56  
                           l6459 3A22                             l6395 38F8                             l6387 38DA  
                           l6379 38A8                             l6803 48C4                             l6731 4666  
                           l6723 463E                             l6707 45D8                             l6715 4600  
                           l6627 621A                             l6619 61D8                             l6635 623C  
                           l6651 669A                             l6643 6676                             l6571 70DC  
                           l7179 57E0                             l7099 6ED2                             l7371 2D0A  
                           l7363 2CE8                             l7355 2CC6                             l7347 2C6C  
                           l7339 2BDC                             l7291 28C0                             l7283 2884  
                           l7275 2858                             l7267 27D6                             l7259 271E  
                           l7195 24EA                             l7427 6558                             l7419 64E6  
                           l7451 6116                             l7443 60C4                             l7435 6078  
                           l7603 6FC8                             l7611 704A                             l8323 7222  
                           l8411 4E7C                             l8403 4E20                             l8251 1E8A  
                           l8243 1E02                             l8227 1B20                             l8235 1BAA  
                           l8219 1AC4                             l8171 16CA                             l8163 1562  
                           l8155 14D0                             l8147 13B8                             l8139 1326  
                           l8091 0CAC                             l8083 0C0E                             l8075 0BAA  
                           l8067 0B0A                             l8059 0A98                             l8315 71F6  
                           l8307 71EC                             l8331 71DE                             l6565 3D32  
                           l6557 3D1A                             l6549 3CD4                             l6493 3AF4  
                           l6485 3AD4                             l6469 3A58                             l6397 390A  
                           l6389 38DC                             l6805 48CA                             l6741 46A4  
                           l6733 4666                             l6725 4642                             l6717 4610  
                           l6709 45E8                             l6901 3FFC                             l6821 3D60  
                           l6637 624C                             l6629 622A                             l6661 66E2  
                           l6653 66A8                             l6645 6678                             l6573 70EA  
                           l7381 2DB2                             l7373 2D1C                             l7365 2CEC  
                           l7357 2CCA                             l7349 2C8C                             l7293 28D2  
                           l7285 2888                             l7277 2868                             l7269 27DE  
                           l7197 250E                             l7189 24C4                             l7461 6A80  
                           l7429 655C                             l6581 6BF4                             l7453 612C  
                           l7445 60CA                             l7437 6080                             l7541 3172  
                           l7525 30DA                             l7517 306A                             l7509 301E  
                           l7605 6FDC                             l7613 7058                             l8341 6848  
                           l8405 4E32                             l7701 426E                             l8261 1FBC  
                           l8253 1EA4                             l8245 1E12                             l8237 1C1C  
                           l8229 1B3E                             l8181 17EE                             l8173 175C  
                           l8165 1596                             l8157 1504                             l8149 13EC  
                           l8093 0D2E                             l8085 0C22                             l8077 0BC2  
                           l8069 0B1A                             l8421 33EA                             l8413 33BC  
                           l8325 71FC                             l8317 71F8                             l8309 71F0  
                           l8501 5396                             l8319 7210                             l6559 3D1C  
                           l6495 3AFE                             l6487 3AE0                             l6479 3AA8  
                           l6399 390C                             l6807 48CC                             l6751 46EE  
                           l6743 46B4                             l6719 4626                             l6911 4084  
                           l6903 400E                             l6831 3DA6                             l6823 3D70  
                           l6815 3D44                             l6639 625C                             l6663 66F0  
                           l6671 672E                             l6655 66B8                             l6647 6686  
                           l6575 70EE                             l7391 2E00                             l7383 2DBA  
                           l7375 2D20                             l7367 2CF2                             l7359 2CD0  
                           l7287 289A                             l7295 28DA                             l7279 2874  
                           l7199 2518                             l7463 6AA2                             l7471 6AF4  
                           l6591 6C3E                             l6583 6BFC                             l7455 6146  
                           l7447 60D0                             l7439 6088                             l7543 317A  
                           l7535 312A                             l7527 30F0                             l7519 308A  
                           l7607 6FF8                             l7615 7060                             l8351 68CC  
                           l8343 6850                             l7623 7090                             l8407 4E64  
                           l7711 42EE                             l7703 427C                             l8271 20E4  
                           l8263 1FF0                             l8255 1ED8                             l8247 1E46  
                           l8239 1C2C                             l8191 1936                             l8183 184C  
                           l8175 1790                             l8167 15CA                             l8159 1514  
                           l8095 0D62                             l8087 0C3E                             l8431 356C  
                           l8423 3454                             l8415 33CE                             l8335 71E4  
                           l8511 5420                             l8503 53A6                             l6489 3AE4  
                           l6497 3B04                             l6761 4738                             l6753 46FC  
                           l6745 46C4                             l6737 467A                             l6729 4656  
                           l6681 4554                             l6921 40E6                             l6913 4090  
                           l6905 402C                             l6841 3DD2                             l6833 3DAC  
                           l6825 3D80                             l6817 3D50                             l7641 5548  
                           l7633 54CE                             l6673 673E                             l6665 670E  
                           l6657 66CE                             l6649 6696                             l6569 70D0  
                           l7393 2E0E                             l7377 2D26                             l7369 2CF8  
                           l7385 2DBE                             l7297 28E2                             l7289 28A8  
                           l7465 6AAE                             l6593 6C4E                             l6585 6C08  
                           l6577 6BCE                             l7449 6104                             l7561 3256  
                           l7545 319C                             l7553 3212                             l7537 3144  
                           l7529 310E                             l7481 2EF4                             l7473 2EB0  
                           l7617 7068                             l8353 6900                             l8345 6894  
                           l7625 70A2                             l8409 4E6A                             l8361 5A74  
                           l7721 438E                             l7713 4302                             l8281 22C0  
                           l8273 213C                             l8265 2024                             l8257 1F0C  
                           l8249 1E7A                             l8193 198E                             l8185 1880  
                           l8177 17A0                             l8169 16A4                             l8097 0D72  
                           l8089 0C4E                             l8441 364E                             l8433 35A0  
                           l8425 34AC                             l8417 33D2                             l7801 5FC0  
                           l8329 71D0                             l8521 54A6                             l8513 5438  
                           l8505 53AC                             l8601 69F4                             l6499 3B2A  
                           l6771 477E                             l6763 474A                             l6755 4708  
                           l6747 46CA                             l6739 4694                             l6691 4594  
                           l6683 4562                             l6931 413E                             l6923 40FA  
                           l6915 409E                             l6907 405A                             l6851 3E28  
                           l6843 3DE2                             l6835 3DB2                             l6827 3D90  
                           l6819 3D5E                             l7651 55A2                             l7635 54DE  
                           l6675 674E                             l6667 671E                             l6659 66D6  
                           l7395 2E3E                             l7387 2DDC                             l7379 2D7E  
                           l7299 28F2                             l7467 6ACA                             l7459 6A78  
                           l6595 6C50                             l6587 6C16                             l6579 6BDE  
                           l7571 329C                             l7563 3268                             l7555 3222  
                           l7547 31CE                             l7539 3166                             l7491 2F58  
                           l7483 2F16                             l7475 2ED4                             l7619 707C  
                           l8347 68B6                             l8339 6842                             l7627 70A8  
                           l8371 5AAE                             l8363 5A96                             l8355 59C4  
                           l7731 4438                             l7723 439C                             l7715 430C  
                           l8291 23C4                             l8283 2318                             l8275 2194  
                           l8267 2058                             l8259 1F64                             l8195 19C2  
                           l8179 17BA                             l8099 0D82                             l8187 18B4  
                           l8451 372C                             l8443 3680                             l8435 35B2  
                           l8427 3504                             l8419 33D8                             l7803 5FFC  
                           l8531 6D9C                             l8523 54B6                             l8515 543A  
                           l8507 53BC                             l8611 6A2C                             l8603 69FC  
                           l6781 4806                             l6765 4760                             l6773 4790  
                           l6757 4726                             l6749 46DA                             l6693 4596  
                           l6685 4564                             l6933 414C                             l6925 4114  
                           l6917 40C8                             l6861 3E68                             l6845 3DF2  
                           l6837 3DC0                             l6829 3D96                             l7661 5606  
                           l7653 55A4                             l7645 555C                             l7637 54EC  
                           l6669 6728                             l7397 2E4C                             l7389 2DF8  
                           l7469 6AE8                             l6597 6C5A                             l6589 6C20  
                           l7581 3326                             l7573 32BC                             l7565 3270  
                           l7549 3200                             l7493 2F60                             l7485 2F22  
                           l7477 2EE0                             l8349 68C6                             l7629 70B8  
                           l8381 4C6A                             l8373 5B02                             l8365 5AA6  
                           l8357 59D6                             l7733 4480                             l7725 43C6  
                           l7717 4318                             l7709 429A                             l8293 2406  
                           l8285 234C                             l8277 21EC                             l8269 208C  
                           l8197 19F6                             l8189 18DE                             l7901 0106  
                           l8461 37A8                             l8453 375E                             l8445 36B2  
                           l8437 35E4                             l8429 3538                             l7805 600A  
                           l8541 6DE4                             l8533 6DAC                             l8525 6D78  
                           l8517 5440                             l8509 53EE                             l8621 6A66  
                           l8613 6A42                             l8605 6A0E                             l8701 4AB0  
                           l6791 4868                             l6783 4812                             l6775 47AE  
                           l6767 4766                             l6759 4728                             l6687 4574  
                           l6695 459C                             l6679 4548                             l6935 414E  
                           l6927 4124                             l6919 40CC                             l6871 3EB2  
                           l6863 3E74                             l6855 3E3C                             l6847 3DF8  
                           l6839 3DC2                             l7671 565E                             l7663 5624  
                           l7655 55B0                             l7647 5564                             l7639 5532  
                           l6599 6164                             l6951 6B52                             l6943 7004  
                           l7399 2E64                             l7583 3344                             l7575 32E6  
                           l7591 3386                             l7559 3248                             l7487 2F36  
                           l7479 2EEE                             l8551 5872                             l8543 5824  
                           l7831 5ECE                             l8391 4D6A                             l8375 5B08  
                           l8359 5A40                             l7751 4F12                             l7735 448A  
                           l7727 43E6                             l7719 4326                             l8295 2456  
                           l8287 2380                             l8279 2244                             l8199 1A06  
                           l7911 0178                             l8471 37E2                             l8463 37CA  
                           l8455 3772                             l8447 36E8                             l8439 361A  
                           l7807 6028                             l8535 6DBC                             l8527 6D7C  
                           l8519 5484                             l8623 6A6E                             l8615 6A4A  
                           l8607 6A16                             l8711 4AF0                             l8703 4AB4  
                           l8631 48E2                             l6793 487E                             l6785 4820  
                           l6777 47DC                             l6769 4770                             l6697 45AC  
                           l6689 4584                             l6929 412E                             l6937 4154  
                           l6881 3F04                             l6873 3EBE                             l6865 3E8C  
                           l6857 3E48                             l6849 3E18                             l7673 566C  
                           l7665 5626                             l7657 55EC                             l7649 5570  
                           l8481 5D18                             l6961 6BCA                             l6953 6B62  
                           l6945 7014                             l7569 327E                             l7497 2F6E  
                           l7489 2F46                             l8553 5880                             l8561 58E0  
                           l7841 5F20                             l7833 5ED2                             l7825 5E1A  
                           l7817 5E06                             l8393 4D7A                             l8385 4C72  
                           l8377 5B24                             l7761 4F8E                             l7753 4F1A  
                           l7745 4EB2                             l7737 44A0                             l7729 43FA  
                           l7681 417A                             l8297 2496                             l8289 23B4  
                           l7921 032E                             l7913 018C                             l7905 013E  
                           l8473 3836                             l8465 37DA                             l8457 3784  
                           l8449 371C                             l7809 602E                             l8537 6DCC  
                           l8529 6D8C                             l8617 6A50                             l8609 6A1E  
                           l8721 4B34                             l8713 4B00                             l8705 4AC6  
                           l8641 495E                             l8633 48E4                             l6795 4898  
                           l6787 484A                             l6699 45B2                             l6939 4158  
                           l6891 3F82                             l6883 3F14                             l6875 3ECE  
                           l6867 3E98                             l6859 3E52                             l7675 566E  
                           l7667 562A                             l7659 55F8                             l8483 5D2A  
                           l6955 6B90                             l6971 63E0                             l7579 3310  
                           l7499 2F94                             l7595 3398                             l8563 595C  
                           l8555 588E                             l8547 583A                             l7835 5EE2  
                           l7827 5E28                             l7819 5E18                             l8395 4D8A  
                           l8387 4C84                             l8379 4C58                             l7851 5B6E  
                           l7843 5B5A                             l7771 500E                             l7755 4F36  
                           l7763 4F9A                             l7747 4EC2                             l7739 44B6  
                           l7683 41AE                             l8299 24AE                             l7931 0374  
                           l7915 01A8                             l7907 014E                             l8475 383C  
                           l8459 3798                             l8539 6DDE                             l8491 52FC  
                           l8619 6A56                             l8723 4B44                             l8715 4B0A  
                           l8731 4B7C                             l8707 4AD6                             l8651 49A2  
                           l8643 4964                             l8627 48D8                             l6797 48B0  
                           l6789 484E                             l6893 3FB8                             l6885 3F30  
                           l6877 3EDA                             l6869 3EA4                             l7669 564E  
                           l8485 5D94                             l6957 6BA0                             l6949 6B24  
                           l6981 646E                             l6973 63F0                             l6965 6374  
                           l7589 336E                             l8565 596A                             l8557 589C  
                           l8549 586E                             l7837 5F16                             l7829 5EB6  
                           l8397 4DBC                             l8389 4CEE                             l7861 5C8A  
                           l7853 5B7C                             l7845 5B6C                             l7781 50A0  
                           l7773 5042                             l7765 4FB6                             l7757 4F6A  
                           l7749 4EDE                             l7685 41DC                             l7693 420E  
                           l7917 02A6                             l7909 015C                             l8477 3858  
                           l8581 6760                             l8493 5300                             l8741 4BC6  
                           l8733 4B80                             l8725 4B54                             l8717 4B1A  
                           l8709 4AE0                             l8661 49BA                             l8653 49A6  
                           l8645 4980                             l8629 48E0                             l6799 48B2  
                           l6895 3FC6                             l6887 3F3C                             l6879 3EEA  
                           l8487 5DEC                             l8479 5CD4                             l8575 6CFA  
                           l6959 6BC4                             l6983 6474                             l6975 63FE  
                           l6967 63A2                             l6991 716E                             l8567 5988  
                           l8559 58AA                             l7871 6E04                             l7839 5F1C  
                           l8399 4DE0                             l7863 5C8E                             l7855 5BE6  
                           l7783 50D4                             l7775 504A                             l7767 4FEA  
                           l7759 4F72                             l7695 422C                             l7687 41EA  
                           l7679 416A                             l7951 0478                             l7935 039E  
                           l7927 0344                             l7919 0312                             l7943 03EA  
                           l8583 67F2                             l8807 5F9A                             l7791 5F4A  
                           l8495 5370                             l8591 69CA                             l8751 4C1E  
                           l8743 4BD8                             l8735 4BA0                             l8727 4B64  
                           l8719 4B2A                             l8671 49FC                             l8663 49C4  
                           l8655 49AC                             l8647 499A                             l8639 48F0  
                           l6897 3FE4                             l6889 3F58                             l8489 5DF4  
                           l8577 6D12                             l6977 6410                             l6969 63B2  
                           l8569 598E                             l8809 58C2                             l7873 6E1A  
                           l7865 5C9E                             l7857 5C3E                             l7777 5066  
                           l7769 4FF2                             l7697 425A                             l7689 41FA  
                           l7945 0406                             l7937 03AC                             l7929 0366  
                           l8585 6800                             l7793 5F58                             l8497 5374  
                           l8593 69CC                             l8745 4BF6                             l8737 4BB8  
                           l8753 4C30                             l8729 4B74                             l8673 4A0E  
                           l8665 49CE                             l8657 49B2                             l8649 499E  
                           l6899 3FEE                             l8579 6D46                             l6979 641E  
                           l6987 7148                             l6995 626E                             l7875 6E22  
                           l7867 6DEE                             l7859 5C72                             l7779 506E  
                           l7971 057A                             l7963 050E                             l7955 04B0  
                           l7947 0414                             l7939 03D4                             l7891 0090  
                           l7883 0012                             l8587 681E                             l7795 5F66  
                           l7787 5F38                             l8499 5386                             l8595 69DA  
                           l8755 4C36                             l8747 4BFA                             l8739 4BBC  
                           l8691 4A8E                             l8675 4A12                             l8683 4A48  
                           l8667 49DC                             l8659 49B6                             l6989 715E  
                           l6997 6284                             l7877 6E24                             l7869 6DFE  
                           l7981 0658                             l7973 05AE                             l7965 052A  
                           l7957 04C8                             l7949 0460                             l7893 00AC  
                           l7885 0032                             l8589 6824                             l7797 5F74  
                           l7789 5F3C                             l8597 69E2                             l8749 4C1A  
                           l8693 4A92                             l8677 4A22                             l8669 49F0  
                           l8685 4A66                             l7879 6E36                             l7991 06AE  
                           l7975 05BE                             l7983 067C                             l7967 0540  
                           l7959 04D6                             l7887 007A                             l7799 5F82  
                           l8599 69E6                             l8695 4A96                             l8687 4A78  
                           l8679 4A36                             l7977 0622                             l7969 056C  
                           l7897 00C2                             l8697 4A9A                             l8689 4A7C  
                           l7979 0640                             l7987 0690                             l7899 00E4  
                           l8699 4A9E                             l7989 06A0                             l7999 06C8  
                           STR_2 7FED                             STR_3 7FF2                             STR_4 7FD5  
                           STR_5 7FB6                             STR_6 7FDE                             STR_7 7F8D  
                           STR_9 7FC3                   _Read_LM35$1889 0064                             u8000 6C16  
                           u8001 6C12                             u8010 6C3E                             u8011 6C3A  
                           u8020 6174                             u8100 66CE                             u8021 6170  
                           u8101 66CA                             u8030 6196                             u8110 66F0  
                           u8031 6192                             u8111 66EC                             u8200 4626  
                           u8040 61D0                             u8120 670E                             u9000 56A4  
                           u8201 4622                             u8041 61CC                             u8121 670A  
                           u9001 56A0                             u8210 4666                             u8050 61F2  
                           u8130 673E                             u9010 56D0                             u8211 4662  
                           u8051 61EE                             u8131 673A                             u9011 56CC  
                           u8300 47DC                             u8220 46DA                             u8140 4562  
                           u8060 621A                             u9020 56E6                             u9100 257E  
                           u8301 47D8                             u8221 46D6                             u8141 455E  
                           u8061 6216                             u9021 56E2                             u9101 257A  
                           u8310 47F2                             u8230 46FC                             u8150 4574  
                           u8070 624C                             u9030 57B0                             u9110 2590  
                           u8311 47EE                             u8231 46F8                             u8151 4570  
                           u8071 6248                             u9031 57AC                             u9111 258C  
                           u7600 38BA                             u8320 4806                             u8240 4726  
                           u8160 4584                             u8400 3DC0                             u8080 6686  
                           u9040 57C6                             u9200 2868                             u9120 2606  
                           u7601 38B6                             u8321 4802                             u8241 4722  
                           u8161 4580                             u8401 3DBC                             u8081 6682  
                           u9041 57C2                             u9201 2864                             u9121 2602  
                           u7610 38CA                             u8330 4820                             u8250 474A  
                           u8170 45C6                             u8410 3DD2                             u8090 66A8  
                           u9050 57E0                             u9210 289A                             u9130 2618  
                           u7611 38C6                             u8331 481C                             u8251 4746  
                           u8171 45C2                             u8411 3DCE                             u8091 66A4  
                           u9051 57DC                             u9211 2896                             u9131 2614  
                           u7700 3A10                             u7620 390A                             u8340 4868  
                           u8260 4760                             u8180 45D8                             u8500 4070  
                           u8420 3DE2                             u9060 57F0                             u9300 2C6C  
                           u9220 28A8                             u9140 2692                             u7621 3906  
                           u8341 4864                             u8261 475C                             u8181 45D4  
                           u8501 406C                             u8421 3DDE                             u9061 57EC  
                           u9301 2C68                             u9221 28A4                             u9141 268E  
                           u7710 3A38                             u7630 3920                             u8350 4898  
                           u8270 477E                             u8190 45E8                             u8510 4084  
                           u8430 3E18                             u7550 6920                             u9310 2CA8  
                           u9230 28D2                             u9150 271E                             u9070 24E6  
                           u7711 3A34                             u7631 391C                             u8351 4894  
                           u8271 477A                             u8191 45E4                             u8511 4080  
                           u8431 3E14                             u7551 691C                             u9311 2CA4  
                           u9231 28CE                             u9151 271A                             u9071 24E2  
                           u7800 3B70                             u7720 3A56                             u7640 3932  
                           u8360 48C4                             u8280 479E                             u8520 409E  
                           u8440 3E28                             u7560 6930                             u8600 63E0  
                           u9320 2CB6                             u9240 2A1A                             u9160 2750  
                           u9080 2530                             u9400 64D6                             u7801 3B6C  
                           u7721 3A52                             u7641 392E                             u8361 48C0  
                           u8281 479A                             u8521 409A                             u8441 3E24  
                           u7561 692C                             u8601 63DC                             u9321 2CB2  
                           u9241 2A16                             u9161 274C                             u9081 252C  
                           u7810 3BA6                             u7730 3A76                             u7650 3942  
                           u8290 47AE                             u8530 40E6                             u8450 3FA2  
                           u8370 3D5E                             u7570 6956                             u8610 63FE  
                           u9330 2D0A                             u9250 2A80                             u9170 278E  
                           u9090 2540                             u9410 64E6                             u7811 3BA2  
                           u7731 3A72                             u7651 393E                             u8291 47AA  
                           u8531 40E2                             u8371 3D5A                             u7571 6952  
                           u8611 63FA                             u9331 2D06                             u9251 2A7C  
                           u9171 278A                             u9091 253C                             u9411 64E2  
                           u7900 3C6E                             u7820 3BB6                             u7740 3A84  
                           u7660 397C                             u8540 4114                             u8460 3FFC  
                           u8380 3D70                             u7580 6988                             u8620 641E  
                           u8700 6342                             u9340 2DDC                             u9260 2AC8  
                           u9180 281A                             u9500 6AA2                             u9420 64F6  
                           u7901 3C6A                             u7821 3BB2                             u7741 3A80  
                           u7661 3978                             u8541 4110                             u8461 3FF8  
                           u8381 3D6C                             u7581 6984                             u8621 641A  
                           u8701 633E                             u9341 2DD8                             u9261 2AC4  
                           u9181 2816                             u9501 6A9E                             u9421 64F2  
                           u7910 3C88                             u7830 3BE2                             u7750 3A94  
                           u7670 398A                             u7590 38A8                             u8550 414C  
                           u8470 401C                             u8390 3D80                             u8630 646E  
                           u8710 6352                             u9350 2DF8                             u9270 2AD8  
                           u9190 2850                             u9510 6B1A                             u9430 6514  
                           u7911 3C84                             u7831 3BDE                             u7751 3A90  
                           u7671 3986                             u7591 38A4                             u8551 4148  
                           u8471 4018                             u8455 3F98                             u8391 3D7C  
                           u8631 646A                             u8711 634E                             u9351 2DF4  
                           u9271 2AD4                             u9191 284C                             u9511 6B16  
                           u9431 6510                             u9407 64CC                             u7920 3CC2  
                           u7840 3BF2                             u7760 3AC6                             u7680 39F6  
                           u8480 402C                             u8560 6B52                             u8640 715E  
                           u8800 65FE                             u9360 2E5E                             u9280 2B72  
                           u9440 6548                             u8720 6C88                             u9600 3200  
                           u9520 2ED4                             u7921 3CBE                             u7841 3BEE  
                           u7761 3AC2                             u7681 39F2                             u8481 4028  
                           u8561 6B4E                             u8641 715A                             u8801 65FA  
                           u9361 2E58                             u9281 2B6E                             u8721 6C84  
                           u9601 31FC                             u9521 2ED0                             u7930 3CD4  
                           u7850 3C0E                             u7770 3AD4                             u7690 3A0E  
                           u8490 405A                             u8570 6B90                             u8650 6284  
                           u8810 6628                             u9370 2E60                             u9290 2BC0  
                           u9450 6576                             u8730 6CAA                             u9610 3222  
                           u9530 2F16                             u7931 3CD0                             u7851 3C0A  
                           u7771 3AD0                             u7691 3A08                             u8491 4056  
                           u8571 6B8C                             u8651 6280                             u8811 6624  
                           u9291 2BBC                             u9451 6572                             u8731 6CA6  
                           u9611 321E                             u9531 2F12                             u7940 3CE4  
                           u7860 3C1E                             u7780 3AF2                             u9700 5606  
                           u8580 6BC4                             u8660 62B8                             u9380 2E74  
                           u8740 6CC8                             u9460 605C                             u9620 32B8  
                           u9540 2FB0                             u7941 3CE0                             u7861 3C1A  
                           u7781 3AEE                             u9701 5602                             u8581 6BC0  
                           u9381 2E70                             u8741 6CC4                             u9461 6058  
                           u9621 32B4                             u9541 2FAC                             u7950 3D04  
                           u7870 3C2E                             u7790 3B2A                             u9710 5616  
                           u8750 6E6C                             u8590 63A2                             u8670 62E6  
                           u8830 6662                             u8910 51EE                             u9390 6492  
                           u9470 6116                             u9550 2FCC                             u9630 6FF8  
                           u7951 3D00                             u7871 3C2A                             u7791 3B26  
                           u9711 5612                             u8751 6E68                             u8591 639E  
                           u8671 62E2                             u8831 665C                             u8911 51EA  
                           u9447 653E                             u9391 648E                             u9471 6112  
                           u9551 2FC8                             u9631 6FF4                             u7960 3D14  
                           u7880 3C44                             u9720 5624                             u8760 6EB2  
                           u8680 62FA                             u8840 6664                             u8920 5212  
                           u9480 612C                             u9560 3086                             u9640 70B8  
                           u9800 427C                             u7961 3D10                             u7881 3C40  
                           u9721 5620                             u8761 6EAE                             u8681 62F6  
                           u8665 62AE                             u8825 663A                             u8905 5194  
                           u9481 6128                             u9561 3082                             u9641 70B4  
                           u9801 4278                             u7970 3D30                             u7890 3C5A  
                           u9730 565E                             u9650 54DE                             u8770 718E  
                           u8690 6322                             u8930 522E                             u8906 519E  
                           u8850 7146                             u9490 6146                             u9570 3166  
                           u7971 3D2C                             u7891 3C56                             u9731 565A  
                           u9651 54DA                             u8771 718A                             u8691 631E  
                           u8931 522A                             u8907 51AE                             u8851 7142  
                           u9491 6142                             u9571 3162        Calibrate_Flame_Sensor@sum 0062  
                           u9740 566C                             u9660 54EC                             u7980 710E  
                           u8780 65B8                             u8940 5282                             u8860 6ED2  
                           u9580 319C                             u9900 4F36                             u9820 42EE  
                           u9741 5668                             u9661 54E8                             u7981 710A  
                           u8925 5208                             u8861 6ECE                             u9581 3198  
                           u9901 4F32                             u9821 42EA                             u9670 5548  
                           u8790 65D6                             u8950 529E                             u8870 5130  
                           u7990 6BF4                             u9590 31CE                             u9910 4F8E  
                           u9830 4326                             u9750 41AE                             u9671 5544  
                           u8791 65D2                             u8951 529A                             u7991 6BF0  
                           u9591 31CA                             u9911 4F8A                             u9831 4322  
                           u9815 42AE                             u9751 41AA                             u9680 559E  
                           u8960 52DA                             u8880 515E                             u9920 4FB6  
                           u9840 439C                             u9816 42B8                             u9760 41DC  
                           u9681 559A                             u8785 65AE                             u8961 52D6  
                           u8945 5278                             u8881 515A                             u9921 4FB2  
                           u9841 4398                             u9817 42C8                             u9761 41D8  
                           u9690 55E8                             u8890 5180                             u8970 6FBA  
                           u9930 500E                             u9850 4438                             u9770 41EA  
                           u9691 55E4                             u8891 517C                             u8875 5126  
                           u8971 6FB6                             u9931 500A                             u9851 4434  
                           u9771 41E6                             u8980 5690                             u9940 5066  
                           u9860 44A0                             u9780 422C                             u8981 568A  
                           u9941 5062                             u9861 449C                             u9781 4228  
                           u8990 5692                             u9870 44B6                             u9790 425A  
                           u9871 44B2                             u9791 4256                             u9960 5FFC  
                           u9961 5FF8                             u9890 4EDE                             u9970 6028  
                           u9955 5080                             u9891 4EDA                             u9971 6024  
                           u9980 604A                             u9885 4522                             u9981 6046  
                           u9990 5EE2                             u9991 5EDE                             abs@a 000B  
                           _dbuf 0265                             _cp_h 7ECF                             _cp_l 7ECB  
                           _dp_h 7E63                             _dp_l 7E5B                             _labs 6EC4  
                           _main 48D8                             _dtoa 5680                     _trigger_test 00F9  
                           _prec 00F3                             _powf 0012                             pad@i 0015  
                           pad@p 0012                             fsr1h 0FE2                             fsr2h 0FDA  
                           indf1 0FE7                             indf2 0FDF                             fsr1l 0FE1  
                           fsr2l 0FD9                             _stoa 6478                             btemp 005F  
                           _utoa 604C                 __end_of_ADC_Init 7222                 __end_of_ADC_Read 70D0  
                  ___fpclassifyf 6578      __end_of_Handle_Test_Command 6910                             prodh 0FF4  
                           prodl 0FF3                             start 000E                  ___fldiv@new_exp 0051  
                __end_of_HighISR 71D0                     ___param_bank 0000                            ??_abs 000D  
                          ??_pad 0014                ?_Update_Actuators 0001          ?_Calibrate_Flame_Sensor 0001  
             ??_Update_Actuators 004C                    ___fltol@sign1 0009                  __end_of___aldiv 626E  
                          ?_labs 0001                  __end_of___almod 6760                  __end_of___fladd 3D44  
                          ?_main 0001                            ?_dtoa 0017                  __end_of___fldiv 48D8  
                __end_of___flneg 7180                            STR_10 7FCC                            STR_11 7FA9  
                          STR_12 7FDE                            STR_21 7FE6                            STR_13 7F3E  
                          STR_14 7ED3                            STR_15 7FF7                            STR_18 7FFB  
                __end_of___awmod 6A78                  __end_of___flmul 416A                            ?_powf 0060  
                __end_of___flsub 704A                  __end_of___fltol 6374                            ?_stoa 0009  
                          u10000 5C9E                            u10001 5C9A                            u10010 6E36  
                __end_of___lldiv 6C72                            u10011 6E32                            u10020 007A  
                          u10021 0076                            u10110 026C                            u10030 00AC  
                          u10031 00A8                            ?_utoa 0017                            u11000 59AA  
                          u10200 0478                            u10120 02A6                            u10040 00E4  
                          u11001 59A6                            u10201 0474                            u10121 02A2  
                          u10105 0218                            u10041 00E0                            u11010 6D12  
                          u10210 04C8                            u10130 0312                            u10106 0222  
                          u10050 0106                            u11011 6D0E                            u10211 04C4  
                          u10131 030E                            u10115 0262                            u10107 0232  
                          u10051 0102                            u11020 6D46                            u10300 06AE  
                          u10220 04D6                            u10140 032E                            u10060 015C  
                          u11100 6A42                            u11021 6D42                            u10301 06AA  
                          u10221 04D2                            u10141 032A                            u10061 0158  
                          u11101 6A3E                            u10310 06C4                            u10230 052A  
                          u10150 0366                            u10070 0178                            u11030 67F2  
                          u11110 6A66                            u10311 06C0                            u10231 0526  
                          u10151 0362                            u10071 0174                            u11031 67EE  
                          u11111 6A62                            u10400 0BE6                            u10320 06DE  
                          u10240 0540                            u10160 0374                            u10080 01A8  
                          u11040 681E                            u11200 4AF0                            u11120 4980  
                          u10401 0BE2                            u10321 06DA                            u10241 053C  
                          u10161 0370                            u10081 01A4                            u11041 681A  
                          u11201 4AEC                            u11121 497C                            u10410 0C0E  
                          u10330 0710                            u10250 055C                            u10170 03AC  
                          u11050 6840                            u11210 4B00                            u11130 49F0  
                          u10411 0C0A                            u10331 070C                            u10251 0558  
                          u10171 03A8                            u11051 683C                            u11211 4AFC  
                          u11131 49EC                            u10500 1C4E                            u10340 0734  
                          u10260 057A                            u10180 0406                            u11060 69DA  
                          u11300 4C1A                            u11220 4B1A                            u11140 4A0E  
                          u10501 1C4A                            u10341 0730                            u10261 0576  
                          u10181 0402                            u11061 69D6                            u11301 4C16  
                          u11221 4B16                            u11141 4A0A                            u10430 1A2A  
                          u10350 0742                            u10270 05BE                            u10190 0414  
                          u11070 69F4                            u11230 4B2A                            u11150 4A78  
                          u10431 1A26                            u10351 073E                            u10271 05BA  
                          u10191 0410                            u10095 01BE                            u11071 69F0  
                          u11231 4B26                            u11151 4A74                            u10440 1A46  
                          u10360 079A                            u10280 0622                            u10096 01C8  
                          u10600 720C                            u11080 6A0E                            u11240 4B44  
                          u11160 4A8E                            u10441 1A42                            u10425 0E08  
                          u10361 0796                            u10281 061E                            u10097 01D8  
                          u10601 7206                            u11081 6A0A                            u11241 4B40  
                          u11161 4A8A                            u10450 1AC0                            u10370 07B8  
                          u10290 0658                            u10610 71DE                            u11090 6A2C  
                          u11250 4B54                            u11170 4AB0                            u10515 1C68  
                          u10451 1ABC                            u10371 07B4                            u10291 0654  
                          u10611 71DA                            u11091 6A28                            u11251 4B50  
                          u11171 4AAC                            u10620 6894                            u10700 4DE0  
                          u10516 1C72                            u10460 1B0C                            u10380 0AC4  
                          u11260 4B64                            u11180 4AC6                            u10621 6890  
                          u10701 4DDC                            u10525 1CD2                            u10517 1C82  
                          u10461 1B08                            u10381 0AC0                            u11261 4B60  
                          u11181 4AC2                            u11317 498C                            u10630 68A6  
                          u10710 4E12                            u10550 1E02                            u10526 1CDC  
                          u10470 1B3E                            u10606 720E                            u11270 4B74  
                          u11190 4AD6                            u10631 689E                            u10711 4E0E  
                          u10551 1DFE                            u10535 1D2A                            u10527 1CEC  
                          u10471 1B3A                            u11327 4C42                            u11271 4B70  
                          u11191 4AD2                            u10720 4E32                            u10536 1D34  
                          u10480 1B94                            u10800 375E                            u11280 4BB8  
                __end_of___llmod 6CFA                            u10721 4E2E                            u11337 5C7C  
                          u10545 1DC8                            u10537 1D44                            u10481 1B90  
                          u10801 375A                            u11281 4BB4                            u10650 6900  
                          u10730 4E64                            u10546 1DD2                            u10810 3858  
                          u11290 4BF6                            u10651 68FC                            u11347 5EC0  
                          u10731 4E60                            u10547 1DE2                            u10395 0B30  
                          u10811 3854                            u11291 4BF2                            u10820 5D18  
                          u10740 4E7C                            u10660 5B24                            u10580 2456  
                          u10396 0B3A                            u10900 53BC                            u10821 5D14  
                          u11357 6E1C                            u10741 4E78                            u10661 5B20  
                          u10581 2452                            u10565 23D6                            u10397 0B4A  
                          u10901 53B8                            u10670 4C6A                            u10590 24AE  
                          u10750 33CE                            u10910 53EE                            u10830 5334  
                          u11367 70A4                            u10671 4C66                            u10591 24AA  
                          u10575 241C                            u10495 1BDA                            u10751 33CA  
                          u10911 53EA                            u10831 532E                            u10648 68A8  
                          u10680 4D7A                            u10576 2426                            u10496 1BE4  
                          u10760 35E4                            u10920 5420                            u10840 5336  
                          u10681 4D76                            u10577 2436                            u10497 1BF4  
                          u10761 35E0                            u10921 541C                            u10690 4DBC  
                          u10770 3680                            u10930 5438                            u10850 536C  
                          u10691 4DB8                            u10771 367C                            u10931 5434  
                          u10851 5366                            u10780 36B2                            u10940 5484  
                          u10860 536E                            u10781 36AE                            u10941 5480  
                          u10790 372C                            u10950 5496                            u10870 5386  
                          u10791 3728                            u10951 548E                            u10871 5382  
                          u10880 5396                            u10881 5392                            u10970 5836  
                          u10890 53A6                            u10971 5832                            u10891 53A2  
                          u10980 595C                            u10981 5958                            u10990 5988  
                          u10991 5984                            u10968 5498                            i2l156 71CC  
                          _RCREG 0FAE                     vfpfcnvrt@fmt 00A3                            _SPBRG 0FAF  
                          _PORTB 0F81                            _TRISB 0F93                            _TXREG 0FAD  
                          _lg2_h 7E87                            _lg2_l 7E83                            _flags 01F2  
            read_prec_or_width@c 0005                            _errno 01EC              read_prec_or_width@n 0006  
                          _ivln2 7E77                            _fputc 6910                            _fputs 70D0  
                __end_of_ivln2_h 7ECB                  __end_of_ivln2_l 7E77                            _two24 7EBB  
                 _system_started 01F4                  __end_of_scalbnf 50E6                            labs@a 0001  
                          pad@fp 000F                            _width 01EE                            _putch 7236  
                          main@i 02B8                            dtoa@d 0018                            dtoa@i 0023  
                          dtoa@p 0020                            _sqrtf 416A                            dtoa@s 0022  
                          dtoa@w 001E             Calibrate_MQ2@voltage 0066                            tablat 0FF5  
                          powf@i 0128                            powf@j 01A8                            powf@k 01A4  
                          powf@n 0188                            powf@r 0150                            powf@s 0160  
                          powf@t 01B0                            powf@u 017C                            powf@v 0180  
                          powf@w 0144                            powf@x 0060                            powf@y 0064  
                          powf@z 01B4                            stoa@l 0012                            stoa@p 000E  
                          stoa@s 000A                            ttemp5 0060                            ttemp6 0063  
                          ttemp7 0067                            utoa@d 0018                            utoa@i 0020  
                          utoa@p 001E                            utoa@w 001C                            status 0FD8  
                          wtemp8 0060                  __end_of_sprintf 708E                   ?___fpclassifyf 0001  
             main@sensor_counter 02B6                  _shutdown_system 00FA                  __initialization 6F1A  
                   __end_of_cp_h 7ED3                     __end_of_cp_l 7ECF                     __end_of_dp_h 7E6B  
                   __end_of_dp_l 7E63                     __end_of_labs 6F1A                     __end_of_main 4C58  
                   __end_of_dtoa 5824                     __end_of_powf 24C4                     __end_of_stoa 6578  
                   __end_of_utoa 6164   __end_of_Calibrate_Flame_Sensor 5F34             _Update_Actuators$824 0052  
                         ??_labs 0005                           ??_main 00E7                           ??_dtoa 001C  
                         ??_powf 0068                           ??_stoa 000C                           ??_utoa 001C  
                  __activetblptr 0002       __end_of_read_prec_or_width 6B24           Send_Sensor_Data@buffer 0100  
               _ADC_Read_Average 6DEC                           _ADCON1 0FC1                           _ADCON2 0FC0  
                         ?_fputc 0001                 ___llmod@dividend 0001                           ?_fputs 0009  
                         _ADRESH 0FC4                           _ADRESL 0FC3         Update_Actuators@co_alarm 0051  
                         ?_putch 0001                           ?_sqrtf 0001                           i2l6175 71B6  
                         i2l6177 71C4                           i2l6179 71CA                           _MQ2_Ro 01F9  
                         _OSCCON 0FD3                    vfpfcnvrt@done 00A8                        ??_HighISR 0001  
                         _TRISA0 7C90                           _TRISA1 7C91                           _TRISA2 7C92  
                         _TRISC6 7CA6                           _TRISC7 7CA7                 __end_of___xxtofl 5680  
                   vfprintf@cfmt 00B4                __end_of_UART_Init 71FC                __end_of_UART_Read 71E8  
                         ___flge 6374                           ___fleq 6B24                        ??___aldiv 0009  
                      ??___almod 0009                        ??___fladd 0017                        ??___fldiv 0048  
                      ??___flneg 0005                        ??___awmod 0005                        ??___flmul 0027  
                      ??___flsub 0040                        ??___fltol 0005                        ??___lldiv 0009  
                _Read_MQ2_Sensor 33BC                        ??___llmod 0009                           _efgtoa 24C4  
                         _co_ppm 00EB                  ADC_Read@channel 0005                           _floorf 50E6  
                         _memcpy 6F6C             read_prec_or_width@ap 0002                           clear_0 6F40  
                         clear_1 6F4C                           clear_2 6F58                  ___awmod@divisor 0003  
                         isa$std 0001                  ___awmod@counter 0005                           pad@buf 0010  
                         dtoa@fp 0017                           _strcpy 7110                           fputc@c 0001  
                         fputs@c 000C                           fputs@i 000D                           fputs@s 0009  
                      ??_scalbnf 003E                  ___fpclassifyf@e 0009                        ?_ADC_Init 0001  
                ___fpclassifyf@u 000B                        ?_ADC_Read 0001                  ___fpclassifyf@x 0001  
             _calibrationCounter 01D8                     __mediumconst 7E5A                           powf@s2 0190  
                         powf@t1 018C                           powf@t2 011C                           tblptrh 0FF7  
                         tblptrl 0FF6                           powf@y1 012C                           tblptru 0FF8  
                         powf@ax 0178                           powf@is 0198                           powf@hx 0168  
                         powf@hy 0184                           powf@ix 01AC                           powf@iy 0194  
                         powf@sn 0164                           stoa@cp 0010                           stoa@fp 0009  
                         putch@c 0001                 __end_of_vfprintf 7004                           utoa@fp 0017  
                         sqrtf@i 000E                           sqrtf@m 001A                           sqrtf@q 0012  
                         sqrtf@r 001E                           sqrtf@s 000A                           sqrtf@t 0016  
                         sqrtf@x 0001                        ??_sprintf 005F            End_Event@event_buffer 0100  
                     ___flge@ff1 0040                       ___flge@ff2 0044                  ??___fpclassifyf 0005  
                   ___xxtofl@arg 000B                     ___xxtofl@exp 000A                     ___xxtofl@val 0001  
                     ___fleq@ff1 0001                       ___fleq@ff2 0005                       __accesstop 0060  
        __end_of__initialization 6F5E            __end_of_TEST_DURATION 7EC7                  Calibrate_MQ2@Rs 0060  
                     ___flneg@f1 0001                __end_of_End_Event 59C4              _TEST_BLINK_INTERVAL 7EBF  
                  ___rparam_used 0001                       ___fltol@f1 0001                   __pcstackCOMRAM 0001  
 Read_Flame_Sensor@last_detected 00F7                    _Calibrate_MQ2 5B5A                     __pidataBANK1 7232  
                  __end_of_lg2_h 7E8B                    __end_of_lg2_l 7E87                    ??_Start_Event 005F  
                  __end_of_ivln2 7E7B                    __end_of_fputc 69CA                    __end_of_fputs 7110  
                  __end_of_two24 7EBF                    __end_of_putch 7238                    __end_of_sqrtf 4548  
                     __end_of_L1 7EBB                       __end_of_L2 7EB7                       __end_of_L3 7EB3  
                     __end_of_L4 7EAF                       __end_of_L5 7EAB                       __end_of_L6 7EA7  
                     __end_of_P1 7EA3                       __end_of_P2 7E9F                       __end_of_P3 7E9B  
                     __end_of_P4 7E97                       __end_of_P5 7E93                       __end_of_bp 7E73  
                     __end_of_cp 7E7F                __end_of_Read_LM35 5B5A                     _alarm_active 01F6  
                Start_Event@type 00E6                       ??_ADC_Init 0001                       ??_ADC_Read 0003  
                        ??_fputc 0004                          ??_fputs 000C       Read_MQ2_Sensor@temp_factor 0071  
                        ??_putch 0001                          ??_sqrtf 0005                 _Send_Sensor_Data 6760  
                     __pbssBANK0 00EB                       __pbssBANK1 01CC                       __pbssBANK2 0200  
                  _current_event 0238           Calibrate_MQ2@adc_value 0064              _Read_MQ2_Sensor$815 007B  
        __end_of_Read_MQ2_Sensor 388E                   ?_Calibrate_MQ2 0001                          ?___flge 0040  
                        ?___fleq 0001                ??_Send_Event_Data 00E4                          ?_efgtoa 0070  
                        ?_floorf 0059                          ?_memcpy 0001                 _test_last_toggle 0261  
     Read_MQ2_Sensor@rs_ro_ratio 008D                          ?_strcpy 0001              __end_of_Start_Event 6DEC  
                      ?___xxtofl 0001                       _fire_alarm 00FC                Read_LM35@raw_temp 0060  
                        _HighISR 0008                  _flame_intensity 01E8                          __Hparam 0000  
                        __Lparam 0000            _Read_Flame_Sensor$806 006D         __end_of_ADC_Read_Average 6E5E  
                        ___aldiv 6164                          ___almod 6676                          ___fladd 388E  
                        ___fldiv 4548                          ___flneg 7148                          ___awmod 69CA  
                        ___flmul 3D44                          ___flsub 7004                          ___fltol 626E  
                        ___lldiv 6BCE                          ___llmod 6C72                        ?_vfprintf 00B0  
    Send_Event_Data@event_buffer 0100                          __pcinit 6F1A                          __ramtop 0800  
                        __ptext0 48D8                          __ptext1 69CA                          __ptext2 52FC  
                        __ptext3 71D0                          __ptext4 71E8                          __ptext5 71FC  
                        __ptext6 6D74                          __ptext7 5F34                          __ptext8 6760  
                        __ptext9 33BC            read_prec_or_width@fmt 0001                          _ivln2_h 7EC7  
                        _ivln2_l 7E73                       ??___xxtofl 0005                          _scalbnf 4EB2  
               ___awmod@dividend 0001                 ___aldiv@dividend 0001                          efgtoa@c 0075  
                        efgtoa@d 0081                          efgtoa@e 0085                          efgtoa@f 0071  
                _prev_fire_alarm 01F5                          efgtoa@g 0098                          efgtoa@h 008F  
                        efgtoa@i 008D                          efgtoa@l 0093                          efgtoa@m 0083  
                        efgtoa@n 009C                          efgtoa@p 0078                          efgtoa@t 007A  
                        efgtoa@u 009E                          efgtoa@w 0087         Read_MQ2_Sensor@adc_value 0079  
                        main@cmd 02B5                          _sprintf 704A                   __pintcode_body 71B4  
           end_of_initialization 6F5E                          floorf@e 006A                          floorf@m 0066  
                        floorf@u 006C                          floorf@x 0059                          memcpy@d 0008  
                        memcpy@n 0005                          memcpy@s 000A                          fputc@fp 0003  
                  __Lmediumconst 7E5A                          int_func 71B4                          fputs@fp 000B  
             _read_prec_or_width 6A78                 ?_Read_MQ2_Sensor 0001                  ??_Calibrate_MQ2 0059  
                ___lldiv@divisor 0005                  ___lldiv@counter 000D                          powf@p_h 01A0  
                        powf@p_l 016C                          powf@s_h 0174                          powf@t_h 0170  
                        powf@s_l 0130                          powf@t_l 0134                          powf@z_h 0120  
                        powf@z_l 0124                __end_of_vfpfcnvrt 33BC    Send_Event_Data@event_type_str 0167  
                     efgtoa@mode 007F                       efgtoa@sign 0097                        _RCSTAbits 0FAB  
               ___aldiv@quotient 000B                          postdec1 0FE5                          postdec2 0FDD  
            ?_read_prec_or_width 0001                          postinc0 0FEE                          postinc1 0FE6  
                        postinc2 0FDE                 vfpfcnvrt@convarg 00A9                      _Start_Event 6D74  
              ??_UART_Data_Ready 0001                       ??_vfprintf 005F                          sqrtf@ix 0022  
                        strcpy@d 0005                        _UART_Init 71E8                        _UART_Read 71D0  
               Send_Event_Data@i 0165                        _PORTBbits 0F81        Read_MQ2_Sensor@calibrated 01F3  
                    ___fladd@grs 001E                    ___xxtofl@sign 0009                        _TRISBbits 0F93  
               _Check_Flow_Reset 6CFA             ??_read_prec_or_width 0003                      ___fldiv@grs 0053  
                    ___fldiv@rem 004C                 Calibrate_MQ2@sum 006A                     _filter_index 00FB  
                    ___flmul@grs 002D                       _total_flow 01DC                        _TXSTAbits 0FAC  
              _Read_Flame_Sensor 4C58                        _End_Event 5824               ?_Read_Flame_Sensor 0001  
   Calculate_Flow@last_calc_time 025D                   __end_of___flge 6478                   __end_of___fleq 6BCE  
                    vfpfcnvrt@ap 00A4                      vfpfcnvrt@cp 00AE                      vfpfcnvrt@fp 00A2  
       __end_of_Send_Sensor_Data 6842                       ?_UART_Init 0001                       ?_UART_Read 0001  
                  _system_millis 01D0                   __end_of_efgtoa 2EB0              ??_Read_Flame_Sensor 005B  
                 __end_of_floorf 52FC                   __end_of_memcpy 6FBC                       floorf@F521 0251  
                 __end_of_strcpy 7148              start_initialization 6F1A                        _Read_LM35 59C4  
              Send_Sensor_Data@i 01C8                      __end_of_lg2 7E8F                      __end_of_abs 71B4  
                    __end_of_pad 6EC4                      __end_of_ovt 7E83                 _Update_Actuators 52FC  
                 _Calculate_Flow 5CD4                  _Send_Event_Data 5F34        __end_of_Read_Flame_Sensor 4EB2  
          __end_of___fpclassifyf 6676                  ___llmod@divisor 0005                  ___llmod@counter 0009  
       ??_Calibrate_Flame_Sensor 0059                       ?_End_Event 0001                      vfprintf@fmt 00B1  
                       ??___flge 0048                         ??___fleq 0009                         ??_efgtoa 005D  
                    __pdataBANK1 01F9                         ??_floorf 0060                         ??_memcpy 0007  
                       ??_strcpy 0005                     _event_active 00F8                        ___fladd@a 0013  
                      ___fladd@b 000F                   _Interrupt_Init 7222                        ___fldiv@a 0044  
                      ___fldiv@b 0040                   Calibrate_MQ2@i 006E                        ___flmul@a 0023  
                      ___flmul@b 001F                        ___flsub@a 003C                        ___flsub@b 0038  
                     ?_Read_LM35 0001                    __pcstackBANK0 0060                    __pcstackBANK1 0100  
                  __pcstackBANK2 02B5           __end_of_Calculate_Flow 5E06           Read_MQ2_Sensor@voltage 007F  
            _Handle_Test_Command 6842  Calibrate_Flame_Sensor@adc_value 0060             _Read_MQ2_Sensor$1890 0075  
           _Read_MQ2_Sensor$1891 0087                         ?_HighISR 0001             _last_flow_reset_time 01CC  
                    _efgtoa$1427 007C                 _flame_calibrated 01F8                        _dtoa$1396 001C  
             _flame_base_voltage 01E4                        _co_filter 0200                        __pintcode 0008  
    __end_of_TEST_BLINK_INTERVAL 7EC3                    __pmediumconst 7E5A                         ?___aldiv 0001  
                       ?___almod 0001                         ?___fladd 000F                ?_ADC_Read_Average 000E  
                       ?___fldiv 0040                         ?___flneg 0001                         ?___awmod 0001  
                       ?___flmul 001F                         ?___flsub 0038                         ?___fltol 0001  
             Read_LM35@adc_value 0068                         ?___lldiv 0001                   _flame_detected 00FD  
                       ?___llmod 0001             ?_Handle_Test_Command 0001                      ??_UART_Init 0001  
                    ??_UART_Read 0001               ??_ADC_Read_Average 0010           __end_of_Interrupt_Init 7232  
               ___almod@dividend 0001                      __smallconst 7E5A                         ?_scalbnf 0038  
                       _ADC_Init 7210                         _ADC_Read 708E                        _flow_rate 01E0  
        __end_of_Send_Event_Data 604C         Read_Flame_Sensor@voltage 0067                  ?_Calculate_Flow 0001  
                       ?_sprintf 00B6                  ___aldiv@divisor 0005                        _powf$1900 013C  
                      _powf$1901 0140                        _powf$1902 0108                        _powf$1903 010C  
                      _powf$1904 0110                        _powf$1905 0114                        _powf$1906 0118  
                      _powf$1892 0148                        _powf$1893 0158                        _powf$1894 014C  
                      _powf$1895 019C                        _powf$1896 0138                        _powf$1897 0100  
                      _powf$1898 0104                        _powf$1899 015C                  ___aldiv@counter 0009  
                _UART_Data_Ready 71FC                    _TEST_DURATION 7EC3                      ??_End_Event 00E4  
                       _PIR1bits 0F9E                         i2u735_40 71C4                         i2u735_41 71C0  
       __end_of_Check_Flow_Reset 6D74                         _RCONbits 0FD0            ??_Handle_Test_Command 0001  
                   ?_Start_Event 0001                       powf@yisint 0154                        _vfpfcnvrt 2EB0  
                ?_Interrupt_Init 0001                       _ADCON0bits 0FC2          ADC_Read_Average@channel 0010  
 Calculate_Flow@last_pulse_count 01F0                      ??_Read_LM35 0059                       vfpfcnvrt@c 00AD  
                    _INTCON2bits 0FF1                      _INTCON3bits 0FF0                        copy_data0 6F2E  
        ADC_Read_Average@samples 000E                  _test_start_time 01D4                         __Hrparam 0000  
                      memcpy@tmp 0007                       vfprintf@ap 00B3                         __Lrparam 0000  
                     vfprintf@fp 00B0            __end_of_Calibrate_MQ2 5CD4         __end_of_Update_Actuators 54CC  
                     ?_vfpfcnvrt 00A2                ?_Send_Sensor_Data 0001               ___fpclassifyf@F465 0255  
             ??_Send_Sensor_Data 005F           _Calibrate_Flame_Sensor 5E06                       sprintf@fmt 00B8  
                       ___xxtofl 54CC                 ?_Send_Event_Data 0001                         __ptext10 0012  
                       __ptext11 416A                         __ptext20 6842                         __ptext12 4EB2  
                       __ptext21 5824                         __ptext13 5B5A                         __ptext30 24C4  
                       __ptext22 704A                         __ptext14 59C4                         __ptext31 7110  
                       __ptext23 6FBC                         __ptext15 4C58                         __ptext40 6B24  
                       __ptext32 6F6C                         __ptext24 2EB0                         __ptext16 5E06  
                       __ptext41 5680                         __ptext33 6EC4                         __ptext25 604C  
                       __ptext17 6DEC                         __ptext50 5CD4                         __ptext42 6E5E  
                       __ptext34 50E6                         __ptext26 6C72                         __ptext18 708E  
                       __ptext51 54CC                         __ptext43 70D0                         __ptext35 6578  
                       __ptext27 6BCE                         __ptext19 7222                         __ptext52 3D44  
                       __ptext44 6910                         __ptext36 626E                         __ptext28 6478  
                       __ptext53 4548                         __ptext45 7236                         __ptext37 7004  
                       __ptext29 6A78                         __ptext54 388E                         __ptext46 7180  
                       __ptext38 7148                         __ptext55 7210                         __ptext47 6676  
                       __ptext39 6374                         __ptext48 6164                         __ptext49 6CFA  
        __end_of_UART_Data_Ready 7210                  ___almod@divisor 0005                  ___almod@counter 0009  
                     strcpy@dest 0001       Read_Flame_Sensor@adc_value 006B          Calibrate_Flame_Sensor@i 0066  
                       efgtoa@fp 0070                         efgtoa@ne 0076                         efgtoa@pp 007E  
                       efgtoa@ou 0089                         isa$xinst 0000                         int$flags 005F  
           Calculate_Flow@pulses 005D                         _vfprintf 6FBC              Send_Event_Data@type 0164  
                     _INTCONbits 0FF2                         memcpy@d1 0001                         memcpy@s1 0003  
                       scalbnf@n 003C                         scalbnf@u 0042                         scalbnf@x 0038  
                       scalbnf@y 0046                         intlevel2 0000                        sprintf@ap 00D8  
                     End_Event@i 01CA                 ___lldiv@dividend 0001                        strcpy@src 0003  
     Read_Flame_Sensor@intensity 0071                      efgtoa@nmode 0080                      _temp_filter 021C  
                    ??_vfpfcnvrt 00A6       Update_Actuators@last_blink 0259                      _temperature 00EF  
                       sprintf@f 00D9                         sprintf@s 00B6                 ??_Calculate_Flow 0059  
               ___lldiv@quotient 0009                ??_Read_MQ2_Sensor 005B                     ___aldiv@sign 000A  
               ?_UART_Data_Ready 0001                    ___fladd@signs 001B               Read_MQ2_Sensor@ppm 0091  
                   ___almod@sign 000A                     ___fladd@aexp 001C                     ___fladd@bexp 001D  
            ADC_Read_Average@sum 0011                Read_MQ2_Sensor@Rs 0083                 Read_MQ2_Sensor@i 008B  
              ADC_Read_Average@i 0015  
