

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jun 17 10:47:46 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Version 2.20
    68                           ; Generated 12/02/2020 GMT
    69                           ; 
    70                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F4550 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000FE0                     bsr             equ	4064
   102   000FE9                     fsr0            equ	4073
   103   000FEA                     fsr0h           equ	4074
   104   000FE9                     fsr0l           equ	4073
   105   000FE1                     fsr1            equ	4065
   106   000FE2                     fsr1h           equ	4066
   107   000FE1                     fsr1l           equ	4065
   108   000FD9                     fsr2            equ	4057
   109   000FDA                     fsr2h           equ	4058
   110   000FD9                     fsr2l           equ	4057
   111   000FEF                     indf0           equ	4079
   112   000FE7                     indf1           equ	4071
   113   000FDF                     indf2           equ	4063
   114   000FF2                     intcon          equ	4082
   115   000000                     nvmcon          equ	0
   116   000FF9                     pcl             equ	4089
   117   000FFA                     pclath          equ	4090
   118   000FFB                     pclatu          equ	4091
   119   000FEB                     plusw0          equ	4075
   120   000FE3                     plusw1          equ	4067
   121   000FDB                     plusw2          equ	4059
   122   000FED                     postdec0        equ	4077
   123   000FE5                     postdec1        equ	4069
   124   000FDD                     postdec2        equ	4061
   125   000FEE                     postinc0        equ	4078
   126   000FE6                     postinc1        equ	4070
   127   000FDE                     postinc2        equ	4062
   128   000FEC                     preinc0         equ	4076
   129   000FE4                     preinc1         equ	4068
   130   000FDC                     preinc2         equ	4060
   131   000FF3                     prod            equ	4083
   132   000FF4                     prodh           equ	4084
   133   000FF3                     prodl           equ	4083
   134   000FD8                     status          equ	4056
   135   000FF5                     tablat          equ	4085
   136   000FF6                     tblptr          equ	4086
   137   000FF7                     tblptrh         equ	4087
   138   000FF6                     tblptrl         equ	4086
   139   000FF8                     tblptru         equ	4088
   140   000FFD                     tosl            equ	4093
   141   000FE8                     wreg            equ	4072
   142   000F62                     SPPDATA         equ	3938	;# 
   143   000F63                     SPPCFG          equ	3939	;# 
   144   000F64                     SPPEPS          equ	3940	;# 
   145   000F65                     SPPCON          equ	3941	;# 
   146   000F66                     UFRM            equ	3942	;# 
   147   000F66                     UFRML           equ	3942	;# 
   148   000F67                     UFRMH           equ	3943	;# 
   149   000F68                     UIR             equ	3944	;# 
   150   000F69                     UIE             equ	3945	;# 
   151   000F6A                     UEIR            equ	3946	;# 
   152   000F6B                     UEIE            equ	3947	;# 
   153   000F6C                     USTAT           equ	3948	;# 
   154   000F6D                     UCON            equ	3949	;# 
   155   000F6E                     UADDR           equ	3950	;# 
   156   000F6F                     UCFG            equ	3951	;# 
   157   000F70                     UEP0            equ	3952	;# 
   158   000F71                     UEP1            equ	3953	;# 
   159   000F72                     UEP2            equ	3954	;# 
   160   000F73                     UEP3            equ	3955	;# 
   161   000F74                     UEP4            equ	3956	;# 
   162   000F75                     UEP5            equ	3957	;# 
   163   000F76                     UEP6            equ	3958	;# 
   164   000F77                     UEP7            equ	3959	;# 
   165   000F78                     UEP8            equ	3960	;# 
   166   000F79                     UEP9            equ	3961	;# 
   167   000F7A                     UEP10           equ	3962	;# 
   168   000F7B                     UEP11           equ	3963	;# 
   169   000F7C                     UEP12           equ	3964	;# 
   170   000F7D                     UEP13           equ	3965	;# 
   171   000F7E                     UEP14           equ	3966	;# 
   172   000F7F                     UEP15           equ	3967	;# 
   173   000F80                     PORTA           equ	3968	;# 
   174   000F81                     PORTB           equ	3969	;# 
   175   000F82                     PORTC           equ	3970	;# 
   176   000F83                     PORTD           equ	3971	;# 
   177   000F84                     PORTE           equ	3972	;# 
   178   000F89                     LATA            equ	3977	;# 
   179   000F8A                     LATB            equ	3978	;# 
   180   000F8B                     LATC            equ	3979	;# 
   181   000F8C                     LATD            equ	3980	;# 
   182   000F8D                     LATE            equ	3981	;# 
   183   000F92                     TRISA           equ	3986	;# 
   184   000F92                     DDRA            equ	3986	;# 
   185   000F93                     TRISB           equ	3987	;# 
   186   000F93                     DDRB            equ	3987	;# 
   187   000F94                     TRISC           equ	3988	;# 
   188   000F94                     DDRC            equ	3988	;# 
   189   000F95                     TRISD           equ	3989	;# 
   190   000F95                     DDRD            equ	3989	;# 
   191   000F96                     TRISE           equ	3990	;# 
   192   000F96                     DDRE            equ	3990	;# 
   193   000F9B                     OSCTUNE         equ	3995	;# 
   194   000F9D                     PIE1            equ	3997	;# 
   195   000F9E                     PIR1            equ	3998	;# 
   196   000F9F                     IPR1            equ	3999	;# 
   197   000FA0                     PIE2            equ	4000	;# 
   198   000FA1                     PIR2            equ	4001	;# 
   199   000FA2                     IPR2            equ	4002	;# 
   200   000FA6                     EECON1          equ	4006	;# 
   201   000FA7                     EECON2          equ	4007	;# 
   202   000FA8                     EEDATA          equ	4008	;# 
   203   000FA9                     EEADR           equ	4009	;# 
   204   000FAB                     RCSTA           equ	4011	;# 
   205   000FAB                     RCSTA1          equ	4011	;# 
   206   000FAC                     TXSTA           equ	4012	;# 
   207   000FAC                     TXSTA1          equ	4012	;# 
   208   000FAD                     TXREG           equ	4013	;# 
   209   000FAD                     TXREG1          equ	4013	;# 
   210   000FAE                     RCREG           equ	4014	;# 
   211   000FAE                     RCREG1          equ	4014	;# 
   212   000FAF                     SPBRG           equ	4015	;# 
   213   000FAF                     SPBRG1          equ	4015	;# 
   214   000FB0                     SPBRGH          equ	4016	;# 
   215   000FB1                     T3CON           equ	4017	;# 
   216   000FB2                     TMR3            equ	4018	;# 
   217   000FB2                     TMR3L           equ	4018	;# 
   218   000FB3                     TMR3H           equ	4019	;# 
   219   000FB4                     CMCON           equ	4020	;# 
   220   000FB5                     CVRCON          equ	4021	;# 
   221   000FB6                     ECCP1AS         equ	4022	;# 
   222   000FB6                     CCP1AS          equ	4022	;# 
   223   000FB7                     ECCP1DEL        equ	4023	;# 
   224   000FB7                     CCP1DEL         equ	4023	;# 
   225   000FB8                     BAUDCON         equ	4024	;# 
   226   000FB8                     BAUDCTL         equ	4024	;# 
   227   000FBA                     CCP2CON         equ	4026	;# 
   228   000FBB                     CCPR2           equ	4027	;# 
   229   000FBB                     CCPR2L          equ	4027	;# 
   230   000FBC                     CCPR2H          equ	4028	;# 
   231   000FBD                     CCP1CON         equ	4029	;# 
   232   000FBD                     ECCP1CON        equ	4029	;# 
   233   000FBE                     CCPR1           equ	4030	;# 
   234   000FBE                     CCPR1L          equ	4030	;# 
   235   000FBF                     CCPR1H          equ	4031	;# 
   236   000FC0                     ADCON2          equ	4032	;# 
   237   000FC1                     ADCON1          equ	4033	;# 
   238   000FC2                     ADCON0          equ	4034	;# 
   239   000FC3                     ADRES           equ	4035	;# 
   240   000FC3                     ADRESL          equ	4035	;# 
   241   000FC4                     ADRESH          equ	4036	;# 
   242   000FC5                     SSPCON2         equ	4037	;# 
   243   000FC6                     SSPCON1         equ	4038	;# 
   244   000FC7                     SSPSTAT         equ	4039	;# 
   245   000FC8                     SSPADD          equ	4040	;# 
   246   000FC9                     SSPBUF          equ	4041	;# 
   247   000FCA                     T2CON           equ	4042	;# 
   248   000FCB                     PR2             equ	4043	;# 
   249   000FCB                     MEMCON          equ	4043	;# 
   250   000FCC                     TMR2            equ	4044	;# 
   251   000FCD                     T1CON           equ	4045	;# 
   252   000FCE                     TMR1            equ	4046	;# 
   253   000FCE                     TMR1L           equ	4046	;# 
   254   000FCF                     TMR1H           equ	4047	;# 
   255   000FD0                     RCON            equ	4048	;# 
   256   000FD1                     WDTCON          equ	4049	;# 
   257   000FD2                     HLVDCON         equ	4050	;# 
   258   000FD2                     LVDCON          equ	4050	;# 
   259   000FD3                     OSCCON          equ	4051	;# 
   260   000FD5                     T0CON           equ	4053	;# 
   261   000FD6                     TMR0            equ	4054	;# 
   262   000FD6                     TMR0L           equ	4054	;# 
   263   000FD7                     TMR0H           equ	4055	;# 
   264   000FD8                     STATUS          equ	4056	;# 
   265   000FD9                     FSR2            equ	4057	;# 
   266   000FD9                     FSR2L           equ	4057	;# 
   267   000FDA                     FSR2H           equ	4058	;# 
   268   000FDB                     PLUSW2          equ	4059	;# 
   269   000FDC                     PREINC2         equ	4060	;# 
   270   000FDD                     POSTDEC2        equ	4061	;# 
   271   000FDE                     POSTINC2        equ	4062	;# 
   272   000FDF                     INDF2           equ	4063	;# 
   273   000FE0                     BSR             equ	4064	;# 
   274   000FE1                     FSR1            equ	4065	;# 
   275   000FE1                     FSR1L           equ	4065	;# 
   276   000FE2                     FSR1H           equ	4066	;# 
   277   000FE3                     PLUSW1          equ	4067	;# 
   278   000FE4                     PREINC1         equ	4068	;# 
   279   000FE5                     POSTDEC1        equ	4069	;# 
   280   000FE6                     POSTINC1        equ	4070	;# 
   281   000FE7                     INDF1           equ	4071	;# 
   282   000FE8                     WREG            equ	4072	;# 
   283   000FE9                     FSR0            equ	4073	;# 
   284   000FE9                     FSR0L           equ	4073	;# 
   285   000FEA                     FSR0H           equ	4074	;# 
   286   000FEB                     PLUSW0          equ	4075	;# 
   287   000FEC                     PREINC0         equ	4076	;# 
   288   000FED                     POSTDEC0        equ	4077	;# 
   289   000FEE                     POSTINC0        equ	4078	;# 
   290   000FEF                     INDF0           equ	4079	;# 
   291   000FF0                     INTCON3         equ	4080	;# 
   292   000FF1                     INTCON2         equ	4081	;# 
   293   000FF2                     INTCON          equ	4082	;# 
   294   000FF3                     PROD            equ	4083	;# 
   295   000FF3                     PRODL           equ	4083	;# 
   296   000FF4                     PRODH           equ	4084	;# 
   297   000FF5                     TABLAT          equ	4085	;# 
   298   000FF6                     TBLPTR          equ	4086	;# 
   299   000FF6                     TBLPTRL         equ	4086	;# 
   300   000FF7                     TBLPTRH         equ	4087	;# 
   301   000FF8                     TBLPTRU         equ	4088	;# 
   302   000FF9                     PCLAT           equ	4089	;# 
   303   000FF9                     PC              equ	4089	;# 
   304   000FF9                     PCL             equ	4089	;# 
   305   000FFA                     PCLATH          equ	4090	;# 
   306   000FFB                     PCLATU          equ	4091	;# 
   307   000FFC                     STKPTR          equ	4092	;# 
   308   000FFD                     TOS             equ	4093	;# 
   309   000FFD                     TOSL            equ	4093	;# 
   310   000FFE                     TOSH            equ	4094	;# 
   311   000FFF                     TOSU            equ	4095	;# 
   312                           
   313                           	psect	idataBANK2
   314   001AB4                     __pidataBANK2:
   315                           	callstack 0
   316                           
   317                           ;initializer for _MQ2_Ro
   318   001AB4  0000               	dw	0
   319   001AB6  4120               	dw	16672
   320                           
   321                           	psect	mediumconst
   322   007DF2                     __pmediumconst:
   323                           	callstack 0
   324   007DF2  00                 	db	0
   325   007DF3                     _dp_l:
   326                           	callstack 0
   327   007DF3  0000               	dw	0
   328   007DF5  0000               	dw	0
   329   007DF7  CFDC               	dw	53212
   330   007DF9  35D1               	dw	13777
   331   007DFB                     __end_of_dp_l:
   332                           	callstack 0
   333   007DFB                     _dp_h:
   334                           	callstack 0
   335   007DFB  0000               	dw	0
   336   007DFD  0000               	dw	0
   337   007DFF  C000               	dw	49152
   338   007E01  3F15               	dw	16149
   339   007E03                     __end_of_dp_h:
   340                           	callstack 0
   341   007E03                     _bp:
   342                           	callstack 0
   343   007E03  0000               	dw	0
   344   007E05  3F80               	dw	16256
   345   007E07  0000               	dw	0
   346   007E09  3FC0               	dw	16320
   347   007E0B                     __end_of_bp:
   348                           	callstack 0
   349   007E0B  A570               	dw	42352
   350   007E0D  36EC               	dw	14060
   351   007E0F                     __end_of_ivln2_l:
   352                           	callstack 0
   353   007E0F  AA3B               	dw	43579
   354   007E11  3FB8               	dw	16312
   355   007E13                     __end_of_ivln2:
   356                           	callstack 0
   357   007E13  384F               	dw	14415
   358   007E15  3F76               	dw	16246
   359   007E17                     __end_of_cp:
   360                           	callstack 0
   361   007E17  AA3C               	dw	43580
   362   007E19  3338               	dw	13112
   363   007E1B                     __end_of_ovt:
   364                           	callstack 0
   365   007E1B  BE8C               	dw	48780
   366   007E1D  35BF               	dw	13759
   367   007E1F                     __end_of_lg2_l:
   368                           	callstack 0
   369   007E1F  7200               	dw	29184
   370   007E21  3F31               	dw	16177
   371   007E23                     __end_of_lg2_h:
   372                           	callstack 0
   373   007E23  7218               	dw	29208
   374   007E25  3F31               	dw	16177
   375   007E27                     __end_of_lg2:
   376                           	callstack 0
   377   007E27  BB4C               	dw	47948
   378   007E29  3331               	dw	13105
   379   007E2B                     __end_of_P5:
   380                           	callstack 0
   381   007E2B  EA0E               	dw	59918
   382   007E2D  B5DD               	dw	46557
   383   007E2F                     __end_of_P4:
   384                           	callstack 0
   385   007E2F  B355               	dw	45909
   386   007E31  388A               	dw	14474
   387   007E33                     __end_of_P3:
   388                           	callstack 0
   389   007E33  0B61               	dw	2913
   390   007E35  BB36               	dw	47926
   391   007E37                     __end_of_P2:
   392                           	callstack 0
   393   007E37  AAAB               	dw	43691
   394   007E39  3E2A               	dw	15914
   395   007E3B                     __end_of_P1:
   396                           	callstack 0
   397   007E3B  F142               	dw	61762
   398   007E3D  3E53               	dw	15955
   399   007E3F                     __end_of_L6:
   400                           	callstack 0
   401   007E3F  3255               	dw	12885
   402   007E41  3E6C               	dw	15980
   403   007E43                     __end_of_L5:
   404                           	callstack 0
   405   007E43  A305               	dw	41733
   406   007E45  3E8B               	dw	16011
   407   007E47                     __end_of_L4:
   408                           	callstack 0
   409   007E47  AAAB               	dw	43691
   410   007E49  3EAA               	dw	16042
   411   007E4B                     __end_of_L3:
   412                           	callstack 0
   413   007E4B  6DB7               	dw	28087
   414   007E4D  3EDB               	dw	16091
   415   007E4F                     __end_of_L2:
   416                           	callstack 0
   417   007E4F  999A               	dw	39322
   418   007E51  3F19               	dw	16153
   419   007E53                     __end_of_L1:
   420                           	callstack 0
   421   007E53  0000               	dw	0
   422   007E55  4B80               	dw	19328
   423   007E57                     __end_of_two24:
   424                           	callstack 0
   425   007E57  AA00               	dw	43520
   426   007E59  3FB8               	dw	16312
   427   007E5B                     __end_of_ivln2_h:
   428                           	callstack 0
   429   007E5B  23C6               	dw	9158
   430   007E5D  B8F6               	dw	47350
   431   007E5F                     __end_of_cp_l:
   432                           	callstack 0
   433   007E5F  4000               	dw	16384
   434   007E61  3F76               	dw	16246
   435   007E63                     __end_of_cp_h:
   436                           	callstack 0
   437   007CA7                     _TRISC7         set	31911
   438   007CA6                     _TRISC6         set	31910
   439   007C92                     _TRISA2         set	31890
   440   007C91                     _TRISA1         set	31889
   441   007C90                     _TRISA0         set	31888
   442   000F81                     _PORTBbits      set	3969
   443   000F81                     _PORTB          set	3969
   444   000F93                     _TRISB          set	3987
   445   000FD3                     _OSCCON         set	4051
   446   000FAE                     _RCREG          set	4014
   447   000F9E                     _PIR1bits       set	3998
   448   000FAD                     _TXREG          set	4013
   449   000FAB                     _RCSTAbits      set	4011
   450   000FAC                     _TXSTAbits      set	4012
   451   000FAF                     _SPBRG          set	4015
   452   000FC3                     _ADRESL         set	4035
   453   000FC4                     _ADRESH         set	4036
   454   000FC0                     _ADCON2         set	4032
   455   000FC1                     _ADCON1         set	4033
   456   000FC2                     _ADCON0bits     set	4034
   457   007E63                     STR_5:
   458   007E63  7B                 	db	123
   459   007E64  22                 	db	34
   460   007E65  74                 	db	116	;'t'
   461   007E66  65                 	db	101	;'e'
   462   007E67  6D                 	db	109	;'m'
   463   007E68  70                 	db	112	;'p'
   464   007E69  22                 	db	34
   465   007E6A  3A                 	db	58	;':'
   466   007E6B  25                 	db	37
   467   007E6C  2E                 	db	46
   468   007E6D  31                 	db	49	;'1'
   469   007E6E  66                 	db	102	;'f'
   470   007E6F  2C                 	db	44
   471   007E70  22                 	db	34
   472   007E71  66                 	db	102	;'f'
   473   007E72  6C                 	db	108	;'l'
   474   007E73  61                 	db	97	;'a'
   475   007E74  6D                 	db	109	;'m'
   476   007E75  65                 	db	101	;'e'
   477   007E76  5F                 	db	95	;'_'
   478   007E77  64                 	db	100	;'d'
   479   007E78  65                 	db	101	;'e'
   480   007E79  74                 	db	116	;'t'
   481   007E7A  22                 	db	34
   482   007E7B  3A                 	db	58	;':'
   483   007E7C  25                 	db	37
   484   007E7D  64                 	db	100	;'d'
   485   007E7E  2C                 	db	44
   486   007E7F  22                 	db	34
   487   007E80  66                 	db	102	;'f'
   488   007E81  6C                 	db	108	;'l'
   489   007E82  61                 	db	97	;'a'
   490   007E83  6D                 	db	109	;'m'
   491   007E84  65                 	db	101	;'e'
   492   007E85  5F                 	db	95	;'_'
   493   007E86  69                 	db	105	;'i'
   494   007E87  6E                 	db	110	;'n'
   495   007E88  74                 	db	116	;'t'
   496   007E89  22                 	db	34
   497   007E8A  3A                 	db	58	;':'
   498   007E8B  25                 	db	37
   499   007E8C  2E                 	db	46
   500   007E8D  31                 	db	49	;'1'
   501   007E8E  66                 	db	102	;'f'
   502   007E8F  2C                 	db	44
   503   007E90  22                 	db	34
   504   007E91  63                 	db	99	;'c'
   505   007E92  6F                 	db	111	;'o'
   506   007E93  5F                 	db	95	;'_'
   507   007E94  70                 	db	112	;'p'
   508   007E95  70                 	db	112	;'p'
   509   007E96  6D                 	db	109	;'m'
   510   007E97  22                 	db	34
   511   007E98  3A                 	db	58	;':'
   512   007E99  25                 	db	37
   513   007E9A  2E                 	db	46
   514   007E9B  31                 	db	49	;'1'
   515   007E9C  66                 	db	102	;'f'
   516   007E9D  2C                 	db	44
   517   007E9E  22                 	db	34
   518   007E9F  70                 	db	112	;'p'
   519   007EA0  75                 	db	117	;'u'
   520   007EA1  6D                 	db	109	;'m'
   521   007EA2  70                 	db	112	;'p'
   522   007EA3  22                 	db	34
   523   007EA4  3A                 	db	58	;':'
   524   007EA5  25                 	db	37
   525   007EA6  64                 	db	100	;'d'
   526   007EA7  2C                 	db	44
   527   007EA8  22                 	db	34
   528   007EA9  61                 	db	97	;'a'
   529   007EAA  6C                 	db	108	;'l'
   530   007EAB  61                 	db	97	;'a'
   531   007EAC  72                 	db	114	;'r'
   532   007EAD  6D                 	db	109	;'m'
   533   007EAE  22                 	db	34
   534   007EAF  3A                 	db	58	;':'
   535   007EB0  25                 	db	37
   536   007EB1  64                 	db	100	;'d'
   537   007EB2  7D                 	db	125
   538   007EB3  0D                 	db	13
   539   007EB4  0A                 	db	10
   540   007EB5  00                 	db	0
   541   007EB6                     STR_10:
   542   007EB6  43                 	db	67	;'C'
   543   007EB7  6F                 	db	111	;'o'
   544   007EB8  6D                 	db	109	;'m'
   545   007EB9  61                 	db	97	;'a'
   546   007EBA  6E                 	db	110	;'n'
   547   007EBB  64                 	db	100	;'d'
   548   007EBC  6F                 	db	111	;'o'
   549   007EBD  20                 	db	32
   550   007EBE  4C                 	db	76	;'L'
   551   007EBF  45                 	db	69	;'E'
   552   007EC0  44                 	db	68	;'D'
   553   007EC1  20                 	db	32
   554   007EC2  4F                 	db	79	;'O'
   555   007EC3  46                 	db	70	;'F'
   556   007EC4  46                 	db	70	;'F'
   557   007EC5  20                 	db	32
   558   007EC6  72                 	db	114	;'r'
   559   007EC7  65                 	db	101	;'e'
   560   007EC8  63                 	db	99	;'c'
   561   007EC9  69                 	db	105	;'i'
   562   007ECA  62                 	db	98	;'b'
   563   007ECB  69                 	db	105	;'i'
   564   007ECC  64                 	db	100	;'d'
   565   007ECD  6F                 	db	111	;'o'
   566   007ECE  20                 	db	32
   567   007ECF  28                 	db	40
   568   007ED0  73                 	db	115	;'s'
   569   007ED1  69                 	db	105	;'i'
   570   007ED2  6E                 	db	110	;'n'
   571   007ED3  20                 	db	32
   572   007ED4  65                 	db	101	;'e'
   573   007ED5  66                 	db	102	;'f'
   574   007ED6  65                 	db	101	;'e'
   575   007ED7  63                 	db	99	;'c'
   576   007ED8  74                 	db	116	;'t'
   577   007ED9  6F                 	db	111	;'o'
   578   007EDA  20                 	db	32
   579   007EDB  65                 	db	101	;'e'
   580   007EDC  6E                 	db	110	;'n'
   581   007EDD  20                 	db	32
   582   007EDE  61                 	db	97	;'a'
   583   007EDF  63                 	db	99	;'c'
   584   007EE0  74                 	db	116	;'t'
   585   007EE1  75                 	db	117	;'u'
   586   007EE2  61                 	db	97	;'a'
   587   007EE3  64                 	db	100	;'d'
   588   007EE4  6F                 	db	111	;'o'
   589   007EE5  72                 	db	114	;'r'
   590   007EE6  65                 	db	101	;'e'
   591   007EE7  73                 	db	115	;'s'
   592   007EE8  29                 	db	41
   593   007EE9  0D                 	db	13
   594   007EEA  0A                 	db	10
   595   007EEB  00                 	db	0
   596   007EEC                     STR_9:
   597   007EEC  43                 	db	67	;'C'
   598   007EED  6F                 	db	111	;'o'
   599   007EEE  6D                 	db	109	;'m'
   600   007EEF  61                 	db	97	;'a'
   601   007EF0  6E                 	db	110	;'n'
   602   007EF1  64                 	db	100	;'d'
   603   007EF2  6F                 	db	111	;'o'
   604   007EF3  20                 	db	32
   605   007EF4  4C                 	db	76	;'L'
   606   007EF5  45                 	db	69	;'E'
   607   007EF6  44                 	db	68	;'D'
   608   007EF7  20                 	db	32
   609   007EF8  4F                 	db	79	;'O'
   610   007EF9  4E                 	db	78	;'N'
   611   007EFA  20                 	db	32
   612   007EFB  72                 	db	114	;'r'
   613   007EFC  65                 	db	101	;'e'
   614   007EFD  63                 	db	99	;'c'
   615   007EFE  69                 	db	105	;'i'
   616   007EFF  62                 	db	98	;'b'
   617   007F00  69                 	db	105	;'i'
   618   007F01  64                 	db	100	;'d'
   619   007F02  6F                 	db	111	;'o'
   620   007F03  20                 	db	32
   621   007F04  28                 	db	40
   622   007F05  73                 	db	115	;'s'
   623   007F06  69                 	db	105	;'i'
   624   007F07  6E                 	db	110	;'n'
   625   007F08  20                 	db	32
   626   007F09  65                 	db	101	;'e'
   627   007F0A  66                 	db	102	;'f'
   628   007F0B  65                 	db	101	;'e'
   629   007F0C  63                 	db	99	;'c'
   630   007F0D  74                 	db	116	;'t'
   631   007F0E  6F                 	db	111	;'o'
   632   007F0F  20                 	db	32
   633   007F10  65                 	db	101	;'e'
   634   007F11  6E                 	db	110	;'n'
   635   007F12  20                 	db	32
   636   007F13  61                 	db	97	;'a'
   637   007F14  63                 	db	99	;'c'
   638   007F15  74                 	db	116	;'t'
   639   007F16  75                 	db	117	;'u'
   640   007F17  61                 	db	97	;'a'
   641   007F18  64                 	db	100	;'d'
   642   007F19  6F                 	db	111	;'o'
   643   007F1A  72                 	db	114	;'r'
   644   007F1B  65                 	db	101	;'e'
   645   007F1C  73                 	db	115	;'s'
   646   007F1D  29                 	db	41
   647   007F1E  0D                 	db	13
   648   007F1F  0A                 	db	10
   649   007F20  00                 	db	0
   650   007F21                     STR_8:
   651   007F21  50                 	db	80	;'P'
   652   007F22  49                 	db	73	;'I'
   653   007F23  43                 	db	67	;'C'
   654   007F24  31                 	db	49	;'1'
   655   007F25  38                 	db	56	;'8'
   656   007F26  46                 	db	70	;'F'
   657   007F27  34                 	db	52	;'4'
   658   007F28  35                 	db	53	;'5'
   659   007F29  35                 	db	53	;'5'
   660   007F2A  30                 	db	48	;'0'
   661   007F2B  20                 	db	32
   662   007F2C  69                 	db	105	;'i'
   663   007F2D  6E                 	db	110	;'n'
   664   007F2E  69                 	db	105	;'i'
   665   007F2F  63                 	db	99	;'c'
   666   007F30  69                 	db	105	;'i'
   667   007F31  61                 	db	97	;'a'
   668   007F32  64                 	db	100	;'d'
   669   007F33  6F                 	db	111	;'o'
   670   007F34  20                 	db	32
   671   007F35  63                 	db	99	;'c'
   672   007F36  6F                 	db	111	;'o'
   673   007F37  6E                 	db	110	;'n'
   674   007F38  20                 	db	32
   675   007F39  73                 	db	115	;'s'
   676   007F3A  69                 	db	105	;'i'
   677   007F3B  73                 	db	115	;'s'
   678   007F3C  74                 	db	116	;'t'
   679   007F3D  65                 	db	101	;'e'
   680   007F3E  6D                 	db	109	;'m'
   681   007F3F  61                 	db	97	;'a'
   682   007F40  20                 	db	32
   683   007F41  61                 	db	97	;'a'
   684   007F42  6E                 	db	110	;'n'
   685   007F43  74                 	db	116	;'t'
   686   007F44  69                 	db	105	;'i'
   687   007F45  2D                 	db	45
   688   007F46  69                 	db	105	;'i'
   689   007F47  6E                 	db	110	;'n'
   690   007F48  63                 	db	99	;'c'
   691   007F49  65                 	db	101	;'e'
   692   007F4A  6E                 	db	110	;'n'
   693   007F4B  64                 	db	100	;'d'
   694   007F4C  69                 	db	105	;'i'
   695   007F4D  6F                 	db	111	;'o'
   696   007F4E  73                 	db	115	;'s'
   697   007F4F  0D                 	db	13
   698   007F50  0A                 	db	10
   699   007F51  00                 	db	0
   700   007F52                     STR_1:
   701   007F52  43                 	db	67	;'C'
   702   007F53  61                 	db	97	;'a'
   703   007F54  6C                 	db	108	;'l'
   704   007F55  69                 	db	105	;'i'
   705   007F56  62                 	db	98	;'b'
   706   007F57  72                 	db	114	;'r'
   707   007F58  61                 	db	97	;'a'
   708   007F59  63                 	db	99	;'c'
   709   007F5A  69                 	db	105	;'i'
   710   007F5B  6F                 	db	111	;'o'
   711   007F5C  6E                 	db	110	;'n'
   712   007F5D  20                 	db	32
   713   007F5E  66                 	db	102	;'f'
   714   007F5F  6C                 	db	108	;'l'
   715   007F60  61                 	db	97	;'a'
   716   007F61  6D                 	db	109	;'m'
   717   007F62  61                 	db	97	;'a'
   718   007F63  20                 	db	32
   719   007F64  63                 	db	99	;'c'
   720   007F65  6F                 	db	111	;'o'
   721   007F66  6D                 	db	109	;'m'
   722   007F67  70                 	db	112	;'p'
   723   007F68  6C                 	db	108	;'l'
   724   007F69  65                 	db	101	;'e'
   725   007F6A  74                 	db	116	;'t'
   726   007F6B  61                 	db	97	;'a'
   727   007F6C  64                 	db	100	;'d'
   728   007F6D  61                 	db	97	;'a'
   729   007F6E  2E                 	db	46
   730   007F6F  20                 	db	32
   731   007F70  56                 	db	86	;'V'
   732   007F71  6F                 	db	111	;'o'
   733   007F72  6C                 	db	108	;'l'
   734   007F73  74                 	db	116	;'t'
   735   007F74  61                 	db	97	;'a'
   736   007F75  6A                 	db	106	;'j'
   737   007F76  65                 	db	101	;'e'
   738   007F77  20                 	db	32
   739   007F78  62                 	db	98	;'b'
   740   007F79  61                 	db	97	;'a'
   741   007F7A  73                 	db	115	;'s'
   742   007F7B  65                 	db	101	;'e'
   743   007F7C  3A                 	db	58	;':'
   744   007F7D  20                 	db	32
   745   007F7E  00                 	db	0
   746   007F7F                     STR_11:
   747   007F7F  43                 	db	67	;'C'
   748   007F80  6F                 	db	111	;'o'
   749   007F81  6D                 	db	109	;'m'
   750   007F82  61                 	db	97	;'a'
   751   007F83  6E                 	db	110	;'n'
   752   007F84  64                 	db	100	;'d'
   753   007F85  6F                 	db	111	;'o'
   754   007F86  20                 	db	32
   755   007F87  6E                 	db	110	;'n'
   756   007F88  6F                 	db	111	;'o'
   757   007F89  20                 	db	32
   758   007F8A  72                 	db	114	;'r'
   759   007F8B  65                 	db	101	;'e'
   760   007F8C  63                 	db	99	;'c'
   761   007F8D  6F                 	db	111	;'o'
   762   007F8E  6E                 	db	110	;'n'
   763   007F8F  6F                 	db	111	;'o'
   764   007F90  63                 	db	99	;'c'
   765   007F91  69                 	db	105	;'i'
   766   007F92  64                 	db	100	;'d'
   767   007F93  6F                 	db	111	;'o'
   768   007F94  2E                 	db	46
   769   007F95  20                 	db	32
   770   007F96  55                 	db	85	;'U'
   771   007F97  73                 	db	115	;'s'
   772   007F98  65                 	db	101	;'e'
   773   007F99  20                 	db	32
   774   007F9A  31                 	db	49	;'1'
   775   007F9B  3D                 	db	61	;'='
   776   007F9C  4F                 	db	79	;'O'
   777   007F9D  4E                 	db	78	;'N'
   778   007F9E  2C                 	db	44
   779   007F9F  20                 	db	32
   780   007FA0  30                 	db	48	;'0'
   781   007FA1  3D                 	db	61	;'='
   782   007FA2  4F                 	db	79	;'O'
   783   007FA3  46                 	db	70	;'F'
   784   007FA4  46                 	db	70	;'F'
   785   007FA5  0D                 	db	13
   786   007FA6  0A                 	db	10
   787   007FA7  00                 	db	0
   788   007FA8                     STR_3:
   789   007FA8  43                 	db	67	;'C'
   790   007FA9  61                 	db	97	;'a'
   791   007FAA  6C                 	db	108	;'l'
   792   007FAB  69                 	db	105	;'i'
   793   007FAC  62                 	db	98	;'b'
   794   007FAD  72                 	db	114	;'r'
   795   007FAE  61                 	db	97	;'a'
   796   007FAF  63                 	db	99	;'c'
   797   007FB0  69                 	db	105	;'i'
   798   007FB1  6F                 	db	111	;'o'
   799   007FB2  6E                 	db	110	;'n'
   800   007FB3  20                 	db	32
   801   007FB4  4D                 	db	77	;'M'
   802   007FB5  51                 	db	81	;'Q'
   803   007FB6  32                 	db	50	;'2'
   804   007FB7  20                 	db	32
   805   007FB8  63                 	db	99	;'c'
   806   007FB9  6F                 	db	111	;'o'
   807   007FBA  6D                 	db	109	;'m'
   808   007FBB  70                 	db	112	;'p'
   809   007FBC  6C                 	db	108	;'l'
   810   007FBD  65                 	db	101	;'e'
   811   007FBE  74                 	db	116	;'t'
   812   007FBF  61                 	db	97	;'a'
   813   007FC0  64                 	db	100	;'d'
   814   007FC1  61                 	db	97	;'a'
   815   007FC2  2E                 	db	46
   816   007FC3  20                 	db	32
   817   007FC4  52                 	db	82	;'R'
   818   007FC5  6F                 	db	111	;'o'
   819   007FC6  3A                 	db	58	;':'
   820   007FC7  20                 	db	32
   821   007FC8  00                 	db	0
   822   007FC9                     STR_6:
   823   007FC9  50                 	db	80	;'P'
   824   007FCA  72                 	db	114	;'r'
   825   007FCB  65                 	db	101	;'e'
   826   007FCC  63                 	db	99	;'c'
   827   007FCD  61                 	db	97	;'a'
   828   007FCE  6C                 	db	108	;'l'
   829   007FCF  65                 	db	101	;'e'
   830   007FD0  6E                 	db	110	;'n'
   831   007FD1  74                 	db	116	;'t'
   832   007FD2  61                 	db	97	;'a'
   833   007FD3  6E                 	db	110	;'n'
   834   007FD4  64                 	db	100	;'d'
   835   007FD5  6F                 	db	111	;'o'
   836   007FD6  20                 	db	32
   837   007FD7  73                 	db	115	;'s'
   838   007FD8  65                 	db	101	;'e'
   839   007FD9  6E                 	db	110	;'n'
   840   007FDA  73                 	db	115	;'s'
   841   007FDB  6F                 	db	111	;'o'
   842   007FDC  72                 	db	114	;'r'
   843   007FDD  65                 	db	101	;'e'
   844   007FDE  73                 	db	115	;'s'
   845   007FDF  2E                 	db	46
   846   007FE0  2E                 	db	46
   847   007FE1  2E                 	db	46
   848   007FE2  0D                 	db	13
   849   007FE3  0A                 	db	10
   850   007FE4  00                 	db	0
   851   007FE5                     STR_2:
   852   007FE5  25                 	db	37
   853   007FE6  2E                 	db	46
   854   007FE7  32                 	db	50	;'2'
   855   007FE8  66                 	db	102	;'f'
   856   007FE9  56                 	db	86	;'V'
   857   007FEA  0A                 	db	10
   858   007FEB  00                 	db	0
   859   007FEC                     STR_4:
   860   007FEC  25                 	db	37
   861   007FED  2E                 	db	46
   862   007FEE  32                 	db	50	;'2'
   863   007FEF  66                 	db	102	;'f'
   864   007FF0  0A                 	db	10
   865   007FF1  00                 	db	0
   866   007FF2                     STR_12:
   867   007FF2  69                 	db	105	;'i'
   868   007FF3  6E                 	db	110	;'n'
   869   007FF4  66                 	db	102	;'f'
   870   007FF5  00                 	db	0
   871   007FF6                     STR_15:
   872   007FF6  6E                 	db	110	;'n'
   873   007FF7  61                 	db	97	;'a'
   874   007FF8  6E                 	db	110	;'n'
   875   007FF9  00                 	db	0
   876   007FF6                     STR_16          equ	STR_15
   877   007FF6                     STR_17          equ	STR_15
   878   007FF2                     STR_13          equ	STR_12
   879   007FF2                     STR_14          equ	STR_12
   880   007EE9                     STR_7           equ	STR_10+51
   881   007FFA  00                 	db	0	; dummy byte at the end
   882   007DF2                     __smallconst    set	__pmediumconst
   883   007DF2                     __mediumconst   set	__pmediumconst
   884   000002                     __activetblptr  equ	2
   885                           
   886                           ; #config settings
   887                           
   888                           	psect	cinit
   889   001D18                     __pcinit:
   890                           	callstack 0
   891   001D18                     start_initialization:
   892                           	callstack 0
   893   001D18                     __initialization:
   894                           	callstack 0
   895                           
   896                           ; Initialize objects allocated to BANK2 (4 bytes)
   897                           ; load TBLPTR registers with __pidataBANK2
   898   001D18  0EB4               	movlw	low __pidataBANK2
   899   001D1A  6EF6               	movwf	tblptrl,c
   900   001D1C  0E1A               	movlw	high __pidataBANK2
   901   001D1E  6EF7               	movwf	tblptrh,c
   902   001D20  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   903   001D22  6EF8               	movwf	tblptru,c
   904   001D24  EE02  F091         	lfsr	0,__pdataBANK2
   905   001D28  EE10 F004          	lfsr	1,4
   906   001D2C                     copy_data0:
   907   001D2C  0009               	tblrd		*+
   908   001D2E  CFF5 FFEE          	movff	tablat,postinc0
   909   001D32  50E5               	movf	postdec1,w,c
   910   001D34  50E1               	movf	fsr1l,w,c
   911   001D36  E1FA               	bnz	copy_data0
   912                           
   913                           ; Clear objects allocated to BANK2 (134 bytes)
   914   001D38  EE02  F000         	lfsr	0,__pbssBANK2
   915   001D3C  0E86               	movlw	134
   916   001D3E                     clear_0:
   917   001D3E  6AEE               	clrf	postinc0,c
   918   001D40  06E8               	decf	wreg,f,c
   919   001D42  E1FD               	bnz	clear_0
   920                           
   921                           ; Clear objects allocated to BANK1 (5 bytes)
   922   001D44  0101               	movlb	1
   923   001D46  6BFE               	clrf	(__pbssBANK1+4)& (0+255),b
   924   001D48  6BFD               	clrf	(__pbssBANK1+3)& (0+255),b
   925   001D4A  6BFC               	clrf	(__pbssBANK1+2)& (0+255),b
   926   001D4C  6BFB               	clrf	(__pbssBANK1+1)& (0+255),b
   927   001D4E  6BFA               	clrf	__pbssBANK1& (0+255),b
   928                           
   929                           ; Clear objects allocated to BANK0 (3 bytes)
   930   001D50  0100               	movlb	0
   931   001D52  6BFF               	clrf	(__pbssBANK0+2)& (0+255),b
   932   001D54  6BFE               	clrf	(__pbssBANK0+1)& (0+255),b
   933   001D56  6BFD               	clrf	__pbssBANK0& (0+255),b
   934   001D58                     end_of_initialization:
   935                           	callstack 0
   936   001D58                     __end_of__initialization:
   937                           	callstack 0
   938   001D58  0E00               	movlw	low (__Lmediumconst shr (0+16))
   939   001D5A  6EF8               	movwf	tblptru,c
   940   001D5C  0100               	movlb	0
   941   001D5E  EF98  F01B         	goto	_main	;jump to C main() function
   942                           
   943                           	psect	bssBANK0
   944   0000FD                     __pbssBANK0:
   945                           	callstack 0
   946   0000FD                     _prec:
   947                           	callstack 0
   948   0000FD                     	ds	2
   949   0000FF                     _mq2_history_index:
   950                           	callstack 0
   951   0000FF                     	ds	1
   952                           
   953                           	psect	bssBANK1
   954   0001FA                     __pbssBANK1:
   955                           	callstack 0
   956   0001FA                     _flags:
   957                           	callstack 0
   958   0001FA                     	ds	1
   959   0001FB                     Read_MQ2_Sensor@calibrated:
   960                           	callstack 0
   961   0001FB                     	ds	1
   962   0001FC                     Read_Flame_Sensor@last_detected:
   963                           	callstack 0
   964   0001FC                     	ds	1
   965   0001FD                     _flame_detected:
   966                           	callstack 0
   967   0001FD                     	ds	1
   968   0001FE                     _flame_calibrated:
   969                           	callstack 0
   970   0001FE                     	ds	1
   971                           
   972                           	psect	bssBANK2
   973   000200                     __pbssBANK2:
   974                           	callstack 0
   975   000200                     _mq2_history:
   976                           	callstack 0
   977   000200                     	ds	20
   978   000214                     floorf@F521:
   979                           	callstack 0
   980   000214                     	ds	4
   981   000218                     ___fpclassifyf@F465:
   982                           	callstack 0
   983   000218                     	ds	4
   984   00021C                     _calibrationCounter:
   985                           	callstack 0
   986   00021C                     	ds	4
   987   000220                     _co_ppm:
   988                           	callstack 0
   989   000220                     	ds	4
   990   000224                     _flame_base_voltage:
   991                           	callstack 0
   992   000224                     	ds	4
   993   000228                     _flame_intensity:
   994                           	callstack 0
   995   000228                     	ds	4
   996   00022C                     _temperature:
   997                           	callstack 0
   998   00022C                     	ds	4
   999   000230                     _errno:
  1000                           	callstack 0
  1001   000230                     	ds	2
  1002   000232                     _width:
  1003                           	callstack 0
  1004   000232                     	ds	2
  1005   000234                     _alarm_active:
  1006                           	callstack 0
  1007   000234                     	ds	1
  1008   000235                     _pump_active:
  1009                           	callstack 0
  1010   000235                     	ds	1
  1011   000236                     _dbuf:
  1012                           	callstack 0
  1013   000236                     	ds	80
  1014                           
  1015                           	psect	dataBANK2
  1016   000291                     __pdataBANK2:
  1017                           	callstack 0
  1018   000291                     _MQ2_Ro:
  1019                           	callstack 0
  1020   000291                     	ds	4
  1021                           
  1022                           	psect	cstackBANK2
  1023   000286                     __pcstackBANK2:
  1024                           	callstack 0
  1025   000286                     ??_main:
  1026                           
  1027                           ; 1 bytes @ 0x0
  1028   000286                     	ds	2
  1029   000288                     main@fire_alarm:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x2
  1033   000288                     	ds	1
  1034   000289                     _main$444:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x3
  1038   000289                     	ds	1
  1039   00028A                     main@sensor_counter:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x4
  1043   00028A                     	ds	2
  1044   00028C                     main@alarm_blink_counter:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x6
  1048   00028C                     	ds	2
  1049   00028E                     main@i:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x8
  1053   00028E                     	ds	2
  1054   000290                     main@received_char:
  1055                           	callstack 0
  1056                           
  1057                           ; 1 bytes @ 0xA
  1058   000290                     	ds	1
  1059                           
  1060                           	psect	cstackBANK1
  1061   000100                     __pcstackBANK1:
  1062                           	callstack 0
  1063   000100                     Read_Flame_Sensor@voltage:
  1064                           	callstack 0
  1065   000100                     _powf$1494:
  1066                           	callstack 0
  1067   000100                     Calibrate_MQ2@cal_msg:
  1068                           	callstack 0
  1069   000100                     Send_Sensor_Data@buffer:
  1070                           	callstack 0
  1071                           
  1072                           ; 250 bytes @ 0x0
  1073   000100                     	ds	4
  1074   000104                     Read_Flame_Sensor@adc_value:
  1075                           	callstack 0
  1076   000104                     _powf$1495:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x4
  1080   000104                     	ds	2
  1081   000106                     Read_Flame_Sensor@intensity:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x6
  1085   000106                     	ds	2
  1086   000108                     _powf$1499:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x8
  1090   000108                     	ds	4
  1091   00010C                     _powf$1500:
  1092                           	callstack 0
  1093                           
  1094                           ; 4 bytes @ 0xC
  1095   00010C                     	ds	4
  1096   000110                     _powf$1501:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x10
  1100   000110                     	ds	4
  1101   000114                     _powf$1502:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x14
  1105   000114                     	ds	4
  1106   000118                     _powf$1503:
  1107                           	callstack 0
  1108                           
  1109                           ; 4 bytes @ 0x18
  1110   000118                     	ds	4
  1111   00011C                     powf@t2:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x1C
  1115   00011C                     	ds	2
  1116   00011E                     Calibrate_MQ2@Rs:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x1E
  1120   00011E                     	ds	2
  1121   000120                     powf@z_h:
  1122                           	callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x20
  1125   000120                     	ds	2
  1126   000122                     Calibrate_MQ2@adc_value:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x22
  1130   000122                     	ds	2
  1131   000124                     Calibrate_MQ2@voltage:
  1132                           	callstack 0
  1133   000124                     powf@z_l:
  1134                           	callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x24
  1137   000124                     	ds	4
  1138   000128                     Calibrate_MQ2@sum:
  1139                           	callstack 0
  1140   000128                     powf@i:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x28
  1144   000128                     	ds	4
  1145   00012C                     Calibrate_MQ2@i:
  1146                           	callstack 0
  1147   00012C                     powf@y1:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x2C
  1151   00012C                     	ds	4
  1152   000130                     powf@s_l:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x30
  1156   000130                     	ds	4
  1157   000134                     powf@t_l:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x34
  1161   000134                     	ds	4
  1162   000138                     _powf$1493:
  1163                           	callstack 0
  1164                           
  1165                           ; 4 bytes @ 0x38
  1166   000138                     	ds	4
  1167   00013C                     _powf$1497:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x3C
  1171   00013C                     	ds	4
  1172   000140                     _powf$1498:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x40
  1176   000140                     	ds	4
  1177   000144                     powf@w:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x44
  1181   000144                     	ds	4
  1182   000148                     _powf$1489:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x48
  1186   000148                     	ds	4
  1187   00014C                     _powf$1491:
  1188                           	callstack 0
  1189                           
  1190                           ; 4 bytes @ 0x4C
  1191   00014C                     	ds	4
  1192   000150                     powf@r:
  1193                           	callstack 0
  1194                           
  1195                           ; 4 bytes @ 0x50
  1196   000150                     	ds	4
  1197   000154                     powf@yisint:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x54
  1201   000154                     	ds	4
  1202   000158                     _powf$1490:
  1203                           	callstack 0
  1204                           
  1205                           ; 4 bytes @ 0x58
  1206   000158                     	ds	4
  1207   00015C                     _powf$1496:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x5C
  1211   00015C                     	ds	4
  1212   000160                     powf@s:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x60
  1216   000160                     	ds	4
  1217   000164                     powf@sn:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x64
  1221   000164                     	ds	4
  1222   000168                     powf@hx:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x68
  1226   000168                     	ds	4
  1227   00016C                     powf@p_l:
  1228                           	callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x6C
  1231   00016C                     	ds	4
  1232   000170                     powf@t_h:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x70
  1236   000170                     	ds	4
  1237   000174                     powf@s_h:
  1238                           	callstack 0
  1239                           
  1240                           ; 4 bytes @ 0x74
  1241   000174                     	ds	4
  1242   000178                     powf@ax:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x78
  1246   000178                     	ds	4
  1247   00017C                     powf@u:
  1248                           	callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x7C
  1251   00017C                     	ds	4
  1252   000180                     powf@v:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x80
  1256   000180                     	ds	4
  1257   000184                     powf@hy:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x84
  1261   000184                     	ds	4
  1262   000188                     powf@n:
  1263                           	callstack 0
  1264                           
  1265                           ; 4 bytes @ 0x88
  1266   000188                     	ds	4
  1267   00018C                     powf@t1:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x8C
  1271   00018C                     	ds	4
  1272   000190                     powf@s2:
  1273                           	callstack 0
  1274                           
  1275                           ; 4 bytes @ 0x90
  1276   000190                     	ds	4
  1277   000194                     powf@iy:
  1278                           	callstack 0
  1279                           
  1280                           ; 4 bytes @ 0x94
  1281   000194                     	ds	4
  1282   000198                     powf@is:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x98
  1286   000198                     	ds	4
  1287   00019C                     _powf$1492:
  1288                           	callstack 0
  1289                           
  1290                           ; 4 bytes @ 0x9C
  1291   00019C                     	ds	4
  1292   0001A0                     powf@p_h:
  1293                           	callstack 0
  1294                           
  1295                           ; 4 bytes @ 0xA0
  1296   0001A0                     	ds	4
  1297   0001A4                     powf@k:
  1298                           	callstack 0
  1299                           
  1300                           ; 4 bytes @ 0xA4
  1301   0001A4                     	ds	4
  1302   0001A8                     powf@j:
  1303                           	callstack 0
  1304                           
  1305                           ; 4 bytes @ 0xA8
  1306   0001A8                     	ds	4
  1307   0001AC                     powf@ix:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0xAC
  1311   0001AC                     	ds	4
  1312   0001B0                     powf@t:
  1313                           	callstack 0
  1314                           
  1315                           ; 4 bytes @ 0xB0
  1316   0001B0                     	ds	4
  1317   0001B4                     powf@z:
  1318                           	callstack 0
  1319                           
  1320                           ; 4 bytes @ 0xB4
  1321   0001B4                     	ds	4
  1322   0001B8                     Read_MQ2_Sensor@temp_factor:
  1323                           	callstack 0
  1324                           
  1325                           ; 4 bytes @ 0xB8
  1326   0001B8                     	ds	4
  1327   0001BC                     _Read_MQ2_Sensor$1487:
  1328                           	callstack 0
  1329                           
  1330                           ; 4 bytes @ 0xBC
  1331   0001BC                     	ds	4
  1332   0001C0                     Read_MQ2_Sensor@adc_value:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0xC0
  1336   0001C0                     	ds	2
  1337   0001C2                     Read_MQ2_Sensor@voltage:
  1338                           	callstack 0
  1339                           
  1340                           ; 4 bytes @ 0xC2
  1341   0001C2                     	ds	4
  1342   0001C6                     Read_MQ2_Sensor@Rs:
  1343                           	callstack 0
  1344                           
  1345                           ; 4 bytes @ 0xC6
  1346   0001C6                     	ds	4
  1347   0001CA                     Read_MQ2_Sensor@sum:
  1348                           	callstack 0
  1349                           
  1350                           ; 4 bytes @ 0xCA
  1351   0001CA                     	ds	4
  1352   0001CE                     Read_MQ2_Sensor@i:
  1353                           	callstack 0
  1354                           
  1355                           ; 2 bytes @ 0xCE
  1356   0001CE                     	ds	2
  1357   0001D0                     _Read_MQ2_Sensor$1488:
  1358                           	callstack 0
  1359                           
  1360                           ; 4 bytes @ 0xD0
  1361   0001D0                     	ds	4
  1362   0001D4                     Read_MQ2_Sensor@ppm:
  1363                           	callstack 0
  1364                           
  1365                           ; 4 bytes @ 0xD4
  1366   0001D4                     	ds	4
  1367   0001D8                     Read_MQ2_Sensor@rs_ro_ratio:
  1368                           	callstack 0
  1369                           
  1370                           ; 4 bytes @ 0xD8
  1371   0001D8                     	ds	34
  1372                           
  1373                           	psect	cstackBANK0
  1374   000060                     __pcstackBANK0:
  1375                           	callstack 0
  1376   000060                     ?_powf:
  1377                           	callstack 0
  1378   000060                     powf@x:
  1379                           	callstack 0
  1380   000060                     ??_floorf:
  1381                           
  1382                           ; 1 bytes @ 0x0
  1383   000060                     	ds	4
  1384   000064                     powf@y:
  1385                           	callstack 0
  1386                           
  1387                           ; 4 bytes @ 0x4
  1388   000064                     	ds	2
  1389   000066                     floorf@m:
  1390                           	callstack 0
  1391                           
  1392                           ; 4 bytes @ 0x6
  1393   000066                     	ds	2
  1394   000068                     ??_powf:
  1395                           
  1396                           ; 1 bytes @ 0x8
  1397   000068                     	ds	2
  1398   00006A                     floorf@e:
  1399                           	callstack 0
  1400                           
  1401                           ; 2 bytes @ 0xA
  1402   00006A                     	ds	2
  1403   00006C                     floorf@u:
  1404                           	callstack 0
  1405                           
  1406                           ; 4 bytes @ 0xC
  1407   00006C                     	ds	4
  1408   000070                     efgtoa@fp:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x10
  1412   000070                     	ds	1
  1413   000071                     efgtoa@f:
  1414                           	callstack 0
  1415                           
  1416                           ; 4 bytes @ 0x11
  1417   000071                     	ds	4
  1418   000075                     efgtoa@c:
  1419                           	callstack 0
  1420                           
  1421                           ; 1 bytes @ 0x15
  1422   000075                     	ds	1
  1423   000076                     efgtoa@ne:
  1424                           	callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x16
  1427   000076                     	ds	2
  1428   000078                     efgtoa@p:
  1429                           	callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x18
  1432   000078                     	ds	2
  1433   00007A                     efgtoa@t:
  1434                           	callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x1A
  1437   00007A                     	ds	2
  1438   00007C                     _efgtoa$1024:
  1439                           	callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x1C
  1442   00007C                     	ds	2
  1443   00007E                     efgtoa@pp:
  1444                           	callstack 0
  1445                           
  1446                           ; 1 bytes @ 0x1E
  1447   00007E                     	ds	1
  1448   00007F                     efgtoa@mode:
  1449                           	callstack 0
  1450                           
  1451                           ; 1 bytes @ 0x1F
  1452   00007F                     	ds	1
  1453   000080                     efgtoa@nmode:
  1454                           	callstack 0
  1455                           
  1456                           ; 1 bytes @ 0x20
  1457   000080                     	ds	1
  1458   000081                     efgtoa@d:
  1459                           	callstack 0
  1460                           
  1461                           ; 2 bytes @ 0x21
  1462   000081                     	ds	2
  1463   000083                     efgtoa@m:
  1464                           	callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x23
  1467   000083                     	ds	2
  1468   000085                     efgtoa@e:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x25
  1472   000085                     	ds	2
  1473   000087                     efgtoa@w:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x27
  1477   000087                     	ds	2
  1478   000089                     efgtoa@ou:
  1479                           	callstack 0
  1480                           
  1481                           ; 4 bytes @ 0x29
  1482   000089                     	ds	4
  1483   00008D                     efgtoa@i:
  1484                           	callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x2D
  1487   00008D                     	ds	2
  1488   00008F                     efgtoa@h:
  1489                           	callstack 0
  1490                           
  1491                           ; 4 bytes @ 0x2F
  1492   00008F                     	ds	4
  1493   000093                     efgtoa@l:
  1494                           	callstack 0
  1495                           
  1496                           ; 4 bytes @ 0x33
  1497   000093                     	ds	4
  1498   000097                     efgtoa@sign:
  1499                           	callstack 0
  1500                           
  1501                           ; 1 bytes @ 0x37
  1502   000097                     	ds	1
  1503   000098                     efgtoa@g:
  1504                           	callstack 0
  1505                           
  1506                           ; 4 bytes @ 0x38
  1507   000098                     	ds	4
  1508   00009C                     efgtoa@n:
  1509                           	callstack 0
  1510                           
  1511                           ; 2 bytes @ 0x3C
  1512   00009C                     	ds	2
  1513   00009E                     efgtoa@u:
  1514                           	callstack 0
  1515                           
  1516                           ; 4 bytes @ 0x3E
  1517   00009E                     	ds	4
  1518   0000A2                     vfpfcnvrt@fp:
  1519                           	callstack 0
  1520                           
  1521                           ; 1 bytes @ 0x42
  1522   0000A2                     	ds	1
  1523   0000A3                     vfpfcnvrt@fmt:
  1524                           	callstack 0
  1525                           
  1526                           ; 1 bytes @ 0x43
  1527   0000A3                     	ds	1
  1528   0000A4                     vfpfcnvrt@ap:
  1529                           	callstack 0
  1530                           
  1531                           ; 1 bytes @ 0x44
  1532   0000A4                     	ds	1
  1533   0000A5                     ??_vfpfcnvrt:
  1534                           
  1535                           ; 1 bytes @ 0x45
  1536   0000A5                     	ds	2
  1537   0000A7                     vfpfcnvrt@convarg:
  1538                           	callstack 0
  1539                           
  1540                           ; 4 bytes @ 0x47
  1541   0000A7                     	ds	4
  1542   0000AB                     vfpfcnvrt@c:
  1543                           	callstack 0
  1544                           
  1545                           ; 1 bytes @ 0x4B
  1546   0000AB                     	ds	1
  1547   0000AC                     vfpfcnvrt@cp:
  1548                           	callstack 0
  1549                           
  1550                           ; 2 bytes @ 0x4C
  1551   0000AC                     	ds	2
  1552   0000AE                     ?_vfprintf:
  1553                           	callstack 0
  1554   0000AE                     vfprintf@fp:
  1555                           	callstack 0
  1556                           
  1557                           ; 1 bytes @ 0x4E
  1558   0000AE                     	ds	1
  1559   0000AF                     vfprintf@fmt:
  1560                           	callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x4F
  1563   0000AF                     	ds	2
  1564   0000B1                     vfprintf@ap:
  1565                           	callstack 0
  1566                           
  1567                           ; 1 bytes @ 0x51
  1568   0000B1                     	ds	1
  1569   0000B2                     vfprintf@cfmt:
  1570                           	callstack 0
  1571                           
  1572                           ; 2 bytes @ 0x52
  1573   0000B2                     	ds	2
  1574   0000B4                     ?_sprintf:
  1575                           	callstack 0
  1576   0000B4                     sprintf@s:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x54
  1580   0000B4                     	ds	2
  1581   0000B6                     sprintf@fmt:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x56
  1585   0000B6                     	ds	20
  1586   0000CA                     sprintf@ap:
  1587                           	callstack 0
  1588                           
  1589                           ; 1 bytes @ 0x6A
  1590   0000CA                     	ds	1
  1591   0000CB                     sprintf@f:
  1592                           	callstack 0
  1593                           
  1594                           ; 11 bytes @ 0x6B
  1595   0000CB                     	ds	11
  1596   0000D6                     ??_Calibrate_Flame_Sensor:
  1597   0000D6                     ??_Calibrate_MQ2:
  1598                           
  1599                           ; 1 bytes @ 0x76
  1600   0000D6                     	ds	2
  1601   0000D8                     Calibrate_Flame_Sensor@cal_msg:
  1602                           	callstack 0
  1603   0000D8                     ??_Read_MQ2_Sensor:
  1604                           
  1605                           ; 1 bytes @ 0x78
  1606   0000D8                     	ds	30
  1607   0000F6                     Calibrate_Flame_Sensor@adc_value:
  1608                           	callstack 0
  1609                           
  1610                           ; 2 bytes @ 0x96
  1611   0000F6                     	ds	2
  1612   0000F8                     Calibrate_Flame_Sensor@sum:
  1613                           	callstack 0
  1614                           
  1615                           ; 4 bytes @ 0x98
  1616   0000F8                     	ds	4
  1617   0000FC                     Calibrate_Flame_Sensor@i:
  1618                           	callstack 0
  1619                           
  1620                           ; 1 bytes @ 0x9C
  1621   0000FC                     	ds	1
  1622                           
  1623                           	psect	cstackCOMRAM
  1624   000001                     __pcstackCOMRAM:
  1625                           	callstack 0
  1626   000001                     ?___fpclassifyf:
  1627                           	callstack 0
  1628   000001                     ?_ADC_Read:
  1629                           	callstack 0
  1630   000001                     ?___awdiv:
  1631                           	callstack 0
  1632   000001                     ?___awmod:
  1633                           	callstack 0
  1634   000001                     ?_read_prec_or_width:
  1635                           	callstack 0
  1636   000001                     ?_labs:
  1637                           	callstack 0
  1638   000001                     ?_sqrtf:
  1639                           	callstack 0
  1640   000001                     ?___lldiv:
  1641                           	callstack 0
  1642   000001                     ?___flneg:
  1643                           	callstack 0
  1644   000001                     ?___fltol:
  1645                           	callstack 0
  1646   000001                     ?___xxtofl:
  1647                           	callstack 0
  1648   000001                     UART_Write@data:
  1649                           	callstack 0
  1650   000001                     read_prec_or_width@fmt:
  1651                           	callstack 0
  1652   000001                     ___awdiv@dividend:
  1653                           	callstack 0
  1654   000001                     ___awmod@dividend:
  1655                           	callstack 0
  1656   000001                     memcpy@d1:
  1657                           	callstack 0
  1658   000001                     fputc@c:
  1659                           	callstack 0
  1660   000001                     strcpy@dest:
  1661                           	callstack 0
  1662   000001                     ___lldiv@dividend:
  1663                           	callstack 0
  1664   000001                     ___fleq@ff1:
  1665                           	callstack 0
  1666   000001                     ___flneg@f1:
  1667                           	callstack 0
  1668   000001                     ___fltol@f1:
  1669                           	callstack 0
  1670   000001                     ___xxtofl@val:
  1671                           	callstack 0
  1672   000001                     ___fpclassifyf@x:
  1673                           	callstack 0
  1674   000001                     labs@a:
  1675                           	callstack 0
  1676   000001                     sqrtf@x:
  1677                           	callstack 0
  1678   000001                     
  1679                           ; 1 bytes @ 0x0
  1680   000001                     	ds	1
  1681   000002                     read_prec_or_width@ap:
  1682                           	callstack 0
  1683   000002                     UART_Write_Text@text:
  1684                           	callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x1
  1687   000002                     	ds	1
  1688   000003                     fputc@fp:
  1689                           	callstack 0
  1690   000003                     ___awdiv@divisor:
  1691                           	callstack 0
  1692   000003                     ___awmod@divisor:
  1693                           	callstack 0
  1694   000003                     memcpy@s1:
  1695                           	callstack 0
  1696   000003                     strcpy@src:
  1697                           	callstack 0
  1698   000003                     ??_ADC_Read:
  1699   000003                     ??_read_prec_or_width:
  1700                           
  1701                           ; 1 bytes @ 0x2
  1702   000003                     	ds	1
  1703   000004                     ??_fputc:
  1704                           
  1705                           ; 1 bytes @ 0x3
  1706   000004                     	ds	1
  1707   000005                     ADC_Read@channel:
  1708                           	callstack 0
  1709   000005                     ___awdiv@counter:
  1710                           	callstack 0
  1711   000005                     ___awmod@counter:
  1712                           	callstack 0
  1713   000005                     read_prec_or_width@c:
  1714                           	callstack 0
  1715   000005                     memcpy@n:
  1716                           	callstack 0
  1717   000005                     strcpy@d:
  1718                           	callstack 0
  1719   000005                     ___lldiv@divisor:
  1720                           	callstack 0
  1721   000005                     ___fleq@ff2:
  1722                           	callstack 0
  1723   000005                     ??___fpclassifyf:
  1724   000005                     ??_labs:
  1725   000005                     ??_sqrtf:
  1726   000005                     ??___fltol:
  1727   000005                     ??___xxtofl:
  1728                           
  1729                           ; 1 bytes @ 0x4
  1730   000005                     	ds	1
  1731   000006                     ___awdiv@sign:
  1732                           	callstack 0
  1733   000006                     ___awmod@sign:
  1734                           	callstack 0
  1735   000006                     read_prec_or_width@n:
  1736                           	callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x5
  1739   000006                     	ds	1
  1740   000007                     ?_abs:
  1741                           	callstack 0
  1742   000007                     memcpy@tmp:
  1743                           	callstack 0
  1744   000007                     ___awdiv@quotient:
  1745                           	callstack 0
  1746   000007                     abs@a:
  1747                           	callstack 0
  1748   000007                     
  1749                           ; 1 bytes @ 0x6
  1750   000007                     	ds	1
  1751   000008                     memcpy@d:
  1752                           	callstack 0
  1753                           
  1754                           ; 2 bytes @ 0x7
  1755   000008                     	ds	1
  1756   000009                     ___fltol@sign1:
  1757                           	callstack 0
  1758   000009                     ___xxtofl@sign:
  1759                           	callstack 0
  1760   000009                     ___fpclassifyf@e:
  1761                           	callstack 0
  1762   000009                     fputs@s:
  1763                           	callstack 0
  1764   000009                     ___lldiv@quotient:
  1765                           	callstack 0
  1766   000009                     ??_abs:
  1767   000009                     ??___fleq:
  1768                           
  1769                           ; 1 bytes @ 0x8
  1770   000009                     	ds	1
  1771   00000A                     ___fltol@exp1:
  1772                           	callstack 0
  1773   00000A                     ___xxtofl@exp:
  1774                           	callstack 0
  1775   00000A                     memcpy@s:
  1776                           	callstack 0
  1777   00000A                     sqrtf@s:
  1778                           	callstack 0
  1779                           
  1780                           ; 4 bytes @ 0x9
  1781   00000A                     	ds	1
  1782   00000B                     fputs@fp:
  1783                           	callstack 0
  1784   00000B                     ___xxtofl@arg:
  1785                           	callstack 0
  1786   00000B                     ___fpclassifyf@u:
  1787                           	callstack 0
  1788                           
  1789                           ; 4 bytes @ 0xA
  1790   00000B                     	ds	1
  1791   00000C                     fputs@c:
  1792                           	callstack 0
  1793   00000C                     
  1794                           ; 1 bytes @ 0xB
  1795   00000C                     	ds	1
  1796   00000D                     ___lldiv@counter:
  1797                           	callstack 0
  1798   00000D                     fputs@i:
  1799                           	callstack 0
  1800                           
  1801                           ; 2 bytes @ 0xC
  1802   00000D                     	ds	1
  1803   00000E                     ?_ADC_Read_Average:
  1804                           	callstack 0
  1805   00000E                     ADC_Read_Average@samples:
  1806                           	callstack 0
  1807   00000E                     sqrtf@i:
  1808                           	callstack 0
  1809                           
  1810                           ; 4 bytes @ 0xD
  1811   00000E                     	ds	1
  1812   00000F                     ?___fladd:
  1813                           	callstack 0
  1814   00000F                     pad@fp:
  1815                           	callstack 0
  1816   00000F                     ___fladd@b:
  1817                           	callstack 0
  1818                           
  1819                           ; 4 bytes @ 0xE
  1820   00000F                     	ds	1
  1821   000010                     pad@buf:
  1822                           	callstack 0
  1823   000010                     ??_ADC_Read_Average:
  1824                           
  1825                           ; 1 bytes @ 0xF
  1826   000010                     	ds	2
  1827   000012                     pad@p:
  1828                           	callstack 0
  1829   000012                     sqrtf@q:
  1830                           	callstack 0
  1831                           
  1832                           ; 4 bytes @ 0x11
  1833   000012                     	ds	1
  1834   000013                     ___fladd@a:
  1835                           	callstack 0
  1836                           
  1837                           ; 4 bytes @ 0x12
  1838   000013                     	ds	1
  1839   000014                     ??_pad:
  1840                           
  1841                           ; 1 bytes @ 0x13
  1842   000014                     	ds	1
  1843   000015                     pad@i:
  1844                           	callstack 0
  1845                           
  1846                           ; 2 bytes @ 0x14
  1847   000015                     	ds	1
  1848   000016                     ADC_Read_Average@channel:
  1849                           	callstack 0
  1850   000016                     sqrtf@t:
  1851                           	callstack 0
  1852                           
  1853                           ; 4 bytes @ 0x15
  1854   000016                     	ds	1
  1855   000017                     dtoa@fp:
  1856                           	callstack 0
  1857   000017                     ADC_Read_Average@sum:
  1858                           	callstack 0
  1859   000017                     ??___fladd:
  1860                           
  1861                           ; 1 bytes @ 0x16
  1862   000017                     	ds	1
  1863   000018                     dtoa@d:
  1864                           	callstack 0
  1865                           
  1866                           ; 2 bytes @ 0x17
  1867   000018                     	ds	2
  1868   00001A                     _dtoa$993:
  1869                           	callstack 0
  1870   00001A                     sqrtf@m:
  1871                           	callstack 0
  1872   00001A                     
  1873                           ; 1 bytes @ 0x19
  1874   00001A                     	ds	1
  1875   00001B                     ADC_Read_Average@i:
  1876                           	callstack 0
  1877   00001B                     ___fladd@signs:
  1878                           	callstack 0
  1879                           
  1880                           ; 1 bytes @ 0x1A
  1881   00001B                     	ds	1
  1882   00001C                     ___fladd@aexp:
  1883                           	callstack 0
  1884   00001C                     dtoa@w:
  1885                           	callstack 0
  1886                           
  1887                           ; 2 bytes @ 0x1B
  1888   00001C                     	ds	1
  1889   00001D                     ___fladd@bexp:
  1890                           	callstack 0
  1891                           
  1892                           ; 1 bytes @ 0x1C
  1893   00001D                     	ds	1
  1894   00001E                     ___fladd@grs:
  1895                           	callstack 0
  1896   00001E                     dtoa@p:
  1897                           	callstack 0
  1898   00001E                     sqrtf@r:
  1899                           	callstack 0
  1900                           
  1901                           ; 4 bytes @ 0x1D
  1902   00001E                     	ds	1
  1903   00001F                     ?___flmul:
  1904                           	callstack 0
  1905   00001F                     ___flmul@b:
  1906                           	callstack 0
  1907                           
  1908                           ; 4 bytes @ 0x1E
  1909   00001F                     	ds	1
  1910   000020                     dtoa@s:
  1911                           	callstack 0
  1912                           
  1913                           ; 1 bytes @ 0x1F
  1914   000020                     	ds	1
  1915   000021                     dtoa@i:
  1916                           	callstack 0
  1917                           
  1918                           ; 2 bytes @ 0x20
  1919   000021                     	ds	1
  1920   000022                     sqrtf@ix:
  1921                           	callstack 0
  1922                           
  1923                           ; 4 bytes @ 0x21
  1924   000022                     	ds	1
  1925   000023                     ___flmul@a:
  1926                           	callstack 0
  1927                           
  1928                           ; 4 bytes @ 0x22
  1929   000023                     	ds	4
  1930   000027                     ??___flmul:
  1931                           
  1932                           ; 1 bytes @ 0x26
  1933   000027                     	ds	4
  1934   00002B                     ___flmul@sign:
  1935                           	callstack 0
  1936                           
  1937                           ; 1 bytes @ 0x2A
  1938   00002B                     	ds	1
  1939   00002C                     ___flmul@aexp:
  1940                           	callstack 0
  1941                           
  1942                           ; 1 bytes @ 0x2B
  1943   00002C                     	ds	1
  1944   00002D                     ___flmul@grs:
  1945                           	callstack 0
  1946                           
  1947                           ; 4 bytes @ 0x2C
  1948   00002D                     	ds	4
  1949   000031                     ___flmul@bexp:
  1950                           	callstack 0
  1951                           
  1952                           ; 1 bytes @ 0x30
  1953   000031                     	ds	1
  1954   000032                     ___flmul@prod:
  1955                           	callstack 0
  1956                           
  1957                           ; 4 bytes @ 0x31
  1958   000032                     	ds	4
  1959   000036                     ___flmul@temp:
  1960                           	callstack 0
  1961                           
  1962                           ; 2 bytes @ 0x35
  1963   000036                     	ds	2
  1964   000038                     ?___flsub:
  1965                           	callstack 0
  1966   000038                     ?_scalbnf:
  1967                           	callstack 0
  1968   000038                     ___flsub@b:
  1969                           	callstack 0
  1970   000038                     scalbnf@x:
  1971                           	callstack 0
  1972                           
  1973                           ; 4 bytes @ 0x37
  1974   000038                     	ds	4
  1975   00003C                     scalbnf@n:
  1976                           	callstack 0
  1977   00003C                     ___flsub@a:
  1978                           	callstack 0
  1979                           
  1980                           ; 4 bytes @ 0x3B
  1981   00003C                     	ds	2
  1982   00003E                     ??_scalbnf:
  1983                           
  1984                           ; 1 bytes @ 0x3D
  1985   00003E                     	ds	2
  1986   000040                     ?___fldiv:
  1987                           	callstack 0
  1988   000040                     ___flge@ff1:
  1989                           	callstack 0
  1990   000040                     ___fldiv@b:
  1991                           	callstack 0
  1992   000040                     
  1993                           ; 1 bytes @ 0x3F
  1994   000040                     	ds	2
  1995   000042                     scalbnf@u:
  1996                           	callstack 0
  1997                           
  1998                           ; 4 bytes @ 0x41
  1999   000042                     	ds	2
  2000   000044                     ___flge@ff2:
  2001                           	callstack 0
  2002   000044                     ___fldiv@a:
  2003                           	callstack 0
  2004                           
  2005                           ; 4 bytes @ 0x43
  2006   000044                     	ds	2
  2007   000046                     scalbnf@y:
  2008                           	callstack 0
  2009                           
  2010                           ; 4 bytes @ 0x45
  2011   000046                     	ds	2
  2012   000048                     ??___fldiv:
  2013   000048                     ??___flge:
  2014                           
  2015                           ; 1 bytes @ 0x47
  2016   000048                     	ds	4
  2017   00004C                     ___fldiv@rem:
  2018                           	callstack 0
  2019                           
  2020                           ; 4 bytes @ 0x4B
  2021   00004C                     	ds	4
  2022   000050                     ___fldiv@sign:
  2023                           	callstack 0
  2024                           
  2025                           ; 1 bytes @ 0x4F
  2026   000050                     	ds	1
  2027   000051                     ___fldiv@new_exp:
  2028                           	callstack 0
  2029                           
  2030                           ; 2 bytes @ 0x50
  2031   000051                     	ds	2
  2032   000053                     ___fldiv@grs:
  2033                           	callstack 0
  2034                           
  2035                           ; 4 bytes @ 0x52
  2036   000053                     	ds	4
  2037   000057                     ___fldiv@bexp:
  2038                           	callstack 0
  2039                           
  2040                           ; 1 bytes @ 0x56
  2041   000057                     	ds	1
  2042   000058                     ___fldiv@aexp:
  2043                           	callstack 0
  2044                           
  2045                           ; 1 bytes @ 0x57
  2046   000058                     	ds	1
  2047   000059                     ?_floorf:
  2048                           	callstack 0
  2049   000059                     floorf@x:
  2050                           	callstack 0
  2051   000059                     _Read_LM35$1486:
  2052                           	callstack 0
  2053   000059                     
  2054                           ; 1 bytes @ 0x58
  2055   000059                     	ds	4
  2056   00005D                     Read_LM35@adc_value:
  2057                           	callstack 0
  2058   00005D                     ??_efgtoa:
  2059                           
  2060                           ; 1 bytes @ 0x5C
  2061   00005D                     	ds	2
  2062   00005F                     
  2063                           ; 1 bytes @ 0x5E
  2064 ;;
  2065 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2066 ;;
  2067 ;; *************** function _main *****************
  2068 ;; Defined at:
  2069 ;;		line 343 in file "newmain.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  fire_alarm      1    2[BANK2 ] unsigned char 
  2074 ;;  i               2    8[BANK2 ] int 
  2075 ;;  alarm_blink_    2    6[BANK2 ] unsigned int 
  2076 ;;  sensor_count    2    4[BANK2 ] unsigned int 
  2077 ;;  received_cha    1   10[BANK2 ] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2087 ;;      Params:         0       0       0       0       0       0       0       0       0
  2088 ;;      Locals:         0       0       0       9       0       0       0       0       0
  2089 ;;      Temps:          0       0       0       2       0       0       0       0       0
  2090 ;;      Totals:         0       0       0      11       0       0       0       0       0
  2091 ;;Total ram usage:       11 bytes
  2092 ;; Hardware stack levels required when called: 10
  2093 ;; This function calls:
  2094 ;;		_ADC_Init
  2095 ;;		_Calibrate_Flame_Sensor
  2096 ;;		_Calibrate_MQ2
  2097 ;;		_Read_Flame_Sensor
  2098 ;;		_Read_LM35
  2099 ;;		_Read_MQ2_Sensor
  2100 ;;		_Send_Sensor_Data
  2101 ;;		_UART_Data_Ready
  2102 ;;		_UART_Init
  2103 ;;		_UART_Read
  2104 ;;		_UART_Write
  2105 ;;		_UART_Write_Text
  2106 ;;		___flge
  2107 ;; This function is called by:
  2108 ;;		Startup code after reset
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text0
  2113   003730                     __ptext0:
  2114                           	callstack 0
  2115   003730                     _main:
  2116                           	callstack 21
  2117   003730                     
  2118                           ;newmain.c: 345:     OSCCON = 0x70;
  2119   003730  0E70               	movlw	112
  2120   003732  6ED3               	movwf	211,c	;volatile
  2121   003734                     
  2122                           ;newmain.c: 348:     TRISB = 0x00;
  2123   003734  6A93               	clrf	147,c	;volatile
  2124   003736                     
  2125                           ;newmain.c: 349:     PORTB = 0x00;
  2126   003736  6A81               	clrf	129,c	;volatile
  2127   003738                     
  2128                           ;newmain.c: 350:     PORTBbits.RB5 = 1;
  2129   003738  8A81               	bsf	129,5,c	;volatile
  2130   00373A                     
  2131                           ;newmain.c: 351:     PORTBbits.RB0 = 0;
  2132   00373A  9081               	bcf	129,0,c	;volatile
  2133   00373C                     
  2134                           ;newmain.c: 354:     UART_Write_Text("Precalentando sensores...\r\n");
  2135   00373C  0EC9               	movlw	low STR_6
  2136   00373E  6E02               	movwf	UART_Write_Text@text^0,c
  2137   003740  0E7F               	movlw	high STR_6
  2138   003742  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  2139   003744  EC04  F00F         	call	_UART_Write_Text	;wreg free
  2140   003748                     
  2141                           ;newmain.c: 355:     for(int i = 0; i < 30; i++) {
  2142   003748  0E00               	movlw	0
  2143   00374A  0102               	movlb	2	; () banked
  2144   00374C  6F8F               	movwf	(main@i+1)& (0+255),b
  2145   00374E  0E00               	movlw	0
  2146   003750  6F8E               	movwf	main@i& (0+255),b
  2147   003752                     l7334:
  2148                           
  2149                           ; BSR set to: 2
  2150                           ;newmain.c: 356:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  2151   003752  0E0B               	movlw	11
  2152   003754  0102               	movlb	2	; () banked
  2153   003756  6F87               	movwf	(??_main+1)& (0+255),b
  2154   003758  0E26               	movlw	38
  2155   00375A  6F86               	movwf	??_main& (0+255),b
  2156   00375C  0E5D               	movlw	93
  2157   00375E                     u9687:
  2158   00375E  2EE8               	decfsz	wreg,f,c
  2159   003760  D7FE               	bra	u9687
  2160   003762  2F86               	decfsz	??_main& (0+255),f,b
  2161   003764  D7FC               	bra	u9687
  2162   003766  2F87               	decfsz	(??_main+1)& (0+255),f,b
  2163   003768  D7FA               	bra	u9687
  2164   00376A  D000               	nop2	
  2165   00376C                     
  2166                           ;newmain.c: 357:         UART_Write('.');
  2167   00376C  0E2E               	movlw	46
  2168   00376E  EC79  F00D         	call	_UART_Write
  2169   003772                     
  2170                           ;newmain.c: 358:     }
  2171   003772  0102               	movlb	2	; () banked
  2172   003774  4B8E               	infsnz	main@i& (0+255),f,b
  2173   003776  2B8F               	incf	(main@i+1)& (0+255),f,b
  2174   003778                     
  2175                           ; BSR set to: 2
  2176   003778  BF8F               	btfsc	(main@i+1)& (0+255),7,b
  2177   00377A  EFC8  F01B         	goto	u9531
  2178   00377E  518F               	movf	(main@i+1)& (0+255),w,b
  2179   003780  E109               	bnz	u9530
  2180   003782  0E1E               	movlw	30
  2181   003784  5D8E               	subwf	main@i& (0+255),w,b
  2182   003786  A0D8               	btfss	status,0,c
  2183   003788  EFC8  F01B         	goto	u9531
  2184   00378C  EFCA  F01B         	goto	u9530
  2185   003790                     u9531:
  2186   003790  EFA9  F01B         	goto	l7334
  2187   003794                     u9530:
  2188   003794                     
  2189                           ; BSR set to: 2
  2190                           ;newmain.c: 359:     UART_Write_Text("\r\n");
  2191   003794  0EE9               	movlw	low (STR_10+51)
  2192   003796  6E02               	movwf	UART_Write_Text@text^0,c
  2193   003798  0E7E               	movlw	high (STR_10+51)
  2194   00379A  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  2195   00379C  EC04  F00F         	call	_UART_Write_Text	;wreg free
  2196   0037A0                     
  2197                           ;newmain.c: 362:     UART_Init();
  2198   0037A0  EC6F  F00D         	call	_UART_Init	;wreg free
  2199   0037A4                     
  2200                           ;newmain.c: 363:     ADC_Init();
  2201   0037A4  EC5C  F00D         	call	_ADC_Init	;wreg free
  2202   0037A8                     
  2203                           ;newmain.c: 366:     Calibrate_Flame_Sensor();
  2204   0037A8  EC00  F014         	call	_Calibrate_Flame_Sensor	;wreg free
  2205   0037AC                     
  2206                           ;newmain.c: 367:     Calibrate_MQ2();
  2207   0037AC  EC70  F015         	call	_Calibrate_MQ2	;wreg free
  2208                           
  2209                           ;newmain.c: 370:     UART_Write_Text("PIC18F4550 iniciado con sistema anti-incendios\r\n
      +                          ");
  2210   0037B0  0E21               	movlw	low STR_8
  2211   0037B2  6E02               	movwf	UART_Write_Text@text^0,c
  2212   0037B4  0E7F               	movlw	high STR_8
  2213   0037B6  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  2214   0037B8  EC04  F00F         	call	_UART_Write_Text	;wreg free
  2215   0037BC                     
  2216                           ;newmain.c: 372:     char received_char;;newmain.c: 373:     unsigned int sensor_counter
      +                           = 0;
  2217   0037BC  0E00               	movlw	0
  2218   0037BE  0102               	movlb	2	; () banked
  2219   0037C0  6F8B               	movwf	(main@sensor_counter+1)& (0+255),b
  2220   0037C2  0E00               	movlw	0
  2221   0037C4  6F8A               	movwf	main@sensor_counter& (0+255),b
  2222   0037C6                     
  2223                           ; BSR set to: 2
  2224                           ;newmain.c: 374:     unsigned int alarm_blink_counter = 0;
  2225   0037C6  0E00               	movlw	0
  2226   0037C8  6F8D               	movwf	(main@alarm_blink_counter+1)& (0+255),b
  2227   0037CA  0E00               	movlw	0
  2228   0037CC  6F8C               	movwf	main@alarm_blink_counter& (0+255),b
  2229   0037CE                     l7356:
  2230                           
  2231                           ;newmain.c: 378:         if(UART_Data_Ready()) {
  2232   0037CE  EC65  F00D         	call	_UART_Data_Ready	;wreg free
  2233   0037D2  0900               	iorlw	0
  2234   0037D4  B4D8               	btfsc	status,2,c
  2235   0037D6  EFEF  F01B         	goto	u9541
  2236   0037DA  EFF1  F01B         	goto	u9540
  2237   0037DE                     u9541:
  2238   0037DE  EF27  F01C         	goto	l7372
  2239   0037E2                     u9540:
  2240   0037E2                     
  2241                           ;newmain.c: 379:             received_char = UART_Read();
  2242   0037E2  EC84  F00D         	call	_UART_Read	;wreg free
  2243   0037E6  0102               	movlb	2	; () banked
  2244   0037E8  6F90               	movwf	main@received_char& (0+255),b
  2245   0037EA                     
  2246                           ; BSR set to: 2
  2247                           ;newmain.c: 382:             if(received_char == '1') {
  2248   0037EA  0E31               	movlw	49
  2249   0037EC  1990               	xorwf	main@received_char& (0+255),w,b
  2250   0037EE  A4D8               	btfss	status,2,c
  2251   0037F0  EFFC  F01B         	goto	u9551
  2252   0037F4  EFFE  F01B         	goto	u9550
  2253   0037F8                     u9551:
  2254   0037F8  EF06  F01C         	goto	l7364
  2255   0037FC                     u9550:
  2256   0037FC                     
  2257                           ; BSR set to: 2
  2258                           ;newmain.c: 383:                 UART_Write_Text("Comando LED ON recibido (sin efecto en
      +                           actuadores)\r\n");
  2259   0037FC  0EEC               	movlw	low STR_9
  2260   0037FE  6E02               	movwf	UART_Write_Text@text^0,c
  2261   003800  0E7E               	movlw	high STR_9
  2262   003802  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  2263   003804  EC04  F00F         	call	_UART_Write_Text	;wreg free
  2264                           
  2265                           ;newmain.c: 384:             }
  2266   003808  EF27  F01C         	goto	l7372
  2267   00380C                     l7364:
  2268                           
  2269                           ; BSR set to: 2
  2270   00380C  0E30               	movlw	48
  2271   00380E  1990               	xorwf	main@received_char& (0+255),w,b
  2272   003810  A4D8               	btfss	status,2,c
  2273   003812  EF0D  F01C         	goto	u9561
  2274   003816  EF0F  F01C         	goto	u9560
  2275   00381A                     u9561:
  2276   00381A  EF17  F01C         	goto	l7368
  2277   00381E                     u9560:
  2278   00381E                     
  2279                           ; BSR set to: 2
  2280                           ;newmain.c: 386:                 UART_Write_Text("Comando LED OFF recibido (sin efecto e
      +                          n actuadores)\r\n");
  2281   00381E  0EB6               	movlw	low STR_10
  2282   003820  6E02               	movwf	UART_Write_Text@text^0,c
  2283   003822  0E7E               	movlw	high STR_10
  2284   003824  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  2285   003826  EC04  F00F         	call	_UART_Write_Text	;wreg free
  2286                           
  2287                           ;newmain.c: 387:             }
  2288   00382A  EF27  F01C         	goto	l7372
  2289   00382E                     l7368:
  2290                           
  2291                           ; BSR set to: 2
  2292   00382E  5190               	movf	main@received_char& (0+255),w,b
  2293   003830  B4D8               	btfsc	status,2,c
  2294   003832  EF1D  F01C         	goto	u9571
  2295   003836  EF1F  F01C         	goto	u9570
  2296   00383A                     u9571:
  2297   00383A  EF27  F01C         	goto	l166
  2298   00383E                     u9570:
  2299   00383E                     
  2300                           ; BSR set to: 2
  2301                           ;newmain.c: 389:                 UART_Write_Text("Comando no reconocido. Use 1=ON, 0=OFF
      +                          \r\n");
  2302   00383E  0E7F               	movlw	low STR_11
  2303   003840  6E02               	movwf	UART_Write_Text@text^0,c
  2304   003842  0E7F               	movlw	high STR_11
  2305   003844  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  2306   003846  EC04  F00F         	call	_UART_Write_Text	;wreg free
  2307   00384A  EF27  F01C         	goto	l7372
  2308   00384E                     l166:
  2309   00384E                     l7372:
  2310                           
  2311                           ;newmain.c: 394:         Read_LM35();
  2312   00384E  EC65  F011         	call	_Read_LM35	;wreg free
  2313   003852                     
  2314                           ;newmain.c: 395:         Read_Flame_Sensor();
  2315   003852  EC39  F019         	call	_Read_Flame_Sensor	;wreg free
  2316   003856                     
  2317                           ;newmain.c: 396:         Read_MQ2_Sensor();
  2318   003856  EC2A  F025         	call	_Read_MQ2_Sensor	;wreg free
  2319   00385A                     
  2320                           ;newmain.c: 399:         bool fire_alarm = flame_detected ||
  2321   00385A  0E01               	movlw	1
  2322   00385C  0102               	movlb	2	; () banked
  2323   00385E  6F89               	movwf	_main$444& (0+255),b
  2324   003860                     
  2325                           ; BSR set to: 2
  2326   003860  0101               	movlb	1	; () banked
  2327   003862  51FD               	movf	_flame_detected& (0+255),w,b
  2328   003864  A4D8               	btfss	status,2,c
  2329   003866  EF37  F01C         	goto	u9581
  2330   00386A  EF39  F01C         	goto	u9580
  2331   00386E                     u9581:
  2332   00386E  EF6D  F01C         	goto	l171
  2333   003872                     u9580:
  2334   003872                     
  2335                           ; BSR set to: 1
  2336   003872  C220  F040         	movff	_co_ppm,___flge@ff1
  2337   003876  C221  F041         	movff	_co_ppm+1,___flge@ff1+1
  2338   00387A  C222  F042         	movff	_co_ppm+2,___flge@ff1+2
  2339   00387E  C223  F043         	movff	_co_ppm+3,___flge@ff1+3
  2340   003882  0E00               	movlw	0
  2341   003884  6E44               	movwf	___flge@ff2^0,c
  2342   003886  0E00               	movlw	0
  2343   003888  6E45               	movwf	(___flge@ff2+1)^0,c
  2344   00388A  0E48               	movlw	72
  2345   00388C  6E46               	movwf	(___flge@ff2+2)^0,c
  2346   00388E  0E42               	movlw	66
  2347   003890  6E47               	movwf	(___flge@ff2+3)^0,c
  2348   003892  ECFB  F012         	call	___flge	;wreg free
  2349   003896  B0D8               	btfsc	status,0,c
  2350   003898  EF50  F01C         	goto	u9591
  2351   00389C  EF52  F01C         	goto	u9590
  2352   0038A0                     u9591:
  2353   0038A0  EF6D  F01C         	goto	l171
  2354   0038A4                     u9590:
  2355   0038A4  C22C  F040         	movff	_temperature,___flge@ff1
  2356   0038A8  C22D  F041         	movff	_temperature+1,___flge@ff1+1
  2357   0038AC  C22E  F042         	movff	_temperature+2,___flge@ff1+2
  2358   0038B0  C22F  F043         	movff	_temperature+3,___flge@ff1+3
  2359   0038B4  0E00               	movlw	0
  2360   0038B6  6E44               	movwf	___flge@ff2^0,c
  2361   0038B8  0E00               	movlw	0
  2362   0038BA  6E45               	movwf	(___flge@ff2+1)^0,c
  2363   0038BC  0E20               	movlw	32
  2364   0038BE  6E46               	movwf	(___flge@ff2+2)^0,c
  2365   0038C0  0E42               	movlw	66
  2366   0038C2  6E47               	movwf	(___flge@ff2+3)^0,c
  2367   0038C4  ECFB  F012         	call	___flge	;wreg free
  2368   0038C8  B0D8               	btfsc	status,0,c
  2369   0038CA  EF69  F01C         	goto	u9601
  2370   0038CE  EF6B  F01C         	goto	u9600
  2371   0038D2                     u9601:
  2372   0038D2  EF6D  F01C         	goto	l171
  2373   0038D6                     u9600:
  2374   0038D6  0102               	movlb	2	; () banked
  2375   0038D8  6B89               	clrf	_main$444& (0+255),b
  2376   0038DA                     l171:
  2377   0038DA  C289  F288         	movff	_main$444,main@fire_alarm
  2378   0038DE                     
  2379                           ;newmain.c: 404:         if(fire_alarm) {
  2380   0038DE  0102               	movlb	2	; () banked
  2381   0038E0  5188               	movf	main@fire_alarm& (0+255),w,b
  2382   0038E2  B4D8               	btfsc	status,2,c
  2383   0038E4  EF76  F01C         	goto	u9611
  2384   0038E8  EF78  F01C         	goto	u9610
  2385   0038EC                     u9611:
  2386   0038EC  EFA2  F01C         	goto	l172
  2387   0038F0                     u9610:
  2388   0038F0                     
  2389                           ; BSR set to: 2
  2390                           ;newmain.c: 406:             PORTBbits.RB0 = 1;
  2391   0038F0  8081               	bsf	129,0,c	;volatile
  2392   0038F2                     
  2393                           ; BSR set to: 2
  2394                           ;newmain.c: 407:             pump_active = 1;
  2395   0038F2  0E01               	movlw	1
  2396   0038F4  6F35               	movwf	_pump_active& (0+255),b
  2397   0038F6                     
  2398                           ; BSR set to: 2
  2399                           ;newmain.c: 410:             alarm_blink_counter++;
  2400   0038F6  4B8C               	infsnz	main@alarm_blink_counter& (0+255),f,b
  2401   0038F8  2B8D               	incf	(main@alarm_blink_counter+1)& (0+255),f,b
  2402   0038FA                     
  2403                           ; BSR set to: 2
  2404                           ;newmain.c: 411:             if(alarm_blink_counter >= 2) {
  2405   0038FA  518D               	movf	(main@alarm_blink_counter+1)& (0+255),w,b
  2406   0038FC  E109               	bnz	u9620
  2407   0038FE  0E02               	movlw	2
  2408   003900  5D8C               	subwf	main@alarm_blink_counter& (0+255),w,b
  2409   003902  A0D8               	btfss	status,0,c
  2410   003904  EF86  F01C         	goto	u9621
  2411   003908  EF88  F01C         	goto	u9620
  2412   00390C                     u9621:
  2413   00390C  EF9E  F01C         	goto	l7402
  2414   003910                     u9620:
  2415   003910                     
  2416                           ; BSR set to: 2
  2417                           ;newmain.c: 412:                 PORTBbits.RB5 = !PORTBbits.RB5;
  2418   003910  AA81               	btfss	129,5,c	;volatile
  2419   003912  EF8D  F01C         	goto	u9631
  2420   003916  EF91  F01C         	goto	u9630
  2421   00391A                     u9631:
  2422   00391A  6B86               	clrf	??_main& (0+255),b
  2423   00391C  2B86               	incf	??_main& (0+255),f,b
  2424   00391E  EF93  F01C         	goto	u9648
  2425   003922                     u9630:
  2426   003922  0102               	movlb	2	; () banked
  2427   003924  6B86               	clrf	??_main& (0+255),b
  2428   003926                     u9648:
  2429   003926  3B86               	swapf	??_main& (0+255),f,b
  2430   003928  4786               	rlncf	??_main& (0+255),f,b
  2431   00392A  5081               	movf	129,w,c	;volatile
  2432   00392C  1986               	xorwf	??_main& (0+255),w,b
  2433   00392E  0BDF               	andlw	-33
  2434   003930  1986               	xorwf	??_main& (0+255),w,b
  2435   003932  6E81               	movwf	129,c	;volatile
  2436   003934                     
  2437                           ; BSR set to: 2
  2438                           ;newmain.c: 413:                 alarm_blink_counter = 0;
  2439   003934  0E00               	movlw	0
  2440   003936  6F8D               	movwf	(main@alarm_blink_counter+1)& (0+255),b
  2441   003938  0E00               	movlw	0
  2442   00393A  6F8C               	movwf	main@alarm_blink_counter& (0+255),b
  2443   00393C                     l7402:
  2444                           
  2445                           ; BSR set to: 2
  2446                           ;newmain.c: 415:             alarm_active = 1;
  2447   00393C  0E01               	movlw	1
  2448   00393E  6F34               	movwf	_alarm_active& (0+255),b
  2449                           
  2450                           ;newmain.c: 416:         } else {
  2451   003940  EFAA  F01C         	goto	l7406
  2452   003944                     l172:
  2453                           
  2454                           ; BSR set to: 2
  2455                           ;newmain.c: 418:             PORTBbits.RB0 = 0;
  2456   003944  9081               	bcf	129,0,c	;volatile
  2457                           
  2458                           ;newmain.c: 419:             pump_active = 0;
  2459   003946  6B35               	clrf	_pump_active& (0+255),b
  2460                           
  2461                           ;newmain.c: 422:             PORTBbits.RB5 = 1;
  2462   003948  8A81               	bsf	129,5,c	;volatile
  2463                           
  2464                           ;newmain.c: 423:             alarm_active = 0;
  2465   00394A  6B34               	clrf	_alarm_active& (0+255),b
  2466   00394C                     
  2467                           ; BSR set to: 2
  2468                           ;newmain.c: 424:             alarm_blink_counter = 0;
  2469   00394C  0E00               	movlw	0
  2470   00394E  6F8D               	movwf	(main@alarm_blink_counter+1)& (0+255),b
  2471   003950  0E00               	movlw	0
  2472   003952  6F8C               	movwf	main@alarm_blink_counter& (0+255),b
  2473   003954                     l7406:
  2474                           
  2475                           ; BSR set to: 2
  2476                           ;newmain.c: 428:         if(sensor_counter >= 4) {
  2477   003954  518B               	movf	(main@sensor_counter+1)& (0+255),w,b
  2478   003956  E109               	bnz	u9650
  2479   003958  0E04               	movlw	4
  2480   00395A  5D8A               	subwf	main@sensor_counter& (0+255),w,b
  2481   00395C  A0D8               	btfss	status,0,c
  2482   00395E  EFB3  F01C         	goto	u9651
  2483   003962  EFB5  F01C         	goto	u9650
  2484   003966                     u9651:
  2485   003966  EFF1  F01C         	goto	l7424
  2486   00396A                     u9650:
  2487   00396A                     
  2488                           ; BSR set to: 2
  2489                           ;newmain.c: 429:             Send_Sensor_Data();
  2490   00396A  ECB8  F00F         	call	_Send_Sensor_Data	;wreg free
  2491   00396E                     
  2492                           ;newmain.c: 430:             sensor_counter = 0;
  2493   00396E  0E00               	movlw	0
  2494   003970  0102               	movlb	2	; () banked
  2495   003972  6F8B               	movwf	(main@sensor_counter+1)& (0+255),b
  2496   003974  0E00               	movlw	0
  2497   003976  6F8A               	movwf	main@sensor_counter& (0+255),b
  2498   003978                     
  2499                           ; BSR set to: 2
  2500                           ;newmain.c: 433:             calibrationCounter += 1000;
  2501   003978  0EE8               	movlw	232
  2502   00397A  271C               	addwf	_calibrationCounter& (0+255),f,b
  2503   00397C  0E03               	movlw	3
  2504   00397E  231D               	addwfc	(_calibrationCounter+1)& (0+255),f,b
  2505   003980  0E00               	movlw	0
  2506   003982  231E               	addwfc	(_calibrationCounter+2)& (0+255),f,b
  2507   003984  0E00               	movlw	0
  2508   003986  231F               	addwfc	(_calibrationCounter+3)& (0+255),f,b
  2509   003988                     
  2510                           ; BSR set to: 2
  2511                           ;newmain.c: 434:             if(calibrationCounter >= 300000) {
  2512   003988  511F               	movf	(_calibrationCounter+3)& (0+255),w,b
  2513   00398A  E10D               	bnz	u9660
  2514   00398C  0EE0               	movlw	224
  2515   00398E  5D1C               	subwf	_calibrationCounter& (0+255),w,b
  2516   003990  0E93               	movlw	147
  2517   003992  591D               	subwfb	(_calibrationCounter+1)& (0+255),w,b
  2518   003994  0E04               	movlw	4
  2519   003996  591E               	subwfb	(_calibrationCounter+2)& (0+255),w,b
  2520   003998  A0D8               	btfss	status,0,c
  2521   00399A  EFD1  F01C         	goto	u9661
  2522   00399E  EFD3  F01C         	goto	u9660
  2523   0039A2                     u9661:
  2524   0039A2  EFE0  F01C         	goto	l7420
  2525   0039A6                     u9660:
  2526   0039A6                     
  2527                           ; BSR set to: 2
  2528                           ;newmain.c: 435:                 Calibrate_MQ2();
  2529   0039A6  EC70  F015         	call	_Calibrate_MQ2	;wreg free
  2530   0039AA                     
  2531                           ;newmain.c: 436:                 calibrationCounter = 0;
  2532   0039AA  0E00               	movlw	0
  2533   0039AC  0102               	movlb	2	; () banked
  2534   0039AE  6F1C               	movwf	_calibrationCounter& (0+255),b
  2535   0039B0  0E00               	movlw	0
  2536   0039B2  6F1D               	movwf	(_calibrationCounter+1)& (0+255),b
  2537   0039B4  0E00               	movlw	0
  2538   0039B6  6F1E               	movwf	(_calibrationCounter+2)& (0+255),b
  2539   0039B8  0E00               	movlw	0
  2540   0039BA  6F1F               	movwf	(_calibrationCounter+3)& (0+255),b
  2541                           
  2542                           ;newmain.c: 437:             }
  2543   0039BC  EFF1  F01C         	goto	l7424
  2544   0039C0                     l7420:
  2545                           
  2546                           ; BSR set to: 2
  2547   0039C0  511F               	movf	(_calibrationCounter+3)& (0+255),w,b
  2548   0039C2  E10D               	bnz	u9670
  2549   0039C4  0EC0               	movlw	192
  2550   0039C6  5D1C               	subwf	_calibrationCounter& (0+255),w,b
  2551   0039C8  0E27               	movlw	39
  2552   0039CA  591D               	subwfb	(_calibrationCounter+1)& (0+255),w,b
  2553   0039CC  0E09               	movlw	9
  2554   0039CE  591E               	subwfb	(_calibrationCounter+2)& (0+255),w,b
  2555   0039D0  A0D8               	btfss	status,0,c
  2556   0039D2  EFED  F01C         	goto	u9671
  2557   0039D6  EFEF  F01C         	goto	u9670
  2558   0039DA                     u9671:
  2559   0039DA  EFF1  F01C         	goto	l7424
  2560   0039DE                     u9670:
  2561   0039DE                     
  2562                           ; BSR set to: 2
  2563                           ;newmain.c: 439:                 Calibrate_Flame_Sensor();
  2564   0039DE  EC00  F014         	call	_Calibrate_Flame_Sensor	;wreg free
  2565   0039E2                     l7424:
  2566                           
  2567                           ;newmain.c: 443:         sensor_counter++;
  2568   0039E2  0102               	movlb	2	; () banked
  2569   0039E4  4B8A               	infsnz	main@sensor_counter& (0+255),f,b
  2570   0039E6  2B8B               	incf	(main@sensor_counter+1)& (0+255),f,b
  2571   0039E8                     
  2572                           ; BSR set to: 2
  2573                           ;newmain.c: 444:         _delay((unsigned long)((250)*(8000000/4000.0)));
  2574   0039E8  0E03               	movlw	3
  2575   0039EA  0102               	movlb	2	; () banked
  2576   0039EC  6F87               	movwf	(??_main+1)& (0+255),b
  2577   0039EE  0E8A               	movlw	138
  2578   0039F0  6F86               	movwf	??_main& (0+255),b
  2579   0039F2  0E55               	movlw	85
  2580   0039F4                     u9697:
  2581   0039F4  2EE8               	decfsz	wreg,f,c
  2582   0039F6  D7FE               	bra	u9697
  2583   0039F8  2F86               	decfsz	??_main& (0+255),f,b
  2584   0039FA  D7FC               	bra	u9697
  2585   0039FC  2F87               	decfsz	(??_main+1)& (0+255),f,b
  2586   0039FE  D7FA               	bra	u9697
  2587   003A00  D000               	nop2	
  2588   003A02  EFE7  F01B         	goto	l7356
  2589   003A06  EFFE  F03F         	goto	start
  2590   003A0A                     __end_of_main:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _UART_Read *****************
  2594 ;; Defined at:
  2595 ;;		line 332 in file "newmain.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      unsigned char 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text1
  2623   001B08                     __ptext1:
  2624                           	callstack 0
  2625   001B08                     _UART_Read:
  2626                           	callstack 30
  2627   001B08                     
  2628                           ;newmain.c: 333:     if(PIR1bits.RCIF) {
  2629   001B08  AA9E               	btfss	158,5,c	;volatile
  2630   001B0A  EF89  F00D         	goto	u6301
  2631   001B0E  EF8B  F00D         	goto	u6300
  2632   001B12                     u6301:
  2633   001B12  EF8E  F00D         	goto	l5268
  2634   001B16                     u6300:
  2635   001B16                     
  2636                           ;newmain.c: 334:         return RCREG;
  2637   001B16  50AE               	movf	174,w,c	;volatile
  2638   001B18  EF8F  F00D         	goto	l153
  2639   001B1C                     l5268:
  2640                           
  2641                           ;newmain.c: 336:     return 0;
  2642   001B1C  0E00               	movlw	0
  2643   001B1E                     l153:
  2644   001B1E  0012               	return		;funcret
  2645   001B20                     __end_of_UART_Read:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _UART_Init *****************
  2649 ;; Defined at:
  2650 ;;		line 307 in file "newmain.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text2
  2678   001ADE                     __ptext2:
  2679                           	callstack 0
  2680   001ADE                     _UART_Init:
  2681                           	callstack 30
  2682   001ADE                     
  2683                           ;newmain.c: 309:     TRISC6 = 0;
  2684   001ADE  9C94               	bcf	3988,6,c	;volatile
  2685                           
  2686                           ;newmain.c: 310:     TRISC7 = 1;
  2687   001AE0  8E94               	bsf	3988,7,c	;volatile
  2688   001AE2                     
  2689                           ;newmain.c: 313:     SPBRG = 51;
  2690   001AE2  0E33               	movlw	51
  2691   001AE4  6EAF               	movwf	175,c	;volatile
  2692   001AE6                     
  2693                           ;newmain.c: 314:     TXSTAbits.BRGH = 1;
  2694   001AE6  84AC               	bsf	172,2,c	;volatile
  2695   001AE8                     
  2696                           ;newmain.c: 315:     TXSTAbits.SYNC = 0;
  2697   001AE8  98AC               	bcf	172,4,c	;volatile
  2698   001AEA                     
  2699                           ;newmain.c: 316:     TXSTAbits.TXEN = 1;
  2700   001AEA  8AAC               	bsf	172,5,c	;volatile
  2701   001AEC                     
  2702                           ;newmain.c: 317:     RCSTAbits.SPEN = 1;
  2703   001AEC  8EAB               	bsf	171,7,c	;volatile
  2704   001AEE                     
  2705                           ;newmain.c: 318:     RCSTAbits.CREN = 1;
  2706   001AEE  88AB               	bsf	171,4,c	;volatile
  2707   001AF0  0012               	return		;funcret
  2708   001AF2                     __end_of_UART_Init:
  2709                           	callstack 0
  2710                           
  2711 ;; *************** function _UART_Data_Ready *****************
  2712 ;; Defined at:
  2713 ;;		line 339 in file "newmain.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      unsigned char 
  2720 ;; Registers used:
  2721 ;;		wreg
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0
  2728 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2730 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2731 ;;Total ram usage:        0 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_main
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text3
  2741   001ACA                     __ptext3:
  2742                           	callstack 0
  2743   001ACA                     _UART_Data_Ready:
  2744                           	callstack 30
  2745   001ACA                     
  2746                           ;newmain.c: 340:     return PIR1bits.RCIF;
  2747   001ACA  BA9E               	btfsc	158,5,c	;volatile
  2748   001ACC  EF6A  F00D         	goto	u6311
  2749   001AD0  EF6D  F00D         	goto	u6310
  2750   001AD4                     u6311:
  2751   001AD4  0E01               	movlw	1
  2752   001AD6  EF6E  F00D         	goto	u6316
  2753   001ADA                     u6310:
  2754   001ADA  0E00               	movlw	0
  2755   001ADC                     u6316:
  2756   001ADC  0012               	return		;funcret
  2757   001ADE                     __end_of_UART_Data_Ready:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _Send_Sensor_Data *****************
  2761 ;; Defined at:
  2762 ;;		line 289 in file "newmain.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  buffer        250    0[BANK1 ] unsigned char [250]
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2776 ;;      Params:         0       0       0       0       0       0       0       0       0
  2777 ;;      Locals:         0       0     250       0       0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2779 ;;      Totals:         0       0     250       0       0       0       0       0       0
  2780 ;;Total ram usage:      250 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 8
  2783 ;; This function calls:
  2784 ;;		_UART_Write_Text
  2785 ;;		_sprintf
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text4
  2792   001F70                     __ptext4:
  2793                           	callstack 0
  2794   001F70                     _Send_Sensor_Data:
  2795                           	callstack 22
  2796   001F70                     
  2797                           ;newmain.c: 290:     char buffer[250];;newmain.c: 293:     sprintf(buffer, "{\"temp\":%.
      +                          1f,\"flame_det\":%d,\"flame_int\":%.1f,\"co_ppm\":%.1f,\"pump\":%d,\"alarm\":%d}\r\n",
  2798   001F70  0E00               	movlw	low Send_Sensor_Data@buffer
  2799   001F72  0100               	movlb	0	; () banked
  2800   001F74  6FB4               	movwf	sprintf@s& (0+255),b
  2801   001F76  0E01               	movlw	high Send_Sensor_Data@buffer
  2802   001F78  6FB5               	movwf	(sprintf@s+1)& (0+255),b
  2803   001F7A  0E63               	movlw	low STR_5
  2804   001F7C  6FB6               	movwf	sprintf@fmt& (0+255),b
  2805   001F7E  0E7E               	movlw	high STR_5
  2806   001F80  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
  2807   001F82  C22C  F0B8         	movff	_temperature,?_sprintf+4
  2808   001F86  C22D  F0B9         	movff	_temperature+1,?_sprintf+5
  2809   001F8A  C22E  F0BA         	movff	_temperature+2,?_sprintf+6
  2810   001F8E  C22F  F0BB         	movff	_temperature+3,?_sprintf+7
  2811   001F92  0101               	movlb	1	; () banked
  2812   001F94  51FD               	movf	_flame_detected& (0+255),w,b
  2813   001F96  A4D8               	btfss	status,2,c
  2814   001F98  EFD0  F00F         	goto	u9471
  2815   001F9C  EFD3  F00F         	goto	u9470
  2816   001FA0                     u9471:
  2817   001FA0  0E01               	movlw	1
  2818   001FA2  EFD4  F00F         	goto	u9480
  2819   001FA6                     u9470:
  2820   001FA6  0E00               	movlw	0
  2821   001FA8                     u9480:
  2822   001FA8  0100               	movlb	0	; () banked
  2823   001FAA  6FBC               	movwf	(?_sprintf+8)& (0+255),b
  2824   001FAC  6BBD               	clrf	(?_sprintf+9)& (0+255),b
  2825   001FAE  C228  F0BE         	movff	_flame_intensity,?_sprintf+10
  2826   001FB2  C229  F0BF         	movff	_flame_intensity+1,?_sprintf+11
  2827   001FB6  C22A  F0C0         	movff	_flame_intensity+2,?_sprintf+12
  2828   001FBA  C22B  F0C1         	movff	_flame_intensity+3,?_sprintf+13
  2829   001FBE  C220  F0C2         	movff	_co_ppm,?_sprintf+14
  2830   001FC2  C221  F0C3         	movff	_co_ppm+1,?_sprintf+15
  2831   001FC6  C222  F0C4         	movff	_co_ppm+2,?_sprintf+16
  2832   001FCA  C223  F0C5         	movff	_co_ppm+3,?_sprintf+17
  2833   001FCE  0102               	movlb	2	; () banked
  2834   001FD0  5135               	movf	_pump_active& (0+255),w,b
  2835   001FD2  A4D8               	btfss	status,2,c
  2836   001FD4  EFEE  F00F         	goto	u9491
  2837   001FD8  EFF1  F00F         	goto	u9490
  2838   001FDC                     u9491:
  2839   001FDC  0E01               	movlw	1
  2840   001FDE  EFF2  F00F         	goto	u9500
  2841   001FE2                     u9490:
  2842   001FE2  0E00               	movlw	0
  2843   001FE4                     u9500:
  2844   001FE4  0100               	movlb	0	; () banked
  2845   001FE6  6FC6               	movwf	(?_sprintf+18)& (0+255),b
  2846   001FE8  6BC7               	clrf	(?_sprintf+19)& (0+255),b
  2847   001FEA  0102               	movlb	2	; () banked
  2848   001FEC  5134               	movf	_alarm_active& (0+255),w,b
  2849   001FEE  A4D8               	btfss	status,2,c
  2850   001FF0  EFFC  F00F         	goto	u9511
  2851   001FF4  EFFF  F00F         	goto	u9510
  2852   001FF8                     u9511:
  2853   001FF8  0E01               	movlw	1
  2854   001FFA  EF00  F010         	goto	u9520
  2855   001FFE                     u9510:
  2856   001FFE  0E00               	movlw	0
  2857   002000                     u9520:
  2858   002000  0100               	movlb	0	; () banked
  2859   002002  6FC8               	movwf	(?_sprintf+20)& (0+255),b
  2860   002004  6BC9               	clrf	(?_sprintf+21)& (0+255),b
  2861   002006  EC24  F00E         	call	_sprintf	;wreg free
  2862   00200A                     
  2863                           ;newmain.c: 301:     UART_Write_Text(buffer);
  2864   00200A  0E00               	movlw	low Send_Sensor_Data@buffer
  2865   00200C  6E02               	movwf	UART_Write_Text@text^0,c
  2866   00200E  0E01               	movlw	high Send_Sensor_Data@buffer
  2867   002010  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  2868   002012  EC04  F00F         	call	_UART_Write_Text	;wreg free
  2869   002016  0012               	return		;funcret
  2870   002018                     __end_of_Send_Sensor_Data:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function _Read_MQ2_Sensor *****************
  2874 ;; Defined at:
  2875 ;;		line 234 in file "newmain.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  i               2  206[BANK1 ] int 
  2880 ;;  rs_ro_ratio     4  216[BANK1 ] float 
  2881 ;;  ppm             4  212[BANK1 ] float 
  2882 ;;  sum             4  202[BANK1 ] float 
  2883 ;;  Rs              4  198[BANK1 ] float 
  2884 ;;  voltage         4  194[BANK1 ] float 
  2885 ;;  temp_factor     4  184[BANK1 ] float 
  2886 ;;  adc_value       2  192[BANK1 ] unsigned int 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0
  2897 ;;      Locals:         0       0      36       0       0       0       0       0       0
  2898 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2899 ;;      Totals:         0       2      36       0       0       0       0       0       0
  2900 ;;Total ram usage:       38 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 9
  2903 ;; This function calls:
  2904 ;;		_ADC_Read_Average
  2905 ;;		_Calibrate_MQ2
  2906 ;;		___awmod
  2907 ;;		___fladd
  2908 ;;		___fldiv
  2909 ;;		___flge
  2910 ;;		___flmul
  2911 ;;		___flsub
  2912 ;;		___xxtofl
  2913 ;;		_powf
  2914 ;; This function is called by:
  2915 ;;		_main
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text5
  2920   004A54                     __ptext5:
  2921                           	callstack 0
  2922   004A54                     _Read_MQ2_Sensor:
  2923                           	callstack 21
  2924   004A54                     
  2925                           ;newmain.c: 235:     static bool calibrated = 0;;newmain.c: 236:     if(!calibrated) {
  2926   004A54  0101               	movlb	1	; () banked
  2927   004A56  51FB               	movf	Read_MQ2_Sensor@calibrated& (0+255),w,b
  2928   004A58  A4D8               	btfss	status,2,c
  2929   004A5A  EF31  F025         	goto	u9411
  2930   004A5E  EF33  F025         	goto	u9410
  2931   004A62                     u9411:
  2932   004A62  EF38  F025         	goto	l7252
  2933   004A66                     u9410:
  2934   004A66                     
  2935                           ; BSR set to: 1
  2936                           ;newmain.c: 237:         Calibrate_MQ2();
  2937   004A66  EC70  F015         	call	_Calibrate_MQ2	;wreg free
  2938   004A6A                     
  2939                           ;newmain.c: 238:         calibrated = 1;
  2940   004A6A  0E01               	movlw	1
  2941   004A6C  0101               	movlb	1	; () banked
  2942   004A6E  6FFB               	movwf	Read_MQ2_Sensor@calibrated& (0+255),b
  2943   004A70                     l7252:
  2944                           
  2945                           ; BSR set to: 1
  2946                           ;newmain.c: 241:     unsigned int adc_value = ADC_Read_Average(2, 5);
  2947   004A70  0E05               	movlw	5
  2948   004A72  6E0E               	movwf	ADC_Read_Average@samples^0,c
  2949   004A74  0E02               	movlw	2
  2950   004A76  ECB7  F010         	call	_ADC_Read_Average
  2951   004A7A  C00E  F1C0         	movff	?_ADC_Read_Average,Read_MQ2_Sensor@adc_value
  2952   004A7E  C00F  F1C1         	movff	?_ADC_Read_Average+1,Read_MQ2_Sensor@adc_value+1
  2953   004A82                     
  2954                           ;newmain.c: 242:     float voltage = (adc_value * 5.0) / 1024.0;
  2955   004A82  0E00               	movlw	0
  2956   004A84  6E23               	movwf	___flmul@a^0,c
  2957   004A86  0E00               	movlw	0
  2958   004A88  6E24               	movwf	(___flmul@a+1)^0,c
  2959   004A8A  0EA0               	movlw	160
  2960   004A8C  6E25               	movwf	(___flmul@a+2)^0,c
  2961   004A8E  0E40               	movlw	64
  2962   004A90  6E26               	movwf	(___flmul@a+3)^0,c
  2963   004A92  C1C0  F001         	movff	Read_MQ2_Sensor@adc_value,___xxtofl@val
  2964   004A96  C1C1  F002         	movff	Read_MQ2_Sensor@adc_value+1,___xxtofl@val+1
  2965   004A9A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2966   004A9C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2967   004A9E  0E00               	movlw	0
  2968   004AA0  EC3A  F016         	call	___xxtofl
  2969   004AA4  C001  F01F         	movff	?___xxtofl,___flmul@b
  2970   004AA8  C002  F020         	movff	?___xxtofl+1,___flmul@b+1
  2971   004AAC  C003  F021         	movff	?___xxtofl+2,___flmul@b+2
  2972   004AB0  C004  F022         	movff	?___xxtofl+3,___flmul@b+3
  2973   004AB4  ECBC  F020         	call	___flmul	;wreg free
  2974   004AB8  C01F  F040         	movff	?___flmul,___fldiv@b
  2975   004ABC  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  2976   004AC0  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  2977   004AC4  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  2978   004AC8  0E00               	movlw	0
  2979   004ACA  6E44               	movwf	___fldiv@a^0,c
  2980   004ACC  0E00               	movlw	0
  2981   004ACE  6E45               	movwf	(___fldiv@a+1)^0,c
  2982   004AD0  0E80               	movlw	128
  2983   004AD2  6E46               	movwf	(___fldiv@a+2)^0,c
  2984   004AD4  0E44               	movlw	68
  2985   004AD6  6E47               	movwf	(___fldiv@a+3)^0,c
  2986   004AD8  EC05  F01D         	call	___fldiv	;wreg free
  2987   004ADC  C040  F1C2         	movff	?___fldiv,Read_MQ2_Sensor@voltage
  2988   004AE0  C041  F1C3         	movff	?___fldiv+1,Read_MQ2_Sensor@voltage+1
  2989   004AE4  C042  F1C4         	movff	?___fldiv+2,Read_MQ2_Sensor@voltage+2
  2990   004AE8  C043  F1C5         	movff	?___fldiv+3,Read_MQ2_Sensor@voltage+3
  2991   004AEC                     
  2992                           ;newmain.c: 245:     float Rs = (5.0 - voltage) / voltage;
  2993   004AEC  C1C2  F03C         	movff	Read_MQ2_Sensor@voltage,___flsub@a
  2994   004AF0  C1C3  F03D         	movff	Read_MQ2_Sensor@voltage+1,___flsub@a+1
  2995   004AF4  C1C4  F03E         	movff	Read_MQ2_Sensor@voltage+2,___flsub@a+2
  2996   004AF8  C1C5  F03F         	movff	Read_MQ2_Sensor@voltage+3,___flsub@a+3
  2997   004AFC  0E00               	movlw	0
  2998   004AFE  6E38               	movwf	___flsub@b^0,c
  2999   004B00  0E00               	movlw	0
  3000   004B02  6E39               	movwf	(___flsub@b+1)^0,c
  3001   004B04  0EA0               	movlw	160
  3002   004B06  6E3A               	movwf	(___flsub@b+2)^0,c
  3003   004B08  0E40               	movlw	64
  3004   004B0A  6E3B               	movwf	(___flsub@b+3)^0,c
  3005   004B0C  EC46  F00E         	call	___flsub	;wreg free
  3006   004B10  C038  F040         	movff	?___flsub,___fldiv@b
  3007   004B14  C039  F041         	movff	?___flsub+1,___fldiv@b+1
  3008   004B18  C03A  F042         	movff	?___flsub+2,___fldiv@b+2
  3009   004B1C  C03B  F043         	movff	?___flsub+3,___fldiv@b+3
  3010   004B20  C1C2  F044         	movff	Read_MQ2_Sensor@voltage,___fldiv@a
  3011   004B24  C1C3  F045         	movff	Read_MQ2_Sensor@voltage+1,___fldiv@a+1
  3012   004B28  C1C4  F046         	movff	Read_MQ2_Sensor@voltage+2,___fldiv@a+2
  3013   004B2C  C1C5  F047         	movff	Read_MQ2_Sensor@voltage+3,___fldiv@a+3
  3014   004B30  EC05  F01D         	call	___fldiv	;wreg free
  3015   004B34  C040  F1C6         	movff	?___fldiv,Read_MQ2_Sensor@Rs
  3016   004B38  C041  F1C7         	movff	?___fldiv+1,Read_MQ2_Sensor@Rs+1
  3017   004B3C  C042  F1C8         	movff	?___fldiv+2,Read_MQ2_Sensor@Rs+2
  3018   004B40  C043  F1C9         	movff	?___fldiv+3,Read_MQ2_Sensor@Rs+3
  3019   004B44                     
  3020                           ;newmain.c: 248:     float temp_factor = 1.0 + 0.02 * (temperature - 20.0);
  3021   004B44  0E0A               	movlw	10
  3022   004B46  6E23               	movwf	___flmul@a^0,c
  3023   004B48  0ED7               	movlw	215
  3024   004B4A  6E24               	movwf	(___flmul@a+1)^0,c
  3025   004B4C  0EA3               	movlw	163
  3026   004B4E  6E25               	movwf	(___flmul@a+2)^0,c
  3027   004B50  0E3C               	movlw	60
  3028   004B52  6E26               	movwf	(___flmul@a+3)^0,c
  3029   004B54  0E00               	movlw	0
  3030   004B56  6E13               	movwf	___fladd@a^0,c
  3031   004B58  0E00               	movlw	0
  3032   004B5A  6E14               	movwf	(___fladd@a+1)^0,c
  3033   004B5C  0EA0               	movlw	160
  3034   004B5E  6E15               	movwf	(___fladd@a+2)^0,c
  3035   004B60  0EC1               	movlw	193
  3036   004B62  6E16               	movwf	(___fladd@a+3)^0,c
  3037   004B64  C22C  F00F         	movff	_temperature,___fladd@b
  3038   004B68  C22D  F010         	movff	_temperature+1,___fladd@b+1
  3039   004B6C  C22E  F011         	movff	_temperature+2,___fladd@b+2
  3040   004B70  C22F  F012         	movff	_temperature+3,___fladd@b+3
  3041   004B74  ECCF  F022         	call	___fladd	;wreg free
  3042   004B78  C00F  F01F         	movff	?___fladd,___flmul@b
  3043   004B7C  C010  F020         	movff	?___fladd+1,___flmul@b+1
  3044   004B80  C011  F021         	movff	?___fladd+2,___flmul@b+2
  3045   004B84  C012  F022         	movff	?___fladd+3,___flmul@b+3
  3046   004B88  ECBC  F020         	call	___flmul	;wreg free
  3047   004B8C  C01F  F1BC         	movff	?___flmul,_Read_MQ2_Sensor$1487
  3048   004B90  C020  F1BD         	movff	?___flmul+1,_Read_MQ2_Sensor$1487+1
  3049   004B94  C021  F1BE         	movff	?___flmul+2,_Read_MQ2_Sensor$1487+2
  3050   004B98  C022  F1BF         	movff	?___flmul+3,_Read_MQ2_Sensor$1487+3
  3051   004B9C                     
  3052                           ;newmain.c: 248:     float temp_factor = 1.0 + 0.02 * (temperature - 20.0);
  3053   004B9C  C1BC  F00F         	movff	_Read_MQ2_Sensor$1487,___fladd@b
  3054   004BA0  C1BD  F010         	movff	_Read_MQ2_Sensor$1487+1,___fladd@b+1
  3055   004BA4  C1BE  F011         	movff	_Read_MQ2_Sensor$1487+2,___fladd@b+2
  3056   004BA8  C1BF  F012         	movff	_Read_MQ2_Sensor$1487+3,___fladd@b+3
  3057   004BAC  0E00               	movlw	0
  3058   004BAE  6E13               	movwf	___fladd@a^0,c
  3059   004BB0  0E00               	movlw	0
  3060   004BB2  6E14               	movwf	(___fladd@a+1)^0,c
  3061   004BB4  0E80               	movlw	128
  3062   004BB6  6E15               	movwf	(___fladd@a+2)^0,c
  3063   004BB8  0E3F               	movlw	63
  3064   004BBA  6E16               	movwf	(___fladd@a+3)^0,c
  3065   004BBC  ECCF  F022         	call	___fladd	;wreg free
  3066   004BC0  C00F  F1B8         	movff	?___fladd,Read_MQ2_Sensor@temp_factor
  3067   004BC4  C010  F1B9         	movff	?___fladd+1,Read_MQ2_Sensor@temp_factor+1
  3068   004BC8  C011  F1BA         	movff	?___fladd+2,Read_MQ2_Sensor@temp_factor+2
  3069   004BCC  C012  F1BB         	movff	?___fladd+3,Read_MQ2_Sensor@temp_factor+3
  3070   004BD0                     
  3071                           ;newmain.c: 249:     Rs = Rs / temp_factor;
  3072   004BD0  C1C6  F040         	movff	Read_MQ2_Sensor@Rs,___fldiv@b
  3073   004BD4  C1C7  F041         	movff	Read_MQ2_Sensor@Rs+1,___fldiv@b+1
  3074   004BD8  C1C8  F042         	movff	Read_MQ2_Sensor@Rs+2,___fldiv@b+2
  3075   004BDC  C1C9  F043         	movff	Read_MQ2_Sensor@Rs+3,___fldiv@b+3
  3076   004BE0  C1B8  F044         	movff	Read_MQ2_Sensor@temp_factor,___fldiv@a
  3077   004BE4  C1B9  F045         	movff	Read_MQ2_Sensor@temp_factor+1,___fldiv@a+1
  3078   004BE8  C1BA  F046         	movff	Read_MQ2_Sensor@temp_factor+2,___fldiv@a+2
  3079   004BEC  C1BB  F047         	movff	Read_MQ2_Sensor@temp_factor+3,___fldiv@a+3
  3080   004BF0  EC05  F01D         	call	___fldiv	;wreg free
  3081   004BF4  C040  F1C6         	movff	?___fldiv,Read_MQ2_Sensor@Rs
  3082   004BF8  C041  F1C7         	movff	?___fldiv+1,Read_MQ2_Sensor@Rs+1
  3083   004BFC  C042  F1C8         	movff	?___fldiv+2,Read_MQ2_Sensor@Rs+2
  3084   004C00  C043  F1C9         	movff	?___fldiv+3,Read_MQ2_Sensor@Rs+3
  3085   004C04                     
  3086                           ;newmain.c: 252:     float rs_ro_ratio = Rs / MQ2_Ro;
  3087   004C04  C1C6  F040         	movff	Read_MQ2_Sensor@Rs,___fldiv@b
  3088   004C08  C1C7  F041         	movff	Read_MQ2_Sensor@Rs+1,___fldiv@b+1
  3089   004C0C  C1C8  F042         	movff	Read_MQ2_Sensor@Rs+2,___fldiv@b+2
  3090   004C10  C1C9  F043         	movff	Read_MQ2_Sensor@Rs+3,___fldiv@b+3
  3091   004C14  C291  F044         	movff	_MQ2_Ro,___fldiv@a
  3092   004C18  C292  F045         	movff	_MQ2_Ro+1,___fldiv@a+1
  3093   004C1C  C293  F046         	movff	_MQ2_Ro+2,___fldiv@a+2
  3094   004C20  C294  F047         	movff	_MQ2_Ro+3,___fldiv@a+3
  3095   004C24  EC05  F01D         	call	___fldiv	;wreg free
  3096   004C28  C040  F1D8         	movff	?___fldiv,Read_MQ2_Sensor@rs_ro_ratio
  3097   004C2C  C041  F1D9         	movff	?___fldiv+1,Read_MQ2_Sensor@rs_ro_ratio+1
  3098   004C30  C042  F1DA         	movff	?___fldiv+2,Read_MQ2_Sensor@rs_ro_ratio+2
  3099   004C34  C043  F1DB         	movff	?___fldiv+3,Read_MQ2_Sensor@rs_ro_ratio+3
  3100   004C38                     
  3101                           ;newmain.c: 258:     if(rs_ro_ratio < 0.1) {
  3102   004C38  C1D8  F040         	movff	Read_MQ2_Sensor@rs_ro_ratio,___flge@ff1
  3103   004C3C  C1D9  F041         	movff	Read_MQ2_Sensor@rs_ro_ratio+1,___flge@ff1+1
  3104   004C40  C1DA  F042         	movff	Read_MQ2_Sensor@rs_ro_ratio+2,___flge@ff1+2
  3105   004C44  C1DB  F043         	movff	Read_MQ2_Sensor@rs_ro_ratio+3,___flge@ff1+3
  3106   004C48  0ECD               	movlw	205
  3107   004C4A  6E44               	movwf	___flge@ff2^0,c
  3108   004C4C  0ECC               	movlw	204
  3109   004C4E  6E45               	movwf	(___flge@ff2+1)^0,c
  3110   004C50  0ECC               	movlw	204
  3111   004C52  6E46               	movwf	(___flge@ff2+2)^0,c
  3112   004C54  0E3D               	movlw	61
  3113   004C56  6E47               	movwf	(___flge@ff2+3)^0,c
  3114   004C58  ECFB  F012         	call	___flge	;wreg free
  3115   004C5C  B0D8               	btfsc	status,0,c
  3116   004C5E  EF33  F026         	goto	u9421
  3117   004C62  EF35  F026         	goto	u9420
  3118   004C66                     u9421:
  3119   004C66  EF6C  F026         	goto	l7274
  3120   004C6A                     u9420:
  3121   004C6A                     
  3122                           ;newmain.c: 259:         ppm = 5000.0 * powf(rs_ro_ratio,-1.0);
  3123   004C6A  0E00               	movlw	0
  3124   004C6C  0100               	movlb	0	; () banked
  3125   004C6E  6F64               	movwf	powf@y& (0+255),b
  3126   004C70  0E00               	movlw	0
  3127   004C72  6F65               	movwf	(powf@y+1)& (0+255),b
  3128   004C74  0E80               	movlw	128
  3129   004C76  6F66               	movwf	(powf@y+2)& (0+255),b
  3130   004C78  0EBF               	movlw	191
  3131   004C7A  6F67               	movwf	(powf@y+3)& (0+255),b
  3132   004C7C  C1D8  F060         	movff	Read_MQ2_Sensor@rs_ro_ratio,powf@x
  3133   004C80  C1D9  F061         	movff	Read_MQ2_Sensor@rs_ro_ratio+1,powf@x+1
  3134   004C84  C1DA  F062         	movff	Read_MQ2_Sensor@rs_ro_ratio+2,powf@x+2
  3135   004C88  C1DB  F063         	movff	Read_MQ2_Sensor@rs_ro_ratio+3,powf@x+3
  3136   004C8C  EC9F  F02C         	call	_powf	;wreg free
  3137   004C90  C060  F1D0         	movff	?_powf,_Read_MQ2_Sensor$1488
  3138   004C94  C061  F1D1         	movff	?_powf+1,_Read_MQ2_Sensor$1488+1
  3139   004C98  C062  F1D2         	movff	?_powf+2,_Read_MQ2_Sensor$1488+2
  3140   004C9C  C063  F1D3         	movff	?_powf+3,_Read_MQ2_Sensor$1488+3
  3141   004CA0                     
  3142                           ;newmain.c: 259:         ppm = 5000.0 * powf(rs_ro_ratio,-1.0);
  3143   004CA0  C1D0  F01F         	movff	_Read_MQ2_Sensor$1488,___flmul@b
  3144   004CA4  C1D1  F020         	movff	_Read_MQ2_Sensor$1488+1,___flmul@b+1
  3145   004CA8  C1D2  F021         	movff	_Read_MQ2_Sensor$1488+2,___flmul@b+2
  3146   004CAC  C1D3  F022         	movff	_Read_MQ2_Sensor$1488+3,___flmul@b+3
  3147   004CB0  0E00               	movlw	0
  3148   004CB2  6E23               	movwf	___flmul@a^0,c
  3149   004CB4  0E40               	movlw	64
  3150   004CB6  6E24               	movwf	(___flmul@a+1)^0,c
  3151   004CB8  0E9C               	movlw	156
  3152   004CBA  6E25               	movwf	(___flmul@a+2)^0,c
  3153   004CBC  0E45               	movlw	69
  3154   004CBE  6E26               	movwf	(___flmul@a+3)^0,c
  3155   004CC0  ECBC  F020         	call	___flmul	;wreg free
  3156   004CC4  C01F  F1D4         	movff	?___flmul,Read_MQ2_Sensor@ppm
  3157   004CC8  C020  F1D5         	movff	?___flmul+1,Read_MQ2_Sensor@ppm+1
  3158   004CCC  C021  F1D6         	movff	?___flmul+2,Read_MQ2_Sensor@ppm+2
  3159   004CD0  C022  F1D7         	movff	?___flmul+3,Read_MQ2_Sensor@ppm+3
  3160                           
  3161                           ;newmain.c: 260:     }
  3162   004CD4  EFF1  F026         	goto	l7284
  3163   004CD8                     l7274:
  3164   004CD8  C1D8  F040         	movff	Read_MQ2_Sensor@rs_ro_ratio,___flge@ff1
  3165   004CDC  C1D9  F041         	movff	Read_MQ2_Sensor@rs_ro_ratio+1,___flge@ff1+1
  3166   004CE0  C1DA  F042         	movff	Read_MQ2_Sensor@rs_ro_ratio+2,___flge@ff1+2
  3167   004CE4  C1DB  F043         	movff	Read_MQ2_Sensor@rs_ro_ratio+3,___flge@ff1+3
  3168   004CE8  0E00               	movlw	0
  3169   004CEA  6E44               	movwf	___flge@ff2^0,c
  3170   004CEC  0E00               	movlw	0
  3171   004CEE  6E45               	movwf	(___flge@ff2+1)^0,c
  3172   004CF0  0E00               	movlw	0
  3173   004CF2  6E46               	movwf	(___flge@ff2+2)^0,c
  3174   004CF4  0E3F               	movlw	63
  3175   004CF6  6E47               	movwf	(___flge@ff2+3)^0,c
  3176   004CF8  ECFB  F012         	call	___flge	;wreg free
  3177   004CFC  B0D8               	btfsc	status,0,c
  3178   004CFE  EF83  F026         	goto	u9431
  3179   004D02  EF85  F026         	goto	u9430
  3180   004D06                     u9431:
  3181   004D06  EFBC  F026         	goto	l7280
  3182   004D0A                     u9430:
  3183   004D0A                     
  3184                           ;newmain.c: 263:         ppm = 1000.0 * powf(rs_ro_ratio,-1.5);
  3185   004D0A  0E00               	movlw	0
  3186   004D0C  0100               	movlb	0	; () banked
  3187   004D0E  6F64               	movwf	powf@y& (0+255),b
  3188   004D10  0E00               	movlw	0
  3189   004D12  6F65               	movwf	(powf@y+1)& (0+255),b
  3190   004D14  0EC0               	movlw	192
  3191   004D16  6F66               	movwf	(powf@y+2)& (0+255),b
  3192   004D18  0EBF               	movlw	191
  3193   004D1A  6F67               	movwf	(powf@y+3)& (0+255),b
  3194   004D1C  C1D8  F060         	movff	Read_MQ2_Sensor@rs_ro_ratio,powf@x
  3195   004D20  C1D9  F061         	movff	Read_MQ2_Sensor@rs_ro_ratio+1,powf@x+1
  3196   004D24  C1DA  F062         	movff	Read_MQ2_Sensor@rs_ro_ratio+2,powf@x+2
  3197   004D28  C1DB  F063         	movff	Read_MQ2_Sensor@rs_ro_ratio+3,powf@x+3
  3198   004D2C  EC9F  F02C         	call	_powf	;wreg free
  3199   004D30  C060  F1D0         	movff	?_powf,_Read_MQ2_Sensor$1488
  3200   004D34  C061  F1D1         	movff	?_powf+1,_Read_MQ2_Sensor$1488+1
  3201   004D38  C062  F1D2         	movff	?_powf+2,_Read_MQ2_Sensor$1488+2
  3202   004D3C  C063  F1D3         	movff	?_powf+3,_Read_MQ2_Sensor$1488+3
  3203   004D40                     
  3204                           ;newmain.c: 263:         ppm = 1000.0 * powf(rs_ro_ratio,-1.5);
  3205   004D40  C1D0  F01F         	movff	_Read_MQ2_Sensor$1488,___flmul@b
  3206   004D44  C1D1  F020         	movff	_Read_MQ2_Sensor$1488+1,___flmul@b+1
  3207   004D48  C1D2  F021         	movff	_Read_MQ2_Sensor$1488+2,___flmul@b+2
  3208   004D4C  C1D3  F022         	movff	_Read_MQ2_Sensor$1488+3,___flmul@b+3
  3209   004D50  0E00               	movlw	0
  3210   004D52  6E23               	movwf	___flmul@a^0,c
  3211   004D54  0E00               	movlw	0
  3212   004D56  6E24               	movwf	(___flmul@a+1)^0,c
  3213   004D58  0E7A               	movlw	122
  3214   004D5A  6E25               	movwf	(___flmul@a+2)^0,c
  3215   004D5C  0E44               	movlw	68
  3216   004D5E  6E26               	movwf	(___flmul@a+3)^0,c
  3217   004D60  ECBC  F020         	call	___flmul	;wreg free
  3218   004D64  C01F  F1D4         	movff	?___flmul,Read_MQ2_Sensor@ppm
  3219   004D68  C020  F1D5         	movff	?___flmul+1,Read_MQ2_Sensor@ppm+1
  3220   004D6C  C021  F1D6         	movff	?___flmul+2,Read_MQ2_Sensor@ppm+2
  3221   004D70  C022  F1D7         	movff	?___flmul+3,Read_MQ2_Sensor@ppm+3
  3222                           
  3223                           ;newmain.c: 264:     }
  3224   004D74  EFF1  F026         	goto	l7284
  3225   004D78                     l7280:
  3226                           
  3227                           ;newmain.c: 267:         ppm = 100.0 * powf(rs_ro_ratio,-2.0);
  3228   004D78  0E00               	movlw	0
  3229   004D7A  0100               	movlb	0	; () banked
  3230   004D7C  6F64               	movwf	powf@y& (0+255),b
  3231   004D7E  0E00               	movlw	0
  3232   004D80  6F65               	movwf	(powf@y+1)& (0+255),b
  3233   004D82  0E00               	movlw	0
  3234   004D84  6F66               	movwf	(powf@y+2)& (0+255),b
  3235   004D86  0EC0               	movlw	192
  3236   004D88  6F67               	movwf	(powf@y+3)& (0+255),b
  3237   004D8A  C1D8  F060         	movff	Read_MQ2_Sensor@rs_ro_ratio,powf@x
  3238   004D8E  C1D9  F061         	movff	Read_MQ2_Sensor@rs_ro_ratio+1,powf@x+1
  3239   004D92  C1DA  F062         	movff	Read_MQ2_Sensor@rs_ro_ratio+2,powf@x+2
  3240   004D96  C1DB  F063         	movff	Read_MQ2_Sensor@rs_ro_ratio+3,powf@x+3
  3241   004D9A  EC9F  F02C         	call	_powf	;wreg free
  3242   004D9E  C060  F1D0         	movff	?_powf,_Read_MQ2_Sensor$1488
  3243   004DA2  C061  F1D1         	movff	?_powf+1,_Read_MQ2_Sensor$1488+1
  3244   004DA6  C062  F1D2         	movff	?_powf+2,_Read_MQ2_Sensor$1488+2
  3245   004DAA  C063  F1D3         	movff	?_powf+3,_Read_MQ2_Sensor$1488+3
  3246   004DAE                     
  3247                           ;newmain.c: 267:         ppm = 100.0 * powf(rs_ro_ratio,-2.0);
  3248   004DAE  C1D0  F01F         	movff	_Read_MQ2_Sensor$1488,___flmul@b
  3249   004DB2  C1D1  F020         	movff	_Read_MQ2_Sensor$1488+1,___flmul@b+1
  3250   004DB6  C1D2  F021         	movff	_Read_MQ2_Sensor$1488+2,___flmul@b+2
  3251   004DBA  C1D3  F022         	movff	_Read_MQ2_Sensor$1488+3,___flmul@b+3
  3252   004DBE  0E00               	movlw	0
  3253   004DC0  6E23               	movwf	___flmul@a^0,c
  3254   004DC2  0E00               	movlw	0
  3255   004DC4  6E24               	movwf	(___flmul@a+1)^0,c
  3256   004DC6  0EC8               	movlw	200
  3257   004DC8  6E25               	movwf	(___flmul@a+2)^0,c
  3258   004DCA  0E42               	movlw	66
  3259   004DCC  6E26               	movwf	(___flmul@a+3)^0,c
  3260   004DCE  ECBC  F020         	call	___flmul	;wreg free
  3261   004DD2  C01F  F1D4         	movff	?___flmul,Read_MQ2_Sensor@ppm
  3262   004DD6  C020  F1D5         	movff	?___flmul+1,Read_MQ2_Sensor@ppm+1
  3263   004DDA  C021  F1D6         	movff	?___flmul+2,Read_MQ2_Sensor@ppm+2
  3264   004DDE  C022  F1D7         	movff	?___flmul+3,Read_MQ2_Sensor@ppm+3
  3265   004DE2                     l7284:
  3266                           
  3267                           ;newmain.c: 271:     if(ppm < 0) ppm = 0;
  3268   004DE2  0101               	movlb	1	; () banked
  3269   004DE4  BFD7               	btfsc	(Read_MQ2_Sensor@ppm+3)& (0+255),7,b
  3270   004DE6  EFF9  F026         	goto	u9440
  3271   004DEA  EFF7  F026         	goto	u9441
  3272   004DEE                     u9441:
  3273   004DEE  EF01  F027         	goto	l7288
  3274   004DF2                     u9440:
  3275   004DF2                     
  3276                           ; BSR set to: 1
  3277   004DF2  0E00               	movlw	0
  3278   004DF4  6FD4               	movwf	Read_MQ2_Sensor@ppm& (0+255),b
  3279   004DF6  0E00               	movlw	0
  3280   004DF8  6FD5               	movwf	(Read_MQ2_Sensor@ppm+1)& (0+255),b
  3281   004DFA  0E00               	movlw	0
  3282   004DFC  6FD6               	movwf	(Read_MQ2_Sensor@ppm+2)& (0+255),b
  3283   004DFE  0E00               	movlw	0
  3284   004E00  6FD7               	movwf	(Read_MQ2_Sensor@ppm+3)& (0+255),b
  3285   004E02                     l7288:
  3286                           
  3287                           ; BSR set to: 1
  3288                           ;newmain.c: 272:     if(ppm > 10000) ppm = 10000;
  3289   004E02  0E00               	movlw	0
  3290   004E04  6E40               	movwf	___flge@ff1^0,c
  3291   004E06  0E40               	movlw	64
  3292   004E08  6E41               	movwf	(___flge@ff1+1)^0,c
  3293   004E0A  0E1C               	movlw	28
  3294   004E0C  6E42               	movwf	(___flge@ff1+2)^0,c
  3295   004E0E  0E46               	movlw	70
  3296   004E10  6E43               	movwf	(___flge@ff1+3)^0,c
  3297   004E12  C1D4  F044         	movff	Read_MQ2_Sensor@ppm,___flge@ff2
  3298   004E16  C1D5  F045         	movff	Read_MQ2_Sensor@ppm+1,___flge@ff2+1
  3299   004E1A  C1D6  F046         	movff	Read_MQ2_Sensor@ppm+2,___flge@ff2+2
  3300   004E1E  C1D7  F047         	movff	Read_MQ2_Sensor@ppm+3,___flge@ff2+3
  3301   004E22  ECFB  F012         	call	___flge	;wreg free
  3302   004E26  B0D8               	btfsc	status,0,c
  3303   004E28  EF18  F027         	goto	u9451
  3304   004E2C  EF1A  F027         	goto	u9450
  3305   004E30                     u9451:
  3306   004E30  EF23  F027         	goto	l7292
  3307   004E34                     u9450:
  3308   004E34  0E00               	movlw	0
  3309   004E36  0101               	movlb	1	; () banked
  3310   004E38  6FD4               	movwf	Read_MQ2_Sensor@ppm& (0+255),b
  3311   004E3A  0E40               	movlw	64
  3312   004E3C  6FD5               	movwf	(Read_MQ2_Sensor@ppm+1)& (0+255),b
  3313   004E3E  0E1C               	movlw	28
  3314   004E40  6FD6               	movwf	(Read_MQ2_Sensor@ppm+2)& (0+255),b
  3315   004E42  0E46               	movlw	70
  3316   004E44  6FD7               	movwf	(Read_MQ2_Sensor@ppm+3)& (0+255),b
  3317   004E46                     l7292:
  3318                           
  3319                           ;newmain.c: 275:     mq2_history[mq2_history_index] = ppm;
  3320   004E46  0100               	movlb	0	; () banked
  3321   004E48  51FF               	movf	_mq2_history_index& (0+255),w,b
  3322   004E4A  0D04               	mullw	4
  3323   004E4C  0E00               	movlw	low _mq2_history
  3324   004E4E  24F3               	addwf	243,w,c
  3325   004E50  6ED9               	movwf	fsr2l,c
  3326   004E52  0E02               	movlw	high _mq2_history
  3327   004E54  20F4               	addwfc	prodh,w,c
  3328   004E56  6EDA               	movwf	fsr2h,c
  3329   004E58  C1D4  FFDE         	movff	Read_MQ2_Sensor@ppm,postinc2
  3330   004E5C  C1D5  FFDE         	movff	Read_MQ2_Sensor@ppm+1,postinc2
  3331   004E60  C1D6  FFDE         	movff	Read_MQ2_Sensor@ppm+2,postinc2
  3332   004E64  C1D7  FFDE         	movff	Read_MQ2_Sensor@ppm+3,postinc2
  3333   004E68                     
  3334                           ; BSR set to: 0
  3335                           ;newmain.c: 276:     mq2_history_index = (mq2_history_index + 1) % 5;
  3336   004E68  0E01               	movlw	1
  3337   004E6A  25FF               	addwf	_mq2_history_index& (0+255),w,b
  3338   004E6C  6E01               	movwf	___awmod@dividend^0,c
  3339   004E6E  6A02               	clrf	(___awmod@dividend+1)^0,c
  3340   004E70  0E00               	movlw	0
  3341   004E72  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3342   004E74  0E00               	movlw	0
  3343   004E76  6E04               	movwf	(___awmod@divisor+1)^0,c
  3344   004E78  0E05               	movlw	5
  3345   004E7A  6E03               	movwf	___awmod@divisor^0,c
  3346   004E7C  EC0E  F011         	call	___awmod	;wreg free
  3347   004E80  5001               	movf	?___awmod^0,w,c
  3348   004E82  0100               	movlb	0	; () banked
  3349   004E84  6FFF               	movwf	_mq2_history_index& (0+255),b
  3350   004E86                     
  3351                           ; BSR set to: 0
  3352                           ;newmain.c: 279:     float sum = 0;
  3353   004E86  0E00               	movlw	0
  3354   004E88  0101               	movlb	1	; () banked
  3355   004E8A  6FCA               	movwf	Read_MQ2_Sensor@sum& (0+255),b
  3356   004E8C  0E00               	movlw	0
  3357   004E8E  6FCB               	movwf	(Read_MQ2_Sensor@sum+1)& (0+255),b
  3358   004E90  0E00               	movlw	0
  3359   004E92  6FCC               	movwf	(Read_MQ2_Sensor@sum+2)& (0+255),b
  3360   004E94  0E00               	movlw	0
  3361   004E96  6FCD               	movwf	(Read_MQ2_Sensor@sum+3)& (0+255),b
  3362   004E98                     
  3363                           ; BSR set to: 1
  3364                           ;newmain.c: 280:     for(int i = 0; i < 5; i++) {
  3365   004E98  0E00               	movlw	0
  3366   004E9A  6FCF               	movwf	(Read_MQ2_Sensor@i+1)& (0+255),b
  3367   004E9C  0E00               	movlw	0
  3368   004E9E  6FCE               	movwf	Read_MQ2_Sensor@i& (0+255),b
  3369   004EA0                     l7304:
  3370                           
  3371                           ; BSR set to: 1
  3372                           ;newmain.c: 281:         sum += mq2_history[i];
  3373   004EA0  C1CA  F00F         	movff	Read_MQ2_Sensor@sum,___fladd@b
  3374   004EA4  C1CB  F010         	movff	Read_MQ2_Sensor@sum+1,___fladd@b+1
  3375   004EA8  C1CC  F011         	movff	Read_MQ2_Sensor@sum+2,___fladd@b+2
  3376   004EAC  C1CD  F012         	movff	Read_MQ2_Sensor@sum+3,___fladd@b+3
  3377   004EB0  0E00               	movlw	low _mq2_history
  3378   004EB2  0100               	movlb	0	; () banked
  3379   004EB4  6FD8               	movwf	??_Read_MQ2_Sensor& (0+255),b
  3380   004EB6  0E02               	movlw	high _mq2_history
  3381   004EB8  6FD9               	movwf	(??_Read_MQ2_Sensor+1)& (0+255),b
  3382   004EBA  90D8               	bcf	status,0,c
  3383   004EBC  0101               	movlb	1	; () banked
  3384   004EBE  35CE               	rlcf	Read_MQ2_Sensor@i& (0+255),w,b
  3385   004EC0  6ED9               	movwf	fsr2l,c
  3386   004EC2  35CF               	rlcf	(Read_MQ2_Sensor@i+1)& (0+255),w,b
  3387   004EC4  6EDA               	movwf	fsr2h,c
  3388   004EC6  90D8               	bcf	status,0,c
  3389   004EC8  36D9               	rlcf	fsr2l,f,c
  3390   004ECA  36DA               	rlcf	fsr2h,f,c
  3391   004ECC  0100               	movlb	0	; () banked
  3392   004ECE  51D8               	movf	??_Read_MQ2_Sensor& (0+255),w,b
  3393   004ED0  26D9               	addwf	fsr2l,f,c
  3394   004ED2  51D9               	movf	(??_Read_MQ2_Sensor+1)& (0+255),w,b
  3395   004ED4  22DA               	addwfc	fsr2h,f,c
  3396   004ED6  CFDE F013          	movff	postinc2,___fladd@a
  3397   004EDA  CFDE F014          	movff	postinc2,___fladd@a+1
  3398   004EDE  CFDE F015          	movff	postinc2,___fladd@a+2
  3399   004EE2  CFDE F016          	movff	postinc2,___fladd@a+3
  3400   004EE6  ECCF  F022         	call	___fladd	;wreg free
  3401   004EEA  C00F  F1CA         	movff	?___fladd,Read_MQ2_Sensor@sum
  3402   004EEE  C010  F1CB         	movff	?___fladd+1,Read_MQ2_Sensor@sum+1
  3403   004EF2  C011  F1CC         	movff	?___fladd+2,Read_MQ2_Sensor@sum+2
  3404   004EF6  C012  F1CD         	movff	?___fladd+3,Read_MQ2_Sensor@sum+3
  3405   004EFA                     
  3406                           ;newmain.c: 282:     }
  3407   004EFA  0101               	movlb	1	; () banked
  3408   004EFC  4BCE               	infsnz	Read_MQ2_Sensor@i& (0+255),f,b
  3409   004EFE  2BCF               	incf	(Read_MQ2_Sensor@i+1)& (0+255),f,b
  3410   004F00                     
  3411                           ; BSR set to: 1
  3412   004F00  BFCF               	btfsc	(Read_MQ2_Sensor@i+1)& (0+255),7,b
  3413   004F02  EF8C  F027         	goto	u9461
  3414   004F06  51CF               	movf	(Read_MQ2_Sensor@i+1)& (0+255),w,b
  3415   004F08  E109               	bnz	u9460
  3416   004F0A  0E05               	movlw	5
  3417   004F0C  5DCE               	subwf	Read_MQ2_Sensor@i& (0+255),w,b
  3418   004F0E  A0D8               	btfss	status,0,c
  3419   004F10  EF8C  F027         	goto	u9461
  3420   004F14  EF8E  F027         	goto	u9460
  3421   004F18                     u9461:
  3422   004F18  EF50  F027         	goto	l7304
  3423   004F1C                     u9460:
  3424   004F1C                     
  3425                           ; BSR set to: 1
  3426                           ;newmain.c: 283:     co_ppm = sum / 5;
  3427   004F1C  C1CA  F040         	movff	Read_MQ2_Sensor@sum,___fldiv@b
  3428   004F20  C1CB  F041         	movff	Read_MQ2_Sensor@sum+1,___fldiv@b+1
  3429   004F24  C1CC  F042         	movff	Read_MQ2_Sensor@sum+2,___fldiv@b+2
  3430   004F28  C1CD  F043         	movff	Read_MQ2_Sensor@sum+3,___fldiv@b+3
  3431   004F2C  0E00               	movlw	0
  3432   004F2E  6E44               	movwf	___fldiv@a^0,c
  3433   004F30  0E00               	movlw	0
  3434   004F32  6E45               	movwf	(___fldiv@a+1)^0,c
  3435   004F34  0EA0               	movlw	160
  3436   004F36  6E46               	movwf	(___fldiv@a+2)^0,c
  3437   004F38  0E40               	movlw	64
  3438   004F3A  6E47               	movwf	(___fldiv@a+3)^0,c
  3439   004F3C  EC05  F01D         	call	___fldiv	;wreg free
  3440   004F40  C040  F220         	movff	?___fldiv,_co_ppm
  3441   004F44  C041  F221         	movff	?___fldiv+1,_co_ppm+1
  3442   004F48  C042  F222         	movff	?___fldiv+2,_co_ppm+2
  3443   004F4C  C043  F223         	movff	?___fldiv+3,_co_ppm+3
  3444   004F50  0012               	return		;funcret
  3445   004F52                     __end_of_Read_MQ2_Sensor:
  3446                           	callstack 0
  3447                           
  3448 ;; *************** function _powf *****************
  3449 ;; Defined at:
  3450 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\powf.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  x               4    0[BANK0 ] float 
  3453 ;;  y               4    4[BANK0 ] float 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  s2              4  144[BANK1 ] float 
  3456 ;;  s_h             4  116[BANK1 ] struct fui
  3457 ;;  t_h             4  112[BANK1 ] struct fui
  3458 ;;  t_l             4   52[BANK1 ] float 
  3459 ;;  s_l             4   48[BANK1 ] float 
  3460 ;;  z               4  180[BANK1 ] struct fui
  3461 ;;  t               4  176[BANK1 ] struct fui
  3462 ;;  ix              4  172[BANK1 ] struct fui
  3463 ;;  j               4  168[BANK1 ] long 
  3464 ;;  k               4  164[BANK1 ] long 
  3465 ;;  p_h             4  160[BANK1 ] struct fui
  3466 ;;  is              4  152[BANK1 ] struct fui
  3467 ;;  iy              4  148[BANK1 ] long 
  3468 ;;  t1              4  140[BANK1 ] struct fui
  3469 ;;  n               4  136[BANK1 ] long 
  3470 ;;  hy              4  132[BANK1 ] struct fui
  3471 ;;  v               4  128[BANK1 ] float 
  3472 ;;  u               4  124[BANK1 ] float 
  3473 ;;  ax              4  120[BANK1 ] struct fui
  3474 ;;  p_l             4  108[BANK1 ] float 
  3475 ;;  hx              4  104[BANK1 ] struct fui
  3476 ;;  sn              4  100[BANK1 ] unsigned long 
  3477 ;;  s               4   96[BANK1 ] float 
  3478 ;;  yisint          4   84[BANK1 ] long 
  3479 ;;  r               4   80[BANK1 ] float 
  3480 ;;  w               4   68[BANK1 ] float 
  3481 ;;  y1              4   44[BANK1 ] struct fui
  3482 ;;  i               4   40[BANK1 ] long 
  3483 ;;  z_l             4   36[BANK1 ] float 
  3484 ;;  z_h             4   32[BANK1 ] float 
  3485 ;;  t2              4   28[BANK1 ] float 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  4    0[BANK0 ] float 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3495 ;;      Params:         0       8       0       0       0       0       0       0       0
  3496 ;;      Locals:         0       0     184       0       0       0       0       0       0
  3497 ;;      Temps:          0       9       0       0       0       0       0       0       0
  3498 ;;      Totals:         0      17     184       0       0       0       0       0       0
  3499 ;;Total ram usage:      201 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; Hardware stack levels required when called: 2
  3502 ;; This function calls:
  3503 ;;		___fladd
  3504 ;;		___fldiv
  3505 ;;		___flge
  3506 ;;		___flmul
  3507 ;;		___flneg
  3508 ;;		___flsub
  3509 ;;		___xxtofl
  3510 ;;		_scalbnf
  3511 ;;		_sqrtf
  3512 ;; This function is called by:
  3513 ;;		_Read_MQ2_Sensor
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text6
  3518   00593E                     __ptext6:
  3519                           	callstack 0
  3520   00593E                     _powf:
  3521                           	callstack 27
  3522   00593E  C060  F168         	movff	powf@x,powf@hx
  3523   005942  C061  F169         	movff	powf@x+1,powf@hx+1
  3524   005946  C062  F16A         	movff	powf@x+2,powf@hx+2
  3525   00594A  C063  F16B         	movff	powf@x+3,powf@hx+3
  3526   00594E  C064  F184         	movff	powf@y,powf@hy
  3527   005952  C065  F185         	movff	powf@y+1,powf@hy+1
  3528   005956  C066  F186         	movff	powf@y+2,powf@hy+2
  3529   00595A  C067  F187         	movff	powf@y+3,powf@hy+3
  3530   00595E  0EFF               	movlw	255
  3531   005960  0101               	movlb	1	; () banked
  3532   005962  1568               	andwf	powf@hx& (0+255),w,b
  3533   005964  6FAC               	movwf	powf@ix& (0+255),b
  3534   005966  0EFF               	movlw	255
  3535   005968  1569               	andwf	(powf@hx+1)& (0+255),w,b
  3536   00596A  6FAD               	movwf	(powf@ix+1)& (0+255),b
  3537   00596C  0EFF               	movlw	255
  3538   00596E  156A               	andwf	(powf@hx+2)& (0+255),w,b
  3539   005970  6FAE               	movwf	(powf@ix+2)& (0+255),b
  3540   005972  0E7F               	movlw	127
  3541   005974  156B               	andwf	(powf@hx+3)& (0+255),w,b
  3542   005976  6FAF               	movwf	(powf@ix+3)& (0+255),b
  3543   005978  0EFF               	movlw	255
  3544   00597A  1584               	andwf	powf@hy& (0+255),w,b
  3545   00597C  6F94               	movwf	powf@iy& (0+255),b
  3546   00597E  0EFF               	movlw	255
  3547   005980  1585               	andwf	(powf@hy+1)& (0+255),w,b
  3548   005982  6F95               	movwf	(powf@iy+1)& (0+255),b
  3549   005984  0EFF               	movlw	255
  3550   005986  1586               	andwf	(powf@hy+2)& (0+255),w,b
  3551   005988  6F96               	movwf	(powf@iy+2)& (0+255),b
  3552   00598A  0E7F               	movlw	127
  3553   00598C  1587               	andwf	(powf@hy+3)& (0+255),w,b
  3554   00598E  6F97               	movwf	(powf@iy+3)& (0+255),b
  3555   005990  5194               	movf	powf@iy& (0+255),w,b
  3556   005992  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  3557   005994  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  3558   005996  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  3559   005998  A4D8               	btfss	status,2,c
  3560   00599A  EFD1  F02C         	goto	u8761
  3561   00599E  EFD3  F02C         	goto	u8760
  3562   0059A2                     u8761:
  3563   0059A2  EFDE  F02C         	goto	l6792
  3564   0059A6                     u8760:
  3565   0059A6                     
  3566                           ; BSR set to: 1
  3567   0059A6  0E00               	movlw	0
  3568   0059A8  0100               	movlb	0	; () banked
  3569   0059AA  6F60               	movwf	?_powf& (0+255),b
  3570   0059AC  0E00               	movlw	0
  3571   0059AE  6F61               	movwf	(?_powf+1)& (0+255),b
  3572   0059B0  0E80               	movlw	128
  3573   0059B2  6F62               	movwf	(?_powf+2)& (0+255),b
  3574   0059B4  0E3F               	movlw	63
  3575   0059B6  6F63               	movwf	(?_powf+3)& (0+255),b
  3576   0059B8  EFF8  F03E         	goto	l1127
  3577   0059BC                     l6792:
  3578                           
  3579                           ; BSR set to: 1
  3580   0059BC  0E80               	movlw	128
  3581   0059BE  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  3582   0059C0  E109               	bnz	u8771
  3583   0059C2  0E3F               	movlw	63
  3584   0059C4  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  3585   0059C6  1168               	iorwf	powf@hx& (0+255),w,b
  3586   0059C8  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  3587   0059CA  A4D8               	btfss	status,2,c
  3588   0059CC  EFEA  F02C         	goto	u8771
  3589   0059D0  EFEC  F02C         	goto	u8770
  3590   0059D4                     u8771:
  3591   0059D4  EFF7  F02C         	goto	l6798
  3592   0059D8                     u8770:
  3593   0059D8                     
  3594                           ; BSR set to: 1
  3595   0059D8  0E00               	movlw	0
  3596   0059DA  0100               	movlb	0	; () banked
  3597   0059DC  6F60               	movwf	?_powf& (0+255),b
  3598   0059DE  0E00               	movlw	0
  3599   0059E0  6F61               	movwf	(?_powf+1)& (0+255),b
  3600   0059E2  0E80               	movlw	128
  3601   0059E4  6F62               	movwf	(?_powf+2)& (0+255),b
  3602   0059E6  0E3F               	movlw	63
  3603   0059E8  6F63               	movwf	(?_powf+3)& (0+255),b
  3604   0059EA  EFF8  F03E         	goto	l1127
  3605   0059EE                     l6798:
  3606                           
  3607                           ; BSR set to: 1
  3608   0059EE  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  3609   0059F0  EF08  F02D         	goto	u8780
  3610   0059F4  05AC               	decf	powf@ix& (0+255),w,b
  3611   0059F6  0E00               	movlw	0
  3612   0059F8  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  3613   0059FA  0E80               	movlw	128
  3614   0059FC  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  3615   0059FE  0E7F               	movlw	127
  3616   005A00  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  3617   005A02  B0D8               	btfsc	status,0,c
  3618   005A04  EF06  F02D         	goto	u8781
  3619   005A08  EF08  F02D         	goto	u8780
  3620   005A0C                     u8781:
  3621   005A0C  EF19  F02D         	goto	l6802
  3622   005A10                     u8780:
  3623   005A10                     
  3624                           ; BSR set to: 1
  3625   005A10  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  3626   005A12  EF17  F02D         	goto	u8791
  3627   005A16  0594               	decf	powf@iy& (0+255),w,b
  3628   005A18  0E00               	movlw	0
  3629   005A1A  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  3630   005A1C  0E80               	movlw	128
  3631   005A1E  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  3632   005A20  0E7F               	movlw	127
  3633   005A22  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  3634   005A24  A0D8               	btfss	status,0,c
  3635   005A26  EF17  F02D         	goto	u8791
  3636   005A2A  EF19  F02D         	goto	u8790
  3637   005A2E                     u8791:
  3638   005A2E  EF35  F02D         	goto	l6806
  3639   005A32                     u8790:
  3640   005A32                     l6802:
  3641                           
  3642                           ; BSR set to: 1
  3643   005A32  C060  F00F         	movff	powf@x,___fladd@b
  3644   005A36  C061  F010         	movff	powf@x+1,___fladd@b+1
  3645   005A3A  C062  F011         	movff	powf@x+2,___fladd@b+2
  3646   005A3E  C063  F012         	movff	powf@x+3,___fladd@b+3
  3647   005A42  C064  F013         	movff	powf@y,___fladd@a
  3648   005A46  C065  F014         	movff	powf@y+1,___fladd@a+1
  3649   005A4A  C066  F015         	movff	powf@y+2,___fladd@a+2
  3650   005A4E  C067  F016         	movff	powf@y+3,___fladd@a+3
  3651   005A52  ECCF  F022         	call	___fladd	;wreg free
  3652   005A56  C00F  F060         	movff	?___fladd,?_powf
  3653   005A5A  C010  F061         	movff	?___fladd+1,?_powf+1
  3654   005A5E  C011  F062         	movff	?___fladd+2,?_powf+2
  3655   005A62  C012  F063         	movff	?___fladd+3,?_powf+3
  3656   005A66  EFF8  F03E         	goto	l1127
  3657   005A6A                     l6806:
  3658                           
  3659                           ; BSR set to: 1
  3660   005A6A  0E00               	movlw	0
  3661   005A6C  6F54               	movwf	powf@yisint& (0+255),b
  3662   005A6E  0E00               	movlw	0
  3663   005A70  6F55               	movwf	(powf@yisint+1)& (0+255),b
  3664   005A72  0E00               	movlw	0
  3665   005A74  6F56               	movwf	(powf@yisint+2)& (0+255),b
  3666   005A76  0E00               	movlw	0
  3667   005A78  6F57               	movwf	(powf@yisint+3)& (0+255),b
  3668   005A7A                     
  3669                           ; BSR set to: 1
  3670   005A7A  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  3671   005A7C  EF44  F02D         	goto	u8800
  3672   005A80  EF42  F02D         	goto	u8801
  3673   005A84                     u8801:
  3674   005A84  EF10  F02E         	goto	l1132
  3675   005A88                     u8800:
  3676   005A88                     
  3677                           ; BSR set to: 1
  3678   005A88  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  3679   005A8A  EF50  F02D         	goto	u8811
  3680   005A8E  0E80               	movlw	128
  3681   005A90  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  3682   005A92  0E4B               	movlw	75
  3683   005A94  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  3684   005A96  A0D8               	btfss	status,0,c
  3685   005A98  EF50  F02D         	goto	u8811
  3686   005A9C  EF52  F02D         	goto	u8810
  3687   005AA0                     u8811:
  3688   005AA0  EF5C  F02D         	goto	l6814
  3689   005AA4                     u8810:
  3690   005AA4                     
  3691                           ; BSR set to: 1
  3692   005AA4  0E02               	movlw	2
  3693   005AA6  6F54               	movwf	powf@yisint& (0+255),b
  3694   005AA8  0E00               	movlw	0
  3695   005AAA  6F55               	movwf	(powf@yisint+1)& (0+255),b
  3696   005AAC  0E00               	movlw	0
  3697   005AAE  6F56               	movwf	(powf@yisint+2)& (0+255),b
  3698   005AB0  0E00               	movlw	0
  3699   005AB2  6F57               	movwf	(powf@yisint+3)& (0+255),b
  3700   005AB4  EF10  F02E         	goto	l1132
  3701   005AB8                     l6814:
  3702                           
  3703                           ; BSR set to: 1
  3704   005AB8  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  3705   005ABA  EF68  F02D         	goto	u8821
  3706   005ABE  0E80               	movlw	128
  3707   005AC0  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  3708   005AC2  0E3F               	movlw	63
  3709   005AC4  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  3710   005AC6  A0D8               	btfss	status,0,c
  3711   005AC8  EF68  F02D         	goto	u8821
  3712   005ACC  EF6A  F02D         	goto	u8820
  3713   005AD0                     u8821:
  3714   005AD0  EF10  F02E         	goto	l1132
  3715   005AD4                     u8820:
  3716   005AD4                     
  3717                           ; BSR set to: 1
  3718   005AD4  0E17               	movlw	23
  3719   005AD6  0100               	movlb	0	; () banked
  3720   005AD8  6F68               	movwf	??_powf& (0+255),b
  3721   005ADA  C194  F069         	movff	powf@iy,??_powf+1
  3722   005ADE  C195  F06A         	movff	powf@iy+1,??_powf+2
  3723   005AE2  C196  F06B         	movff	powf@iy+2,??_powf+3
  3724   005AE6  C197  F06C         	movff	powf@iy+3,??_powf+4
  3725   005AEA                     u8835:
  3726   005AEA  6768               	tstfsz	??_powf& (0+255),b
  3727   005AEC  EF7A  F02D         	goto	u8836
  3728   005AF0  EF82  F02D         	goto	u8837
  3729   005AF4                     u8836:
  3730   005AF4  356C               	rlcf	(??_powf+4)& (0+255),w,b
  3731   005AF6  336C               	rrcf	(??_powf+4)& (0+255),f,b
  3732   005AF8  336B               	rrcf	(??_powf+3)& (0+255),f,b
  3733   005AFA  336A               	rrcf	(??_powf+2)& (0+255),f,b
  3734   005AFC  3369               	rrcf	(??_powf+1)& (0+255),f,b
  3735   005AFE  2F68               	decfsz	??_powf& (0+255),f,b
  3736   005B00  EF75  F02D         	goto	u8835
  3737   005B04                     u8837:
  3738   005B04  0E81               	movlw	129
  3739   005B06  0100               	movlb	0	; () banked
  3740   005B08  2569               	addwf	(??_powf+1)& (0+255),w,b
  3741   005B0A  0101               	movlb	1	; () banked
  3742   005B0C  6FA4               	movwf	powf@k& (0+255),b
  3743   005B0E  0EFF               	movlw	255
  3744   005B10  0100               	movlb	0	; () banked
  3745   005B12  216A               	addwfc	(??_powf+2)& (0+255),w,b
  3746   005B14  0101               	movlb	1	; () banked
  3747   005B16  6FA5               	movwf	(powf@k+1)& (0+255),b
  3748   005B18  0EFF               	movlw	255
  3749   005B1A  0100               	movlb	0	; () banked
  3750   005B1C  216B               	addwfc	(??_powf+3)& (0+255),w,b
  3751   005B1E  0101               	movlb	1	; () banked
  3752   005B20  6FA6               	movwf	(powf@k+2)& (0+255),b
  3753   005B22  0EFF               	movlw	255
  3754   005B24  0100               	movlb	0	; () banked
  3755   005B26  216C               	addwfc	(??_powf+4)& (0+255),w,b
  3756   005B28  0101               	movlb	1	; () banked
  3757   005B2A  6FA7               	movwf	(powf@k+3)& (0+255),b
  3758   005B2C  51A4               	movf	powf@k& (0+255),w,b
  3759   005B2E  0817               	sublw	23
  3760   005B30  0100               	movlb	0	; () banked
  3761   005B32  6F68               	movwf	??_powf& (0+255),b
  3762   005B34  C194  F069         	movff	powf@iy,??_powf+1
  3763   005B38  C195  F06A         	movff	powf@iy+1,??_powf+2
  3764   005B3C  C196  F06B         	movff	powf@iy+2,??_powf+3
  3765   005B40  C197  F06C         	movff	powf@iy+3,??_powf+4
  3766   005B44                     u8845:
  3767   005B44  6768               	tstfsz	??_powf& (0+255),b
  3768   005B46  EFA7  F02D         	goto	u8846
  3769   005B4A  EFAF  F02D         	goto	u8847
  3770   005B4E                     u8846:
  3771   005B4E  356C               	rlcf	(??_powf+4)& (0+255),w,b
  3772   005B50  336C               	rrcf	(??_powf+4)& (0+255),f,b
  3773   005B52  336B               	rrcf	(??_powf+3)& (0+255),f,b
  3774   005B54  336A               	rrcf	(??_powf+2)& (0+255),f,b
  3775   005B56  3369               	rrcf	(??_powf+1)& (0+255),f,b
  3776   005B58  2F68               	decfsz	??_powf& (0+255),f,b
  3777   005B5A  EFA2  F02D         	goto	u8845
  3778   005B5E                     u8847:
  3779   005B5E  C069  F1A8         	movff	??_powf+1,powf@j
  3780   005B62  C06A  F1A9         	movff	??_powf+2,powf@j+1
  3781   005B66  C06B  F1AA         	movff	??_powf+3,powf@j+2
  3782   005B6A  C06C  F1AB         	movff	??_powf+4,powf@j+3
  3783   005B6E  0101               	movlb	1	; () banked
  3784   005B70  51A4               	movf	powf@k& (0+255),w,b
  3785   005B72  0817               	sublw	23
  3786   005B74  0100               	movlb	0	; () banked
  3787   005B76  6F68               	movwf	??_powf& (0+255),b
  3788   005B78  C1A8  F069         	movff	powf@j,??_powf+1
  3789   005B7C  C1A9  F06A         	movff	powf@j+1,??_powf+2
  3790   005B80  C1AA  F06B         	movff	powf@j+2,??_powf+3
  3791   005B84  C1AB  F06C         	movff	powf@j+3,??_powf+4
  3792   005B88  2B68               	incf	??_powf& (0+255),f,b
  3793   005B8A  EFCC  F02D         	goto	u8850
  3794   005B8E                     u8855:
  3795   005B8E  90D8               	bcf	status,0,c
  3796   005B90  3769               	rlcf	(??_powf+1)& (0+255),f,b
  3797   005B92  376A               	rlcf	(??_powf+2)& (0+255),f,b
  3798   005B94  376B               	rlcf	(??_powf+3)& (0+255),f,b
  3799   005B96  376C               	rlcf	(??_powf+4)& (0+255),f,b
  3800   005B98                     u8850:
  3801   005B98  2F68               	decfsz	??_powf& (0+255),f,b
  3802   005B9A  EFC7  F02D         	goto	u8855
  3803   005B9E  0101               	movlb	1	; () banked
  3804   005BA0  5194               	movf	powf@iy& (0+255),w,b
  3805   005BA2  0100               	movlb	0	; () banked
  3806   005BA4  1969               	xorwf	(??_powf+1)& (0+255),w,b
  3807   005BA6  E113               	bnz	u8861
  3808   005BA8  0101               	movlb	1	; () banked
  3809   005BAA  5195               	movf	(powf@iy+1)& (0+255),w,b
  3810   005BAC  0100               	movlb	0	; () banked
  3811   005BAE  196A               	xorwf	(??_powf+2)& (0+255),w,b
  3812   005BB0  E10E               	bnz	u8861
  3813   005BB2  0101               	movlb	1	; () banked
  3814   005BB4  5196               	movf	(powf@iy+2)& (0+255),w,b
  3815   005BB6  0100               	movlb	0	; () banked
  3816   005BB8  196B               	xorwf	(??_powf+3)& (0+255),w,b
  3817   005BBA  E109               	bnz	u8861
  3818   005BBC  0101               	movlb	1	; () banked
  3819   005BBE  5197               	movf	(powf@iy+3)& (0+255),w,b
  3820   005BC0  0100               	movlb	0	; () banked
  3821   005BC2  196C               	xorwf	(??_powf+4)& (0+255),w,b
  3822   005BC4  A4D8               	btfss	status,2,c
  3823   005BC6  EFE7  F02D         	goto	u8861
  3824   005BCA  EFE9  F02D         	goto	u8860
  3825   005BCE                     u8861:
  3826   005BCE  EF10  F02E         	goto	l1132
  3827   005BD2                     u8860:
  3828   005BD2                     
  3829                           ; BSR set to: 0
  3830   005BD2  0E01               	movlw	1
  3831   005BD4  0101               	movlb	1	; () banked
  3832   005BD6  15A8               	andwf	powf@j& (0+255),w,b
  3833   005BD8  0100               	movlb	0	; () banked
  3834   005BDA  6F68               	movwf	??_powf& (0+255),b
  3835   005BDC  0E00               	movlw	0
  3836   005BDE  0101               	movlb	1	; () banked
  3837   005BE0  15A9               	andwf	(powf@j+1)& (0+255),w,b
  3838   005BE2  0100               	movlb	0	; () banked
  3839   005BE4  6F69               	movwf	(??_powf+1)& (0+255),b
  3840   005BE6  0E00               	movlw	0
  3841   005BE8  0101               	movlb	1	; () banked
  3842   005BEA  15AA               	andwf	(powf@j+2)& (0+255),w,b
  3843   005BEC  0100               	movlb	0	; () banked
  3844   005BEE  6F6A               	movwf	(??_powf+2)& (0+255),b
  3845   005BF0  0E00               	movlw	0
  3846   005BF2  0101               	movlb	1	; () banked
  3847   005BF4  15AB               	andwf	(powf@j+3)& (0+255),w,b
  3848   005BF6  0100               	movlb	0	; () banked
  3849   005BF8  6F6B               	movwf	(??_powf+3)& (0+255),b
  3850   005BFA  5168               	movf	??_powf& (0+255),w,b
  3851   005BFC  0802               	sublw	2
  3852   005BFE  0101               	movlb	1	; () banked
  3853   005C00  6F54               	movwf	powf@yisint& (0+255),b
  3854   005C02  0E00               	movlw	0
  3855   005C04  0100               	movlb	0	; () banked
  3856   005C06  5569               	subfwb	(??_powf+1)& (0+255),w,b
  3857   005C08  0101               	movlb	1	; () banked
  3858   005C0A  6F55               	movwf	(powf@yisint+1)& (0+255),b
  3859   005C0C  0E00               	movlw	0
  3860   005C0E  0100               	movlb	0	; () banked
  3861   005C10  556A               	subfwb	(??_powf+2)& (0+255),w,b
  3862   005C12  0101               	movlb	1	; () banked
  3863   005C14  6F56               	movwf	(powf@yisint+2)& (0+255),b
  3864   005C16  0E00               	movlw	0
  3865   005C18  0100               	movlb	0	; () banked
  3866   005C1A  556B               	subfwb	(??_powf+3)& (0+255),w,b
  3867   005C1C  0101               	movlb	1	; () banked
  3868   005C1E  6F57               	movwf	(powf@yisint+3)& (0+255),b
  3869   005C20                     l1132:
  3870   005C20  0E80               	movlw	128
  3871   005C22  0101               	movlb	1	; () banked
  3872   005C24  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  3873   005C26  E109               	bnz	u8871
  3874   005C28  0E7F               	movlw	127
  3875   005C2A  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  3876   005C2C  1194               	iorwf	powf@iy& (0+255),w,b
  3877   005C2E  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  3878   005C30  A4D8               	btfss	status,2,c
  3879   005C32  EF1D  F02E         	goto	u8871
  3880   005C36  EF1F  F02E         	goto	u8870
  3881   005C3A                     u8871:
  3882   005C3A  EF8B  F02E         	goto	l6844
  3883   005C3E                     u8870:
  3884   005C3E                     
  3885                           ; BSR set to: 1
  3886   005C3E  0E80               	movlw	128
  3887   005C40  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  3888   005C42  E109               	bnz	u8881
  3889   005C44  0E3F               	movlw	63
  3890   005C46  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  3891   005C48  11AC               	iorwf	powf@ix& (0+255),w,b
  3892   005C4A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  3893   005C4C  A4D8               	btfss	status,2,c
  3894   005C4E  EF2B  F02E         	goto	u8881
  3895   005C52  EF2D  F02E         	goto	u8880
  3896   005C56                     u8881:
  3897   005C56  EF38  F02E         	goto	l6828
  3898   005C5A                     u8880:
  3899   005C5A                     
  3900                           ; BSR set to: 1
  3901   005C5A  0E00               	movlw	0
  3902   005C5C  0100               	movlb	0	; () banked
  3903   005C5E  6F60               	movwf	?_powf& (0+255),b
  3904   005C60  0E00               	movlw	0
  3905   005C62  6F61               	movwf	(?_powf+1)& (0+255),b
  3906   005C64  0E80               	movlw	128
  3907   005C66  6F62               	movwf	(?_powf+2)& (0+255),b
  3908   005C68  0E3F               	movlw	63
  3909   005C6A  6F63               	movwf	(?_powf+3)& (0+255),b
  3910   005C6C  EFF8  F03E         	goto	l1127
  3911   005C70                     l6828:
  3912                           
  3913                           ; BSR set to: 1
  3914   005C70  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  3915   005C72  EF47  F02E         	goto	u8891
  3916   005C76  05AC               	decf	powf@ix& (0+255),w,b
  3917   005C78  0E00               	movlw	0
  3918   005C7A  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  3919   005C7C  0E80               	movlw	128
  3920   005C7E  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  3921   005C80  0E3F               	movlw	63
  3922   005C82  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  3923   005C84  A0D8               	btfss	status,0,c
  3924   005C86  EF47  F02E         	goto	u8891
  3925   005C8A  EF49  F02E         	goto	u8890
  3926   005C8E                     u8891:
  3927   005C8E  EF65  F02E         	goto	l6836
  3928   005C92                     u8890:
  3929   005C92                     
  3930                           ; BSR set to: 1
  3931   005C92  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  3932   005C94  EF50  F02E         	goto	u8900
  3933   005C98  EF4E  F02E         	goto	u8901
  3934   005C9C                     u8901:
  3935   005C9C  EF5B  F02E         	goto	l1142
  3936   005CA0                     u8900:
  3937   005CA0                     
  3938                           ; BSR set to: 1
  3939   005CA0  0E00               	movlw	0
  3940   005CA2  0100               	movlb	0	; () banked
  3941   005CA4  6F60               	movwf	?_powf& (0+255),b
  3942   005CA6  0E00               	movlw	0
  3943   005CA8  6F61               	movwf	(?_powf+1)& (0+255),b
  3944   005CAA  0E00               	movlw	0
  3945   005CAC  6F62               	movwf	(?_powf+2)& (0+255),b
  3946   005CAE  0E00               	movlw	0
  3947   005CB0  6F63               	movwf	(?_powf+3)& (0+255),b
  3948   005CB2  EFF8  F03E         	goto	l1127
  3949   005CB6                     l1142:
  3950                           
  3951                           ; BSR set to: 1
  3952   005CB6  C064  F060         	movff	powf@y,?_powf
  3953   005CBA  C065  F061         	movff	powf@y+1,?_powf+1
  3954   005CBE  C066  F062         	movff	powf@y+2,?_powf+2
  3955   005CC2  C067  F063         	movff	powf@y+3,?_powf+3
  3956   005CC6  EFF8  F03E         	goto	l1127
  3957   005CCA                     l6836:
  3958                           
  3959                           ; BSR set to: 1
  3960   005CCA  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  3961   005CCC  EF6C  F02E         	goto	u8910
  3962   005CD0  EF6A  F02E         	goto	u8911
  3963   005CD4                     u8911:
  3964   005CD4  EF80  F02E         	goto	l6840
  3965   005CD8                     u8910:
  3966   005CD8                     
  3967                           ; BSR set to: 1
  3968   005CD8  C064  F001         	movff	powf@y,___flneg@f1
  3969   005CDC  C065  F002         	movff	powf@y+1,___flneg@f1+1
  3970   005CE0  C066  F003         	movff	powf@y+2,___flneg@f1+2
  3971   005CE4  C067  F004         	movff	powf@y+3,___flneg@f1+3
  3972   005CE8  ECAA  F00D         	call	___flneg	;wreg free
  3973   005CEC  C001  F060         	movff	?___flneg,?_powf
  3974   005CF0  C002  F061         	movff	?___flneg+1,?_powf+1
  3975   005CF4  C003  F062         	movff	?___flneg+2,?_powf+2
  3976   005CF8  C004  F063         	movff	?___flneg+3,?_powf+3
  3977   005CFC  EFF8  F03E         	goto	l1127
  3978   005D00                     l6840:
  3979                           
  3980                           ; BSR set to: 1
  3981   005D00  0E00               	movlw	0
  3982   005D02  0100               	movlb	0	; () banked
  3983   005D04  6F60               	movwf	?_powf& (0+255),b
  3984   005D06  0E00               	movlw	0
  3985   005D08  6F61               	movwf	(?_powf+1)& (0+255),b
  3986   005D0A  0E00               	movlw	0
  3987   005D0C  6F62               	movwf	(?_powf+2)& (0+255),b
  3988   005D0E  0E00               	movlw	0
  3989   005D10  6F63               	movwf	(?_powf+3)& (0+255),b
  3990   005D12  EFF8  F03E         	goto	l1127
  3991   005D16                     l6844:
  3992                           
  3993                           ; BSR set to: 1
  3994   005D16  0E80               	movlw	128
  3995   005D18  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  3996   005D1A  E109               	bnz	u8921
  3997   005D1C  0E3F               	movlw	63
  3998   005D1E  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  3999   005D20  1194               	iorwf	powf@iy& (0+255),w,b
  4000   005D22  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  4001   005D24  A4D8               	btfss	status,2,c
  4002   005D26  EF97  F02E         	goto	u8921
  4003   005D2A  EF99  F02E         	goto	u8920
  4004   005D2E                     u8921:
  4005   005D2E  EFC6  F02E         	goto	l6850
  4006   005D32                     u8920:
  4007   005D32                     
  4008                           ; BSR set to: 1
  4009   005D32  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4010   005D34  EFA0  F02E         	goto	u8930
  4011   005D38  EF9E  F02E         	goto	u8931
  4012   005D3C                     u8931:
  4013   005D3C  EFBC  F02E         	goto	l1152
  4014   005D40                     u8930:
  4015   005D40                     
  4016                           ; BSR set to: 1
  4017   005D40  0E00               	movlw	0
  4018   005D42  6E40               	movwf	___fldiv@b^0,c
  4019   005D44  0E00               	movlw	0
  4020   005D46  6E41               	movwf	(___fldiv@b+1)^0,c
  4021   005D48  0E80               	movlw	128
  4022   005D4A  6E42               	movwf	(___fldiv@b+2)^0,c
  4023   005D4C  0E3F               	movlw	63
  4024   005D4E  6E43               	movwf	(___fldiv@b+3)^0,c
  4025   005D50  C060  F044         	movff	powf@x,___fldiv@a
  4026   005D54  C061  F045         	movff	powf@x+1,___fldiv@a+1
  4027   005D58  C062  F046         	movff	powf@x+2,___fldiv@a+2
  4028   005D5C  C063  F047         	movff	powf@x+3,___fldiv@a+3
  4029   005D60  EC05  F01D         	call	___fldiv	;wreg free
  4030   005D64  C040  F060         	movff	?___fldiv,?_powf
  4031   005D68  C041  F061         	movff	?___fldiv+1,?_powf+1
  4032   005D6C  C042  F062         	movff	?___fldiv+2,?_powf+2
  4033   005D70  C043  F063         	movff	?___fldiv+3,?_powf+3
  4034   005D74  EFF8  F03E         	goto	l1127
  4035   005D78                     l1152:
  4036                           
  4037                           ; BSR set to: 1
  4038   005D78  C060  F060         	movff	powf@x,?_powf
  4039   005D7C  C061  F061         	movff	powf@x+1,?_powf+1
  4040   005D80  C062  F062         	movff	powf@x+2,?_powf+2
  4041   005D84  C063  F063         	movff	powf@x+3,?_powf+3
  4042   005D88  EFF8  F03E         	goto	l1127
  4043   005D8C                     l6850:
  4044                           
  4045                           ; BSR set to: 1
  4046   005D8C  0E40               	movlw	64
  4047   005D8E  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4048   005D90  1184               	iorwf	powf@hy& (0+255),w,b
  4049   005D92  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4050   005D94  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4051   005D96  A4D8               	btfss	status,2,c
  4052   005D98  EFD0  F02E         	goto	u8941
  4053   005D9C  EFD2  F02E         	goto	u8940
  4054   005DA0                     u8941:
  4055   005DA0  EFEE  F02E         	goto	l6856
  4056   005DA4                     u8940:
  4057   005DA4                     
  4058                           ; BSR set to: 1
  4059   005DA4  C060  F01F         	movff	powf@x,___flmul@b
  4060   005DA8  C061  F020         	movff	powf@x+1,___flmul@b+1
  4061   005DAC  C062  F021         	movff	powf@x+2,___flmul@b+2
  4062   005DB0  C063  F022         	movff	powf@x+3,___flmul@b+3
  4063   005DB4  C060  F023         	movff	powf@x,___flmul@a
  4064   005DB8  C061  F024         	movff	powf@x+1,___flmul@a+1
  4065   005DBC  C062  F025         	movff	powf@x+2,___flmul@a+2
  4066   005DC0  C063  F026         	movff	powf@x+3,___flmul@a+3
  4067   005DC4  ECBC  F020         	call	___flmul	;wreg free
  4068   005DC8  C01F  F060         	movff	?___flmul,?_powf
  4069   005DCC  C020  F061         	movff	?___flmul+1,?_powf+1
  4070   005DD0  C021  F062         	movff	?___flmul+2,?_powf+2
  4071   005DD4  C022  F063         	movff	?___flmul+3,?_powf+3
  4072   005DD8  EFF8  F03E         	goto	l1127
  4073   005DDC                     l6856:
  4074                           
  4075                           ; BSR set to: 1
  4076   005DDC  0E3F               	movlw	63
  4077   005DDE  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  4078   005DE0  1184               	iorwf	powf@hy& (0+255),w,b
  4079   005DE2  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4080   005DE4  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4081   005DE6  A4D8               	btfss	status,2,c
  4082   005DE8  EFF8  F02E         	goto	u8951
  4083   005DEC  EFFA  F02E         	goto	u8950
  4084   005DF0                     u8951:
  4085   005DF0  EF15  F02F         	goto	l1156
  4086   005DF4                     u8950:
  4087   005DF4                     
  4088                           ; BSR set to: 1
  4089   005DF4  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4090   005DF6  EFFF  F02E         	goto	u8961
  4091   005DFA  EF01  F02F         	goto	u8960
  4092   005DFE                     u8961:
  4093   005DFE  EF15  F02F         	goto	l1156
  4094   005E02                     u8960:
  4095   005E02                     
  4096                           ; BSR set to: 1
  4097   005E02  C060  F001         	movff	powf@x,sqrtf@x
  4098   005E06  C061  F002         	movff	powf@x+1,sqrtf@x+1
  4099   005E0A  C062  F003         	movff	powf@x+2,sqrtf@x+2
  4100   005E0E  C063  F004         	movff	powf@x+3,sqrtf@x+3
  4101   005E12  ECCD  F01E         	call	_sqrtf	;wreg free
  4102   005E16  C001  F060         	movff	?_sqrtf,?_powf
  4103   005E1A  C002  F061         	movff	?_sqrtf+1,?_powf+1
  4104   005E1E  C003  F062         	movff	?_sqrtf+2,?_powf+2
  4105   005E22  C004  F063         	movff	?_sqrtf+3,?_powf+3
  4106   005E26  EFF8  F03E         	goto	l1127
  4107   005E2A                     l1156:
  4108                           
  4109                           ; BSR set to: 1
  4110   005E2A  C1AC  F178         	movff	powf@ix,powf@ax
  4111   005E2E  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  4112   005E32  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  4113   005E36  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  4114   005E3A                     
  4115                           ; BSR set to: 1
  4116   005E3A  0E80               	movlw	128
  4117   005E3C  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4118   005E3E  E10B               	bnz	u8970
  4119   005E40  0E7F               	movlw	127
  4120   005E42  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4121   005E44  11AC               	iorwf	powf@ix& (0+255),w,b
  4122   005E46  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4123   005E48  B4D8               	btfsc	status,2,c
  4124   005E4A  EF29  F02F         	goto	u8971
  4125   005E4E  EF2B  F02F         	goto	u8970
  4126   005E52                     u8971:
  4127   005E52  EF44  F02F         	goto	l1160
  4128   005E56                     u8970:
  4129   005E56                     
  4130                           ; BSR set to: 1
  4131   005E56  51AC               	movf	powf@ix& (0+255),w,b
  4132   005E58  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4133   005E5A  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  4134   005E5C  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  4135   005E5E  B4D8               	btfsc	status,2,c
  4136   005E60  EF34  F02F         	goto	u8981
  4137   005E64  EF36  F02F         	goto	u8980
  4138   005E68                     u8981:
  4139   005E68  EF44  F02F         	goto	l1160
  4140   005E6C                     u8980:
  4141   005E6C                     
  4142                           ; BSR set to: 1
  4143   005E6C  0E80               	movlw	128
  4144   005E6E  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  4145   005E70  E109               	bnz	u8991
  4146   005E72  0E3F               	movlw	63
  4147   005E74  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  4148   005E76  11AC               	iorwf	powf@ix& (0+255),w,b
  4149   005E78  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  4150   005E7A  A4D8               	btfss	status,2,c
  4151   005E7C  EF42  F02F         	goto	u8991
  4152   005E80  EF44  F02F         	goto	u8990
  4153   005E84                     u8991:
  4154   005E84  EFDF  F02F         	goto	l6888
  4155   005E88                     u8990:
  4156   005E88                     l1160:
  4157                           
  4158                           ; BSR set to: 1
  4159   005E88  C178  F1B4         	movff	powf@ax,powf@z
  4160   005E8C  C179  F1B5         	movff	powf@ax+1,powf@z+1
  4161   005E90  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  4162   005E94  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  4163   005E98                     
  4164                           ; BSR set to: 1
  4165   005E98  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4166   005E9A  EF53  F02F         	goto	u9000
  4167   005E9E  EF51  F02F         	goto	u9001
  4168   005EA2                     u9001:
  4169   005EA2  EF6D  F02F         	goto	l6874
  4170   005EA6                     u9000:
  4171   005EA6                     
  4172                           ; BSR set to: 1
  4173   005EA6  0E00               	movlw	0
  4174   005EA8  6E40               	movwf	___fldiv@b^0,c
  4175   005EAA  0E00               	movlw	0
  4176   005EAC  6E41               	movwf	(___fldiv@b+1)^0,c
  4177   005EAE  0E80               	movlw	128
  4178   005EB0  6E42               	movwf	(___fldiv@b+2)^0,c
  4179   005EB2  0E3F               	movlw	63
  4180   005EB4  6E43               	movwf	(___fldiv@b+3)^0,c
  4181   005EB6  C1B4  F044         	movff	powf@z,___fldiv@a
  4182   005EBA  C1B5  F045         	movff	powf@z+1,___fldiv@a+1
  4183   005EBE  C1B6  F046         	movff	powf@z+2,___fldiv@a+2
  4184   005EC2  C1B7  F047         	movff	powf@z+3,___fldiv@a+3
  4185   005EC6  EC05  F01D         	call	___fldiv	;wreg free
  4186   005ECA  C040  F1B4         	movff	?___fldiv,powf@z
  4187   005ECE  C041  F1B5         	movff	?___fldiv+1,powf@z+1
  4188   005ED2  C042  F1B6         	movff	?___fldiv+2,powf@z+2
  4189   005ED6  C043  F1B7         	movff	?___fldiv+3,powf@z+3
  4190   005EDA                     l6874:
  4191   005EDA  0101               	movlb	1	; () banked
  4192   005EDC  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4193   005EDE  EF75  F02F         	goto	u9010
  4194   005EE2  EF73  F02F         	goto	u9011
  4195   005EE6                     u9011:
  4196   005EE6  EFD5  F02F         	goto	l6884
  4197   005EEA                     u9010:
  4198   005EEA                     
  4199                           ; BSR set to: 1
  4200   005EEA  0E00               	movlw	0
  4201   005EEC  25AC               	addwf	powf@ix& (0+255),w,b
  4202   005EEE  0100               	movlb	0	; () banked
  4203   005EF0  6F68               	movwf	??_powf& (0+255),b
  4204   005EF2  0E00               	movlw	0
  4205   005EF4  0101               	movlb	1	; () banked
  4206   005EF6  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  4207   005EF8  0100               	movlb	0	; () banked
  4208   005EFA  6F69               	movwf	(??_powf+1)& (0+255),b
  4209   005EFC  0E80               	movlw	128
  4210   005EFE  0101               	movlb	1	; () banked
  4211   005F00  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  4212   005F02  0100               	movlb	0	; () banked
  4213   005F04  6F6A               	movwf	(??_powf+2)& (0+255),b
  4214   005F06  0EC0               	movlw	192
  4215   005F08  0101               	movlb	1	; () banked
  4216   005F0A  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  4217   005F0C  0100               	movlb	0	; () banked
  4218   005F0E  6F6B               	movwf	(??_powf+3)& (0+255),b
  4219   005F10  0101               	movlb	1	; () banked
  4220   005F12  5154               	movf	powf@yisint& (0+255),w,b
  4221   005F14  0100               	movlb	0	; () banked
  4222   005F16  1168               	iorwf	??_powf& (0+255),w,b
  4223   005F18  6F6C               	movwf	(??_powf+4)& (0+255),b
  4224   005F1A  0101               	movlb	1	; () banked
  4225   005F1C  5155               	movf	(powf@yisint+1)& (0+255),w,b
  4226   005F1E  0100               	movlb	0	; () banked
  4227   005F20  1169               	iorwf	(??_powf+1)& (0+255),w,b
  4228   005F22  6F6D               	movwf	(??_powf+5)& (0+255),b
  4229   005F24  0101               	movlb	1	; () banked
  4230   005F26  5156               	movf	(powf@yisint+2)& (0+255),w,b
  4231   005F28  0100               	movlb	0	; () banked
  4232   005F2A  116A               	iorwf	(??_powf+2)& (0+255),w,b
  4233   005F2C  6F6E               	movwf	(??_powf+6)& (0+255),b
  4234   005F2E  0101               	movlb	1	; () banked
  4235   005F30  5157               	movf	(powf@yisint+3)& (0+255),w,b
  4236   005F32  0100               	movlb	0	; () banked
  4237   005F34  116B               	iorwf	(??_powf+3)& (0+255),w,b
  4238   005F36  6F6F               	movwf	(??_powf+7)& (0+255),b
  4239   005F38  516C               	movf	(??_powf+4)& (0+255),w,b
  4240   005F3A  116D               	iorwf	(??_powf+5)& (0+255),w,b
  4241   005F3C  116E               	iorwf	(??_powf+6)& (0+255),w,b
  4242   005F3E  116F               	iorwf	(??_powf+7)& (0+255),w,b
  4243   005F40  A4D8               	btfss	status,2,c
  4244   005F42  EFA5  F02F         	goto	u9021
  4245   005F46  EFA7  F02F         	goto	u9020
  4246   005F4A                     u9021:
  4247   005F4A  EFB7  F02F         	goto	l6880
  4248   005F4E                     u9020:
  4249   005F4E                     l6878:
  4250   005F4E  0E00               	movlw	0
  4251   005F50  0102               	movlb	2	; () banked
  4252   005F52  6F31               	movwf	(_errno+1)& (0+255),b
  4253   005F54  0E21               	movlw	33
  4254   005F56  6F30               	movwf	_errno& (0+255),b
  4255   005F58  0EFF               	movlw	255
  4256   005F5A  0101               	movlb	1	; () banked
  4257   005F5C  6FB4               	movwf	powf@z& (0+255),b
  4258   005F5E  0EFF               	movlw	255
  4259   005F60  6FB5               	movwf	(powf@z+1)& (0+255),b
  4260   005F62  0EFF               	movlw	255
  4261   005F64  6FB6               	movwf	(powf@z+2)& (0+255),b
  4262   005F66  0E7F               	movlw	127
  4263   005F68  6FB7               	movwf	(powf@z+3)& (0+255),b
  4264   005F6A  EFD5  F02F         	goto	l6884
  4265   005F6E                     l6880:
  4266                           
  4267                           ; BSR set to: 0
  4268   005F6E  0101               	movlb	1	; () banked
  4269   005F70  0554               	decf	powf@yisint& (0+255),w,b
  4270   005F72  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4271   005F74  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4272   005F76  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4273   005F78  A4D8               	btfss	status,2,c
  4274   005F7A  EFC1  F02F         	goto	u9031
  4275   005F7E  EFC3  F02F         	goto	u9030
  4276   005F82                     u9031:
  4277   005F82  EFD5  F02F         	goto	l6884
  4278   005F86                     u9030:
  4279   005F86                     
  4280                           ; BSR set to: 1
  4281   005F86  C1B4  F001         	movff	powf@z,___flneg@f1
  4282   005F8A  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  4283   005F8E  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  4284   005F92  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  4285   005F96  ECAA  F00D         	call	___flneg	;wreg free
  4286   005F9A  C001  F1B4         	movff	?___flneg,powf@z
  4287   005F9E  C002  F1B5         	movff	?___flneg+1,powf@z+1
  4288   005FA2  C003  F1B6         	movff	?___flneg+2,powf@z+2
  4289   005FA6  C004  F1B7         	movff	?___flneg+3,powf@z+3
  4290   005FAA                     l6884:
  4291   005FAA  C1B4  F060         	movff	powf@z,?_powf
  4292   005FAE  C1B5  F061         	movff	powf@z+1,?_powf+1
  4293   005FB2  C1B6  F062         	movff	powf@z+2,?_powf+2
  4294   005FB6  C1B7  F063         	movff	powf@z+3,?_powf+3
  4295   005FBA  EFF8  F03E         	goto	l1127
  4296   005FBE                     l6888:
  4297                           
  4298                           ; BSR set to: 1
  4299   005FBE  0E00               	movlw	0
  4300   005FC0  6F64               	movwf	powf@sn& (0+255),b
  4301   005FC2  0E00               	movlw	0
  4302   005FC4  6F65               	movwf	(powf@sn+1)& (0+255),b
  4303   005FC6  0E00               	movlw	0
  4304   005FC8  6F66               	movwf	(powf@sn+2)& (0+255),b
  4305   005FCA  0E00               	movlw	0
  4306   005FCC  6F67               	movwf	(powf@sn+3)& (0+255),b
  4307   005FCE                     
  4308                           ; BSR set to: 1
  4309   005FCE  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  4310   005FD0  EFEE  F02F         	goto	u9040
  4311   005FD4  EFEC  F02F         	goto	u9041
  4312   005FD8                     u9041:
  4313   005FD8  EF0E  F030         	goto	l6904
  4314   005FDC                     u9040:
  4315   005FDC                     
  4316                           ; BSR set to: 1
  4317   005FDC  5154               	movf	powf@yisint& (0+255),w,b
  4318   005FDE  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4319   005FE0  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4320   005FE2  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4321   005FE4  A4D8               	btfss	status,2,c
  4322   005FE6  EFF7  F02F         	goto	u9051
  4323   005FEA  EFF9  F02F         	goto	u9050
  4324   005FEE                     u9051:
  4325   005FEE  EFFB  F02F         	goto	l6900
  4326   005FF2                     u9050:
  4327   005FF2  EFA7  F02F         	goto	l6878
  4328   005FF6                     l6900:
  4329                           
  4330                           ; BSR set to: 1
  4331   005FF6  0554               	decf	powf@yisint& (0+255),w,b
  4332   005FF8  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  4333   005FFA  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  4334   005FFC  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  4335   005FFE  A4D8               	btfss	status,2,c
  4336   006000  EF04  F030         	goto	u9061
  4337   006004  EF06  F030         	goto	u9060
  4338   006008                     u9061:
  4339   006008  EF0E  F030         	goto	l6904
  4340   00600C                     u9060:
  4341   00600C                     
  4342                           ; BSR set to: 1
  4343   00600C  0E00               	movlw	0
  4344   00600E  6F64               	movwf	powf@sn& (0+255),b
  4345   006010  0E00               	movlw	0
  4346   006012  6F65               	movwf	(powf@sn+1)& (0+255),b
  4347   006014  0E00               	movlw	0
  4348   006016  6F66               	movwf	(powf@sn+2)& (0+255),b
  4349   006018  0E80               	movlw	128
  4350   00601A  6F67               	movwf	(powf@sn+3)& (0+255),b
  4351   00601C                     l6904:
  4352                           
  4353                           ; BSR set to: 1
  4354   00601C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  4355   00601E  EF1D  F030         	goto	u9071
  4356   006022  0594               	decf	powf@iy& (0+255),w,b
  4357   006024  0E00               	movlw	0
  4358   006026  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  4359   006028  0E00               	movlw	0
  4360   00602A  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  4361   00602C  0E4D               	movlw	77
  4362   00602E  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  4363   006030  A0D8               	btfss	status,0,c
  4364   006032  EF1D  F030         	goto	u9071
  4365   006036  EF1F  F030         	goto	u9070
  4366   00603A                     u9071:
  4367   00603A  EFE3  F031         	goto	l6960
  4368   00603E                     u9070:
  4369   00603E                     
  4370                           ; BSR set to: 1
  4371   00603E  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4372   006040  EF31  F030         	goto	u9080
  4373   006044  0EF8               	movlw	248
  4374   006046  5DAC               	subwf	powf@ix& (0+255),w,b
  4375   006048  0EFF               	movlw	255
  4376   00604A  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4377   00604C  0E7F               	movlw	127
  4378   00604E  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4379   006050  0E3F               	movlw	63
  4380   006052  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4381   006054  B0D8               	btfsc	status,0,c
  4382   006056  EF2F  F030         	goto	u9081
  4383   00605A  EF31  F030         	goto	u9080
  4384   00605E                     u9081:
  4385   00605E  EF52  F030         	goto	l6922
  4386   006062                     u9080:
  4387   006062                     
  4388                           ; BSR set to: 1
  4389   006062  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4390   006064  EF38  F030         	goto	u9090
  4391   006068  EF36  F030         	goto	u9091
  4392   00606C                     u9091:
  4393   00606C  EF47  F030         	goto	l6918
  4394   006070                     u9090:
  4395   006070                     l6910:
  4396   006070  0E00               	movlw	0
  4397   006072  0101               	movlb	1	; () banked
  4398   006074  1164               	iorwf	powf@sn& (0+255),w,b
  4399   006076  6FB4               	movwf	powf@z& (0+255),b
  4400   006078  0E00               	movlw	0
  4401   00607A  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  4402   00607C  6FB5               	movwf	(powf@z+1)& (0+255),b
  4403   00607E  0E80               	movlw	128
  4404   006080  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  4405   006082  6FB6               	movwf	(powf@z+2)& (0+255),b
  4406   006084  0E7F               	movlw	127
  4407   006086  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  4408   006088  6FB7               	movwf	(powf@z+3)& (0+255),b
  4409   00608A  EFD5  F02F         	goto	l6884
  4410   00608E                     l6918:
  4411                           
  4412                           ; BSR set to: 1
  4413   00608E  0E00               	movlw	0
  4414   006090  0100               	movlb	0	; () banked
  4415   006092  6F60               	movwf	?_powf& (0+255),b
  4416   006094  0E00               	movlw	0
  4417   006096  6F61               	movwf	(?_powf+1)& (0+255),b
  4418   006098  0E00               	movlw	0
  4419   00609A  6F62               	movwf	(?_powf+2)& (0+255),b
  4420   00609C  0E00               	movlw	0
  4421   00609E  6F63               	movwf	(?_powf+3)& (0+255),b
  4422   0060A0  EFF8  F03E         	goto	l1127
  4423   0060A4                     l6922:
  4424                           
  4425                           ; BSR set to: 1
  4426   0060A4  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4427   0060A6  EF62  F030         	goto	u9101
  4428   0060AA  0E08               	movlw	8
  4429   0060AC  5DAC               	subwf	powf@ix& (0+255),w,b
  4430   0060AE  0E00               	movlw	0
  4431   0060B0  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  4432   0060B2  0E80               	movlw	128
  4433   0060B4  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  4434   0060B6  0E3F               	movlw	63
  4435   0060B8  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  4436   0060BA  A0D8               	btfss	status,0,c
  4437   0060BC  EF62  F030         	goto	u9101
  4438   0060C0  EF64  F030         	goto	u9100
  4439   0060C4                     u9101:
  4440   0060C4  EF80  F030         	goto	l6938
  4441   0060C8                     u9100:
  4442   0060C8                     
  4443                           ; BSR set to: 1
  4444   0060C8  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  4445   0060CA  EF71  F030         	goto	u9111
  4446   0060CE  5187               	movf	(powf@hy+3)& (0+255),w,b
  4447   0060D0  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  4448   0060D2  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  4449   0060D4  E108               	bnz	u9110
  4450   0060D6  0584               	decf	powf@hy& (0+255),w,b
  4451   0060D8  A0D8               	btfss	status,0,c
  4452   0060DA  EF71  F030         	goto	u9111
  4453   0060DE  EF73  F030         	goto	u9110
  4454   0060E2                     u9111:
  4455   0060E2  EF75  F030         	goto	l6934
  4456   0060E6                     u9110:
  4457   0060E6  EF38  F030         	goto	l6910
  4458   0060EA                     l6934:
  4459                           
  4460                           ; BSR set to: 1
  4461   0060EA  0E00               	movlw	0
  4462   0060EC  0100               	movlb	0	; () banked
  4463   0060EE  6F60               	movwf	?_powf& (0+255),b
  4464   0060F0  0E00               	movlw	0
  4465   0060F2  6F61               	movwf	(?_powf+1)& (0+255),b
  4466   0060F4  0E00               	movlw	0
  4467   0060F6  6F62               	movwf	(?_powf+2)& (0+255),b
  4468   0060F8  0E00               	movlw	0
  4469   0060FA  6F63               	movwf	(?_powf+3)& (0+255),b
  4470   0060FC  EFF8  F03E         	goto	l1127
  4471   006100                     l6938:
  4472                           
  4473                           ; BSR set to: 1
  4474   006100  C178  F00F         	movff	powf@ax,___fladd@b
  4475   006104  C179  F010         	movff	powf@ax+1,___fladd@b+1
  4476   006108  C17A  F011         	movff	powf@ax+2,___fladd@b+2
  4477   00610C  C17B  F012         	movff	powf@ax+3,___fladd@b+3
  4478   006110  0E00               	movlw	0
  4479   006112  6E13               	movwf	___fladd@a^0,c
  4480   006114  0E00               	movlw	0
  4481   006116  6E14               	movwf	(___fladd@a+1)^0,c
  4482   006118  0E80               	movlw	128
  4483   00611A  6E15               	movwf	(___fladd@a+2)^0,c
  4484   00611C  0EBF               	movlw	191
  4485   00611E  6E16               	movwf	(___fladd@a+3)^0,c
  4486   006120  ECCF  F022         	call	___fladd	;wreg free
  4487   006124  C00F  F1B0         	movff	?___fladd,powf@t
  4488   006128  C010  F1B1         	movff	?___fladd+1,powf@t+1
  4489   00612C  C011  F1B2         	movff	?___fladd+2,powf@t+2
  4490   006130  C012  F1B3         	movff	?___fladd+3,powf@t+3
  4491   006134  0E00               	movlw	0
  4492   006136  6E23               	movwf	___flmul@a^0,c
  4493   006138  0E00               	movlw	0
  4494   00613A  6E24               	movwf	(___flmul@a+1)^0,c
  4495   00613C  0E80               	movlw	128
  4496   00613E  6E25               	movwf	(___flmul@a+2)^0,c
  4497   006140  0E3E               	movlw	62
  4498   006142  6E26               	movwf	(___flmul@a+3)^0,c
  4499   006144  C1B0  F01F         	movff	powf@t,___flmul@b
  4500   006148  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  4501   00614C  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  4502   006150  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  4503   006154  ECBC  F020         	call	___flmul	;wreg free
  4504   006158  C01F  F03C         	movff	?___flmul,___flsub@a
  4505   00615C  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  4506   006160  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  4507   006164  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  4508   006168  0EAB               	movlw	171
  4509   00616A  6E38               	movwf	___flsub@b^0,c
  4510   00616C  0EAA               	movlw	170
  4511   00616E  6E39               	movwf	(___flsub@b+1)^0,c
  4512   006170  0EAA               	movlw	170
  4513   006172  6E3A               	movwf	(___flsub@b+2)^0,c
  4514   006174  0E3E               	movlw	62
  4515   006176  6E3B               	movwf	(___flsub@b+3)^0,c
  4516   006178  EC46  F00E         	call	___flsub	;wreg free
  4517   00617C  C038  F148         	movff	?___flsub,_powf$1489
  4518   006180  C039  F149         	movff	?___flsub+1,_powf$1489+1
  4519   006184  C03A  F14A         	movff	?___flsub+2,_powf$1489+2
  4520   006188  C03B  F14B         	movff	?___flsub+3,_powf$1489+3
  4521   00618C  C1B0  F023         	movff	powf@t,___flmul@a
  4522   006190  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  4523   006194  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  4524   006198  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  4525   00619C  C1B0  F01F         	movff	powf@t,___flmul@b
  4526   0061A0  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  4527   0061A4  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  4528   0061A8  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  4529   0061AC  ECBC  F020         	call	___flmul	;wreg free
  4530   0061B0  C01F  F158         	movff	?___flmul,_powf$1490
  4531   0061B4  C020  F159         	movff	?___flmul+1,_powf$1490+1
  4532   0061B8  C021  F15A         	movff	?___flmul+2,_powf$1490+2
  4533   0061BC  C022  F15B         	movff	?___flmul+3,_powf$1490+3
  4534   0061C0  C1B0  F023         	movff	powf@t,___flmul@a
  4535   0061C4  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  4536   0061C8  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  4537   0061CC  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  4538   0061D0  C148  F01F         	movff	_powf$1489,___flmul@b
  4539   0061D4  C149  F020         	movff	_powf$1489+1,___flmul@b+1
  4540   0061D8  C14A  F021         	movff	_powf$1489+2,___flmul@b+2
  4541   0061DC  C14B  F022         	movff	_powf$1489+3,___flmul@b+3
  4542   0061E0  ECBC  F020         	call	___flmul	;wreg free
  4543   0061E4  C01F  F03C         	movff	?___flmul,___flsub@a
  4544   0061E8  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  4545   0061EC  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  4546   0061F0  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  4547   0061F4  0E00               	movlw	0
  4548   0061F6  6E38               	movwf	___flsub@b^0,c
  4549   0061F8  0E00               	movlw	0
  4550   0061FA  6E39               	movwf	(___flsub@b+1)^0,c
  4551   0061FC  0E00               	movlw	0
  4552   0061FE  6E3A               	movwf	(___flsub@b+2)^0,c
  4553   006200  0E3F               	movlw	63
  4554   006202  6E3B               	movwf	(___flsub@b+3)^0,c
  4555   006204  EC46  F00E         	call	___flsub	;wreg free
  4556   006208  C038  F14C         	movff	?___flsub,_powf$1491
  4557   00620C  C039  F14D         	movff	?___flsub+1,_powf$1491+1
  4558   006210  C03A  F14E         	movff	?___flsub+2,_powf$1491+2
  4559   006214  C03B  F14F         	movff	?___flsub+3,_powf$1491+3
  4560   006218  C158  F01F         	movff	_powf$1490,___flmul@b
  4561   00621C  C159  F020         	movff	_powf$1490+1,___flmul@b+1
  4562   006220  C15A  F021         	movff	_powf$1490+2,___flmul@b+2
  4563   006224  C15B  F022         	movff	_powf$1490+3,___flmul@b+3
  4564   006228  C14C  F023         	movff	_powf$1491,___flmul@a
  4565   00622C  C14D  F024         	movff	_powf$1491+1,___flmul@a+1
  4566   006230  C14E  F025         	movff	_powf$1491+2,___flmul@a+2
  4567   006234  C14F  F026         	movff	_powf$1491+3,___flmul@a+3
  4568   006238  ECBC  F020         	call	___flmul	;wreg free
  4569   00623C  C01F  F144         	movff	?___flmul,powf@w
  4570   006240  C020  F145         	movff	?___flmul+1,powf@w+1
  4571   006244  C021  F146         	movff	?___flmul+2,powf@w+2
  4572   006248  C022  F147         	movff	?___flmul+3,powf@w+3
  4573   00624C  C1B0  F01F         	movff	powf@t,___flmul@b
  4574   006250  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  4575   006254  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  4576   006258  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  4577   00625C  0E00               	movlw	0
  4578   00625E  6E23               	movwf	___flmul@a^0,c
  4579   006260  0EAA               	movlw	170
  4580   006262  6E24               	movwf	(___flmul@a+1)^0,c
  4581   006264  0EB8               	movlw	184
  4582   006266  6E25               	movwf	(___flmul@a+2)^0,c
  4583   006268  0E3F               	movlw	63
  4584   00626A  6E26               	movwf	(___flmul@a+3)^0,c
  4585   00626C  ECBC  F020         	call	___flmul	;wreg free
  4586   006270  C01F  F17C         	movff	?___flmul,powf@u
  4587   006274  C020  F17D         	movff	?___flmul+1,powf@u+1
  4588   006278  C021  F17E         	movff	?___flmul+2,powf@u+2
  4589   00627C  C022  F17F         	movff	?___flmul+3,powf@u+3
  4590   006280  0E70               	movlw	112
  4591   006282  6E23               	movwf	___flmul@a^0,c
  4592   006284  0EA5               	movlw	165
  4593   006286  6E24               	movwf	(___flmul@a+1)^0,c
  4594   006288  0EEC               	movlw	236
  4595   00628A  6E25               	movwf	(___flmul@a+2)^0,c
  4596   00628C  0E36               	movlw	54
  4597   00628E  6E26               	movwf	(___flmul@a+3)^0,c
  4598   006290  C1B0  F01F         	movff	powf@t,___flmul@b
  4599   006294  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  4600   006298  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  4601   00629C  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  4602   0062A0  ECBC  F020         	call	___flmul	;wreg free
  4603   0062A4  C01F  F038         	movff	?___flmul,___flsub@b
  4604   0062A8  C020  F039         	movff	?___flmul+1,___flsub@b+1
  4605   0062AC  C021  F03A         	movff	?___flmul+2,___flsub@b+2
  4606   0062B0  C022  F03B         	movff	?___flmul+3,___flsub@b+3
  4607   0062B4  0E3B               	movlw	59
  4608   0062B6  6E23               	movwf	___flmul@a^0,c
  4609   0062B8  0EAA               	movlw	170
  4610   0062BA  6E24               	movwf	(___flmul@a+1)^0,c
  4611   0062BC  0EB8               	movlw	184
  4612   0062BE  6E25               	movwf	(___flmul@a+2)^0,c
  4613   0062C0  0E3F               	movlw	63
  4614   0062C2  6E26               	movwf	(___flmul@a+3)^0,c
  4615   0062C4  C144  F01F         	movff	powf@w,___flmul@b
  4616   0062C8  C145  F020         	movff	powf@w+1,___flmul@b+1
  4617   0062CC  C146  F021         	movff	powf@w+2,___flmul@b+2
  4618   0062D0  C147  F022         	movff	powf@w+3,___flmul@b+3
  4619   0062D4  ECBC  F020         	call	___flmul	;wreg free
  4620   0062D8  C01F  F03C         	movff	?___flmul,___flsub@a
  4621   0062DC  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  4622   0062E0  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  4623   0062E4  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  4624   0062E8  EC46  F00E         	call	___flsub	;wreg free
  4625   0062EC  C038  F180         	movff	?___flsub,powf@v
  4626   0062F0  C039  F181         	movff	?___flsub+1,powf@v+1
  4627   0062F4  C03A  F182         	movff	?___flsub+2,powf@v+2
  4628   0062F8  C03B  F183         	movff	?___flsub+3,powf@v+3
  4629   0062FC  C17C  F00F         	movff	powf@u,___fladd@b
  4630   006300  C17D  F010         	movff	powf@u+1,___fladd@b+1
  4631   006304  C17E  F011         	movff	powf@u+2,___fladd@b+2
  4632   006308  C17F  F012         	movff	powf@u+3,___fladd@b+3
  4633   00630C  C180  F013         	movff	powf@v,___fladd@a
  4634   006310  C181  F014         	movff	powf@v+1,___fladd@a+1
  4635   006314  C182  F015         	movff	powf@v+2,___fladd@a+2
  4636   006318  C183  F016         	movff	powf@v+3,___fladd@a+3
  4637   00631C  ECCF  F022         	call	___fladd	;wreg free
  4638   006320  C00F  F18C         	movff	?___fladd,powf@t1
  4639   006324  C010  F18D         	movff	?___fladd+1,powf@t1+1
  4640   006328  C011  F18E         	movff	?___fladd+2,powf@t1+2
  4641   00632C  C012  F18F         	movff	?___fladd+3,powf@t1+3
  4642   006330  C18C  F198         	movff	powf@t1,powf@is
  4643   006334  C18D  F199         	movff	powf@t1+1,powf@is+1
  4644   006338  C18E  F19A         	movff	powf@t1+2,powf@is+2
  4645   00633C  C18F  F19B         	movff	powf@t1+3,powf@is+3
  4646   006340  0E00               	movlw	0
  4647   006342  0101               	movlb	1	; () banked
  4648   006344  1598               	andwf	powf@is& (0+255),w,b
  4649   006346  6F8C               	movwf	powf@t1& (0+255),b
  4650   006348  0EF0               	movlw	240
  4651   00634A  1599               	andwf	(powf@is+1)& (0+255),w,b
  4652   00634C  6F8D               	movwf	(powf@t1+1)& (0+255),b
  4653   00634E  0EFF               	movlw	255
  4654   006350  159A               	andwf	(powf@is+2)& (0+255),w,b
  4655   006352  6F8E               	movwf	(powf@t1+2)& (0+255),b
  4656   006354  0EFF               	movlw	255
  4657   006356  159B               	andwf	(powf@is+3)& (0+255),w,b
  4658   006358  6F8F               	movwf	(powf@t1+3)& (0+255),b
  4659   00635A                     
  4660                           ; BSR set to: 1
  4661   00635A  C17C  F03C         	movff	powf@u,___flsub@a
  4662   00635E  C17D  F03D         	movff	powf@u+1,___flsub@a+1
  4663   006362  C17E  F03E         	movff	powf@u+2,___flsub@a+2
  4664   006366  C17F  F03F         	movff	powf@u+3,___flsub@a+3
  4665   00636A  C18C  F038         	movff	powf@t1,___flsub@b
  4666   00636E  C18D  F039         	movff	powf@t1+1,___flsub@b+1
  4667   006372  C18E  F03A         	movff	powf@t1+2,___flsub@b+2
  4668   006376  C18F  F03B         	movff	powf@t1+3,___flsub@b+3
  4669   00637A  EC46  F00E         	call	___flsub	;wreg free
  4670   00637E  C038  F19C         	movff	?___flsub,_powf$1492
  4671   006382  C039  F19D         	movff	?___flsub+1,_powf$1492+1
  4672   006386  C03A  F19E         	movff	?___flsub+2,_powf$1492+2
  4673   00638A  C03B  F19F         	movff	?___flsub+3,_powf$1492+3
  4674   00638E  C180  F038         	movff	powf@v,___flsub@b
  4675   006392  C181  F039         	movff	powf@v+1,___flsub@b+1
  4676   006396  C182  F03A         	movff	powf@v+2,___flsub@b+2
  4677   00639A  C183  F03B         	movff	powf@v+3,___flsub@b+3
  4678   00639E  C19C  F03C         	movff	_powf$1492,___flsub@a
  4679   0063A2  C19D  F03D         	movff	_powf$1492+1,___flsub@a+1
  4680   0063A6  C19E  F03E         	movff	_powf$1492+2,___flsub@a+2
  4681   0063AA  C19F  F03F         	movff	_powf$1492+3,___flsub@a+3
  4682   0063AE  EC46  F00E         	call	___flsub	;wreg free
  4683   0063B2  C038  F11C         	movff	?___flsub,powf@t2
  4684   0063B6  C039  F11D         	movff	?___flsub+1,powf@t2+1
  4685   0063BA  C03A  F11E         	movff	?___flsub+2,powf@t2+2
  4686   0063BE  C03B  F11F         	movff	?___flsub+3,powf@t2+3
  4687   0063C2  EFF1  F038         	goto	l7088
  4688   0063C6                     l6960:
  4689                           
  4690                           ; BSR set to: 1
  4691   0063C6  0E00               	movlw	0
  4692   0063C8  6F88               	movwf	powf@n& (0+255),b
  4693   0063CA  0E00               	movlw	0
  4694   0063CC  6F89               	movwf	(powf@n+1)& (0+255),b
  4695   0063CE  0E00               	movlw	0
  4696   0063D0  6F8A               	movwf	(powf@n+2)& (0+255),b
  4697   0063D2  0E00               	movlw	0
  4698   0063D4  6F8B               	movwf	(powf@n+3)& (0+255),b
  4699   0063D6                     
  4700                           ; BSR set to: 1
  4701   0063D6  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  4702   0063D8  EFF9  F031         	goto	u9120
  4703   0063DC  51AF               	movf	(powf@ix+3)& (0+255),w,b
  4704   0063DE  E107               	bnz	u9121
  4705   0063E0  0E80               	movlw	128
  4706   0063E2  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  4707   0063E4  B0D8               	btfsc	status,0,c
  4708   0063E6  EFF7  F031         	goto	u9121
  4709   0063EA  EFF9  F031         	goto	u9120
  4710   0063EE                     u9121:
  4711   0063EE  EF24  F032         	goto	l6970
  4712   0063F2                     u9120:
  4713   0063F2                     
  4714                           ; BSR set to: 1
  4715   0063F2  C178  F01F         	movff	powf@ax,___flmul@b
  4716   0063F6  C179  F020         	movff	powf@ax+1,___flmul@b+1
  4717   0063FA  C17A  F021         	movff	powf@ax+2,___flmul@b+2
  4718   0063FE  C17B  F022         	movff	powf@ax+3,___flmul@b+3
  4719   006402  0E00               	movlw	0
  4720   006404  6E23               	movwf	___flmul@a^0,c
  4721   006406  0E00               	movlw	0
  4722   006408  6E24               	movwf	(___flmul@a+1)^0,c
  4723   00640A  0E80               	movlw	128
  4724   00640C  6E25               	movwf	(___flmul@a+2)^0,c
  4725   00640E  0E4B               	movlw	75
  4726   006410  6E26               	movwf	(___flmul@a+3)^0,c
  4727   006412  ECBC  F020         	call	___flmul	;wreg free
  4728   006416  C01F  F178         	movff	?___flmul,powf@ax
  4729   00641A  C020  F179         	movff	?___flmul+1,powf@ax+1
  4730   00641E  C021  F17A         	movff	?___flmul+2,powf@ax+2
  4731   006422  C022  F17B         	movff	?___flmul+3,powf@ax+3
  4732   006426  0EE8               	movlw	232
  4733   006428  0101               	movlb	1	; () banked
  4734   00642A  2788               	addwf	powf@n& (0+255),f,b
  4735   00642C  0EFF               	movlw	255
  4736   00642E  2389               	addwfc	(powf@n+1)& (0+255),f,b
  4737   006430  0EFF               	movlw	255
  4738   006432  238A               	addwfc	(powf@n+2)& (0+255),f,b
  4739   006434  0EFF               	movlw	255
  4740   006436  238B               	addwfc	(powf@n+3)& (0+255),f,b
  4741   006438                     
  4742                           ; BSR set to: 1
  4743   006438  C178  F1AC         	movff	powf@ax,powf@ix
  4744   00643C  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  4745   006440  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  4746   006444  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  4747   006448                     l6970:
  4748                           
  4749                           ; BSR set to: 1
  4750   006448  0E17               	movlw	23
  4751   00644A  0100               	movlb	0	; () banked
  4752   00644C  6F68               	movwf	??_powf& (0+255),b
  4753   00644E  C1AC  F069         	movff	powf@ix,??_powf+1
  4754   006452  C1AD  F06A         	movff	powf@ix+1,??_powf+2
  4755   006456  C1AE  F06B         	movff	powf@ix+2,??_powf+3
  4756   00645A  C1AF  F06C         	movff	powf@ix+3,??_powf+4
  4757   00645E                     u9135:
  4758   00645E  6768               	tstfsz	??_powf& (0+255),b
  4759   006460  EF34  F032         	goto	u9136
  4760   006464  EF3C  F032         	goto	u9137
  4761   006468                     u9136:
  4762   006468  356C               	rlcf	(??_powf+4)& (0+255),w,b
  4763   00646A  336C               	rrcf	(??_powf+4)& (0+255),f,b
  4764   00646C  336B               	rrcf	(??_powf+3)& (0+255),f,b
  4765   00646E  336A               	rrcf	(??_powf+2)& (0+255),f,b
  4766   006470  3369               	rrcf	(??_powf+1)& (0+255),f,b
  4767   006472  2F68               	decfsz	??_powf& (0+255),f,b
  4768   006474  EF2F  F032         	goto	u9135
  4769   006478                     u9137:
  4770   006478  0E81               	movlw	129
  4771   00647A  0100               	movlb	0	; () banked
  4772   00647C  2569               	addwf	(??_powf+1)& (0+255),w,b
  4773   00647E  6F6D               	movwf	(??_powf+5)& (0+255),b
  4774   006480  0EFF               	movlw	255
  4775   006482  216A               	addwfc	(??_powf+2)& (0+255),w,b
  4776   006484  6F6E               	movwf	(??_powf+6)& (0+255),b
  4777   006486  0EFF               	movlw	255
  4778   006488  216B               	addwfc	(??_powf+3)& (0+255),w,b
  4779   00648A  6F6F               	movwf	(??_powf+7)& (0+255),b
  4780   00648C  0EFF               	movlw	255
  4781   00648E  216C               	addwfc	(??_powf+4)& (0+255),w,b
  4782   006490  6F70               	movwf	(??_powf+8)& (0+255),b
  4783   006492  516D               	movf	(??_powf+5)& (0+255),w,b
  4784   006494  0101               	movlb	1	; () banked
  4785   006496  2788               	addwf	powf@n& (0+255),f,b
  4786   006498  0100               	movlb	0	; () banked
  4787   00649A  516E               	movf	(??_powf+6)& (0+255),w,b
  4788   00649C  0101               	movlb	1	; () banked
  4789   00649E  2389               	addwfc	(powf@n+1)& (0+255),f,b
  4790   0064A0  0100               	movlb	0	; () banked
  4791   0064A2  516F               	movf	(??_powf+7)& (0+255),w,b
  4792   0064A4  0101               	movlb	1	; () banked
  4793   0064A6  238A               	addwfc	(powf@n+2)& (0+255),f,b
  4794   0064A8  0100               	movlb	0	; () banked
  4795   0064AA  5170               	movf	(??_powf+8)& (0+255),w,b
  4796   0064AC  0101               	movlb	1	; () banked
  4797   0064AE  238B               	addwfc	(powf@n+3)& (0+255),f,b
  4798   0064B0                     
  4799                           ; BSR set to: 1
  4800   0064B0  0EFF               	movlw	255
  4801   0064B2  15AC               	andwf	powf@ix& (0+255),w,b
  4802   0064B4  6FA8               	movwf	powf@j& (0+255),b
  4803   0064B6  0EFF               	movlw	255
  4804   0064B8  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  4805   0064BA  6FA9               	movwf	(powf@j+1)& (0+255),b
  4806   0064BC  0E7F               	movlw	127
  4807   0064BE  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  4808   0064C0  6FAA               	movwf	(powf@j+2)& (0+255),b
  4809   0064C2  0E00               	movlw	0
  4810   0064C4  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  4811   0064C6  6FAB               	movwf	(powf@j+3)& (0+255),b
  4812   0064C8                     
  4813                           ; BSR set to: 1
  4814   0064C8  0E00               	movlw	0
  4815   0064CA  6FA4               	movwf	powf@k& (0+255),b
  4816   0064CC  0E00               	movlw	0
  4817   0064CE  6FA5               	movwf	(powf@k+1)& (0+255),b
  4818   0064D0  0E00               	movlw	0
  4819   0064D2  6FA6               	movwf	(powf@k+2)& (0+255),b
  4820   0064D4  0E00               	movlw	0
  4821   0064D6  6FA7               	movwf	(powf@k+3)& (0+255),b
  4822   0064D8                     
  4823                           ; BSR set to: 1
  4824   0064D8  0E00               	movlw	0
  4825   0064DA  11A8               	iorwf	powf@j& (0+255),w,b
  4826   0064DC  6FAC               	movwf	powf@ix& (0+255),b
  4827   0064DE  0E00               	movlw	0
  4828   0064E0  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  4829   0064E2  6FAD               	movwf	(powf@ix+1)& (0+255),b
  4830   0064E4  0E80               	movlw	128
  4831   0064E6  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  4832   0064E8  6FAE               	movwf	(powf@ix+2)& (0+255),b
  4833   0064EA  0E3F               	movlw	63
  4834   0064EC  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  4835   0064EE  6FAF               	movwf	(powf@ix+3)& (0+255),b
  4836   0064F0                     
  4837                           ; BSR set to: 1
  4838   0064F0  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  4839   0064F2  EF8A  F032         	goto	u9140
  4840   0064F6  51AB               	movf	(powf@j+3)& (0+255),w,b
  4841   0064F8  E10B               	bnz	u9141
  4842   0064FA  0E72               	movlw	114
  4843   0064FC  5DA8               	subwf	powf@j& (0+255),w,b
  4844   0064FE  0EC4               	movlw	196
  4845   006500  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  4846   006502  0E1C               	movlw	28
  4847   006504  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  4848   006506  B0D8               	btfsc	status,0,c
  4849   006508  EF88  F032         	goto	u9141
  4850   00650C  EF8A  F032         	goto	u9140
  4851   006510                     u9141:
  4852   006510  EF8C  F032         	goto	l6982
  4853   006514                     u9140:
  4854   006514  EFB6  F032         	goto	l6988
  4855   006518                     l6982:
  4856                           
  4857                           ; BSR set to: 1
  4858   006518  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  4859   00651A  EF9E  F032         	goto	u9150
  4860   00651E  51AB               	movf	(powf@j+3)& (0+255),w,b
  4861   006520  E10B               	bnz	u9151
  4862   006522  0ED7               	movlw	215
  4863   006524  5DA8               	subwf	powf@j& (0+255),w,b
  4864   006526  0EB3               	movlw	179
  4865   006528  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  4866   00652A  0E5D               	movlw	93
  4867   00652C  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  4868   00652E  B0D8               	btfsc	status,0,c
  4869   006530  EF9C  F032         	goto	u9151
  4870   006534  EF9E  F032         	goto	u9150
  4871   006538                     u9151:
  4872   006538  EFA8  F032         	goto	l6986
  4873   00653C                     u9150:
  4874   00653C                     
  4875                           ; BSR set to: 1
  4876   00653C  0E01               	movlw	1
  4877   00653E  6FA4               	movwf	powf@k& (0+255),b
  4878   006540  0E00               	movlw	0
  4879   006542  6FA5               	movwf	(powf@k+1)& (0+255),b
  4880   006544  0E00               	movlw	0
  4881   006546  6FA6               	movwf	(powf@k+2)& (0+255),b
  4882   006548  0E00               	movlw	0
  4883   00654A  6FA7               	movwf	(powf@k+3)& (0+255),b
  4884   00654C  EFB6  F032         	goto	l6988
  4885   006550                     l6986:
  4886                           
  4887                           ; BSR set to: 1
  4888   006550  0E01               	movlw	1
  4889   006552  2788               	addwf	powf@n& (0+255),f,b
  4890   006554  0E00               	movlw	0
  4891   006556  2389               	addwfc	(powf@n+1)& (0+255),f,b
  4892   006558  238A               	addwfc	(powf@n+2)& (0+255),f,b
  4893   00655A  238B               	addwfc	(powf@n+3)& (0+255),f,b
  4894   00655C  0E00               	movlw	0
  4895   00655E  27AC               	addwf	powf@ix& (0+255),f,b
  4896   006560  0E00               	movlw	0
  4897   006562  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  4898   006564  0E80               	movlw	128
  4899   006566  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  4900   006568  0EFF               	movlw	255
  4901   00656A  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  4902   00656C                     l6988:
  4903                           
  4904                           ; BSR set to: 1
  4905   00656C  C1AC  F178         	movff	powf@ix,powf@ax
  4906   006570  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  4907   006574  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  4908   006578  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  4909   00657C                     
  4910                           ; BSR set to: 1
  4911   00657C  C178  F038         	movff	powf@ax,___flsub@b
  4912   006580  C179  F039         	movff	powf@ax+1,___flsub@b+1
  4913   006584  C17A  F03A         	movff	powf@ax+2,___flsub@b+2
  4914   006588  C17B  F03B         	movff	powf@ax+3,___flsub@b+3
  4915   00658C  C1A4  F068         	movff	powf@k,??_powf
  4916   006590  C1A5  F069         	movff	powf@k+1,??_powf+1
  4917   006594  0100               	movlb	0	; () banked
  4918   006596  90D8               	bcf	status,0,c
  4919   006598  3768               	rlcf	??_powf& (0+255),f,b
  4920   00659A  3769               	rlcf	(??_powf+1)& (0+255),f,b
  4921   00659C  90D8               	bcf	status,0,c
  4922   00659E  3768               	rlcf	??_powf& (0+255),f,b
  4923   0065A0  3769               	rlcf	(??_powf+1)& (0+255),f,b
  4924   0065A2  0E03               	movlw	low _bp
  4925   0065A4  2568               	addwf	??_powf& (0+255),w,b
  4926   0065A6  6EF6               	movwf	tblptrl,c
  4927   0065A8  0E7E               	movlw	high _bp
  4928   0065AA  2169               	addwfc	(??_powf+1)& (0+255),w,b
  4929   0065AC  6EF7               	movwf	tblptrh,c
  4930   0065AE                     	if	0	;There are less than 3 active tblptr bytes
  4931   0065AE                     	endif
  4932   0065AE  0009               	tblrd		*+
  4933   0065B0  CFF5 F03C          	movff	tablat,___flsub@a
  4934   0065B4  0009               	tblrd		*+
  4935   0065B6  CFF5 F03D          	movff	tablat,___flsub@a+1
  4936   0065BA  0009               	tblrd		*+
  4937   0065BC  CFF5 F03E          	movff	tablat,___flsub@a+2
  4938   0065C0  000A               	tblrd		*-
  4939   0065C2  CFF5 F03F          	movff	tablat,___flsub@a+3
  4940   0065C6  EC46  F00E         	call	___flsub	;wreg free
  4941   0065CA  C038  F17C         	movff	?___flsub,powf@u
  4942   0065CE  C039  F17D         	movff	?___flsub+1,powf@u+1
  4943   0065D2  C03A  F17E         	movff	?___flsub+2,powf@u+2
  4944   0065D6  C03B  F17F         	movff	?___flsub+3,powf@u+3
  4945   0065DA  0E00               	movlw	0
  4946   0065DC  6E40               	movwf	___fldiv@b^0,c
  4947   0065DE  0E00               	movlw	0
  4948   0065E0  6E41               	movwf	(___fldiv@b+1)^0,c
  4949   0065E2  0E80               	movlw	128
  4950   0065E4  6E42               	movwf	(___fldiv@b+2)^0,c
  4951   0065E6  0E3F               	movlw	63
  4952   0065E8  6E43               	movwf	(___fldiv@b+3)^0,c
  4953   0065EA  C178  F013         	movff	powf@ax,___fladd@a
  4954   0065EE  C179  F014         	movff	powf@ax+1,___fladd@a+1
  4955   0065F2  C17A  F015         	movff	powf@ax+2,___fladd@a+2
  4956   0065F6  C17B  F016         	movff	powf@ax+3,___fladd@a+3
  4957   0065FA  C1A4  F068         	movff	powf@k,??_powf
  4958   0065FE  C1A5  F069         	movff	powf@k+1,??_powf+1
  4959   006602  0100               	movlb	0	; () banked
  4960   006604  90D8               	bcf	status,0,c
  4961   006606  3768               	rlcf	??_powf& (0+255),f,b
  4962   006608  3769               	rlcf	(??_powf+1)& (0+255),f,b
  4963   00660A  90D8               	bcf	status,0,c
  4964   00660C  3768               	rlcf	??_powf& (0+255),f,b
  4965   00660E  3769               	rlcf	(??_powf+1)& (0+255),f,b
  4966   006610  0E03               	movlw	low _bp
  4967   006612  2568               	addwf	??_powf& (0+255),w,b
  4968   006614  6EF6               	movwf	tblptrl,c
  4969   006616  0E7E               	movlw	high _bp
  4970   006618  2169               	addwfc	(??_powf+1)& (0+255),w,b
  4971   00661A  6EF7               	movwf	tblptrh,c
  4972   00661C                     	if	0	;There are less than 3 active tblptr bytes
  4973   00661C                     	endif
  4974   00661C  0009               	tblrd		*+
  4975   00661E  CFF5 F00F          	movff	tablat,___fladd@b
  4976   006622  0009               	tblrd		*+
  4977   006624  CFF5 F010          	movff	tablat,___fladd@b+1
  4978   006628  0009               	tblrd		*+
  4979   00662A  CFF5 F011          	movff	tablat,___fladd@b+2
  4980   00662E  000A               	tblrd		*-
  4981   006630  CFF5 F012          	movff	tablat,___fladd@b+3
  4982   006634  ECCF  F022         	call	___fladd	;wreg free
  4983   006638  C00F  F044         	movff	?___fladd,___fldiv@a
  4984   00663C  C010  F045         	movff	?___fladd+1,___fldiv@a+1
  4985   006640  C011  F046         	movff	?___fladd+2,___fldiv@a+2
  4986   006644  C012  F047         	movff	?___fladd+3,___fldiv@a+3
  4987   006648  EC05  F01D         	call	___fldiv	;wreg free
  4988   00664C  C040  F180         	movff	?___fldiv,powf@v
  4989   006650  C041  F181         	movff	?___fldiv+1,powf@v+1
  4990   006654  C042  F182         	movff	?___fldiv+2,powf@v+2
  4991   006658  C043  F183         	movff	?___fldiv+3,powf@v+3
  4992   00665C  C17C  F01F         	movff	powf@u,___flmul@b
  4993   006660  C17D  F020         	movff	powf@u+1,___flmul@b+1
  4994   006664  C17E  F021         	movff	powf@u+2,___flmul@b+2
  4995   006668  C17F  F022         	movff	powf@u+3,___flmul@b+3
  4996   00666C  C180  F023         	movff	powf@v,___flmul@a
  4997   006670  C181  F024         	movff	powf@v+1,___flmul@a+1
  4998   006674  C182  F025         	movff	powf@v+2,___flmul@a+2
  4999   006678  C183  F026         	movff	powf@v+3,___flmul@a+3
  5000   00667C  ECBC  F020         	call	___flmul	;wreg free
  5001   006680  C01F  F160         	movff	?___flmul,powf@s
  5002   006684  C020  F161         	movff	?___flmul+1,powf@s+1
  5003   006688  C021  F162         	movff	?___flmul+2,powf@s+2
  5004   00668C  C022  F163         	movff	?___flmul+3,powf@s+3
  5005   006690  C160  F174         	movff	powf@s,powf@s_h
  5006   006694  C161  F175         	movff	powf@s+1,powf@s_h+1
  5007   006698  C162  F176         	movff	powf@s+2,powf@s_h+2
  5008   00669C  C163  F177         	movff	powf@s+3,powf@s_h+3
  5009   0066A0  C174  F198         	movff	powf@s_h,powf@is
  5010   0066A4  C175  F199         	movff	powf@s_h+1,powf@is+1
  5011   0066A8  C176  F19A         	movff	powf@s_h+2,powf@is+2
  5012   0066AC  C177  F19B         	movff	powf@s_h+3,powf@is+3
  5013   0066B0  0E00               	movlw	0
  5014   0066B2  0101               	movlb	1	; () banked
  5015   0066B4  1598               	andwf	powf@is& (0+255),w,b
  5016   0066B6  6F74               	movwf	powf@s_h& (0+255),b
  5017   0066B8  0EF0               	movlw	240
  5018   0066BA  1599               	andwf	(powf@is+1)& (0+255),w,b
  5019   0066BC  6F75               	movwf	(powf@s_h+1)& (0+255),b
  5020   0066BE  0EFF               	movlw	255
  5021   0066C0  159A               	andwf	(powf@is+2)& (0+255),w,b
  5022   0066C2  6F76               	movwf	(powf@s_h+2)& (0+255),b
  5023   0066C4  0EFF               	movlw	255
  5024   0066C6  159B               	andwf	(powf@is+3)& (0+255),w,b
  5025   0066C8  6F77               	movwf	(powf@s_h+3)& (0+255),b
  5026   0066CA                     
  5027                           ; BSR set to: 1
  5028   0066CA  C1AC  F068         	movff	powf@ix,??_powf
  5029   0066CE  C1AD  F069         	movff	powf@ix+1,??_powf+1
  5030   0066D2  C1AE  F06A         	movff	powf@ix+2,??_powf+2
  5031   0066D6  C1AF  F06B         	movff	powf@ix+3,??_powf+3
  5032   0066DA  0100               	movlb	0	; () banked
  5033   0066DC  356B               	rlcf	(??_powf+3)& (0+255),w,b
  5034   0066DE  336B               	rrcf	(??_powf+3)& (0+255),f,b
  5035   0066E0  336A               	rrcf	(??_powf+2)& (0+255),f,b
  5036   0066E2  3369               	rrcf	(??_powf+1)& (0+255),f,b
  5037   0066E4  3368               	rrcf	??_powf& (0+255),f,b
  5038   0066E6  0E00               	movlw	0
  5039   0066E8  1568               	andwf	??_powf& (0+255),w,b
  5040   0066EA  6F6C               	movwf	(??_powf+4)& (0+255),b
  5041   0066EC  0EF0               	movlw	240
  5042   0066EE  1569               	andwf	(??_powf+1)& (0+255),w,b
  5043   0066F0  6F6D               	movwf	(??_powf+5)& (0+255),b
  5044   0066F2  0EFF               	movlw	255
  5045   0066F4  156A               	andwf	(??_powf+2)& (0+255),w,b
  5046   0066F6  6F6E               	movwf	(??_powf+6)& (0+255),b
  5047   0066F8  0EFF               	movlw	255
  5048   0066FA  156B               	andwf	(??_powf+3)& (0+255),w,b
  5049   0066FC  6F6F               	movwf	(??_powf+7)& (0+255),b
  5050   0066FE  0E00               	movlw	0
  5051   006700  116C               	iorwf	(??_powf+4)& (0+255),w,b
  5052   006702  0101               	movlb	1	; () banked
  5053   006704  6F98               	movwf	powf@is& (0+255),b
  5054   006706  0E00               	movlw	0
  5055   006708  0100               	movlb	0	; () banked
  5056   00670A  116D               	iorwf	(??_powf+5)& (0+255),w,b
  5057   00670C  0101               	movlb	1	; () banked
  5058   00670E  6F99               	movwf	(powf@is+1)& (0+255),b
  5059   006710  0E00               	movlw	0
  5060   006712  0100               	movlb	0	; () banked
  5061   006714  116E               	iorwf	(??_powf+6)& (0+255),w,b
  5062   006716  0101               	movlb	1	; () banked
  5063   006718  6F9A               	movwf	(powf@is+2)& (0+255),b
  5064   00671A  0E20               	movlw	32
  5065   00671C  0100               	movlb	0	; () banked
  5066   00671E  116F               	iorwf	(??_powf+7)& (0+255),w,b
  5067   006720  0101               	movlb	1	; () banked
  5068   006722  6F9B               	movwf	(powf@is+3)& (0+255),b
  5069   006724                     
  5070                           ; BSR set to: 1
  5071   006724  C1A4  F068         	movff	powf@k,??_powf
  5072   006728  C1A5  F069         	movff	powf@k+1,??_powf+1
  5073   00672C  C1A6  F06A         	movff	powf@k+2,??_powf+2
  5074   006730  C1A7  F06B         	movff	powf@k+3,??_powf+3
  5075   006734  0E15               	movlw	21
  5076   006736                     u9165:
  5077   006736  90D8               	bcf	status,0,c
  5078   006738  0100               	movlb	0	; () banked
  5079   00673A  3768               	rlcf	??_powf& (0+255),f,b
  5080   00673C  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5081   00673E  376A               	rlcf	(??_powf+2)& (0+255),f,b
  5082   006740  376B               	rlcf	(??_powf+3)& (0+255),f,b
  5083   006742  2EE8               	decfsz	wreg,f,c
  5084   006744  EF9B  F033         	goto	u9165
  5085   006748  0101               	movlb	1	; () banked
  5086   00674A  5198               	movf	powf@is& (0+255),w,b
  5087   00674C  0100               	movlb	0	; () banked
  5088   00674E  2568               	addwf	??_powf& (0+255),w,b
  5089   006750  6F6C               	movwf	(??_powf+4)& (0+255),b
  5090   006752  0101               	movlb	1	; () banked
  5091   006754  5199               	movf	(powf@is+1)& (0+255),w,b
  5092   006756  0100               	movlb	0	; () banked
  5093   006758  2169               	addwfc	(??_powf+1)& (0+255),w,b
  5094   00675A  6F6D               	movwf	(??_powf+5)& (0+255),b
  5095   00675C  0101               	movlb	1	; () banked
  5096   00675E  519A               	movf	(powf@is+2)& (0+255),w,b
  5097   006760  0100               	movlb	0	; () banked
  5098   006762  216A               	addwfc	(??_powf+2)& (0+255),w,b
  5099   006764  6F6E               	movwf	(??_powf+6)& (0+255),b
  5100   006766  0101               	movlb	1	; () banked
  5101   006768  519B               	movf	(powf@is+3)& (0+255),w,b
  5102   00676A  0100               	movlb	0	; () banked
  5103   00676C  216B               	addwfc	(??_powf+3)& (0+255),w,b
  5104   00676E  6F6F               	movwf	(??_powf+7)& (0+255),b
  5105   006770  0E00               	movlw	0
  5106   006772  256C               	addwf	(??_powf+4)& (0+255),w,b
  5107   006774  0101               	movlb	1	; () banked
  5108   006776  6F70               	movwf	powf@t_h& (0+255),b
  5109   006778  0E00               	movlw	0
  5110   00677A  0100               	movlb	0	; () banked
  5111   00677C  216D               	addwfc	(??_powf+5)& (0+255),w,b
  5112   00677E  0101               	movlb	1	; () banked
  5113   006780  6F71               	movwf	(powf@t_h+1)& (0+255),b
  5114   006782  0E40               	movlw	64
  5115   006784  0100               	movlb	0	; () banked
  5116   006786  216E               	addwfc	(??_powf+6)& (0+255),w,b
  5117   006788  0101               	movlb	1	; () banked
  5118   00678A  6F72               	movwf	(powf@t_h+2)& (0+255),b
  5119   00678C  0E00               	movlw	0
  5120   00678E  0100               	movlb	0	; () banked
  5121   006790  216F               	addwfc	(??_powf+7)& (0+255),w,b
  5122   006792  0101               	movlb	1	; () banked
  5123   006794  6F73               	movwf	(powf@t_h+3)& (0+255),b
  5124   006796                     
  5125                           ; BSR set to: 1
  5126   006796  C1A4  F068         	movff	powf@k,??_powf
  5127   00679A  C1A5  F069         	movff	powf@k+1,??_powf+1
  5128   00679E  0100               	movlb	0	; () banked
  5129   0067A0  90D8               	bcf	status,0,c
  5130   0067A2  3768               	rlcf	??_powf& (0+255),f,b
  5131   0067A4  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5132   0067A6  90D8               	bcf	status,0,c
  5133   0067A8  3768               	rlcf	??_powf& (0+255),f,b
  5134   0067AA  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5135   0067AC  0E03               	movlw	low _bp
  5136   0067AE  2568               	addwf	??_powf& (0+255),w,b
  5137   0067B0  6EF6               	movwf	tblptrl,c
  5138   0067B2  0E7E               	movlw	high _bp
  5139   0067B4  2169               	addwfc	(??_powf+1)& (0+255),w,b
  5140   0067B6  6EF7               	movwf	tblptrh,c
  5141   0067B8                     	if	0	;There are less than 3 active tblptr bytes
  5142   0067B8                     	endif
  5143   0067B8  0009               	tblrd		*+
  5144   0067BA  CFF5 F03C          	movff	tablat,___flsub@a
  5145   0067BE  0009               	tblrd		*+
  5146   0067C0  CFF5 F03D          	movff	tablat,___flsub@a+1
  5147   0067C4  0009               	tblrd		*+
  5148   0067C6  CFF5 F03E          	movff	tablat,___flsub@a+2
  5149   0067CA  000A               	tblrd		*-
  5150   0067CC  CFF5 F03F          	movff	tablat,___flsub@a+3
  5151   0067D0  C170  F038         	movff	powf@t_h,___flsub@b
  5152   0067D4  C171  F039         	movff	powf@t_h+1,___flsub@b+1
  5153   0067D8  C172  F03A         	movff	powf@t_h+2,___flsub@b+2
  5154   0067DC  C173  F03B         	movff	powf@t_h+3,___flsub@b+3
  5155   0067E0  EC46  F00E         	call	___flsub	;wreg free
  5156   0067E4  C038  F19C         	movff	?___flsub,_powf$1492
  5157   0067E8  C039  F19D         	movff	?___flsub+1,_powf$1492+1
  5158   0067EC  C03A  F19E         	movff	?___flsub+2,_powf$1492+2
  5159   0067F0  C03B  F19F         	movff	?___flsub+3,_powf$1492+3
  5160   0067F4  C178  F038         	movff	powf@ax,___flsub@b
  5161   0067F8  C179  F039         	movff	powf@ax+1,___flsub@b+1
  5162   0067FC  C17A  F03A         	movff	powf@ax+2,___flsub@b+2
  5163   006800  C17B  F03B         	movff	powf@ax+3,___flsub@b+3
  5164   006804  C19C  F03C         	movff	_powf$1492,___flsub@a
  5165   006808  C19D  F03D         	movff	_powf$1492+1,___flsub@a+1
  5166   00680C  C19E  F03E         	movff	_powf$1492+2,___flsub@a+2
  5167   006810  C19F  F03F         	movff	_powf$1492+3,___flsub@a+3
  5168   006814  EC46  F00E         	call	___flsub	;wreg free
  5169   006818  C038  F134         	movff	?___flsub,powf@t_l
  5170   00681C  C039  F135         	movff	?___flsub+1,powf@t_l+1
  5171   006820  C03A  F136         	movff	?___flsub+2,powf@t_l+2
  5172   006824  C03B  F137         	movff	?___flsub+3,powf@t_l+3
  5173   006828  C170  F023         	movff	powf@t_h,___flmul@a
  5174   00682C  C171  F024         	movff	powf@t_h+1,___flmul@a+1
  5175   006830  C172  F025         	movff	powf@t_h+2,___flmul@a+2
  5176   006834  C173  F026         	movff	powf@t_h+3,___flmul@a+3
  5177   006838  C174  F01F         	movff	powf@s_h,___flmul@b
  5178   00683C  C175  F020         	movff	powf@s_h+1,___flmul@b+1
  5179   006840  C176  F021         	movff	powf@s_h+2,___flmul@b+2
  5180   006844  C177  F022         	movff	powf@s_h+3,___flmul@b+3
  5181   006848  ECBC  F020         	call	___flmul	;wreg free
  5182   00684C  C01F  F03C         	movff	?___flmul,___flsub@a
  5183   006850  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  5184   006854  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  5185   006858  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  5186   00685C  C17C  F038         	movff	powf@u,___flsub@b
  5187   006860  C17D  F039         	movff	powf@u+1,___flsub@b+1
  5188   006864  C17E  F03A         	movff	powf@u+2,___flsub@b+2
  5189   006868  C17F  F03B         	movff	powf@u+3,___flsub@b+3
  5190   00686C  EC46  F00E         	call	___flsub	;wreg free
  5191   006870  C038  F19C         	movff	?___flsub,_powf$1492
  5192   006874  C039  F19D         	movff	?___flsub+1,_powf$1492+1
  5193   006878  C03A  F19E         	movff	?___flsub+2,_powf$1492+2
  5194   00687C  C03B  F19F         	movff	?___flsub+3,_powf$1492+3
  5195   006880  C134  F023         	movff	powf@t_l,___flmul@a
  5196   006884  C135  F024         	movff	powf@t_l+1,___flmul@a+1
  5197   006888  C136  F025         	movff	powf@t_l+2,___flmul@a+2
  5198   00688C  C137  F026         	movff	powf@t_l+3,___flmul@a+3
  5199   006890  C174  F01F         	movff	powf@s_h,___flmul@b
  5200   006894  C175  F020         	movff	powf@s_h+1,___flmul@b+1
  5201   006898  C176  F021         	movff	powf@s_h+2,___flmul@b+2
  5202   00689C  C177  F022         	movff	powf@s_h+3,___flmul@b+3
  5203   0068A0  ECBC  F020         	call	___flmul	;wreg free
  5204   0068A4  C01F  F03C         	movff	?___flmul,___flsub@a
  5205   0068A8  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  5206   0068AC  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  5207   0068B0  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  5208   0068B4  C19C  F038         	movff	_powf$1492,___flsub@b
  5209   0068B8  C19D  F039         	movff	_powf$1492+1,___flsub@b+1
  5210   0068BC  C19E  F03A         	movff	_powf$1492+2,___flsub@b+2
  5211   0068C0  C19F  F03B         	movff	_powf$1492+3,___flsub@b+3
  5212   0068C4  EC46  F00E         	call	___flsub	;wreg free
  5213   0068C8  C038  F158         	movff	?___flsub,_powf$1490
  5214   0068CC  C039  F159         	movff	?___flsub+1,_powf$1490+1
  5215   0068D0  C03A  F15A         	movff	?___flsub+2,_powf$1490+2
  5216   0068D4  C03B  F15B         	movff	?___flsub+3,_powf$1490+3
  5217   0068D8  C158  F01F         	movff	_powf$1490,___flmul@b
  5218   0068DC  C159  F020         	movff	_powf$1490+1,___flmul@b+1
  5219   0068E0  C15A  F021         	movff	_powf$1490+2,___flmul@b+2
  5220   0068E4  C15B  F022         	movff	_powf$1490+3,___flmul@b+3
  5221   0068E8  C180  F023         	movff	powf@v,___flmul@a
  5222   0068EC  C181  F024         	movff	powf@v+1,___flmul@a+1
  5223   0068F0  C182  F025         	movff	powf@v+2,___flmul@a+2
  5224   0068F4  C183  F026         	movff	powf@v+3,___flmul@a+3
  5225   0068F8  ECBC  F020         	call	___flmul	;wreg free
  5226   0068FC  C01F  F130         	movff	?___flmul,powf@s_l
  5227   006900  C020  F131         	movff	?___flmul+1,powf@s_l+1
  5228   006904  C021  F132         	movff	?___flmul+2,powf@s_l+2
  5229   006908  C022  F133         	movff	?___flmul+3,powf@s_l+3
  5230   00690C  C160  F01F         	movff	powf@s,___flmul@b
  5231   006910  C161  F020         	movff	powf@s+1,___flmul@b+1
  5232   006914  C162  F021         	movff	powf@s+2,___flmul@b+2
  5233   006918  C163  F022         	movff	powf@s+3,___flmul@b+3
  5234   00691C  C160  F023         	movff	powf@s,___flmul@a
  5235   006920  C161  F024         	movff	powf@s+1,___flmul@a+1
  5236   006924  C162  F025         	movff	powf@s+2,___flmul@a+2
  5237   006928  C163  F026         	movff	powf@s+3,___flmul@a+3
  5238   00692C  ECBC  F020         	call	___flmul	;wreg free
  5239   006930  C01F  F190         	movff	?___flmul,powf@s2
  5240   006934  C020  F191         	movff	?___flmul+1,powf@s2+1
  5241   006938  C021  F192         	movff	?___flmul+2,powf@s2+2
  5242   00693C  C022  F193         	movff	?___flmul+3,powf@s2+3
  5243   006940  0E55               	movlw	85
  5244   006942  6E13               	movwf	___fladd@a^0,c
  5245   006944  0E32               	movlw	50
  5246   006946  6E14               	movwf	(___fladd@a+1)^0,c
  5247   006948  0E6C               	movlw	108
  5248   00694A  6E15               	movwf	(___fladd@a+2)^0,c
  5249   00694C  0E3E               	movlw	62
  5250   00694E  6E16               	movwf	(___fladd@a+3)^0,c
  5251   006950  0E42               	movlw	66
  5252   006952  6E23               	movwf	___flmul@a^0,c
  5253   006954  0EF1               	movlw	241
  5254   006956  6E24               	movwf	(___flmul@a+1)^0,c
  5255   006958  0E53               	movlw	83
  5256   00695A  6E25               	movwf	(___flmul@a+2)^0,c
  5257   00695C  0E3E               	movlw	62
  5258   00695E  6E26               	movwf	(___flmul@a+3)^0,c
  5259   006960  C190  F01F         	movff	powf@s2,___flmul@b
  5260   006964  C191  F020         	movff	powf@s2+1,___flmul@b+1
  5261   006968  C192  F021         	movff	powf@s2+2,___flmul@b+2
  5262   00696C  C193  F022         	movff	powf@s2+3,___flmul@b+3
  5263   006970  ECBC  F020         	call	___flmul	;wreg free
  5264   006974  C01F  F00F         	movff	?___flmul,___fladd@b
  5265   006978  C020  F010         	movff	?___flmul+1,___fladd@b+1
  5266   00697C  C021  F011         	movff	?___flmul+2,___fladd@b+2
  5267   006980  C022  F012         	movff	?___flmul+3,___fladd@b+3
  5268   006984  ECCF  F022         	call	___fladd	;wreg free
  5269   006988  C00F  F148         	movff	?___fladd,_powf$1489
  5270   00698C  C010  F149         	movff	?___fladd+1,_powf$1489+1
  5271   006990  C011  F14A         	movff	?___fladd+2,_powf$1489+2
  5272   006994  C012  F14B         	movff	?___fladd+3,_powf$1489+3
  5273   006998  0E05               	movlw	5
  5274   00699A  6E13               	movwf	___fladd@a^0,c
  5275   00699C  0EA3               	movlw	163
  5276   00699E  6E14               	movwf	(___fladd@a+1)^0,c
  5277   0069A0  0E8B               	movlw	139
  5278   0069A2  6E15               	movwf	(___fladd@a+2)^0,c
  5279   0069A4  0E3E               	movlw	62
  5280   0069A6  6E16               	movwf	(___fladd@a+3)^0,c
  5281   0069A8  C190  F023         	movff	powf@s2,___flmul@a
  5282   0069AC  C191  F024         	movff	powf@s2+1,___flmul@a+1
  5283   0069B0  C192  F025         	movff	powf@s2+2,___flmul@a+2
  5284   0069B4  C193  F026         	movff	powf@s2+3,___flmul@a+3
  5285   0069B8  C148  F01F         	movff	_powf$1489,___flmul@b
  5286   0069BC  C149  F020         	movff	_powf$1489+1,___flmul@b+1
  5287   0069C0  C14A  F021         	movff	_powf$1489+2,___flmul@b+2
  5288   0069C4  C14B  F022         	movff	_powf$1489+3,___flmul@b+3
  5289   0069C8  ECBC  F020         	call	___flmul	;wreg free
  5290   0069CC  C01F  F00F         	movff	?___flmul,___fladd@b
  5291   0069D0  C020  F010         	movff	?___flmul+1,___fladd@b+1
  5292   0069D4  C021  F011         	movff	?___flmul+2,___fladd@b+2
  5293   0069D8  C022  F012         	movff	?___flmul+3,___fladd@b+3
  5294   0069DC  ECCF  F022         	call	___fladd	;wreg free
  5295   0069E0  C00F  F158         	movff	?___fladd,_powf$1490
  5296   0069E4  C010  F159         	movff	?___fladd+1,_powf$1490+1
  5297   0069E8  C011  F15A         	movff	?___fladd+2,_powf$1490+2
  5298   0069EC  C012  F15B         	movff	?___fladd+3,_powf$1490+3
  5299   0069F0  0EAB               	movlw	171
  5300   0069F2  6E13               	movwf	___fladd@a^0,c
  5301   0069F4  0EAA               	movlw	170
  5302   0069F6  6E14               	movwf	(___fladd@a+1)^0,c
  5303   0069F8  0EAA               	movlw	170
  5304   0069FA  6E15               	movwf	(___fladd@a+2)^0,c
  5305   0069FC  0E3E               	movlw	62
  5306   0069FE  6E16               	movwf	(___fladd@a+3)^0,c
  5307   006A00  C190  F023         	movff	powf@s2,___flmul@a
  5308   006A04  C191  F024         	movff	powf@s2+1,___flmul@a+1
  5309   006A08  C192  F025         	movff	powf@s2+2,___flmul@a+2
  5310   006A0C  C193  F026         	movff	powf@s2+3,___flmul@a+3
  5311   006A10  C158  F01F         	movff	_powf$1490,___flmul@b
  5312   006A14  C159  F020         	movff	_powf$1490+1,___flmul@b+1
  5313   006A18  C15A  F021         	movff	_powf$1490+2,___flmul@b+2
  5314   006A1C  C15B  F022         	movff	_powf$1490+3,___flmul@b+3
  5315   006A20  ECBC  F020         	call	___flmul	;wreg free
  5316   006A24  C01F  F00F         	movff	?___flmul,___fladd@b
  5317   006A28  C020  F010         	movff	?___flmul+1,___fladd@b+1
  5318   006A2C  C021  F011         	movff	?___flmul+2,___fladd@b+2
  5319   006A30  C022  F012         	movff	?___flmul+3,___fladd@b+3
  5320   006A34  ECCF  F022         	call	___fladd	;wreg free
  5321   006A38  C00F  F14C         	movff	?___fladd,_powf$1491
  5322   006A3C  C010  F14D         	movff	?___fladd+1,_powf$1491+1
  5323   006A40  C011  F14E         	movff	?___fladd+2,_powf$1491+2
  5324   006A44  C012  F14F         	movff	?___fladd+3,_powf$1491+3
  5325   006A48  0EB7               	movlw	183
  5326   006A4A  6E13               	movwf	___fladd@a^0,c
  5327   006A4C  0E6D               	movlw	109
  5328   006A4E  6E14               	movwf	(___fladd@a+1)^0,c
  5329   006A50  0EDB               	movlw	219
  5330   006A52  6E15               	movwf	(___fladd@a+2)^0,c
  5331   006A54  0E3E               	movlw	62
  5332   006A56  6E16               	movwf	(___fladd@a+3)^0,c
  5333   006A58  C190  F023         	movff	powf@s2,___flmul@a
  5334   006A5C  C191  F024         	movff	powf@s2+1,___flmul@a+1
  5335   006A60  C192  F025         	movff	powf@s2+2,___flmul@a+2
  5336   006A64  C193  F026         	movff	powf@s2+3,___flmul@a+3
  5337   006A68  C14C  F01F         	movff	_powf$1491,___flmul@b
  5338   006A6C  C14D  F020         	movff	_powf$1491+1,___flmul@b+1
  5339   006A70  C14E  F021         	movff	_powf$1491+2,___flmul@b+2
  5340   006A74  C14F  F022         	movff	_powf$1491+3,___flmul@b+3
  5341   006A78  ECBC  F020         	call	___flmul	;wreg free
  5342   006A7C  C01F  F00F         	movff	?___flmul,___fladd@b
  5343   006A80  C020  F010         	movff	?___flmul+1,___fladd@b+1
  5344   006A84  C021  F011         	movff	?___flmul+2,___fladd@b+2
  5345   006A88  C022  F012         	movff	?___flmul+3,___fladd@b+3
  5346   006A8C  ECCF  F022         	call	___fladd	;wreg free
  5347   006A90  C00F  F138         	movff	?___fladd,_powf$1493
  5348   006A94  C010  F139         	movff	?___fladd+1,_powf$1493+1
  5349   006A98  C011  F13A         	movff	?___fladd+2,_powf$1493+2
  5350   006A9C  C012  F13B         	movff	?___fladd+3,_powf$1493+3
  5351   006AA0  0E9A               	movlw	154
  5352   006AA2  6E13               	movwf	___fladd@a^0,c
  5353   006AA4  0E99               	movlw	153
  5354   006AA6  6E14               	movwf	(___fladd@a+1)^0,c
  5355   006AA8  0E19               	movlw	25
  5356   006AAA  6E15               	movwf	(___fladd@a+2)^0,c
  5357   006AAC  0E3F               	movlw	63
  5358   006AAE  6E16               	movwf	(___fladd@a+3)^0,c
  5359   006AB0  C190  F023         	movff	powf@s2,___flmul@a
  5360   006AB4  C191  F024         	movff	powf@s2+1,___flmul@a+1
  5361   006AB8  C192  F025         	movff	powf@s2+2,___flmul@a+2
  5362   006ABC  C193  F026         	movff	powf@s2+3,___flmul@a+3
  5363   006AC0  C138  F01F         	movff	_powf$1493,___flmul@b
  5364   006AC4  C139  F020         	movff	_powf$1493+1,___flmul@b+1
  5365   006AC8  C13A  F021         	movff	_powf$1493+2,___flmul@b+2
  5366   006ACC  C13B  F022         	movff	_powf$1493+3,___flmul@b+3
  5367   006AD0  ECBC  F020         	call	___flmul	;wreg free
  5368   006AD4  C01F  F00F         	movff	?___flmul,___fladd@b
  5369   006AD8  C020  F010         	movff	?___flmul+1,___fladd@b+1
  5370   006ADC  C021  F011         	movff	?___flmul+2,___fladd@b+2
  5371   006AE0  C022  F012         	movff	?___flmul+3,___fladd@b+3
  5372   006AE4  ECCF  F022         	call	___fladd	;wreg free
  5373   006AE8  C00F  F100         	movff	?___fladd,_powf$1494
  5374   006AEC  C010  F101         	movff	?___fladd+1,_powf$1494+1
  5375   006AF0  C011  F102         	movff	?___fladd+2,_powf$1494+2
  5376   006AF4  C012  F103         	movff	?___fladd+3,_powf$1494+3
  5377   006AF8  C190  F023         	movff	powf@s2,___flmul@a
  5378   006AFC  C191  F024         	movff	powf@s2+1,___flmul@a+1
  5379   006B00  C192  F025         	movff	powf@s2+2,___flmul@a+2
  5380   006B04  C193  F026         	movff	powf@s2+3,___flmul@a+3
  5381   006B08  C190  F01F         	movff	powf@s2,___flmul@b
  5382   006B0C  C191  F020         	movff	powf@s2+1,___flmul@b+1
  5383   006B10  C192  F021         	movff	powf@s2+2,___flmul@b+2
  5384   006B14  C193  F022         	movff	powf@s2+3,___flmul@b+3
  5385   006B18  ECBC  F020         	call	___flmul	;wreg free
  5386   006B1C  C01F  F104         	movff	?___flmul,_powf$1495
  5387   006B20  C020  F105         	movff	?___flmul+1,_powf$1495+1
  5388   006B24  C021  F106         	movff	?___flmul+2,_powf$1495+2
  5389   006B28  C022  F107         	movff	?___flmul+3,_powf$1495+3
  5390   006B2C  C100  F01F         	movff	_powf$1494,___flmul@b
  5391   006B30  C101  F020         	movff	_powf$1494+1,___flmul@b+1
  5392   006B34  C102  F021         	movff	_powf$1494+2,___flmul@b+2
  5393   006B38  C103  F022         	movff	_powf$1494+3,___flmul@b+3
  5394   006B3C  C104  F023         	movff	_powf$1495,___flmul@a
  5395   006B40  C105  F024         	movff	_powf$1495+1,___flmul@a+1
  5396   006B44  C106  F025         	movff	_powf$1495+2,___flmul@a+2
  5397   006B48  C107  F026         	movff	_powf$1495+3,___flmul@a+3
  5398   006B4C  ECBC  F020         	call	___flmul	;wreg free
  5399   006B50  C01F  F150         	movff	?___flmul,powf@r
  5400   006B54  C020  F151         	movff	?___flmul+1,powf@r+1
  5401   006B58  C021  F152         	movff	?___flmul+2,powf@r+2
  5402   006B5C  C022  F153         	movff	?___flmul+3,powf@r+3
  5403   006B60  C130  F023         	movff	powf@s_l,___flmul@a
  5404   006B64  C131  F024         	movff	powf@s_l+1,___flmul@a+1
  5405   006B68  C132  F025         	movff	powf@s_l+2,___flmul@a+2
  5406   006B6C  C133  F026         	movff	powf@s_l+3,___flmul@a+3
  5407   006B70  C160  F013         	movff	powf@s,___fladd@a
  5408   006B74  C161  F014         	movff	powf@s+1,___fladd@a+1
  5409   006B78  C162  F015         	movff	powf@s+2,___fladd@a+2
  5410   006B7C  C163  F016         	movff	powf@s+3,___fladd@a+3
  5411   006B80  C174  F00F         	movff	powf@s_h,___fladd@b
  5412   006B84  C175  F010         	movff	powf@s_h+1,___fladd@b+1
  5413   006B88  C176  F011         	movff	powf@s_h+2,___fladd@b+2
  5414   006B8C  C177  F012         	movff	powf@s_h+3,___fladd@b+3
  5415   006B90  ECCF  F022         	call	___fladd	;wreg free
  5416   006B94  C00F  F01F         	movff	?___fladd,___flmul@b
  5417   006B98  C010  F020         	movff	?___fladd+1,___flmul@b+1
  5418   006B9C  C011  F021         	movff	?___fladd+2,___flmul@b+2
  5419   006BA0  C012  F022         	movff	?___fladd+3,___flmul@b+3
  5420   006BA4  ECBC  F020         	call	___flmul	;wreg free
  5421   006BA8  C01F  F15C         	movff	?___flmul,_powf$1496
  5422   006BAC  C020  F15D         	movff	?___flmul+1,_powf$1496+1
  5423   006BB0  C021  F15E         	movff	?___flmul+2,_powf$1496+2
  5424   006BB4  C022  F15F         	movff	?___flmul+3,_powf$1496+3
  5425   006BB8  C150  F00F         	movff	powf@r,___fladd@b
  5426   006BBC  C151  F010         	movff	powf@r+1,___fladd@b+1
  5427   006BC0  C152  F011         	movff	powf@r+2,___fladd@b+2
  5428   006BC4  C153  F012         	movff	powf@r+3,___fladd@b+3
  5429   006BC8  C15C  F013         	movff	_powf$1496,___fladd@a
  5430   006BCC  C15D  F014         	movff	_powf$1496+1,___fladd@a+1
  5431   006BD0  C15E  F015         	movff	_powf$1496+2,___fladd@a+2
  5432   006BD4  C15F  F016         	movff	_powf$1496+3,___fladd@a+3
  5433   006BD8  ECCF  F022         	call	___fladd	;wreg free
  5434   006BDC  C00F  F150         	movff	?___fladd,powf@r
  5435   006BE0  C010  F151         	movff	?___fladd+1,powf@r+1
  5436   006BE4  C011  F152         	movff	?___fladd+2,powf@r+2
  5437   006BE8  C012  F153         	movff	?___fladd+3,powf@r+3
  5438   006BEC  C174  F01F         	movff	powf@s_h,___flmul@b
  5439   006BF0  C175  F020         	movff	powf@s_h+1,___flmul@b+1
  5440   006BF4  C176  F021         	movff	powf@s_h+2,___flmul@b+2
  5441   006BF8  C177  F022         	movff	powf@s_h+3,___flmul@b+3
  5442   006BFC  C174  F023         	movff	powf@s_h,___flmul@a
  5443   006C00  C175  F024         	movff	powf@s_h+1,___flmul@a+1
  5444   006C04  C176  F025         	movff	powf@s_h+2,___flmul@a+2
  5445   006C08  C177  F026         	movff	powf@s_h+3,___flmul@a+3
  5446   006C0C  ECBC  F020         	call	___flmul	;wreg free
  5447   006C10  C01F  F190         	movff	?___flmul,powf@s2
  5448   006C14  C020  F191         	movff	?___flmul+1,powf@s2+1
  5449   006C18  C021  F192         	movff	?___flmul+2,powf@s2+2
  5450   006C1C  C022  F193         	movff	?___flmul+3,powf@s2+3
  5451   006C20  0E00               	movlw	0
  5452   006C22  6E13               	movwf	___fladd@a^0,c
  5453   006C24  0E00               	movlw	0
  5454   006C26  6E14               	movwf	(___fladd@a+1)^0,c
  5455   006C28  0E40               	movlw	64
  5456   006C2A  6E15               	movwf	(___fladd@a+2)^0,c
  5457   006C2C  0E40               	movlw	64
  5458   006C2E  6E16               	movwf	(___fladd@a+3)^0,c
  5459   006C30  C190  F00F         	movff	powf@s2,___fladd@b
  5460   006C34  C191  F010         	movff	powf@s2+1,___fladd@b+1
  5461   006C38  C192  F011         	movff	powf@s2+2,___fladd@b+2
  5462   006C3C  C193  F012         	movff	powf@s2+3,___fladd@b+3
  5463   006C40  ECCF  F022         	call	___fladd	;wreg free
  5464   006C44  C00F  F15C         	movff	?___fladd,_powf$1496
  5465   006C48  C010  F15D         	movff	?___fladd+1,_powf$1496+1
  5466   006C4C  C011  F15E         	movff	?___fladd+2,_powf$1496+2
  5467   006C50  C012  F15F         	movff	?___fladd+3,_powf$1496+3
  5468   006C54  C15C  F00F         	movff	_powf$1496,___fladd@b
  5469   006C58  C15D  F010         	movff	_powf$1496+1,___fladd@b+1
  5470   006C5C  C15E  F011         	movff	_powf$1496+2,___fladd@b+2
  5471   006C60  C15F  F012         	movff	_powf$1496+3,___fladd@b+3
  5472   006C64  C150  F013         	movff	powf@r,___fladd@a
  5473   006C68  C151  F014         	movff	powf@r+1,___fladd@a+1
  5474   006C6C  C152  F015         	movff	powf@r+2,___fladd@a+2
  5475   006C70  C153  F016         	movff	powf@r+3,___fladd@a+3
  5476   006C74  ECCF  F022         	call	___fladd	;wreg free
  5477   006C78  C00F  F170         	movff	?___fladd,powf@t_h
  5478   006C7C  C010  F171         	movff	?___fladd+1,powf@t_h+1
  5479   006C80  C011  F172         	movff	?___fladd+2,powf@t_h+2
  5480   006C84  C012  F173         	movff	?___fladd+3,powf@t_h+3
  5481   006C88  C170  F198         	movff	powf@t_h,powf@is
  5482   006C8C  C171  F199         	movff	powf@t_h+1,powf@is+1
  5483   006C90  C172  F19A         	movff	powf@t_h+2,powf@is+2
  5484   006C94  C173  F19B         	movff	powf@t_h+3,powf@is+3
  5485   006C98  0E00               	movlw	0
  5486   006C9A  0101               	movlb	1	; () banked
  5487   006C9C  1598               	andwf	powf@is& (0+255),w,b
  5488   006C9E  6F70               	movwf	powf@t_h& (0+255),b
  5489   006CA0  0EF0               	movlw	240
  5490   006CA2  1599               	andwf	(powf@is+1)& (0+255),w,b
  5491   006CA4  6F71               	movwf	(powf@t_h+1)& (0+255),b
  5492   006CA6  0EFF               	movlw	255
  5493   006CA8  159A               	andwf	(powf@is+2)& (0+255),w,b
  5494   006CAA  6F72               	movwf	(powf@t_h+2)& (0+255),b
  5495   006CAC  0EFF               	movlw	255
  5496   006CAE  159B               	andwf	(powf@is+3)& (0+255),w,b
  5497   006CB0  6F73               	movwf	(powf@t_h+3)& (0+255),b
  5498   006CB2                     
  5499                           ; BSR set to: 1
  5500   006CB2  0E00               	movlw	0
  5501   006CB4  6E13               	movwf	___fladd@a^0,c
  5502   006CB6  0E00               	movlw	0
  5503   006CB8  6E14               	movwf	(___fladd@a+1)^0,c
  5504   006CBA  0E40               	movlw	64
  5505   006CBC  6E15               	movwf	(___fladd@a+2)^0,c
  5506   006CBE  0EC0               	movlw	192
  5507   006CC0  6E16               	movwf	(___fladd@a+3)^0,c
  5508   006CC2  C170  F00F         	movff	powf@t_h,___fladd@b
  5509   006CC6  C171  F010         	movff	powf@t_h+1,___fladd@b+1
  5510   006CCA  C172  F011         	movff	powf@t_h+2,___fladd@b+2
  5511   006CCE  C173  F012         	movff	powf@t_h+3,___fladd@b+3
  5512   006CD2  ECCF  F022         	call	___fladd	;wreg free
  5513   006CD6  C00F  F13C         	movff	?___fladd,_powf$1497
  5514   006CDA  C010  F13D         	movff	?___fladd+1,_powf$1497+1
  5515   006CDE  C011  F13E         	movff	?___fladd+2,_powf$1497+2
  5516   006CE2  C012  F13F         	movff	?___fladd+3,_powf$1497+3
  5517   006CE6  C190  F03C         	movff	powf@s2,___flsub@a
  5518   006CEA  C191  F03D         	movff	powf@s2+1,___flsub@a+1
  5519   006CEE  C192  F03E         	movff	powf@s2+2,___flsub@a+2
  5520   006CF2  C193  F03F         	movff	powf@s2+3,___flsub@a+3
  5521   006CF6  C13C  F038         	movff	_powf$1497,___flsub@b
  5522   006CFA  C13D  F039         	movff	_powf$1497+1,___flsub@b+1
  5523   006CFE  C13E  F03A         	movff	_powf$1497+2,___flsub@b+2
  5524   006D02  C13F  F03B         	movff	_powf$1497+3,___flsub@b+3
  5525   006D06  EC46  F00E         	call	___flsub	;wreg free
  5526   006D0A  C038  F140         	movff	?___flsub,_powf$1498
  5527   006D0E  C039  F141         	movff	?___flsub+1,_powf$1498+1
  5528   006D12  C03A  F142         	movff	?___flsub+2,_powf$1498+2
  5529   006D16  C03B  F143         	movff	?___flsub+3,_powf$1498+3
  5530   006D1A  C150  F038         	movff	powf@r,___flsub@b
  5531   006D1E  C151  F039         	movff	powf@r+1,___flsub@b+1
  5532   006D22  C152  F03A         	movff	powf@r+2,___flsub@b+2
  5533   006D26  C153  F03B         	movff	powf@r+3,___flsub@b+3
  5534   006D2A  C140  F03C         	movff	_powf$1498,___flsub@a
  5535   006D2E  C141  F03D         	movff	_powf$1498+1,___flsub@a+1
  5536   006D32  C142  F03E         	movff	_powf$1498+2,___flsub@a+2
  5537   006D36  C143  F03F         	movff	_powf$1498+3,___flsub@a+3
  5538   006D3A  EC46  F00E         	call	___flsub	;wreg free
  5539   006D3E  C038  F134         	movff	?___flsub,powf@t_l
  5540   006D42  C039  F135         	movff	?___flsub+1,powf@t_l+1
  5541   006D46  C03A  F136         	movff	?___flsub+2,powf@t_l+2
  5542   006D4A  C03B  F137         	movff	?___flsub+3,powf@t_l+3
  5543   006D4E  C174  F01F         	movff	powf@s_h,___flmul@b
  5544   006D52  C175  F020         	movff	powf@s_h+1,___flmul@b+1
  5545   006D56  C176  F021         	movff	powf@s_h+2,___flmul@b+2
  5546   006D5A  C177  F022         	movff	powf@s_h+3,___flmul@b+3
  5547   006D5E  C170  F023         	movff	powf@t_h,___flmul@a
  5548   006D62  C171  F024         	movff	powf@t_h+1,___flmul@a+1
  5549   006D66  C172  F025         	movff	powf@t_h+2,___flmul@a+2
  5550   006D6A  C173  F026         	movff	powf@t_h+3,___flmul@a+3
  5551   006D6E  ECBC  F020         	call	___flmul	;wreg free
  5552   006D72  C01F  F17C         	movff	?___flmul,powf@u
  5553   006D76  C020  F17D         	movff	?___flmul+1,powf@u+1
  5554   006D7A  C021  F17E         	movff	?___flmul+2,powf@u+2
  5555   006D7E  C022  F17F         	movff	?___flmul+3,powf@u+3
  5556   006D82  C130  F023         	movff	powf@s_l,___flmul@a
  5557   006D86  C131  F024         	movff	powf@s_l+1,___flmul@a+1
  5558   006D8A  C132  F025         	movff	powf@s_l+2,___flmul@a+2
  5559   006D8E  C133  F026         	movff	powf@s_l+3,___flmul@a+3
  5560   006D92  C170  F01F         	movff	powf@t_h,___flmul@b
  5561   006D96  C171  F020         	movff	powf@t_h+1,___flmul@b+1
  5562   006D9A  C172  F021         	movff	powf@t_h+2,___flmul@b+2
  5563   006D9E  C173  F022         	movff	powf@t_h+3,___flmul@b+3
  5564   006DA2  ECBC  F020         	call	___flmul	;wreg free
  5565   006DA6  C01F  F00F         	movff	?___flmul,___fladd@b
  5566   006DAA  C020  F010         	movff	?___flmul+1,___fladd@b+1
  5567   006DAE  C021  F011         	movff	?___flmul+2,___fladd@b+2
  5568   006DB2  C022  F012         	movff	?___flmul+3,___fladd@b+3
  5569   006DB6  C160  F023         	movff	powf@s,___flmul@a
  5570   006DBA  C161  F024         	movff	powf@s+1,___flmul@a+1
  5571   006DBE  C162  F025         	movff	powf@s+2,___flmul@a+2
  5572   006DC2  C163  F026         	movff	powf@s+3,___flmul@a+3
  5573   006DC6  C134  F01F         	movff	powf@t_l,___flmul@b
  5574   006DCA  C135  F020         	movff	powf@t_l+1,___flmul@b+1
  5575   006DCE  C136  F021         	movff	powf@t_l+2,___flmul@b+2
  5576   006DD2  C137  F022         	movff	powf@t_l+3,___flmul@b+3
  5577   006DD6  ECBC  F020         	call	___flmul	;wreg free
  5578   006DDA  C01F  F013         	movff	?___flmul,___fladd@a
  5579   006DDE  C020  F014         	movff	?___flmul+1,___fladd@a+1
  5580   006DE2  C021  F015         	movff	?___flmul+2,___fladd@a+2
  5581   006DE6  C022  F016         	movff	?___flmul+3,___fladd@a+3
  5582   006DEA  ECCF  F022         	call	___fladd	;wreg free
  5583   006DEE  C00F  F180         	movff	?___fladd,powf@v
  5584   006DF2  C010  F181         	movff	?___fladd+1,powf@v+1
  5585   006DF6  C011  F182         	movff	?___fladd+2,powf@v+2
  5586   006DFA  C012  F183         	movff	?___fladd+3,powf@v+3
  5587   006DFE  C17C  F00F         	movff	powf@u,___fladd@b
  5588   006E02  C17D  F010         	movff	powf@u+1,___fladd@b+1
  5589   006E06  C17E  F011         	movff	powf@u+2,___fladd@b+2
  5590   006E0A  C17F  F012         	movff	powf@u+3,___fladd@b+3
  5591   006E0E  C180  F013         	movff	powf@v,___fladd@a
  5592   006E12  C181  F014         	movff	powf@v+1,___fladd@a+1
  5593   006E16  C182  F015         	movff	powf@v+2,___fladd@a+2
  5594   006E1A  C183  F016         	movff	powf@v+3,___fladd@a+3
  5595   006E1E  ECCF  F022         	call	___fladd	;wreg free
  5596   006E22  C00F  F1A0         	movff	?___fladd,powf@p_h
  5597   006E26  C010  F1A1         	movff	?___fladd+1,powf@p_h+1
  5598   006E2A  C011  F1A2         	movff	?___fladd+2,powf@p_h+2
  5599   006E2E  C012  F1A3         	movff	?___fladd+3,powf@p_h+3
  5600   006E32  C1A0  F198         	movff	powf@p_h,powf@is
  5601   006E36  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  5602   006E3A  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  5603   006E3E  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  5604   006E42  0E00               	movlw	0
  5605   006E44  0101               	movlb	1	; () banked
  5606   006E46  1598               	andwf	powf@is& (0+255),w,b
  5607   006E48  6FA0               	movwf	powf@p_h& (0+255),b
  5608   006E4A  0EF0               	movlw	240
  5609   006E4C  1599               	andwf	(powf@is+1)& (0+255),w,b
  5610   006E4E  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  5611   006E50  0EFF               	movlw	255
  5612   006E52  159A               	andwf	(powf@is+2)& (0+255),w,b
  5613   006E54  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  5614   006E56  0EFF               	movlw	255
  5615   006E58  159B               	andwf	(powf@is+3)& (0+255),w,b
  5616   006E5A  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  5617   006E5C                     
  5618                           ; BSR set to: 1
  5619   006E5C  C17C  F03C         	movff	powf@u,___flsub@a
  5620   006E60  C17D  F03D         	movff	powf@u+1,___flsub@a+1
  5621   006E64  C17E  F03E         	movff	powf@u+2,___flsub@a+2
  5622   006E68  C17F  F03F         	movff	powf@u+3,___flsub@a+3
  5623   006E6C  C1A0  F038         	movff	powf@p_h,___flsub@b
  5624   006E70  C1A1  F039         	movff	powf@p_h+1,___flsub@b+1
  5625   006E74  C1A2  F03A         	movff	powf@p_h+2,___flsub@b+2
  5626   006E78  C1A3  F03B         	movff	powf@p_h+3,___flsub@b+3
  5627   006E7C  EC46  F00E         	call	___flsub	;wreg free
  5628   006E80  C038  F19C         	movff	?___flsub,_powf$1492
  5629   006E84  C039  F19D         	movff	?___flsub+1,_powf$1492+1
  5630   006E88  C03A  F19E         	movff	?___flsub+2,_powf$1492+2
  5631   006E8C  C03B  F19F         	movff	?___flsub+3,_powf$1492+3
  5632   006E90  C180  F038         	movff	powf@v,___flsub@b
  5633   006E94  C181  F039         	movff	powf@v+1,___flsub@b+1
  5634   006E98  C182  F03A         	movff	powf@v+2,___flsub@b+2
  5635   006E9C  C183  F03B         	movff	powf@v+3,___flsub@b+3
  5636   006EA0  C19C  F03C         	movff	_powf$1492,___flsub@a
  5637   006EA4  C19D  F03D         	movff	_powf$1492+1,___flsub@a+1
  5638   006EA8  C19E  F03E         	movff	_powf$1492+2,___flsub@a+2
  5639   006EAC  C19F  F03F         	movff	_powf$1492+3,___flsub@a+3
  5640   006EB0  EC46  F00E         	call	___flsub	;wreg free
  5641   006EB4  C038  F16C         	movff	?___flsub,powf@p_l
  5642   006EB8  C039  F16D         	movff	?___flsub+1,powf@p_l+1
  5643   006EBC  C03A  F16E         	movff	?___flsub+2,powf@p_l+2
  5644   006EC0  C03B  F16F         	movff	?___flsub+3,powf@p_l+3
  5645   006EC4  C1A0  F01F         	movff	powf@p_h,___flmul@b
  5646   006EC8  C1A1  F020         	movff	powf@p_h+1,___flmul@b+1
  5647   006ECC  C1A2  F021         	movff	powf@p_h+2,___flmul@b+2
  5648   006ED0  C1A3  F022         	movff	powf@p_h+3,___flmul@b+3
  5649   006ED4  0E00               	movlw	0
  5650   006ED6  6E23               	movwf	___flmul@a^0,c
  5651   006ED8  0E40               	movlw	64
  5652   006EDA  6E24               	movwf	(___flmul@a+1)^0,c
  5653   006EDC  0E76               	movlw	118
  5654   006EDE  6E25               	movwf	(___flmul@a+2)^0,c
  5655   006EE0  0E3F               	movlw	63
  5656   006EE2  6E26               	movwf	(___flmul@a+3)^0,c
  5657   006EE4  ECBC  F020         	call	___flmul	;wreg free
  5658   006EE8  C01F  F120         	movff	?___flmul,powf@z_h
  5659   006EEC  C020  F121         	movff	?___flmul+1,powf@z_h+1
  5660   006EF0  C021  F122         	movff	?___flmul+2,powf@z_h+2
  5661   006EF4  C022  F123         	movff	?___flmul+3,powf@z_h+3
  5662   006EF8  0E4F               	movlw	79
  5663   006EFA  6E23               	movwf	___flmul@a^0,c
  5664   006EFC  0E38               	movlw	56
  5665   006EFE  6E24               	movwf	(___flmul@a+1)^0,c
  5666   006F00  0E76               	movlw	118
  5667   006F02  6E25               	movwf	(___flmul@a+2)^0,c
  5668   006F04  0E3F               	movlw	63
  5669   006F06  6E26               	movwf	(___flmul@a+3)^0,c
  5670   006F08  C16C  F01F         	movff	powf@p_l,___flmul@b
  5671   006F0C  C16D  F020         	movff	powf@p_l+1,___flmul@b+1
  5672   006F10  C16E  F021         	movff	powf@p_l+2,___flmul@b+2
  5673   006F14  C16F  F022         	movff	powf@p_l+3,___flmul@b+3
  5674   006F18  ECBC  F020         	call	___flmul	;wreg free
  5675   006F1C  C01F  F013         	movff	?___flmul,___fladd@a
  5676   006F20  C020  F014         	movff	?___flmul+1,___fladd@a+1
  5677   006F24  C021  F015         	movff	?___flmul+2,___fladd@a+2
  5678   006F28  C022  F016         	movff	?___flmul+3,___fladd@a+3
  5679   006F2C  0EC6               	movlw	198
  5680   006F2E  6E23               	movwf	___flmul@a^0,c
  5681   006F30  0E23               	movlw	35
  5682   006F32  6E24               	movwf	(___flmul@a+1)^0,c
  5683   006F34  0EF6               	movlw	246
  5684   006F36  6E25               	movwf	(___flmul@a+2)^0,c
  5685   006F38  0EB8               	movlw	184
  5686   006F3A  6E26               	movwf	(___flmul@a+3)^0,c
  5687   006F3C  C1A0  F01F         	movff	powf@p_h,___flmul@b
  5688   006F40  C1A1  F020         	movff	powf@p_h+1,___flmul@b+1
  5689   006F44  C1A2  F021         	movff	powf@p_h+2,___flmul@b+2
  5690   006F48  C1A3  F022         	movff	powf@p_h+3,___flmul@b+3
  5691   006F4C  ECBC  F020         	call	___flmul	;wreg free
  5692   006F50  C01F  F00F         	movff	?___flmul,___fladd@b
  5693   006F54  C020  F010         	movff	?___flmul+1,___fladd@b+1
  5694   006F58  C021  F011         	movff	?___flmul+2,___fladd@b+2
  5695   006F5C  C022  F012         	movff	?___flmul+3,___fladd@b+3
  5696   006F60  ECCF  F022         	call	___fladd	;wreg free
  5697   006F64  C00F  F15C         	movff	?___fladd,_powf$1496
  5698   006F68  C010  F15D         	movff	?___fladd+1,_powf$1496+1
  5699   006F6C  C011  F15E         	movff	?___fladd+2,_powf$1496+2
  5700   006F70  C012  F15F         	movff	?___fladd+3,_powf$1496+3
  5701   006F74  C15C  F00F         	movff	_powf$1496,___fladd@b
  5702   006F78  C15D  F010         	movff	_powf$1496+1,___fladd@b+1
  5703   006F7C  C15E  F011         	movff	_powf$1496+2,___fladd@b+2
  5704   006F80  C15F  F012         	movff	_powf$1496+3,___fladd@b+3
  5705   006F84  C1A4  F068         	movff	powf@k,??_powf
  5706   006F88  C1A5  F069         	movff	powf@k+1,??_powf+1
  5707   006F8C  0100               	movlb	0	; () banked
  5708   006F8E  90D8               	bcf	status,0,c
  5709   006F90  3768               	rlcf	??_powf& (0+255),f,b
  5710   006F92  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5711   006F94  90D8               	bcf	status,0,c
  5712   006F96  3768               	rlcf	??_powf& (0+255),f,b
  5713   006F98  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5714   006F9A  0EF3               	movlw	low _dp_l
  5715   006F9C  2568               	addwf	??_powf& (0+255),w,b
  5716   006F9E  6EF6               	movwf	tblptrl,c
  5717   006FA0  0E7D               	movlw	high _dp_l
  5718   006FA2  2169               	addwfc	(??_powf+1)& (0+255),w,b
  5719   006FA4  6EF7               	movwf	tblptrh,c
  5720   006FA6                     	if	0	;There are less than 3 active tblptr bytes
  5721   006FA6                     	endif
  5722   006FA6  0009               	tblrd		*+
  5723   006FA8  CFF5 F013          	movff	tablat,___fladd@a
  5724   006FAC  0009               	tblrd		*+
  5725   006FAE  CFF5 F014          	movff	tablat,___fladd@a+1
  5726   006FB2  0009               	tblrd		*+
  5727   006FB4  CFF5 F015          	movff	tablat,___fladd@a+2
  5728   006FB8  000A               	tblrd		*-
  5729   006FBA  CFF5 F016          	movff	tablat,___fladd@a+3
  5730   006FBE  ECCF  F022         	call	___fladd	;wreg free
  5731   006FC2  C00F  F124         	movff	?___fladd,powf@z_l
  5732   006FC6  C010  F125         	movff	?___fladd+1,powf@z_l+1
  5733   006FCA  C011  F126         	movff	?___fladd+2,powf@z_l+2
  5734   006FCE  C012  F127         	movff	?___fladd+3,powf@z_l+3
  5735   006FD2  C188  F001         	movff	powf@n,___xxtofl@val
  5736   006FD6  C189  F002         	movff	powf@n+1,___xxtofl@val+1
  5737   006FDA  C18A  F003         	movff	powf@n+2,___xxtofl@val+2
  5738   006FDE  C18B  F004         	movff	powf@n+3,___xxtofl@val+3
  5739   006FE2  0E01               	movlw	1
  5740   006FE4  EC3A  F016         	call	___xxtofl
  5741   006FE8  C001  F1B0         	movff	?___xxtofl,powf@t
  5742   006FEC  C002  F1B1         	movff	?___xxtofl+1,powf@t+1
  5743   006FF0  C003  F1B2         	movff	?___xxtofl+2,powf@t+2
  5744   006FF4  C004  F1B3         	movff	?___xxtofl+3,powf@t+3
  5745   006FF8  C124  F013         	movff	powf@z_l,___fladd@a
  5746   006FFC  C125  F014         	movff	powf@z_l+1,___fladd@a+1
  5747   007000  C126  F015         	movff	powf@z_l+2,___fladd@a+2
  5748   007004  C127  F016         	movff	powf@z_l+3,___fladd@a+3
  5749   007008  C120  F00F         	movff	powf@z_h,___fladd@b
  5750   00700C  C121  F010         	movff	powf@z_h+1,___fladd@b+1
  5751   007010  C122  F011         	movff	powf@z_h+2,___fladd@b+2
  5752   007014  C123  F012         	movff	powf@z_h+3,___fladd@b+3
  5753   007018  ECCF  F022         	call	___fladd	;wreg free
  5754   00701C  C00F  F15C         	movff	?___fladd,_powf$1496
  5755   007020  C010  F15D         	movff	?___fladd+1,_powf$1496+1
  5756   007024  C011  F15E         	movff	?___fladd+2,_powf$1496+2
  5757   007028  C012  F15F         	movff	?___fladd+3,_powf$1496+3
  5758   00702C  C1A4  F068         	movff	powf@k,??_powf
  5759   007030  C1A5  F069         	movff	powf@k+1,??_powf+1
  5760   007034  0100               	movlb	0	; () banked
  5761   007036  90D8               	bcf	status,0,c
  5762   007038  3768               	rlcf	??_powf& (0+255),f,b
  5763   00703A  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5764   00703C  90D8               	bcf	status,0,c
  5765   00703E  3768               	rlcf	??_powf& (0+255),f,b
  5766   007040  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5767   007042  0EFB               	movlw	low _dp_h
  5768   007044  2568               	addwf	??_powf& (0+255),w,b
  5769   007046  6EF6               	movwf	tblptrl,c
  5770   007048  0E7D               	movlw	high _dp_h
  5771   00704A  2169               	addwfc	(??_powf+1)& (0+255),w,b
  5772   00704C  6EF7               	movwf	tblptrh,c
  5773   00704E                     	if	0	;There are less than 3 active tblptr bytes
  5774   00704E                     	endif
  5775   00704E  0009               	tblrd		*+
  5776   007050  CFF5 F013          	movff	tablat,___fladd@a
  5777   007054  0009               	tblrd		*+
  5778   007056  CFF5 F014          	movff	tablat,___fladd@a+1
  5779   00705A  0009               	tblrd		*+
  5780   00705C  CFF5 F015          	movff	tablat,___fladd@a+2
  5781   007060  000A               	tblrd		*-
  5782   007062  CFF5 F016          	movff	tablat,___fladd@a+3
  5783   007066  C15C  F00F         	movff	_powf$1496,___fladd@b
  5784   00706A  C15D  F010         	movff	_powf$1496+1,___fladd@b+1
  5785   00706E  C15E  F011         	movff	_powf$1496+2,___fladd@b+2
  5786   007072  C15F  F012         	movff	_powf$1496+3,___fladd@b+3
  5787   007076  ECCF  F022         	call	___fladd	;wreg free
  5788   00707A  C00F  F108         	movff	?___fladd,_powf$1499
  5789   00707E  C010  F109         	movff	?___fladd+1,_powf$1499+1
  5790   007082  C011  F10A         	movff	?___fladd+2,_powf$1499+2
  5791   007086  C012  F10B         	movff	?___fladd+3,_powf$1499+3
  5792   00708A  C108  F00F         	movff	_powf$1499,___fladd@b
  5793   00708E  C109  F010         	movff	_powf$1499+1,___fladd@b+1
  5794   007092  C10A  F011         	movff	_powf$1499+2,___fladd@b+2
  5795   007096  C10B  F012         	movff	_powf$1499+3,___fladd@b+3
  5796   00709A  C1B0  F013         	movff	powf@t,___fladd@a
  5797   00709E  C1B1  F014         	movff	powf@t+1,___fladd@a+1
  5798   0070A2  C1B2  F015         	movff	powf@t+2,___fladd@a+2
  5799   0070A6  C1B3  F016         	movff	powf@t+3,___fladd@a+3
  5800   0070AA  ECCF  F022         	call	___fladd	;wreg free
  5801   0070AE  C00F  F18C         	movff	?___fladd,powf@t1
  5802   0070B2  C010  F18D         	movff	?___fladd+1,powf@t1+1
  5803   0070B6  C011  F18E         	movff	?___fladd+2,powf@t1+2
  5804   0070BA  C012  F18F         	movff	?___fladd+3,powf@t1+3
  5805   0070BE  C18C  F198         	movff	powf@t1,powf@is
  5806   0070C2  C18D  F199         	movff	powf@t1+1,powf@is+1
  5807   0070C6  C18E  F19A         	movff	powf@t1+2,powf@is+2
  5808   0070CA  C18F  F19B         	movff	powf@t1+3,powf@is+3
  5809   0070CE  0E00               	movlw	0
  5810   0070D0  0101               	movlb	1	; () banked
  5811   0070D2  1598               	andwf	powf@is& (0+255),w,b
  5812   0070D4  6F8C               	movwf	powf@t1& (0+255),b
  5813   0070D6  0EF0               	movlw	240
  5814   0070D8  1599               	andwf	(powf@is+1)& (0+255),w,b
  5815   0070DA  6F8D               	movwf	(powf@t1+1)& (0+255),b
  5816   0070DC  0EFF               	movlw	255
  5817   0070DE  159A               	andwf	(powf@is+2)& (0+255),w,b
  5818   0070E0  6F8E               	movwf	(powf@t1+2)& (0+255),b
  5819   0070E2  0EFF               	movlw	255
  5820   0070E4  159B               	andwf	(powf@is+3)& (0+255),w,b
  5821   0070E6  6F8F               	movwf	(powf@t1+3)& (0+255),b
  5822   0070E8                     
  5823                           ; BSR set to: 1
  5824   0070E8  C1B0  F03C         	movff	powf@t,___flsub@a
  5825   0070EC  C1B1  F03D         	movff	powf@t+1,___flsub@a+1
  5826   0070F0  C1B2  F03E         	movff	powf@t+2,___flsub@a+2
  5827   0070F4  C1B3  F03F         	movff	powf@t+3,___flsub@a+3
  5828   0070F8  C18C  F038         	movff	powf@t1,___flsub@b
  5829   0070FC  C18D  F039         	movff	powf@t1+1,___flsub@b+1
  5830   007100  C18E  F03A         	movff	powf@t1+2,___flsub@b+2
  5831   007104  C18F  F03B         	movff	powf@t1+3,___flsub@b+3
  5832   007108  EC46  F00E         	call	___flsub	;wreg free
  5833   00710C  C038  F19C         	movff	?___flsub,_powf$1492
  5834   007110  C039  F19D         	movff	?___flsub+1,_powf$1492+1
  5835   007114  C03A  F19E         	movff	?___flsub+2,_powf$1492+2
  5836   007118  C03B  F19F         	movff	?___flsub+3,_powf$1492+3
  5837   00711C  C1A4  F068         	movff	powf@k,??_powf
  5838   007120  C1A5  F069         	movff	powf@k+1,??_powf+1
  5839   007124  0100               	movlb	0	; () banked
  5840   007126  90D8               	bcf	status,0,c
  5841   007128  3768               	rlcf	??_powf& (0+255),f,b
  5842   00712A  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5843   00712C  90D8               	bcf	status,0,c
  5844   00712E  3768               	rlcf	??_powf& (0+255),f,b
  5845   007130  3769               	rlcf	(??_powf+1)& (0+255),f,b
  5846   007132  0EFB               	movlw	low _dp_h
  5847   007134  2568               	addwf	??_powf& (0+255),w,b
  5848   007136  6EF6               	movwf	tblptrl,c
  5849   007138  0E7D               	movlw	high _dp_h
  5850   00713A  2169               	addwfc	(??_powf+1)& (0+255),w,b
  5851   00713C  6EF7               	movwf	tblptrh,c
  5852   00713E                     	if	0	;There are less than 3 active tblptr bytes
  5853   00713E                     	endif
  5854   00713E  0009               	tblrd		*+
  5855   007140  CFF5 F03C          	movff	tablat,___flsub@a
  5856   007144  0009               	tblrd		*+
  5857   007146  CFF5 F03D          	movff	tablat,___flsub@a+1
  5858   00714A  0009               	tblrd		*+
  5859   00714C  CFF5 F03E          	movff	tablat,___flsub@a+2
  5860   007150  000A               	tblrd		*-
  5861   007152  CFF5 F03F          	movff	tablat,___flsub@a+3
  5862   007156  C19C  F038         	movff	_powf$1492,___flsub@b
  5863   00715A  C19D  F039         	movff	_powf$1492+1,___flsub@b+1
  5864   00715E  C19E  F03A         	movff	_powf$1492+2,___flsub@b+2
  5865   007162  C19F  F03B         	movff	_powf$1492+3,___flsub@b+3
  5866   007166  EC46  F00E         	call	___flsub	;wreg free
  5867   00716A  C038  F140         	movff	?___flsub,_powf$1498
  5868   00716E  C039  F141         	movff	?___flsub+1,_powf$1498+1
  5869   007172  C03A  F142         	movff	?___flsub+2,_powf$1498+2
  5870   007176  C03B  F143         	movff	?___flsub+3,_powf$1498+3
  5871   00717A  C120  F03C         	movff	powf@z_h,___flsub@a
  5872   00717E  C121  F03D         	movff	powf@z_h+1,___flsub@a+1
  5873   007182  C122  F03E         	movff	powf@z_h+2,___flsub@a+2
  5874   007186  C123  F03F         	movff	powf@z_h+3,___flsub@a+3
  5875   00718A  C140  F038         	movff	_powf$1498,___flsub@b
  5876   00718E  C141  F039         	movff	_powf$1498+1,___flsub@b+1
  5877   007192  C142  F03A         	movff	_powf$1498+2,___flsub@b+2
  5878   007196  C143  F03B         	movff	_powf$1498+3,___flsub@b+3
  5879   00719A  EC46  F00E         	call	___flsub	;wreg free
  5880   00719E  C038  F10C         	movff	?___flsub,_powf$1500
  5881   0071A2  C039  F10D         	movff	?___flsub+1,_powf$1500+1
  5882   0071A6  C03A  F10E         	movff	?___flsub+2,_powf$1500+2
  5883   0071AA  C03B  F10F         	movff	?___flsub+3,_powf$1500+3
  5884   0071AE  C124  F038         	movff	powf@z_l,___flsub@b
  5885   0071B2  C125  F039         	movff	powf@z_l+1,___flsub@b+1
  5886   0071B6  C126  F03A         	movff	powf@z_l+2,___flsub@b+2
  5887   0071BA  C127  F03B         	movff	powf@z_l+3,___flsub@b+3
  5888   0071BE  C10C  F03C         	movff	_powf$1500,___flsub@a
  5889   0071C2  C10D  F03D         	movff	_powf$1500+1,___flsub@a+1
  5890   0071C6  C10E  F03E         	movff	_powf$1500+2,___flsub@a+2
  5891   0071CA  C10F  F03F         	movff	_powf$1500+3,___flsub@a+3
  5892   0071CE  EC46  F00E         	call	___flsub	;wreg free
  5893   0071D2  C038  F11C         	movff	?___flsub,powf@t2
  5894   0071D6  C039  F11D         	movff	?___flsub+1,powf@t2+1
  5895   0071DA  C03A  F11E         	movff	?___flsub+2,powf@t2+2
  5896   0071DE  C03B  F11F         	movff	?___flsub+3,powf@t2+3
  5897   0071E2                     l7088:
  5898   0071E2  C064  F198         	movff	powf@y,powf@is
  5899   0071E6  C065  F199         	movff	powf@y+1,powf@is+1
  5900   0071EA  C066  F19A         	movff	powf@y+2,powf@is+2
  5901   0071EE  C067  F19B         	movff	powf@y+3,powf@is+3
  5902   0071F2  0E00               	movlw	0
  5903   0071F4  0101               	movlb	1	; () banked
  5904   0071F6  1598               	andwf	powf@is& (0+255),w,b
  5905   0071F8  6F2C               	movwf	powf@y1& (0+255),b
  5906   0071FA  0EF0               	movlw	240
  5907   0071FC  1599               	andwf	(powf@is+1)& (0+255),w,b
  5908   0071FE  6F2D               	movwf	(powf@y1+1)& (0+255),b
  5909   007200  0EFF               	movlw	255
  5910   007202  159A               	andwf	(powf@is+2)& (0+255),w,b
  5911   007204  6F2E               	movwf	(powf@y1+2)& (0+255),b
  5912   007206  0EFF               	movlw	255
  5913   007208  159B               	andwf	(powf@is+3)& (0+255),w,b
  5914   00720A  6F2F               	movwf	(powf@y1+3)& (0+255),b
  5915   00720C                     
  5916                           ; BSR set to: 1
  5917   00720C  C18C  F023         	movff	powf@t1,___flmul@a
  5918   007210  C18D  F024         	movff	powf@t1+1,___flmul@a+1
  5919   007214  C18E  F025         	movff	powf@t1+2,___flmul@a+2
  5920   007218  C18F  F026         	movff	powf@t1+3,___flmul@a+3
  5921   00721C  C12C  F03C         	movff	powf@y1,___flsub@a
  5922   007220  C12D  F03D         	movff	powf@y1+1,___flsub@a+1
  5923   007224  C12E  F03E         	movff	powf@y1+2,___flsub@a+2
  5924   007228  C12F  F03F         	movff	powf@y1+3,___flsub@a+3
  5925   00722C  C064  F038         	movff	powf@y,___flsub@b
  5926   007230  C065  F039         	movff	powf@y+1,___flsub@b+1
  5927   007234  C066  F03A         	movff	powf@y+2,___flsub@b+2
  5928   007238  C067  F03B         	movff	powf@y+3,___flsub@b+3
  5929   00723C  EC46  F00E         	call	___flsub	;wreg free
  5930   007240  C038  F01F         	movff	?___flsub,___flmul@b
  5931   007244  C039  F020         	movff	?___flsub+1,___flmul@b+1
  5932   007248  C03A  F021         	movff	?___flsub+2,___flmul@b+2
  5933   00724C  C03B  F022         	movff	?___flsub+3,___flmul@b+3
  5934   007250  ECBC  F020         	call	___flmul	;wreg free
  5935   007254  C01F  F110         	movff	?___flmul,_powf$1501
  5936   007258  C020  F111         	movff	?___flmul+1,_powf$1501+1
  5937   00725C  C021  F112         	movff	?___flmul+2,_powf$1501+2
  5938   007260  C022  F113         	movff	?___flmul+3,_powf$1501+3
  5939   007264  C110  F00F         	movff	_powf$1501,___fladd@b
  5940   007268  C111  F010         	movff	_powf$1501+1,___fladd@b+1
  5941   00726C  C112  F011         	movff	_powf$1501+2,___fladd@b+2
  5942   007270  C113  F012         	movff	_powf$1501+3,___fladd@b+3
  5943   007274  C11C  F023         	movff	powf@t2,___flmul@a
  5944   007278  C11D  F024         	movff	powf@t2+1,___flmul@a+1
  5945   00727C  C11E  F025         	movff	powf@t2+2,___flmul@a+2
  5946   007280  C11F  F026         	movff	powf@t2+3,___flmul@a+3
  5947   007284  C064  F01F         	movff	powf@y,___flmul@b
  5948   007288  C065  F020         	movff	powf@y+1,___flmul@b+1
  5949   00728C  C066  F021         	movff	powf@y+2,___flmul@b+2
  5950   007290  C067  F022         	movff	powf@y+3,___flmul@b+3
  5951   007294  ECBC  F020         	call	___flmul	;wreg free
  5952   007298  C01F  F013         	movff	?___flmul,___fladd@a
  5953   00729C  C020  F014         	movff	?___flmul+1,___fladd@a+1
  5954   0072A0  C021  F015         	movff	?___flmul+2,___fladd@a+2
  5955   0072A4  C022  F016         	movff	?___flmul+3,___fladd@a+3
  5956   0072A8  ECCF  F022         	call	___fladd	;wreg free
  5957   0072AC  C00F  F16C         	movff	?___fladd,powf@p_l
  5958   0072B0  C010  F16D         	movff	?___fladd+1,powf@p_l+1
  5959   0072B4  C011  F16E         	movff	?___fladd+2,powf@p_l+2
  5960   0072B8  C012  F16F         	movff	?___fladd+3,powf@p_l+3
  5961   0072BC  C12C  F01F         	movff	powf@y1,___flmul@b
  5962   0072C0  C12D  F020         	movff	powf@y1+1,___flmul@b+1
  5963   0072C4  C12E  F021         	movff	powf@y1+2,___flmul@b+2
  5964   0072C8  C12F  F022         	movff	powf@y1+3,___flmul@b+3
  5965   0072CC  C18C  F023         	movff	powf@t1,___flmul@a
  5966   0072D0  C18D  F024         	movff	powf@t1+1,___flmul@a+1
  5967   0072D4  C18E  F025         	movff	powf@t1+2,___flmul@a+2
  5968   0072D8  C18F  F026         	movff	powf@t1+3,___flmul@a+3
  5969   0072DC  ECBC  F020         	call	___flmul	;wreg free
  5970   0072E0  C01F  F1A0         	movff	?___flmul,powf@p_h
  5971   0072E4  C020  F1A1         	movff	?___flmul+1,powf@p_h+1
  5972   0072E8  C021  F1A2         	movff	?___flmul+2,powf@p_h+2
  5973   0072EC  C022  F1A3         	movff	?___flmul+3,powf@p_h+3
  5974   0072F0  C1A0  F00F         	movff	powf@p_h,___fladd@b
  5975   0072F4  C1A1  F010         	movff	powf@p_h+1,___fladd@b+1
  5976   0072F8  C1A2  F011         	movff	powf@p_h+2,___fladd@b+2
  5977   0072FC  C1A3  F012         	movff	powf@p_h+3,___fladd@b+3
  5978   007300  C16C  F013         	movff	powf@p_l,___fladd@a
  5979   007304  C16D  F014         	movff	powf@p_l+1,___fladd@a+1
  5980   007308  C16E  F015         	movff	powf@p_l+2,___fladd@a+2
  5981   00730C  C16F  F016         	movff	powf@p_l+3,___fladd@a+3
  5982   007310  ECCF  F022         	call	___fladd	;wreg free
  5983   007314  C00F  F1B4         	movff	?___fladd,powf@z
  5984   007318  C010  F1B5         	movff	?___fladd+1,powf@z+1
  5985   00731C  C011  F1B6         	movff	?___fladd+2,powf@z+2
  5986   007320  C012  F1B7         	movff	?___fladd+3,powf@z+3
  5987   007324  C1B4  F1A8         	movff	powf@z,powf@j
  5988   007328  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  5989   00732C  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  5990   007330  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  5991   007334  0101               	movlb	1	; () banked
  5992   007336  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  5993   007338  EFAA  F039         	goto	u9171
  5994   00733C  05A8               	decf	powf@j& (0+255),w,b
  5995   00733E  0E00               	movlw	0
  5996   007340  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  5997   007342  0E00               	movlw	0
  5998   007344  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  5999   007346  0E43               	movlw	67
  6000   007348  59AB               	subwfb	(powf@j+3)& (0+255),w,b
  6001   00734A  A0D8               	btfss	status,0,c
  6002   00734C  EFAA  F039         	goto	u9171
  6003   007350  EFAC  F039         	goto	u9170
  6004   007354                     u9171:
  6005   007354  EFAE  F039         	goto	l7110
  6006   007358                     u9170:
  6007   007358  EF38  F030         	goto	l6910
  6008   00735C                     l7110:
  6009                           
  6010                           ; BSR set to: 1
  6011   00735C  0E43               	movlw	67
  6012   00735E  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6013   007360  11A8               	iorwf	powf@j& (0+255),w,b
  6014   007362  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6015   007364  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  6016   007366  A4D8               	btfss	status,2,c
  6017   007368  EFB8  F039         	goto	u9181
  6018   00736C  EFBA  F039         	goto	u9180
  6019   007370                     u9181:
  6020   007370  EFF9  F039         	goto	l7120
  6021   007374                     u9180:
  6022   007374                     
  6023                           ; BSR set to: 1
  6024   007374  C1A0  F03C         	movff	powf@p_h,___flsub@a
  6025   007378  C1A1  F03D         	movff	powf@p_h+1,___flsub@a+1
  6026   00737C  C1A2  F03E         	movff	powf@p_h+2,___flsub@a+2
  6027   007380  C1A3  F03F         	movff	powf@p_h+3,___flsub@a+3
  6028   007384  C1B4  F038         	movff	powf@z,___flsub@b
  6029   007388  C1B5  F039         	movff	powf@z+1,___flsub@b+1
  6030   00738C  C1B6  F03A         	movff	powf@z+2,___flsub@b+2
  6031   007390  C1B7  F03B         	movff	powf@z+3,___flsub@b+3
  6032   007394  EC46  F00E         	call	___flsub	;wreg free
  6033   007398  C038  F040         	movff	?___flsub,___flge@ff1
  6034   00739C  C039  F041         	movff	?___flsub+1,___flge@ff1+1
  6035   0073A0  C03A  F042         	movff	?___flsub+2,___flge@ff1+2
  6036   0073A4  C03B  F043         	movff	?___flsub+3,___flge@ff1+3
  6037   0073A8  0E3C               	movlw	60
  6038   0073AA  6E13               	movwf	___fladd@a^0,c
  6039   0073AC  0EAA               	movlw	170
  6040   0073AE  6E14               	movwf	(___fladd@a+1)^0,c
  6041   0073B0  0E38               	movlw	56
  6042   0073B2  6E15               	movwf	(___fladd@a+2)^0,c
  6043   0073B4  0E33               	movlw	51
  6044   0073B6  6E16               	movwf	(___fladd@a+3)^0,c
  6045   0073B8  C16C  F00F         	movff	powf@p_l,___fladd@b
  6046   0073BC  C16D  F010         	movff	powf@p_l+1,___fladd@b+1
  6047   0073C0  C16E  F011         	movff	powf@p_l+2,___fladd@b+2
  6048   0073C4  C16F  F012         	movff	powf@p_l+3,___fladd@b+3
  6049   0073C8  ECCF  F022         	call	___fladd	;wreg free
  6050   0073CC  C00F  F044         	movff	?___fladd,___flge@ff2
  6051   0073D0  C010  F045         	movff	?___fladd+1,___flge@ff2+1
  6052   0073D4  C011  F046         	movff	?___fladd+2,___flge@ff2+2
  6053   0073D8  C012  F047         	movff	?___fladd+3,___flge@ff2+3
  6054   0073DC  ECFB  F012         	call	___flge	;wreg free
  6055   0073E0  B0D8               	btfsc	status,0,c
  6056   0073E2  EFF5  F039         	goto	u9191
  6057   0073E6  EFF7  F039         	goto	u9190
  6058   0073EA                     u9191:
  6059   0073EA  EF6C  F03A         	goto	l7136
  6060   0073EE                     u9190:
  6061   0073EE  EF38  F030         	goto	l6910
  6062   0073F2                     l7120:
  6063                           
  6064                           ; BSR set to: 1
  6065   0073F2  0EFF               	movlw	255
  6066   0073F4  15A8               	andwf	powf@j& (0+255),w,b
  6067   0073F6  0100               	movlb	0	; () banked
  6068   0073F8  6F68               	movwf	??_powf& (0+255),b
  6069   0073FA  0EFF               	movlw	255
  6070   0073FC  0101               	movlb	1	; () banked
  6071   0073FE  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6072   007400  0100               	movlb	0	; () banked
  6073   007402  6F69               	movwf	(??_powf+1)& (0+255),b
  6074   007404  0EFF               	movlw	255
  6075   007406  0101               	movlb	1	; () banked
  6076   007408  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6077   00740A  0100               	movlb	0	; () banked
  6078   00740C  6F6A               	movwf	(??_powf+2)& (0+255),b
  6079   00740E  0E7F               	movlw	127
  6080   007410  0101               	movlb	1	; () banked
  6081   007412  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6082   007414  0100               	movlb	0	; () banked
  6083   007416  6F6B               	movwf	(??_powf+3)& (0+255),b
  6084   007418  BF6B               	btfsc	(??_powf+3)& (0+255),7,b
  6085   00741A  EF1B  F03A         	goto	u9201
  6086   00741E  0568               	decf	??_powf& (0+255),w,b
  6087   007420  0E00               	movlw	0
  6088   007422  5969               	subwfb	(??_powf+1)& (0+255),w,b
  6089   007424  0E16               	movlw	22
  6090   007426  596A               	subwfb	(??_powf+2)& (0+255),w,b
  6091   007428  0E43               	movlw	67
  6092   00742A  596B               	subwfb	(??_powf+3)& (0+255),w,b
  6093   00742C  A0D8               	btfss	status,0,c
  6094   00742E  EF1B  F03A         	goto	u9201
  6095   007432  EF1D  F03A         	goto	u9200
  6096   007436                     u9201:
  6097   007436  EF27  F03A         	goto	l7128
  6098   00743A                     u9200:
  6099   00743A                     
  6100                           ; BSR set to: 0
  6101   00743A  0E00               	movlw	0
  6102   00743C  6F60               	movwf	?_powf& (0+255),b
  6103   00743E  0E00               	movlw	0
  6104   007440  6F61               	movwf	(?_powf+1)& (0+255),b
  6105   007442  0E00               	movlw	0
  6106   007444  6F62               	movwf	(?_powf+2)& (0+255),b
  6107   007446  0E00               	movlw	0
  6108   007448  6F63               	movwf	(?_powf+3)& (0+255),b
  6109   00744A  EFF8  F03E         	goto	l1127
  6110   00744E                     l7128:
  6111                           
  6112                           ; BSR set to: 0
  6113   00744E  0E16               	movlw	22
  6114   007450  0101               	movlb	1	; () banked
  6115   007452  19AA               	xorwf	(powf@j+2)& (0+255),w,b
  6116   007454  E109               	bnz	u9211
  6117   007456  0EC3               	movlw	195
  6118   007458  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  6119   00745A  11A8               	iorwf	powf@j& (0+255),w,b
  6120   00745C  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  6121   00745E  A4D8               	btfss	status,2,c
  6122   007460  EF34  F03A         	goto	u9211
  6123   007464  EF36  F03A         	goto	u9210
  6124   007468                     u9211:
  6125   007468  EF6C  F03A         	goto	l7136
  6126   00746C                     u9210:
  6127   00746C                     
  6128                           ; BSR set to: 1
  6129   00746C  C1A0  F03C         	movff	powf@p_h,___flsub@a
  6130   007470  C1A1  F03D         	movff	powf@p_h+1,___flsub@a+1
  6131   007474  C1A2  F03E         	movff	powf@p_h+2,___flsub@a+2
  6132   007478  C1A3  F03F         	movff	powf@p_h+3,___flsub@a+3
  6133   00747C  C1B4  F038         	movff	powf@z,___flsub@b
  6134   007480  C1B5  F039         	movff	powf@z+1,___flsub@b+1
  6135   007484  C1B6  F03A         	movff	powf@z+2,___flsub@b+2
  6136   007488  C1B7  F03B         	movff	powf@z+3,___flsub@b+3
  6137   00748C  EC46  F00E         	call	___flsub	;wreg free
  6138   007490  C038  F040         	movff	?___flsub,___flge@ff1
  6139   007494  C039  F041         	movff	?___flsub+1,___flge@ff1+1
  6140   007498  C03A  F042         	movff	?___flsub+2,___flge@ff1+2
  6141   00749C  C03B  F043         	movff	?___flsub+3,___flge@ff1+3
  6142   0074A0  C16C  F044         	movff	powf@p_l,___flge@ff2
  6143   0074A4  C16D  F045         	movff	powf@p_l+1,___flge@ff2+1
  6144   0074A8  C16E  F046         	movff	powf@p_l+2,___flge@ff2+2
  6145   0074AC  C16F  F047         	movff	powf@p_l+3,___flge@ff2+3
  6146   0074B0  ECFB  F012         	call	___flge	;wreg free
  6147   0074B4  A0D8               	btfss	status,0,c
  6148   0074B6  EF5F  F03A         	goto	u9221
  6149   0074BA  EF61  F03A         	goto	u9220
  6150   0074BE                     u9221:
  6151   0074BE  EF6C  F03A         	goto	l7136
  6152   0074C2                     u9220:
  6153   0074C2  0E00               	movlw	0
  6154   0074C4  0100               	movlb	0	; () banked
  6155   0074C6  6F60               	movwf	?_powf& (0+255),b
  6156   0074C8  0E00               	movlw	0
  6157   0074CA  6F61               	movwf	(?_powf+1)& (0+255),b
  6158   0074CC  0E00               	movlw	0
  6159   0074CE  6F62               	movwf	(?_powf+2)& (0+255),b
  6160   0074D0  0E00               	movlw	0
  6161   0074D2  6F63               	movwf	(?_powf+3)& (0+255),b
  6162   0074D4  EFF8  F03E         	goto	l1127
  6163   0074D8                     l7136:
  6164   0074D8  0EFF               	movlw	255
  6165   0074DA  0101               	movlb	1	; () banked
  6166   0074DC  15A8               	andwf	powf@j& (0+255),w,b
  6167   0074DE  6F28               	movwf	powf@i& (0+255),b
  6168   0074E0  0EFF               	movlw	255
  6169   0074E2  15A9               	andwf	(powf@j+1)& (0+255),w,b
  6170   0074E4  6F29               	movwf	(powf@i+1)& (0+255),b
  6171   0074E6  0EFF               	movlw	255
  6172   0074E8  15AA               	andwf	(powf@j+2)& (0+255),w,b
  6173   0074EA  6F2A               	movwf	(powf@i+2)& (0+255),b
  6174   0074EC  0E7F               	movlw	127
  6175   0074EE  15AB               	andwf	(powf@j+3)& (0+255),w,b
  6176   0074F0  6F2B               	movwf	(powf@i+3)& (0+255),b
  6177   0074F2  0E17               	movlw	23
  6178   0074F4  0100               	movlb	0	; () banked
  6179   0074F6  6F68               	movwf	??_powf& (0+255),b
  6180   0074F8  C128  F069         	movff	powf@i,??_powf+1
  6181   0074FC  C129  F06A         	movff	powf@i+1,??_powf+2
  6182   007500  C12A  F06B         	movff	powf@i+2,??_powf+3
  6183   007504  C12B  F06C         	movff	powf@i+3,??_powf+4
  6184   007508                     u9235:
  6185   007508  6768               	tstfsz	??_powf& (0+255),b
  6186   00750A  EF89  F03A         	goto	u9236
  6187   00750E  EF91  F03A         	goto	u9237
  6188   007512                     u9236:
  6189   007512  356C               	rlcf	(??_powf+4)& (0+255),w,b
  6190   007514  336C               	rrcf	(??_powf+4)& (0+255),f,b
  6191   007516  336B               	rrcf	(??_powf+3)& (0+255),f,b
  6192   007518  336A               	rrcf	(??_powf+2)& (0+255),f,b
  6193   00751A  3369               	rrcf	(??_powf+1)& (0+255),f,b
  6194   00751C  2F68               	decfsz	??_powf& (0+255),f,b
  6195   00751E  EF84  F03A         	goto	u9235
  6196   007522                     u9237:
  6197   007522  0E81               	movlw	129
  6198   007524  0100               	movlb	0	; () banked
  6199   007526  2569               	addwf	(??_powf+1)& (0+255),w,b
  6200   007528  0101               	movlb	1	; () banked
  6201   00752A  6FA4               	movwf	powf@k& (0+255),b
  6202   00752C  0EFF               	movlw	255
  6203   00752E  0100               	movlb	0	; () banked
  6204   007530  216A               	addwfc	(??_powf+2)& (0+255),w,b
  6205   007532  0101               	movlb	1	; () banked
  6206   007534  6FA5               	movwf	(powf@k+1)& (0+255),b
  6207   007536  0EFF               	movlw	255
  6208   007538  0100               	movlb	0	; () banked
  6209   00753A  216B               	addwfc	(??_powf+3)& (0+255),w,b
  6210   00753C  0101               	movlb	1	; () banked
  6211   00753E  6FA6               	movwf	(powf@k+2)& (0+255),b
  6212   007540  0EFF               	movlw	255
  6213   007542  0100               	movlb	0	; () banked
  6214   007544  216C               	addwfc	(??_powf+4)& (0+255),w,b
  6215   007546  0101               	movlb	1	; () banked
  6216   007548  6FA7               	movwf	(powf@k+3)& (0+255),b
  6217   00754A                     
  6218                           ; BSR set to: 1
  6219   00754A  0E00               	movlw	0
  6220   00754C  6F88               	movwf	powf@n& (0+255),b
  6221   00754E  0E00               	movlw	0
  6222   007550  6F89               	movwf	(powf@n+1)& (0+255),b
  6223   007552  0E00               	movlw	0
  6224   007554  6F8A               	movwf	(powf@n+2)& (0+255),b
  6225   007556  0E00               	movlw	0
  6226   007558  6F8B               	movwf	(powf@n+3)& (0+255),b
  6227   00755A                     
  6228                           ; BSR set to: 1
  6229   00755A  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
  6230   00755C  EFBC  F03A         	goto	u9241
  6231   007560  0528               	decf	powf@i& (0+255),w,b
  6232   007562  0E00               	movlw	0
  6233   007564  5929               	subwfb	(powf@i+1)& (0+255),w,b
  6234   007566  0E00               	movlw	0
  6235   007568  592A               	subwfb	(powf@i+2)& (0+255),w,b
  6236   00756A  0E3F               	movlw	63
  6237   00756C  592B               	subwfb	(powf@i+3)& (0+255),w,b
  6238   00756E  A0D8               	btfss	status,0,c
  6239   007570  EFBC  F03A         	goto	u9241
  6240   007574  EFBE  F03A         	goto	u9240
  6241   007578                     u9241:
  6242   007578  EFBA  F03B         	goto	l7148
  6243   00757C                     u9240:
  6244   00757C                     
  6245                           ; BSR set to: 1
  6246   00757C  C1A4  F068         	movff	powf@k,??_powf
  6247   007580  0E01               	movlw	1
  6248   007582  0100               	movlb	0	; () banked
  6249   007584  2768               	addwf	??_powf& (0+255),f,b
  6250   007586  0E00               	movlw	0
  6251   007588  6F69               	movwf	(??_powf+1)& (0+255),b
  6252   00758A  0E00               	movlw	0
  6253   00758C  6F6A               	movwf	(??_powf+2)& (0+255),b
  6254   00758E  0E80               	movlw	128
  6255   007590  6F6B               	movwf	(??_powf+3)& (0+255),b
  6256   007592  0E00               	movlw	0
  6257   007594  6F6C               	movwf	(??_powf+4)& (0+255),b
  6258   007596                     u9255:
  6259   007596  6768               	tstfsz	??_powf& (0+255),b
  6260   007598  EFD0  F03A         	goto	u9256
  6261   00759C  EFD8  F03A         	goto	u9257
  6262   0075A0                     u9256:
  6263   0075A0  356C               	rlcf	(??_powf+4)& (0+255),w,b
  6264   0075A2  336C               	rrcf	(??_powf+4)& (0+255),f,b
  6265   0075A4  336B               	rrcf	(??_powf+3)& (0+255),f,b
  6266   0075A6  336A               	rrcf	(??_powf+2)& (0+255),f,b
  6267   0075A8  3369               	rrcf	(??_powf+1)& (0+255),f,b
  6268   0075AA  2F68               	decfsz	??_powf& (0+255),f,b
  6269   0075AC  EFCB  F03A         	goto	u9255
  6270   0075B0                     u9257:
  6271   0075B0  0101               	movlb	1	; () banked
  6272   0075B2  51A8               	movf	powf@j& (0+255),w,b
  6273   0075B4  0100               	movlb	0	; () banked
  6274   0075B6  2569               	addwf	(??_powf+1)& (0+255),w,b
  6275   0075B8  0101               	movlb	1	; () banked
  6276   0075BA  6F88               	movwf	powf@n& (0+255),b
  6277   0075BC  51A9               	movf	(powf@j+1)& (0+255),w,b
  6278   0075BE  0100               	movlb	0	; () banked
  6279   0075C0  216A               	addwfc	(??_powf+2)& (0+255),w,b
  6280   0075C2  0101               	movlb	1	; () banked
  6281   0075C4  6F89               	movwf	(powf@n+1)& (0+255),b
  6282   0075C6  51AA               	movf	(powf@j+2)& (0+255),w,b
  6283   0075C8  0100               	movlb	0	; () banked
  6284   0075CA  216B               	addwfc	(??_powf+3)& (0+255),w,b
  6285   0075CC  0101               	movlb	1	; () banked
  6286   0075CE  6F8A               	movwf	(powf@n+2)& (0+255),b
  6287   0075D0  51AB               	movf	(powf@j+3)& (0+255),w,b
  6288   0075D2  0100               	movlb	0	; () banked
  6289   0075D4  216C               	addwfc	(??_powf+4)& (0+255),w,b
  6290   0075D6  0101               	movlb	1	; () banked
  6291   0075D8  6F8B               	movwf	(powf@n+3)& (0+255),b
  6292   0075DA  0E81               	movlw	129
  6293   0075DC  0100               	movlb	0	; () banked
  6294   0075DE  6F68               	movwf	??_powf& (0+255),b
  6295   0075E0  0EFF               	movlw	255
  6296   0075E2  6F69               	movwf	(??_powf+1)& (0+255),b
  6297   0075E4  0EFF               	movlw	255
  6298   0075E6  6F6A               	movwf	(??_powf+2)& (0+255),b
  6299   0075E8  0EFF               	movlw	255
  6300   0075EA  6F6B               	movwf	(??_powf+3)& (0+255),b
  6301   0075EC  0E17               	movlw	23
  6302   0075EE  6F6C               	movwf	(??_powf+4)& (0+255),b
  6303   0075F0  C188  F06D         	movff	powf@n,??_powf+5
  6304   0075F4  C189  F06E         	movff	powf@n+1,??_powf+6
  6305   0075F8  C18A  F06F         	movff	powf@n+2,??_powf+7
  6306   0075FC  C18B  F070         	movff	powf@n+3,??_powf+8
  6307   007600                     u9265:
  6308   007600  676C               	tstfsz	(??_powf+4)& (0+255),b
  6309   007602  EF05  F03B         	goto	u9266
  6310   007606  EF0D  F03B         	goto	u9267
  6311   00760A                     u9266:
  6312   00760A  3570               	rlcf	(??_powf+8)& (0+255),w,b
  6313   00760C  3370               	rrcf	(??_powf+8)& (0+255),f,b
  6314   00760E  336F               	rrcf	(??_powf+7)& (0+255),f,b
  6315   007610  336E               	rrcf	(??_powf+6)& (0+255),f,b
  6316   007612  336D               	rrcf	(??_powf+5)& (0+255),f,b
  6317   007614  2F6C               	decfsz	(??_powf+4)& (0+255),f,b
  6318   007616  EF00  F03B         	goto	u9265
  6319   00761A                     u9267:
  6320   00761A  0100               	movlb	0	; () banked
  6321   00761C  516D               	movf	(??_powf+5)& (0+255),w,b
  6322   00761E  2568               	addwf	??_powf& (0+255),w,b
  6323   007620  0101               	movlb	1	; () banked
  6324   007622  6FA4               	movwf	powf@k& (0+255),b
  6325   007624  0E00               	movlw	0
  6326   007626  0100               	movlb	0	; () banked
  6327   007628  2169               	addwfc	(??_powf+1)& (0+255),w,b
  6328   00762A  0101               	movlb	1	; () banked
  6329   00762C  6FA5               	movwf	(powf@k+1)& (0+255),b
  6330   00762E  0E00               	movlw	0
  6331   007630  0100               	movlb	0	; () banked
  6332   007632  216A               	addwfc	(??_powf+2)& (0+255),w,b
  6333   007634  0101               	movlb	1	; () banked
  6334   007636  6FA6               	movwf	(powf@k+2)& (0+255),b
  6335   007638  0E00               	movlw	0
  6336   00763A  0100               	movlb	0	; () banked
  6337   00763C  216B               	addwfc	(??_powf+3)& (0+255),w,b
  6338   00763E  0101               	movlb	1	; () banked
  6339   007640  6FA7               	movwf	(powf@k+3)& (0+255),b
  6340   007642  C1A4  F068         	movff	powf@k,??_powf
  6341   007646  0EFF               	movlw	255
  6342   007648  0100               	movlb	0	; () banked
  6343   00764A  6F69               	movwf	(??_powf+1)& (0+255),b
  6344   00764C  0EFF               	movlw	255
  6345   00764E  6F6A               	movwf	(??_powf+2)& (0+255),b
  6346   007650  0E7F               	movlw	127
  6347   007652  6F6B               	movwf	(??_powf+3)& (0+255),b
  6348   007654  0E00               	movlw	0
  6349   007656  6F6C               	movwf	(??_powf+4)& (0+255),b
  6350   007658                     u9275:
  6351   007658  6768               	tstfsz	??_powf& (0+255),b
  6352   00765A  EF31  F03B         	goto	u9276
  6353   00765E  EF39  F03B         	goto	u9277
  6354   007662                     u9276:
  6355   007662  356C               	rlcf	(??_powf+4)& (0+255),w,b
  6356   007664  336C               	rrcf	(??_powf+4)& (0+255),f,b
  6357   007666  336B               	rrcf	(??_powf+3)& (0+255),f,b
  6358   007668  336A               	rrcf	(??_powf+2)& (0+255),f,b
  6359   00766A  3369               	rrcf	(??_powf+1)& (0+255),f,b
  6360   00766C  2F68               	decfsz	??_powf& (0+255),f,b
  6361   00766E  EF2C  F03B         	goto	u9275
  6362   007672                     u9277:
  6363   007672  0100               	movlb	0	; () banked
  6364   007674  1D69               	comf	(??_powf+1)& (0+255),w,b
  6365   007676  6F6D               	movwf	(??_powf+5)& (0+255),b
  6366   007678  1D6A               	comf	(??_powf+2)& (0+255),w,b
  6367   00767A  6F6E               	movwf	(??_powf+6)& (0+255),b
  6368   00767C  1D6B               	comf	(??_powf+3)& (0+255),w,b
  6369   00767E  6F6F               	movwf	(??_powf+7)& (0+255),b
  6370   007680  1D6C               	comf	(??_powf+4)& (0+255),w,b
  6371   007682  6F70               	movwf	(??_powf+8)& (0+255),b
  6372   007684  0101               	movlb	1	; () banked
  6373   007686  5188               	movf	powf@n& (0+255),w,b
  6374   007688  0100               	movlb	0	; () banked
  6375   00768A  156D               	andwf	(??_powf+5)& (0+255),w,b
  6376   00768C  0101               	movlb	1	; () banked
  6377   00768E  6FB0               	movwf	powf@t& (0+255),b
  6378   007690  5189               	movf	(powf@n+1)& (0+255),w,b
  6379   007692  0100               	movlb	0	; () banked
  6380   007694  156E               	andwf	(??_powf+6)& (0+255),w,b
  6381   007696  0101               	movlb	1	; () banked
  6382   007698  6FB1               	movwf	(powf@t+1)& (0+255),b
  6383   00769A  518A               	movf	(powf@n+2)& (0+255),w,b
  6384   00769C  0100               	movlb	0	; () banked
  6385   00769E  156F               	andwf	(??_powf+7)& (0+255),w,b
  6386   0076A0  0101               	movlb	1	; () banked
  6387   0076A2  6FB2               	movwf	(powf@t+2)& (0+255),b
  6388   0076A4  518B               	movf	(powf@n+3)& (0+255),w,b
  6389   0076A6  0100               	movlb	0	; () banked
  6390   0076A8  1570               	andwf	(??_powf+8)& (0+255),w,b
  6391   0076AA  0101               	movlb	1	; () banked
  6392   0076AC  6FB3               	movwf	(powf@t+3)& (0+255),b
  6393   0076AE  51A4               	movf	powf@k& (0+255),w,b
  6394   0076B0  0817               	sublw	23
  6395   0076B2  0100               	movlb	0	; () banked
  6396   0076B4  6F68               	movwf	??_powf& (0+255),b
  6397   0076B6  0EFF               	movlw	255
  6398   0076B8  0101               	movlb	1	; () banked
  6399   0076BA  1588               	andwf	powf@n& (0+255),w,b
  6400   0076BC  0100               	movlb	0	; () banked
  6401   0076BE  6F69               	movwf	(??_powf+1)& (0+255),b
  6402   0076C0  0EFF               	movlw	255
  6403   0076C2  0101               	movlb	1	; () banked
  6404   0076C4  1589               	andwf	(powf@n+1)& (0+255),w,b
  6405   0076C6  0100               	movlb	0	; () banked
  6406   0076C8  6F6A               	movwf	(??_powf+2)& (0+255),b
  6407   0076CA  0E7F               	movlw	127
  6408   0076CC  0101               	movlb	1	; () banked
  6409   0076CE  158A               	andwf	(powf@n+2)& (0+255),w,b
  6410   0076D0  0100               	movlb	0	; () banked
  6411   0076D2  6F6B               	movwf	(??_powf+3)& (0+255),b
  6412   0076D4  0E00               	movlw	0
  6413   0076D6  0101               	movlb	1	; () banked
  6414   0076D8  158B               	andwf	(powf@n+3)& (0+255),w,b
  6415   0076DA  0100               	movlb	0	; () banked
  6416   0076DC  6F6C               	movwf	(??_powf+4)& (0+255),b
  6417   0076DE  0E00               	movlw	0
  6418   0076E0  1169               	iorwf	(??_powf+1)& (0+255),w,b
  6419   0076E2  6F6D               	movwf	(??_powf+5)& (0+255),b
  6420   0076E4  0E00               	movlw	0
  6421   0076E6  116A               	iorwf	(??_powf+2)& (0+255),w,b
  6422   0076E8  6F6E               	movwf	(??_powf+6)& (0+255),b
  6423   0076EA  0E80               	movlw	128
  6424   0076EC  116B               	iorwf	(??_powf+3)& (0+255),w,b
  6425   0076EE  6F6F               	movwf	(??_powf+7)& (0+255),b
  6426   0076F0  0E00               	movlw	0
  6427   0076F2  116C               	iorwf	(??_powf+4)& (0+255),w,b
  6428   0076F4  6F70               	movwf	(??_powf+8)& (0+255),b
  6429   0076F6                     u9285:
  6430   0076F6  6768               	tstfsz	??_powf& (0+255),b
  6431   0076F8  EF80  F03B         	goto	u9286
  6432   0076FC  EF88  F03B         	goto	u9287
  6433   007700                     u9286:
  6434   007700  3570               	rlcf	(??_powf+8)& (0+255),w,b
  6435   007702  3370               	rrcf	(??_powf+8)& (0+255),f,b
  6436   007704  336F               	rrcf	(??_powf+7)& (0+255),f,b
  6437   007706  336E               	rrcf	(??_powf+6)& (0+255),f,b
  6438   007708  336D               	rrcf	(??_powf+5)& (0+255),f,b
  6439   00770A  2F68               	decfsz	??_powf& (0+255),f,b
  6440   00770C  EF7B  F03B         	goto	u9285
  6441   007710                     u9287:
  6442   007710  C06D  F188         	movff	??_powf+5,powf@n
  6443   007714  C06E  F189         	movff	??_powf+6,powf@n+1
  6444   007718  C06F  F18A         	movff	??_powf+7,powf@n+2
  6445   00771C  C070  F18B         	movff	??_powf+8,powf@n+3
  6446   007720  0101               	movlb	1	; () banked
  6447   007722  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  6448   007724  EF98  F03B         	goto	u9290
  6449   007728  EF96  F03B         	goto	u9291
  6450   00772C                     u9291:
  6451   00772C  EFA0  F03B         	goto	l7146
  6452   007730                     u9290:
  6453   007730                     
  6454                           ; BSR set to: 1
  6455   007730  1F8B               	comf	(powf@n+3)& (0+255),f,b
  6456   007732  1F8A               	comf	(powf@n+2)& (0+255),f,b
  6457   007734  1F89               	comf	(powf@n+1)& (0+255),f,b
  6458   007736  6D88               	negf	powf@n& (0+255),b
  6459   007738  0E00               	movlw	0
  6460   00773A  2389               	addwfc	(powf@n+1)& (0+255),f,b
  6461   00773C  238A               	addwfc	(powf@n+2)& (0+255),f,b
  6462   00773E  238B               	addwfc	(powf@n+3)& (0+255),f,b
  6463   007740                     l7146:
  6464                           
  6465                           ; BSR set to: 1
  6466   007740  C1A0  F038         	movff	powf@p_h,___flsub@b
  6467   007744  C1A1  F039         	movff	powf@p_h+1,___flsub@b+1
  6468   007748  C1A2  F03A         	movff	powf@p_h+2,___flsub@b+2
  6469   00774C  C1A3  F03B         	movff	powf@p_h+3,___flsub@b+3
  6470   007750  C1B0  F03C         	movff	powf@t,___flsub@a
  6471   007754  C1B1  F03D         	movff	powf@t+1,___flsub@a+1
  6472   007758  C1B2  F03E         	movff	powf@t+2,___flsub@a+2
  6473   00775C  C1B3  F03F         	movff	powf@t+3,___flsub@a+3
  6474   007760  EC46  F00E         	call	___flsub	;wreg free
  6475   007764  C038  F1A0         	movff	?___flsub,powf@p_h
  6476   007768  C039  F1A1         	movff	?___flsub+1,powf@p_h+1
  6477   00776C  C03A  F1A2         	movff	?___flsub+2,powf@p_h+2
  6478   007770  C03B  F1A3         	movff	?___flsub+3,powf@p_h+3
  6479   007774                     l7148:
  6480   007774  C1A0  F00F         	movff	powf@p_h,___fladd@b
  6481   007778  C1A1  F010         	movff	powf@p_h+1,___fladd@b+1
  6482   00777C  C1A2  F011         	movff	powf@p_h+2,___fladd@b+2
  6483   007780  C1A3  F012         	movff	powf@p_h+3,___fladd@b+3
  6484   007784  C16C  F013         	movff	powf@p_l,___fladd@a
  6485   007788  C16D  F014         	movff	powf@p_l+1,___fladd@a+1
  6486   00778C  C16E  F015         	movff	powf@p_l+2,___fladd@a+2
  6487   007790  C16F  F016         	movff	powf@p_l+3,___fladd@a+3
  6488   007794  ECCF  F022         	call	___fladd	;wreg free
  6489   007798  C00F  F1B0         	movff	?___fladd,powf@t
  6490   00779C  C010  F1B1         	movff	?___fladd+1,powf@t+1
  6491   0077A0  C011  F1B2         	movff	?___fladd+2,powf@t+2
  6492   0077A4  C012  F1B3         	movff	?___fladd+3,powf@t+3
  6493   0077A8  C1B0  F198         	movff	powf@t,powf@is
  6494   0077AC  C1B1  F199         	movff	powf@t+1,powf@is+1
  6495   0077B0  C1B2  F19A         	movff	powf@t+2,powf@is+2
  6496   0077B4  C1B3  F19B         	movff	powf@t+3,powf@is+3
  6497   0077B8  0E00               	movlw	0
  6498   0077BA  0101               	movlb	1	; () banked
  6499   0077BC  1598               	andwf	powf@is& (0+255),w,b
  6500   0077BE  6FB0               	movwf	powf@t& (0+255),b
  6501   0077C0  0E80               	movlw	128
  6502   0077C2  1599               	andwf	(powf@is+1)& (0+255),w,b
  6503   0077C4  6FB1               	movwf	(powf@t+1)& (0+255),b
  6504   0077C6  0EFF               	movlw	255
  6505   0077C8  159A               	andwf	(powf@is+2)& (0+255),w,b
  6506   0077CA  6FB2               	movwf	(powf@t+2)& (0+255),b
  6507   0077CC  0EFF               	movlw	255
  6508   0077CE  159B               	andwf	(powf@is+3)& (0+255),w,b
  6509   0077D0  6FB3               	movwf	(powf@t+3)& (0+255),b
  6510   0077D2                     
  6511                           ; BSR set to: 1
  6512   0077D2  C1B0  F01F         	movff	powf@t,___flmul@b
  6513   0077D6  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  6514   0077DA  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  6515   0077DE  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  6516   0077E2  0E00               	movlw	0
  6517   0077E4  6E23               	movwf	___flmul@a^0,c
  6518   0077E6  0E72               	movlw	114
  6519   0077E8  6E24               	movwf	(___flmul@a+1)^0,c
  6520   0077EA  0E31               	movlw	49
  6521   0077EC  6E25               	movwf	(___flmul@a+2)^0,c
  6522   0077EE  0E3F               	movlw	63
  6523   0077F0  6E26               	movwf	(___flmul@a+3)^0,c
  6524   0077F2  ECBC  F020         	call	___flmul	;wreg free
  6525   0077F6  C01F  F17C         	movff	?___flmul,powf@u
  6526   0077FA  C020  F17D         	movff	?___flmul+1,powf@u+1
  6527   0077FE  C021  F17E         	movff	?___flmul+2,powf@u+2
  6528   007802  C022  F17F         	movff	?___flmul+3,powf@u+3
  6529   007806  C1A0  F03C         	movff	powf@p_h,___flsub@a
  6530   00780A  C1A1  F03D         	movff	powf@p_h+1,___flsub@a+1
  6531   00780E  C1A2  F03E         	movff	powf@p_h+2,___flsub@a+2
  6532   007812  C1A3  F03F         	movff	powf@p_h+3,___flsub@a+3
  6533   007816  C1B0  F038         	movff	powf@t,___flsub@b
  6534   00781A  C1B1  F039         	movff	powf@t+1,___flsub@b+1
  6535   00781E  C1B2  F03A         	movff	powf@t+2,___flsub@b+2
  6536   007822  C1B3  F03B         	movff	powf@t+3,___flsub@b+3
  6537   007826  EC46  F00E         	call	___flsub	;wreg free
  6538   00782A  C038  F19C         	movff	?___flsub,_powf$1492
  6539   00782E  C039  F19D         	movff	?___flsub+1,_powf$1492+1
  6540   007832  C03A  F19E         	movff	?___flsub+2,_powf$1492+2
  6541   007836  C03B  F19F         	movff	?___flsub+3,_powf$1492+3
  6542   00783A  0E18               	movlw	24
  6543   00783C  6E23               	movwf	___flmul@a^0,c
  6544   00783E  0E72               	movlw	114
  6545   007840  6E24               	movwf	(___flmul@a+1)^0,c
  6546   007842  0E31               	movlw	49
  6547   007844  6E25               	movwf	(___flmul@a+2)^0,c
  6548   007846  0E3F               	movlw	63
  6549   007848  6E26               	movwf	(___flmul@a+3)^0,c
  6550   00784A  C19C  F03C         	movff	_powf$1492,___flsub@a
  6551   00784E  C19D  F03D         	movff	_powf$1492+1,___flsub@a+1
  6552   007852  C19E  F03E         	movff	_powf$1492+2,___flsub@a+2
  6553   007856  C19F  F03F         	movff	_powf$1492+3,___flsub@a+3
  6554   00785A  C16C  F038         	movff	powf@p_l,___flsub@b
  6555   00785E  C16D  F039         	movff	powf@p_l+1,___flsub@b+1
  6556   007862  C16E  F03A         	movff	powf@p_l+2,___flsub@b+2
  6557   007866  C16F  F03B         	movff	powf@p_l+3,___flsub@b+3
  6558   00786A  EC46  F00E         	call	___flsub	;wreg free
  6559   00786E  C038  F01F         	movff	?___flsub,___flmul@b
  6560   007872  C039  F020         	movff	?___flsub+1,___flmul@b+1
  6561   007876  C03A  F021         	movff	?___flsub+2,___flmul@b+2
  6562   00787A  C03B  F022         	movff	?___flsub+3,___flmul@b+3
  6563   00787E  ECBC  F020         	call	___flmul	;wreg free
  6564   007882  C01F  F114         	movff	?___flmul,_powf$1502
  6565   007886  C020  F115         	movff	?___flmul+1,_powf$1502+1
  6566   00788A  C021  F116         	movff	?___flmul+2,_powf$1502+2
  6567   00788E  C022  F117         	movff	?___flmul+3,_powf$1502+3
  6568   007892  C114  F00F         	movff	_powf$1502,___fladd@b
  6569   007896  C115  F010         	movff	_powf$1502+1,___fladd@b+1
  6570   00789A  C116  F011         	movff	_powf$1502+2,___fladd@b+2
  6571   00789E  C117  F012         	movff	_powf$1502+3,___fladd@b+3
  6572   0078A2  0E8C               	movlw	140
  6573   0078A4  6E23               	movwf	___flmul@a^0,c
  6574   0078A6  0EBE               	movlw	190
  6575   0078A8  6E24               	movwf	(___flmul@a+1)^0,c
  6576   0078AA  0EBF               	movlw	191
  6577   0078AC  6E25               	movwf	(___flmul@a+2)^0,c
  6578   0078AE  0E35               	movlw	53
  6579   0078B0  6E26               	movwf	(___flmul@a+3)^0,c
  6580   0078B2  C1B0  F01F         	movff	powf@t,___flmul@b
  6581   0078B6  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  6582   0078BA  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  6583   0078BE  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  6584   0078C2  ECBC  F020         	call	___flmul	;wreg free
  6585   0078C6  C01F  F013         	movff	?___flmul,___fladd@a
  6586   0078CA  C020  F014         	movff	?___flmul+1,___fladd@a+1
  6587   0078CE  C021  F015         	movff	?___flmul+2,___fladd@a+2
  6588   0078D2  C022  F016         	movff	?___flmul+3,___fladd@a+3
  6589   0078D6  ECCF  F022         	call	___fladd	;wreg free
  6590   0078DA  C00F  F180         	movff	?___fladd,powf@v
  6591   0078DE  C010  F181         	movff	?___fladd+1,powf@v+1
  6592   0078E2  C011  F182         	movff	?___fladd+2,powf@v+2
  6593   0078E6  C012  F183         	movff	?___fladd+3,powf@v+3
  6594   0078EA  C17C  F00F         	movff	powf@u,___fladd@b
  6595   0078EE  C17D  F010         	movff	powf@u+1,___fladd@b+1
  6596   0078F2  C17E  F011         	movff	powf@u+2,___fladd@b+2
  6597   0078F6  C17F  F012         	movff	powf@u+3,___fladd@b+3
  6598   0078FA  C180  F013         	movff	powf@v,___fladd@a
  6599   0078FE  C181  F014         	movff	powf@v+1,___fladd@a+1
  6600   007902  C182  F015         	movff	powf@v+2,___fladd@a+2
  6601   007906  C183  F016         	movff	powf@v+3,___fladd@a+3
  6602   00790A  ECCF  F022         	call	___fladd	;wreg free
  6603   00790E  C00F  F1B4         	movff	?___fladd,powf@z
  6604   007912  C010  F1B5         	movff	?___fladd+1,powf@z+1
  6605   007916  C011  F1B6         	movff	?___fladd+2,powf@z+2
  6606   00791A  C012  F1B7         	movff	?___fladd+3,powf@z+3
  6607   00791E  C17C  F03C         	movff	powf@u,___flsub@a
  6608   007922  C17D  F03D         	movff	powf@u+1,___flsub@a+1
  6609   007926  C17E  F03E         	movff	powf@u+2,___flsub@a+2
  6610   00792A  C17F  F03F         	movff	powf@u+3,___flsub@a+3
  6611   00792E  C1B4  F038         	movff	powf@z,___flsub@b
  6612   007932  C1B5  F039         	movff	powf@z+1,___flsub@b+1
  6613   007936  C1B6  F03A         	movff	powf@z+2,___flsub@b+2
  6614   00793A  C1B7  F03B         	movff	powf@z+3,___flsub@b+3
  6615   00793E  EC46  F00E         	call	___flsub	;wreg free
  6616   007942  C038  F19C         	movff	?___flsub,_powf$1492
  6617   007946  C039  F19D         	movff	?___flsub+1,_powf$1492+1
  6618   00794A  C03A  F19E         	movff	?___flsub+2,_powf$1492+2
  6619   00794E  C03B  F19F         	movff	?___flsub+3,_powf$1492+3
  6620   007952  C180  F038         	movff	powf@v,___flsub@b
  6621   007956  C181  F039         	movff	powf@v+1,___flsub@b+1
  6622   00795A  C182  F03A         	movff	powf@v+2,___flsub@b+2
  6623   00795E  C183  F03B         	movff	powf@v+3,___flsub@b+3
  6624   007962  C19C  F03C         	movff	_powf$1492,___flsub@a
  6625   007966  C19D  F03D         	movff	_powf$1492+1,___flsub@a+1
  6626   00796A  C19E  F03E         	movff	_powf$1492+2,___flsub@a+2
  6627   00796E  C19F  F03F         	movff	_powf$1492+3,___flsub@a+3
  6628   007972  EC46  F00E         	call	___flsub	;wreg free
  6629   007976  C038  F144         	movff	?___flsub,powf@w
  6630   00797A  C039  F145         	movff	?___flsub+1,powf@w+1
  6631   00797E  C03A  F146         	movff	?___flsub+2,powf@w+2
  6632   007982  C03B  F147         	movff	?___flsub+3,powf@w+3
  6633   007986  C1B4  F01F         	movff	powf@z,___flmul@b
  6634   00798A  C1B5  F020         	movff	powf@z+1,___flmul@b+1
  6635   00798E  C1B6  F021         	movff	powf@z+2,___flmul@b+2
  6636   007992  C1B7  F022         	movff	powf@z+3,___flmul@b+3
  6637   007996  C1B4  F023         	movff	powf@z,___flmul@a
  6638   00799A  C1B5  F024         	movff	powf@z+1,___flmul@a+1
  6639   00799E  C1B6  F025         	movff	powf@z+2,___flmul@a+2
  6640   0079A2  C1B7  F026         	movff	powf@z+3,___flmul@a+3
  6641   0079A6  ECBC  F020         	call	___flmul	;wreg free
  6642   0079AA  C01F  F1B0         	movff	?___flmul,powf@t
  6643   0079AE  C020  F1B1         	movff	?___flmul+1,powf@t+1
  6644   0079B2  C021  F1B2         	movff	?___flmul+2,powf@t+2
  6645   0079B6  C022  F1B3         	movff	?___flmul+3,powf@t+3
  6646   0079BA  0E0E               	movlw	14
  6647   0079BC  6E13               	movwf	___fladd@a^0,c
  6648   0079BE  0EEA               	movlw	234
  6649   0079C0  6E14               	movwf	(___fladd@a+1)^0,c
  6650   0079C2  0EDD               	movlw	221
  6651   0079C4  6E15               	movwf	(___fladd@a+2)^0,c
  6652   0079C6  0EB5               	movlw	181
  6653   0079C8  6E16               	movwf	(___fladd@a+3)^0,c
  6654   0079CA  0E4C               	movlw	76
  6655   0079CC  6E23               	movwf	___flmul@a^0,c
  6656   0079CE  0EBB               	movlw	187
  6657   0079D0  6E24               	movwf	(___flmul@a+1)^0,c
  6658   0079D2  0E31               	movlw	49
  6659   0079D4  6E25               	movwf	(___flmul@a+2)^0,c
  6660   0079D6  0E33               	movlw	51
  6661   0079D8  6E26               	movwf	(___flmul@a+3)^0,c
  6662   0079DA  C1B0  F01F         	movff	powf@t,___flmul@b
  6663   0079DE  C1B1  F020         	movff	powf@t+1,___flmul@b+1
  6664   0079E2  C1B2  F021         	movff	powf@t+2,___flmul@b+2
  6665   0079E6  C1B3  F022         	movff	powf@t+3,___flmul@b+3
  6666   0079EA  ECBC  F020         	call	___flmul	;wreg free
  6667   0079EE  C01F  F00F         	movff	?___flmul,___fladd@b
  6668   0079F2  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6669   0079F6  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6670   0079FA  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6671   0079FE  ECCF  F022         	call	___fladd	;wreg free
  6672   007A02  C00F  F148         	movff	?___fladd,_powf$1489
  6673   007A06  C010  F149         	movff	?___fladd+1,_powf$1489+1
  6674   007A0A  C011  F14A         	movff	?___fladd+2,_powf$1489+2
  6675   007A0E  C012  F14B         	movff	?___fladd+3,_powf$1489+3
  6676   007A12  0E55               	movlw	85
  6677   007A14  6E13               	movwf	___fladd@a^0,c
  6678   007A16  0EB3               	movlw	179
  6679   007A18  6E14               	movwf	(___fladd@a+1)^0,c
  6680   007A1A  0E8A               	movlw	138
  6681   007A1C  6E15               	movwf	(___fladd@a+2)^0,c
  6682   007A1E  0E38               	movlw	56
  6683   007A20  6E16               	movwf	(___fladd@a+3)^0,c
  6684   007A22  C1B0  F023         	movff	powf@t,___flmul@a
  6685   007A26  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  6686   007A2A  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  6687   007A2E  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  6688   007A32  C148  F01F         	movff	_powf$1489,___flmul@b
  6689   007A36  C149  F020         	movff	_powf$1489+1,___flmul@b+1
  6690   007A3A  C14A  F021         	movff	_powf$1489+2,___flmul@b+2
  6691   007A3E  C14B  F022         	movff	_powf$1489+3,___flmul@b+3
  6692   007A42  ECBC  F020         	call	___flmul	;wreg free
  6693   007A46  C01F  F00F         	movff	?___flmul,___fladd@b
  6694   007A4A  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6695   007A4E  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6696   007A52  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6697   007A56  ECCF  F022         	call	___fladd	;wreg free
  6698   007A5A  C00F  F158         	movff	?___fladd,_powf$1490
  6699   007A5E  C010  F159         	movff	?___fladd+1,_powf$1490+1
  6700   007A62  C011  F15A         	movff	?___fladd+2,_powf$1490+2
  6701   007A66  C012  F15B         	movff	?___fladd+3,_powf$1490+3
  6702   007A6A  0E61               	movlw	97
  6703   007A6C  6E13               	movwf	___fladd@a^0,c
  6704   007A6E  0E0B               	movlw	11
  6705   007A70  6E14               	movwf	(___fladd@a+1)^0,c
  6706   007A72  0E36               	movlw	54
  6707   007A74  6E15               	movwf	(___fladd@a+2)^0,c
  6708   007A76  0EBB               	movlw	187
  6709   007A78  6E16               	movwf	(___fladd@a+3)^0,c
  6710   007A7A  C1B0  F023         	movff	powf@t,___flmul@a
  6711   007A7E  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  6712   007A82  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  6713   007A86  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  6714   007A8A  C158  F01F         	movff	_powf$1490,___flmul@b
  6715   007A8E  C159  F020         	movff	_powf$1490+1,___flmul@b+1
  6716   007A92  C15A  F021         	movff	_powf$1490+2,___flmul@b+2
  6717   007A96  C15B  F022         	movff	_powf$1490+3,___flmul@b+3
  6718   007A9A  ECBC  F020         	call	___flmul	;wreg free
  6719   007A9E  C01F  F00F         	movff	?___flmul,___fladd@b
  6720   007AA2  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6721   007AA6  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6722   007AAA  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6723   007AAE  ECCF  F022         	call	___fladd	;wreg free
  6724   007AB2  C00F  F14C         	movff	?___fladd,_powf$1491
  6725   007AB6  C010  F14D         	movff	?___fladd+1,_powf$1491+1
  6726   007ABA  C011  F14E         	movff	?___fladd+2,_powf$1491+2
  6727   007ABE  C012  F14F         	movff	?___fladd+3,_powf$1491+3
  6728   007AC2  0EAB               	movlw	171
  6729   007AC4  6E13               	movwf	___fladd@a^0,c
  6730   007AC6  0EAA               	movlw	170
  6731   007AC8  6E14               	movwf	(___fladd@a+1)^0,c
  6732   007ACA  0E2A               	movlw	42
  6733   007ACC  6E15               	movwf	(___fladd@a+2)^0,c
  6734   007ACE  0E3E               	movlw	62
  6735   007AD0  6E16               	movwf	(___fladd@a+3)^0,c
  6736   007AD2  C1B0  F023         	movff	powf@t,___flmul@a
  6737   007AD6  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  6738   007ADA  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  6739   007ADE  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  6740   007AE2  C14C  F01F         	movff	_powf$1491,___flmul@b
  6741   007AE6  C14D  F020         	movff	_powf$1491+1,___flmul@b+1
  6742   007AEA  C14E  F021         	movff	_powf$1491+2,___flmul@b+2
  6743   007AEE  C14F  F022         	movff	_powf$1491+3,___flmul@b+3
  6744   007AF2  ECBC  F020         	call	___flmul	;wreg free
  6745   007AF6  C01F  F00F         	movff	?___flmul,___fladd@b
  6746   007AFA  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6747   007AFE  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6748   007B02  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6749   007B06  ECCF  F022         	call	___fladd	;wreg free
  6750   007B0A  C00F  F138         	movff	?___fladd,_powf$1493
  6751   007B0E  C010  F139         	movff	?___fladd+1,_powf$1493+1
  6752   007B12  C011  F13A         	movff	?___fladd+2,_powf$1493+2
  6753   007B16  C012  F13B         	movff	?___fladd+3,_powf$1493+3
  6754   007B1A  C1B4  F038         	movff	powf@z,___flsub@b
  6755   007B1E  C1B5  F039         	movff	powf@z+1,___flsub@b+1
  6756   007B22  C1B6  F03A         	movff	powf@z+2,___flsub@b+2
  6757   007B26  C1B7  F03B         	movff	powf@z+3,___flsub@b+3
  6758   007B2A  C1B0  F023         	movff	powf@t,___flmul@a
  6759   007B2E  C1B1  F024         	movff	powf@t+1,___flmul@a+1
  6760   007B32  C1B2  F025         	movff	powf@t+2,___flmul@a+2
  6761   007B36  C1B3  F026         	movff	powf@t+3,___flmul@a+3
  6762   007B3A  C138  F01F         	movff	_powf$1493,___flmul@b
  6763   007B3E  C139  F020         	movff	_powf$1493+1,___flmul@b+1
  6764   007B42  C13A  F021         	movff	_powf$1493+2,___flmul@b+2
  6765   007B46  C13B  F022         	movff	_powf$1493+3,___flmul@b+3
  6766   007B4A  ECBC  F020         	call	___flmul	;wreg free
  6767   007B4E  C01F  F03C         	movff	?___flmul,___flsub@a
  6768   007B52  C020  F03D         	movff	?___flmul+1,___flsub@a+1
  6769   007B56  C021  F03E         	movff	?___flmul+2,___flsub@a+2
  6770   007B5A  C022  F03F         	movff	?___flmul+3,___flsub@a+3
  6771   007B5E  EC46  F00E         	call	___flsub	;wreg free
  6772   007B62  C038  F18C         	movff	?___flsub,powf@t1
  6773   007B66  C039  F18D         	movff	?___flsub+1,powf@t1+1
  6774   007B6A  C03A  F18E         	movff	?___flsub+2,powf@t1+2
  6775   007B6E  C03B  F18F         	movff	?___flsub+3,powf@t1+3
  6776   007B72  0E00               	movlw	0
  6777   007B74  6E13               	movwf	___fladd@a^0,c
  6778   007B76  0E00               	movlw	0
  6779   007B78  6E14               	movwf	(___fladd@a+1)^0,c
  6780   007B7A  0E00               	movlw	0
  6781   007B7C  6E15               	movwf	(___fladd@a+2)^0,c
  6782   007B7E  0EC0               	movlw	192
  6783   007B80  6E16               	movwf	(___fladd@a+3)^0,c
  6784   007B82  C18C  F00F         	movff	powf@t1,___fladd@b
  6785   007B86  C18D  F010         	movff	powf@t1+1,___fladd@b+1
  6786   007B8A  C18E  F011         	movff	powf@t1+2,___fladd@b+2
  6787   007B8E  C18F  F012         	movff	powf@t1+3,___fladd@b+3
  6788   007B92  ECCF  F022         	call	___fladd	;wreg free
  6789   007B96  C00F  F044         	movff	?___fladd,___fldiv@a
  6790   007B9A  C010  F045         	movff	?___fladd+1,___fldiv@a+1
  6791   007B9E  C011  F046         	movff	?___fladd+2,___fldiv@a+2
  6792   007BA2  C012  F047         	movff	?___fladd+3,___fldiv@a+3
  6793   007BA6  C18C  F023         	movff	powf@t1,___flmul@a
  6794   007BAA  C18D  F024         	movff	powf@t1+1,___flmul@a+1
  6795   007BAE  C18E  F025         	movff	powf@t1+2,___flmul@a+2
  6796   007BB2  C18F  F026         	movff	powf@t1+3,___flmul@a+3
  6797   007BB6  C1B4  F01F         	movff	powf@z,___flmul@b
  6798   007BBA  C1B5  F020         	movff	powf@z+1,___flmul@b+1
  6799   007BBE  C1B6  F021         	movff	powf@z+2,___flmul@b+2
  6800   007BC2  C1B7  F022         	movff	powf@z+3,___flmul@b+3
  6801   007BC6  ECBC  F020         	call	___flmul	;wreg free
  6802   007BCA  C01F  F040         	movff	?___flmul,___fldiv@b
  6803   007BCE  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  6804   007BD2  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  6805   007BD6  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  6806   007BDA  EC05  F01D         	call	___fldiv	;wreg free
  6807   007BDE  C040  F13C         	movff	?___fldiv,_powf$1497
  6808   007BE2  C041  F13D         	movff	?___fldiv+1,_powf$1497+1
  6809   007BE6  C042  F13E         	movff	?___fldiv+2,_powf$1497+2
  6810   007BEA  C043  F13F         	movff	?___fldiv+3,_powf$1497+3
  6811   007BEE  C144  F013         	movff	powf@w,___fladd@a
  6812   007BF2  C145  F014         	movff	powf@w+1,___fladd@a+1
  6813   007BF6  C146  F015         	movff	powf@w+2,___fladd@a+2
  6814   007BFA  C147  F016         	movff	powf@w+3,___fladd@a+3
  6815   007BFE  C144  F023         	movff	powf@w,___flmul@a
  6816   007C02  C145  F024         	movff	powf@w+1,___flmul@a+1
  6817   007C06  C146  F025         	movff	powf@w+2,___flmul@a+2
  6818   007C0A  C147  F026         	movff	powf@w+3,___flmul@a+3
  6819   007C0E  C1B4  F01F         	movff	powf@z,___flmul@b
  6820   007C12  C1B5  F020         	movff	powf@z+1,___flmul@b+1
  6821   007C16  C1B6  F021         	movff	powf@z+2,___flmul@b+2
  6822   007C1A  C1B7  F022         	movff	powf@z+3,___flmul@b+3
  6823   007C1E  ECBC  F020         	call	___flmul	;wreg free
  6824   007C22  C01F  F00F         	movff	?___flmul,___fladd@b
  6825   007C26  C020  F010         	movff	?___flmul+1,___fladd@b+1
  6826   007C2A  C021  F011         	movff	?___flmul+2,___fladd@b+2
  6827   007C2E  C022  F012         	movff	?___flmul+3,___fladd@b+3
  6828   007C32  ECCF  F022         	call	___fladd	;wreg free
  6829   007C36  C00F  F118         	movff	?___fladd,_powf$1503
  6830   007C3A  C010  F119         	movff	?___fladd+1,_powf$1503+1
  6831   007C3E  C011  F11A         	movff	?___fladd+2,_powf$1503+2
  6832   007C42  C012  F11B         	movff	?___fladd+3,_powf$1503+3
  6833   007C46  C13C  F038         	movff	_powf$1497,___flsub@b
  6834   007C4A  C13D  F039         	movff	_powf$1497+1,___flsub@b+1
  6835   007C4E  C13E  F03A         	movff	_powf$1497+2,___flsub@b+2
  6836   007C52  C13F  F03B         	movff	_powf$1497+3,___flsub@b+3
  6837   007C56  C118  F03C         	movff	_powf$1503,___flsub@a
  6838   007C5A  C119  F03D         	movff	_powf$1503+1,___flsub@a+1
  6839   007C5E  C11A  F03E         	movff	_powf$1503+2,___flsub@a+2
  6840   007C62  C11B  F03F         	movff	_powf$1503+3,___flsub@a+3
  6841   007C66  EC46  F00E         	call	___flsub	;wreg free
  6842   007C6A  C038  F150         	movff	?___flsub,powf@r
  6843   007C6E  C039  F151         	movff	?___flsub+1,powf@r+1
  6844   007C72  C03A  F152         	movff	?___flsub+2,powf@r+2
  6845   007C76  C03B  F153         	movff	?___flsub+3,powf@r+3
  6846   007C7A  C1B4  F03C         	movff	powf@z,___flsub@a
  6847   007C7E  C1B5  F03D         	movff	powf@z+1,___flsub@a+1
  6848   007C82  C1B6  F03E         	movff	powf@z+2,___flsub@a+2
  6849   007C86  C1B7  F03F         	movff	powf@z+3,___flsub@a+3
  6850   007C8A  C150  F038         	movff	powf@r,___flsub@b
  6851   007C8E  C151  F039         	movff	powf@r+1,___flsub@b+1
  6852   007C92  C152  F03A         	movff	powf@r+2,___flsub@b+2
  6853   007C96  C153  F03B         	movff	powf@r+3,___flsub@b+3
  6854   007C9A  EC46  F00E         	call	___flsub	;wreg free
  6855   007C9E  C038  F19C         	movff	?___flsub,_powf$1492
  6856   007CA2  C039  F19D         	movff	?___flsub+1,_powf$1492+1
  6857   007CA6  C03A  F19E         	movff	?___flsub+2,_powf$1492+2
  6858   007CAA  C03B  F19F         	movff	?___flsub+3,_powf$1492+3
  6859   007CAE  0E00               	movlw	0
  6860   007CB0  6E38               	movwf	___flsub@b^0,c
  6861   007CB2  0E00               	movlw	0
  6862   007CB4  6E39               	movwf	(___flsub@b+1)^0,c
  6863   007CB6  0E80               	movlw	128
  6864   007CB8  6E3A               	movwf	(___flsub@b+2)^0,c
  6865   007CBA  0E3F               	movlw	63
  6866   007CBC  6E3B               	movwf	(___flsub@b+3)^0,c
  6867   007CBE  C19C  F03C         	movff	_powf$1492,___flsub@a
  6868   007CC2  C19D  F03D         	movff	_powf$1492+1,___flsub@a+1
  6869   007CC6  C19E  F03E         	movff	_powf$1492+2,___flsub@a+2
  6870   007CCA  C19F  F03F         	movff	_powf$1492+3,___flsub@a+3
  6871   007CCE  EC46  F00E         	call	___flsub	;wreg free
  6872   007CD2  C038  F1B4         	movff	?___flsub,powf@z
  6873   007CD6  C039  F1B5         	movff	?___flsub+1,powf@z+1
  6874   007CDA  C03A  F1B6         	movff	?___flsub+2,powf@z+2
  6875   007CDE  C03B  F1B7         	movff	?___flsub+3,powf@z+3
  6876   007CE2  C1B4  F1A8         	movff	powf@z,powf@j
  6877   007CE6  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  6878   007CEA  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  6879   007CEE  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  6880   007CF2  C188  F068         	movff	powf@n,??_powf
  6881   007CF6  C189  F069         	movff	powf@n+1,??_powf+1
  6882   007CFA  C18A  F06A         	movff	powf@n+2,??_powf+2
  6883   007CFE  C18B  F06B         	movff	powf@n+3,??_powf+3
  6884   007D02  0E17               	movlw	23
  6885   007D04                     u9305:
  6886   007D04  90D8               	bcf	status,0,c
  6887   007D06  0100               	movlb	0	; () banked
  6888   007D08  3768               	rlcf	??_powf& (0+255),f,b
  6889   007D0A  3769               	rlcf	(??_powf+1)& (0+255),f,b
  6890   007D0C  376A               	rlcf	(??_powf+2)& (0+255),f,b
  6891   007D0E  376B               	rlcf	(??_powf+3)& (0+255),f,b
  6892   007D10  2EE8               	decfsz	wreg,f,c
  6893   007D12  EF82  F03E         	goto	u9305
  6894   007D16  5168               	movf	??_powf& (0+255),w,b
  6895   007D18  0101               	movlb	1	; () banked
  6896   007D1A  27A8               	addwf	powf@j& (0+255),f,b
  6897   007D1C  0100               	movlb	0	; () banked
  6898   007D1E  5169               	movf	(??_powf+1)& (0+255),w,b
  6899   007D20  0101               	movlb	1	; () banked
  6900   007D22  23A9               	addwfc	(powf@j+1)& (0+255),f,b
  6901   007D24  0100               	movlb	0	; () banked
  6902   007D26  516A               	movf	(??_powf+2)& (0+255),w,b
  6903   007D28  0101               	movlb	1	; () banked
  6904   007D2A  23AA               	addwfc	(powf@j+2)& (0+255),f,b
  6905   007D2C  0100               	movlb	0	; () banked
  6906   007D2E  516B               	movf	(??_powf+3)& (0+255),w,b
  6907   007D30  0101               	movlb	1	; () banked
  6908   007D32  23AB               	addwfc	(powf@j+3)& (0+255),f,b
  6909   007D34                     
  6910                           ; BSR set to: 1
  6911   007D34  0E17               	movlw	23
  6912   007D36  0100               	movlb	0	; () banked
  6913   007D38  6F68               	movwf	??_powf& (0+255),b
  6914   007D3A  C1A8  F069         	movff	powf@j,??_powf+1
  6915   007D3E  C1A9  F06A         	movff	powf@j+1,??_powf+2
  6916   007D42  C1AA  F06B         	movff	powf@j+2,??_powf+3
  6917   007D46  C1AB  F06C         	movff	powf@j+3,??_powf+4
  6918   007D4A                     u9315:
  6919   007D4A  6768               	tstfsz	??_powf& (0+255),b
  6920   007D4C  EFAA  F03E         	goto	u9316
  6921   007D50  EFB2  F03E         	goto	u9317
  6922   007D54                     u9316:
  6923   007D54  356C               	rlcf	(??_powf+4)& (0+255),w,b
  6924   007D56  336C               	rrcf	(??_powf+4)& (0+255),f,b
  6925   007D58  336B               	rrcf	(??_powf+3)& (0+255),f,b
  6926   007D5A  336A               	rrcf	(??_powf+2)& (0+255),f,b
  6927   007D5C  3369               	rrcf	(??_powf+1)& (0+255),f,b
  6928   007D5E  2F68               	decfsz	??_powf& (0+255),f,b
  6929   007D60  EFA5  F03E         	goto	u9315
  6930   007D64                     u9317:
  6931   007D64  0100               	movlb	0	; () banked
  6932   007D66  BF6C               	btfsc	(??_powf+4)& (0+255),7,b
  6933   007D68  EFC2  F03E         	goto	u9320
  6934   007D6C  516C               	movf	(??_powf+4)& (0+255),w,b
  6935   007D6E  116B               	iorwf	(??_powf+3)& (0+255),w,b
  6936   007D70  116A               	iorwf	(??_powf+2)& (0+255),w,b
  6937   007D72  E106               	bnz	u9321
  6938   007D74  0569               	decf	(??_powf+1)& (0+255),w,b
  6939   007D76  B0D8               	btfsc	status,0,c
  6940   007D78  EFC0  F03E         	goto	u9321
  6941   007D7C  EFC2  F03E         	goto	u9320
  6942   007D80                     u9321:
  6943   007D80  EFDA  F03E         	goto	l1193
  6944   007D84                     u9320:
  6945   007D84                     
  6946                           ; BSR set to: 0
  6947   007D84  C1B4  F038         	movff	powf@z,scalbnf@x
  6948   007D88  C1B5  F039         	movff	powf@z+1,scalbnf@x+1
  6949   007D8C  C1B6  F03A         	movff	powf@z+2,scalbnf@x+2
  6950   007D90  C1B7  F03B         	movff	powf@z+3,scalbnf@x+3
  6951   007D94  C188  F03C         	movff	powf@n,scalbnf@n
  6952   007D98  C189  F03D         	movff	powf@n+1,scalbnf@n+1
  6953   007D9C  EC1F  F018         	call	_scalbnf	;wreg free
  6954   007DA0  C038  F1B4         	movff	?_scalbnf,powf@z
  6955   007DA4  C039  F1B5         	movff	?_scalbnf+1,powf@z+1
  6956   007DA8  C03A  F1B6         	movff	?_scalbnf+2,powf@z+2
  6957   007DAC  C03B  F1B7         	movff	?_scalbnf+3,powf@z+3
  6958   007DB0  EFE2  F03E         	goto	l7198
  6959   007DB4                     l1193:
  6960                           
  6961                           ; BSR set to: 0
  6962   007DB4  C1A8  F1B4         	movff	powf@j,powf@z
  6963   007DB8  C1A9  F1B5         	movff	powf@j+1,powf@z+1
  6964   007DBC  C1AA  F1B6         	movff	powf@j+2,powf@z+2
  6965   007DC0  C1AB  F1B7         	movff	powf@j+3,powf@z+3
  6966   007DC4                     l7198:
  6967   007DC4  0101               	movlb	1	; () banked
  6968   007DC6  51B4               	movf	powf@z& (0+255),w,b
  6969   007DC8  11B5               	iorwf	(powf@z+1)& (0+255),w,b
  6970   007DCA  11B6               	iorwf	(powf@z+2)& (0+255),w,b
  6971   007DCC  11B7               	iorwf	(powf@z+3)& (0+255),w,b
  6972   007DCE  B4D8               	btfsc	status,2,c
  6973   007DD0  EFEC  F03E         	goto	u9331
  6974   007DD4  EFEE  F03E         	goto	u9330
  6975   007DD8                     u9331:
  6976   007DD8  EFD5  F02F         	goto	l6884
  6977   007DDC                     u9330:
  6978   007DDC                     
  6979                           ; BSR set to: 1
  6980   007DDC  5164               	movf	powf@sn& (0+255),w,b
  6981   007DDE  1BB4               	xorwf	powf@z& (0+255),f,b
  6982   007DE0  5165               	movf	(powf@sn+1)& (0+255),w,b
  6983   007DE2  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
  6984   007DE4  5166               	movf	(powf@sn+2)& (0+255),w,b
  6985   007DE6  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
  6986   007DE8  5167               	movf	(powf@sn+3)& (0+255),w,b
  6987   007DEA  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
  6988   007DEC  EFD5  F02F         	goto	l6884
  6989   007DF0                     l1127:
  6990   007DF0  0012               	return		;funcret
  6991   007DF2                     __end_of_powf:
  6992                           	callstack 0
  6993                           
  6994 ;; *************** function _sqrtf *****************
  6995 ;; Defined at:
  6996 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sqrtf.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  x               4    0[COMRAM] float 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;  ix              4   33[COMRAM] struct .
  7001 ;;  r               4   29[COMRAM] unsigned long 
  7002 ;;  m               4   25[COMRAM] long 
  7003 ;;  t               4   21[COMRAM] long 
  7004 ;;  q               4   17[COMRAM] long 
  7005 ;;  i               4   13[COMRAM] long 
  7006 ;;  s               4    9[COMRAM] long 
  7007 ;;  z               4    0        float 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  4    0[COMRAM] float 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7017 ;;      Params:         4       0       0       0       0       0       0       0       0
  7018 ;;      Locals:        28       0       0       0       0       0       0       0       0
  7019 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7020 ;;      Totals:        37       0       0       0       0       0       0       0       0
  7021 ;;Total ram usage:       37 bytes
  7022 ;; Hardware stack levels used: 1
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_powf
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text7
  7031   003D9A                     __ptext7:
  7032                           	callstack 0
  7033   003D9A                     _sqrtf:
  7034                           	callstack 28
  7035   003D9A  C001  F022         	movff	sqrtf@x,sqrtf@ix
  7036   003D9E  C002  F023         	movff	sqrtf@x+1,sqrtf@ix+1
  7037   003DA2  C003  F024         	movff	sqrtf@x+2,sqrtf@ix+2
  7038   003DA6  C004  F025         	movff	sqrtf@x+3,sqrtf@ix+3
  7039   003DAA  0E00               	movlw	0
  7040   003DAC  1422               	andwf	sqrtf@ix^0,w,c
  7041   003DAE  6E05               	movwf	??_sqrtf^0,c
  7042   003DB0  0E00               	movlw	0
  7043   003DB2  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7044   003DB4  6E06               	movwf	(??_sqrtf+1)^0,c
  7045   003DB6  0E80               	movlw	128
  7046   003DB8  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7047   003DBA  6E07               	movwf	(??_sqrtf+2)^0,c
  7048   003DBC  0E7F               	movlw	127
  7049   003DBE  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7050   003DC0  6E08               	movwf	(??_sqrtf+3)^0,c
  7051   003DC2  0E80               	movlw	128
  7052   003DC4  1807               	xorwf	(??_sqrtf+2)^0,w,c
  7053   003DC6  E109               	bnz	u8511
  7054   003DC8  0E7F               	movlw	127
  7055   003DCA  1808               	xorwf	(??_sqrtf+3)^0,w,c
  7056   003DCC  1005               	iorwf	??_sqrtf^0,w,c
  7057   003DCE  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7058   003DD0  A4D8               	btfss	status,2,c
  7059   003DD2  EFED  F01E         	goto	u8511
  7060   003DD6  EFEF  F01E         	goto	u8510
  7061   003DDA                     u8511:
  7062   003DDA  EF1F  F01F         	goto	l6608
  7063   003DDE                     u8510:
  7064   003DDE  0EFF               	movlw	255
  7065   003DE0  1422               	andwf	sqrtf@ix^0,w,c
  7066   003DE2  6E05               	movwf	??_sqrtf^0,c
  7067   003DE4  0EFF               	movlw	255
  7068   003DE6  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7069   003DE8  6E06               	movwf	(??_sqrtf+1)^0,c
  7070   003DEA  0E7F               	movlw	127
  7071   003DEC  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7072   003DEE  6E07               	movwf	(??_sqrtf+2)^0,c
  7073   003DF0  0E00               	movlw	0
  7074   003DF2  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7075   003DF4  6E08               	movwf	(??_sqrtf+3)^0,c
  7076   003DF6  5005               	movf	??_sqrtf^0,w,c
  7077   003DF8  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7078   003DFA  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7079   003DFC  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7080   003DFE  A4D8               	btfss	status,2,c
  7081   003E00  EF04  F01F         	goto	u8521
  7082   003E04  EF06  F01F         	goto	u8520
  7083   003E08                     u8521:
  7084   003E08  EF0D  F01F         	goto	l6602
  7085   003E0C                     u8520:
  7086   003E0C  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7087   003E0E  EF0D  F01F         	goto	u8530
  7088   003E12  EF0B  F01F         	goto	u8531
  7089   003E16                     u8531:
  7090   003E16  EF15  F01F         	goto	l6604
  7091   003E1A                     u8530:
  7092   003E1A                     l6602:
  7093   003E1A  0EFF               	movlw	255
  7094   003E1C  1222               	iorwf	sqrtf@ix^0,f,c
  7095   003E1E  0EFF               	movlw	255
  7096   003E20  1223               	iorwf	(sqrtf@ix+1)^0,f,c
  7097   003E22  0E7F               	movlw	127
  7098   003E24  1224               	iorwf	(sqrtf@ix+2)^0,f,c
  7099   003E26  0E00               	movlw	0
  7100   003E28  1225               	iorwf	(sqrtf@ix+3)^0,f,c
  7101   003E2A                     l6604:
  7102   003E2A  C022  F001         	movff	sqrtf@ix,?_sqrtf
  7103   003E2E  C023  F002         	movff	sqrtf@ix+1,?_sqrtf+1
  7104   003E32  C024  F003         	movff	sqrtf@ix+2,?_sqrtf+2
  7105   003E36  C025  F004         	movff	sqrtf@ix+3,?_sqrtf+3
  7106   003E3A  EFBB  F020         	goto	l1219
  7107   003E3E                     l6608:
  7108   003E3E  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7109   003E40  EF2E  F01F         	goto	u8540
  7110   003E44  5025               	movf	(sqrtf@ix+3)^0,w,c
  7111   003E46  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7112   003E48  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7113   003E4A  E106               	bnz	u8541
  7114   003E4C  0422               	decf	sqrtf@ix^0,w,c
  7115   003E4E  B0D8               	btfsc	status,0,c
  7116   003E50  EF2C  F01F         	goto	u8541
  7117   003E54  EF2E  F01F         	goto	u8540
  7118   003E58                     u8541:
  7119   003E58  EF65  F01F         	goto	l6624
  7120   003E5C                     u8540:
  7121   003E5C  0EFF               	movlw	255
  7122   003E5E  1422               	andwf	sqrtf@ix^0,w,c
  7123   003E60  6E05               	movwf	??_sqrtf^0,c
  7124   003E62  0EFF               	movlw	255
  7125   003E64  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7126   003E66  6E06               	movwf	(??_sqrtf+1)^0,c
  7127   003E68  0EFF               	movlw	255
  7128   003E6A  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7129   003E6C  6E07               	movwf	(??_sqrtf+2)^0,c
  7130   003E6E  0E7F               	movlw	127
  7131   003E70  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7132   003E72  6E08               	movwf	(??_sqrtf+3)^0,c
  7133   003E74  5005               	movf	??_sqrtf^0,w,c
  7134   003E76  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7135   003E78  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7136   003E7A  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7137   003E7C  A4D8               	btfss	status,2,c
  7138   003E7E  EF43  F01F         	goto	u8551
  7139   003E82  EF45  F01F         	goto	u8550
  7140   003E86                     u8551:
  7141   003E86  EF4F  F01F         	goto	l6616
  7142   003E8A                     u8550:
  7143   003E8A  0E00               	movlw	0
  7144   003E8C  6E01               	movwf	?_sqrtf^0,c
  7145   003E8E  0E00               	movlw	0
  7146   003E90  6E02               	movwf	(?_sqrtf+1)^0,c
  7147   003E92  0E00               	movlw	0
  7148   003E94  6E03               	movwf	(?_sqrtf+2)^0,c
  7149   003E96  0E00               	movlw	0
  7150   003E98  6E04               	movwf	(?_sqrtf+3)^0,c
  7151   003E9A  EFBB  F020         	goto	l1219
  7152   003E9E                     l6616:
  7153   003E9E  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
  7154   003EA0  EF56  F01F         	goto	u8560
  7155   003EA4  EF54  F01F         	goto	u8561
  7156   003EA8                     u8561:
  7157   003EA8  EF65  F01F         	goto	l6624
  7158   003EAC                     u8560:
  7159   003EAC  0E00               	movlw	0
  7160   003EAE  0102               	movlb	2	; () banked
  7161   003EB0  6F31               	movwf	(_errno+1)& (0+255),b
  7162   003EB2  0E21               	movlw	33
  7163   003EB4  6F30               	movwf	_errno& (0+255),b
  7164   003EB6  0EFF               	movlw	255
  7165   003EB8  6E22               	movwf	sqrtf@ix^0,c
  7166   003EBA  0EFF               	movlw	255
  7167   003EBC  6E23               	movwf	(sqrtf@ix+1)^0,c
  7168   003EBE  0EFF               	movlw	255
  7169   003EC0  6E24               	movwf	(sqrtf@ix+2)^0,c
  7170   003EC2  0E7F               	movlw	127
  7171   003EC4  6E25               	movwf	(sqrtf@ix+3)^0,c
  7172   003EC6  EF15  F01F         	goto	l6604
  7173   003ECA                     l6624:
  7174   003ECA  0E17               	movlw	23
  7175   003ECC  6E05               	movwf	??_sqrtf^0,c
  7176   003ECE  C022  F006         	movff	sqrtf@ix,??_sqrtf+1
  7177   003ED2  C023  F007         	movff	sqrtf@ix+1,??_sqrtf+2
  7178   003ED6  C024  F008         	movff	sqrtf@ix+2,??_sqrtf+3
  7179   003EDA  C025  F009         	movff	sqrtf@ix+3,??_sqrtf+4
  7180   003EDE                     u8575:
  7181   003EDE  6605               	tstfsz	??_sqrtf^0,c
  7182   003EE0  EF74  F01F         	goto	u8576
  7183   003EE4  EF7C  F01F         	goto	u8577
  7184   003EE8                     u8576:
  7185   003EE8  3409               	rlcf	(??_sqrtf+4)^0,w,c
  7186   003EEA  3209               	rrcf	(??_sqrtf+4)^0,f,c
  7187   003EEC  3208               	rrcf	(??_sqrtf+3)^0,f,c
  7188   003EEE  3207               	rrcf	(??_sqrtf+2)^0,f,c
  7189   003EF0  3206               	rrcf	(??_sqrtf+1)^0,f,c
  7190   003EF2  2E05               	decfsz	??_sqrtf^0,f,c
  7191   003EF4  EF6F  F01F         	goto	u8575
  7192   003EF8                     u8577:
  7193   003EF8  C006  F01A         	movff	??_sqrtf+1,sqrtf@m
  7194   003EFC  C007  F01B         	movff	??_sqrtf+2,sqrtf@m+1
  7195   003F00  C008  F01C         	movff	??_sqrtf+3,sqrtf@m+2
  7196   003F04  C009  F01D         	movff	??_sqrtf+4,sqrtf@m+3
  7197   003F08  501A               	movf	sqrtf@m^0,w,c
  7198   003F0A  101B               	iorwf	(sqrtf@m+1)^0,w,c
  7199   003F0C  101C               	iorwf	(sqrtf@m+2)^0,w,c
  7200   003F0E  101D               	iorwf	(sqrtf@m+3)^0,w,c
  7201   003F10  A4D8               	btfss	status,2,c
  7202   003F12  EF8D  F01F         	goto	u8581
  7203   003F16  EF8F  F01F         	goto	u8580
  7204   003F1A                     u8581:
  7205   003F1A  EFBF  F01F         	goto	l1223
  7206   003F1E                     u8580:
  7207   003F1E  0E00               	movlw	0
  7208   003F20  6E0E               	movwf	sqrtf@i^0,c
  7209   003F22  0E00               	movlw	0
  7210   003F24  6E0F               	movwf	(sqrtf@i+1)^0,c
  7211   003F26  0E00               	movlw	0
  7212   003F28  6E10               	movwf	(sqrtf@i+2)^0,c
  7213   003F2A  0E00               	movlw	0
  7214   003F2C  6E11               	movwf	(sqrtf@i+3)^0,c
  7215   003F2E  EFA4  F01F         	goto	l6632
  7216   003F32                     l6628:
  7217   003F32  90D8               	bcf	status,0,c
  7218   003F34  3622               	rlcf	sqrtf@ix^0,f,c
  7219   003F36  3623               	rlcf	(sqrtf@ix+1)^0,f,c
  7220   003F38  3624               	rlcf	(sqrtf@ix+2)^0,f,c
  7221   003F3A  3625               	rlcf	(sqrtf@ix+3)^0,f,c
  7222   003F3C  0E01               	movlw	1
  7223   003F3E  260E               	addwf	sqrtf@i^0,f,c
  7224   003F40  0E00               	movlw	0
  7225   003F42  220F               	addwfc	(sqrtf@i+1)^0,f,c
  7226   003F44  2210               	addwfc	(sqrtf@i+2)^0,f,c
  7227   003F46  2211               	addwfc	(sqrtf@i+3)^0,f,c
  7228   003F48                     l6632:
  7229   003F48  AE24               	btfss	(sqrtf@ix+2)^0,7,c
  7230   003F4A  EFA9  F01F         	goto	u8591
  7231   003F4E  EFAB  F01F         	goto	u8590
  7232   003F52                     u8591:
  7233   003F52  EF99  F01F         	goto	l6628
  7234   003F56                     u8590:
  7235   003F56  0EFF               	movlw	255
  7236   003F58  240E               	addwf	sqrtf@i^0,w,c
  7237   003F5A  6E05               	movwf	??_sqrtf^0,c
  7238   003F5C  0EFF               	movlw	255
  7239   003F5E  200F               	addwfc	(sqrtf@i+1)^0,w,c
  7240   003F60  6E06               	movwf	(??_sqrtf+1)^0,c
  7241   003F62  0EFF               	movlw	255
  7242   003F64  2010               	addwfc	(sqrtf@i+2)^0,w,c
  7243   003F66  6E07               	movwf	(??_sqrtf+2)^0,c
  7244   003F68  0EFF               	movlw	255
  7245   003F6A  2011               	addwfc	(sqrtf@i+3)^0,w,c
  7246   003F6C  6E08               	movwf	(??_sqrtf+3)^0,c
  7247   003F6E  5005               	movf	??_sqrtf^0,w,c
  7248   003F70  5E1A               	subwf	sqrtf@m^0,f,c
  7249   003F72  5006               	movf	(??_sqrtf+1)^0,w,c
  7250   003F74  5A1B               	subwfb	(sqrtf@m+1)^0,f,c
  7251   003F76  5007               	movf	(??_sqrtf+2)^0,w,c
  7252   003F78  5A1C               	subwfb	(sqrtf@m+2)^0,f,c
  7253   003F7A  5008               	movf	(??_sqrtf+3)^0,w,c
  7254   003F7C  5A1D               	subwfb	(sqrtf@m+3)^0,f,c
  7255   003F7E                     l1223:
  7256   003F7E  0E81               	movlw	129
  7257   003F80  261A               	addwf	sqrtf@m^0,f,c
  7258   003F82  0EFF               	movlw	255
  7259   003F84  221B               	addwfc	(sqrtf@m+1)^0,f,c
  7260   003F86  0EFF               	movlw	255
  7261   003F88  221C               	addwfc	(sqrtf@m+2)^0,f,c
  7262   003F8A  0EFF               	movlw	255
  7263   003F8C  221D               	addwfc	(sqrtf@m+3)^0,f,c
  7264   003F8E  0EFF               	movlw	255
  7265   003F90  1422               	andwf	sqrtf@ix^0,w,c
  7266   003F92  6E05               	movwf	??_sqrtf^0,c
  7267   003F94  0EFF               	movlw	255
  7268   003F96  1423               	andwf	(sqrtf@ix+1)^0,w,c
  7269   003F98  6E06               	movwf	(??_sqrtf+1)^0,c
  7270   003F9A  0E7F               	movlw	127
  7271   003F9C  1424               	andwf	(sqrtf@ix+2)^0,w,c
  7272   003F9E  6E07               	movwf	(??_sqrtf+2)^0,c
  7273   003FA0  0E00               	movlw	0
  7274   003FA2  1425               	andwf	(sqrtf@ix+3)^0,w,c
  7275   003FA4  6E08               	movwf	(??_sqrtf+3)^0,c
  7276   003FA6  0E00               	movlw	0
  7277   003FA8  1005               	iorwf	??_sqrtf^0,w,c
  7278   003FAA  6E22               	movwf	sqrtf@ix^0,c
  7279   003FAC  0E00               	movlw	0
  7280   003FAE  1006               	iorwf	(??_sqrtf+1)^0,w,c
  7281   003FB0  6E23               	movwf	(sqrtf@ix+1)^0,c
  7282   003FB2  0E80               	movlw	128
  7283   003FB4  1007               	iorwf	(??_sqrtf+2)^0,w,c
  7284   003FB6  6E24               	movwf	(sqrtf@ix+2)^0,c
  7285   003FB8  0E00               	movlw	0
  7286   003FBA  1008               	iorwf	(??_sqrtf+3)^0,w,c
  7287   003FBC  6E25               	movwf	(sqrtf@ix+3)^0,c
  7288   003FBE  A01A               	btfss	sqrtf@m^0,0,c
  7289   003FC0  EFE4  F01F         	goto	u8601
  7290   003FC4  EFE6  F01F         	goto	u8600
  7291   003FC8                     u8601:
  7292   003FC8  EFEE  F01F         	goto	l1227
  7293   003FCC                     u8600:
  7294   003FCC  5022               	movf	sqrtf@ix^0,w,c
  7295   003FCE  2622               	addwf	sqrtf@ix^0,f,c
  7296   003FD0  5023               	movf	(sqrtf@ix+1)^0,w,c
  7297   003FD2  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7298   003FD4  5024               	movf	(sqrtf@ix+2)^0,w,c
  7299   003FD6  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7300   003FD8  5025               	movf	(sqrtf@ix+3)^0,w,c
  7301   003FDA  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7302   003FDC                     l1227:
  7303   003FDC  341D               	rlcf	(sqrtf@m+3)^0,w,c
  7304   003FDE  321D               	rrcf	(sqrtf@m+3)^0,f,c
  7305   003FE0  321C               	rrcf	(sqrtf@m+2)^0,f,c
  7306   003FE2  321B               	rrcf	(sqrtf@m+1)^0,f,c
  7307   003FE4  321A               	rrcf	sqrtf@m^0,f,c
  7308   003FE6  5022               	movf	sqrtf@ix^0,w,c
  7309   003FE8  2622               	addwf	sqrtf@ix^0,f,c
  7310   003FEA  5023               	movf	(sqrtf@ix+1)^0,w,c
  7311   003FEC  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7312   003FEE  5024               	movf	(sqrtf@ix+2)^0,w,c
  7313   003FF0  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7314   003FF2  5025               	movf	(sqrtf@ix+3)^0,w,c
  7315   003FF4  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7316   003FF6  0E00               	movlw	0
  7317   003FF8  6E0A               	movwf	sqrtf@s^0,c
  7318   003FFA  0E00               	movlw	0
  7319   003FFC  6E0B               	movwf	(sqrtf@s+1)^0,c
  7320   003FFE  0E00               	movlw	0
  7321   004000  6E0C               	movwf	(sqrtf@s+2)^0,c
  7322   004002  0E00               	movlw	0
  7323   004004  6E0D               	movwf	(sqrtf@s+3)^0,c
  7324   004006  C00A  F012         	movff	sqrtf@s,sqrtf@q
  7325   00400A  C00B  F013         	movff	sqrtf@s+1,sqrtf@q+1
  7326   00400E  C00C  F014         	movff	sqrtf@s+2,sqrtf@q+2
  7327   004012  C00D  F015         	movff	sqrtf@s+3,sqrtf@q+3
  7328   004016  0E00               	movlw	0
  7329   004018  6E1E               	movwf	sqrtf@r^0,c
  7330   00401A  0E00               	movlw	0
  7331   00401C  6E1F               	movwf	(sqrtf@r+1)^0,c
  7332   00401E  0E00               	movlw	0
  7333   004020  6E20               	movwf	(sqrtf@r+2)^0,c
  7334   004022  0E01               	movlw	1
  7335   004024  6E21               	movwf	(sqrtf@r+3)^0,c
  7336   004026  EF5D  F020         	goto	l6650
  7337   00402A                     l6644:
  7338   00402A  500A               	movf	sqrtf@s^0,w,c
  7339   00402C  241E               	addwf	sqrtf@r^0,w,c
  7340   00402E  6E16               	movwf	sqrtf@t^0,c
  7341   004030  500B               	movf	(sqrtf@s+1)^0,w,c
  7342   004032  201F               	addwfc	(sqrtf@r+1)^0,w,c
  7343   004034  6E17               	movwf	(sqrtf@t+1)^0,c
  7344   004036  500C               	movf	(sqrtf@s+2)^0,w,c
  7345   004038  2020               	addwfc	(sqrtf@r+2)^0,w,c
  7346   00403A  6E18               	movwf	(sqrtf@t+2)^0,c
  7347   00403C  500D               	movf	(sqrtf@s+3)^0,w,c
  7348   00403E  2021               	addwfc	(sqrtf@r+3)^0,w,c
  7349   004040  6E19               	movwf	(sqrtf@t+3)^0,c
  7350   004042  5016               	movf	sqrtf@t^0,w,c
  7351   004044  5C22               	subwf	sqrtf@ix^0,w,c
  7352   004046  5017               	movf	(sqrtf@t+1)^0,w,c
  7353   004048  5823               	subwfb	(sqrtf@ix+1)^0,w,c
  7354   00404A  5018               	movf	(sqrtf@t+2)^0,w,c
  7355   00404C  5824               	subwfb	(sqrtf@ix+2)^0,w,c
  7356   00404E  5025               	movf	(sqrtf@ix+3)^0,w,c
  7357   004050  0A80               	xorlw	128
  7358   004052  6E05               	movwf	??_sqrtf^0,c
  7359   004054  5019               	movf	(sqrtf@t+3)^0,w,c
  7360   004056  0A80               	xorlw	128
  7361   004058  5805               	subwfb	??_sqrtf^0,w,c
  7362   00405A  A0D8               	btfss	status,0,c
  7363   00405C  EF32  F020         	goto	u8611
  7364   004060  EF34  F020         	goto	u8610
  7365   004064                     u8611:
  7366   004064  EF50  F020         	goto	l1230
  7367   004068                     u8610:
  7368   004068  5016               	movf	sqrtf@t^0,w,c
  7369   00406A  241E               	addwf	sqrtf@r^0,w,c
  7370   00406C  6E0A               	movwf	sqrtf@s^0,c
  7371   00406E  5017               	movf	(sqrtf@t+1)^0,w,c
  7372   004070  201F               	addwfc	(sqrtf@r+1)^0,w,c
  7373   004072  6E0B               	movwf	(sqrtf@s+1)^0,c
  7374   004074  5018               	movf	(sqrtf@t+2)^0,w,c
  7375   004076  2020               	addwfc	(sqrtf@r+2)^0,w,c
  7376   004078  6E0C               	movwf	(sqrtf@s+2)^0,c
  7377   00407A  5019               	movf	(sqrtf@t+3)^0,w,c
  7378   00407C  2021               	addwfc	(sqrtf@r+3)^0,w,c
  7379   00407E  6E0D               	movwf	(sqrtf@s+3)^0,c
  7380   004080  5016               	movf	sqrtf@t^0,w,c
  7381   004082  5E22               	subwf	sqrtf@ix^0,f,c
  7382   004084  5017               	movf	(sqrtf@t+1)^0,w,c
  7383   004086  5A23               	subwfb	(sqrtf@ix+1)^0,f,c
  7384   004088  5018               	movf	(sqrtf@t+2)^0,w,c
  7385   00408A  5A24               	subwfb	(sqrtf@ix+2)^0,f,c
  7386   00408C  5019               	movf	(sqrtf@t+3)^0,w,c
  7387   00408E  5A25               	subwfb	(sqrtf@ix+3)^0,f,c
  7388   004090  501E               	movf	sqrtf@r^0,w,c
  7389   004092  2612               	addwf	sqrtf@q^0,f,c
  7390   004094  501F               	movf	(sqrtf@r+1)^0,w,c
  7391   004096  2213               	addwfc	(sqrtf@q+1)^0,f,c
  7392   004098  5020               	movf	(sqrtf@r+2)^0,w,c
  7393   00409A  2214               	addwfc	(sqrtf@q+2)^0,f,c
  7394   00409C  5021               	movf	(sqrtf@r+3)^0,w,c
  7395   00409E  2215               	addwfc	(sqrtf@q+3)^0,f,c
  7396   0040A0                     l1230:
  7397   0040A0  5022               	movf	sqrtf@ix^0,w,c
  7398   0040A2  2622               	addwf	sqrtf@ix^0,f,c
  7399   0040A4  5023               	movf	(sqrtf@ix+1)^0,w,c
  7400   0040A6  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7401   0040A8  5024               	movf	(sqrtf@ix+2)^0,w,c
  7402   0040AA  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7403   0040AC  5025               	movf	(sqrtf@ix+3)^0,w,c
  7404   0040AE  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7405   0040B0  90D8               	bcf	status,0,c
  7406   0040B2  3221               	rrcf	(sqrtf@r+3)^0,f,c
  7407   0040B4  3220               	rrcf	(sqrtf@r+2)^0,f,c
  7408   0040B6  321F               	rrcf	(sqrtf@r+1)^0,f,c
  7409   0040B8  321E               	rrcf	sqrtf@r^0,f,c
  7410   0040BA                     l6650:
  7411   0040BA  501E               	movf	sqrtf@r^0,w,c
  7412   0040BC  101F               	iorwf	(sqrtf@r+1)^0,w,c
  7413   0040BE  1020               	iorwf	(sqrtf@r+2)^0,w,c
  7414   0040C0  1021               	iorwf	(sqrtf@r+3)^0,w,c
  7415   0040C2  A4D8               	btfss	status,2,c
  7416   0040C4  EF66  F020         	goto	u8621
  7417   0040C8  EF68  F020         	goto	u8620
  7418   0040CC                     u8621:
  7419   0040CC  EF15  F020         	goto	l6644
  7420   0040D0                     u8620:
  7421   0040D0  5022               	movf	sqrtf@ix^0,w,c
  7422   0040D2  1023               	iorwf	(sqrtf@ix+1)^0,w,c
  7423   0040D4  1024               	iorwf	(sqrtf@ix+2)^0,w,c
  7424   0040D6  1025               	iorwf	(sqrtf@ix+3)^0,w,c
  7425   0040D8  B4D8               	btfsc	status,2,c
  7426   0040DA  EF71  F020         	goto	u8631
  7427   0040DE  EF73  F020         	goto	u8630
  7428   0040E2                     u8631:
  7429   0040E2  EF87  F020         	goto	l1232
  7430   0040E6                     u8630:
  7431   0040E6  0E01               	movlw	1
  7432   0040E8  1412               	andwf	sqrtf@q^0,w,c
  7433   0040EA  6E05               	movwf	??_sqrtf^0,c
  7434   0040EC  0E00               	movlw	0
  7435   0040EE  1413               	andwf	(sqrtf@q+1)^0,w,c
  7436   0040F0  6E06               	movwf	(??_sqrtf+1)^0,c
  7437   0040F2  0E00               	movlw	0
  7438   0040F4  1414               	andwf	(sqrtf@q+2)^0,w,c
  7439   0040F6  6E07               	movwf	(??_sqrtf+2)^0,c
  7440   0040F8  0E00               	movlw	0
  7441   0040FA  1415               	andwf	(sqrtf@q+3)^0,w,c
  7442   0040FC  6E08               	movwf	(??_sqrtf+3)^0,c
  7443   0040FE  5005               	movf	??_sqrtf^0,w,c
  7444   004100  2612               	addwf	sqrtf@q^0,f,c
  7445   004102  5006               	movf	(??_sqrtf+1)^0,w,c
  7446   004104  2213               	addwfc	(sqrtf@q+1)^0,f,c
  7447   004106  5007               	movf	(??_sqrtf+2)^0,w,c
  7448   004108  2214               	addwfc	(sqrtf@q+2)^0,f,c
  7449   00410A  5008               	movf	(??_sqrtf+3)^0,w,c
  7450   00410C  2215               	addwfc	(sqrtf@q+3)^0,f,c
  7451   00410E                     l1232:
  7452   00410E  C012  F005         	movff	sqrtf@q,??_sqrtf
  7453   004112  C013  F006         	movff	sqrtf@q+1,??_sqrtf+1
  7454   004116  C014  F007         	movff	sqrtf@q+2,??_sqrtf+2
  7455   00411A  C015  F008         	movff	sqrtf@q+3,??_sqrtf+3
  7456   00411E  3408               	rlcf	(??_sqrtf+3)^0,w,c
  7457   004120  3208               	rrcf	(??_sqrtf+3)^0,f,c
  7458   004122  3207               	rrcf	(??_sqrtf+2)^0,f,c
  7459   004124  3206               	rrcf	(??_sqrtf+1)^0,f,c
  7460   004126  3205               	rrcf	??_sqrtf^0,f,c
  7461   004128  0E00               	movlw	0
  7462   00412A  2405               	addwf	??_sqrtf^0,w,c
  7463   00412C  6E22               	movwf	sqrtf@ix^0,c
  7464   00412E  0E00               	movlw	0
  7465   004130  2006               	addwfc	(??_sqrtf+1)^0,w,c
  7466   004132  6E23               	movwf	(sqrtf@ix+1)^0,c
  7467   004134  0E00               	movlw	0
  7468   004136  2007               	addwfc	(??_sqrtf+2)^0,w,c
  7469   004138  6E24               	movwf	(sqrtf@ix+2)^0,c
  7470   00413A  0E3F               	movlw	63
  7471   00413C  2008               	addwfc	(??_sqrtf+3)^0,w,c
  7472   00413E  6E25               	movwf	(sqrtf@ix+3)^0,c
  7473   004140  C01A  F005         	movff	sqrtf@m,??_sqrtf
  7474   004144  C01B  F006         	movff	sqrtf@m+1,??_sqrtf+1
  7475   004148  C01C  F007         	movff	sqrtf@m+2,??_sqrtf+2
  7476   00414C  C01D  F008         	movff	sqrtf@m+3,??_sqrtf+3
  7477   004150  0E17               	movlw	23
  7478   004152                     u8645:
  7479   004152  90D8               	bcf	status,0,c
  7480   004154  3605               	rlcf	??_sqrtf^0,f,c
  7481   004156  3606               	rlcf	(??_sqrtf+1)^0,f,c
  7482   004158  3607               	rlcf	(??_sqrtf+2)^0,f,c
  7483   00415A  3608               	rlcf	(??_sqrtf+3)^0,f,c
  7484   00415C  2EE8               	decfsz	wreg,f,c
  7485   00415E  EFA9  F020         	goto	u8645
  7486   004162  5005               	movf	??_sqrtf^0,w,c
  7487   004164  2622               	addwf	sqrtf@ix^0,f,c
  7488   004166  5006               	movf	(??_sqrtf+1)^0,w,c
  7489   004168  2223               	addwfc	(sqrtf@ix+1)^0,f,c
  7490   00416A  5007               	movf	(??_sqrtf+2)^0,w,c
  7491   00416C  2224               	addwfc	(sqrtf@ix+2)^0,f,c
  7492   00416E  5008               	movf	(??_sqrtf+3)^0,w,c
  7493   004170  2225               	addwfc	(sqrtf@ix+3)^0,f,c
  7494   004172  EF15  F01F         	goto	l6604
  7495   004176                     l1219:
  7496   004176  0012               	return		;funcret
  7497   004178                     __end_of_sqrtf:
  7498                           	callstack 0
  7499                           
  7500 ;; *************** function _scalbnf *****************
  7501 ;; Defined at:
  7502 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\scalbnf.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;  x               4   55[COMRAM] float 
  7505 ;;  n               2   59[COMRAM] int 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;  y               4   69[COMRAM] float 
  7508 ;;  u               4   65[COMRAM] struct .
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  4   55[COMRAM] float 
  7511 ;; Registers used:
  7512 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7518 ;;      Params:         6       0       0       0       0       0       0       0       0
  7519 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7520 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7521 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7522 ;;Total ram usage:       18 bytes
  7523 ;; Hardware stack levels used: 1
  7524 ;; Hardware stack levels required when called: 1
  7525 ;; This function calls:
  7526 ;;		___flmul
  7527 ;; This function is called by:
  7528 ;;		_powf
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text8
  7533   00303E                     __ptext8:
  7534                           	callstack 0
  7535   00303E                     _scalbnf:
  7536                           	callstack 27
  7537   00303E  C038  F046         	movff	scalbnf@x,scalbnf@y
  7538   003042  C039  F047         	movff	scalbnf@x+1,scalbnf@y+1
  7539   003046  C03A  F048         	movff	scalbnf@x+2,scalbnf@y+2
  7540   00304A  C03B  F049         	movff	scalbnf@x+3,scalbnf@y+3
  7541   00304E  BE3D               	btfsc	(scalbnf@n+1)^0,7,c
  7542   003050  EF33  F018         	goto	u8651
  7543   003054  503D               	movf	(scalbnf@n+1)^0,w,c
  7544   003056  E109               	bnz	u8650
  7545   003058  0E80               	movlw	128
  7546   00305A  5C3C               	subwf	scalbnf@n^0,w,c
  7547   00305C  A0D8               	btfss	status,0,c
  7548   00305E  EF33  F018         	goto	u8651
  7549   003062  EF35  F018         	goto	u8650
  7550   003066                     u8651:
  7551   003066  EF93  F018         	goto	l6678
  7552   00306A                     u8650:
  7553   00306A  C046  F01F         	movff	scalbnf@y,___flmul@b
  7554   00306E  C047  F020         	movff	scalbnf@y+1,___flmul@b+1
  7555   003072  C048  F021         	movff	scalbnf@y+2,___flmul@b+2
  7556   003076  C049  F022         	movff	scalbnf@y+3,___flmul@b+3
  7557   00307A  0E00               	movlw	0
  7558   00307C  6E23               	movwf	___flmul@a^0,c
  7559   00307E  0E00               	movlw	0
  7560   003080  6E24               	movwf	(___flmul@a+1)^0,c
  7561   003082  0E00               	movlw	0
  7562   003084  6E25               	movwf	(___flmul@a+2)^0,c
  7563   003086  0E7F               	movlw	127
  7564   003088  6E26               	movwf	(___flmul@a+3)^0,c
  7565   00308A  ECBC  F020         	call	___flmul	;wreg free
  7566   00308E  C01F  F046         	movff	?___flmul,scalbnf@y
  7567   003092  C020  F047         	movff	?___flmul+1,scalbnf@y+1
  7568   003096  C021  F048         	movff	?___flmul+2,scalbnf@y+2
  7569   00309A  C022  F049         	movff	?___flmul+3,scalbnf@y+3
  7570   00309E  0E81               	movlw	129
  7571   0030A0  263C               	addwf	scalbnf@n^0,f,c
  7572   0030A2  0EFF               	movlw	255
  7573   0030A4  223D               	addwfc	(scalbnf@n+1)^0,f,c
  7574   0030A6  BE3D               	btfsc	(scalbnf@n+1)^0,7,c
  7575   0030A8  EF5F  F018         	goto	u8661
  7576   0030AC  503D               	movf	(scalbnf@n+1)^0,w,c
  7577   0030AE  E109               	bnz	u8660
  7578   0030B0  0E80               	movlw	128
  7579   0030B2  5C3C               	subwf	scalbnf@n^0,w,c
  7580   0030B4  A0D8               	btfss	status,0,c
  7581   0030B6  EF5F  F018         	goto	u8661
  7582   0030BA  EF61  F018         	goto	u8660
  7583   0030BE                     u8661:
  7584   0030BE  EFFD  F018         	goto	l6694
  7585   0030C2                     u8660:
  7586   0030C2  C046  F01F         	movff	scalbnf@y,___flmul@b
  7587   0030C6  C047  F020         	movff	scalbnf@y+1,___flmul@b+1
  7588   0030CA  C048  F021         	movff	scalbnf@y+2,___flmul@b+2
  7589   0030CE  C049  F022         	movff	scalbnf@y+3,___flmul@b+3
  7590   0030D2  0E00               	movlw	0
  7591   0030D4  6E23               	movwf	___flmul@a^0,c
  7592   0030D6  0E00               	movlw	0
  7593   0030D8  6E24               	movwf	(___flmul@a+1)^0,c
  7594   0030DA  0E00               	movlw	0
  7595   0030DC  6E25               	movwf	(___flmul@a+2)^0,c
  7596   0030DE  0E7F               	movlw	127
  7597   0030E0  6E26               	movwf	(___flmul@a+3)^0,c
  7598   0030E2  ECBC  F020         	call	___flmul	;wreg free
  7599   0030E6  C01F  F046         	movff	?___flmul,scalbnf@y
  7600   0030EA  C020  F047         	movff	?___flmul+1,scalbnf@y+1
  7601   0030EE  C021  F048         	movff	?___flmul+2,scalbnf@y+2
  7602   0030F2  C022  F049         	movff	?___flmul+3,scalbnf@y+3
  7603   0030F6  0E81               	movlw	129
  7604   0030F8  263C               	addwf	scalbnf@n^0,f,c
  7605   0030FA  0EFF               	movlw	255
  7606   0030FC  223D               	addwfc	(scalbnf@n+1)^0,f,c
  7607   0030FE  BE3D               	btfsc	(scalbnf@n+1)^0,7,c
  7608   003100  EF8B  F018         	goto	u8671
  7609   003104  503D               	movf	(scalbnf@n+1)^0,w,c
  7610   003106  E109               	bnz	u8670
  7611   003108  0E80               	movlw	128
  7612   00310A  5C3C               	subwf	scalbnf@n^0,w,c
  7613   00310C  A0D8               	btfss	status,0,c
  7614   00310E  EF8B  F018         	goto	u8671
  7615   003112  EF8D  F018         	goto	u8670
  7616   003116                     u8671:
  7617   003116  EFFD  F018         	goto	l6694
  7618   00311A                     u8670:
  7619   00311A  0E00               	movlw	0
  7620   00311C  6E3D               	movwf	(scalbnf@n+1)^0,c
  7621   00311E  0E7F               	movlw	127
  7622   003120  6E3C               	movwf	scalbnf@n^0,c
  7623   003122  EFFD  F018         	goto	l6694
  7624   003126                     l6678:
  7625   003126  AE3D               	btfss	(scalbnf@n+1)^0,7,c
  7626   003128  EF9F  F018         	goto	u8681
  7627   00312C  0E82               	movlw	130
  7628   00312E  5C3C               	subwf	scalbnf@n^0,w,c
  7629   003130  0EFF               	movlw	255
  7630   003132  583D               	subwfb	(scalbnf@n+1)^0,w,c
  7631   003134  B0D8               	btfsc	status,0,c
  7632   003136  EF9F  F018         	goto	u8681
  7633   00313A  EFA1  F018         	goto	u8680
  7634   00313E                     u8681:
  7635   00313E  EFFD  F018         	goto	l6694
  7636   003142                     u8680:
  7637   003142  C046  F01F         	movff	scalbnf@y,___flmul@b
  7638   003146  C047  F020         	movff	scalbnf@y+1,___flmul@b+1
  7639   00314A  C048  F021         	movff	scalbnf@y+2,___flmul@b+2
  7640   00314E  C049  F022         	movff	scalbnf@y+3,___flmul@b+3
  7641   003152  0E00               	movlw	0
  7642   003154  6E23               	movwf	___flmul@a^0,c
  7643   003156  0E00               	movlw	0
  7644   003158  6E24               	movwf	(___flmul@a+1)^0,c
  7645   00315A  0E80               	movlw	128
  7646   00315C  6E25               	movwf	(___flmul@a+2)^0,c
  7647   00315E  0E0C               	movlw	12
  7648   003160  6E26               	movwf	(___flmul@a+3)^0,c
  7649   003162  ECBC  F020         	call	___flmul	;wreg free
  7650   003166  C01F  F046         	movff	?___flmul,scalbnf@y
  7651   00316A  C020  F047         	movff	?___flmul+1,scalbnf@y+1
  7652   00316E  C021  F048         	movff	?___flmul+2,scalbnf@y+2
  7653   003172  C022  F049         	movff	?___flmul+3,scalbnf@y+3
  7654   003176  0E66               	movlw	102
  7655   003178  263C               	addwf	scalbnf@n^0,f,c
  7656   00317A  0E00               	movlw	0
  7657   00317C  223D               	addwfc	(scalbnf@n+1)^0,f,c
  7658   00317E  AE3D               	btfss	(scalbnf@n+1)^0,7,c
  7659   003180  EFCB  F018         	goto	u8691
  7660   003184  0E82               	movlw	130
  7661   003186  5C3C               	subwf	scalbnf@n^0,w,c
  7662   003188  0EFF               	movlw	255
  7663   00318A  583D               	subwfb	(scalbnf@n+1)^0,w,c
  7664   00318C  B0D8               	btfsc	status,0,c
  7665   00318E  EFCB  F018         	goto	u8691
  7666   003192  EFCD  F018         	goto	u8690
  7667   003196                     u8691:
  7668   003196  EFFD  F018         	goto	l6694
  7669   00319A                     u8690:
  7670   00319A  C046  F01F         	movff	scalbnf@y,___flmul@b
  7671   00319E  C047  F020         	movff	scalbnf@y+1,___flmul@b+1
  7672   0031A2  C048  F021         	movff	scalbnf@y+2,___flmul@b+2
  7673   0031A6  C049  F022         	movff	scalbnf@y+3,___flmul@b+3
  7674   0031AA  0E00               	movlw	0
  7675   0031AC  6E23               	movwf	___flmul@a^0,c
  7676   0031AE  0E00               	movlw	0
  7677   0031B0  6E24               	movwf	(___flmul@a+1)^0,c
  7678   0031B2  0E80               	movlw	128
  7679   0031B4  6E25               	movwf	(___flmul@a+2)^0,c
  7680   0031B6  0E0C               	movlw	12
  7681   0031B8  6E26               	movwf	(___flmul@a+3)^0,c
  7682   0031BA  ECBC  F020         	call	___flmul	;wreg free
  7683   0031BE  C01F  F046         	movff	?___flmul,scalbnf@y
  7684   0031C2  C020  F047         	movff	?___flmul+1,scalbnf@y+1
  7685   0031C6  C021  F048         	movff	?___flmul+2,scalbnf@y+2
  7686   0031CA  C022  F049         	movff	?___flmul+3,scalbnf@y+3
  7687   0031CE  0E66               	movlw	102
  7688   0031D0  263C               	addwf	scalbnf@n^0,f,c
  7689   0031D2  0E00               	movlw	0
  7690   0031D4  223D               	addwfc	(scalbnf@n+1)^0,f,c
  7691   0031D6  AE3D               	btfss	(scalbnf@n+1)^0,7,c
  7692   0031D8  EFF7  F018         	goto	u8701
  7693   0031DC  0E82               	movlw	130
  7694   0031DE  5C3C               	subwf	scalbnf@n^0,w,c
  7695   0031E0  0EFF               	movlw	255
  7696   0031E2  583D               	subwfb	(scalbnf@n+1)^0,w,c
  7697   0031E4  B0D8               	btfsc	status,0,c
  7698   0031E6  EFF7  F018         	goto	u8701
  7699   0031EA  EFF9  F018         	goto	u8700
  7700   0031EE                     u8701:
  7701   0031EE  EFFD  F018         	goto	l6694
  7702   0031F2                     u8700:
  7703   0031F2  0EFF               	movlw	255
  7704   0031F4  6E3D               	movwf	(scalbnf@n+1)^0,c
  7705   0031F6  0E82               	movlw	130
  7706   0031F8  6E3C               	movwf	scalbnf@n^0,c
  7707   0031FA                     l6694:
  7708   0031FA  0E7F               	movlw	127
  7709   0031FC  243C               	addwf	scalbnf@n^0,w,c
  7710   0031FE  6E3E               	movwf	??_scalbnf^0,c
  7711   003200  0E00               	movlw	0
  7712   003202  203D               	addwfc	(scalbnf@n+1)^0,w,c
  7713   003204  6E3F               	movwf	(??_scalbnf+1)^0,c
  7714   003206  6A40               	clrf	(??_scalbnf+2)^0,c
  7715   003208  6A41               	clrf	(??_scalbnf+3)^0,c
  7716   00320A  0E17               	movlw	23
  7717   00320C                     u8715:
  7718   00320C  90D8               	bcf	status,0,c
  7719   00320E  363E               	rlcf	??_scalbnf^0,f,c
  7720   003210  363F               	rlcf	(??_scalbnf+1)^0,f,c
  7721   003212  3640               	rlcf	(??_scalbnf+2)^0,f,c
  7722   003214  3641               	rlcf	(??_scalbnf+3)^0,f,c
  7723   003216  2EE8               	decfsz	wreg,f,c
  7724   003218  EF06  F019         	goto	u8715
  7725   00321C  C03E  F042         	movff	??_scalbnf,scalbnf@u
  7726   003220  C03F  F043         	movff	??_scalbnf+1,scalbnf@u+1
  7727   003224  C040  F044         	movff	??_scalbnf+2,scalbnf@u+2
  7728   003228  C041  F045         	movff	??_scalbnf+3,scalbnf@u+3
  7729   00322C  C042  F01F         	movff	scalbnf@u,___flmul@b
  7730   003230  C043  F020         	movff	scalbnf@u+1,___flmul@b+1
  7731   003234  C044  F021         	movff	scalbnf@u+2,___flmul@b+2
  7732   003238  C045  F022         	movff	scalbnf@u+3,___flmul@b+3
  7733   00323C  C046  F023         	movff	scalbnf@y,___flmul@a
  7734   003240  C047  F024         	movff	scalbnf@y+1,___flmul@a+1
  7735   003244  C048  F025         	movff	scalbnf@y+2,___flmul@a+2
  7736   003248  C049  F026         	movff	scalbnf@y+3,___flmul@a+3
  7737   00324C  ECBC  F020         	call	___flmul	;wreg free
  7738   003250  C01F  F038         	movff	?___flmul,scalbnf@x
  7739   003254  C020  F039         	movff	?___flmul+1,scalbnf@x+1
  7740   003258  C021  F03A         	movff	?___flmul+2,scalbnf@x+2
  7741   00325C  C022  F03B         	movff	?___flmul+3,scalbnf@x+3
  7742   003260  C038  F038         	movff	scalbnf@x,?_scalbnf
  7743   003264  C039  F039         	movff	scalbnf@x+1,?_scalbnf+1
  7744   003268  C03A  F03A         	movff	scalbnf@x+2,?_scalbnf+2
  7745   00326C  C03B  F03B         	movff	scalbnf@x+3,?_scalbnf+3
  7746   003270  0012               	return		;funcret
  7747   003272                     __end_of_scalbnf:
  7748                           	callstack 0
  7749                           
  7750 ;; *************** function _Calibrate_MQ2 *****************
  7751 ;; Defined at:
  7752 ;;		line 158 in file "newmain.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;		None
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;  voltage         4   36[BANK1 ] float 
  7757 ;;  Rs              4   30[BANK1 ] float 
  7758 ;;  adc_value       2   34[BANK1 ] unsigned int 
  7759 ;;  i               1   44[BANK1 ] unsigned char 
  7760 ;;  cal_msg        30    0[BANK1 ] unsigned char [30]
  7761 ;;  sum             4   40[BANK1 ] float 
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  1    wreg      void 
  7764 ;; Registers used:
  7765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7771 ;;      Params:         0       0       0       0       0       0       0       0       0
  7772 ;;      Locals:         0       0      45       0       0       0       0       0       0
  7773 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7774 ;;      Totals:         0       2      45       0       0       0       0       0       0
  7775 ;;Total ram usage:       47 bytes
  7776 ;; Hardware stack levels used: 1
  7777 ;; Hardware stack levels required when called: 8
  7778 ;; This function calls:
  7779 ;;		_ADC_Read
  7780 ;;		_UART_Write_Text
  7781 ;;		___fladd
  7782 ;;		___fldiv
  7783 ;;		___flmul
  7784 ;;		___flsub
  7785 ;;		___xxtofl
  7786 ;;		_sprintf
  7787 ;; This function is called by:
  7788 ;;		_Read_MQ2_Sensor
  7789 ;;		_main
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text9
  7794   002AE0                     __ptext9:
  7795                           	callstack 0
  7796   002AE0                     _Calibrate_MQ2:
  7797                           	callstack 21
  7798   002AE0                     
  7799                           ;newmain.c: 160:     float sum = 0;
  7800   002AE0  0E00               	movlw	0
  7801   002AE2  0101               	movlb	1	; () banked
  7802   002AE4  6F28               	movwf	Calibrate_MQ2@sum& (0+255),b
  7803   002AE6  0E00               	movlw	0
  7804   002AE8  6F29               	movwf	(Calibrate_MQ2@sum+1)& (0+255),b
  7805   002AEA  0E00               	movlw	0
  7806   002AEC  6F2A               	movwf	(Calibrate_MQ2@sum+2)& (0+255),b
  7807   002AEE  0E00               	movlw	0
  7808   002AF0  6F2B               	movwf	(Calibrate_MQ2@sum+3)& (0+255),b
  7809   002AF2                     
  7810                           ; BSR set to: 1
  7811                           ;newmain.c: 161:     for(unsigned char i = 0; i < 50; i++) {
  7812   002AF2  6B2C               	clrf	Calibrate_MQ2@i& (0+255),b
  7813   002AF4                     l6762:
  7814                           
  7815                           ; BSR set to: 1
  7816                           ;newmain.c: 162:         unsigned int adc_value = ADC_Read(2);
  7817   002AF4  0E02               	movlw	2
  7818   002AF6  EC02  F00E         	call	_ADC_Read
  7819   002AFA  C001  F122         	movff	?_ADC_Read,Calibrate_MQ2@adc_value
  7820   002AFE  C002  F123         	movff	?_ADC_Read+1,Calibrate_MQ2@adc_value+1
  7821   002B02                     
  7822                           ;newmain.c: 163:         float voltage = adc_value * (5.0 / 1024.0);
  7823   002B02  C122  F001         	movff	Calibrate_MQ2@adc_value,___xxtofl@val
  7824   002B06  C123  F002         	movff	Calibrate_MQ2@adc_value+1,___xxtofl@val+1
  7825   002B0A  6A03               	clrf	(___xxtofl@val+2)^0,c
  7826   002B0C  6A04               	clrf	(___xxtofl@val+3)^0,c
  7827   002B0E  0E00               	movlw	0
  7828   002B10  EC3A  F016         	call	___xxtofl
  7829   002B14  C001  F01F         	movff	?___xxtofl,___flmul@b
  7830   002B18  C002  F020         	movff	?___xxtofl+1,___flmul@b+1
  7831   002B1C  C003  F021         	movff	?___xxtofl+2,___flmul@b+2
  7832   002B20  C004  F022         	movff	?___xxtofl+3,___flmul@b+3
  7833   002B24  0E00               	movlw	0
  7834   002B26  6E23               	movwf	___flmul@a^0,c
  7835   002B28  0E00               	movlw	0
  7836   002B2A  6E24               	movwf	(___flmul@a+1)^0,c
  7837   002B2C  0EA0               	movlw	160
  7838   002B2E  6E25               	movwf	(___flmul@a+2)^0,c
  7839   002B30  0E3B               	movlw	59
  7840   002B32  6E26               	movwf	(___flmul@a+3)^0,c
  7841   002B34  ECBC  F020         	call	___flmul	;wreg free
  7842   002B38  C01F  F124         	movff	?___flmul,Calibrate_MQ2@voltage
  7843   002B3C  C020  F125         	movff	?___flmul+1,Calibrate_MQ2@voltage+1
  7844   002B40  C021  F126         	movff	?___flmul+2,Calibrate_MQ2@voltage+2
  7845   002B44  C022  F127         	movff	?___flmul+3,Calibrate_MQ2@voltage+3
  7846   002B48                     
  7847                           ;newmain.c: 164:         float Rs = (5.0 - voltage) / voltage;
  7848   002B48  C124  F03C         	movff	Calibrate_MQ2@voltage,___flsub@a
  7849   002B4C  C125  F03D         	movff	Calibrate_MQ2@voltage+1,___flsub@a+1
  7850   002B50  C126  F03E         	movff	Calibrate_MQ2@voltage+2,___flsub@a+2
  7851   002B54  C127  F03F         	movff	Calibrate_MQ2@voltage+3,___flsub@a+3
  7852   002B58  0E00               	movlw	0
  7853   002B5A  6E38               	movwf	___flsub@b^0,c
  7854   002B5C  0E00               	movlw	0
  7855   002B5E  6E39               	movwf	(___flsub@b+1)^0,c
  7856   002B60  0EA0               	movlw	160
  7857   002B62  6E3A               	movwf	(___flsub@b+2)^0,c
  7858   002B64  0E40               	movlw	64
  7859   002B66  6E3B               	movwf	(___flsub@b+3)^0,c
  7860   002B68  EC46  F00E         	call	___flsub	;wreg free
  7861   002B6C  C038  F040         	movff	?___flsub,___fldiv@b
  7862   002B70  C039  F041         	movff	?___flsub+1,___fldiv@b+1
  7863   002B74  C03A  F042         	movff	?___flsub+2,___fldiv@b+2
  7864   002B78  C03B  F043         	movff	?___flsub+3,___fldiv@b+3
  7865   002B7C  C124  F044         	movff	Calibrate_MQ2@voltage,___fldiv@a
  7866   002B80  C125  F045         	movff	Calibrate_MQ2@voltage+1,___fldiv@a+1
  7867   002B84  C126  F046         	movff	Calibrate_MQ2@voltage+2,___fldiv@a+2
  7868   002B88  C127  F047         	movff	Calibrate_MQ2@voltage+3,___fldiv@a+3
  7869   002B8C  EC05  F01D         	call	___fldiv	;wreg free
  7870   002B90  C040  F11E         	movff	?___fldiv,Calibrate_MQ2@Rs
  7871   002B94  C041  F11F         	movff	?___fldiv+1,Calibrate_MQ2@Rs+1
  7872   002B98  C042  F120         	movff	?___fldiv+2,Calibrate_MQ2@Rs+2
  7873   002B9C  C043  F121         	movff	?___fldiv+3,Calibrate_MQ2@Rs+3
  7874   002BA0                     
  7875                           ;newmain.c: 165:         sum += Rs;
  7876   002BA0  C128  F00F         	movff	Calibrate_MQ2@sum,___fladd@b
  7877   002BA4  C129  F010         	movff	Calibrate_MQ2@sum+1,___fladd@b+1
  7878   002BA8  C12A  F011         	movff	Calibrate_MQ2@sum+2,___fladd@b+2
  7879   002BAC  C12B  F012         	movff	Calibrate_MQ2@sum+3,___fladd@b+3
  7880   002BB0  C11E  F013         	movff	Calibrate_MQ2@Rs,___fladd@a
  7881   002BB4  C11F  F014         	movff	Calibrate_MQ2@Rs+1,___fladd@a+1
  7882   002BB8  C120  F015         	movff	Calibrate_MQ2@Rs+2,___fladd@a+2
  7883   002BBC  C121  F016         	movff	Calibrate_MQ2@Rs+3,___fladd@a+3
  7884   002BC0  ECCF  F022         	call	___fladd	;wreg free
  7885   002BC4  C00F  F128         	movff	?___fladd,Calibrate_MQ2@sum
  7886   002BC8  C010  F129         	movff	?___fladd+1,Calibrate_MQ2@sum+1
  7887   002BCC  C011  F12A         	movff	?___fladd+2,Calibrate_MQ2@sum+2
  7888   002BD0  C012  F12B         	movff	?___fladd+3,Calibrate_MQ2@sum+3
  7889   002BD4                     
  7890                           ;newmain.c: 166:         _delay((unsigned long)((200)*(8000000/4000.0)));
  7891   002BD4  0E03               	movlw	3
  7892   002BD6  0100               	movlb	0	; () banked
  7893   002BD8  6FD7               	movwf	(??_Calibrate_MQ2+1)& (0+255),b
  7894   002BDA  0E08               	movlw	8
  7895   002BDC  6FD6               	movwf	??_Calibrate_MQ2& (0+255),b
  7896   002BDE  0E77               	movlw	119
  7897   002BE0                     u9707:
  7898   002BE0  2EE8               	decfsz	wreg,f,c
  7899   002BE2  D7FE               	bra	u9707
  7900   002BE4  2FD6               	decfsz	??_Calibrate_MQ2& (0+255),f,b
  7901   002BE6  D7FC               	bra	u9707
  7902   002BE8  2FD7               	decfsz	(??_Calibrate_MQ2+1)& (0+255),f,b
  7903   002BEA  D7FA               	bra	u9707
  7904   002BEC                     
  7905                           ;newmain.c: 167:     }
  7906   002BEC  0101               	movlb	1	; () banked
  7907   002BEE  2B2C               	incf	Calibrate_MQ2@i& (0+255),f,b
  7908   002BF0                     
  7909                           ; BSR set to: 1
  7910   002BF0  0E31               	movlw	49
  7911   002BF2  652C               	cpfsgt	Calibrate_MQ2@i& (0+255),b
  7912   002BF4  EFFE  F015         	goto	u8751
  7913   002BF8  EF00  F016         	goto	u8750
  7914   002BFC                     u8751:
  7915   002BFC  EF7A  F015         	goto	l6762
  7916   002C00                     u8750:
  7917   002C00                     
  7918                           ; BSR set to: 1
  7919                           ;newmain.c: 168:     MQ2_Ro = sum / 50.0;
  7920   002C00  C128  F040         	movff	Calibrate_MQ2@sum,___fldiv@b
  7921   002C04  C129  F041         	movff	Calibrate_MQ2@sum+1,___fldiv@b+1
  7922   002C08  C12A  F042         	movff	Calibrate_MQ2@sum+2,___fldiv@b+2
  7923   002C0C  C12B  F043         	movff	Calibrate_MQ2@sum+3,___fldiv@b+3
  7924   002C10  0E00               	movlw	0
  7925   002C12  6E44               	movwf	___fldiv@a^0,c
  7926   002C14  0E00               	movlw	0
  7927   002C16  6E45               	movwf	(___fldiv@a+1)^0,c
  7928   002C18  0E48               	movlw	72
  7929   002C1A  6E46               	movwf	(___fldiv@a+2)^0,c
  7930   002C1C  0E42               	movlw	66
  7931   002C1E  6E47               	movwf	(___fldiv@a+3)^0,c
  7932   002C20  EC05  F01D         	call	___fldiv	;wreg free
  7933   002C24  C040  F291         	movff	?___fldiv,_MQ2_Ro
  7934   002C28  C041  F292         	movff	?___fldiv+1,_MQ2_Ro+1
  7935   002C2C  C042  F293         	movff	?___fldiv+2,_MQ2_Ro+2
  7936   002C30  C043  F294         	movff	?___fldiv+3,_MQ2_Ro+3
  7937   002C34                     
  7938                           ;newmain.c: 171:     UART_Write_Text("Calibracion MQ2 completada. Ro: ");
  7939   002C34  0EA8               	movlw	low STR_3
  7940   002C36  6E02               	movwf	UART_Write_Text@text^0,c
  7941   002C38  0E7F               	movlw	high STR_3
  7942   002C3A  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  7943   002C3C  EC04  F00F         	call	_UART_Write_Text	;wreg free
  7944   002C40                     
  7945                           ;newmain.c: 172:     char cal_msg[30];;newmain.c: 173:     sprintf(cal_msg, "%.2f\n", MQ
      +                          2_Ro);
  7946   002C40  0E00               	movlw	low Calibrate_MQ2@cal_msg
  7947   002C42  0100               	movlb	0	; () banked
  7948   002C44  6FB4               	movwf	sprintf@s& (0+255),b
  7949   002C46  0E01               	movlw	high Calibrate_MQ2@cal_msg
  7950   002C48  6FB5               	movwf	(sprintf@s+1)& (0+255),b
  7951   002C4A  0EEC               	movlw	low STR_4
  7952   002C4C  6FB6               	movwf	sprintf@fmt& (0+255),b
  7953   002C4E  0E7F               	movlw	high STR_4
  7954   002C50  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
  7955   002C52  C291  F0B8         	movff	_MQ2_Ro,?_sprintf+4
  7956   002C56  C292  F0B9         	movff	_MQ2_Ro+1,?_sprintf+5
  7957   002C5A  C293  F0BA         	movff	_MQ2_Ro+2,?_sprintf+6
  7958   002C5E  C294  F0BB         	movff	_MQ2_Ro+3,?_sprintf+7
  7959   002C62  EC24  F00E         	call	_sprintf	;wreg free
  7960   002C66                     
  7961                           ;newmain.c: 174:     UART_Write_Text(cal_msg);
  7962   002C66  0E00               	movlw	low Calibrate_MQ2@cal_msg
  7963   002C68  6E02               	movwf	UART_Write_Text@text^0,c
  7964   002C6A  0E01               	movlw	high Calibrate_MQ2@cal_msg
  7965   002C6C  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  7966   002C6E  EC04  F00F         	call	_UART_Write_Text	;wreg free
  7967   002C72  0012               	return		;funcret
  7968   002C74                     __end_of_Calibrate_MQ2:
  7969                           	callstack 0
  7970                           
  7971 ;; *************** function _Read_LM35 *****************
  7972 ;; Defined at:
  7973 ;;		line 180 in file "newmain.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;		None
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;  adc_value       2   92[COMRAM] unsigned int 
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7987 ;;      Params:         0       0       0       0       0       0       0       0       0
  7988 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7990 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7991 ;;Total ram usage:        6 bytes
  7992 ;; Hardware stack levels used: 1
  7993 ;; Hardware stack levels required when called: 2
  7994 ;; This function calls:
  7995 ;;		_ADC_Read_Average
  7996 ;;		___fldiv
  7997 ;;		___flmul
  7998 ;;		___xxtofl
  7999 ;; This function is called by:
  8000 ;;		_main
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           	psect	text10
  8005   0022CA                     __ptext10:
  8006                           	callstack 0
  8007   0022CA                     _Read_LM35:
  8008                           	callstack 28
  8009   0022CA                     
  8010                           ;newmain.c: 181:     unsigned int adc_value = ADC_Read_Average(0, 5);
  8011   0022CA  0E05               	movlw	5
  8012   0022CC  6E0E               	movwf	ADC_Read_Average@samples^0,c
  8013   0022CE  0E00               	movlw	0
  8014   0022D0  ECB7  F010         	call	_ADC_Read_Average
  8015   0022D4  C00E  F05D         	movff	?_ADC_Read_Average,Read_LM35@adc_value
  8016   0022D8  C00F  F05E         	movff	?_ADC_Read_Average+1,Read_LM35@adc_value+1
  8017   0022DC                     
  8018                           ;newmain.c: 183:     temperature = (adc_value * 5.0 / 1024.0) / 0.01;
  8019   0022DC  0E00               	movlw	0
  8020   0022DE  6E44               	movwf	___fldiv@a^0,c
  8021   0022E0  0E00               	movlw	0
  8022   0022E2  6E45               	movwf	(___fldiv@a+1)^0,c
  8023   0022E4  0E80               	movlw	128
  8024   0022E6  6E46               	movwf	(___fldiv@a+2)^0,c
  8025   0022E8  0E44               	movlw	68
  8026   0022EA  6E47               	movwf	(___fldiv@a+3)^0,c
  8027   0022EC  0E00               	movlw	0
  8028   0022EE  6E23               	movwf	___flmul@a^0,c
  8029   0022F0  0E00               	movlw	0
  8030   0022F2  6E24               	movwf	(___flmul@a+1)^0,c
  8031   0022F4  0EA0               	movlw	160
  8032   0022F6  6E25               	movwf	(___flmul@a+2)^0,c
  8033   0022F8  0E40               	movlw	64
  8034   0022FA  6E26               	movwf	(___flmul@a+3)^0,c
  8035   0022FC  C05D  F001         	movff	Read_LM35@adc_value,___xxtofl@val
  8036   002300  C05E  F002         	movff	Read_LM35@adc_value+1,___xxtofl@val+1
  8037   002304  6A03               	clrf	(___xxtofl@val+2)^0,c
  8038   002306  6A04               	clrf	(___xxtofl@val+3)^0,c
  8039   002308  0E00               	movlw	0
  8040   00230A  EC3A  F016         	call	___xxtofl
  8041   00230E  C001  F01F         	movff	?___xxtofl,___flmul@b
  8042   002312  C002  F020         	movff	?___xxtofl+1,___flmul@b+1
  8043   002316  C003  F021         	movff	?___xxtofl+2,___flmul@b+2
  8044   00231A  C004  F022         	movff	?___xxtofl+3,___flmul@b+3
  8045   00231E  ECBC  F020         	call	___flmul	;wreg free
  8046   002322  C01F  F040         	movff	?___flmul,___fldiv@b
  8047   002326  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  8048   00232A  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  8049   00232E  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  8050   002332  EC05  F01D         	call	___fldiv	;wreg free
  8051   002336  C040  F059         	movff	?___fldiv,_Read_LM35$1486
  8052   00233A  C041  F05A         	movff	?___fldiv+1,_Read_LM35$1486+1
  8053   00233E  C042  F05B         	movff	?___fldiv+2,_Read_LM35$1486+2
  8054   002342  C043  F05C         	movff	?___fldiv+3,_Read_LM35$1486+3
  8055   002346                     
  8056                           ;newmain.c: 183:     temperature = (adc_value * 5.0 / 1024.0) / 0.01;
  8057   002346  C059  F040         	movff	_Read_LM35$1486,___fldiv@b
  8058   00234A  C05A  F041         	movff	_Read_LM35$1486+1,___fldiv@b+1
  8059   00234E  C05B  F042         	movff	_Read_LM35$1486+2,___fldiv@b+2
  8060   002352  C05C  F043         	movff	_Read_LM35$1486+3,___fldiv@b+3
  8061   002356  0E0A               	movlw	10
  8062   002358  6E44               	movwf	___fldiv@a^0,c
  8063   00235A  0ED7               	movlw	215
  8064   00235C  6E45               	movwf	(___fldiv@a+1)^0,c
  8065   00235E  0E23               	movlw	35
  8066   002360  6E46               	movwf	(___fldiv@a+2)^0,c
  8067   002362  0E3C               	movlw	60
  8068   002364  6E47               	movwf	(___fldiv@a+3)^0,c
  8069   002366  EC05  F01D         	call	___fldiv	;wreg free
  8070   00236A  C040  F22C         	movff	?___fldiv,_temperature
  8071   00236E  C041  F22D         	movff	?___fldiv+1,_temperature+1
  8072   002372  C042  F22E         	movff	?___fldiv+2,_temperature+2
  8073   002376  C043  F22F         	movff	?___fldiv+3,_temperature+3
  8074   00237A  0012               	return		;funcret
  8075   00237C                     __end_of_Read_LM35:
  8076                           	callstack 0
  8077                           
  8078 ;; *************** function _Read_Flame_Sensor *****************
  8079 ;; Defined at:
  8080 ;;		line 189 in file "newmain.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;		None
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  intensity       4    6[BANK1 ] float 
  8085 ;;  voltage         4    0[BANK1 ] float 
  8086 ;;  adc_value       2    4[BANK1 ] unsigned int 
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      void 
  8089 ;; Registers used:
  8090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8096 ;;      Params:         0       0       0       0       0       0       0       0       0
  8097 ;;      Locals:         0       0      10       0       0       0       0       0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8099 ;;      Totals:         0       0      10       0       0       0       0       0       0
  8100 ;;Total ram usage:       10 bytes
  8101 ;; Hardware stack levels used: 1
  8102 ;; Hardware stack levels required when called: 9
  8103 ;; This function calls:
  8104 ;;		_ADC_Read_Average
  8105 ;;		_Calibrate_Flame_Sensor
  8106 ;;		___fldiv
  8107 ;;		___flge
  8108 ;;		___flmul
  8109 ;;		___flsub
  8110 ;;		___xxtofl
  8111 ;; This function is called by:
  8112 ;;		_main
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text11
  8117   003272                     __ptext11:
  8118                           	callstack 0
  8119   003272                     _Read_Flame_Sensor:
  8120                           	callstack 21
  8121   003272                     
  8122                           ;newmain.c: 190:     if(!flame_calibrated) {
  8123   003272  0101               	movlb	1	; () banked
  8124   003274  51FE               	movf	_flame_calibrated& (0+255),w,b
  8125   003276  A4D8               	btfss	status,2,c
  8126   003278  EF40  F019         	goto	u9341
  8127   00327C  EF42  F019         	goto	u9340
  8128   003280                     u9341:
  8129   003280  EF46  F019         	goto	l7218
  8130   003284                     u9340:
  8131   003284                     
  8132                           ; BSR set to: 1
  8133                           ;newmain.c: 191:         Calibrate_Flame_Sensor();
  8134   003284  EC00  F014         	call	_Calibrate_Flame_Sensor	;wreg free
  8135   003288  EF55  F01A         	goto	l107
  8136   00328C                     l7218:
  8137                           
  8138                           ; BSR set to: 1
  8139                           ;newmain.c: 195:     unsigned int adc_value = ADC_Read_Average(1, 5);
  8140   00328C  0E05               	movlw	5
  8141   00328E  6E0E               	movwf	ADC_Read_Average@samples^0,c
  8142   003290  0E01               	movlw	1
  8143   003292  ECB7  F010         	call	_ADC_Read_Average
  8144   003296  C00E  F104         	movff	?_ADC_Read_Average,Read_Flame_Sensor@adc_value
  8145   00329A  C00F  F105         	movff	?_ADC_Read_Average+1,Read_Flame_Sensor@adc_value+1
  8146   00329E                     
  8147                           ;newmain.c: 196:     float voltage = (adc_value * 5.0) / 1024.0;
  8148   00329E  0E00               	movlw	0
  8149   0032A0  6E23               	movwf	___flmul@a^0,c
  8150   0032A2  0E00               	movlw	0
  8151   0032A4  6E24               	movwf	(___flmul@a+1)^0,c
  8152   0032A6  0EA0               	movlw	160
  8153   0032A8  6E25               	movwf	(___flmul@a+2)^0,c
  8154   0032AA  0E40               	movlw	64
  8155   0032AC  6E26               	movwf	(___flmul@a+3)^0,c
  8156   0032AE  C104  F001         	movff	Read_Flame_Sensor@adc_value,___xxtofl@val
  8157   0032B2  C105  F002         	movff	Read_Flame_Sensor@adc_value+1,___xxtofl@val+1
  8158   0032B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  8159   0032B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  8160   0032BA  0E00               	movlw	0
  8161   0032BC  EC3A  F016         	call	___xxtofl
  8162   0032C0  C001  F01F         	movff	?___xxtofl,___flmul@b
  8163   0032C4  C002  F020         	movff	?___xxtofl+1,___flmul@b+1
  8164   0032C8  C003  F021         	movff	?___xxtofl+2,___flmul@b+2
  8165   0032CC  C004  F022         	movff	?___xxtofl+3,___flmul@b+3
  8166   0032D0  ECBC  F020         	call	___flmul	;wreg free
  8167   0032D4  C01F  F040         	movff	?___flmul,___fldiv@b
  8168   0032D8  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  8169   0032DC  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  8170   0032E0  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  8171   0032E4  0E00               	movlw	0
  8172   0032E6  6E44               	movwf	___fldiv@a^0,c
  8173   0032E8  0E00               	movlw	0
  8174   0032EA  6E45               	movwf	(___fldiv@a+1)^0,c
  8175   0032EC  0E80               	movlw	128
  8176   0032EE  6E46               	movwf	(___fldiv@a+2)^0,c
  8177   0032F0  0E44               	movlw	68
  8178   0032F2  6E47               	movwf	(___fldiv@a+3)^0,c
  8179   0032F4  EC05  F01D         	call	___fldiv	;wreg free
  8180   0032F8  C040  F100         	movff	?___fldiv,Read_Flame_Sensor@voltage
  8181   0032FC  C041  F101         	movff	?___fldiv+1,Read_Flame_Sensor@voltage+1
  8182   003300  C042  F102         	movff	?___fldiv+2,Read_Flame_Sensor@voltage+2
  8183   003304  C043  F103         	movff	?___fldiv+3,Read_Flame_Sensor@voltage+3
  8184   003308                     
  8185                           ;newmain.c: 199:     float intensity = (flame_base_voltage - voltage) * 100.0 / flame_ba
      +                          se_voltage;
  8186   003308  0E00               	movlw	0
  8187   00330A  6E23               	movwf	___flmul@a^0,c
  8188   00330C  0E00               	movlw	0
  8189   00330E  6E24               	movwf	(___flmul@a+1)^0,c
  8190   003310  0EC8               	movlw	200
  8191   003312  6E25               	movwf	(___flmul@a+2)^0,c
  8192   003314  0E42               	movlw	66
  8193   003316  6E26               	movwf	(___flmul@a+3)^0,c
  8194   003318  C100  F03C         	movff	Read_Flame_Sensor@voltage,___flsub@a
  8195   00331C  C101  F03D         	movff	Read_Flame_Sensor@voltage+1,___flsub@a+1
  8196   003320  C102  F03E         	movff	Read_Flame_Sensor@voltage+2,___flsub@a+2
  8197   003324  C103  F03F         	movff	Read_Flame_Sensor@voltage+3,___flsub@a+3
  8198   003328  C224  F038         	movff	_flame_base_voltage,___flsub@b
  8199   00332C  C225  F039         	movff	_flame_base_voltage+1,___flsub@b+1
  8200   003330  C226  F03A         	movff	_flame_base_voltage+2,___flsub@b+2
  8201   003334  C227  F03B         	movff	_flame_base_voltage+3,___flsub@b+3
  8202   003338  EC46  F00E         	call	___flsub	;wreg free
  8203   00333C  C038  F01F         	movff	?___flsub,___flmul@b
  8204   003340  C039  F020         	movff	?___flsub+1,___flmul@b+1
  8205   003344  C03A  F021         	movff	?___flsub+2,___flmul@b+2
  8206   003348  C03B  F022         	movff	?___flsub+3,___flmul@b+3
  8207   00334C  ECBC  F020         	call	___flmul	;wreg free
  8208   003350  C01F  F040         	movff	?___flmul,___fldiv@b
  8209   003354  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  8210   003358  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  8211   00335C  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  8212   003360  C224  F044         	movff	_flame_base_voltage,___fldiv@a
  8213   003364  C225  F045         	movff	_flame_base_voltage+1,___fldiv@a+1
  8214   003368  C226  F046         	movff	_flame_base_voltage+2,___fldiv@a+2
  8215   00336C  C227  F047         	movff	_flame_base_voltage+3,___fldiv@a+3
  8216   003370  EC05  F01D         	call	___fldiv	;wreg free
  8217   003374  C040  F106         	movff	?___fldiv,Read_Flame_Sensor@intensity
  8218   003378  C041  F107         	movff	?___fldiv+1,Read_Flame_Sensor@intensity+1
  8219   00337C  C042  F108         	movff	?___fldiv+2,Read_Flame_Sensor@intensity+2
  8220   003380  C043  F109         	movff	?___fldiv+3,Read_Flame_Sensor@intensity+3
  8221   003384                     
  8222                           ;newmain.c: 200:     if(intensity < 0) intensity = 0;
  8223   003384  0101               	movlb	1	; () banked
  8224   003386  BF09               	btfsc	(Read_Flame_Sensor@intensity+3)& (0+255),7,b
  8225   003388  EFCA  F019         	goto	u9350
  8226   00338C  EFC8  F019         	goto	u9351
  8227   003390                     u9351:
  8228   003390  EFD2  F019         	goto	l7228
  8229   003394                     u9350:
  8230   003394                     
  8231                           ; BSR set to: 1
  8232   003394  0E00               	movlw	0
  8233   003396  6F06               	movwf	Read_Flame_Sensor@intensity& (0+255),b
  8234   003398  0E00               	movlw	0
  8235   00339A  6F07               	movwf	(Read_Flame_Sensor@intensity+1)& (0+255),b
  8236   00339C  0E00               	movlw	0
  8237   00339E  6F08               	movwf	(Read_Flame_Sensor@intensity+2)& (0+255),b
  8238   0033A0  0E00               	movlw	0
  8239   0033A2  6F09               	movwf	(Read_Flame_Sensor@intensity+3)& (0+255),b
  8240   0033A4                     l7228:
  8241                           
  8242                           ; BSR set to: 1
  8243                           ;newmain.c: 201:     if(intensity > 100) intensity = 100;
  8244   0033A4  0E00               	movlw	0
  8245   0033A6  6E40               	movwf	___flge@ff1^0,c
  8246   0033A8  0E00               	movlw	0
  8247   0033AA  6E41               	movwf	(___flge@ff1+1)^0,c
  8248   0033AC  0EC8               	movlw	200
  8249   0033AE  6E42               	movwf	(___flge@ff1+2)^0,c
  8250   0033B0  0E42               	movlw	66
  8251   0033B2  6E43               	movwf	(___flge@ff1+3)^0,c
  8252   0033B4  C106  F044         	movff	Read_Flame_Sensor@intensity,___flge@ff2
  8253   0033B8  C107  F045         	movff	Read_Flame_Sensor@intensity+1,___flge@ff2+1
  8254   0033BC  C108  F046         	movff	Read_Flame_Sensor@intensity+2,___flge@ff2+2
  8255   0033C0  C109  F047         	movff	Read_Flame_Sensor@intensity+3,___flge@ff2+3
  8256   0033C4  ECFB  F012         	call	___flge	;wreg free
  8257   0033C8  B0D8               	btfsc	status,0,c
  8258   0033CA  EFE9  F019         	goto	u9361
  8259   0033CE  EFEB  F019         	goto	u9360
  8260   0033D2                     u9361:
  8261   0033D2  EFF4  F019         	goto	l109
  8262   0033D6                     u9360:
  8263   0033D6  0E00               	movlw	0
  8264   0033D8  0101               	movlb	1	; () banked
  8265   0033DA  6F06               	movwf	Read_Flame_Sensor@intensity& (0+255),b
  8266   0033DC  0E00               	movlw	0
  8267   0033DE  6F07               	movwf	(Read_Flame_Sensor@intensity+1)& (0+255),b
  8268   0033E0  0EC8               	movlw	200
  8269   0033E2  6F08               	movwf	(Read_Flame_Sensor@intensity+2)& (0+255),b
  8270   0033E4  0E42               	movlw	66
  8271   0033E6  6F09               	movwf	(Read_Flame_Sensor@intensity+3)& (0+255),b
  8272   0033E8                     l109:
  8273                           
  8274                           ;newmain.c: 207:     static bool last_detected = 0;;newmain.c: 209:     if (!last_detect
      +                          ed) {
  8275   0033E8  0101               	movlb	1	; () banked
  8276   0033EA  51FC               	movf	Read_Flame_Sensor@last_detected& (0+255),w,b
  8277   0033EC  A4D8               	btfss	status,2,c
  8278   0033EE  EFFB  F019         	goto	u9371
  8279   0033F2  EFFD  F019         	goto	u9370
  8280   0033F6                     u9371:
  8281   0033F6  EF1D  F01A         	goto	l7236
  8282   0033FA                     u9370:
  8283   0033FA                     
  8284                           ; BSR set to: 1
  8285                           ;newmain.c: 211:         if (intensity >= 10.0) {
  8286   0033FA  C106  F040         	movff	Read_Flame_Sensor@intensity,___flge@ff1
  8287   0033FE  C107  F041         	movff	Read_Flame_Sensor@intensity+1,___flge@ff1+1
  8288   003402  C108  F042         	movff	Read_Flame_Sensor@intensity+2,___flge@ff1+2
  8289   003406  C109  F043         	movff	Read_Flame_Sensor@intensity+3,___flge@ff1+3
  8290   00340A  0E00               	movlw	0
  8291   00340C  6E44               	movwf	___flge@ff2^0,c
  8292   00340E  0E00               	movlw	0
  8293   003410  6E45               	movwf	(___flge@ff2+1)^0,c
  8294   003412  0E20               	movlw	32
  8295   003414  6E46               	movwf	(___flge@ff2+2)^0,c
  8296   003416  0E41               	movlw	65
  8297   003418  6E47               	movwf	(___flge@ff2+3)^0,c
  8298   00341A  ECFB  F012         	call	___flge	;wreg free
  8299   00341E  A0D8               	btfss	status,0,c
  8300   003420  EF14  F01A         	goto	u9381
  8301   003424  EF16  F01A         	goto	u9380
  8302   003428                     u9381:
  8303   003428  EF39  F01A         	goto	l7240
  8304   00342C                     u9380:
  8305   00342C                     
  8306                           ;newmain.c: 212:             flame_detected = 1;
  8307   00342C  0E01               	movlw	1
  8308   00342E  0101               	movlb	1	; () banked
  8309   003430  6FFD               	movwf	_flame_detected& (0+255),b
  8310                           
  8311                           ;newmain.c: 213:             last_detected = 1;
  8312   003432  0E01               	movlw	1
  8313   003434  6FFC               	movwf	Read_Flame_Sensor@last_detected& (0+255),b
  8314   003436  EF39  F01A         	goto	l7240
  8315   00343A                     l7236:
  8316                           
  8317                           ; BSR set to: 1
  8318                           ;newmain.c: 217:         if (intensity <= 5.0) {
  8319   00343A  0E00               	movlw	0
  8320   00343C  6E40               	movwf	___flge@ff1^0,c
  8321   00343E  0E00               	movlw	0
  8322   003440  6E41               	movwf	(___flge@ff1+1)^0,c
  8323   003442  0EA0               	movlw	160
  8324   003444  6E42               	movwf	(___flge@ff1+2)^0,c
  8325   003446  0E40               	movlw	64
  8326   003448  6E43               	movwf	(___flge@ff1+3)^0,c
  8327   00344A  C106  F044         	movff	Read_Flame_Sensor@intensity,___flge@ff2
  8328   00344E  C107  F045         	movff	Read_Flame_Sensor@intensity+1,___flge@ff2+1
  8329   003452  C108  F046         	movff	Read_Flame_Sensor@intensity+2,___flge@ff2+2
  8330   003456  C109  F047         	movff	Read_Flame_Sensor@intensity+3,___flge@ff2+3
  8331   00345A  ECFB  F012         	call	___flge	;wreg free
  8332   00345E  A0D8               	btfss	status,0,c
  8333   003460  EF34  F01A         	goto	u9391
  8334   003464  EF36  F01A         	goto	u9390
  8335   003468                     u9391:
  8336   003468  EF39  F01A         	goto	l7240
  8337   00346C                     u9390:
  8338   00346C                     
  8339                           ;newmain.c: 218:             flame_detected = 0;
  8340   00346C  0101               	movlb	1	; () banked
  8341   00346E  6BFD               	clrf	_flame_detected& (0+255),b
  8342                           
  8343                           ;newmain.c: 219:             last_detected = 0;
  8344   003470  6BFC               	clrf	Read_Flame_Sensor@last_detected& (0+255),b
  8345   003472                     l7240:
  8346                           
  8347                           ;newmain.c: 224:     if(flame_detected) {
  8348   003472  0101               	movlb	1	; () banked
  8349   003474  51FD               	movf	_flame_detected& (0+255),w,b
  8350   003476  B4D8               	btfsc	status,2,c
  8351   003478  EF40  F01A         	goto	u9401
  8352   00347C  EF42  F01A         	goto	u9400
  8353   003480                     u9401:
  8354   003480  EF4C  F01A         	goto	l7244
  8355   003484                     u9400:
  8356   003484                     
  8357                           ; BSR set to: 1
  8358                           ;newmain.c: 225:         flame_intensity = intensity;
  8359   003484  C106  F228         	movff	Read_Flame_Sensor@intensity,_flame_intensity
  8360   003488  C107  F229         	movff	Read_Flame_Sensor@intensity+1,_flame_intensity+1
  8361   00348C  C108  F22A         	movff	Read_Flame_Sensor@intensity+2,_flame_intensity+2
  8362   003490  C109  F22B         	movff	Read_Flame_Sensor@intensity+3,_flame_intensity+3
  8363                           
  8364                           ;newmain.c: 226:     } else {
  8365   003494  EF55  F01A         	goto	l107
  8366   003498                     l7244:
  8367                           
  8368                           ; BSR set to: 1
  8369                           ;newmain.c: 227:         flame_intensity = 0.0;
  8370   003498  0E00               	movlw	0
  8371   00349A  0102               	movlb	2	; () banked
  8372   00349C  6F28               	movwf	_flame_intensity& (0+255),b
  8373   00349E  0E00               	movlw	0
  8374   0034A0  6F29               	movwf	(_flame_intensity+1)& (0+255),b
  8375   0034A2  0E00               	movlw	0
  8376   0034A4  6F2A               	movwf	(_flame_intensity+2)& (0+255),b
  8377   0034A6  0E00               	movlw	0
  8378   0034A8  6F2B               	movwf	(_flame_intensity+3)& (0+255),b
  8379   0034AA                     l107:
  8380   0034AA  0012               	return		;funcret
  8381   0034AC                     __end_of_Read_Flame_Sensor:
  8382                           	callstack 0
  8383                           
  8384 ;; *************** function _Calibrate_Flame_Sensor *****************
  8385 ;; Defined at:
  8386 ;;		line 135 in file "newmain.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;		None
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;  adc_value       2  150[BANK0 ] unsigned int 
  8391 ;;  i               1  156[BANK0 ] unsigned char 
  8392 ;;  cal_msg        30  120[BANK0 ] unsigned char [30]
  8393 ;;  sum             4  152[BANK0 ] float 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8403 ;;      Params:         0       0       0       0       0       0       0       0       0
  8404 ;;      Locals:         0      37       0       0       0       0       0       0       0
  8405 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8406 ;;      Totals:         0      39       0       0       0       0       0       0       0
  8407 ;;Total ram usage:       39 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 8
  8410 ;; This function calls:
  8411 ;;		_ADC_Read
  8412 ;;		_UART_Write_Text
  8413 ;;		___fladd
  8414 ;;		___fldiv
  8415 ;;		___flmul
  8416 ;;		___xxtofl
  8417 ;;		_sprintf
  8418 ;; This function is called by:
  8419 ;;		_Read_Flame_Sensor
  8420 ;;		_main
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           	psect	text12
  8425   002800                     __ptext12:
  8426                           	callstack 0
  8427   002800                     _Calibrate_Flame_Sensor:
  8428                           	callstack 21
  8429   002800                     
  8430                           ;newmain.c: 137:     float sum = 0;
  8431   002800  0E00               	movlw	0
  8432   002802  0100               	movlb	0	; () banked
  8433   002804  6FF8               	movwf	Calibrate_Flame_Sensor@sum& (0+255),b
  8434   002806  0E00               	movlw	0
  8435   002808  6FF9               	movwf	(Calibrate_Flame_Sensor@sum+1)& (0+255),b
  8436   00280A  0E00               	movlw	0
  8437   00280C  6FFA               	movwf	(Calibrate_Flame_Sensor@sum+2)& (0+255),b
  8438   00280E  0E00               	movlw	0
  8439   002810  6FFB               	movwf	(Calibrate_Flame_Sensor@sum+3)& (0+255),b
  8440   002812                     
  8441                           ; BSR set to: 0
  8442                           ;newmain.c: 138:     for(unsigned char i = 0; i < 10; i++) {
  8443   002812  6BFC               	clrf	Calibrate_Flame_Sensor@i& (0+255),b
  8444   002814                     l6730:
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;newmain.c: 139:         unsigned int adc_value = ADC_Read(1);
  8448   002814  0E01               	movlw	1
  8449   002816  EC02  F00E         	call	_ADC_Read
  8450   00281A  C001  F0F6         	movff	?_ADC_Read,Calibrate_Flame_Sensor@adc_value
  8451   00281E  C002  F0F7         	movff	?_ADC_Read+1,Calibrate_Flame_Sensor@adc_value+1
  8452   002822                     
  8453                           ;newmain.c: 140:         sum += (adc_value * 5.0) / 1024.0;
  8454   002822  C0F8  F00F         	movff	Calibrate_Flame_Sensor@sum,___fladd@b
  8455   002826  C0F9  F010         	movff	Calibrate_Flame_Sensor@sum+1,___fladd@b+1
  8456   00282A  C0FA  F011         	movff	Calibrate_Flame_Sensor@sum+2,___fladd@b+2
  8457   00282E  C0FB  F012         	movff	Calibrate_Flame_Sensor@sum+3,___fladd@b+3
  8458   002832  0E00               	movlw	0
  8459   002834  6E44               	movwf	___fldiv@a^0,c
  8460   002836  0E00               	movlw	0
  8461   002838  6E45               	movwf	(___fldiv@a+1)^0,c
  8462   00283A  0E80               	movlw	128
  8463   00283C  6E46               	movwf	(___fldiv@a+2)^0,c
  8464   00283E  0E44               	movlw	68
  8465   002840  6E47               	movwf	(___fldiv@a+3)^0,c
  8466   002842  0E00               	movlw	0
  8467   002844  6E23               	movwf	___flmul@a^0,c
  8468   002846  0E00               	movlw	0
  8469   002848  6E24               	movwf	(___flmul@a+1)^0,c
  8470   00284A  0EA0               	movlw	160
  8471   00284C  6E25               	movwf	(___flmul@a+2)^0,c
  8472   00284E  0E40               	movlw	64
  8473   002850  6E26               	movwf	(___flmul@a+3)^0,c
  8474   002852  C0F6  F001         	movff	Calibrate_Flame_Sensor@adc_value,___xxtofl@val
  8475   002856  C0F7  F002         	movff	Calibrate_Flame_Sensor@adc_value+1,___xxtofl@val+1
  8476   00285A  6A03               	clrf	(___xxtofl@val+2)^0,c
  8477   00285C  6A04               	clrf	(___xxtofl@val+3)^0,c
  8478   00285E  0E00               	movlw	0
  8479   002860  EC3A  F016         	call	___xxtofl
  8480   002864  C001  F01F         	movff	?___xxtofl,___flmul@b
  8481   002868  C002  F020         	movff	?___xxtofl+1,___flmul@b+1
  8482   00286C  C003  F021         	movff	?___xxtofl+2,___flmul@b+2
  8483   002870  C004  F022         	movff	?___xxtofl+3,___flmul@b+3
  8484   002874  ECBC  F020         	call	___flmul	;wreg free
  8485   002878  C01F  F040         	movff	?___flmul,___fldiv@b
  8486   00287C  C020  F041         	movff	?___flmul+1,___fldiv@b+1
  8487   002880  C021  F042         	movff	?___flmul+2,___fldiv@b+2
  8488   002884  C022  F043         	movff	?___flmul+3,___fldiv@b+3
  8489   002888  EC05  F01D         	call	___fldiv	;wreg free
  8490   00288C  C040  F013         	movff	?___fldiv,___fladd@a
  8491   002890  C041  F014         	movff	?___fldiv+1,___fladd@a+1
  8492   002894  C042  F015         	movff	?___fldiv+2,___fladd@a+2
  8493   002898  C043  F016         	movff	?___fldiv+3,___fladd@a+3
  8494   00289C  ECCF  F022         	call	___fladd	;wreg free
  8495   0028A0  C00F  F0F8         	movff	?___fladd,Calibrate_Flame_Sensor@sum
  8496   0028A4  C010  F0F9         	movff	?___fladd+1,Calibrate_Flame_Sensor@sum+1
  8497   0028A8  C011  F0FA         	movff	?___fladd+2,Calibrate_Flame_Sensor@sum+2
  8498   0028AC  C012  F0FB         	movff	?___fladd+3,Calibrate_Flame_Sensor@sum+3
  8499   0028B0                     
  8500                           ;newmain.c: 141:         _delay((unsigned long)((100)*(8000000/4000.0)));
  8501   0028B0  0E02               	movlw	2
  8502   0028B2  0100               	movlb	0	; () banked
  8503   0028B4  6FD7               	movwf	(??_Calibrate_Flame_Sensor+1)& (0+255),b
  8504   0028B6  0E04               	movlw	4
  8505   0028B8  6FD6               	movwf	??_Calibrate_Flame_Sensor& (0+255),b
  8506   0028BA  0EBA               	movlw	186
  8507   0028BC                     u9717:
  8508   0028BC  2EE8               	decfsz	wreg,f,c
  8509   0028BE  D7FE               	bra	u9717
  8510   0028C0  2FD6               	decfsz	??_Calibrate_Flame_Sensor& (0+255),f,b
  8511   0028C2  D7FC               	bra	u9717
  8512   0028C4  2FD7               	decfsz	(??_Calibrate_Flame_Sensor+1)& (0+255),f,b
  8513   0028C6  D7FA               	bra	u9717
  8514   0028C8  0000               	nop	
  8515   0028CA                     
  8516                           ;newmain.c: 142:     }
  8517   0028CA  0100               	movlb	0	; () banked
  8518   0028CC  2BFC               	incf	Calibrate_Flame_Sensor@i& (0+255),f,b
  8519   0028CE                     
  8520                           ; BSR set to: 0
  8521   0028CE  0E09               	movlw	9
  8522   0028D0  65FC               	cpfsgt	Calibrate_Flame_Sensor@i& (0+255),b
  8523   0028D2  EF6D  F014         	goto	u8741
  8524   0028D6  EF6F  F014         	goto	u8740
  8525   0028DA                     u8741:
  8526   0028DA  EF0A  F014         	goto	l6730
  8527   0028DE                     u8740:
  8528   0028DE                     
  8529                           ; BSR set to: 0
  8530                           ;newmain.c: 143:     flame_base_voltage = sum / 10.0;
  8531   0028DE  C0F8  F040         	movff	Calibrate_Flame_Sensor@sum,___fldiv@b
  8532   0028E2  C0F9  F041         	movff	Calibrate_Flame_Sensor@sum+1,___fldiv@b+1
  8533   0028E6  C0FA  F042         	movff	Calibrate_Flame_Sensor@sum+2,___fldiv@b+2
  8534   0028EA  C0FB  F043         	movff	Calibrate_Flame_Sensor@sum+3,___fldiv@b+3
  8535   0028EE  0E00               	movlw	0
  8536   0028F0  6E44               	movwf	___fldiv@a^0,c
  8537   0028F2  0E00               	movlw	0
  8538   0028F4  6E45               	movwf	(___fldiv@a+1)^0,c
  8539   0028F6  0E20               	movlw	32
  8540   0028F8  6E46               	movwf	(___fldiv@a+2)^0,c
  8541   0028FA  0E41               	movlw	65
  8542   0028FC  6E47               	movwf	(___fldiv@a+3)^0,c
  8543   0028FE  EC05  F01D         	call	___fldiv	;wreg free
  8544   002902  C040  F224         	movff	?___fldiv,_flame_base_voltage
  8545   002906  C041  F225         	movff	?___fldiv+1,_flame_base_voltage+1
  8546   00290A  C042  F226         	movff	?___fldiv+2,_flame_base_voltage+2
  8547   00290E  C043  F227         	movff	?___fldiv+3,_flame_base_voltage+3
  8548   002912                     
  8549                           ;newmain.c: 144:     flame_calibrated = 1;
  8550   002912  0E01               	movlw	1
  8551   002914  0101               	movlb	1	; () banked
  8552   002916  6FFE               	movwf	_flame_calibrated& (0+255),b
  8553   002918                     
  8554                           ; BSR set to: 1
  8555                           ;newmain.c: 145:     flame_detected = 0;
  8556   002918  6BFD               	clrf	_flame_detected& (0+255),b
  8557   00291A                     
  8558                           ; BSR set to: 1
  8559                           ;newmain.c: 146:     flame_intensity = 0.0;
  8560   00291A  0E00               	movlw	0
  8561   00291C  0102               	movlb	2	; () banked
  8562   00291E  6F28               	movwf	_flame_intensity& (0+255),b
  8563   002920  0E00               	movlw	0
  8564   002922  6F29               	movwf	(_flame_intensity+1)& (0+255),b
  8565   002924  0E00               	movlw	0
  8566   002926  6F2A               	movwf	(_flame_intensity+2)& (0+255),b
  8567   002928  0E00               	movlw	0
  8568   00292A  6F2B               	movwf	(_flame_intensity+3)& (0+255),b
  8569   00292C                     
  8570                           ; BSR set to: 2
  8571                           ;newmain.c: 149:     UART_Write_Text("Calibracion flama completada. Voltaje base: ");
  8572   00292C  0E52               	movlw	low STR_1
  8573   00292E  6E02               	movwf	UART_Write_Text@text^0,c
  8574   002930  0E7F               	movlw	high STR_1
  8575   002932  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  8576   002934  EC04  F00F         	call	_UART_Write_Text	;wreg free
  8577   002938                     
  8578                           ;newmain.c: 150:     char cal_msg[30];;newmain.c: 151:     sprintf(cal_msg, "%.2fV\n", f
      +                          lame_base_voltage);
  8579   002938  0ED8               	movlw	low Calibrate_Flame_Sensor@cal_msg
  8580   00293A  0100               	movlb	0	; () banked
  8581   00293C  6FB4               	movwf	sprintf@s& (0+255),b
  8582   00293E  6BB5               	clrf	(sprintf@s+1)& (0+255),b
  8583   002940  0EE5               	movlw	low STR_2
  8584   002942  6FB6               	movwf	sprintf@fmt& (0+255),b
  8585   002944  0E7F               	movlw	high STR_2
  8586   002946  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
  8587   002948  C224  F0B8         	movff	_flame_base_voltage,?_sprintf+4
  8588   00294C  C225  F0B9         	movff	_flame_base_voltage+1,?_sprintf+5
  8589   002950  C226  F0BA         	movff	_flame_base_voltage+2,?_sprintf+6
  8590   002954  C227  F0BB         	movff	_flame_base_voltage+3,?_sprintf+7
  8591   002958  EC24  F00E         	call	_sprintf	;wreg free
  8592   00295C                     
  8593                           ;newmain.c: 152:     UART_Write_Text(cal_msg);
  8594   00295C  0ED8               	movlw	low Calibrate_Flame_Sensor@cal_msg
  8595   00295E  6E02               	movwf	UART_Write_Text@text^0,c
  8596   002960  6A03               	clrf	(UART_Write_Text@text+1)^0,c
  8597   002962  EC04  F00F         	call	_UART_Write_Text	;wreg free
  8598   002966  0012               	return		;funcret
  8599   002968                     __end_of_Calibrate_Flame_Sensor:
  8600                           	callstack 0
  8601                           
  8602 ;; *************** function _sprintf *****************
  8603 ;; Defined at:
  8604 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  s               2   84[BANK0 ] PTR unsigned char 
  8607 ;;		 -> Send_Sensor_Data@buffer(250), Calibrate_MQ2@cal_msg(30), Calibrate_Flame_Sensor@cal_msg(30), 
  8608 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  8609 ;;		 -> STR_5(83), STR_4(6), STR_2(7), 
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;  f              11  107[BANK0 ] struct _IO_FILE
  8612 ;;  ret             2    0        int 
  8613 ;;  ap              1  106[BANK0 ] PTR void [1]
  8614 ;;		 -> ?_sprintf(2), 
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  2   84[BANK0 ] int 
  8617 ;; Registers used:
  8618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8624 ;;      Params:         0      22       0       0       0       0       0       0       0
  8625 ;;      Locals:         0      12       0       0       0       0       0       0       0
  8626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8627 ;;      Totals:         0      34       0       0       0       0       0       0       0
  8628 ;;Total ram usage:       34 bytes
  8629 ;; Hardware stack levels used: 1
  8630 ;; Hardware stack levels required when called: 7
  8631 ;; This function calls:
  8632 ;;		_vfprintf
  8633 ;; This function is called by:
  8634 ;;		_Calibrate_Flame_Sensor
  8635 ;;		_Calibrate_MQ2
  8636 ;;		_Send_Sensor_Data
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text13
  8641   001C48                     __ptext13:
  8642                           	callstack 0
  8643   001C48                     _sprintf:
  8644                           	callstack 22
  8645   001C48  0EB8               	movlw	low (?_sprintf+4)
  8646   001C4A  0100               	movlb	0	; () banked
  8647   001C4C  6FCA               	movwf	sprintf@ap& (0+255),b
  8648   001C4E  C0B4  F0CB         	movff	sprintf@s,sprintf@f
  8649   001C52  C0B5  F0CC         	movff	sprintf@s+1,sprintf@f+1
  8650   001C56                     
  8651                           ; BSR set to: 0
  8652   001C56  0E00               	movlw	0
  8653   001C58  6FCE               	movwf	(sprintf@f+3)& (0+255),b
  8654   001C5A  0E00               	movlw	0
  8655   001C5C  6FCD               	movwf	(sprintf@f+2)& (0+255),b
  8656   001C5E                     
  8657                           ; BSR set to: 0
  8658   001C5E  0E00               	movlw	0
  8659   001C60  6FD5               	movwf	(sprintf@f+10)& (0+255),b
  8660   001C62  0E00               	movlw	0
  8661   001C64  6FD4               	movwf	(sprintf@f+9)& (0+255),b
  8662   001C66                     
  8663                           ; BSR set to: 0
  8664   001C66  0ECB               	movlw	low sprintf@f
  8665   001C68  6FAE               	movwf	vfprintf@fp& (0+255),b
  8666   001C6A  C0B6  F0AF         	movff	sprintf@fmt,vfprintf@fmt
  8667   001C6E  C0B7  F0B0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8668   001C72  0ECA               	movlw	low sprintf@ap
  8669   001C74  6FB1               	movwf	vfprintf@ap& (0+255),b
  8670   001C76  EC69  F00E         	call	_vfprintf	;wreg free
  8671   001C7A  0100               	movlb	0	; () banked
  8672   001C7C  51CD               	movf	(sprintf@f+2)& (0+255),w,b
  8673   001C7E  25B4               	addwf	sprintf@s& (0+255),w,b
  8674   001C80  6ED9               	movwf	fsr2l,c
  8675   001C82  51CE               	movf	(sprintf@f+3)& (0+255),w,b
  8676   001C84  21B5               	addwfc	(sprintf@s+1)& (0+255),w,b
  8677   001C86  6EDA               	movwf	fsr2h,c
  8678   001C88  6ADF               	clrf	indf2,c
  8679   001C8A                     
  8680                           ; BSR set to: 0
  8681   001C8A  0012               	return		;funcret
  8682   001C8C                     __end_of_sprintf:
  8683                           	callstack 0
  8684                           
  8685 ;; *************** function _vfprintf *****************
  8686 ;; Defined at:
  8687 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  fp              1   78[BANK0 ] PTR struct _IO_FILE
  8690 ;;		 -> sprintf@f(11), 
  8691 ;;  fmt             2   79[BANK0 ] PTR const unsigned char 
  8692 ;;		 -> STR_5(83), STR_4(6), STR_2(7), 
  8693 ;;  ap              1   81[BANK0 ] PTR PTR void 
  8694 ;;		 -> sprintf@ap(1), 
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;  cfmt            2   82[BANK0 ] PTR unsigned char 
  8697 ;;		 -> STR_5(83), STR_4(6), STR_2(7), 
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  2   78[BANK0 ] int 
  8700 ;; Registers used:
  8701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8707 ;;      Params:         0       4       0       0       0       0       0       0       0
  8708 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8710 ;;      Totals:         0       6       0       0       0       0       0       0       0
  8711 ;;Total ram usage:        6 bytes
  8712 ;; Hardware stack levels used: 1
  8713 ;; Hardware stack levels required when called: 6
  8714 ;; This function calls:
  8715 ;;		_vfpfcnvrt
  8716 ;; This function is called by:
  8717 ;;		_sprintf
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           	psect	text14
  8722   001CD2                     __ptext14:
  8723                           	callstack 0
  8724   001CD2                     _vfprintf:
  8725                           	callstack 22
  8726   001CD2                     
  8727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  8728   001CD2  C0AF  F0B2         	movff	vfprintf@fmt,vfprintf@cfmt
  8729   001CD6  C0B0  F0B3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8730                           
  8731                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8732   001CDA  EF78  F00E         	goto	l6490
  8733   001CDE                     l6488:
  8734                           
  8735                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8736   001CDE  C0AE  F0A2         	movff	vfprintf@fp,vfpfcnvrt@fp
  8737   001CE2  0EB2               	movlw	low vfprintf@cfmt
  8738   001CE4  0100               	movlb	0	; () banked
  8739   001CE6  6FA3               	movwf	vfpfcnvrt@fmt& (0+255),b
  8740   001CE8  C0B1  F0A4         	movff	vfprintf@ap,vfpfcnvrt@ap
  8741   001CEC  EC56  F01A         	call	_vfpfcnvrt	;wreg free
  8742   001CF0                     l6490:
  8743                           
  8744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8745   001CF0  C0B2  FFF6         	movff	vfprintf@cfmt,tblptrl
  8746   001CF4  C0B3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8747   001CF8                     	if	0	;tblptru may be non-zero
  8748   001CF8                     	endif
  8749   001CF8                     	if	0	;tblptru may be non-zero
  8750   001CF8                     	endif
  8751   001CF8  0008               	tblrd		*
  8752   001CFA  50F5               	movf	tablat,w,c
  8753   001CFC  0900               	iorlw	0
  8754   001CFE  A4D8               	btfss	status,2,c
  8755   001D00  EF84  F00E         	goto	u8331
  8756   001D04  EF86  F00E         	goto	u8330
  8757   001D08                     u8331:
  8758   001D08  EF6F  F00E         	goto	l6488
  8759   001D0C                     u8330:
  8760   001D0C                     
  8761                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8762   001D0C  0E00               	movlw	0
  8763   001D0E  0100               	movlb	0	; () banked
  8764   001D10  6FAF               	movwf	(?_vfprintf+1)& (0+255),b
  8765   001D12  0E00               	movlw	0
  8766   001D14  6FAE               	movwf	?_vfprintf& (0+255),b
  8767   001D16                     
  8768                           ; BSR set to: 0
  8769   001D16  0012               	return		;funcret
  8770   001D18                     __end_of_vfprintf:
  8771                           	callstack 0
  8772                           
  8773 ;; *************** function _vfpfcnvrt *****************
  8774 ;; Defined at:
  8775 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
  8778 ;;		 -> sprintf@f(11), 
  8779 ;;  fmt             1   67[BANK0 ] PTR PTR unsigned char 
  8780 ;;		 -> vfprintf@cfmt(2), 
  8781 ;;  ap              1   68[BANK0 ] PTR PTR void 
  8782 ;;		 -> sprintf@ap(1), 
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;  convarg         4   71[BANK0 ] struct .
  8785 ;;  cp              2   76[BANK0 ] PTR unsigned char 
  8786 ;;		 -> STR_5(83), STR_4(6), STR_2(7), 
  8787 ;;  c               1   75[BANK0 ] unsigned char 
  8788 ;;  done            1    0        _Bool 
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  1    wreg      void 
  8791 ;; Registers used:
  8792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8798 ;;      Params:         0       3       0       0       0       0       0       0       0
  8799 ;;      Locals:         0       7       0       0       0       0       0       0       0
  8800 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8801 ;;      Totals:         0      12       0       0       0       0       0       0       0
  8802 ;;Total ram usage:       12 bytes
  8803 ;; Hardware stack levels used: 1
  8804 ;; Hardware stack levels required when called: 5
  8805 ;; This function calls:
  8806 ;;		_dtoa
  8807 ;;		_efgtoa
  8808 ;;		_fputc
  8809 ;;		_read_prec_or_width
  8810 ;; This function is called by:
  8811 ;;		_vfprintf
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text15
  8816   0034AC                     __ptext15:
  8817                           	callstack 0
  8818   0034AC                     _vfpfcnvrt:
  8819                           	callstack 22
  8820   0034AC                     
  8821                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  8822   0034AC  0100               	movlb	0	; () banked
  8823   0034AE  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8824   0034B0  6ED9               	movwf	fsr2l,c
  8825   0034B2  6ADA               	clrf	fsr2h,c
  8826   0034B4  CFDE FFF6          	movff	postinc2,tblptrl
  8827   0034B8  CFDD FFF7          	movff	postdec2,tblptrh
  8828   0034BC                     	if	0	;tblptru may be non-zero
  8829   0034BC                     	endif
  8830   0034BC                     	if	0	;tblptru may be non-zero
  8831   0034BC                     	endif
  8832   0034BC  0008               	tblrd		*
  8833   0034BE  50F5               	movf	tablat,w,c
  8834   0034C0  0A25               	xorlw	37
  8835   0034C2  A4D8               	btfss	status,2,c
  8836   0034C4  EF66  F01A         	goto	u8271
  8837   0034C8  EF68  F01A         	goto	u8270
  8838   0034CC                     u8271:
  8839   0034CC  EF86  F01B         	goto	l6476
  8840   0034D0                     u8270:
  8841   0034D0                     
  8842                           ; BSR set to: 0
  8843                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  8844   0034D0  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8845   0034D2  6ED9               	movwf	fsr2l,c
  8846   0034D4  6ADA               	clrf	fsr2h,c
  8847   0034D6  2ADE               	incf	postinc2,f,c
  8848   0034D8  0E00               	movlw	0
  8849   0034DA  22DD               	addwfc	postdec2,f,c
  8850   0034DC                     
  8851                           ; BSR set to: 0
  8852                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  8853   0034DC  0E00               	movlw	0
  8854   0034DE  0102               	movlb	2	; () banked
  8855   0034E0  6F33               	movwf	(_width+1)& (0+255),b
  8856   0034E2  0E00               	movlw	0
  8857   0034E4  6F32               	movwf	_width& (0+255),b
  8858   0034E6  C232  F1FA         	movff	_width,_flags
  8859   0034EA                     
  8860                           ; BSR set to: 2
  8861                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  8862   0034EA  0100               	movlb	0	; () banked
  8863   0034EC  69FD               	setf	_prec& (0+255),b
  8864   0034EE  69FE               	setf	(_prec+1)& (0+255),b
  8865   0034F0                     
  8866                           ; BSR set to: 0
  8867                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  8868   0034F0  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8869   0034F2  6ED9               	movwf	fsr2l,c
  8870   0034F4  6ADA               	clrf	fsr2h,c
  8871   0034F6  CFDE FFF6          	movff	postinc2,tblptrl
  8872   0034FA  CFDD FFF7          	movff	postdec2,tblptrh
  8873   0034FE                     	if	0	;tblptru may be non-zero
  8874   0034FE                     	endif
  8875   0034FE                     	if	0	;tblptru may be non-zero
  8876   0034FE                     	endif
  8877   0034FE  0008               	tblrd		*
  8878   003500  50F5               	movf	tablat,w,c
  8879   003502  0A2E               	xorlw	46
  8880   003504  A4D8               	btfss	status,2,c
  8881   003506  EF87  F01A         	goto	u8281
  8882   00350A  EF89  F01A         	goto	u8280
  8883   00350E                     u8281:
  8884   00350E  EF99  F01A         	goto	l6426
  8885   003512                     u8280:
  8886   003512                     
  8887                           ; BSR set to: 0
  8888                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  8889   003512  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8890   003514  6ED9               	movwf	fsr2l,c
  8891   003516  6ADA               	clrf	fsr2h,c
  8892   003518  2ADE               	incf	postinc2,f,c
  8893   00351A  0E00               	movlw	0
  8894   00351C  22DD               	addwfc	postdec2,f,c
  8895   00351E                     
  8896                           ; BSR set to: 0
  8897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  8898   00351E  C0A3  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8899   003522  C0A4  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8900   003526  EC61  F010         	call	_read_prec_or_width	;wreg free
  8901   00352A  C001  F0FD         	movff	?_read_prec_or_width,_prec
  8902   00352E  C002  F0FE         	movff	?_read_prec_or_width+1,_prec+1
  8903   003532                     l6426:
  8904                           
  8905                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  8906   003532  0100               	movlb	0	; () banked
  8907   003534  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8908   003536  6ED9               	movwf	fsr2l,c
  8909   003538  6ADA               	clrf	fsr2h,c
  8910   00353A  CFDE F0AC          	movff	postinc2,vfpfcnvrt@cp
  8911   00353E  CFDD F0AD          	movff	postdec2,vfpfcnvrt@cp+1
  8912   003542                     
  8913                           ; BSR set to: 0
  8914                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  8915   003542  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8916   003546  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8917   00354A                     	if	0	;tblptru may be non-zero
  8918   00354A                     	endif
  8919   00354A                     	if	0	;tblptru may be non-zero
  8920   00354A                     	endif
  8921   00354A  0008               	tblrd		*
  8922   00354C  50F5               	movf	tablat,w,c
  8923   00354E  0A64               	xorlw	100
  8924   003550  B4D8               	btfsc	status,2,c
  8925   003552  EFAD  F01A         	goto	u8291
  8926   003556  EFAF  F01A         	goto	u8290
  8927   00355A                     u8291:
  8928   00355A  EFBD  F01A         	goto	l6432
  8929   00355E                     u8290:
  8930   00355E                     
  8931                           ; BSR set to: 0
  8932   00355E  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8933   003562  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8934   003566                     	if	0	;tblptru may be non-zero
  8935   003566                     	endif
  8936   003566                     	if	0	;tblptru may be non-zero
  8937   003566                     	endif
  8938   003566  0008               	tblrd		*
  8939   003568  50F5               	movf	tablat,w,c
  8940   00356A  0A69               	xorlw	105
  8941   00356C  A4D8               	btfss	status,2,c
  8942   00356E  EFBB  F01A         	goto	u8301
  8943   003572  EFBD  F01A         	goto	u8300
  8944   003576                     u8301:
  8945   003576  EFE0  F01A         	goto	l6440
  8946   00357A                     u8300:
  8947   00357A                     l6432:
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8951   00357A  51A4               	movf	vfpfcnvrt@ap& (0+255),w,b
  8952   00357C  6ED9               	movwf	fsr2l,c
  8953   00357E  6ADA               	clrf	fsr2h,c
  8954   003580  0E02               	movlw	2
  8955   003582  26DF               	addwf	indf2,f,c
  8956   003584  5CDF               	subwf	indf2,w,c
  8957   003586  6ED9               	movwf	fsr2l,c
  8958   003588  6ADA               	clrf	fsr2h,c
  8959   00358A  CFDE F0A7          	movff	postinc2,vfpfcnvrt@convarg
  8960   00358E  CFDE F0A8          	movff	postinc2,vfpfcnvrt@convarg+1
  8961   003592                     
  8962                           ; BSR set to: 0
  8963                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  8964   003592  0E01               	movlw	1
  8965   003594  25AC               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8966   003596  6FA5               	movwf	??_vfpfcnvrt& (0+255),b
  8967   003598  0E00               	movlw	0
  8968   00359A  21AD               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8969   00359C  6FA6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8970   00359E  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8971   0035A0  6ED9               	movwf	fsr2l,c
  8972   0035A2  6ADA               	clrf	fsr2h,c
  8973   0035A4  C0A5  FFDE         	movff	??_vfpfcnvrt,postinc2
  8974   0035A8  C0A6  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8975   0035AC                     
  8976                           ; BSR set to: 0
  8977                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  8978   0035AC  C0A2  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  8979   0035B0  C0A7  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  8980   0035B4  C0A8  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  8981   0035B8  ECB4  F014         	call	_dtoa	;wreg free
  8982   0035BC  EF97  F01B         	goto	l981
  8983   0035C0                     l6440:
  8984                           
  8985                           ; BSR set to: 0
  8986                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  8987   0035C0  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8988   0035C2  6ED9               	movwf	fsr2l,c
  8989   0035C4  6ADA               	clrf	fsr2h,c
  8990   0035C6  CFDE F0AC          	movff	postinc2,vfpfcnvrt@cp
  8991   0035CA  CFDD F0AD          	movff	postdec2,vfpfcnvrt@cp+1
  8992   0035CE                     
  8993                           ; BSR set to: 0
  8994                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  8995   0035CE  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8996   0035D2  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8997   0035D6                     	if	0	;tblptru may be non-zero
  8998   0035D6                     	endif
  8999   0035D6                     	if	0	;tblptru may be non-zero
  9000   0035D6                     	endif
  9001   0035D6  0008               	tblrd		*
  9002   0035D8  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  9003                           
  9004                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  9005   0035DC  EFFB  F01A         	goto	l6450
  9006   0035E0                     l6444:
  9007                           
  9008                           ; BSR set to: 0
  9009                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  9010   0035E0  4BAC               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  9011   0035E2  2BAD               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  9012                           
  9013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  9014   0035E4  EF0A  F01B         	goto	l6452
  9015   0035E8                     l6446:
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  9019   0035E8  0E6C               	movlw	108
  9020   0035EA  6FAB               	movwf	vfpfcnvrt@c& (0+255),b
  9021                           
  9022                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  9023   0035EC  EF0A  F01B         	goto	l6452
  9024   0035F0                     l987:
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  9028   0035F0  6BAB               	clrf	vfpfcnvrt@c& (0+255),b
  9029                           
  9030                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  9031   0035F2  EF0A  F01B         	goto	l6452
  9032   0035F6                     l6450:
  9033                           
  9034                           ; BSR set to: 0
  9035   0035F6  51AB               	movf	vfpfcnvrt@c& (0+255),w,b
  9036                           
  9037                           ; Switch size 1, requested type "simple"
  9038                           ; Number of cases is 3, Range of values is 76 to 108
  9039                           ; switch strategies available:
  9040                           ; Name         Instructions Cycles
  9041                           ; simple_byte           10     6 (average)
  9042                           ;	Chosen strategy is simple_byte
  9043   0035F8  0A4C               	xorlw	76	; case 76
  9044   0035FA  B4D8               	btfsc	status,2,c
  9045   0035FC  EFF0  F01A         	goto	l6444
  9046   003600  0A2A               	xorlw	42	; case 102
  9047   003602  B4D8               	btfsc	status,2,c
  9048   003604  EFF4  F01A         	goto	l6446
  9049   003608  0A0A               	xorlw	10	; case 108
  9050   00360A  B4D8               	btfsc	status,2,c
  9051   00360C  EFF0  F01A         	goto	l6444
  9052   003610  EFF8  F01A         	goto	l987
  9053   003614                     l6452:
  9054                           
  9055                           ; BSR set to: 0
  9056   003614  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9057   003618  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9058   00361C                     	if	0	;tblptru may be non-zero
  9059   00361C                     	endif
  9060   00361C                     	if	0	;tblptru may be non-zero
  9061   00361C                     	endif
  9062   00361C  0008               	tblrd		*
  9063   00361E  50F5               	movf	tablat,w,c
  9064   003620  0A66               	xorlw	102
  9065   003622  A4D8               	btfss	status,2,c
  9066   003624  EF16  F01B         	goto	u8311
  9067   003628  EF18  F01B         	goto	u8310
  9068   00362C                     u8311:
  9069   00362C  EF7D  F01B         	goto	l6472
  9070   003630                     u8310:
  9071   003630  EF42  F01B         	goto	l6460
  9072   003634                     l6454:
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9076   003634  51A4               	movf	vfpfcnvrt@ap& (0+255),w,b
  9077   003636  6ED9               	movwf	fsr2l,c
  9078   003638  6ADA               	clrf	fsr2h,c
  9079   00363A  CFDF F0A5          	movff	indf2,??_vfpfcnvrt
  9080   00363E  0E04               	movlw	4
  9081   003640  26DF               	addwf	indf2,f,c
  9082   003642  51A5               	movf	??_vfpfcnvrt& (0+255),w,b
  9083   003644  6ED9               	movwf	fsr2l,c
  9084   003646  6ADA               	clrf	fsr2h,c
  9085   003648  CFDE F0A7          	movff	postinc2,vfpfcnvrt@convarg
  9086   00364C  CFDE F0A8          	movff	postinc2,vfpfcnvrt@convarg+1
  9087   003650  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg+2
  9088   003654  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+3
  9089                           
  9090                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  9091   003658  EF4D  F01B         	goto	l6462
  9092   00365C                     l6456:
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  9096   00365C  51A4               	movf	vfpfcnvrt@ap& (0+255),w,b
  9097   00365E  6ED9               	movwf	fsr2l,c
  9098   003660  6ADA               	clrf	fsr2h,c
  9099   003662  CFDF F0A5          	movff	indf2,??_vfpfcnvrt
  9100   003666  0E04               	movlw	4
  9101   003668  26DF               	addwf	indf2,f,c
  9102   00366A  51A5               	movf	??_vfpfcnvrt& (0+255),w,b
  9103   00366C  6ED9               	movwf	fsr2l,c
  9104   00366E  6ADA               	clrf	fsr2h,c
  9105   003670  CFDE F0A7          	movff	postinc2,vfpfcnvrt@convarg
  9106   003674  CFDE F0A8          	movff	postinc2,vfpfcnvrt@convarg+1
  9107   003678  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg+2
  9108   00367C  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+3
  9109                           
  9110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  9111   003680  EF4D  F01B         	goto	l6462
  9112   003684                     l6460:
  9113                           
  9114                           ; BSR set to: 0
  9115   003684  51AB               	movf	vfpfcnvrt@c& (0+255),w,b
  9116                           
  9117                           ; Switch size 1, requested type "simple"
  9118                           ; Number of cases is 2, Range of values is 76 to 108
  9119                           ; switch strategies available:
  9120                           ; Name         Instructions Cycles
  9121                           ; simple_byte            7     4 (average)
  9122                           ;	Chosen strategy is simple_byte
  9123   003686  0A4C               	xorlw	76	; case 76
  9124   003688  B4D8               	btfsc	status,2,c
  9125   00368A  EF2E  F01B         	goto	l6456
  9126   00368E  0A20               	xorlw	32	; case 108
  9127   003690  B4D8               	btfsc	status,2,c
  9128   003692  EF1A  F01B         	goto	l6454
  9129   003696  EF4D  F01B         	goto	l6462
  9130   00369A                     l6462:
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  9134   00369A  0E01               	movlw	1
  9135   00369C  25AC               	addwf	vfpfcnvrt@cp& (0+255),w,b
  9136   00369E  6FA5               	movwf	??_vfpfcnvrt& (0+255),b
  9137   0036A0  0E00               	movlw	0
  9138   0036A2  21AD               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  9139   0036A4  6FA6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  9140   0036A6  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9141   0036A8  6ED9               	movwf	fsr2l,c
  9142   0036AA  6ADA               	clrf	fsr2h,c
  9143   0036AC  C0A5  FFDE         	movff	??_vfpfcnvrt,postinc2
  9144   0036B0  C0A6  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  9145                           
  9146                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  9147   0036B4  EF71  F01B         	goto	l6470
  9148   0036B8                     l6464:
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  9152   0036B8  C0A2  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
  9153   0036BC  C0A7  F071         	movff	vfpfcnvrt@convarg,efgtoa@f
  9154   0036C0  C0A8  F072         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  9155   0036C4  C0A9  F073         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  9156   0036C8  C0AA  F074         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  9157   0036CC  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9158   0036D0  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9159   0036D4                     	if	0	;tblptru may be non-zero
  9160   0036D4                     	endif
  9161   0036D4                     	if	0	;tblptru may be non-zero
  9162   0036D4                     	endif
  9163   0036D4  0008               	tblrd		*
  9164   0036D6  CFF5 F075          	movff	tablat,efgtoa@c
  9165   0036DA  ECA9  F027         	call	_efgtoa	;wreg free
  9166   0036DE  EF97  F01B         	goto	l981
  9167   0036E2                     l6470:
  9168                           
  9169                           ; BSR set to: 0
  9170   0036E2  C0AC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9171   0036E6  C0AD  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9172   0036EA                     	if	0	;tblptru may be non-zero
  9173   0036EA                     	endif
  9174   0036EA                     	if	0	;tblptru may be non-zero
  9175   0036EA                     	endif
  9176   0036EA  0008               	tblrd		*
  9177   0036EC  50F5               	movf	tablat,w,c
  9178                           
  9179                           ; Switch size 1, requested type "simple"
  9180                           ; Number of cases is 1, Range of values is 102 to 102
  9181                           ; switch strategies available:
  9182                           ; Name         Instructions Cycles
  9183                           ; simple_byte            4     3 (average)
  9184                           ;	Chosen strategy is simple_byte
  9185   0036EE  0A66               	xorlw	102	; case 102
  9186   0036F0  B4D8               	btfsc	status,2,c
  9187   0036F2  EF5C  F01B         	goto	l6464
  9188   0036F6  EF7D  F01B         	goto	l6472
  9189   0036FA                     l6472:
  9190                           
  9191                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  9192   0036FA  0100               	movlb	0	; () banked
  9193   0036FC  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9194   0036FE  6ED9               	movwf	fsr2l,c
  9195   003700  6ADA               	clrf	fsr2h,c
  9196   003702  2ADE               	incf	postinc2,f,c
  9197   003704  0E00               	movlw	0
  9198   003706  22DD               	addwfc	postdec2,f,c
  9199   003708  EF97  F01B         	goto	l981
  9200   00370C                     l6476:
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  9204   00370C  51A3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9205   00370E  6ED9               	movwf	fsr2l,c
  9206   003710  6ADA               	clrf	fsr2h,c
  9207   003712  CFDE FFF6          	movff	postinc2,tblptrl
  9208   003716  CFDD FFF7          	movff	postdec2,tblptrh
  9209   00371A                     	if	0	;tblptru may be non-zero
  9210   00371A                     	endif
  9211   00371A                     	if	0	;tblptru may be non-zero
  9212   00371A                     	endif
  9213   00371A  0008               	tblrd		*
  9214   00371C  50F5               	movf	tablat,w,c
  9215   00371E  6E01               	movwf	fputc@c^0,c
  9216   003720  6A02               	clrf	(fputc@c+1)^0,c
  9217   003722  C0A2  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9218   003726  ECBE  F011         	call	_fputc	;wreg free
  9219   00372A  EF7D  F01B         	goto	l6472
  9220   00372E                     l981:
  9221   00372E  0012               	return		;funcret
  9222   003730                     __end_of_vfpfcnvrt:
  9223                           	callstack 0
  9224                           
  9225 ;; *************** function _read_prec_or_width *****************
  9226 ;; Defined at:
  9227 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  9230 ;;		 -> vfprintf@cfmt(2), 
  9231 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  9232 ;;		 -> sprintf@ap(1), 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  c               1    4[COMRAM] unsigned char 
  9235 ;;  n               2    5[COMRAM] int 
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  2    0[COMRAM] int 
  9238 ;; Registers used:
  9239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9245 ;;      Params:         2       0       0       0       0       0       0       0       0
  9246 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9247 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9248 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9249 ;;Total ram usage:        7 bytes
  9250 ;; Hardware stack levels used: 1
  9251 ;; This function calls:
  9252 ;;		Nothing
  9253 ;; This function is called by:
  9254 ;;		_vfpfcnvrt
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           	psect	text16
  9259   0020C2                     __ptext16:
  9260                           	callstack 0
  9261   0020C2                     _read_prec_or_width:
  9262                           	callstack 26
  9263   0020C2                     
  9264                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  9265   0020C2  0E00               	movlw	0
  9266   0020C4  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  9267   0020C6  0E00               	movlw	0
  9268   0020C8  6E06               	movwf	read_prec_or_width@n^0,c
  9269   0020CA                     
  9270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  9271   0020CA  5001               	movf	read_prec_or_width@fmt^0,w,c
  9272   0020CC  6ED9               	movwf	fsr2l,c
  9273   0020CE  6ADA               	clrf	fsr2h,c
  9274   0020D0  CFDE FFF6          	movff	postinc2,tblptrl
  9275   0020D4  CFDD FFF7          	movff	postdec2,tblptrh
  9276   0020D8                     	if	0	;tblptru may be non-zero
  9277   0020D8                     	endif
  9278   0020D8                     	if	0	;tblptru may be non-zero
  9279   0020D8                     	endif
  9280   0020D8  0008               	tblrd		*
  9281   0020DA  50F5               	movf	tablat,w,c
  9282   0020DC  0A2A               	xorlw	42
  9283   0020DE  A4D8               	btfss	status,2,c
  9284   0020E0  EF74  F010         	goto	u8251
  9285   0020E4  EF76  F010         	goto	u8250
  9286   0020E8                     u8251:
  9287   0020E8  EF9F  F010         	goto	l6410
  9288   0020EC                     u8250:
  9289   0020EC                     
  9290                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  9291   0020EC  5001               	movf	read_prec_or_width@fmt^0,w,c
  9292   0020EE  6ED9               	movwf	fsr2l,c
  9293   0020F0  6ADA               	clrf	fsr2h,c
  9294   0020F2  2ADE               	incf	postinc2,f,c
  9295   0020F4  0E00               	movlw	0
  9296   0020F6  22DD               	addwfc	postdec2,f,c
  9297   0020F8                     
  9298                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  9299   0020F8  5002               	movf	read_prec_or_width@ap^0,w,c
  9300   0020FA  6ED9               	movwf	fsr2l,c
  9301   0020FC  6ADA               	clrf	fsr2h,c
  9302   0020FE  0E02               	movlw	2
  9303   002100  26DF               	addwf	indf2,f,c
  9304   002102  5CDF               	subwf	indf2,w,c
  9305   002104  6ED9               	movwf	fsr2l,c
  9306   002106  6ADA               	clrf	fsr2h,c
  9307   002108  CFDE F006          	movff	postinc2,read_prec_or_width@n
  9308   00210C  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  9309                           
  9310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  9311   002110  EFB2  F010         	goto	l969
  9312   002114                     l6406:
  9313                           
  9314                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  9315   002114  0E0A               	movlw	10
  9316   002116  0206               	mulwf	read_prec_or_width@n^0,c
  9317   002118  CFF3 F003          	movff	prodl,??_read_prec_or_width
  9318   00211C  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  9319   002120  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  9320   002122  50F3               	movf	prodl,w,c
  9321   002124  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  9322   002126  5005               	movf	read_prec_or_width@c^0,w,c
  9323   002128  2403               	addwf	??_read_prec_or_width^0,w,c
  9324   00212A  6E06               	movwf	read_prec_or_width@n^0,c
  9325   00212C  0E00               	movlw	0
  9326   00212E  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  9327   002130  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  9328   002132                     
  9329                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  9330   002132  5001               	movf	read_prec_or_width@fmt^0,w,c
  9331   002134  6ED9               	movwf	fsr2l,c
  9332   002136  6ADA               	clrf	fsr2h,c
  9333   002138  2ADE               	incf	postinc2,f,c
  9334   00213A  0E00               	movlw	0
  9335   00213C  22DD               	addwfc	postdec2,f,c
  9336   00213E                     l6410:
  9337                           
  9338                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  9339   00213E  5001               	movf	read_prec_or_width@fmt^0,w,c
  9340   002140  6ED9               	movwf	fsr2l,c
  9341   002142  6ADA               	clrf	fsr2h,c
  9342   002144  CFDE FFF6          	movff	postinc2,tblptrl
  9343   002148  CFDD FFF7          	movff	postdec2,tblptrh
  9344   00214C                     	if	0	;tblptru may be non-zero
  9345   00214C                     	endif
  9346   00214C                     	if	0	;tblptru may be non-zero
  9347   00214C                     	endif
  9348   00214C  0008               	tblrd		*
  9349   00214E  50F5               	movf	tablat,w,c
  9350   002150  0FD0               	addlw	208
  9351   002152  6E05               	movwf	read_prec_or_width@c^0,c
  9352   002154  0E09               	movlw	9
  9353   002156  6405               	cpfsgt	read_prec_or_width@c^0,c
  9354   002158  EFB0  F010         	goto	u8261
  9355   00215C  EFB2  F010         	goto	u8260
  9356   002160                     u8261:
  9357   002160  EF8A  F010         	goto	l6406
  9358   002164                     u8260:
  9359   002164                     l969:
  9360                           
  9361                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  9362   002164  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  9363   002168  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  9364   00216C  0012               	return		;funcret
  9365   00216E                     __end_of_read_prec_or_width:
  9366                           	callstack 0
  9367                           
  9368 ;; *************** function _efgtoa *****************
  9369 ;; Defined at:
  9370 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
  9373 ;;		 -> sprintf@f(11), 
  9374 ;;  f               4   17[BANK0 ] PTR struct _IO_FILE
  9375 ;;  c               1   21[BANK0 ] unsigned char 
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;  u               4   62[BANK0 ] struct flui
  9378 ;;  g               4   56[BANK0 ] struct flui
  9379 ;;  l               4   51[BANK0 ] struct flui
  9380 ;;  h               4   47[BANK0 ] struct flui
  9381 ;;  ou              4   41[BANK0 ] struct flui
  9382 ;;  n               2   60[BANK0 ] int 
  9383 ;;  i               2   45[BANK0 ] int 
  9384 ;;  w               2   39[BANK0 ] int 
  9385 ;;  e               2   37[BANK0 ] int 
  9386 ;;  m               2   35[BANK0 ] int 
  9387 ;;  d               2   33[BANK0 ] int 
  9388 ;;  t               2   26[BANK0 ] int 
  9389 ;;  p               2   24[BANK0 ] int 
  9390 ;;  ne              2   22[BANK0 ] int 
  9391 ;;  sign            1   55[BANK0 ] unsigned char 
  9392 ;;  nmode           1   32[BANK0 ] unsigned char 
  9393 ;;  mode            1   31[BANK0 ] unsigned char 
  9394 ;;  pp              1   30[BANK0 ] unsigned char 
  9395 ;;  esign           1    0        unsigned char 
  9396 ;; Return value:  Size  Location     Type
  9397 ;;                  1    wreg      void 
  9398 ;; Registers used:
  9399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9400 ;; Tracked objects:
  9401 ;;		On entry : 0/0
  9402 ;;		On exit  : 0/0
  9403 ;;		Unchanged: 0/0
  9404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9405 ;;      Params:         0       6       0       0       0       0       0       0       0
  9406 ;;      Locals:         0      44       0       0       0       0       0       0       0
  9407 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9408 ;;      Totals:         2      50       0       0       0       0       0       0       0
  9409 ;;Total ram usage:       52 bytes
  9410 ;; Hardware stack levels used: 1
  9411 ;; Hardware stack levels required when called: 4
  9412 ;; This function calls:
  9413 ;;		___fladd
  9414 ;;		___fldiv
  9415 ;;		___fleq
  9416 ;;		___flge
  9417 ;;		___flmul
  9418 ;;		___flneg
  9419 ;;		___flsub
  9420 ;;		___fltol
  9421 ;;		___fpclassifyf
  9422 ;;		_floorf
  9423 ;;		_labs
  9424 ;;		_memcpy
  9425 ;;		_pad
  9426 ;;		_strcpy
  9427 ;; This function is called by:
  9428 ;;		_vfpfcnvrt
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           	psect	text17
  9433   004F52                     __ptext17:
  9434                           	callstack 0
  9435   004F52                     _efgtoa:
  9436                           	callstack 22
  9437   004F52                     
  9438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  9439   004F52  0100               	movlb	0	; () banked
  9440   004F54  6B97               	clrf	efgtoa@sign& (0+255),b
  9441                           
  9442                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  9443   004F56  C071  F098         	movff	efgtoa@f,efgtoa@g
  9444   004F5A  C072  F099         	movff	efgtoa@f+1,efgtoa@g+1
  9445   004F5E  C073  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  9446   004F62  C074  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  9447   004F66                     
  9448                           ; BSR set to: 0
  9449                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  9450   004F66  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9451   004F68  EFBA  F027         	goto	u7930
  9452   004F6C  EFB8  F027         	goto	u7931
  9453   004F70                     u7931:
  9454   004F70  EFCE  F027         	goto	l6186
  9455   004F74                     u7930:
  9456   004F74                     
  9457                           ; BSR set to: 0
  9458                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  9459   004F74  0E01               	movlw	1
  9460   004F76  6F97               	movwf	efgtoa@sign& (0+255),b
  9461   004F78                     
  9462                           ; BSR set to: 0
  9463                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  9464   004F78  C098  F001         	movff	efgtoa@g,___flneg@f1
  9465   004F7C  C099  F002         	movff	efgtoa@g+1,___flneg@f1+1
  9466   004F80  C09A  F003         	movff	efgtoa@g+2,___flneg@f1+2
  9467   004F84  C09B  F004         	movff	efgtoa@g+3,___flneg@f1+3
  9468   004F88  ECAA  F00D         	call	___flneg	;wreg free
  9469   004F8C  C001  F098         	movff	?___flneg,efgtoa@g
  9470   004F90  C002  F099         	movff	?___flneg+1,efgtoa@g+1
  9471   004F94  C003  F09A         	movff	?___flneg+2,efgtoa@g+2
  9472   004F98  C004  F09B         	movff	?___flneg+3,efgtoa@g+3
  9473   004F9C                     l6186:
  9474                           
  9475                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  9476   004F9C  0E00               	movlw	0
  9477   004F9E  0100               	movlb	0	; () banked
  9478   004FA0  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
  9479   004FA2  0E00               	movlw	0
  9480   004FA4  6F9C               	movwf	efgtoa@n& (0+255),b
  9481   004FA6                     
  9482                           ; BSR set to: 0
  9483                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  9484   004FA6  C232  F087         	movff	_width,efgtoa@w
  9485   004FAA  C233  F088         	movff	_width+1,efgtoa@w+1
  9486   004FAE                     
  9487                           ; BSR set to: 0
  9488                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  9489   004FAE  5197               	movf	efgtoa@sign& (0+255),w,b
  9490   004FB0  B4D8               	btfsc	status,2,c
  9491   004FB2  EFDD  F027         	goto	u7941
  9492   004FB6  EFDF  F027         	goto	u7940
  9493   004FBA                     u7941:
  9494   004FBA  EFF3  F027         	goto	l6200
  9495   004FBE                     u7940:
  9496   004FBE                     
  9497                           ; BSR set to: 0
  9498                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  9499   004FBE  5197               	movf	efgtoa@sign& (0+255),w,b
  9500   004FC0  A4D8               	btfss	status,2,c
  9501   004FC2  EFE5  F027         	goto	u7951
  9502   004FC6  EFE7  F027         	goto	u7950
  9503   004FCA                     u7951:
  9504   004FCA  EFED  F027         	goto	l6196
  9505   004FCE                     u7950:
  9506   004FCE                     
  9507                           ; BSR set to: 0
  9508   004FCE  0E00               	movlw	0
  9509   004FD0  6F7D               	movwf	(_efgtoa$1024+1)& (0+255),b
  9510   004FD2  0E2B               	movlw	43
  9511   004FD4  6F7C               	movwf	_efgtoa$1024& (0+255),b
  9512   004FD6  EFF1  F027         	goto	l6198
  9513   004FDA                     l6196:
  9514                           
  9515                           ; BSR set to: 0
  9516   004FDA  0E00               	movlw	0
  9517   004FDC  6F7D               	movwf	(_efgtoa$1024+1)& (0+255),b
  9518   004FDE  0E2D               	movlw	45
  9519   004FE0  6F7C               	movwf	_efgtoa$1024& (0+255),b
  9520   004FE2                     l6198:
  9521                           
  9522                           ; BSR set to: 0
  9523   004FE2  C07C  F097         	movff	_efgtoa$1024,efgtoa@sign
  9524   004FE6                     l6200:
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  9528   004FE6  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  9529   004FEA  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9530   004FEE  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9531   004FF2  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9532   004FF6  EC7C  F012         	call	___fpclassifyf	;wreg free
  9533   004FFA  0401               	decf	?___fpclassifyf^0,w,c
  9534   004FFC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  9535   004FFE  A4D8               	btfss	status,2,c
  9536   005000  EF04  F028         	goto	u7961
  9537   005004  EF06  F028         	goto	u7960
  9538   005008                     u7961:
  9539   005008  EF37  F028         	goto	l6218
  9540   00500C                     u7960:
  9541   00500C                     
  9542                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  9543   00500C  0100               	movlb	0	; () banked
  9544   00500E  5197               	movf	efgtoa@sign& (0+255),w,b
  9545   005010  B4D8               	btfsc	status,2,c
  9546   005012  EF0D  F028         	goto	u7971
  9547   005016  EF0F  F028         	goto	u7970
  9548   00501A                     u7971:
  9549   00501A  EF18  F028         	goto	l6210
  9550   00501E                     u7970:
  9551   00501E                     
  9552                           ; BSR set to: 0
  9553                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  9554   00501E  C097  F236         	movff	efgtoa@sign,_dbuf
  9555   005022                     
  9556                           ; BSR set to: 0
  9557                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  9558   005022  0787               	decf	efgtoa@w& (0+255),f,b
  9559   005024  A0D8               	btfss	status,0,c
  9560   005026  0788               	decf	(efgtoa@w+1)& (0+255),f,b
  9561   005028                     
  9562                           ; BSR set to: 0
  9563                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  9564   005028  0E00               	movlw	0
  9565   00502A  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
  9566   00502C  0E01               	movlw	1
  9567   00502E  6F9C               	movwf	efgtoa@n& (0+255),b
  9568   005030                     l6210:
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  9572   005030  0E36               	movlw	low _dbuf
  9573   005032  259C               	addwf	efgtoa@n& (0+255),w,b
  9574   005034  6E01               	movwf	strcpy@dest^0,c
  9575   005036  0E02               	movlw	high _dbuf
  9576   005038  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9577   00503A  6E02               	movwf	(strcpy@dest+1)^0,c
  9578   00503C  0EF2               	movlw	low STR_12
  9579   00503E  6E03               	movwf	strcpy@src^0,c
  9580   005040  0E7F               	movlw	high STR_12
  9581   005042  6E04               	movwf	(strcpy@src+1)^0,c
  9582   005044  ECC6  F00D         	call	_strcpy	;wreg free
  9583   005048                     l6212:
  9584                           
  9585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  9586   005048  0100               	movlb	0	; () banked
  9587   00504A  0EFD               	movlw	253
  9588   00504C  2787               	addwf	efgtoa@w& (0+255),f,b
  9589   00504E  0EFF               	movlw	255
  9590   005050  2388               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9591   005052                     
  9592                           ; BSR set to: 0
  9593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  9594   005052  C070  F00F         	movff	efgtoa@fp,pad@fp
  9595   005056  0E36               	movlw	low _dbuf
  9596   005058  6E10               	movwf	pad@buf^0,c
  9597   00505A  0E02               	movlw	high _dbuf
  9598   00505C  6E11               	movwf	(pad@buf+1)^0,c
  9599   00505E  C087  F012         	movff	efgtoa@w,pad@p
  9600   005062  C088  F013         	movff	efgtoa@w+1,pad@p+1
  9601   005066  EC33  F00F         	call	_pad	;wreg free
  9602   00506A  EF9E  F02C         	goto	l924
  9603   00506E                     l6218:
  9604                           
  9605                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  9606   00506E  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  9607   005072  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9608   005076  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9609   00507A  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9610   00507E  EC7C  F012         	call	___fpclassifyf	;wreg free
  9611   005082  5001               	movf	?___fpclassifyf^0,w,c
  9612   005084  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  9613   005086  A4D8               	btfss	status,2,c
  9614   005088  EF48  F028         	goto	u7981
  9615   00508C  EF4A  F028         	goto	u7980
  9616   005090                     u7981:
  9617   005090  EF6A  F028         	goto	l6236
  9618   005094                     u7980:
  9619   005094                     
  9620                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  9621   005094  0100               	movlb	0	; () banked
  9622   005096  5197               	movf	efgtoa@sign& (0+255),w,b
  9623   005098  B4D8               	btfsc	status,2,c
  9624   00509A  EF51  F028         	goto	u7991
  9625   00509E  EF53  F028         	goto	u7990
  9626   0050A2                     u7991:
  9627   0050A2  EF5C  F028         	goto	l6228
  9628   0050A6                     u7990:
  9629   0050A6                     
  9630                           ; BSR set to: 0
  9631                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  9632   0050A6  C097  F236         	movff	efgtoa@sign,_dbuf
  9633   0050AA                     
  9634                           ; BSR set to: 0
  9635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  9636   0050AA  0787               	decf	efgtoa@w& (0+255),f,b
  9637   0050AC  A0D8               	btfss	status,0,c
  9638   0050AE  0788               	decf	(efgtoa@w+1)& (0+255),f,b
  9639   0050B0                     
  9640                           ; BSR set to: 0
  9641                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  9642   0050B0  0E00               	movlw	0
  9643   0050B2  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
  9644   0050B4  0E01               	movlw	1
  9645   0050B6  6F9C               	movwf	efgtoa@n& (0+255),b
  9646   0050B8                     l6228:
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  9650   0050B8  0E36               	movlw	low _dbuf
  9651   0050BA  259C               	addwf	efgtoa@n& (0+255),w,b
  9652   0050BC  6E01               	movwf	strcpy@dest^0,c
  9653   0050BE  0E02               	movlw	high _dbuf
  9654   0050C0  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9655   0050C2  6E02               	movwf	(strcpy@dest+1)^0,c
  9656   0050C4  0EF6               	movlw	low STR_15
  9657   0050C6  6E03               	movwf	strcpy@src^0,c
  9658   0050C8  0E7F               	movlw	high STR_15
  9659   0050CA  6E04               	movwf	(strcpy@src+1)^0,c
  9660   0050CC  ECC6  F00D         	call	_strcpy	;wreg free
  9661   0050D0  EF24  F028         	goto	l6212
  9662   0050D4                     l6236:
  9663                           
  9664                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  9665   0050D4  0E00               	movlw	0
  9666   0050D6  0100               	movlb	0	; () banked
  9667   0050D8  6F9E               	movwf	efgtoa@u& (0+255),b
  9668   0050DA  0E00               	movlw	0
  9669   0050DC  6F9F               	movwf	(efgtoa@u+1)& (0+255),b
  9670   0050DE  0E80               	movlw	128
  9671   0050E0  6FA0               	movwf	(efgtoa@u+2)& (0+255),b
  9672   0050E2  0E3F               	movlw	63
  9673   0050E4  6FA1               	movwf	(efgtoa@u+3)& (0+255),b
  9674                           
  9675                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  9676   0050E6  0E00               	movlw	0
  9677   0050E8  6F86               	movwf	(efgtoa@e+1)& (0+255),b
  9678   0050EA  0E00               	movlw	0
  9679   0050EC  6F85               	movwf	efgtoa@e& (0+255),b
  9680   0050EE                     
  9681                           ; BSR set to: 0
  9682                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  9683   0050EE  C098  F001         	movff	efgtoa@g,___fleq@ff1
  9684   0050F2  C099  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  9685   0050F6  C09A  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  9686   0050FA  C09B  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  9687   0050FE  0E00               	movlw	0
  9688   005100  6E05               	movwf	___fleq@ff2^0,c
  9689   005102  0E00               	movlw	0
  9690   005104  6E06               	movwf	(___fleq@ff2+1)^0,c
  9691   005106  0E00               	movlw	0
  9692   005108  6E07               	movwf	(___fleq@ff2+2)^0,c
  9693   00510A  0E00               	movlw	0
  9694   00510C  6E08               	movwf	(___fleq@ff2+3)^0,c
  9695   00510E  EC0C  F010         	call	___fleq	;wreg free
  9696   005112  B0D8               	btfsc	status,0,c
  9697   005114  EF8E  F028         	goto	u8001
  9698   005118  EF90  F028         	goto	u8000
  9699   00511C                     u8001:
  9700   00511C  EF6F  F029         	goto	l927
  9701   005120                     u8000:
  9702   005120  EF9D  F028         	goto	l6244
  9703   005124                     l929:
  9704                           
  9705                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  9706   005124  C089  F09E         	movff	efgtoa@ou,efgtoa@u
  9707   005128  C08A  F09F         	movff	efgtoa@ou+1,efgtoa@u+1
  9708   00512C  C08B  F0A0         	movff	efgtoa@ou+2,efgtoa@u+2
  9709   005130  C08C  F0A1         	movff	efgtoa@ou+3,efgtoa@u+3
  9710   005134                     
  9711                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  9712   005134  0100               	movlb	0	; () banked
  9713   005136  4B85               	infsnz	efgtoa@e& (0+255),f,b
  9714   005138  2B86               	incf	(efgtoa@e+1)& (0+255),f,b
  9715   00513A                     l6244:
  9716                           
  9717                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  9718   00513A  C09E  F01F         	movff	efgtoa@u,___flmul@b
  9719   00513E  C09F  F020         	movff	efgtoa@u+1,___flmul@b+1
  9720   005142  C0A0  F021         	movff	efgtoa@u+2,___flmul@b+2
  9721   005146  C0A1  F022         	movff	efgtoa@u+3,___flmul@b+3
  9722   00514A  0E00               	movlw	0
  9723   00514C  6E23               	movwf	___flmul@a^0,c
  9724   00514E  0E00               	movlw	0
  9725   005150  6E24               	movwf	(___flmul@a+1)^0,c
  9726   005152  0E20               	movlw	32
  9727   005154  6E25               	movwf	(___flmul@a+2)^0,c
  9728   005156  0E41               	movlw	65
  9729   005158  6E26               	movwf	(___flmul@a+3)^0,c
  9730   00515A  ECBC  F020         	call	___flmul	;wreg free
  9731   00515E  C01F  F089         	movff	?___flmul,efgtoa@ou
  9732   005162  C020  F08A         	movff	?___flmul+1,efgtoa@ou+1
  9733   005166  C021  F08B         	movff	?___flmul+2,efgtoa@ou+2
  9734   00516A  C022  F08C         	movff	?___flmul+3,efgtoa@ou+3
  9735   00516E  0100               	movlb	0	; () banked
  9736   005170  5189               	movf	efgtoa@ou& (0+255),w,b
  9737   005172  5D98               	subwf	efgtoa@g& (0+255),w,b
  9738   005174  6E01               	movwf	labs@a^0,c
  9739   005176  518A               	movf	(efgtoa@ou+1)& (0+255),w,b
  9740   005178  5999               	subwfb	(efgtoa@g+1)& (0+255),w,b
  9741   00517A  6E02               	movwf	(labs@a+1)^0,c
  9742   00517C  518B               	movf	(efgtoa@ou+2)& (0+255),w,b
  9743   00517E  599A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  9744   005180  6E03               	movwf	(labs@a+2)^0,c
  9745   005182  518C               	movf	(efgtoa@ou+3)& (0+255),w,b
  9746   005184  599B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  9747   005186  6E04               	movwf	(labs@a+3)^0,c
  9748   005188  ECD9  F00E         	call	_labs	;wreg free
  9749   00518C  BE04               	btfsc	(?_labs+3)^0,7,c
  9750   00518E  EFD4  F028         	goto	u8011
  9751   005192  5004               	movf	(?_labs+3)^0,w,c
  9752   005194  1003               	iorwf	(?_labs+2)^0,w,c
  9753   005196  1002               	iorwf	(?_labs+1)^0,w,c
  9754   005198  E109               	bnz	u8010
  9755   00519A  0E02               	movlw	2
  9756   00519C  5C01               	subwf	?_labs^0,w,c
  9757   00519E  A0D8               	btfss	status,0,c
  9758   0051A0  EFD4  F028         	goto	u8011
  9759   0051A4  EFD6  F028         	goto	u8010
  9760   0051A8                     u8011:
  9761   0051A8  EF92  F028         	goto	l929
  9762   0051AC                     u8010:
  9763   0051AC  C089  F040         	movff	efgtoa@ou,___flge@ff1
  9764   0051B0  C08A  F041         	movff	efgtoa@ou+1,___flge@ff1+1
  9765   0051B4  C08B  F042         	movff	efgtoa@ou+2,___flge@ff1+2
  9766   0051B8  C08C  F043         	movff	efgtoa@ou+3,___flge@ff1+3
  9767   0051BC  C098  F044         	movff	efgtoa@g,___flge@ff2
  9768   0051C0  C099  F045         	movff	efgtoa@g+1,___flge@ff2+1
  9769   0051C4  C09A  F046         	movff	efgtoa@g+2,___flge@ff2+2
  9770   0051C8  C09B  F047         	movff	efgtoa@g+3,___flge@ff2+3
  9771   0051CC  ECFB  F012         	call	___flge	;wreg free
  9772   0051D0  A0D8               	btfss	status,0,c
  9773   0051D2  EFED  F028         	goto	u8021
  9774   0051D6  EFEF  F028         	goto	u8020
  9775   0051DA                     u8021:
  9776   0051DA  EF92  F028         	goto	l929
  9777   0051DE                     u8020:
  9778   0051DE                     
  9779                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  9780   0051DE  0100               	movlb	0	; () banked
  9781   0051E0  519E               	movf	efgtoa@u& (0+255),w,b
  9782   0051E2  5D98               	subwf	efgtoa@g& (0+255),w,b
  9783   0051E4  6E01               	movwf	labs@a^0,c
  9784   0051E6  519F               	movf	(efgtoa@u+1)& (0+255),w,b
  9785   0051E8  5999               	subwfb	(efgtoa@g+1)& (0+255),w,b
  9786   0051EA  6E02               	movwf	(labs@a+1)^0,c
  9787   0051EC  51A0               	movf	(efgtoa@u+2)& (0+255),w,b
  9788   0051EE  599A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  9789   0051F0  6E03               	movwf	(labs@a+2)^0,c
  9790   0051F2  51A1               	movf	(efgtoa@u+3)& (0+255),w,b
  9791   0051F4  599B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  9792   0051F6  6E04               	movwf	(labs@a+3)^0,c
  9793   0051F8  ECD9  F00E         	call	_labs	;wreg free
  9794   0051FC  BE04               	btfsc	(?_labs+3)^0,7,c
  9795   0051FE  EF0E  F029         	goto	u8030
  9796   005202  5004               	movf	(?_labs+3)^0,w,c
  9797   005204  1003               	iorwf	(?_labs+2)^0,w,c
  9798   005206  1002               	iorwf	(?_labs+1)^0,w,c
  9799   005208  E107               	bnz	u8031
  9800   00520A  0E02               	movlw	2
  9801   00520C  5C01               	subwf	?_labs^0,w,c
  9802   00520E  B0D8               	btfsc	status,0,c
  9803   005210  EF0C  F029         	goto	u8031
  9804   005214  EF0E  F029         	goto	u8030
  9805   005218                     u8031:
  9806   005218  EF56  F029         	goto	l6262
  9807   00521C                     u8030:
  9808   00521C                     l6252:
  9809                           
  9810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  9811   00521C  C09E  F098         	movff	efgtoa@u,efgtoa@g
  9812   005220  C09F  F099         	movff	efgtoa@u+1,efgtoa@g+1
  9813   005224  C0A0  F09A         	movff	efgtoa@u+2,efgtoa@g+2
  9814   005228  C0A1  F09B         	movff	efgtoa@u+3,efgtoa@g+3
  9815                           
  9816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  9817   00522C  EF6F  F029         	goto	l927
  9818   005230                     l6254:
  9819                           
  9820                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  9821   005230  C09E  F040         	movff	efgtoa@u,___fldiv@b
  9822   005234  C09F  F041         	movff	efgtoa@u+1,___fldiv@b+1
  9823   005238  C0A0  F042         	movff	efgtoa@u+2,___fldiv@b+2
  9824   00523C  C0A1  F043         	movff	efgtoa@u+3,___fldiv@b+3
  9825   005240  0E00               	movlw	0
  9826   005242  6E44               	movwf	___fldiv@a^0,c
  9827   005244  0E00               	movlw	0
  9828   005246  6E45               	movwf	(___fldiv@a+1)^0,c
  9829   005248  0E20               	movlw	32
  9830   00524A  6E46               	movwf	(___fldiv@a+2)^0,c
  9831   00524C  0E41               	movlw	65
  9832   00524E  6E47               	movwf	(___fldiv@a+3)^0,c
  9833   005250  EC05  F01D         	call	___fldiv	;wreg free
  9834   005254  C040  F09E         	movff	?___fldiv,efgtoa@u
  9835   005258  C041  F09F         	movff	?___fldiv+1,efgtoa@u+1
  9836   00525C  C042  F0A0         	movff	?___fldiv+2,efgtoa@u+2
  9837   005260  C043  F0A1         	movff	?___fldiv+3,efgtoa@u+3
  9838   005264                     
  9839                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  9840   005264  0100               	movlb	0	; () banked
  9841   005266  0785               	decf	efgtoa@e& (0+255),f,b
  9842   005268  A0D8               	btfss	status,0,c
  9843   00526A  0786               	decf	(efgtoa@e+1)& (0+255),f,b
  9844   00526C                     
  9845                           ; BSR set to: 0
  9846                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  9847   00526C  519E               	movf	efgtoa@u& (0+255),w,b
  9848   00526E  5D98               	subwf	efgtoa@g& (0+255),w,b
  9849   005270  6E01               	movwf	labs@a^0,c
  9850   005272  519F               	movf	(efgtoa@u+1)& (0+255),w,b
  9851   005274  5999               	subwfb	(efgtoa@g+1)& (0+255),w,b
  9852   005276  6E02               	movwf	(labs@a+1)^0,c
  9853   005278  51A0               	movf	(efgtoa@u+2)& (0+255),w,b
  9854   00527A  599A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  9855   00527C  6E03               	movwf	(labs@a+2)^0,c
  9856   00527E  51A1               	movf	(efgtoa@u+3)& (0+255),w,b
  9857   005280  599B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  9858   005282  6E04               	movwf	(labs@a+3)^0,c
  9859   005284  ECD9  F00E         	call	_labs	;wreg free
  9860   005288  BE04               	btfsc	(?_labs+3)^0,7,c
  9861   00528A  EF54  F029         	goto	u8040
  9862   00528E  5004               	movf	(?_labs+3)^0,w,c
  9863   005290  1003               	iorwf	(?_labs+2)^0,w,c
  9864   005292  1002               	iorwf	(?_labs+1)^0,w,c
  9865   005294  E107               	bnz	u8041
  9866   005296  0E02               	movlw	2
  9867   005298  5C01               	subwf	?_labs^0,w,c
  9868   00529A  B0D8               	btfsc	status,0,c
  9869   00529C  EF52  F029         	goto	u8041
  9870   0052A0  EF54  F029         	goto	u8040
  9871   0052A4                     u8041:
  9872   0052A4  EF56  F029         	goto	l6262
  9873   0052A8                     u8040:
  9874   0052A8  EF0E  F029         	goto	l6252
  9875   0052AC                     l6262:
  9876                           
  9877                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  9878   0052AC  C098  F040         	movff	efgtoa@g,___flge@ff1
  9879   0052B0  C099  F041         	movff	efgtoa@g+1,___flge@ff1+1
  9880   0052B4  C09A  F042         	movff	efgtoa@g+2,___flge@ff1+2
  9881   0052B8  C09B  F043         	movff	efgtoa@g+3,___flge@ff1+3
  9882   0052BC  C09E  F044         	movff	efgtoa@u,___flge@ff2
  9883   0052C0  C09F  F045         	movff	efgtoa@u+1,___flge@ff2+1
  9884   0052C4  C0A0  F046         	movff	efgtoa@u+2,___flge@ff2+2
  9885   0052C8  C0A1  F047         	movff	efgtoa@u+3,___flge@ff2+3
  9886   0052CC  ECFB  F012         	call	___flge	;wreg free
  9887   0052D0  A0D8               	btfss	status,0,c
  9888   0052D2  EF6D  F029         	goto	u8051
  9889   0052D6  EF6F  F029         	goto	u8050
  9890   0052DA                     u8051:
  9891   0052DA  EF18  F029         	goto	l6254
  9892   0052DE                     u8050:
  9893   0052DE                     l927:
  9894                           
  9895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  9896   0052DE  C075  F07F         	movff	efgtoa@c,efgtoa@mode
  9897                           
  9898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  9899   0052E2  C07F  F080         	movff	efgtoa@mode,efgtoa@nmode
  9900   0052E6                     
  9901                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  9902   0052E6  0100               	movlb	0	; () banked
  9903   0052E8  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  9904   0052EA  EF79  F029         	goto	u8061
  9905   0052EE  EF7B  F029         	goto	u8060
  9906   0052F2                     u8061:
  9907   0052F2  EF81  F029         	goto	l6268
  9908   0052F6                     u8060:
  9909   0052F6                     
  9910                           ; BSR set to: 0
  9911   0052F6  C0FD  F078         	movff	_prec,efgtoa@p
  9912   0052FA  C0FE  F079         	movff	_prec+1,efgtoa@p+1
  9913   0052FE  EF85  F029         	goto	l6270
  9914   005302                     l6268:
  9915                           
  9916                           ; BSR set to: 0
  9917   005302  0E00               	movlw	0
  9918   005304  6F79               	movwf	(efgtoa@p+1)& (0+255),b
  9919   005306  0E06               	movlw	6
  9920   005308  6F78               	movwf	efgtoa@p& (0+255),b
  9921   00530A                     l6270:
  9922                           
  9923                           ; BSR set to: 0
  9924                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  9925   00530A  C078  F083         	movff	efgtoa@p,efgtoa@m
  9926   00530E  C079  F084         	movff	efgtoa@p+1,efgtoa@m+1
  9927   005312                     
  9928                           ; BSR set to: 0
  9929                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  9930   005312  4B83               	infsnz	efgtoa@m& (0+255),f,b
  9931   005314  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  9932   005316                     
  9933                           ; BSR set to: 0
  9934                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  9935   005316  0E66               	movlw	102
  9936   005318  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  9937   00531A  A4D8               	btfss	status,2,c
  9938   00531C  EF92  F029         	goto	u8071
  9939   005320  EF94  F029         	goto	u8070
  9940   005324                     u8071:
  9941   005324  EFB4  F029         	goto	l6284
  9942   005328                     u8070:
  9943   005328                     
  9944                           ; BSR set to: 0
  9945                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  9946   005328  BF86               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9947   00532A  EF9B  F029         	goto	u8080
  9948   00532E  EF99  F029         	goto	u8081
  9949   005332                     u8081:
  9950   005332  EFA7  F029         	goto	l6280
  9951   005336                     u8080:
  9952   005336                     
  9953                           ; BSR set to: 0
  9954                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  9955   005336  0E00               	movlw	0
  9956   005338  6F9E               	movwf	efgtoa@u& (0+255),b
  9957   00533A  0E00               	movlw	0
  9958   00533C  6F9F               	movwf	(efgtoa@u+1)& (0+255),b
  9959   00533E  0E80               	movlw	128
  9960   005340  6FA0               	movwf	(efgtoa@u+2)& (0+255),b
  9961   005342  0E3F               	movlw	63
  9962   005344  6FA1               	movwf	(efgtoa@u+3)& (0+255),b
  9963                           
  9964                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  9965   005346  0E00               	movlw	0
  9966   005348  6F86               	movwf	(efgtoa@e+1)& (0+255),b
  9967   00534A  0E00               	movlw	0
  9968   00534C  6F85               	movwf	efgtoa@e& (0+255),b
  9969   00534E                     l6280:
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  9973   00534E  0E67               	movlw	103
  9974   005350  197F               	xorwf	efgtoa@mode& (0+255),w,b
  9975   005352  B4D8               	btfsc	status,2,c
  9976   005354  EFAE  F029         	goto	u8091
  9977   005358  EFB0  F029         	goto	u8090
  9978   00535C                     u8091:
  9979   00535C  EFB4  F029         	goto	l6284
  9980   005360                     u8090:
  9981   005360                     
  9982                           ; BSR set to: 0
  9983                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  9984   005360  5185               	movf	efgtoa@e& (0+255),w,b
  9985   005362  2783               	addwf	efgtoa@m& (0+255),f,b
  9986   005364  5186               	movf	(efgtoa@e+1)& (0+255),w,b
  9987   005366  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9988   005368                     l6284:
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  9992   005368  0E00               	movlw	0
  9993   00536A  6F8E               	movwf	(efgtoa@i+1)& (0+255),b
  9994   00536C  0E00               	movlw	0
  9995   00536E  6F8D               	movwf	efgtoa@i& (0+255),b
  9996   005370                     
  9997                           ; BSR set to: 0
  9998                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  9999   005370  C098  F08F         	movff	efgtoa@g,efgtoa@h
 10000   005374  C099  F090         	movff	efgtoa@g+1,efgtoa@h+1
 10001   005378  C09A  F091         	movff	efgtoa@g+2,efgtoa@h+2
 10002   00537C  C09B  F092         	movff	efgtoa@g+3,efgtoa@h+3
 10003   005380                     
 10004                           ; BSR set to: 0
 10005                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10006   005380  C09E  F089         	movff	efgtoa@u,efgtoa@ou
 10007   005384  C09F  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
 10008   005388  C0A0  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
 10009   00538C  C0A1  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
 10010                           
 10011                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 10012   005390  EF45  F02A         	goto	l6298
 10013   005394                     l6290:
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 10017   005394  C08F  F040         	movff	efgtoa@h,___fldiv@b
 10018   005398  C090  F041         	movff	efgtoa@h+1,___fldiv@b+1
 10019   00539C  C091  F042         	movff	efgtoa@h+2,___fldiv@b+2
 10020   0053A0  C092  F043         	movff	efgtoa@h+3,___fldiv@b+3
 10021   0053A4  C09E  F044         	movff	efgtoa@u,___fldiv@a
 10022   0053A8  C09F  F045         	movff	efgtoa@u+1,___fldiv@a+1
 10023   0053AC  C0A0  F046         	movff	efgtoa@u+2,___fldiv@a+2
 10024   0053B0  C0A1  F047         	movff	efgtoa@u+3,___fldiv@a+3
 10025   0053B4  EC05  F01D         	call	___fldiv	;wreg free
 10026   0053B8  C040  F059         	movff	?___fldiv,floorf@x
 10027   0053BC  C041  F05A         	movff	?___fldiv+1,floorf@x+1
 10028   0053C0  C042  F05B         	movff	?___fldiv+2,floorf@x+2
 10029   0053C4  C043  F05C         	movff	?___fldiv+3,floorf@x+3
 10030   0053C8  EC14  F017         	call	_floorf	;wreg free
 10031   0053CC  C059  F093         	movff	?_floorf,efgtoa@l
 10032   0053D0  C05A  F094         	movff	?_floorf+1,efgtoa@l+1
 10033   0053D4  C05B  F095         	movff	?_floorf+2,efgtoa@l+2
 10034   0053D8  C05C  F096         	movff	?_floorf+3,efgtoa@l+3
 10035                           
 10036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 10037   0053DC  C093  F001         	movff	efgtoa@l,___fltol@f1
 10038   0053E0  C094  F002         	movff	efgtoa@l+1,___fltol@f1+1
 10039   0053E4  C095  F003         	movff	efgtoa@l+2,___fltol@f1+2
 10040   0053E8  C096  F004         	movff	efgtoa@l+3,___fltol@f1+3
 10041   0053EC  EC7D  F013         	call	___fltol	;wreg free
 10042   0053F0  C001  F081         	movff	?___fltol,efgtoa@d
 10043   0053F4  C002  F082         	movff	?___fltol+1,efgtoa@d+1
 10044   0053F8                     
 10045                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 10046   0053F8  C08F  F038         	movff	efgtoa@h,___flsub@b
 10047   0053FC  C090  F039         	movff	efgtoa@h+1,___flsub@b+1
 10048   005400  C091  F03A         	movff	efgtoa@h+2,___flsub@b+2
 10049   005404  C092  F03B         	movff	efgtoa@h+3,___flsub@b+3
 10050   005408  C093  F023         	movff	efgtoa@l,___flmul@a
 10051   00540C  C094  F024         	movff	efgtoa@l+1,___flmul@a+1
 10052   005410  C095  F025         	movff	efgtoa@l+2,___flmul@a+2
 10053   005414  C096  F026         	movff	efgtoa@l+3,___flmul@a+3
 10054   005418  C09E  F01F         	movff	efgtoa@u,___flmul@b
 10055   00541C  C09F  F020         	movff	efgtoa@u+1,___flmul@b+1
 10056   005420  C0A0  F021         	movff	efgtoa@u+2,___flmul@b+2
 10057   005424  C0A1  F022         	movff	efgtoa@u+3,___flmul@b+3
 10058   005428  ECBC  F020         	call	___flmul	;wreg free
 10059   00542C  C01F  F03C         	movff	?___flmul,___flsub@a
 10060   005430  C020  F03D         	movff	?___flmul+1,___flsub@a+1
 10061   005434  C021  F03E         	movff	?___flmul+2,___flsub@a+2
 10062   005438  C022  F03F         	movff	?___flmul+3,___flsub@a+3
 10063   00543C  EC46  F00E         	call	___flsub	;wreg free
 10064   005440  C038  F08F         	movff	?___flsub,efgtoa@h
 10065   005444  C039  F090         	movff	?___flsub+1,efgtoa@h+1
 10066   005448  C03A  F091         	movff	?___flsub+2,efgtoa@h+2
 10067   00544C  C03B  F092         	movff	?___flsub+3,efgtoa@h+3
 10068   005450                     
 10069                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 10070   005450  C09E  F040         	movff	efgtoa@u,___fldiv@b
 10071   005454  C09F  F041         	movff	efgtoa@u+1,___fldiv@b+1
 10072   005458  C0A0  F042         	movff	efgtoa@u+2,___fldiv@b+2
 10073   00545C  C0A1  F043         	movff	efgtoa@u+3,___fldiv@b+3
 10074   005460  0E00               	movlw	0
 10075   005462  6E44               	movwf	___fldiv@a^0,c
 10076   005464  0E00               	movlw	0
 10077   005466  6E45               	movwf	(___fldiv@a+1)^0,c
 10078   005468  0E20               	movlw	32
 10079   00546A  6E46               	movwf	(___fldiv@a+2)^0,c
 10080   00546C  0E41               	movlw	65
 10081   00546E  6E47               	movwf	(___fldiv@a+3)^0,c
 10082   005470  EC05  F01D         	call	___fldiv	;wreg free
 10083   005474  C040  F09E         	movff	?___fldiv,efgtoa@u
 10084   005478  C041  F09F         	movff	?___fldiv+1,efgtoa@u+1
 10085   00547C  C042  F0A0         	movff	?___fldiv+2,efgtoa@u+2
 10086   005480  C043  F0A1         	movff	?___fldiv+3,efgtoa@u+3
 10087   005484                     
 10088                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10089   005484  0100               	movlb	0	; () banked
 10090   005486  4B8D               	infsnz	efgtoa@i& (0+255),f,b
 10091   005488  2B8E               	incf	(efgtoa@i+1)& (0+255),f,b
 10092   00548A                     l6298:
 10093                           
 10094                           ; BSR set to: 0
 10095                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 10096   00548A  5183               	movf	efgtoa@m& (0+255),w,b
 10097   00548C  5D8D               	subwf	efgtoa@i& (0+255),w,b
 10098   00548E  518E               	movf	(efgtoa@i+1)& (0+255),w,b
 10099   005490  0A80               	xorlw	128
 10100   005492  6E5D               	movwf	??_efgtoa^0,c
 10101   005494  5184               	movf	(efgtoa@m+1)& (0+255),w,b
 10102   005496  0A80               	xorlw	128
 10103   005498  585D               	subwfb	??_efgtoa^0,w,c
 10104   00549A  A0D8               	btfss	status,0,c
 10105   00549C  EF52  F02A         	goto	u8101
 10106   0054A0  EF54  F02A         	goto	u8100
 10107   0054A4                     u8101:
 10108   0054A4  EFCA  F029         	goto	l6290
 10109   0054A8                     u8100:
 10110   0054A8                     
 10111                           ; BSR set to: 0
 10112                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 10113   0054A8  C09E  F01F         	movff	efgtoa@u,___flmul@b
 10114   0054AC  C09F  F020         	movff	efgtoa@u+1,___flmul@b+1
 10115   0054B0  C0A0  F021         	movff	efgtoa@u+2,___flmul@b+2
 10116   0054B4  C0A1  F022         	movff	efgtoa@u+3,___flmul@b+3
 10117   0054B8  0E00               	movlw	0
 10118   0054BA  6E23               	movwf	___flmul@a^0,c
 10119   0054BC  0E00               	movlw	0
 10120   0054BE  6E24               	movwf	(___flmul@a+1)^0,c
 10121   0054C0  0EA0               	movlw	160
 10122   0054C2  6E25               	movwf	(___flmul@a+2)^0,c
 10123   0054C4  0E40               	movlw	64
 10124   0054C6  6E26               	movwf	(___flmul@a+3)^0,c
 10125   0054C8  ECBC  F020         	call	___flmul	;wreg free
 10126   0054CC  C01F  F093         	movff	?___flmul,efgtoa@l
 10127   0054D0  C020  F094         	movff	?___flmul+1,efgtoa@l+1
 10128   0054D4  C021  F095         	movff	?___flmul+2,efgtoa@l+2
 10129   0054D8  C022  F096         	movff	?___flmul+3,efgtoa@l+3
 10130   0054DC                     
 10131                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 10132   0054DC  C08F  F040         	movff	efgtoa@h,___flge@ff1
 10133   0054E0  C090  F041         	movff	efgtoa@h+1,___flge@ff1+1
 10134   0054E4  C091  F042         	movff	efgtoa@h+2,___flge@ff1+2
 10135   0054E8  C092  F043         	movff	efgtoa@h+3,___flge@ff1+3
 10136   0054EC  C093  F044         	movff	efgtoa@l,___flge@ff2
 10137   0054F0  C094  F045         	movff	efgtoa@l+1,___flge@ff2+1
 10138   0054F4  C095  F046         	movff	efgtoa@l+2,___flge@ff2+2
 10139   0054F8  C096  F047         	movff	efgtoa@l+3,___flge@ff2+3
 10140   0054FC  ECFB  F012         	call	___flge	;wreg free
 10141   005500  B0D8               	btfsc	status,0,c
 10142   005502  EF85  F02A         	goto	u8111
 10143   005506  EF87  F02A         	goto	u8110
 10144   00550A                     u8111:
 10145   00550A  EF92  F02A         	goto	l6306
 10146   00550E                     u8110:
 10147   00550E                     
 10148                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 10149   00550E  0E00               	movlw	0
 10150   005510  0100               	movlb	0	; () banked
 10151   005512  6F93               	movwf	efgtoa@l& (0+255),b
 10152   005514  0E00               	movlw	0
 10153   005516  6F94               	movwf	(efgtoa@l+1)& (0+255),b
 10154   005518  0E00               	movlw	0
 10155   00551A  6F95               	movwf	(efgtoa@l+2)& (0+255),b
 10156   00551C  0E00               	movlw	0
 10157   00551E  6F96               	movwf	(efgtoa@l+3)& (0+255),b
 10158                           
 10159                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 10160   005520  EFBB  F02A         	goto	l6312
 10161   005524                     l6306:
 10162                           
 10163                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 10164   005524  C08F  F001         	movff	efgtoa@h,___fleq@ff1
 10165   005528  C090  F002         	movff	efgtoa@h+1,___fleq@ff1+1
 10166   00552C  C091  F003         	movff	efgtoa@h+2,___fleq@ff1+2
 10167   005530  C092  F004         	movff	efgtoa@h+3,___fleq@ff1+3
 10168   005534  C093  F005         	movff	efgtoa@l,___fleq@ff2
 10169   005538  C094  F006         	movff	efgtoa@l+1,___fleq@ff2+1
 10170   00553C  C095  F007         	movff	efgtoa@l+2,___fleq@ff2+2
 10171   005540  C096  F008         	movff	efgtoa@l+3,___fleq@ff2+3
 10172   005544  EC0C  F010         	call	___fleq	;wreg free
 10173   005548  A0D8               	btfss	status,0,c
 10174   00554A  EFA9  F02A         	goto	u8121
 10175   00554E  EFAB  F02A         	goto	u8120
 10176   005552                     u8121:
 10177   005552  EFBB  F02A         	goto	l6312
 10178   005556                     u8120:
 10179   005556  0100               	movlb	0	; () banked
 10180   005558  B181               	btfsc	efgtoa@d& (0+255),0,b
 10181   00555A  EFB1  F02A         	goto	u8131
 10182   00555E  EFB3  F02A         	goto	u8130
 10183   005562                     u8131:
 10184   005562  EFBB  F02A         	goto	l6312
 10185   005566                     u8130:
 10186   005566                     
 10187                           ; BSR set to: 0
 10188                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 10189   005566  0E00               	movlw	0
 10190   005568  6F93               	movwf	efgtoa@l& (0+255),b
 10191   00556A  0E00               	movlw	0
 10192   00556C  6F94               	movwf	(efgtoa@l+1)& (0+255),b
 10193   00556E  0E00               	movlw	0
 10194   005570  6F95               	movwf	(efgtoa@l+2)& (0+255),b
 10195   005572  0E00               	movlw	0
 10196   005574  6F96               	movwf	(efgtoa@l+3)& (0+255),b
 10197   005576                     l6312:
 10198                           
 10199                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 10200   005576  C098  F00F         	movff	efgtoa@g,___fladd@b
 10201   00557A  C099  F010         	movff	efgtoa@g+1,___fladd@b+1
 10202   00557E  C09A  F011         	movff	efgtoa@g+2,___fladd@b+2
 10203   005582  C09B  F012         	movff	efgtoa@g+3,___fladd@b+3
 10204   005586  C093  F013         	movff	efgtoa@l,___fladd@a
 10205   00558A  C094  F014         	movff	efgtoa@l+1,___fladd@a+1
 10206   00558E  C095  F015         	movff	efgtoa@l+2,___fladd@a+2
 10207   005592  C096  F016         	movff	efgtoa@l+3,___fladd@a+3
 10208   005596  ECCF  F022         	call	___fladd	;wreg free
 10209   00559A  C00F  F08F         	movff	?___fladd,efgtoa@h
 10210   00559E  C010  F090         	movff	?___fladd+1,efgtoa@h+1
 10211   0055A2  C011  F091         	movff	?___fladd+2,efgtoa@h+2
 10212   0055A6  C012  F092         	movff	?___fladd+3,efgtoa@h+3
 10213   0055AA                     
 10214                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 10215   0055AA  C08F  F040         	movff	efgtoa@h,___flge@ff1
 10216   0055AE  C090  F041         	movff	efgtoa@h+1,___flge@ff1+1
 10217   0055B2  C091  F042         	movff	efgtoa@h+2,___flge@ff1+2
 10218   0055B6  C092  F043         	movff	efgtoa@h+3,___flge@ff1+3
 10219   0055BA  0E00               	movlw	0
 10220   0055BC  6E23               	movwf	___flmul@a^0,c
 10221   0055BE  0E00               	movlw	0
 10222   0055C0  6E24               	movwf	(___flmul@a+1)^0,c
 10223   0055C2  0E20               	movlw	32
 10224   0055C4  6E25               	movwf	(___flmul@a+2)^0,c
 10225   0055C6  0E41               	movlw	65
 10226   0055C8  6E26               	movwf	(___flmul@a+3)^0,c
 10227   0055CA  C089  F01F         	movff	efgtoa@ou,___flmul@b
 10228   0055CE  C08A  F020         	movff	efgtoa@ou+1,___flmul@b+1
 10229   0055D2  C08B  F021         	movff	efgtoa@ou+2,___flmul@b+2
 10230   0055D6  C08C  F022         	movff	efgtoa@ou+3,___flmul@b+3
 10231   0055DA  ECBC  F020         	call	___flmul	;wreg free
 10232   0055DE  C01F  F044         	movff	?___flmul,___flge@ff2
 10233   0055E2  C020  F045         	movff	?___flmul+1,___flge@ff2+1
 10234   0055E6  C021  F046         	movff	?___flmul+2,___flge@ff2+2
 10235   0055EA  C022  F047         	movff	?___flmul+3,___flge@ff2+3
 10236   0055EE  ECFB  F012         	call	___flge	;wreg free
 10237   0055F2  A0D8               	btfss	status,0,c
 10238   0055F4  EFFE  F02A         	goto	u8141
 10239   0055F8  EF00  F02B         	goto	u8140
 10240   0055FC                     u8141:
 10241   0055FC  EF29  F02B         	goto	l6324
 10242   005600                     u8140:
 10243   005600                     
 10244                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 10245   005600  0100               	movlb	0	; () banked
 10246   005602  4B85               	infsnz	efgtoa@e& (0+255),f,b
 10247   005604  2B86               	incf	(efgtoa@e+1)& (0+255),f,b
 10248   005606                     
 10249                           ; BSR set to: 0
 10250                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 10251   005606  C089  F01F         	movff	efgtoa@ou,___flmul@b
 10252   00560A  C08A  F020         	movff	efgtoa@ou+1,___flmul@b+1
 10253   00560E  C08B  F021         	movff	efgtoa@ou+2,___flmul@b+2
 10254   005612  C08C  F022         	movff	efgtoa@ou+3,___flmul@b+3
 10255   005616  0E00               	movlw	0
 10256   005618  6E23               	movwf	___flmul@a^0,c
 10257   00561A  0E00               	movlw	0
 10258   00561C  6E24               	movwf	(___flmul@a+1)^0,c
 10259   00561E  0E20               	movlw	32
 10260   005620  6E25               	movwf	(___flmul@a+2)^0,c
 10261   005622  0E41               	movlw	65
 10262   005624  6E26               	movwf	(___flmul@a+3)^0,c
 10263   005626  ECBC  F020         	call	___flmul	;wreg free
 10264   00562A  C01F  F089         	movff	?___flmul,efgtoa@ou
 10265   00562E  C020  F08A         	movff	?___flmul+1,efgtoa@ou+1
 10266   005632  C021  F08B         	movff	?___flmul+2,efgtoa@ou+2
 10267   005636  C022  F08C         	movff	?___flmul+3,efgtoa@ou+3
 10268   00563A                     
 10269                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 10270   00563A  0E66               	movlw	102
 10271   00563C  0100               	movlb	0	; () banked
 10272   00563E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
 10273   005640  A4D8               	btfss	status,2,c
 10274   005642  EF25  F02B         	goto	u8151
 10275   005646  EF27  F02B         	goto	u8150
 10276   00564A                     u8151:
 10277   00564A  EF29  F02B         	goto	l6324
 10278   00564E                     u8150:
 10279   00564E                     
 10280                           ; BSR set to: 0
 10281                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 10282   00564E  4B83               	infsnz	efgtoa@m& (0+255),f,b
 10283   005650  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
 10284   005652                     l6324:
 10285                           
 10286                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10287   005652  C089  F09E         	movff	efgtoa@ou,efgtoa@u
 10288   005656  C08A  F09F         	movff	efgtoa@ou+1,efgtoa@u+1
 10289   00565A  C08B  F0A0         	movff	efgtoa@ou+2,efgtoa@u+2
 10290   00565E  C08C  F0A1         	movff	efgtoa@ou+3,efgtoa@u+3
 10291   005662                     
 10292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10293   005662  C085  F076         	movff	efgtoa@e,efgtoa@ne
 10294   005666  C086  F077         	movff	efgtoa@e+1,efgtoa@ne+1
 10295   00566A                     
 10296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10297   00566A  0100               	movlb	0	; () banked
 10298   00566C  6B7E               	clrf	efgtoa@pp& (0+255),b
 10299   00566E                     
 10300                           ; BSR set to: 0
 10301                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10302   00566E  0E00               	movlw	0
 10303   005670  6F7B               	movwf	(efgtoa@t+1)& (0+255),b
 10304   005672  0E00               	movlw	0
 10305   005674  6F7A               	movwf	efgtoa@t& (0+255),b
 10306   005676                     
 10307                           ; BSR set to: 0
 10308                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10309   005676  0E00               	movlw	0
 10310   005678  6F8E               	movwf	(efgtoa@i+1)& (0+255),b
 10311   00567A  0E00               	movlw	0
 10312   00567C  6F8D               	movwf	efgtoa@i& (0+255),b
 10313                           
 10314                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 10315   00567E  EF26  F02C         	goto	l6374
 10316   005682                     l6334:
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 10320   005682  C08F  F040         	movff	efgtoa@h,___fldiv@b
 10321   005686  C090  F041         	movff	efgtoa@h+1,___fldiv@b+1
 10322   00568A  C091  F042         	movff	efgtoa@h+2,___fldiv@b+2
 10323   00568E  C092  F043         	movff	efgtoa@h+3,___fldiv@b+3
 10324   005692  C09E  F044         	movff	efgtoa@u,___fldiv@a
 10325   005696  C09F  F045         	movff	efgtoa@u+1,___fldiv@a+1
 10326   00569A  C0A0  F046         	movff	efgtoa@u+2,___fldiv@a+2
 10327   00569E  C0A1  F047         	movff	efgtoa@u+3,___fldiv@a+3
 10328   0056A2  EC05  F01D         	call	___fldiv	;wreg free
 10329   0056A6  C040  F059         	movff	?___fldiv,floorf@x
 10330   0056AA  C041  F05A         	movff	?___fldiv+1,floorf@x+1
 10331   0056AE  C042  F05B         	movff	?___fldiv+2,floorf@x+2
 10332   0056B2  C043  F05C         	movff	?___fldiv+3,floorf@x+3
 10333   0056B6  EC14  F017         	call	_floorf	;wreg free
 10334   0056BA  C059  F093         	movff	?_floorf,efgtoa@l
 10335   0056BE  C05A  F094         	movff	?_floorf+1,efgtoa@l+1
 10336   0056C2  C05B  F095         	movff	?_floorf+2,efgtoa@l+2
 10337   0056C6  C05C  F096         	movff	?_floorf+3,efgtoa@l+3
 10338                           
 10339                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 10340   0056CA  C093  F001         	movff	efgtoa@l,___fltol@f1
 10341   0056CE  C094  F002         	movff	efgtoa@l+1,___fltol@f1+1
 10342   0056D2  C095  F003         	movff	efgtoa@l+2,___fltol@f1+2
 10343   0056D6  C096  F004         	movff	efgtoa@l+3,___fltol@f1+3
 10344   0056DA  EC7D  F013         	call	___fltol	;wreg free
 10345   0056DE  BE02               	btfsc	(?___fltol+1)^0,7,c
 10346   0056E0  EF7D  F02B         	goto	u8160
 10347   0056E4  5002               	movf	(?___fltol+1)^0,w,c
 10348   0056E6  E107               	bnz	u8161
 10349   0056E8  0E0A               	movlw	10
 10350   0056EA  5C01               	subwf	?___fltol^0,w,c
 10351   0056EC  B0D8               	btfsc	status,0,c
 10352   0056EE  EF7B  F02B         	goto	u8161
 10353   0056F2  EF7D  F02B         	goto	u8160
 10354   0056F6                     u8161:
 10355   0056F6  EF8D  F02B         	goto	l6338
 10356   0056FA                     u8160:
 10357   0056FA  C093  F001         	movff	efgtoa@l,___fltol@f1
 10358   0056FE  C094  F002         	movff	efgtoa@l+1,___fltol@f1+1
 10359   005702  C095  F003         	movff	efgtoa@l+2,___fltol@f1+2
 10360   005706  C096  F004         	movff	efgtoa@l+3,___fltol@f1+3
 10361   00570A  EC7D  F013         	call	___fltol	;wreg free
 10362   00570E  C001  F081         	movff	?___fltol,efgtoa@d
 10363   005712  C002  F082         	movff	?___fltol+1,efgtoa@d+1
 10364   005716  EF92  F02B         	goto	l957
 10365   00571A                     l6338:
 10366   00571A  0E00               	movlw	0
 10367   00571C  0100               	movlb	0	; () banked
 10368   00571E  6F82               	movwf	(efgtoa@d+1)& (0+255),b
 10369   005720  0E09               	movlw	9
 10370   005722  6F81               	movwf	efgtoa@d& (0+255),b
 10371   005724                     l957:
 10372                           
 10373                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 10374   005724  0100               	movlb	0	; () banked
 10375   005726  517E               	movf	efgtoa@pp& (0+255),w,b
 10376   005728  A4D8               	btfss	status,2,c
 10377   00572A  EF99  F02B         	goto	u8171
 10378   00572E  EF9B  F02B         	goto	u8170
 10379   005732                     u8171:
 10380   005732  EFC3  F02B         	goto	l6358
 10381   005736                     u8170:
 10382   005736                     
 10383                           ; BSR set to: 0
 10384   005736  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10385   005738  EFA2  F02B         	goto	u8180
 10386   00573C  EFA0  F02B         	goto	u8181
 10387   005740                     u8181:
 10388   005740  EFC3  F02B         	goto	l6358
 10389   005744                     u8180:
 10390   005744                     
 10391                           ; BSR set to: 0
 10392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 10393   005744  0E36               	movlw	low _dbuf
 10394   005746  259C               	addwf	efgtoa@n& (0+255),w,b
 10395   005748  6ED9               	movwf	fsr2l,c
 10396   00574A  0E02               	movlw	high _dbuf
 10397   00574C  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10398   00574E  6EDA               	movwf	fsr2h,c
 10399   005750  0E2E               	movlw	46
 10400   005752  6EDF               	movwf	indf2,c
 10401   005754                     
 10402                           ; BSR set to: 0
 10403   005754  4B9C               	infsnz	efgtoa@n& (0+255),f,b
 10404   005756  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
 10405   005758                     
 10406                           ; BSR set to: 0
 10407                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 10408   005758  0787               	decf	efgtoa@w& (0+255),f,b
 10409   00575A  A0D8               	btfss	status,0,c
 10410   00575C  0788               	decf	(efgtoa@w+1)& (0+255),f,b
 10411   00575E                     
 10412                           ; BSR set to: 0
 10413                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 10414   00575E  0E01               	movlw	1
 10415   005760  6F7E               	movwf	efgtoa@pp& (0+255),b
 10416   005762  EFC3  F02B         	goto	l6358
 10417   005766                     l6350:
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 10421   005766  0E36               	movlw	low _dbuf
 10422   005768  259C               	addwf	efgtoa@n& (0+255),w,b
 10423   00576A  6ED9               	movwf	fsr2l,c
 10424   00576C  0E02               	movlw	high _dbuf
 10425   00576E  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10426   005770  6EDA               	movwf	fsr2h,c
 10427   005772  0E30               	movlw	48
 10428   005774  6EDF               	movwf	indf2,c
 10429   005776                     
 10430                           ; BSR set to: 0
 10431   005776  4B9C               	infsnz	efgtoa@n& (0+255),f,b
 10432   005778  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
 10433   00577A                     
 10434                           ; BSR set to: 0
 10435                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 10436   00577A  0787               	decf	efgtoa@w& (0+255),f,b
 10437   00577C  A0D8               	btfss	status,0,c
 10438   00577E  0788               	decf	(efgtoa@w+1)& (0+255),f,b
 10439   005780                     
 10440                           ; BSR set to: 0
 10441                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 10442   005780  077A               	decf	efgtoa@t& (0+255),f,b
 10443   005782  A0D8               	btfss	status,0,c
 10444   005784  077B               	decf	(efgtoa@t+1)& (0+255),f,b
 10445   005786                     l6358:
 10446                           
 10447                           ; BSR set to: 0
 10448                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 10449   005786  517A               	movf	efgtoa@t& (0+255),w,b
 10450   005788  117B               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10451   00578A  A4D8               	btfss	status,2,c
 10452   00578C  EFCA  F02B         	goto	u8191
 10453   005790  EFCC  F02B         	goto	u8190
 10454   005794                     u8191:
 10455   005794  EFB3  F02B         	goto	l6350
 10456   005798                     u8190:
 10457   005798                     
 10458                           ; BSR set to: 0
 10459                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 10460   005798  0E36               	movlw	low _dbuf
 10461   00579A  259C               	addwf	efgtoa@n& (0+255),w,b
 10462   00579C  6ED9               	movwf	fsr2l,c
 10463   00579E  0E02               	movlw	high _dbuf
 10464   0057A0  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10465   0057A2  6EDA               	movwf	fsr2h,c
 10466   0057A4  5181               	movf	efgtoa@d& (0+255),w,b
 10467   0057A6  0F30               	addlw	48
 10468   0057A8  6EDF               	movwf	indf2,c
 10469   0057AA                     
 10470                           ; BSR set to: 0
 10471   0057AA  4B9C               	infsnz	efgtoa@n& (0+255),f,b
 10472   0057AC  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
 10473   0057AE                     
 10474                           ; BSR set to: 0
 10475                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 10476   0057AE  0787               	decf	efgtoa@w& (0+255),f,b
 10477   0057B0  A0D8               	btfss	status,0,c
 10478   0057B2  0788               	decf	(efgtoa@w+1)& (0+255),f,b
 10479   0057B4                     
 10480                           ; BSR set to: 0
 10481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 10482   0057B4  C08F  F038         	movff	efgtoa@h,___flsub@b
 10483   0057B8  C090  F039         	movff	efgtoa@h+1,___flsub@b+1
 10484   0057BC  C091  F03A         	movff	efgtoa@h+2,___flsub@b+2
 10485   0057C0  C092  F03B         	movff	efgtoa@h+3,___flsub@b+3
 10486   0057C4  C093  F023         	movff	efgtoa@l,___flmul@a
 10487   0057C8  C094  F024         	movff	efgtoa@l+1,___flmul@a+1
 10488   0057CC  C095  F025         	movff	efgtoa@l+2,___flmul@a+2
 10489   0057D0  C096  F026         	movff	efgtoa@l+3,___flmul@a+3
 10490   0057D4  C09E  F01F         	movff	efgtoa@u,___flmul@b
 10491   0057D8  C09F  F020         	movff	efgtoa@u+1,___flmul@b+1
 10492   0057DC  C0A0  F021         	movff	efgtoa@u+2,___flmul@b+2
 10493   0057E0  C0A1  F022         	movff	efgtoa@u+3,___flmul@b+3
 10494   0057E4  ECBC  F020         	call	___flmul	;wreg free
 10495   0057E8  C01F  F03C         	movff	?___flmul,___flsub@a
 10496   0057EC  C020  F03D         	movff	?___flmul+1,___flsub@a+1
 10497   0057F0  C021  F03E         	movff	?___flmul+2,___flsub@a+2
 10498   0057F4  C022  F03F         	movff	?___flmul+3,___flsub@a+3
 10499   0057F8  EC46  F00E         	call	___flsub	;wreg free
 10500   0057FC  C038  F08F         	movff	?___flsub,efgtoa@h
 10501   005800  C039  F090         	movff	?___flsub+1,efgtoa@h+1
 10502   005804  C03A  F091         	movff	?___flsub+2,efgtoa@h+2
 10503   005808  C03B  F092         	movff	?___flsub+3,efgtoa@h+3
 10504   00580C                     
 10505                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 10506   00580C  C09E  F040         	movff	efgtoa@u,___fldiv@b
 10507   005810  C09F  F041         	movff	efgtoa@u+1,___fldiv@b+1
 10508   005814  C0A0  F042         	movff	efgtoa@u+2,___fldiv@b+2
 10509   005818  C0A1  F043         	movff	efgtoa@u+3,___fldiv@b+3
 10510   00581C  0E00               	movlw	0
 10511   00581E  6E44               	movwf	___fldiv@a^0,c
 10512   005820  0E00               	movlw	0
 10513   005822  6E45               	movwf	(___fldiv@a+1)^0,c
 10514   005824  0E20               	movlw	32
 10515   005826  6E46               	movwf	(___fldiv@a+2)^0,c
 10516   005828  0E41               	movlw	65
 10517   00582A  6E47               	movwf	(___fldiv@a+3)^0,c
 10518   00582C  EC05  F01D         	call	___fldiv	;wreg free
 10519   005830  C040  F09E         	movff	?___fldiv,efgtoa@u
 10520   005834  C041  F09F         	movff	?___fldiv+1,efgtoa@u+1
 10521   005838  C042  F0A0         	movff	?___fldiv+2,efgtoa@u+2
 10522   00583C  C043  F0A1         	movff	?___fldiv+3,efgtoa@u+3
 10523   005840                     
 10524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 10525   005840  0100               	movlb	0	; () banked
 10526   005842  0776               	decf	efgtoa@ne& (0+255),f,b
 10527   005844  A0D8               	btfss	status,0,c
 10528   005846  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
 10529   005848                     
 10530                           ; BSR set to: 0
 10531                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 10532   005848  4B8D               	infsnz	efgtoa@i& (0+255),f,b
 10533   00584A  2B8E               	incf	(efgtoa@i+1)& (0+255),f,b
 10534   00584C                     l6374:
 10535                           
 10536                           ; BSR set to: 0
 10537                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 10538   00584C  5183               	movf	efgtoa@m& (0+255),w,b
 10539   00584E  5D8D               	subwf	efgtoa@i& (0+255),w,b
 10540   005850  518E               	movf	(efgtoa@i+1)& (0+255),w,b
 10541   005852  0A80               	xorlw	128
 10542   005854  6E5D               	movwf	??_efgtoa^0,c
 10543   005856  5184               	movf	(efgtoa@m+1)& (0+255),w,b
 10544   005858  0A80               	xorlw	128
 10545   00585A  585D               	subwfb	??_efgtoa^0,w,c
 10546   00585C  B0D8               	btfsc	status,0,c
 10547   00585E  EF33  F02C         	goto	u8201
 10548   005862  EF35  F02C         	goto	u8200
 10549   005866                     u8201:
 10550   005866  EF43  F02C         	goto	l6378
 10551   00586A                     u8200:
 10552   00586A                     
 10553                           ; BSR set to: 0
 10554   00586A  BF9D               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10555   00586C  EF41  F02C         	goto	u8211
 10556   005870  519D               	movf	(efgtoa@n+1)& (0+255),w,b
 10557   005872  E109               	bnz	u8210
 10558   005874  0E4B               	movlw	75
 10559   005876  5D9C               	subwf	efgtoa@n& (0+255),w,b
 10560   005878  A0D8               	btfss	status,0,c
 10561   00587A  EF41  F02C         	goto	u8211
 10562   00587E  EF43  F02C         	goto	u8210
 10563   005882                     u8211:
 10564   005882  EF41  F02B         	goto	l6334
 10565   005886                     u8210:
 10566   005886                     l6378:
 10567                           
 10568                           ; BSR set to: 0
 10569                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 10570   005886  0E00               	movlw	0
 10571   005888  6F8E               	movwf	(efgtoa@i+1)& (0+255),b
 10572   00588A  0E4F               	movlw	79
 10573   00588C  6F8D               	movwf	efgtoa@i& (0+255),b
 10574   00588E                     
 10575                           ; BSR set to: 0
 10576                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 10577   00588E  0E36               	movlw	low _dbuf
 10578   005890  258D               	addwf	efgtoa@i& (0+255),w,b
 10579   005892  6ED9               	movwf	fsr2l,c
 10580   005894  0E02               	movlw	high _dbuf
 10581   005896  218E               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10582   005898  6EDA               	movwf	fsr2h,c
 10583   00589A  6ADF               	clrf	indf2,c
 10584   00589C                     
 10585                           ; BSR set to: 0
 10586                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 10587   00589C  0E36               	movlw	low _dbuf
 10588   00589E  6E5D               	movwf	??_efgtoa^0,c
 10589   0058A0  0E02               	movlw	high _dbuf
 10590   0058A2  6E5E               	movwf	(??_efgtoa+1)^0,c
 10591   0058A4  519C               	movf	efgtoa@n& (0+255),w,b
 10592   0058A6  5E5D               	subwf	??_efgtoa^0,f,c
 10593   0058A8  519D               	movf	(efgtoa@n+1)& (0+255),w,b
 10594   0058AA  5A5E               	subwfb	(??_efgtoa+1)^0,f,c
 10595   0058AC  518D               	movf	efgtoa@i& (0+255),w,b
 10596   0058AE  245D               	addwf	??_efgtoa^0,w,c
 10597   0058B0  6E01               	movwf	memcpy@d1^0,c
 10598   0058B2  518E               	movf	(efgtoa@i+1)& (0+255),w,b
 10599   0058B4  205E               	addwfc	(??_efgtoa+1)^0,w,c
 10600   0058B6  6E02               	movwf	(memcpy@d1+1)^0,c
 10601   0058B8  0E36               	movlw	low _dbuf
 10602   0058BA  6E03               	movwf	memcpy@s1^0,c
 10603   0058BC  0E02               	movlw	high _dbuf
 10604   0058BE  6E04               	movwf	(memcpy@s1+1)^0,c
 10605   0058C0  C09C  F005         	movff	efgtoa@n,memcpy@n
 10606   0058C4  C09D  F006         	movff	efgtoa@n+1,memcpy@n+1
 10607   0058C8  ECB1  F00E         	call	_memcpy	;wreg free
 10608   0058CC                     
 10609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 10610   0058CC  0100               	movlb	0	; () banked
 10611   0058CE  519C               	movf	efgtoa@n& (0+255),w,b
 10612   0058D0  5D8D               	subwf	efgtoa@i& (0+255),w,b
 10613   0058D2  6F9C               	movwf	efgtoa@n& (0+255),b
 10614   0058D4  519D               	movf	(efgtoa@n+1)& (0+255),w,b
 10615   0058D6  598E               	subwfb	(efgtoa@i+1)& (0+255),w,b
 10616   0058D8  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
 10617   0058DA                     
 10618                           ; BSR set to: 0
 10619                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 10620   0058DA  5197               	movf	efgtoa@sign& (0+255),w,b
 10621   0058DC  A4D8               	btfss	status,2,c
 10622   0058DE  EF73  F02C         	goto	u8221
 10623   0058E2  EF76  F02C         	goto	u8220
 10624   0058E6                     u8221:
 10625   0058E6  0E01               	movlw	1
 10626   0058E8  EF77  F02C         	goto	u8230
 10627   0058EC                     u8220:
 10628   0058EC  0E00               	movlw	0
 10629   0058EE                     u8230:
 10630   0058EE  6F8D               	movwf	efgtoa@i& (0+255),b
 10631   0058F0  6B8E               	clrf	(efgtoa@i+1)& (0+255),b
 10632   0058F2                     
 10633                           ; BSR set to: 0
 10634                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 10635   0058F2  5197               	movf	efgtoa@sign& (0+255),w,b
 10636   0058F4  B4D8               	btfsc	status,2,c
 10637   0058F6  EF7F  F02C         	goto	u8241
 10638   0058FA  EF81  F02C         	goto	u8240
 10639   0058FE                     u8241:
 10640   0058FE  EF8C  F02C         	goto	l6392
 10641   005902                     u8240:
 10642   005902                     
 10643                           ; BSR set to: 0
 10644                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 10645   005902  079C               	decf	efgtoa@n& (0+255),f,b
 10646   005904  A0D8               	btfss	status,0,c
 10647   005906  079D               	decf	(efgtoa@n+1)& (0+255),f,b
 10648   005908  0E36               	movlw	low _dbuf
 10649   00590A  259C               	addwf	efgtoa@n& (0+255),w,b
 10650   00590C  6ED9               	movwf	fsr2l,c
 10651   00590E  0E02               	movlw	high _dbuf
 10652   005910  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10653   005912  6EDA               	movwf	fsr2h,c
 10654   005914  C097  FFDF         	movff	efgtoa@sign,indf2
 10655   005918                     l6392:
 10656                           
 10657                           ; BSR set to: 0
 10658                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 10659   005918  518D               	movf	efgtoa@i& (0+255),w,b
 10660   00591A  5F87               	subwf	efgtoa@w& (0+255),f,b
 10661   00591C  518E               	movf	(efgtoa@i+1)& (0+255),w,b
 10662   00591E  5B88               	subwfb	(efgtoa@w+1)& (0+255),f,b
 10663   005920                     
 10664                           ; BSR set to: 0
 10665                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 10666   005920  C070  F00F         	movff	efgtoa@fp,pad@fp
 10667   005924  0E36               	movlw	low _dbuf
 10668   005926  259C               	addwf	efgtoa@n& (0+255),w,b
 10669   005928  6E10               	movwf	pad@buf^0,c
 10670   00592A  0E02               	movlw	high _dbuf
 10671   00592C  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10672   00592E  6E11               	movwf	(pad@buf+1)^0,c
 10673   005930  C087  F012         	movff	efgtoa@w,pad@p
 10674   005934  C088  F013         	movff	efgtoa@w+1,pad@p+1
 10675   005938  EC33  F00F         	call	_pad	;wreg free
 10676   00593C                     l924:
 10677   00593C  0012               	return		;funcret
 10678   00593E                     __end_of_efgtoa:
 10679                           	callstack 0
 10680                           
 10681 ;; *************** function _strcpy *****************
 10682 ;; Defined at:
 10683 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 10684 ;; Parameters:    Size  Location     Type
 10685 ;;  dest            2    0[COMRAM] PTR unsigned char 
 10686 ;;		 -> dbuf(80), 
 10687 ;;  src             2    2[COMRAM] PTR const unsigned char 
 10688 ;;		 -> STR_15(4), STR_12(4), 
 10689 ;; Auto vars:     Size  Location     Type
 10690 ;;  d               2    4[COMRAM] PTR unsigned char 
 10691 ;;		 -> dbuf(80), 
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  2    0[COMRAM] PTR unsigned char 
 10694 ;; Registers used:
 10695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10701 ;;      Params:         4       0       0       0       0       0       0       0       0
 10702 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10703 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10704 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10705 ;;Total ram usage:        6 bytes
 10706 ;; Hardware stack levels used: 1
 10707 ;; This function calls:
 10708 ;;		Nothing
 10709 ;; This function is called by:
 10710 ;;		_efgtoa
 10711 ;; This function uses a non-reentrant model
 10712 ;;
 10713                           
 10714                           	psect	text18
 10715   001B8C                     __ptext18:
 10716                           	callstack 0
 10717   001B8C                     _strcpy:
 10718                           	callstack 25
 10719   001B8C  C001  F005         	movff	strcpy@dest,strcpy@d
 10720   001B90  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
 10721   001B94                     l6084:
 10722   001B94  C003  FFF6         	movff	strcpy@src,tblptrl
 10723   001B98  C004  FFF7         	movff	strcpy@src+1,tblptrh
 10724   001B9C  4A03               	infsnz	strcpy@src^0,f,c
 10725   001B9E  2A04               	incf	(strcpy@src+1)^0,f,c
 10726   001BA0                     	if	0	;tblptru may be non-zero
 10727   001BA0                     	endif
 10728   001BA0                     	if	0	;tblptru may be non-zero
 10729   001BA0                     	endif
 10730   001BA0  C005  FFD9         	movff	strcpy@d,fsr2l
 10731   001BA4  C006  FFDA         	movff	strcpy@d+1,fsr2h
 10732   001BA8  4A05               	infsnz	strcpy@d^0,f,c
 10733   001BAA  2A06               	incf	(strcpy@d+1)^0,f,c
 10734   001BAC  0008               	tblrd		*
 10735   001BAE  CFF5 FFDF          	movff	tablat,indf2
 10736   001BB2  50DF               	movf	indf2,w,c
 10737   001BB4  A4D8               	btfss	status,2,c
 10738   001BB6  EFDF  F00D         	goto	u7711
 10739   001BBA  EFE1  F00D         	goto	u7710
 10740   001BBE                     u7711:
 10741   001BBE  EFCA  F00D         	goto	l6084
 10742   001BC2                     u7710:
 10743   001BC2  0012               	return		;funcret
 10744   001BC4                     __end_of_strcpy:
 10745                           	callstack 0
 10746                           
 10747 ;; *************** function _memcpy *****************
 10748 ;; Defined at:
 10749 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;  d1              2    0[COMRAM] PTR void 
 10752 ;;		 -> dbuf(80), 
 10753 ;;  s1              2    2[COMRAM] PTR const void 
 10754 ;;		 -> dbuf(80), 
 10755 ;;  n               2    4[COMRAM] unsigned int 
 10756 ;; Auto vars:     Size  Location     Type
 10757 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10758 ;;		 -> dbuf(80), 
 10759 ;;  d               2    7[COMRAM] PTR unsigned char 
 10760 ;;		 -> dbuf(80), 
 10761 ;;  tmp             1    6[COMRAM] unsigned char 
 10762 ;; Return value:  Size  Location     Type
 10763 ;;                  2    0[COMRAM] PTR void 
 10764 ;; Registers used:
 10765 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10766 ;; Tracked objects:
 10767 ;;		On entry : 0/0
 10768 ;;		On exit  : 0/0
 10769 ;;		Unchanged: 0/0
 10770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10771 ;;      Params:         6       0       0       0       0       0       0       0       0
 10772 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10773 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10774 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10775 ;;Total ram usage:       11 bytes
 10776 ;; Hardware stack levels used: 1
 10777 ;; This function calls:
 10778 ;;		Nothing
 10779 ;; This function is called by:
 10780 ;;		_efgtoa
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           	psect	text19
 10785   001D62                     __ptext19:
 10786                           	callstack 0
 10787   001D62                     _memcpy:
 10788                           	callstack 25
 10789   001D62  C003  F00A         	movff	memcpy@s1,memcpy@s
 10790   001D66  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
 10791   001D6A  C001  F008         	movff	memcpy@d1,memcpy@d
 10792   001D6E  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
 10793   001D72  EFCB  F00E         	goto	l6132
 10794   001D76                     l6124:
 10795   001D76  C00A  FFD9         	movff	memcpy@s,fsr2l
 10796   001D7A  C00B  FFDA         	movff	memcpy@s+1,fsr2h
 10797   001D7E  50DF               	movf	indf2,w,c
 10798   001D80  6E07               	movwf	memcpy@tmp^0,c
 10799   001D82  4A0A               	infsnz	memcpy@s^0,f,c
 10800   001D84  2A0B               	incf	(memcpy@s+1)^0,f,c
 10801   001D86  C008  FFD9         	movff	memcpy@d,fsr2l
 10802   001D8A  C009  FFDA         	movff	memcpy@d+1,fsr2h
 10803   001D8E  C007  FFDF         	movff	memcpy@tmp,indf2
 10804   001D92  4A08               	infsnz	memcpy@d^0,f,c
 10805   001D94  2A09               	incf	(memcpy@d+1)^0,f,c
 10806   001D96                     l6132:
 10807   001D96  0605               	decf	memcpy@n^0,f,c
 10808   001D98  A0D8               	btfss	status,0,c
 10809   001D9A  0606               	decf	(memcpy@n+1)^0,f,c
 10810   001D9C  2805               	incf	memcpy@n^0,w,c
 10811   001D9E  E106               	bnz	u7831
 10812   001DA0  2806               	incf	(memcpy@n+1)^0,w,c
 10813   001DA2  A4D8               	btfss	status,2,c
 10814   001DA4  EFD6  F00E         	goto	u7831
 10815   001DA8  EFD8  F00E         	goto	u7830
 10816   001DAC                     u7831:
 10817   001DAC  EFBB  F00E         	goto	l6124
 10818   001DB0                     u7830:
 10819   001DB0  0012               	return		;funcret
 10820   001DB2                     __end_of_memcpy:
 10821                           	callstack 0
 10822                           
 10823 ;; *************** function _labs *****************
 10824 ;; Defined at:
 10825 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;  a               4    0[COMRAM] long 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;		None
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  4    0[COMRAM] long 
 10832 ;; Registers used:
 10833 ;;		wreg, status,2, status,0
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10839 ;;      Params:         4       0       0       0       0       0       0       0       0
 10840 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10841 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10842 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10843 ;;Total ram usage:        8 bytes
 10844 ;; Hardware stack levels used: 1
 10845 ;; This function calls:
 10846 ;;		Nothing
 10847 ;; This function is called by:
 10848 ;;		_efgtoa
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           	psect	text20
 10853   001DB2                     __ptext20:
 10854                           	callstack 0
 10855   001DB2                     _labs:
 10856                           	callstack 25
 10857   001DB2  BE04               	btfsc	(labs@a+3)^0,7,c
 10858   001DB4  EFDE  F00E         	goto	u7721
 10859   001DB8  EFE0  F00E         	goto	u7720
 10860   001DBC                     u7721:
 10861   001DBC  EFEA  F00E         	goto	l6090
 10862   001DC0                     u7720:
 10863   001DC0  C001  F001         	movff	labs@a,?_labs
 10864   001DC4  C002  F002         	movff	labs@a+1,?_labs+1
 10865   001DC8  C003  F003         	movff	labs@a+2,?_labs+2
 10866   001DCC  C004  F004         	movff	labs@a+3,?_labs+3
 10867   001DD0  EF03  F00F         	goto	l1041
 10868   001DD4                     l6090:
 10869   001DD4  C001  F005         	movff	labs@a,??_labs
 10870   001DD8  C002  F006         	movff	labs@a+1,??_labs+1
 10871   001DDC  C003  F007         	movff	labs@a+2,??_labs+2
 10872   001DE0  C004  F008         	movff	labs@a+3,??_labs+3
 10873   001DE4  1E05               	comf	??_labs^0,f,c
 10874   001DE6  1E06               	comf	(??_labs+1)^0,f,c
 10875   001DE8  1E07               	comf	(??_labs+2)^0,f,c
 10876   001DEA  1E08               	comf	(??_labs+3)^0,f,c
 10877   001DEC  2A05               	incf	??_labs^0,f,c
 10878   001DEE  0E00               	movlw	0
 10879   001DF0  2206               	addwfc	(??_labs+1)^0,f,c
 10880   001DF2  2207               	addwfc	(??_labs+2)^0,f,c
 10881   001DF4  2208               	addwfc	(??_labs+3)^0,f,c
 10882   001DF6  C005  F001         	movff	??_labs,?_labs
 10883   001DFA  C006  F002         	movff	??_labs+1,?_labs+1
 10884   001DFE  C007  F003         	movff	??_labs+2,?_labs+2
 10885   001E02  C008  F004         	movff	??_labs+3,?_labs+3
 10886   001E06                     l1041:
 10887   001E06  0012               	return		;funcret
 10888   001E08                     __end_of_labs:
 10889                           	callstack 0
 10890                           
 10891 ;; *************** function _floorf *****************
 10892 ;; Defined at:
 10893 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;  x               4   88[COMRAM] float 
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;  u               4   12[BANK0 ] struct .
 10898 ;;  m               4    6[BANK0 ] unsigned long 
 10899 ;;  e               2   10[BANK0 ] int 
 10900 ;; Return value:  Size  Location     Type
 10901 ;;                  4   88[COMRAM] float 
 10902 ;; Registers used:
 10903 ;;		wreg, status,2, status,0
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10909 ;;      Params:         4       0       0       0       0       0       0       0       0
 10910 ;;      Locals:         0      10       0       0       0       0       0       0       0
 10911 ;;      Temps:          0       6       0       0       0       0       0       0       0
 10912 ;;      Totals:         4      16       0       0       0       0       0       0       0
 10913 ;;Total ram usage:       20 bytes
 10914 ;; Hardware stack levels used: 1
 10915 ;; This function calls:
 10916 ;;		Nothing
 10917 ;; This function is called by:
 10918 ;;		_efgtoa
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           	psect	text21
 10923   002E28                     __ptext21:
 10924                           	callstack 0
 10925   002E28                     _floorf:
 10926                           	callstack 25
 10927   002E28  C214  F06C         	movff	floorf@F521,floorf@u
 10928   002E2C  C215  F06D         	movff	floorf@F521+1,floorf@u+1
 10929   002E30  C216  F06E         	movff	floorf@F521+2,floorf@u+2
 10930   002E34  C217  F06F         	movff	floorf@F521+3,floorf@u+3
 10931   002E38  C059  F06C         	movff	floorf@x,floorf@u
 10932   002E3C  C05A  F06D         	movff	floorf@x+1,floorf@u+1
 10933   002E40  C05B  F06E         	movff	floorf@x+2,floorf@u+2
 10934   002E44  C05C  F06F         	movff	floorf@x+3,floorf@u+3
 10935   002E48  0E81               	movlw	129
 10936   002E4A  0100               	movlb	0	; () banked
 10937   002E4C  6F60               	movwf	??_floorf& (0+255),b
 10938   002E4E  0EFF               	movlw	255
 10939   002E50  6F61               	movwf	(??_floorf+1)& (0+255),b
 10940   002E52  C06C  F062         	movff	floorf@u,??_floorf+2
 10941   002E56  C06D  F063         	movff	floorf@u+1,??_floorf+3
 10942   002E5A  C06E  F064         	movff	floorf@u+2,??_floorf+4
 10943   002E5E  C06F  F065         	movff	floorf@u+3,??_floorf+5
 10944   002E62  0E18               	movlw	24
 10945   002E64  EF39  F017         	goto	u7730
 10946   002E68                     u7735:
 10947   002E68  90D8               	bcf	status,0,c
 10948   002E6A  3365               	rrcf	(??_floorf+5)& (0+255),f,b
 10949   002E6C  3364               	rrcf	(??_floorf+4)& (0+255),f,b
 10950   002E6E  3363               	rrcf	(??_floorf+3)& (0+255),f,b
 10951   002E70  3362               	rrcf	(??_floorf+2)& (0+255),f,b
 10952   002E72                     u7730:
 10953   002E72  2EE8               	decfsz	wreg,f,c
 10954   002E74  EF34  F017         	goto	u7735
 10955   002E78  5162               	movf	(??_floorf+2)& (0+255),w,b
 10956   002E7A  2560               	addwf	??_floorf& (0+255),w,b
 10957   002E7C  6F6A               	movwf	floorf@e& (0+255),b
 10958   002E7E  0E00               	movlw	0
 10959   002E80  2161               	addwfc	(??_floorf+1)& (0+255),w,b
 10960   002E82  6F6B               	movwf	(floorf@e+1)& (0+255),b
 10961   002E84  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
 10962   002E86  EF4E  F017         	goto	u7741
 10963   002E8A  516B               	movf	(floorf@e+1)& (0+255),w,b
 10964   002E8C  E109               	bnz	u7740
 10965   002E8E  0E17               	movlw	23
 10966   002E90  5D6A               	subwf	floorf@e& (0+255),w,b
 10967   002E92  A0D8               	btfss	status,0,c
 10968   002E94  EF4E  F017         	goto	u7741
 10969   002E98  EF50  F017         	goto	u7740
 10970   002E9C                     u7741:
 10971   002E9C  EF5A  F017         	goto	l6100
 10972   002EA0                     u7740:
 10973   002EA0                     l6098:
 10974                           
 10975                           ; BSR set to: 0
 10976   002EA0  C059  F059         	movff	floorf@x,?_floorf
 10977   002EA4  C05A  F05A         	movff	floorf@x+1,?_floorf+1
 10978   002EA8  C05B  F05B         	movff	floorf@x+2,?_floorf+2
 10979   002EAC  C05C  F05C         	movff	floorf@x+3,?_floorf+3
 10980   002EB0  EF1E  F018         	goto	l1027
 10981   002EB4                     l6100:
 10982                           
 10983                           ; BSR set to: 0
 10984   002EB4  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
 10985   002EB6  EF5F  F017         	goto	u7751
 10986   002EBA  EF61  F017         	goto	u7750
 10987   002EBE                     u7751:
 10988   002EBE  EFD2  F017         	goto	l6110
 10989   002EC2                     u7750:
 10990   002EC2                     
 10991                           ; BSR set to: 0
 10992   002EC2  C06A  F060         	movff	floorf@e,??_floorf
 10993   002EC6  0EFF               	movlw	255
 10994   002EC8  6F61               	movwf	(??_floorf+1)& (0+255),b
 10995   002ECA  0EFF               	movlw	255
 10996   002ECC  6F62               	movwf	(??_floorf+2)& (0+255),b
 10997   002ECE  0E7F               	movlw	127
 10998   002ED0  6F63               	movwf	(??_floorf+3)& (0+255),b
 10999   002ED2  0E00               	movlw	0
 11000   002ED4  6F64               	movwf	(??_floorf+4)& (0+255),b
 11001   002ED6                     u7765:
 11002   002ED6  6760               	tstfsz	??_floorf& (0+255),b
 11003   002ED8  EF70  F017         	goto	u7766
 11004   002EDC  EF78  F017         	goto	u7767
 11005   002EE0                     u7766:
 11006   002EE0  3564               	rlcf	(??_floorf+4)& (0+255),w,b
 11007   002EE2  3364               	rrcf	(??_floorf+4)& (0+255),f,b
 11008   002EE4  3363               	rrcf	(??_floorf+3)& (0+255),f,b
 11009   002EE6  3362               	rrcf	(??_floorf+2)& (0+255),f,b
 11010   002EE8  3361               	rrcf	(??_floorf+1)& (0+255),f,b
 11011   002EEA  2F60               	decfsz	??_floorf& (0+255),f,b
 11012   002EEC  EF6B  F017         	goto	u7765
 11013   002EF0                     u7767:
 11014   002EF0  C061  F066         	movff	??_floorf+1,floorf@m
 11015   002EF4  C062  F067         	movff	??_floorf+2,floorf@m+1
 11016   002EF8  C063  F068         	movff	??_floorf+3,floorf@m+2
 11017   002EFC  C064  F069         	movff	??_floorf+4,floorf@m+3
 11018   002F00  0100               	movlb	0	; () banked
 11019   002F02  5166               	movf	floorf@m& (0+255),w,b
 11020   002F04  156C               	andwf	floorf@u& (0+255),w,b
 11021   002F06  6F60               	movwf	??_floorf& (0+255),b
 11022   002F08  5167               	movf	(floorf@m+1)& (0+255),w,b
 11023   002F0A  156D               	andwf	(floorf@u+1)& (0+255),w,b
 11024   002F0C  6F61               	movwf	(??_floorf+1)& (0+255),b
 11025   002F0E  5168               	movf	(floorf@m+2)& (0+255),w,b
 11026   002F10  156E               	andwf	(floorf@u+2)& (0+255),w,b
 11027   002F12  6F62               	movwf	(??_floorf+2)& (0+255),b
 11028   002F14  5169               	movf	(floorf@m+3)& (0+255),w,b
 11029   002F16  156F               	andwf	(floorf@u+3)& (0+255),w,b
 11030   002F18  6F63               	movwf	(??_floorf+3)& (0+255),b
 11031   002F1A  5160               	movf	??_floorf& (0+255),w,b
 11032   002F1C  1161               	iorwf	(??_floorf+1)& (0+255),w,b
 11033   002F1E  1162               	iorwf	(??_floorf+2)& (0+255),w,b
 11034   002F20  1163               	iorwf	(??_floorf+3)& (0+255),w,b
 11035   002F22  A4D8               	btfss	status,2,c
 11036   002F24  EF96  F017         	goto	u7771
 11037   002F28  EF98  F017         	goto	u7770
 11038   002F2C                     u7771:
 11039   002F2C  EF9A  F017         	goto	l6106
 11040   002F30                     u7770:
 11041   002F30  EF50  F017         	goto	l6098
 11042   002F34                     l6106:
 11043                           
 11044                           ; BSR set to: 0
 11045   002F34  C06C  F060         	movff	floorf@u,??_floorf
 11046   002F38  C06D  F061         	movff	floorf@u+1,??_floorf+1
 11047   002F3C  C06E  F062         	movff	floorf@u+2,??_floorf+2
 11048   002F40  C06F  F063         	movff	floorf@u+3,??_floorf+3
 11049   002F44  0E20               	movlw	32
 11050   002F46  EFAA  F017         	goto	u7780
 11051   002F4A                     u7785:
 11052   002F4A  90D8               	bcf	status,0,c
 11053   002F4C  3363               	rrcf	(??_floorf+3)& (0+255),f,b
 11054   002F4E  3362               	rrcf	(??_floorf+2)& (0+255),f,b
 11055   002F50  3361               	rrcf	(??_floorf+1)& (0+255),f,b
 11056   002F52  3360               	rrcf	??_floorf& (0+255),f,b
 11057   002F54                     u7780:
 11058   002F54  2EE8               	decfsz	wreg,f,c
 11059   002F56  EFA5  F017         	goto	u7785
 11060   002F5A  5160               	movf	??_floorf& (0+255),w,b
 11061   002F5C  1161               	iorwf	(??_floorf+1)& (0+255),w,b
 11062   002F5E  1162               	iorwf	(??_floorf+2)& (0+255),w,b
 11063   002F60  1163               	iorwf	(??_floorf+3)& (0+255),w,b
 11064   002F62  B4D8               	btfsc	status,2,c
 11065   002F64  EFB6  F017         	goto	u7791
 11066   002F68  EFB8  F017         	goto	u7790
 11067   002F6C                     u7791:
 11068   002F6C  EFC0  F017         	goto	l1030
 11069   002F70                     u7790:
 11070   002F70                     
 11071                           ; BSR set to: 0
 11072   002F70  5166               	movf	floorf@m& (0+255),w,b
 11073   002F72  276C               	addwf	floorf@u& (0+255),f,b
 11074   002F74  5167               	movf	(floorf@m+1)& (0+255),w,b
 11075   002F76  236D               	addwfc	(floorf@u+1)& (0+255),f,b
 11076   002F78  5168               	movf	(floorf@m+2)& (0+255),w,b
 11077   002F7A  236E               	addwfc	(floorf@u+2)& (0+255),f,b
 11078   002F7C  5169               	movf	(floorf@m+3)& (0+255),w,b
 11079   002F7E  236F               	addwfc	(floorf@u+3)& (0+255),f,b
 11080   002F80                     l1030:
 11081                           
 11082                           ; BSR set to: 0
 11083   002F80  1D66               	comf	floorf@m& (0+255),w,b
 11084   002F82  6F60               	movwf	??_floorf& (0+255),b
 11085   002F84  1D67               	comf	(floorf@m+1)& (0+255),w,b
 11086   002F86  6F61               	movwf	(??_floorf+1)& (0+255),b
 11087   002F88  1D68               	comf	(floorf@m+2)& (0+255),w,b
 11088   002F8A  6F62               	movwf	(??_floorf+2)& (0+255),b
 11089   002F8C  1D69               	comf	(floorf@m+3)& (0+255),w,b
 11090   002F8E  6F63               	movwf	(??_floorf+3)& (0+255),b
 11091   002F90  5160               	movf	??_floorf& (0+255),w,b
 11092   002F92  176C               	andwf	floorf@u& (0+255),f,b
 11093   002F94  5161               	movf	(??_floorf+1)& (0+255),w,b
 11094   002F96  176D               	andwf	(floorf@u+1)& (0+255),f,b
 11095   002F98  5162               	movf	(??_floorf+2)& (0+255),w,b
 11096   002F9A  176E               	andwf	(floorf@u+2)& (0+255),f,b
 11097   002F9C  5163               	movf	(??_floorf+3)& (0+255),w,b
 11098   002F9E  176F               	andwf	(floorf@u+3)& (0+255),f,b
 11099   002FA0  EF16  F018         	goto	l6118
 11100   002FA4                     l6110:
 11101                           
 11102                           ; BSR set to: 0
 11103   002FA4  C06C  F060         	movff	floorf@u,??_floorf
 11104   002FA8  C06D  F061         	movff	floorf@u+1,??_floorf+1
 11105   002FAC  C06E  F062         	movff	floorf@u+2,??_floorf+2
 11106   002FB0  C06F  F063         	movff	floorf@u+3,??_floorf+3
 11107   002FB4  0E20               	movlw	32
 11108   002FB6  EFE2  F017         	goto	u7800
 11109   002FBA                     u7805:
 11110   002FBA  90D8               	bcf	status,0,c
 11111   002FBC  3363               	rrcf	(??_floorf+3)& (0+255),f,b
 11112   002FBE  3362               	rrcf	(??_floorf+2)& (0+255),f,b
 11113   002FC0  3361               	rrcf	(??_floorf+1)& (0+255),f,b
 11114   002FC2  3360               	rrcf	??_floorf& (0+255),f,b
 11115   002FC4                     u7800:
 11116   002FC4  2EE8               	decfsz	wreg,f,c
 11117   002FC6  EFDD  F017         	goto	u7805
 11118   002FCA  5160               	movf	??_floorf& (0+255),w,b
 11119   002FCC  1161               	iorwf	(??_floorf+1)& (0+255),w,b
 11120   002FCE  1162               	iorwf	(??_floorf+2)& (0+255),w,b
 11121   002FD0  1163               	iorwf	(??_floorf+3)& (0+255),w,b
 11122   002FD2  A4D8               	btfss	status,2,c
 11123   002FD4  EFEE  F017         	goto	u7811
 11124   002FD8  EFF0  F017         	goto	u7810
 11125   002FDC                     u7811:
 11126   002FDC  EFFA  F017         	goto	l6114
 11127   002FE0                     u7810:
 11128   002FE0                     
 11129                           ; BSR set to: 0
 11130   002FE0  0E00               	movlw	0
 11131   002FE2  6F6C               	movwf	floorf@u& (0+255),b
 11132   002FE4  0E00               	movlw	0
 11133   002FE6  6F6D               	movwf	(floorf@u+1)& (0+255),b
 11134   002FE8  0E00               	movlw	0
 11135   002FEA  6F6E               	movwf	(floorf@u+2)& (0+255),b
 11136   002FEC  0E00               	movlw	0
 11137   002FEE  6F6F               	movwf	(floorf@u+3)& (0+255),b
 11138   002FF0  EF16  F018         	goto	l6118
 11139   002FF4                     l6114:
 11140                           
 11141                           ; BSR set to: 0
 11142   002FF4  90D8               	bcf	status,0,c
 11143   002FF6  356C               	rlcf	floorf@u& (0+255),w,b
 11144   002FF8  6F60               	movwf	??_floorf& (0+255),b
 11145   002FFA  356D               	rlcf	(floorf@u+1)& (0+255),w,b
 11146   002FFC  6F61               	movwf	(??_floorf+1)& (0+255),b
 11147   002FFE  356E               	rlcf	(floorf@u+2)& (0+255),w,b
 11148   003000  6F62               	movwf	(??_floorf+2)& (0+255),b
 11149   003002  356F               	rlcf	(floorf@u+3)& (0+255),w,b
 11150   003004  6F63               	movwf	(??_floorf+3)& (0+255),b
 11151   003006  5160               	movf	??_floorf& (0+255),w,b
 11152   003008  1161               	iorwf	(??_floorf+1)& (0+255),w,b
 11153   00300A  1162               	iorwf	(??_floorf+2)& (0+255),w,b
 11154   00300C  1163               	iorwf	(??_floorf+3)& (0+255),w,b
 11155   00300E  B4D8               	btfsc	status,2,c
 11156   003010  EF0C  F018         	goto	u7821
 11157   003014  EF0E  F018         	goto	u7820
 11158   003018                     u7821:
 11159   003018  EF16  F018         	goto	l6118
 11160   00301C                     u7820:
 11161   00301C                     
 11162                           ; BSR set to: 0
 11163   00301C  0E00               	movlw	0
 11164   00301E  6F6C               	movwf	floorf@u& (0+255),b
 11165   003020  0E00               	movlw	0
 11166   003022  6F6D               	movwf	(floorf@u+1)& (0+255),b
 11167   003024  0E80               	movlw	128
 11168   003026  6F6E               	movwf	(floorf@u+2)& (0+255),b
 11169   003028  0EBF               	movlw	191
 11170   00302A  6F6F               	movwf	(floorf@u+3)& (0+255),b
 11171   00302C                     l6118:
 11172                           
 11173                           ; BSR set to: 0
 11174   00302C  C06C  F059         	movff	floorf@u,?_floorf
 11175   003030  C06D  F05A         	movff	floorf@u+1,?_floorf+1
 11176   003034  C06E  F05B         	movff	floorf@u+2,?_floorf+2
 11177   003038  C06F  F05C         	movff	floorf@u+3,?_floorf+3
 11178   00303C                     l1027:
 11179                           
 11180                           ; BSR set to: 0
 11181   00303C  0012               	return		;funcret
 11182   00303E                     __end_of_floorf:
 11183                           	callstack 0
 11184                           
 11185 ;; *************** function ___fpclassifyf *****************
 11186 ;; Defined at:
 11187 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;  x               4    0[COMRAM] float 
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;  u               4   10[COMRAM] struct .
 11192 ;;  e               2    8[COMRAM] int 
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  2    0[COMRAM] int 
 11195 ;; Registers used:
 11196 ;;		wreg, status,2, status,0
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11202 ;;      Params:         4       0       0       0       0       0       0       0       0
 11203 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11204 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11205 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11206 ;;Total ram usage:       14 bytes
 11207 ;; Hardware stack levels used: 1
 11208 ;; This function calls:
 11209 ;;		Nothing
 11210 ;; This function is called by:
 11211 ;;		_efgtoa
 11212 ;; This function uses a non-reentrant model
 11213 ;;
 11214                           
 11215                           	psect	text22
 11216   0024F8                     __ptext22:
 11217                           	callstack 0
 11218   0024F8                     ___fpclassifyf:
 11219                           	callstack 25
 11220   0024F8  C218  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 11221   0024FC  C219  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 11222   002500  C21A  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 11223   002504  C21B  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 11224   002508  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 11225   00250C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11226   002510  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11227   002514  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11228   002518  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 11229   00251C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11230   002520  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11231   002524  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11232   002528  0E18               	movlw	24
 11233   00252A  EF9C  F012         	goto	u7640
 11234   00252E                     u7645:
 11235   00252E  90D8               	bcf	status,0,c
 11236   002530  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 11237   002532  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 11238   002534  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 11239   002536  3205               	rrcf	??___fpclassifyf^0,f,c
 11240   002538                     u7640:
 11241   002538  2EE8               	decfsz	wreg,f,c
 11242   00253A  EF97  F012         	goto	u7645
 11243   00253E  5005               	movf	??___fpclassifyf^0,w,c
 11244   002540  6E09               	movwf	___fpclassifyf@e^0,c
 11245   002542  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 11246   002544  5009               	movf	___fpclassifyf@e^0,w,c
 11247   002546  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11248   002548  A4D8               	btfss	status,2,c
 11249   00254A  EFA9  F012         	goto	u7651
 11250   00254E  EFAB  F012         	goto	u7650
 11251   002552                     u7651:
 11252   002552  EFCB  F012         	goto	l6072
 11253   002556                     u7650:
 11254   002556  90D8               	bcf	status,0,c
 11255   002558  340B               	rlcf	___fpclassifyf@u^0,w,c
 11256   00255A  6E05               	movwf	??___fpclassifyf^0,c
 11257   00255C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11258   00255E  6E06               	movwf	(??___fpclassifyf+1)^0,c
 11259   002560  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11260   002562  6E07               	movwf	(??___fpclassifyf+2)^0,c
 11261   002564  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11262   002566  6E08               	movwf	(??___fpclassifyf+3)^0,c
 11263   002568  5005               	movf	??___fpclassifyf^0,w,c
 11264   00256A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 11265   00256C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 11266   00256E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 11267   002570  A4D8               	btfss	status,2,c
 11268   002572  EFBD  F012         	goto	u7661
 11269   002576  EFBF  F012         	goto	u7660
 11270   00257A                     u7661:
 11271   00257A  EFC5  F012         	goto	l6068
 11272   00257E                     u7660:
 11273   00257E  0E00               	movlw	0
 11274   002580  6E02               	movwf	(?___fpclassifyf+1)^0,c
 11275   002582  0E02               	movlw	2
 11276   002584  6E01               	movwf	?___fpclassifyf^0,c
 11277   002586  EFFA  F012         	goto	l1013
 11278   00258A                     l6068:
 11279   00258A  0E00               	movlw	0
 11280   00258C  6E02               	movwf	(?___fpclassifyf+1)^0,c
 11281   00258E  0E03               	movlw	3
 11282   002590  6E01               	movwf	?___fpclassifyf^0,c
 11283   002592  EFFA  F012         	goto	l1013
 11284   002596                     l6072:
 11285   002596  2809               	incf	___fpclassifyf@e^0,w,c
 11286   002598  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11287   00259A  A4D8               	btfss	status,2,c
 11288   00259C  EFD2  F012         	goto	u7671
 11289   0025A0  EFD4  F012         	goto	u7670
 11290   0025A4                     u7671:
 11291   0025A4  EFF6  F012         	goto	l6078
 11292   0025A8                     u7670:
 11293   0025A8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 11294   0025AC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11295   0025B0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11296   0025B4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11297   0025B8  0E09               	movlw	9
 11298   0025BA                     u7685:
 11299   0025BA  90D8               	bcf	status,0,c
 11300   0025BC  3605               	rlcf	??___fpclassifyf^0,f,c
 11301   0025BE  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 11302   0025C0  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 11303   0025C2  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 11304   0025C4  2EE8               	decfsz	wreg,f,c
 11305   0025C6  EFDD  F012         	goto	u7685
 11306   0025CA  5005               	movf	??___fpclassifyf^0,w,c
 11307   0025CC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 11308   0025CE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 11309   0025D0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 11310   0025D2  B4D8               	btfsc	status,2,c
 11311   0025D4  EFEE  F012         	goto	u7691
 11312   0025D8  EFF1  F012         	goto	u7690
 11313   0025DC                     u7691:
 11314   0025DC  0E01               	movlw	1
 11315   0025DE  EFF2  F012         	goto	u7700
 11316   0025E2                     u7690:
 11317   0025E2  0E00               	movlw	0
 11318   0025E4                     u7700:
 11319   0025E4  6E01               	movwf	?___fpclassifyf^0,c
 11320   0025E6  6A02               	clrf	(?___fpclassifyf+1)^0,c
 11321   0025E8  EFFA  F012         	goto	l1013
 11322   0025EC                     l6078:
 11323   0025EC  0E00               	movlw	0
 11324   0025EE  6E02               	movwf	(?___fpclassifyf+1)^0,c
 11325   0025F0  0E04               	movlw	4
 11326   0025F2  6E01               	movwf	?___fpclassifyf^0,c
 11327   0025F4                     l1013:
 11328   0025F4  0012               	return		;funcret
 11329   0025F6                     __end_of___fpclassifyf:
 11330                           	callstack 0
 11331                           
 11332 ;; *************** function ___fltol *****************
 11333 ;; Defined at:
 11334 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;  f1              4    0[COMRAM] int 
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;  exp1            1    9[COMRAM] unsigned char 
 11339 ;;  sign1           1    8[COMRAM] unsigned char 
 11340 ;; Return value:  Size  Location     Type
 11341 ;;                  4    0[COMRAM] long 
 11342 ;; Registers used:
 11343 ;;		wreg, status,2, status,0
 11344 ;; Tracked objects:
 11345 ;;		On entry : 0/0
 11346 ;;		On exit  : 0/0
 11347 ;;		Unchanged: 0/0
 11348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11349 ;;      Params:         4       0       0       0       0       0       0       0       0
 11350 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11351 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11352 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11353 ;;Total ram usage:       10 bytes
 11354 ;; Hardware stack levels used: 1
 11355 ;; This function calls:
 11356 ;;		Nothing
 11357 ;; This function is called by:
 11358 ;;		_efgtoa
 11359 ;; This function uses a non-reentrant model
 11360 ;;
 11361                           
 11362                           	psect	text23
 11363   0026FA                     __ptext23:
 11364                           	callstack 0
 11365   0026FA                     ___fltol:
 11366                           	callstack 25
 11367   0026FA  3403               	rlcf	(___fltol@f1+2)^0,w,c
 11368   0026FC  3404               	rlcf	(___fltol@f1+3)^0,w,c
 11369   0026FE  6E0A               	movwf	___fltol@exp1^0,c
 11370   002700  500A               	movf	___fltol@exp1^0,w,c
 11371   002702  A4D8               	btfss	status,2,c
 11372   002704  EF86  F013         	goto	u7541
 11373   002708  EF88  F013         	goto	u7540
 11374   00270C                     u7541:
 11375   00270C  EF92  F013         	goto	l6006
 11376   002710                     u7540:
 11377   002710                     l6002:
 11378   002710  0E00               	movlw	0
 11379   002712  6E01               	movwf	?___fltol^0,c
 11380   002714  0E00               	movlw	0
 11381   002716  6E02               	movwf	(?___fltol+1)^0,c
 11382   002718  0E00               	movlw	0
 11383   00271A  6E03               	movwf	(?___fltol+2)^0,c
 11384   00271C  0E00               	movlw	0
 11385   00271E  6E04               	movwf	(?___fltol+3)^0,c
 11386   002720  EFFF  F013         	goto	l481
 11387   002724                     l6006:
 11388   002724  C001  F005         	movff	___fltol@f1,??___fltol
 11389   002728  C002  F006         	movff	___fltol@f1+1,??___fltol+1
 11390   00272C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
 11391   002730  C004  F008         	movff	___fltol@f1+3,??___fltol+3
 11392   002734  0E20               	movlw	32
 11393   002736  EFA2  F013         	goto	u7550
 11394   00273A                     u7555:
 11395   00273A  90D8               	bcf	status,0,c
 11396   00273C  3208               	rrcf	(??___fltol+3)^0,f,c
 11397   00273E  3207               	rrcf	(??___fltol+2)^0,f,c
 11398   002740  3206               	rrcf	(??___fltol+1)^0,f,c
 11399   002742  3205               	rrcf	??___fltol^0,f,c
 11400   002744                     u7550:
 11401   002744  2EE8               	decfsz	wreg,f,c
 11402   002746  EF9D  F013         	goto	u7555
 11403   00274A  5005               	movf	??___fltol^0,w,c
 11404   00274C  6E09               	movwf	___fltol@sign1^0,c
 11405   00274E  8E03               	bsf	(___fltol@f1+2)^0,7,c
 11406   002750  0EFF               	movlw	255
 11407   002752  1601               	andwf	___fltol@f1^0,f,c
 11408   002754  0EFF               	movlw	255
 11409   002756  1602               	andwf	(___fltol@f1+1)^0,f,c
 11410   002758  0EFF               	movlw	255
 11411   00275A  1603               	andwf	(___fltol@f1+2)^0,f,c
 11412   00275C  0E00               	movlw	0
 11413   00275E  1604               	andwf	(___fltol@f1+3)^0,f,c
 11414   002760  0E96               	movlw	150
 11415   002762  5E0A               	subwf	___fltol@exp1^0,f,c
 11416   002764  BE0A               	btfsc	___fltol@exp1^0,7,c
 11417   002766  EFB9  F013         	goto	u7560
 11418   00276A  EFB7  F013         	goto	u7561
 11419   00276E                     u7561:
 11420   00276E  EFCF  F013         	goto	l6026
 11421   002772                     u7560:
 11422   002772  500A               	movf	___fltol@exp1^0,w,c
 11423   002774  0A80               	xorlw	128
 11424   002776  0F97               	addlw	151
 11425   002778  B0D8               	btfsc	status,0,c
 11426   00277A  EFC1  F013         	goto	u7571
 11427   00277E  EFC3  F013         	goto	u7570
 11428   002782                     u7571:
 11429   002782  EFC5  F013         	goto	l6022
 11430   002786                     u7570:
 11431   002786  EF88  F013         	goto	l6002
 11432   00278A                     l6022:
 11433   00278A  90D8               	bcf	status,0,c
 11434   00278C  3204               	rrcf	(___fltol@f1+3)^0,f,c
 11435   00278E  3203               	rrcf	(___fltol@f1+2)^0,f,c
 11436   002790  3202               	rrcf	(___fltol@f1+1)^0,f,c
 11437   002792  3201               	rrcf	___fltol@f1^0,f,c
 11438   002794  3E0A               	incfsz	___fltol@exp1^0,f,c
 11439   002796  EFC5  F013         	goto	l6022
 11440   00279A  EFE7  F013         	goto	l6036
 11441   00279E                     l6026:
 11442   00279E  0E1F               	movlw	31
 11443   0027A0  640A               	cpfsgt	___fltol@exp1^0,c
 11444   0027A2  EFD5  F013         	goto	u7581
 11445   0027A6  EFD7  F013         	goto	u7580
 11446   0027AA                     u7581:
 11447   0027AA  EFDF  F013         	goto	l6034
 11448   0027AE                     u7580:
 11449   0027AE  EF88  F013         	goto	l6002
 11450   0027B2                     l6032:
 11451   0027B2  90D8               	bcf	status,0,c
 11452   0027B4  3601               	rlcf	___fltol@f1^0,f,c
 11453   0027B6  3602               	rlcf	(___fltol@f1+1)^0,f,c
 11454   0027B8  3603               	rlcf	(___fltol@f1+2)^0,f,c
 11455   0027BA  3604               	rlcf	(___fltol@f1+3)^0,f,c
 11456   0027BC  060A               	decf	___fltol@exp1^0,f,c
 11457   0027BE                     l6034:
 11458   0027BE  500A               	movf	___fltol@exp1^0,w,c
 11459   0027C0  A4D8               	btfss	status,2,c
 11460   0027C2  EFE5  F013         	goto	u7591
 11461   0027C6  EFE7  F013         	goto	u7590
 11462   0027CA                     u7591:
 11463   0027CA  EFD9  F013         	goto	l6032
 11464   0027CE                     u7590:
 11465   0027CE                     l6036:
 11466   0027CE  5009               	movf	___fltol@sign1^0,w,c
 11467   0027D0  B4D8               	btfsc	status,2,c
 11468   0027D2  EFED  F013         	goto	u7601
 11469   0027D6  EFEF  F013         	goto	u7600
 11470   0027DA                     u7601:
 11471   0027DA  EFF7  F013         	goto	l6040
 11472   0027DE                     u7600:
 11473   0027DE  1E04               	comf	(___fltol@f1+3)^0,f,c
 11474   0027E0  1E03               	comf	(___fltol@f1+2)^0,f,c
 11475   0027E2  1E02               	comf	(___fltol@f1+1)^0,f,c
 11476   0027E4  6C01               	negf	___fltol@f1^0,c
 11477   0027E6  0E00               	movlw	0
 11478   0027E8  2202               	addwfc	(___fltol@f1+1)^0,f,c
 11479   0027EA  2203               	addwfc	(___fltol@f1+2)^0,f,c
 11480   0027EC  2204               	addwfc	(___fltol@f1+3)^0,f,c
 11481   0027EE                     l6040:
 11482   0027EE  C001  F001         	movff	___fltol@f1,?___fltol
 11483   0027F2  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 11484   0027F6  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 11485   0027FA  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 11486   0027FE                     l481:
 11487   0027FE  0012               	return		;funcret
 11488   002800                     __end_of___fltol:
 11489                           	callstack 0
 11490                           
 11491 ;; *************** function ___flsub *****************
 11492 ;; Defined at:
 11493 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 11494 ;; Parameters:    Size  Location     Type
 11495 ;;  b               4   55[COMRAM] long 
 11496 ;;  a               4   59[COMRAM] long 
 11497 ;; Auto vars:     Size  Location     Type
 11498 ;;		None
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  4   55[COMRAM] long 
 11501 ;; Registers used:
 11502 ;;		wreg, status,2, status,0, cstack
 11503 ;; Tracked objects:
 11504 ;;		On entry : 0/0
 11505 ;;		On exit  : 0/0
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11508 ;;      Params:         8       0       0       0       0       0       0       0       0
 11509 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11510 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11511 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11512 ;;Total ram usage:        8 bytes
 11513 ;; Hardware stack levels used: 1
 11514 ;; Hardware stack levels required when called: 1
 11515 ;; This function calls:
 11516 ;;		___fladd
 11517 ;; This function is called by:
 11518 ;;		_Calibrate_MQ2
 11519 ;;		_Read_Flame_Sensor
 11520 ;;		_Read_MQ2_Sensor
 11521 ;;		_efgtoa
 11522 ;;		_powf
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           	psect	text24
 11527   001C8C                     __ptext24:
 11528                           	callstack 0
 11529   001C8C                     ___flsub:
 11530                           	callstack 24
 11531   001C8C  0E00               	movlw	0
 11532   001C8E  1A3C               	xorwf	___flsub@a^0,f,c
 11533   001C90  0E00               	movlw	0
 11534   001C92  1A3D               	xorwf	(___flsub@a+1)^0,f,c
 11535   001C94  0E00               	movlw	0
 11536   001C96  1A3E               	xorwf	(___flsub@a+2)^0,f,c
 11537   001C98  0E80               	movlw	128
 11538   001C9A  1A3F               	xorwf	(___flsub@a+3)^0,f,c
 11539   001C9C  C038  F00F         	movff	___flsub@b,___fladd@b
 11540   001CA0  C039  F010         	movff	___flsub@b+1,___fladd@b+1
 11541   001CA4  C03A  F011         	movff	___flsub@b+2,___fladd@b+2
 11542   001CA8  C03B  F012         	movff	___flsub@b+3,___fladd@b+3
 11543   001CAC  C03C  F013         	movff	___flsub@a,___fladd@a
 11544   001CB0  C03D  F014         	movff	___flsub@a+1,___fladd@a+1
 11545   001CB4  C03E  F015         	movff	___flsub@a+2,___fladd@a+2
 11546   001CB8  C03F  F016         	movff	___flsub@a+3,___fladd@a+3
 11547   001CBC  ECCF  F022         	call	___fladd	;wreg free
 11548   001CC0  C00F  F038         	movff	?___fladd,?___flsub
 11549   001CC4  C010  F039         	movff	?___fladd+1,?___flsub+1
 11550   001CC8  C011  F03A         	movff	?___fladd+2,?___flsub+2
 11551   001CCC  C012  F03B         	movff	?___fladd+3,?___flsub+3
 11552   001CD0  0012               	return		;funcret
 11553   001CD2                     __end_of___flsub:
 11554                           	callstack 0
 11555                           
 11556 ;; *************** function ___fladd *****************
 11557 ;; Defined at:
 11558 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;  b               4   14[COMRAM] long 
 11561 ;;  a               4   18[COMRAM] long 
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;  grs             1   29[COMRAM] unsigned char 
 11564 ;;  bexp            1   28[COMRAM] unsigned char 
 11565 ;;  aexp            1   27[COMRAM] unsigned char 
 11566 ;;  signs           1   26[COMRAM] unsigned char 
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  4   14[COMRAM] unsigned char 
 11569 ;; Registers used:
 11570 ;;		wreg, status,2, status,0
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11576 ;;      Params:         8       0       0       0       0       0       0       0       0
 11577 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11578 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11579 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11580 ;;Total ram usage:       16 bytes
 11581 ;; Hardware stack levels used: 1
 11582 ;; This function calls:
 11583 ;;		Nothing
 11584 ;; This function is called by:
 11585 ;;		_Calibrate_Flame_Sensor
 11586 ;;		_Calibrate_MQ2
 11587 ;;		_Read_MQ2_Sensor
 11588 ;;		___flsub
 11589 ;;		_efgtoa
 11590 ;;		_powf
 11591 ;; This function uses a non-reentrant model
 11592 ;;
 11593                           
 11594                           	psect	text25
 11595   00459E                     __ptext25:
 11596                           	callstack 0
 11597   00459E                     ___fladd:
 11598                           	callstack 24
 11599   00459E  5012               	movf	(___fladd@b+3)^0,w,c
 11600   0045A0  0B80               	andlw	128
 11601   0045A2  6E1B               	movwf	___fladd@signs^0,c
 11602   0045A4  5012               	movf	(___fladd@b+3)^0,w,c
 11603   0045A6  2412               	addwf	(___fladd@b+3)^0,w,c
 11604   0045A8  6E1D               	movwf	___fladd@bexp^0,c
 11605   0045AA  AE11               	btfss	(___fladd@b+2)^0,7,c
 11606   0045AC  EFDA  F022         	goto	u6511
 11607   0045B0  EFDC  F022         	goto	u6510
 11608   0045B4                     u6511:
 11609   0045B4  EFDD  F022         	goto	l5408
 11610   0045B8                     u6510:
 11611   0045B8  801D               	bsf	___fladd@bexp^0,0,c
 11612   0045BA                     l5408:
 11613   0045BA  501D               	movf	___fladd@bexp^0,w,c
 11614   0045BC  B4D8               	btfsc	status,2,c
 11615   0045BE  EFE3  F022         	goto	u6521
 11616   0045C2  EFE5  F022         	goto	u6520
 11617   0045C6                     u6521:
 11618   0045C6  EFF9  F022         	goto	l5418
 11619   0045CA                     u6520:
 11620   0045CA  281D               	incf	___fladd@bexp^0,w,c
 11621   0045CC  A4D8               	btfss	status,2,c
 11622   0045CE  EFEB  F022         	goto	u6531
 11623   0045D2  EFED  F022         	goto	u6530
 11624   0045D6                     u6531:
 11625   0045D6  EFF5  F022         	goto	l5414
 11626   0045DA                     u6530:
 11627   0045DA  0E00               	movlw	0
 11628   0045DC  6E0F               	movwf	___fladd@b^0,c
 11629   0045DE  0E00               	movlw	0
 11630   0045E0  6E10               	movwf	(___fladd@b+1)^0,c
 11631   0045E2  0E00               	movlw	0
 11632   0045E4  6E11               	movwf	(___fladd@b+2)^0,c
 11633   0045E6  0E00               	movlw	0
 11634   0045E8  6E12               	movwf	(___fladd@b+3)^0,c
 11635   0045EA                     l5414:
 11636   0045EA  8E11               	bsf	(___fladd@b+2)^0,7,c
 11637   0045EC  6A12               	clrf	(___fladd@b+3)^0,c
 11638   0045EE  EF01  F023         	goto	l5420
 11639   0045F2                     l5418:
 11640   0045F2  0E00               	movlw	0
 11641   0045F4  6E0F               	movwf	___fladd@b^0,c
 11642   0045F6  0E00               	movlw	0
 11643   0045F8  6E10               	movwf	(___fladd@b+1)^0,c
 11644   0045FA  0E00               	movlw	0
 11645   0045FC  6E11               	movwf	(___fladd@b+2)^0,c
 11646   0045FE  0E00               	movlw	0
 11647   004600  6E12               	movwf	(___fladd@b+3)^0,c
 11648   004602                     l5420:
 11649   004602  5016               	movf	(___fladd@a+3)^0,w,c
 11650   004604  0B80               	andlw	128
 11651   004606  6E1C               	movwf	___fladd@aexp^0,c
 11652   004608  501B               	movf	___fladd@signs^0,w,c
 11653   00460A  181C               	xorwf	___fladd@aexp^0,w,c
 11654   00460C  B4D8               	btfsc	status,2,c
 11655   00460E  EF0B  F023         	goto	u6541
 11656   004612  EF0D  F023         	goto	u6540
 11657   004616                     u6541:
 11658   004616  EF0E  F023         	goto	l5426
 11659   00461A                     u6540:
 11660   00461A  8C1B               	bsf	___fladd@signs^0,6,c
 11661   00461C                     l5426:
 11662   00461C  5016               	movf	(___fladd@a+3)^0,w,c
 11663   00461E  2416               	addwf	(___fladd@a+3)^0,w,c
 11664   004620  6E1C               	movwf	___fladd@aexp^0,c
 11665   004622  AE15               	btfss	(___fladd@a+2)^0,7,c
 11666   004624  EF16  F023         	goto	u6551
 11667   004628  EF18  F023         	goto	u6550
 11668   00462C                     u6551:
 11669   00462C  EF19  F023         	goto	l5432
 11670   004630                     u6550:
 11671   004630  801C               	bsf	___fladd@aexp^0,0,c
 11672   004632                     l5432:
 11673   004632  501C               	movf	___fladd@aexp^0,w,c
 11674   004634  B4D8               	btfsc	status,2,c
 11675   004636  EF1F  F023         	goto	u6561
 11676   00463A  EF21  F023         	goto	u6560
 11677   00463E                     u6561:
 11678   00463E  EF35  F023         	goto	l5442
 11679   004642                     u6560:
 11680   004642  281C               	incf	___fladd@aexp^0,w,c
 11681   004644  A4D8               	btfss	status,2,c
 11682   004646  EF27  F023         	goto	u6571
 11683   00464A  EF29  F023         	goto	u6570
 11684   00464E                     u6571:
 11685   00464E  EF31  F023         	goto	l5438
 11686   004652                     u6570:
 11687   004652  0E00               	movlw	0
 11688   004654  6E13               	movwf	___fladd@a^0,c
 11689   004656  0E00               	movlw	0
 11690   004658  6E14               	movwf	(___fladd@a+1)^0,c
 11691   00465A  0E00               	movlw	0
 11692   00465C  6E15               	movwf	(___fladd@a+2)^0,c
 11693   00465E  0E00               	movlw	0
 11694   004660  6E16               	movwf	(___fladd@a+3)^0,c
 11695   004662                     l5438:
 11696   004662  8E15               	bsf	(___fladd@a+2)^0,7,c
 11697   004664  6A16               	clrf	(___fladd@a+3)^0,c
 11698   004666  EF3D  F023         	goto	l5444
 11699   00466A                     l5442:
 11700   00466A  0E00               	movlw	0
 11701   00466C  6E13               	movwf	___fladd@a^0,c
 11702   00466E  0E00               	movlw	0
 11703   004670  6E14               	movwf	(___fladd@a+1)^0,c
 11704   004672  0E00               	movlw	0
 11705   004674  6E15               	movwf	(___fladd@a+2)^0,c
 11706   004676  0E00               	movlw	0
 11707   004678  6E16               	movwf	(___fladd@a+3)^0,c
 11708   00467A                     l5444:
 11709   00467A  501D               	movf	___fladd@bexp^0,w,c
 11710   00467C  5C1C               	subwf	___fladd@aexp^0,w,c
 11711   00467E  B0D8               	btfsc	status,0,c
 11712   004680  EF44  F023         	goto	u6581
 11713   004684  EF46  F023         	goto	u6580
 11714   004688                     u6581:
 11715   004688  EF6D  F023         	goto	l5480
 11716   00468C                     u6580:
 11717   00468C  AC1B               	btfss	___fladd@signs^0,6,c
 11718   00468E  EF4B  F023         	goto	u6591
 11719   004692  EF4D  F023         	goto	u6590
 11720   004696                     u6591:
 11721   004696  EF4F  F023         	goto	l5450
 11722   00469A                     u6590:
 11723   00469A  0E80               	movlw	128
 11724   00469C  1A1B               	xorwf	___fladd@signs^0,f,c
 11725   00469E                     l5450:
 11726   00469E  C01D  F01E         	movff	___fladd@bexp,___fladd@grs
 11727   0046A2  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
 11728   0046A6  C01E  F01C         	movff	___fladd@grs,___fladd@aexp
 11729   0046AA  C00F  F01E         	movff	___fladd@b,___fladd@grs
 11730   0046AE  C013  F00F         	movff	___fladd@a,___fladd@b
 11731   0046B2  C01E  F013         	movff	___fladd@grs,___fladd@a
 11732   0046B6  C010  F01E         	movff	___fladd@b+1,___fladd@grs
 11733   0046BA  C014  F010         	movff	___fladd@a+1,___fladd@b+1
 11734   0046BE  C01E  F014         	movff	___fladd@grs,___fladd@a+1
 11735   0046C2  C011  F01E         	movff	___fladd@b+2,___fladd@grs
 11736   0046C6  C015  F011         	movff	___fladd@a+2,___fladd@b+2
 11737   0046CA  C01E  F015         	movff	___fladd@grs,___fladd@a+2
 11738   0046CE  C012  F01E         	movff	___fladd@b+3,___fladd@grs
 11739   0046D2  C016  F012         	movff	___fladd@a+3,___fladd@b+3
 11740   0046D6  C01E  F016         	movff	___fladd@grs,___fladd@a+3
 11741   0046DA                     l5480:
 11742   0046DA  6A1E               	clrf	___fladd@grs^0,c
 11743   0046DC  501D               	movf	___fladd@bexp^0,w,c
 11744   0046DE  C01C  F017         	movff	___fladd@aexp,??___fladd
 11745   0046E2  6A18               	clrf	(??___fladd+1)^0,c
 11746   0046E4  5E17               	subwf	??___fladd^0,f,c
 11747   0046E6  0E00               	movlw	0
 11748   0046E8  5A18               	subwfb	(??___fladd+1)^0,f,c
 11749   0046EA  BE18               	btfsc	(??___fladd+1)^0,7,c
 11750   0046EC  EF81  F023         	goto	u6601
 11751   0046F0  5018               	movf	(??___fladd+1)^0,w,c
 11752   0046F2  E109               	bnz	u6600
 11753   0046F4  0E1A               	movlw	26
 11754   0046F6  5C17               	subwf	??___fladd^0,w,c
 11755   0046F8  A0D8               	btfss	status,0,c
 11756   0046FA  EF81  F023         	goto	u6601
 11757   0046FE  EF83  F023         	goto	u6600
 11758   004702                     u6601:
 11759   004702  EFBA  F023         	goto	l713
 11760   004706                     u6600:
 11761   004706  500F               	movf	___fladd@b^0,w,c
 11762   004708  1010               	iorwf	(___fladd@b+1)^0,w,c
 11763   00470A  1011               	iorwf	(___fladd@b+2)^0,w,c
 11764   00470C  1012               	iorwf	(___fladd@b+3)^0,w,c
 11765   00470E  A4D8               	btfss	status,2,c
 11766   004710  EF8C  F023         	goto	u6611
 11767   004714  EF8F  F023         	goto	u6610
 11768   004718                     u6611:
 11769   004718  0E01               	movlw	1
 11770   00471A  EF90  F023         	goto	u6620
 11771   00471E                     u6610:
 11772   00471E  0E00               	movlw	0
 11773   004720                     u6620:
 11774   004720  6E1E               	movwf	___fladd@grs^0,c
 11775   004722  0E00               	movlw	0
 11776   004724  6E0F               	movwf	___fladd@b^0,c
 11777   004726  0E00               	movlw	0
 11778   004728  6E10               	movwf	(___fladd@b+1)^0,c
 11779   00472A  0E00               	movlw	0
 11780   00472C  6E11               	movwf	(___fladd@b+2)^0,c
 11781   00472E  0E00               	movlw	0
 11782   004730  6E12               	movwf	(___fladd@b+3)^0,c
 11783   004732  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
 11784   004736  EFC3  F023         	goto	l712
 11785   00473A                     l714:
 11786   00473A  A01E               	btfss	___fladd@grs^0,0,c
 11787   00473C  EFA2  F023         	goto	u6631
 11788   004740  EFA4  F023         	goto	u6630
 11789   004744                     u6631:
 11790   004744  EFAA  F023         	goto	l5490
 11791   004748                     u6630:
 11792   004748  90D8               	bcf	status,0,c
 11793   00474A  301E               	rrcf	___fladd@grs^0,w,c
 11794   00474C  0901               	iorlw	1
 11795   00474E  6E1E               	movwf	___fladd@grs^0,c
 11796   004750  EFAC  F023         	goto	l5492
 11797   004754                     l5490:
 11798   004754  90D8               	bcf	status,0,c
 11799   004756  321E               	rrcf	___fladd@grs^0,f,c
 11800   004758                     l5492:
 11801   004758  A00F               	btfss	___fladd@b^0,0,c
 11802   00475A  EFB1  F023         	goto	u6641
 11803   00475E  EFB3  F023         	goto	u6640
 11804   004762                     u6641:
 11805   004762  EFB4  F023         	goto	l5496
 11806   004766                     u6640:
 11807   004766  8E1E               	bsf	___fladd@grs^0,7,c
 11808   004768                     l5496:
 11809   004768  3412               	rlcf	(___fladd@b+3)^0,w,c
 11810   00476A  3212               	rrcf	(___fladd@b+3)^0,f,c
 11811   00476C  3211               	rrcf	(___fladd@b+2)^0,f,c
 11812   00476E  3210               	rrcf	(___fladd@b+1)^0,f,c
 11813   004770  320F               	rrcf	___fladd@b^0,f,c
 11814   004772  2A1D               	incf	___fladd@bexp^0,f,c
 11815   004774                     l713:
 11816   004774  501C               	movf	___fladd@aexp^0,w,c
 11817   004776  5C1D               	subwf	___fladd@bexp^0,w,c
 11818   004778  A0D8               	btfss	status,0,c
 11819   00477A  EFC1  F023         	goto	u6651
 11820   00477E  EFC3  F023         	goto	u6650
 11821   004782                     u6651:
 11822   004782  EF9D  F023         	goto	l714
 11823   004786                     u6650:
 11824   004786                     l712:
 11825   004786  BC1B               	btfsc	___fladd@signs^0,6,c
 11826   004788  EFC8  F023         	goto	u6661
 11827   00478C  EFCA  F023         	goto	u6660
 11828   004790                     u6661:
 11829   004790  EF0A  F024         	goto	l5524
 11830   004794                     u6660:
 11831   004794  501D               	movf	___fladd@bexp^0,w,c
 11832   004796  A4D8               	btfss	status,2,c
 11833   004798  EFD0  F023         	goto	u6671
 11834   00479C  EFD2  F023         	goto	u6670
 11835   0047A0                     u6671:
 11836   0047A0  EFDC  F023         	goto	l5506
 11837   0047A4                     u6670:
 11838   0047A4  0E00               	movlw	0
 11839   0047A6  6E0F               	movwf	?___fladd^0,c
 11840   0047A8  0E00               	movlw	0
 11841   0047AA  6E10               	movwf	(?___fladd+1)^0,c
 11842   0047AC  0E00               	movlw	0
 11843   0047AE  6E11               	movwf	(?___fladd+2)^0,c
 11844   0047B0  0E00               	movlw	0
 11845   0047B2  6E12               	movwf	(?___fladd+3)^0,c
 11846   0047B4  EF29  F025         	goto	l721
 11847   0047B8                     l5506:
 11848   0047B8  5013               	movf	___fladd@a^0,w,c
 11849   0047BA  260F               	addwf	___fladd@b^0,f,c
 11850   0047BC  5014               	movf	(___fladd@a+1)^0,w,c
 11851   0047BE  2210               	addwfc	(___fladd@b+1)^0,f,c
 11852   0047C0  5015               	movf	(___fladd@a+2)^0,w,c
 11853   0047C2  2211               	addwfc	(___fladd@b+2)^0,f,c
 11854   0047C4  5016               	movf	(___fladd@a+3)^0,w,c
 11855   0047C6  2212               	addwfc	(___fladd@b+3)^0,f,c
 11856   0047C8  A012               	btfss	(___fladd@b+3)^0,0,c
 11857   0047CA  EFE9  F023         	goto	u6681
 11858   0047CE  EFEB  F023         	goto	u6680
 11859   0047D2                     u6681:
 11860   0047D2  EF97  F024         	goto	l726
 11861   0047D6                     u6680:
 11862   0047D6  A01E               	btfss	___fladd@grs^0,0,c
 11863   0047D8  EFF0  F023         	goto	u6691
 11864   0047DC  EFF2  F023         	goto	u6690
 11865   0047E0                     u6691:
 11866   0047E0  EFF8  F023         	goto	l5514
 11867   0047E4                     u6690:
 11868   0047E4  90D8               	bcf	status,0,c
 11869   0047E6  301E               	rrcf	___fladd@grs^0,w,c
 11870   0047E8  0901               	iorlw	1
 11871   0047EA  6E1E               	movwf	___fladd@grs^0,c
 11872   0047EC  EFFA  F023         	goto	l5516
 11873   0047F0                     l5514:
 11874   0047F0  90D8               	bcf	status,0,c
 11875   0047F2  321E               	rrcf	___fladd@grs^0,f,c
 11876   0047F4                     l5516:
 11877   0047F4  A00F               	btfss	___fladd@b^0,0,c
 11878   0047F6  EFFF  F023         	goto	u6701
 11879   0047FA  EF01  F024         	goto	u6700
 11880   0047FE                     u6701:
 11881   0047FE  EF02  F024         	goto	l5520
 11882   004802                     u6700:
 11883   004802  8E1E               	bsf	___fladd@grs^0,7,c
 11884   004804                     l5520:
 11885   004804  3412               	rlcf	(___fladd@b+3)^0,w,c
 11886   004806  3212               	rrcf	(___fladd@b+3)^0,f,c
 11887   004808  3211               	rrcf	(___fladd@b+2)^0,f,c
 11888   00480A  3210               	rrcf	(___fladd@b+1)^0,f,c
 11889   00480C  320F               	rrcf	___fladd@b^0,f,c
 11890   00480E  2A1D               	incf	___fladd@bexp^0,f,c
 11891   004810  EF97  F024         	goto	l726
 11892   004814                     l5524:
 11893   004814  5013               	movf	___fladd@a^0,w,c
 11894   004816  5C0F               	subwf	___fladd@b^0,w,c
 11895   004818  5014               	movf	(___fladd@a+1)^0,w,c
 11896   00481A  5810               	subwfb	(___fladd@b+1)^0,w,c
 11897   00481C  5015               	movf	(___fladd@a+2)^0,w,c
 11898   00481E  5811               	subwfb	(___fladd@b+2)^0,w,c
 11899   004820  5012               	movf	(___fladd@b+3)^0,w,c
 11900   004822  0A80               	xorlw	128
 11901   004824  6E17               	movwf	??___fladd^0,c
 11902   004826  5016               	movf	(___fladd@a+3)^0,w,c
 11903   004828  0A80               	xorlw	128
 11904   00482A  5817               	subwfb	??___fladd^0,w,c
 11905   00482C  B0D8               	btfsc	status,0,c
 11906   00482E  EF1B  F024         	goto	u6711
 11907   004832  EF1D  F024         	goto	u6710
 11908   004836                     u6711:
 11909   004836  EF48  F024         	goto	l5534
 11910   00483A                     u6710:
 11911   00483A  500F               	movf	___fladd@b^0,w,c
 11912   00483C  5C13               	subwf	___fladd@a^0,w,c
 11913   00483E  6E17               	movwf	??___fladd^0,c
 11914   004840  5010               	movf	(___fladd@b+1)^0,w,c
 11915   004842  5814               	subwfb	(___fladd@a+1)^0,w,c
 11916   004844  6E18               	movwf	(??___fladd+1)^0,c
 11917   004846  5011               	movf	(___fladd@b+2)^0,w,c
 11918   004848  5815               	subwfb	(___fladd@a+2)^0,w,c
 11919   00484A  6E19               	movwf	(??___fladd+2)^0,c
 11920   00484C  5012               	movf	(___fladd@b+3)^0,w,c
 11921   00484E  5816               	subwfb	(___fladd@a+3)^0,w,c
 11922   004850  6E1A               	movwf	(??___fladd+3)^0,c
 11923   004852  0EFF               	movlw	255
 11924   004854  2417               	addwf	??___fladd^0,w,c
 11925   004856  6E0F               	movwf	___fladd@b^0,c
 11926   004858  0EFF               	movlw	255
 11927   00485A  2018               	addwfc	(??___fladd+1)^0,w,c
 11928   00485C  6E10               	movwf	(___fladd@b+1)^0,c
 11929   00485E  0EFF               	movlw	255
 11930   004860  2019               	addwfc	(??___fladd+2)^0,w,c
 11931   004862  6E11               	movwf	(___fladd@b+2)^0,c
 11932   004864  0EFF               	movlw	255
 11933   004866  201A               	addwfc	(??___fladd+3)^0,w,c
 11934   004868  6E12               	movwf	(___fladd@b+3)^0,c
 11935   00486A  0E80               	movlw	128
 11936   00486C  1A1B               	xorwf	___fladd@signs^0,f,c
 11937   00486E  6C1E               	negf	___fladd@grs^0,c
 11938   004870  501E               	movf	___fladd@grs^0,w,c
 11939   004872  A4D8               	btfss	status,2,c
 11940   004874  EF3E  F024         	goto	u6721
 11941   004878  EF40  F024         	goto	u6720
 11942   00487C                     u6721:
 11943   00487C  EF50  F024         	goto	l729
 11944   004880                     u6720:
 11945   004880  0E01               	movlw	1
 11946   004882  260F               	addwf	___fladd@b^0,f,c
 11947   004884  0E00               	movlw	0
 11948   004886  2210               	addwfc	(___fladd@b+1)^0,f,c
 11949   004888  2211               	addwfc	(___fladd@b+2)^0,f,c
 11950   00488A  2212               	addwfc	(___fladd@b+3)^0,f,c
 11951   00488C  EF50  F024         	goto	l729
 11952   004890                     l5534:
 11953   004890  5013               	movf	___fladd@a^0,w,c
 11954   004892  5E0F               	subwf	___fladd@b^0,f,c
 11955   004894  5014               	movf	(___fladd@a+1)^0,w,c
 11956   004896  5A10               	subwfb	(___fladd@b+1)^0,f,c
 11957   004898  5015               	movf	(___fladd@a+2)^0,w,c
 11958   00489A  5A11               	subwfb	(___fladd@b+2)^0,f,c
 11959   00489C  5016               	movf	(___fladd@a+3)^0,w,c
 11960   00489E  5A12               	subwfb	(___fladd@b+3)^0,f,c
 11961   0048A0                     l729:
 11962   0048A0  500F               	movf	___fladd@b^0,w,c
 11963   0048A2  1010               	iorwf	(___fladd@b+1)^0,w,c
 11964   0048A4  1011               	iorwf	(___fladd@b+2)^0,w,c
 11965   0048A6  1012               	iorwf	(___fladd@b+3)^0,w,c
 11966   0048A8  A4D8               	btfss	status,2,c
 11967   0048AA  EF59  F024         	goto	u6731
 11968   0048AE  EF5B  F024         	goto	u6730
 11969   0048B2                     u6731:
 11970   0048B2  EF90  F024         	goto	l5558
 11971   0048B6                     u6730:
 11972   0048B6  501E               	movf	___fladd@grs^0,w,c
 11973   0048B8  A4D8               	btfss	status,2,c
 11974   0048BA  EF61  F024         	goto	u6741
 11975   0048BE  EF63  F024         	goto	u6740
 11976   0048C2                     u6741:
 11977   0048C2  EF90  F024         	goto	l5558
 11978   0048C6                     u6740:
 11979   0048C6  0E00               	movlw	0
 11980   0048C8  6E0F               	movwf	?___fladd^0,c
 11981   0048CA  0E00               	movlw	0
 11982   0048CC  6E10               	movwf	(?___fladd+1)^0,c
 11983   0048CE  0E00               	movlw	0
 11984   0048D0  6E11               	movwf	(?___fladd+2)^0,c
 11985   0048D2  0E00               	movlw	0
 11986   0048D4  6E12               	movwf	(?___fladd+3)^0,c
 11987   0048D6  EF29  F025         	goto	l721
 11988   0048DA                     l5542:
 11989   0048DA  90D8               	bcf	status,0,c
 11990   0048DC  360F               	rlcf	___fladd@b^0,f,c
 11991   0048DE  3610               	rlcf	(___fladd@b+1)^0,f,c
 11992   0048E0  3611               	rlcf	(___fladd@b+2)^0,f,c
 11993   0048E2  3612               	rlcf	(___fladd@b+3)^0,f,c
 11994   0048E4  AE1E               	btfss	___fladd@grs^0,7,c
 11995   0048E6  EF77  F024         	goto	u6751
 11996   0048EA  EF79  F024         	goto	u6750
 11997   0048EE                     u6751:
 11998   0048EE  EF7A  F024         	goto	l5548
 11999   0048F2                     u6750:
 12000   0048F2  800F               	bsf	___fladd@b^0,0,c
 12001   0048F4                     l5548:
 12002   0048F4  A01E               	btfss	___fladd@grs^0,0,c
 12003   0048F6  EF7F  F024         	goto	u6761
 12004   0048FA  EF81  F024         	goto	u6760
 12005   0048FE                     u6761:
 12006   0048FE  EF85  F024         	goto	l5552
 12007   004902                     u6760:
 12008   004902  80D8               	bsf	status,0,c
 12009   004904  361E               	rlcf	___fladd@grs^0,f,c
 12010   004906  EF87  F024         	goto	l5554
 12011   00490A                     l5552:
 12012   00490A  90D8               	bcf	status,0,c
 12013   00490C  361E               	rlcf	___fladd@grs^0,f,c
 12014   00490E                     l5554:
 12015   00490E  501D               	movf	___fladd@bexp^0,w,c
 12016   004910  B4D8               	btfsc	status,2,c
 12017   004912  EF8D  F024         	goto	u6771
 12018   004916  EF8F  F024         	goto	u6770
 12019   00491A                     u6771:
 12020   00491A  EF90  F024         	goto	l5558
 12021   00491E                     u6770:
 12022   00491E  061D               	decf	___fladd@bexp^0,f,c
 12023   004920                     l5558:
 12024   004920  AE11               	btfss	(___fladd@b+2)^0,7,c
 12025   004922  EF95  F024         	goto	u6781
 12026   004926  EF97  F024         	goto	u6780
 12027   00492A                     u6781:
 12028   00492A  EF6D  F024         	goto	l5542
 12029   00492E                     u6780:
 12030   00492E                     l726:
 12031   00492E  6A1C               	clrf	___fladd@aexp^0,c
 12032   004930  AE1E               	btfss	___fladd@grs^0,7,c
 12033   004932  EF9D  F024         	goto	u6791
 12034   004936  EF9F  F024         	goto	u6790
 12035   00493A                     u6791:
 12036   00493A  EFB7  F024         	goto	l738
 12037   00493E                     u6790:
 12038   00493E  C01E  F017         	movff	___fladd@grs,??___fladd
 12039   004942  0E7F               	movlw	127
 12040   004944  1617               	andwf	??___fladd^0,f,c
 12041   004946  B4D8               	btfsc	status,2,c
 12042   004948  EFA8  F024         	goto	u6801
 12043   00494C  EFAA  F024         	goto	u6800
 12044   004950                     u6801:
 12045   004950  EFAE  F024         	goto	l739
 12046   004954                     u6800:
 12047   004954                     l5562:
 12048   004954  0E01               	movlw	1
 12049   004956  6E1C               	movwf	___fladd@aexp^0,c
 12050   004958  EFB7  F024         	goto	l738
 12051   00495C                     l739:
 12052   00495C  A00F               	btfss	___fladd@b^0,0,c
 12053   00495E  EFB3  F024         	goto	u6811
 12054   004962  EFB5  F024         	goto	u6810
 12055   004966                     u6811:
 12056   004966  EFB7  F024         	goto	l738
 12057   00496A                     u6810:
 12058   00496A  EFAA  F024         	goto	l5562
 12059   00496E                     l738:
 12060   00496E  501C               	movf	___fladd@aexp^0,w,c
 12061   004970  B4D8               	btfsc	status,2,c
 12062   004972  EFBD  F024         	goto	u6821
 12063   004976  EFBF  F024         	goto	u6820
 12064   00497A                     u6821:
 12065   00497A  EFEA  F024         	goto	l5574
 12066   00497E                     u6820:
 12067   00497E  0E01               	movlw	1
 12068   004980  260F               	addwf	___fladd@b^0,f,c
 12069   004982  0E00               	movlw	0
 12070   004984  2210               	addwfc	(___fladd@b+1)^0,f,c
 12071   004986  2211               	addwfc	(___fladd@b+2)^0,f,c
 12072   004988  2212               	addwfc	(___fladd@b+3)^0,f,c
 12073   00498A  A012               	btfss	(___fladd@b+3)^0,0,c
 12074   00498C  EFCA  F024         	goto	u6831
 12075   004990  EFCC  F024         	goto	u6830
 12076   004994                     u6831:
 12077   004994  EFEA  F024         	goto	l5574
 12078   004998                     u6830:
 12079   004998  C00F  F017         	movff	___fladd@b,??___fladd
 12080   00499C  C010  F018         	movff	___fladd@b+1,??___fladd+1
 12081   0049A0  C011  F019         	movff	___fladd@b+2,??___fladd+2
 12082   0049A4  C012  F01A         	movff	___fladd@b+3,??___fladd+3
 12083   0049A8  341A               	rlcf	(??___fladd+3)^0,w,c
 12084   0049AA  321A               	rrcf	(??___fladd+3)^0,f,c
 12085   0049AC  3219               	rrcf	(??___fladd+2)^0,f,c
 12086   0049AE  3218               	rrcf	(??___fladd+1)^0,f,c
 12087   0049B0  3217               	rrcf	??___fladd^0,f,c
 12088   0049B2  C017  F00F         	movff	??___fladd,___fladd@b
 12089   0049B6  C018  F010         	movff	??___fladd+1,___fladd@b+1
 12090   0049BA  C019  F011         	movff	??___fladd+2,___fladd@b+2
 12091   0049BE  C01A  F012         	movff	??___fladd+3,___fladd@b+3
 12092   0049C2  281D               	incf	___fladd@bexp^0,w,c
 12093   0049C4  B4D8               	btfsc	status,2,c
 12094   0049C6  EFE7  F024         	goto	u6841
 12095   0049CA  EFE9  F024         	goto	u6840
 12096   0049CE                     u6841:
 12097   0049CE  EFEA  F024         	goto	l5574
 12098   0049D2                     u6840:
 12099   0049D2  2A1D               	incf	___fladd@bexp^0,f,c
 12100   0049D4                     l5574:
 12101   0049D4  281D               	incf	___fladd@bexp^0,w,c
 12102   0049D6  B4D8               	btfsc	status,2,c
 12103   0049D8  EFF0  F024         	goto	u6851
 12104   0049DC  EFF2  F024         	goto	u6850
 12105   0049E0                     u6851:
 12106   0049E0  EFFA  F024         	goto	l5578
 12107   0049E4                     u6850:
 12108   0049E4  501D               	movf	___fladd@bexp^0,w,c
 12109   0049E6  A4D8               	btfss	status,2,c
 12110   0049E8  EFF8  F024         	goto	u6861
 12111   0049EC  EFFA  F024         	goto	u6860
 12112   0049F0                     u6861:
 12113   0049F0  EF0B  F025         	goto	l745
 12114   0049F4                     u6860:
 12115   0049F4                     l5578:
 12116   0049F4  0E00               	movlw	0
 12117   0049F6  6E0F               	movwf	___fladd@b^0,c
 12118   0049F8  0E00               	movlw	0
 12119   0049FA  6E10               	movwf	(___fladd@b+1)^0,c
 12120   0049FC  0E00               	movlw	0
 12121   0049FE  6E11               	movwf	(___fladd@b+2)^0,c
 12122   004A00  0E00               	movlw	0
 12123   004A02  6E12               	movwf	(___fladd@b+3)^0,c
 12124   004A04  501D               	movf	___fladd@bexp^0,w,c
 12125   004A06  A4D8               	btfss	status,2,c
 12126   004A08  EF08  F025         	goto	u6871
 12127   004A0C  EF0A  F025         	goto	u6870
 12128   004A10                     u6871:
 12129   004A10  EF0B  F025         	goto	l745
 12130   004A14                     u6870:
 12131   004A14  6A1B               	clrf	___fladd@signs^0,c
 12132   004A16                     l745:
 12133   004A16  A01D               	btfss	___fladd@bexp^0,0,c
 12134   004A18  EF10  F025         	goto	u6881
 12135   004A1C  EF12  F025         	goto	u6880
 12136   004A20                     u6881:
 12137   004A20  EF15  F025         	goto	l5584
 12138   004A24                     u6880:
 12139   004A24  8E11               	bsf	(___fladd@b+2)^0,7,c
 12140   004A26  EF16  F025         	goto	l5586
 12141   004A2A                     l5584:
 12142   004A2A  9E11               	bcf	(___fladd@b+2)^0,7,c
 12143   004A2C                     l5586:
 12144   004A2C  90D8               	bcf	status,0,c
 12145   004A2E  301D               	rrcf	___fladd@bexp^0,w,c
 12146   004A30  6E12               	movwf	(___fladd@b+3)^0,c
 12147   004A32  AE1B               	btfss	___fladd@signs^0,7,c
 12148   004A34  EF1E  F025         	goto	u6891
 12149   004A38  EF20  F025         	goto	u6890
 12150   004A3C                     u6891:
 12151   004A3C  EF21  F025         	goto	l5592
 12152   004A40                     u6890:
 12153   004A40  8E12               	bsf	(___fladd@b+3)^0,7,c
 12154   004A42                     l5592:
 12155   004A42  C00F  F00F         	movff	___fladd@b,?___fladd
 12156   004A46  C010  F010         	movff	___fladd@b+1,?___fladd+1
 12157   004A4A  C011  F011         	movff	___fladd@b+2,?___fladd+2
 12158   004A4E  C012  F012         	movff	___fladd@b+3,?___fladd+3
 12159   004A52                     l721:
 12160   004A52  0012               	return		;funcret
 12161   004A54                     __end_of___fladd:
 12162                           	callstack 0
 12163                           
 12164 ;; *************** function ___flneg *****************
 12165 ;; Defined at:
 12166 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 12167 ;; Parameters:    Size  Location     Type
 12168 ;;  f1              4    0[COMRAM] unsigned char 
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;		None
 12171 ;; Return value:  Size  Location     Type
 12172 ;;                  4    0[COMRAM] unsigned char 
 12173 ;; Registers used:
 12174 ;;		wreg, status,2, status,0
 12175 ;; Tracked objects:
 12176 ;;		On entry : 0/0
 12177 ;;		On exit  : 0/0
 12178 ;;		Unchanged: 0/0
 12179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12180 ;;      Params:         4       0       0       0       0       0       0       0       0
 12181 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12182 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12183 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12184 ;;Total ram usage:        4 bytes
 12185 ;; Hardware stack levels used: 1
 12186 ;; This function calls:
 12187 ;;		Nothing
 12188 ;; This function is called by:
 12189 ;;		_efgtoa
 12190 ;;		_powf
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           	psect	text26
 12195   001B54                     __ptext26:
 12196                           	callstack 0
 12197   001B54                     ___flneg:
 12198                           	callstack 25
 12199   001B54  5001               	movf	___flneg@f1^0,w,c
 12200   001B56  1002               	iorwf	(___flneg@f1+1)^0,w,c
 12201   001B58  1003               	iorwf	(___flneg@f1+2)^0,w,c
 12202   001B5A  1004               	iorwf	(___flneg@f1+3)^0,w,c
 12203   001B5C  B4D8               	btfsc	status,2,c
 12204   001B5E  EFB3  F00D         	goto	u7531
 12205   001B62  EFB5  F00D         	goto	u7530
 12206   001B66                     u7531:
 12207   001B66  EFBD  F00D         	goto	l5996
 12208   001B6A                     u7530:
 12209   001B6A  0E00               	movlw	0
 12210   001B6C  1A01               	xorwf	___flneg@f1^0,f,c
 12211   001B6E  0E00               	movlw	0
 12212   001B70  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 12213   001B72  0E00               	movlw	0
 12214   001B74  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 12215   001B76  0E80               	movlw	128
 12216   001B78  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 12217   001B7A                     l5996:
 12218   001B7A  C001  F001         	movff	___flneg@f1,?___flneg
 12219   001B7E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 12220   001B82  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 12221   001B86  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 12222   001B8A  0012               	return		;funcret
 12223   001B8C                     __end_of___flneg:
 12224                           	callstack 0
 12225                           
 12226 ;; *************** function ___flmul *****************
 12227 ;; Defined at:
 12228 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 12229 ;; Parameters:    Size  Location     Type
 12230 ;;  b               4   30[COMRAM] unsigned char 
 12231 ;;  a               4   34[COMRAM] unsigned char 
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;  prod            4   49[COMRAM] struct .
 12234 ;;  grs             4   44[COMRAM] unsigned long 
 12235 ;;  temp            2   53[COMRAM] struct .
 12236 ;;  bexp            1   48[COMRAM] unsigned char 
 12237 ;;  aexp            1   43[COMRAM] unsigned char 
 12238 ;;  sign            1   42[COMRAM] unsigned char 
 12239 ;; Return value:  Size  Location     Type
 12240 ;;                  4   30[COMRAM] unsigned char 
 12241 ;; Registers used:
 12242 ;;		wreg, status,2, status,0, prodl, prodh
 12243 ;; Tracked objects:
 12244 ;;		On entry : 0/0
 12245 ;;		On exit  : 0/0
 12246 ;;		Unchanged: 0/0
 12247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12248 ;;      Params:         8       0       0       0       0       0       0       0       0
 12249 ;;      Locals:        13       0       0       0       0       0       0       0       0
 12250 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12251 ;;      Totals:        25       0       0       0       0       0       0       0       0
 12252 ;;Total ram usage:       25 bytes
 12253 ;; Hardware stack levels used: 1
 12254 ;; This function calls:
 12255 ;;		Nothing
 12256 ;; This function is called by:
 12257 ;;		_Calibrate_Flame_Sensor
 12258 ;;		_Calibrate_MQ2
 12259 ;;		_Read_LM35
 12260 ;;		_Read_Flame_Sensor
 12261 ;;		_Read_MQ2_Sensor
 12262 ;;		_efgtoa
 12263 ;;		_powf
 12264 ;;		_scalbnf
 12265 ;; This function uses a non-reentrant model
 12266 ;;
 12267                           
 12268                           	psect	text27
 12269   004178                     __ptext27:
 12270                           	callstack 0
 12271   004178                     ___flmul:
 12272                           	callstack 25
 12273   004178  5022               	movf	(___flmul@b+3)^0,w,c
 12274   00417A  0B80               	andlw	128
 12275   00417C  6E2B               	movwf	___flmul@sign^0,c
 12276   00417E  5022               	movf	(___flmul@b+3)^0,w,c
 12277   004180  2422               	addwf	(___flmul@b+3)^0,w,c
 12278   004182  6E31               	movwf	___flmul@bexp^0,c
 12279   004184  AE21               	btfss	(___flmul@b+2)^0,7,c
 12280   004186  EFC7  F020         	goto	u7141
 12281   00418A  EFC9  F020         	goto	u7140
 12282   00418E                     u7141:
 12283   00418E  EFCA  F020         	goto	l5746
 12284   004192                     u7140:
 12285   004192  8031               	bsf	___flmul@bexp^0,0,c
 12286   004194                     l5746:
 12287   004194  5031               	movf	___flmul@bexp^0,w,c
 12288   004196  B4D8               	btfsc	status,2,c
 12289   004198  EFD0  F020         	goto	u7151
 12290   00419C  EFD2  F020         	goto	u7150
 12291   0041A0                     u7151:
 12292   0041A0  EFE5  F020         	goto	l5754
 12293   0041A4                     u7150:
 12294   0041A4  2831               	incf	___flmul@bexp^0,w,c
 12295   0041A6  A4D8               	btfss	status,2,c
 12296   0041A8  EFD8  F020         	goto	u7161
 12297   0041AC  EFDA  F020         	goto	u7160
 12298   0041B0                     u7161:
 12299   0041B0  EFE2  F020         	goto	l5752
 12300   0041B4                     u7160:
 12301   0041B4  0E00               	movlw	0
 12302   0041B6  6E1F               	movwf	___flmul@b^0,c
 12303   0041B8  0E00               	movlw	0
 12304   0041BA  6E20               	movwf	(___flmul@b+1)^0,c
 12305   0041BC  0E00               	movlw	0
 12306   0041BE  6E21               	movwf	(___flmul@b+2)^0,c
 12307   0041C0  0E00               	movlw	0
 12308   0041C2  6E22               	movwf	(___flmul@b+3)^0,c
 12309   0041C4                     l5752:
 12310   0041C4  8E21               	bsf	(___flmul@b+2)^0,7,c
 12311   0041C6  EFED  F020         	goto	l5756
 12312   0041CA                     l5754:
 12313   0041CA  0E00               	movlw	0
 12314   0041CC  6E1F               	movwf	___flmul@b^0,c
 12315   0041CE  0E00               	movlw	0
 12316   0041D0  6E20               	movwf	(___flmul@b+1)^0,c
 12317   0041D2  0E00               	movlw	0
 12318   0041D4  6E21               	movwf	(___flmul@b+2)^0,c
 12319   0041D6  0E00               	movlw	0
 12320   0041D8  6E22               	movwf	(___flmul@b+3)^0,c
 12321   0041DA                     l5756:
 12322   0041DA  5026               	movf	(___flmul@a+3)^0,w,c
 12323   0041DC  0B80               	andlw	128
 12324   0041DE  1A2B               	xorwf	___flmul@sign^0,f,c
 12325   0041E0  5026               	movf	(___flmul@a+3)^0,w,c
 12326   0041E2  2426               	addwf	(___flmul@a+3)^0,w,c
 12327   0041E4  6E2C               	movwf	___flmul@aexp^0,c
 12328   0041E6  AE25               	btfss	(___flmul@a+2)^0,7,c
 12329   0041E8  EFF8  F020         	goto	u7171
 12330   0041EC  EFFA  F020         	goto	u7170
 12331   0041F0                     u7171:
 12332   0041F0  EFFB  F020         	goto	l5764
 12333   0041F4                     u7170:
 12334   0041F4  802C               	bsf	___flmul@aexp^0,0,c
 12335   0041F6                     l5764:
 12336   0041F6  502C               	movf	___flmul@aexp^0,w,c
 12337   0041F8  B4D8               	btfsc	status,2,c
 12338   0041FA  EF01  F021         	goto	u7181
 12339   0041FE  EF03  F021         	goto	u7180
 12340   004202                     u7181:
 12341   004202  EF16  F021         	goto	l5772
 12342   004206                     u7180:
 12343   004206  282C               	incf	___flmul@aexp^0,w,c
 12344   004208  A4D8               	btfss	status,2,c
 12345   00420A  EF09  F021         	goto	u7191
 12346   00420E  EF0B  F021         	goto	u7190
 12347   004212                     u7191:
 12348   004212  EF13  F021         	goto	l5770
 12349   004216                     u7190:
 12350   004216  0E00               	movlw	0
 12351   004218  6E23               	movwf	___flmul@a^0,c
 12352   00421A  0E00               	movlw	0
 12353   00421C  6E24               	movwf	(___flmul@a+1)^0,c
 12354   00421E  0E00               	movlw	0
 12355   004220  6E25               	movwf	(___flmul@a+2)^0,c
 12356   004222  0E00               	movlw	0
 12357   004224  6E26               	movwf	(___flmul@a+3)^0,c
 12358   004226                     l5770:
 12359   004226  8E25               	bsf	(___flmul@a+2)^0,7,c
 12360   004228  EF1E  F021         	goto	l798
 12361   00422C                     l5772:
 12362   00422C  0E00               	movlw	0
 12363   00422E  6E23               	movwf	___flmul@a^0,c
 12364   004230  0E00               	movlw	0
 12365   004232  6E24               	movwf	(___flmul@a+1)^0,c
 12366   004234  0E00               	movlw	0
 12367   004236  6E25               	movwf	(___flmul@a+2)^0,c
 12368   004238  0E00               	movlw	0
 12369   00423A  6E26               	movwf	(___flmul@a+3)^0,c
 12370   00423C                     l798:
 12371   00423C  502C               	movf	___flmul@aexp^0,w,c
 12372   00423E  B4D8               	btfsc	status,2,c
 12373   004240  EF24  F021         	goto	u7201
 12374   004244  EF26  F021         	goto	u7200
 12375   004248                     u7201:
 12376   004248  EF2E  F021         	goto	l5776
 12377   00424C                     u7200:
 12378   00424C  5031               	movf	___flmul@bexp^0,w,c
 12379   00424E  A4D8               	btfss	status,2,c
 12380   004250  EF2C  F021         	goto	u7211
 12381   004254  EF2E  F021         	goto	u7210
 12382   004258                     u7211:
 12383   004258  EF38  F021         	goto	l5780
 12384   00425C                     u7210:
 12385   00425C                     l5776:
 12386   00425C  0E00               	movlw	0
 12387   00425E  6E1F               	movwf	?___flmul^0,c
 12388   004260  0E00               	movlw	0
 12389   004262  6E20               	movwf	(?___flmul+1)^0,c
 12390   004264  0E00               	movlw	0
 12391   004266  6E21               	movwf	(?___flmul+2)^0,c
 12392   004268  0E00               	movlw	0
 12393   00426A  6E22               	movwf	(?___flmul+3)^0,c
 12394   00426C  EFCE  F022         	goto	l802
 12395   004270                     l5780:
 12396   004270  5025               	movf	(___flmul@a+2)^0,w,c
 12397   004272  021F               	mulwf	___flmul@b^0,c
 12398   004274  CFF3 F036          	movff	prodl,___flmul@temp
 12399   004278  CFF4 F037          	movff	prodh,___flmul@temp+1
 12400   00427C  5036               	movf	___flmul@temp^0,w,c
 12401   00427E  6E2D               	movwf	___flmul@grs^0,c
 12402   004280  6A2E               	clrf	(___flmul@grs+1)^0,c
 12403   004282  6A2F               	clrf	(___flmul@grs+2)^0,c
 12404   004284  6A30               	clrf	(___flmul@grs+3)^0,c
 12405   004286  5037               	movf	(___flmul@temp+1)^0,w,c
 12406   004288  6E32               	movwf	___flmul@prod^0,c
 12407   00428A  6A33               	clrf	(___flmul@prod+1)^0,c
 12408   00428C  6A34               	clrf	(___flmul@prod+2)^0,c
 12409   00428E  6A35               	clrf	(___flmul@prod+3)^0,c
 12410   004290  5024               	movf	(___flmul@a+1)^0,w,c
 12411   004292  0220               	mulwf	(___flmul@b+1)^0,c
 12412   004294  CFF3 F036          	movff	prodl,___flmul@temp
 12413   004298  CFF4 F037          	movff	prodh,___flmul@temp+1
 12414   00429C  5036               	movf	___flmul@temp^0,w,c
 12415   00429E  262D               	addwf	___flmul@grs^0,f,c
 12416   0042A0  0E00               	movlw	0
 12417   0042A2  222E               	addwfc	(___flmul@grs+1)^0,f,c
 12418   0042A4  222F               	addwfc	(___flmul@grs+2)^0,f,c
 12419   0042A6  2230               	addwfc	(___flmul@grs+3)^0,f,c
 12420   0042A8  5037               	movf	(___flmul@temp+1)^0,w,c
 12421   0042AA  2632               	addwf	___flmul@prod^0,f,c
 12422   0042AC  0E00               	movlw	0
 12423   0042AE  2233               	addwfc	(___flmul@prod+1)^0,f,c
 12424   0042B0  2234               	addwfc	(___flmul@prod+2)^0,f,c
 12425   0042B2  2235               	addwfc	(___flmul@prod+3)^0,f,c
 12426   0042B4  5023               	movf	___flmul@a^0,w,c
 12427   0042B6  0221               	mulwf	(___flmul@b+2)^0,c
 12428   0042B8  CFF3 F036          	movff	prodl,___flmul@temp
 12429   0042BC  CFF4 F037          	movff	prodh,___flmul@temp+1
 12430   0042C0  5036               	movf	___flmul@temp^0,w,c
 12431   0042C2  262D               	addwf	___flmul@grs^0,f,c
 12432   0042C4  0E00               	movlw	0
 12433   0042C6  222E               	addwfc	(___flmul@grs+1)^0,f,c
 12434   0042C8  222F               	addwfc	(___flmul@grs+2)^0,f,c
 12435   0042CA  2230               	addwfc	(___flmul@grs+3)^0,f,c
 12436   0042CC  5037               	movf	(___flmul@temp+1)^0,w,c
 12437   0042CE  2632               	addwf	___flmul@prod^0,f,c
 12438   0042D0  0E00               	movlw	0
 12439   0042D2  2233               	addwfc	(___flmul@prod+1)^0,f,c
 12440   0042D4  2234               	addwfc	(___flmul@prod+2)^0,f,c
 12441   0042D6  2235               	addwfc	(___flmul@prod+3)^0,f,c
 12442   0042D8  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
 12443   0042DC  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
 12444   0042E0  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
 12445   0042E4  6A2D               	clrf	___flmul@grs^0,c
 12446   0042E6  5023               	movf	___flmul@a^0,w,c
 12447   0042E8  0220               	mulwf	(___flmul@b+1)^0,c
 12448   0042EA  CFF3 F036          	movff	prodl,___flmul@temp
 12449   0042EE  CFF4 F037          	movff	prodh,___flmul@temp+1
 12450   0042F2  5036               	movf	___flmul@temp^0,w,c
 12451   0042F4  262D               	addwf	___flmul@grs^0,f,c
 12452   0042F6  5037               	movf	(___flmul@temp+1)^0,w,c
 12453   0042F8  222E               	addwfc	(___flmul@grs+1)^0,f,c
 12454   0042FA  0E00               	movlw	0
 12455   0042FC  222F               	addwfc	(___flmul@grs+2)^0,f,c
 12456   0042FE  0E00               	movlw	0
 12457   004300  2230               	addwfc	(___flmul@grs+3)^0,f,c
 12458   004302  5024               	movf	(___flmul@a+1)^0,w,c
 12459   004304  021F               	mulwf	___flmul@b^0,c
 12460   004306  CFF3 F036          	movff	prodl,___flmul@temp
 12461   00430A  CFF4 F037          	movff	prodh,___flmul@temp+1
 12462   00430E  5036               	movf	___flmul@temp^0,w,c
 12463   004310  262D               	addwf	___flmul@grs^0,f,c
 12464   004312  5037               	movf	(___flmul@temp+1)^0,w,c
 12465   004314  222E               	addwfc	(___flmul@grs+1)^0,f,c
 12466   004316  0E00               	movlw	0
 12467   004318  222F               	addwfc	(___flmul@grs+2)^0,f,c
 12468   00431A  0E00               	movlw	0
 12469   00431C  2230               	addwfc	(___flmul@grs+3)^0,f,c
 12470   00431E  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
 12471   004322  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
 12472   004326  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
 12473   00432A  6A2D               	clrf	___flmul@grs^0,c
 12474   00432C  5023               	movf	___flmul@a^0,w,c
 12475   00432E  021F               	mulwf	___flmul@b^0,c
 12476   004330  CFF3 F036          	movff	prodl,___flmul@temp
 12477   004334  CFF4 F037          	movff	prodh,___flmul@temp+1
 12478   004338  5036               	movf	___flmul@temp^0,w,c
 12479   00433A  262D               	addwf	___flmul@grs^0,f,c
 12480   00433C  5037               	movf	(___flmul@temp+1)^0,w,c
 12481   00433E  222E               	addwfc	(___flmul@grs+1)^0,f,c
 12482   004340  0E00               	movlw	0
 12483   004342  222F               	addwfc	(___flmul@grs+2)^0,f,c
 12484   004344  0E00               	movlw	0
 12485   004346  2230               	addwfc	(___flmul@grs+3)^0,f,c
 12486   004348  5025               	movf	(___flmul@a+2)^0,w,c
 12487   00434A  0220               	mulwf	(___flmul@b+1)^0,c
 12488   00434C  CFF3 F036          	movff	prodl,___flmul@temp
 12489   004350  CFF4 F037          	movff	prodh,___flmul@temp+1
 12490   004354  5036               	movf	___flmul@temp^0,w,c
 12491   004356  2632               	addwf	___flmul@prod^0,f,c
 12492   004358  5037               	movf	(___flmul@temp+1)^0,w,c
 12493   00435A  2233               	addwfc	(___flmul@prod+1)^0,f,c
 12494   00435C  0E00               	movlw	0
 12495   00435E  2234               	addwfc	(___flmul@prod+2)^0,f,c
 12496   004360  0E00               	movlw	0
 12497   004362  2235               	addwfc	(___flmul@prod+3)^0,f,c
 12498   004364  5024               	movf	(___flmul@a+1)^0,w,c
 12499   004366  0221               	mulwf	(___flmul@b+2)^0,c
 12500   004368  CFF3 F036          	movff	prodl,___flmul@temp
 12501   00436C  CFF4 F037          	movff	prodh,___flmul@temp+1
 12502   004370  5036               	movf	___flmul@temp^0,w,c
 12503   004372  2632               	addwf	___flmul@prod^0,f,c
 12504   004374  5037               	movf	(___flmul@temp+1)^0,w,c
 12505   004376  2233               	addwfc	(___flmul@prod+1)^0,f,c
 12506   004378  0E00               	movlw	0
 12507   00437A  2234               	addwfc	(___flmul@prod+2)^0,f,c
 12508   00437C  0E00               	movlw	0
 12509   00437E  2235               	addwfc	(___flmul@prod+3)^0,f,c
 12510   004380  5025               	movf	(___flmul@a+2)^0,w,c
 12511   004382  0221               	mulwf	(___flmul@b+2)^0,c
 12512   004384  CFF3 F036          	movff	prodl,___flmul@temp
 12513   004388  CFF4 F037          	movff	prodh,___flmul@temp+1
 12514   00438C  5036               	movf	___flmul@temp^0,w,c
 12515   00438E  6E27               	movwf	??___flmul^0,c
 12516   004390  5037               	movf	(___flmul@temp+1)^0,w,c
 12517   004392  6E28               	movwf	(??___flmul+1)^0,c
 12518   004394  6A29               	clrf	(??___flmul+2)^0,c
 12519   004396  6A2A               	clrf	(??___flmul+3)^0,c
 12520   004398  C029  F02A         	movff	??___flmul+2,??___flmul+3
 12521   00439C  C028  F029         	movff	??___flmul+1,??___flmul+2
 12522   0043A0  C027  F028         	movff	??___flmul,??___flmul+1
 12523   0043A4  6A27               	clrf	??___flmul^0,c
 12524   0043A6  5027               	movf	??___flmul^0,w,c
 12525   0043A8  2632               	addwf	___flmul@prod^0,f,c
 12526   0043AA  5028               	movf	(??___flmul+1)^0,w,c
 12527   0043AC  2233               	addwfc	(___flmul@prod+1)^0,f,c
 12528   0043AE  5029               	movf	(??___flmul+2)^0,w,c
 12529   0043B0  2234               	addwfc	(___flmul@prod+2)^0,f,c
 12530   0043B2  502A               	movf	(??___flmul+3)^0,w,c
 12531   0043B4  2235               	addwfc	(___flmul@prod+3)^0,f,c
 12532   0043B6  C02D  F027         	movff	___flmul@grs,??___flmul
 12533   0043BA  C02E  F028         	movff	___flmul@grs+1,??___flmul+1
 12534   0043BE  C02F  F029         	movff	___flmul@grs+2,??___flmul+2
 12535   0043C2  C030  F02A         	movff	___flmul@grs+3,??___flmul+3
 12536   0043C6  0E19               	movlw	25
 12537   0043C8  EFEB  F021         	goto	u7220
 12538   0043CC                     u7225:
 12539   0043CC  90D8               	bcf	status,0,c
 12540   0043CE  322A               	rrcf	(??___flmul+3)^0,f,c
 12541   0043D0  3229               	rrcf	(??___flmul+2)^0,f,c
 12542   0043D2  3228               	rrcf	(??___flmul+1)^0,f,c
 12543   0043D4  3227               	rrcf	??___flmul^0,f,c
 12544   0043D6                     u7220:
 12545   0043D6  2EE8               	decfsz	wreg,f,c
 12546   0043D8  EFE6  F021         	goto	u7225
 12547   0043DC  5027               	movf	??___flmul^0,w,c
 12548   0043DE  2632               	addwf	___flmul@prod^0,f,c
 12549   0043E0  5028               	movf	(??___flmul+1)^0,w,c
 12550   0043E2  2233               	addwfc	(___flmul@prod+1)^0,f,c
 12551   0043E4  5029               	movf	(??___flmul+2)^0,w,c
 12552   0043E6  2234               	addwfc	(___flmul@prod+2)^0,f,c
 12553   0043E8  502A               	movf	(??___flmul+3)^0,w,c
 12554   0043EA  2235               	addwfc	(___flmul@prod+3)^0,f,c
 12555   0043EC  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
 12556   0043F0  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
 12557   0043F4  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
 12558   0043F8  6A2D               	clrf	___flmul@grs^0,c
 12559   0043FA  502C               	movf	___flmul@aexp^0,w,c
 12560   0043FC  C031  F027         	movff	___flmul@bexp,??___flmul
 12561   004400  6A28               	clrf	(??___flmul+1)^0,c
 12562   004402  2627               	addwf	??___flmul^0,f,c
 12563   004404  0E00               	movlw	0
 12564   004406  2228               	addwfc	(??___flmul+1)^0,f,c
 12565   004408  0E82               	movlw	130
 12566   00440A  2427               	addwf	??___flmul^0,w,c
 12567   00440C  6E36               	movwf	___flmul@temp^0,c
 12568   00440E  0EFF               	movlw	255
 12569   004410  2028               	addwfc	(??___flmul+1)^0,w,c
 12570   004412  6E37               	movwf	(___flmul@temp+1)^0,c
 12571   004414  EF21  F022         	goto	l5828
 12572   004418                     l5822:
 12573   004418  90D8               	bcf	status,0,c
 12574   00441A  3632               	rlcf	___flmul@prod^0,f,c
 12575   00441C  3633               	rlcf	(___flmul@prod+1)^0,f,c
 12576   00441E  3634               	rlcf	(___flmul@prod+2)^0,f,c
 12577   004420  3635               	rlcf	(___flmul@prod+3)^0,f,c
 12578   004422  AE30               	btfss	(___flmul@grs+3)^0,7,c
 12579   004424  EF16  F022         	goto	u7231
 12580   004428  EF18  F022         	goto	u7230
 12581   00442C                     u7231:
 12582   00442C  EF19  F022         	goto	l805
 12583   004430                     u7230:
 12584   004430  8032               	bsf	___flmul@prod^0,0,c
 12585   004432                     l805:
 12586   004432  90D8               	bcf	status,0,c
 12587   004434  362D               	rlcf	___flmul@grs^0,f,c
 12588   004436  362E               	rlcf	(___flmul@grs+1)^0,f,c
 12589   004438  362F               	rlcf	(___flmul@grs+2)^0,f,c
 12590   00443A  3630               	rlcf	(___flmul@grs+3)^0,f,c
 12591   00443C  0636               	decf	___flmul@temp^0,f,c
 12592   00443E  A0D8               	btfss	status,0,c
 12593   004440  0637               	decf	(___flmul@temp+1)^0,f,c
 12594   004442                     l5828:
 12595   004442  AE34               	btfss	(___flmul@prod+2)^0,7,c
 12596   004444  EF26  F022         	goto	u7241
 12597   004448  EF28  F022         	goto	u7240
 12598   00444C                     u7241:
 12599   00444C  EF0C  F022         	goto	l5822
 12600   004450                     u7240:
 12601   004450  6A2C               	clrf	___flmul@aexp^0,c
 12602   004452  AE30               	btfss	(___flmul@grs+3)^0,7,c
 12603   004454  EF2E  F022         	goto	u7251
 12604   004458  EF30  F022         	goto	u7250
 12605   00445C                     u7251:
 12606   00445C  EF54  F022         	goto	l807
 12607   004460                     u7250:
 12608   004460  0EFF               	movlw	255
 12609   004462  142D               	andwf	___flmul@grs^0,w,c
 12610   004464  6E27               	movwf	??___flmul^0,c
 12611   004466  0EFF               	movlw	255
 12612   004468  142E               	andwf	(___flmul@grs+1)^0,w,c
 12613   00446A  6E28               	movwf	(??___flmul+1)^0,c
 12614   00446C  0EFF               	movlw	255
 12615   00446E  142F               	andwf	(___flmul@grs+2)^0,w,c
 12616   004470  6E29               	movwf	(??___flmul+2)^0,c
 12617   004472  0E7F               	movlw	127
 12618   004474  1430               	andwf	(___flmul@grs+3)^0,w,c
 12619   004476  6E2A               	movwf	(??___flmul+3)^0,c
 12620   004478  5027               	movf	??___flmul^0,w,c
 12621   00447A  1028               	iorwf	(??___flmul+1)^0,w,c
 12622   00447C  1029               	iorwf	(??___flmul+2)^0,w,c
 12623   00447E  102A               	iorwf	(??___flmul+3)^0,w,c
 12624   004480  B4D8               	btfsc	status,2,c
 12625   004482  EF45  F022         	goto	u7261
 12626   004486  EF47  F022         	goto	u7260
 12627   00448A                     u7261:
 12628   00448A  EF4B  F022         	goto	l808
 12629   00448E                     u7260:
 12630   00448E                     l5832:
 12631   00448E  0E01               	movlw	1
 12632   004490  6E2C               	movwf	___flmul@aexp^0,c
 12633   004492  EF54  F022         	goto	l807
 12634   004496                     l808:
 12635   004496  A032               	btfss	___flmul@prod^0,0,c
 12636   004498  EF50  F022         	goto	u7271
 12637   00449C  EF52  F022         	goto	u7270
 12638   0044A0                     u7271:
 12639   0044A0  EF54  F022         	goto	l807
 12640   0044A4                     u7270:
 12641   0044A4  EF47  F022         	goto	l5832
 12642   0044A8                     l807:
 12643   0044A8  502C               	movf	___flmul@aexp^0,w,c
 12644   0044AA  B4D8               	btfsc	status,2,c
 12645   0044AC  EF5A  F022         	goto	u7281
 12646   0044B0  EF5C  F022         	goto	u7280
 12647   0044B4                     u7281:
 12648   0044B4  EF80  F022         	goto	l5844
 12649   0044B8                     u7280:
 12650   0044B8  0E01               	movlw	1
 12651   0044BA  2632               	addwf	___flmul@prod^0,f,c
 12652   0044BC  0E00               	movlw	0
 12653   0044BE  2233               	addwfc	(___flmul@prod+1)^0,f,c
 12654   0044C0  2234               	addwfc	(___flmul@prod+2)^0,f,c
 12655   0044C2  2235               	addwfc	(___flmul@prod+3)^0,f,c
 12656   0044C4  A035               	btfss	(___flmul@prod+3)^0,0,c
 12657   0044C6  EF67  F022         	goto	u7291
 12658   0044CA  EF69  F022         	goto	u7290
 12659   0044CE                     u7291:
 12660   0044CE  EF80  F022         	goto	l5844
 12661   0044D2                     u7290:
 12662   0044D2  C032  F027         	movff	___flmul@prod,??___flmul
 12663   0044D6  C033  F028         	movff	___flmul@prod+1,??___flmul+1
 12664   0044DA  C034  F029         	movff	___flmul@prod+2,??___flmul+2
 12665   0044DE  C035  F02A         	movff	___flmul@prod+3,??___flmul+3
 12666   0044E2  342A               	rlcf	(??___flmul+3)^0,w,c
 12667   0044E4  322A               	rrcf	(??___flmul+3)^0,f,c
 12668   0044E6  3229               	rrcf	(??___flmul+2)^0,f,c
 12669   0044E8  3228               	rrcf	(??___flmul+1)^0,f,c
 12670   0044EA  3227               	rrcf	??___flmul^0,f,c
 12671   0044EC  C027  F032         	movff	??___flmul,___flmul@prod
 12672   0044F0  C028  F033         	movff	??___flmul+1,___flmul@prod+1
 12673   0044F4  C029  F034         	movff	??___flmul+2,___flmul@prod+2
 12674   0044F8  C02A  F035         	movff	??___flmul+3,___flmul@prod+3
 12675   0044FC  4A36               	infsnz	___flmul@temp^0,f,c
 12676   0044FE  2A37               	incf	(___flmul@temp+1)^0,f,c
 12677   004500                     l5844:
 12678   004500  BE37               	btfsc	(___flmul@temp+1)^0,7,c
 12679   004502  EF8B  F022         	goto	u7301
 12680   004506  5037               	movf	(___flmul@temp+1)^0,w,c
 12681   004508  E108               	bnz	u7300
 12682   00450A  2836               	incf	___flmul@temp^0,w,c
 12683   00450C  A0D8               	btfss	status,0,c
 12684   00450E  EF8B  F022         	goto	u7301
 12685   004512  EF8D  F022         	goto	u7300
 12686   004516                     u7301:
 12687   004516  EF97  F022         	goto	l5848
 12688   00451A                     u7300:
 12689   00451A  0E00               	movlw	0
 12690   00451C  6E32               	movwf	___flmul@prod^0,c
 12691   00451E  0E00               	movlw	0
 12692   004520  6E33               	movwf	(___flmul@prod+1)^0,c
 12693   004522  0E80               	movlw	128
 12694   004524  6E34               	movwf	(___flmul@prod+2)^0,c
 12695   004526  0E7F               	movlw	127
 12696   004528  6E35               	movwf	(___flmul@prod+3)^0,c
 12697   00452A  EFC4  F022         	goto	l5862
 12698   00452E                     l5848:
 12699   00452E  BE37               	btfsc	(___flmul@temp+1)^0,7,c
 12700   004530  EFA4  F022         	goto	u7310
 12701   004534  5037               	movf	(___flmul@temp+1)^0,w,c
 12702   004536  E106               	bnz	u7311
 12703   004538  0436               	decf	___flmul@temp^0,w,c
 12704   00453A  B0D8               	btfsc	status,0,c
 12705   00453C  EFA2  F022         	goto	u7311
 12706   004540  EFA4  F022         	goto	u7310
 12707   004544                     u7311:
 12708   004544  EFAF  F022         	goto	l815
 12709   004548                     u7310:
 12710   004548  0E00               	movlw	0
 12711   00454A  6E32               	movwf	___flmul@prod^0,c
 12712   00454C  0E00               	movlw	0
 12713   00454E  6E33               	movwf	(___flmul@prod+1)^0,c
 12714   004550  0E00               	movlw	0
 12715   004552  6E34               	movwf	(___flmul@prod+2)^0,c
 12716   004554  0E00               	movlw	0
 12717   004556  6E35               	movwf	(___flmul@prod+3)^0,c
 12718   004558  6A2B               	clrf	___flmul@sign^0,c
 12719   00455A  EFC4  F022         	goto	l5862
 12720   00455E                     l815:
 12721   00455E  C036  F031         	movff	___flmul@temp,___flmul@bexp
 12722   004562  0EFF               	movlw	255
 12723   004564  1632               	andwf	___flmul@prod^0,f,c
 12724   004566  0EFF               	movlw	255
 12725   004568  1633               	andwf	(___flmul@prod+1)^0,f,c
 12726   00456A  0E7F               	movlw	127
 12727   00456C  1634               	andwf	(___flmul@prod+2)^0,f,c
 12728   00456E  0E00               	movlw	0
 12729   004570  1635               	andwf	(___flmul@prod+3)^0,f,c
 12730   004572  A031               	btfss	___flmul@bexp^0,0,c
 12731   004574  EFBE  F022         	goto	u7321
 12732   004578  EFC0  F022         	goto	u7320
 12733   00457C                     u7321:
 12734   00457C  EFC1  F022         	goto	l5860
 12735   004580                     u7320:
 12736   004580  8E34               	bsf	(___flmul@prod+2)^0,7,c
 12737   004582                     l5860:
 12738   004582  90D8               	bcf	status,0,c
 12739   004584  3031               	rrcf	___flmul@bexp^0,w,c
 12740   004586  6E35               	movwf	(___flmul@prod+3)^0,c
 12741   004588                     l5862:
 12742   004588  502B               	movf	___flmul@sign^0,w,c
 12743   00458A  1235               	iorwf	(___flmul@prod+3)^0,f,c
 12744   00458C  C032  F01F         	movff	___flmul@prod,?___flmul
 12745   004590  C033  F020         	movff	___flmul@prod+1,?___flmul+1
 12746   004594  C034  F021         	movff	___flmul@prod+2,?___flmul+2
 12747   004598  C035  F022         	movff	___flmul@prod+3,?___flmul+3
 12748   00459C                     l802:
 12749   00459C  0012               	return		;funcret
 12750   00459E                     __end_of___flmul:
 12751                           	callstack 0
 12752                           
 12753 ;; *************** function ___flge *****************
 12754 ;; Defined at:
 12755 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 12756 ;; Parameters:    Size  Location     Type
 12757 ;;  ff1             4   63[COMRAM] unsigned char 
 12758 ;;  ff2             4   67[COMRAM] unsigned char 
 12759 ;; Auto vars:     Size  Location     Type
 12760 ;;		None
 12761 ;; Return value:  Size  Location     Type
 12762 ;;		None               void
 12763 ;; Registers used:
 12764 ;;		wreg, status,2, status,0
 12765 ;; Tracked objects:
 12766 ;;		On entry : 0/0
 12767 ;;		On exit  : 0/0
 12768 ;;		Unchanged: 0/0
 12769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12770 ;;      Params:         8       0       0       0       0       0       0       0       0
 12771 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12772 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12773 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12774 ;;Total ram usage:       12 bytes
 12775 ;; Hardware stack levels used: 1
 12776 ;; This function calls:
 12777 ;;		Nothing
 12778 ;; This function is called by:
 12779 ;;		_Read_Flame_Sensor
 12780 ;;		_Read_MQ2_Sensor
 12781 ;;		_main
 12782 ;;		_efgtoa
 12783 ;;		_powf
 12784 ;; This function uses a non-reentrant model
 12785 ;;
 12786                           
 12787                           	psect	text28
 12788   0025F6                     __ptext28:
 12789                           	callstack 0
 12790   0025F6                     ___flge:
 12791                           	callstack 30
 12792   0025F6  0E00               	movlw	0
 12793   0025F8  1440               	andwf	___flge@ff1^0,w,c
 12794   0025FA  6E48               	movwf	??___flge^0,c
 12795   0025FC  0E00               	movlw	0
 12796   0025FE  1441               	andwf	(___flge@ff1+1)^0,w,c
 12797   002600  6E49               	movwf	(??___flge+1)^0,c
 12798   002602  0E80               	movlw	128
 12799   002604  1442               	andwf	(___flge@ff1+2)^0,w,c
 12800   002606  6E4A               	movwf	(??___flge+2)^0,c
 12801   002608  0E7F               	movlw	127
 12802   00260A  1443               	andwf	(___flge@ff1+3)^0,w,c
 12803   00260C  6E4B               	movwf	(??___flge+3)^0,c
 12804   00260E  5048               	movf	??___flge^0,w,c
 12805   002610  1049               	iorwf	(??___flge+1)^0,w,c
 12806   002612  104A               	iorwf	(??___flge+2)^0,w,c
 12807   002614  104B               	iorwf	(??___flge+3)^0,w,c
 12808   002616  A4D8               	btfss	status,2,c
 12809   002618  EF10  F013         	goto	u7481
 12810   00261C  EF12  F013         	goto	u7480
 12811   002620                     u7481:
 12812   002620  EF1A  F013         	goto	l5974
 12813   002624                     u7480:
 12814   002624  0E00               	movlw	0
 12815   002626  6E40               	movwf	___flge@ff1^0,c
 12816   002628  0E00               	movlw	0
 12817   00262A  6E41               	movwf	(___flge@ff1+1)^0,c
 12818   00262C  0E00               	movlw	0
 12819   00262E  6E42               	movwf	(___flge@ff1+2)^0,c
 12820   002630  0E00               	movlw	0
 12821   002632  6E43               	movwf	(___flge@ff1+3)^0,c
 12822   002634                     l5974:
 12823   002634  0E00               	movlw	0
 12824   002636  1444               	andwf	___flge@ff2^0,w,c
 12825   002638  6E48               	movwf	??___flge^0,c
 12826   00263A  0E00               	movlw	0
 12827   00263C  1445               	andwf	(___flge@ff2+1)^0,w,c
 12828   00263E  6E49               	movwf	(??___flge+1)^0,c
 12829   002640  0E80               	movlw	128
 12830   002642  1446               	andwf	(___flge@ff2+2)^0,w,c
 12831   002644  6E4A               	movwf	(??___flge+2)^0,c
 12832   002646  0E7F               	movlw	127
 12833   002648  1447               	andwf	(___flge@ff2+3)^0,w,c
 12834   00264A  6E4B               	movwf	(??___flge+3)^0,c
 12835   00264C  5048               	movf	??___flge^0,w,c
 12836   00264E  1049               	iorwf	(??___flge+1)^0,w,c
 12837   002650  104A               	iorwf	(??___flge+2)^0,w,c
 12838   002652  104B               	iorwf	(??___flge+3)^0,w,c
 12839   002654  A4D8               	btfss	status,2,c
 12840   002656  EF2F  F013         	goto	u7491
 12841   00265A  EF31  F013         	goto	u7490
 12842   00265E                     u7491:
 12843   00265E  EF39  F013         	goto	l5978
 12844   002662                     u7490:
 12845   002662  0E00               	movlw	0
 12846   002664  6E44               	movwf	___flge@ff2^0,c
 12847   002666  0E00               	movlw	0
 12848   002668  6E45               	movwf	(___flge@ff2+1)^0,c
 12849   00266A  0E00               	movlw	0
 12850   00266C  6E46               	movwf	(___flge@ff2+2)^0,c
 12851   00266E  0E00               	movlw	0
 12852   002670  6E47               	movwf	(___flge@ff2+3)^0,c
 12853   002672                     l5978:
 12854   002672  AE43               	btfss	(___flge@ff1+3)^0,7,c
 12855   002674  EF3E  F013         	goto	u7501
 12856   002678  EF40  F013         	goto	u7500
 12857   00267C                     u7501:
 12858   00267C  EF49  F013         	goto	l5982
 12859   002680                     u7500:
 12860   002680  6C40               	negf	___flge@ff1^0,c
 12861   002682  1E41               	comf	(___flge@ff1+1)^0,f,c
 12862   002684  B0D8               	btfsc	status,0,c
 12863   002686  2A41               	incf	(___flge@ff1+1)^0,f,c
 12864   002688  1E42               	comf	(___flge@ff1+2)^0,f,c
 12865   00268A  B0D8               	btfsc	status,0,c
 12866   00268C  2A42               	incf	(___flge@ff1+2)^0,f,c
 12867   00268E  0E80               	movlw	128
 12868   002690  5643               	subfwb	(___flge@ff1+3)^0,f,c
 12869   002692                     l5982:
 12870   002692  AE47               	btfss	(___flge@ff2+3)^0,7,c
 12871   002694  EF4E  F013         	goto	u7511
 12872   002698  EF50  F013         	goto	u7510
 12873   00269C                     u7511:
 12874   00269C  EF59  F013         	goto	l449
 12875   0026A0                     u7510:
 12876   0026A0  6C44               	negf	___flge@ff2^0,c
 12877   0026A2  1E45               	comf	(___flge@ff2+1)^0,f,c
 12878   0026A4  B0D8               	btfsc	status,0,c
 12879   0026A6  2A45               	incf	(___flge@ff2+1)^0,f,c
 12880   0026A8  1E46               	comf	(___flge@ff2+2)^0,f,c
 12881   0026AA  B0D8               	btfsc	status,0,c
 12882   0026AC  2A46               	incf	(___flge@ff2+2)^0,f,c
 12883   0026AE  0E80               	movlw	128
 12884   0026B0  5647               	subfwb	(___flge@ff2+3)^0,f,c
 12885   0026B2                     l449:
 12886   0026B2  0E00               	movlw	0
 12887   0026B4  1A40               	xorwf	___flge@ff1^0,f,c
 12888   0026B6  0E00               	movlw	0
 12889   0026B8  1A41               	xorwf	(___flge@ff1+1)^0,f,c
 12890   0026BA  0E00               	movlw	0
 12891   0026BC  1A42               	xorwf	(___flge@ff1+2)^0,f,c
 12892   0026BE  0E80               	movlw	128
 12893   0026C0  1A43               	xorwf	(___flge@ff1+3)^0,f,c
 12894   0026C2  0E00               	movlw	0
 12895   0026C4  1A44               	xorwf	___flge@ff2^0,f,c
 12896   0026C6  0E00               	movlw	0
 12897   0026C8  1A45               	xorwf	(___flge@ff2+1)^0,f,c
 12898   0026CA  0E00               	movlw	0
 12899   0026CC  1A46               	xorwf	(___flge@ff2+2)^0,f,c
 12900   0026CE  0E80               	movlw	128
 12901   0026D0  1A47               	xorwf	(___flge@ff2+3)^0,f,c
 12902   0026D2  5044               	movf	___flge@ff2^0,w,c
 12903   0026D4  5C40               	subwf	___flge@ff1^0,w,c
 12904   0026D6  5045               	movf	(___flge@ff2+1)^0,w,c
 12905   0026D8  5841               	subwfb	(___flge@ff1+1)^0,w,c
 12906   0026DA  5046               	movf	(___flge@ff2+2)^0,w,c
 12907   0026DC  5842               	subwfb	(___flge@ff1+2)^0,w,c
 12908   0026DE  5047               	movf	(___flge@ff2+3)^0,w,c
 12909   0026E0  5843               	subwfb	(___flge@ff1+3)^0,w,c
 12910   0026E2  B0D8               	btfsc	status,0,c
 12911   0026E4  EF76  F013         	goto	u7521
 12912   0026E8  EF78  F013         	goto	u7520
 12913   0026EC                     u7521:
 12914   0026EC  EF7B  F013         	goto	l5988
 12915   0026F0                     u7520:
 12916   0026F0  90D8               	bcf	status,0,c
 12917   0026F2  EF7C  F013         	goto	l454
 12918   0026F6                     l5988:
 12919   0026F6  80D8               	bsf	status,0,c
 12920   0026F8                     l454:
 12921   0026F8  0012               	return		;funcret
 12922   0026FA                     __end_of___flge:
 12923                           	callstack 0
 12924                           
 12925 ;; *************** function ___fleq *****************
 12926 ;; Defined at:
 12927 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 12928 ;; Parameters:    Size  Location     Type
 12929 ;;  ff1             4    0[COMRAM] unsigned char 
 12930 ;;  ff2             4    4[COMRAM] unsigned char 
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;		None
 12933 ;; Return value:  Size  Location     Type
 12934 ;;		None               void
 12935 ;; Registers used:
 12936 ;;		wreg, status,2, status,0
 12937 ;; Tracked objects:
 12938 ;;		On entry : 0/0
 12939 ;;		On exit  : 0/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12942 ;;      Params:         8       0       0       0       0       0       0       0       0
 12943 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12944 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12945 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12946 ;;Total ram usage:       12 bytes
 12947 ;; Hardware stack levels used: 1
 12948 ;; This function calls:
 12949 ;;		Nothing
 12950 ;; This function is called by:
 12951 ;;		_efgtoa
 12952 ;; This function uses a non-reentrant model
 12953 ;;
 12954                           
 12955                           	psect	text29
 12956   002018                     __ptext29:
 12957                           	callstack 0
 12958   002018                     ___fleq:
 12959                           	callstack 25
 12960   002018  0E00               	movlw	0
 12961   00201A  1401               	andwf	___fleq@ff1^0,w,c
 12962   00201C  6E09               	movwf	??___fleq^0,c
 12963   00201E  0E00               	movlw	0
 12964   002020  1402               	andwf	(___fleq@ff1+1)^0,w,c
 12965   002022  6E0A               	movwf	(??___fleq+1)^0,c
 12966   002024  0E80               	movlw	128
 12967   002026  1403               	andwf	(___fleq@ff1+2)^0,w,c
 12968   002028  6E0B               	movwf	(??___fleq+2)^0,c
 12969   00202A  0E7F               	movlw	127
 12970   00202C  1404               	andwf	(___fleq@ff1+3)^0,w,c
 12971   00202E  6E0C               	movwf	(??___fleq+3)^0,c
 12972   002030  5009               	movf	??___fleq^0,w,c
 12973   002032  100A               	iorwf	(??___fleq+1)^0,w,c
 12974   002034  100B               	iorwf	(??___fleq+2)^0,w,c
 12975   002036  100C               	iorwf	(??___fleq+3)^0,w,c
 12976   002038  A4D8               	btfss	status,2,c
 12977   00203A  EF21  F010         	goto	u7451
 12978   00203E  EF23  F010         	goto	u7450
 12979   002042                     u7451:
 12980   002042  EF2B  F010         	goto	l5958
 12981   002046                     u7450:
 12982   002046  0E00               	movlw	0
 12983   002048  6E01               	movwf	___fleq@ff1^0,c
 12984   00204A  0E00               	movlw	0
 12985   00204C  6E02               	movwf	(___fleq@ff1+1)^0,c
 12986   00204E  0E00               	movlw	0
 12987   002050  6E03               	movwf	(___fleq@ff1+2)^0,c
 12988   002052  0E00               	movlw	0
 12989   002054  6E04               	movwf	(___fleq@ff1+3)^0,c
 12990   002056                     l5958:
 12991   002056  0E00               	movlw	0
 12992   002058  1405               	andwf	___fleq@ff2^0,w,c
 12993   00205A  6E09               	movwf	??___fleq^0,c
 12994   00205C  0E00               	movlw	0
 12995   00205E  1406               	andwf	(___fleq@ff2+1)^0,w,c
 12996   002060  6E0A               	movwf	(??___fleq+1)^0,c
 12997   002062  0E80               	movlw	128
 12998   002064  1407               	andwf	(___fleq@ff2+2)^0,w,c
 12999   002066  6E0B               	movwf	(??___fleq+2)^0,c
 13000   002068  0E7F               	movlw	127
 13001   00206A  1408               	andwf	(___fleq@ff2+3)^0,w,c
 13002   00206C  6E0C               	movwf	(??___fleq+3)^0,c
 13003   00206E  5009               	movf	??___fleq^0,w,c
 13004   002070  100A               	iorwf	(??___fleq+1)^0,w,c
 13005   002072  100B               	iorwf	(??___fleq+2)^0,w,c
 13006   002074  100C               	iorwf	(??___fleq+3)^0,w,c
 13007   002076  A4D8               	btfss	status,2,c
 13008   002078  EF40  F010         	goto	u7461
 13009   00207C  EF42  F010         	goto	u7460
 13010   002080                     u7461:
 13011   002080  EF4A  F010         	goto	l5962
 13012   002084                     u7460:
 13013   002084  0E00               	movlw	0
 13014   002086  6E05               	movwf	___fleq@ff2^0,c
 13015   002088  0E00               	movlw	0
 13016   00208A  6E06               	movwf	(___fleq@ff2+1)^0,c
 13017   00208C  0E00               	movlw	0
 13018   00208E  6E07               	movwf	(___fleq@ff2+2)^0,c
 13019   002090  0E00               	movlw	0
 13020   002092  6E08               	movwf	(___fleq@ff2+3)^0,c
 13021   002094                     l5962:
 13022   002094  5005               	movf	___fleq@ff2^0,w,c
 13023   002096  1801               	xorwf	___fleq@ff1^0,w,c
 13024   002098  E10F               	bnz	u7470
 13025   00209A  5006               	movf	(___fleq@ff2+1)^0,w,c
 13026   00209C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 13027   00209E  E10C               	bnz	u7470
 13028   0020A0  5007               	movf	(___fleq@ff2+2)^0,w,c
 13029   0020A2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 13030   0020A4  E109               	bnz	u7470
 13031   0020A6  5008               	movf	(___fleq@ff2+3)^0,w,c
 13032   0020A8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 13033   0020AA  B4D8               	btfsc	status,2,c
 13034   0020AC  EF5A  F010         	goto	u7471
 13035   0020B0  EF5C  F010         	goto	u7470
 13036   0020B4                     u7471:
 13037   0020B4  EF5F  F010         	goto	l5966
 13038   0020B8                     u7470:
 13039   0020B8  90D8               	bcf	status,0,c
 13040   0020BA  EF60  F010         	goto	l443
 13041   0020BE                     l5966:
 13042   0020BE  80D8               	bsf	status,0,c
 13043   0020C0                     l443:
 13044   0020C0  0012               	return		;funcret
 13045   0020C2                     __end_of___fleq:
 13046                           	callstack 0
 13047                           
 13048 ;; *************** function ___fldiv *****************
 13049 ;; Defined at:
 13050 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 13051 ;; Parameters:    Size  Location     Type
 13052 ;;  b               4   63[COMRAM] unsigned char 
 13053 ;;  a               4   67[COMRAM] unsigned char 
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;  grs             4   82[COMRAM] unsigned long 
 13056 ;;  rem             4   75[COMRAM] unsigned long 
 13057 ;;  new_exp         2   80[COMRAM] short 
 13058 ;;  aexp            1   87[COMRAM] unsigned char 
 13059 ;;  bexp            1   86[COMRAM] unsigned char 
 13060 ;;  sign            1   79[COMRAM] unsigned char 
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  4   63[COMRAM] unsigned char 
 13063 ;; Registers used:
 13064 ;;		wreg, status,2, status,0
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 0/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13070 ;;      Params:         8       0       0       0       0       0       0       0       0
 13071 ;;      Locals:        13       0       0       0       0       0       0       0       0
 13072 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13073 ;;      Totals:        25       0       0       0       0       0       0       0       0
 13074 ;;Total ram usage:       25 bytes
 13075 ;; Hardware stack levels used: 1
 13076 ;; This function calls:
 13077 ;;		Nothing
 13078 ;; This function is called by:
 13079 ;;		_Calibrate_Flame_Sensor
 13080 ;;		_Calibrate_MQ2
 13081 ;;		_Read_LM35
 13082 ;;		_Read_Flame_Sensor
 13083 ;;		_Read_MQ2_Sensor
 13084 ;;		_efgtoa
 13085 ;;		_powf
 13086 ;; This function uses a non-reentrant model
 13087 ;;
 13088                           
 13089                           	psect	text30
 13090   003A0A                     __ptext30:
 13091                           	callstack 0
 13092   003A0A                     ___fldiv:
 13093                           	callstack 25
 13094   003A0A  5043               	movf	(___fldiv@b+3)^0,w,c
 13095   003A0C  0B80               	andlw	128
 13096   003A0E  6E50               	movwf	___fldiv@sign^0,c
 13097   003A10  5043               	movf	(___fldiv@b+3)^0,w,c
 13098   003A12  2443               	addwf	(___fldiv@b+3)^0,w,c
 13099   003A14  6E57               	movwf	___fldiv@bexp^0,c
 13100   003A16  AE42               	btfss	(___fldiv@b+2)^0,7,c
 13101   003A18  EF10  F01D         	goto	u6911
 13102   003A1C  EF12  F01D         	goto	u6910
 13103   003A20                     u6911:
 13104   003A20  EF13  F01D         	goto	l5610
 13105   003A24                     u6910:
 13106   003A24  8057               	bsf	___fldiv@bexp^0,0,c
 13107   003A26                     l5610:
 13108   003A26  5057               	movf	___fldiv@bexp^0,w,c
 13109   003A28  B4D8               	btfsc	status,2,c
 13110   003A2A  EF19  F01D         	goto	u6921
 13111   003A2E  EF1B  F01D         	goto	u6920
 13112   003A32                     u6921:
 13113   003A32  EF2F  F01D         	goto	l5620
 13114   003A36                     u6920:
 13115   003A36  2857               	incf	___fldiv@bexp^0,w,c
 13116   003A38  A4D8               	btfss	status,2,c
 13117   003A3A  EF21  F01D         	goto	u6931
 13118   003A3E  EF23  F01D         	goto	u6930
 13119   003A42                     u6931:
 13120   003A42  EF2B  F01D         	goto	l5616
 13121   003A46                     u6930:
 13122   003A46  0E00               	movlw	0
 13123   003A48  6E40               	movwf	___fldiv@b^0,c
 13124   003A4A  0E00               	movlw	0
 13125   003A4C  6E41               	movwf	(___fldiv@b+1)^0,c
 13126   003A4E  0E00               	movlw	0
 13127   003A50  6E42               	movwf	(___fldiv@b+2)^0,c
 13128   003A52  0E00               	movlw	0
 13129   003A54  6E43               	movwf	(___fldiv@b+3)^0,c
 13130   003A56                     l5616:
 13131   003A56  8E42               	bsf	(___fldiv@b+2)^0,7,c
 13132   003A58  6A43               	clrf	(___fldiv@b+3)^0,c
 13133   003A5A  EF37  F01D         	goto	l5622
 13134   003A5E                     l5620:
 13135   003A5E  0E00               	movlw	0
 13136   003A60  6E40               	movwf	___fldiv@b^0,c
 13137   003A62  0E00               	movlw	0
 13138   003A64  6E41               	movwf	(___fldiv@b+1)^0,c
 13139   003A66  0E00               	movlw	0
 13140   003A68  6E42               	movwf	(___fldiv@b+2)^0,c
 13141   003A6A  0E00               	movlw	0
 13142   003A6C  6E43               	movwf	(___fldiv@b+3)^0,c
 13143   003A6E                     l5622:
 13144   003A6E  5047               	movf	(___fldiv@a+3)^0,w,c
 13145   003A70  0B80               	andlw	128
 13146   003A72  1A50               	xorwf	___fldiv@sign^0,f,c
 13147   003A74  5047               	movf	(___fldiv@a+3)^0,w,c
 13148   003A76  2447               	addwf	(___fldiv@a+3)^0,w,c
 13149   003A78  6E58               	movwf	___fldiv@aexp^0,c
 13150   003A7A  AE46               	btfss	(___fldiv@a+2)^0,7,c
 13151   003A7C  EF42  F01D         	goto	u6941
 13152   003A80  EF44  F01D         	goto	u6940
 13153   003A84                     u6941:
 13154   003A84  EF45  F01D         	goto	l5630
 13155   003A88                     u6940:
 13156   003A88  8058               	bsf	___fldiv@aexp^0,0,c
 13157   003A8A                     l5630:
 13158   003A8A  5058               	movf	___fldiv@aexp^0,w,c
 13159   003A8C  B4D8               	btfsc	status,2,c
 13160   003A8E  EF4B  F01D         	goto	u6951
 13161   003A92  EF4D  F01D         	goto	u6950
 13162   003A96                     u6951:
 13163   003A96  EF61  F01D         	goto	l5640
 13164   003A9A                     u6950:
 13165   003A9A  2858               	incf	___fldiv@aexp^0,w,c
 13166   003A9C  A4D8               	btfss	status,2,c
 13167   003A9E  EF53  F01D         	goto	u6961
 13168   003AA2  EF55  F01D         	goto	u6960
 13169   003AA6                     u6961:
 13170   003AA6  EF5D  F01D         	goto	l5636
 13171   003AAA                     u6960:
 13172   003AAA  0E00               	movlw	0
 13173   003AAC  6E44               	movwf	___fldiv@a^0,c
 13174   003AAE  0E00               	movlw	0
 13175   003AB0  6E45               	movwf	(___fldiv@a+1)^0,c
 13176   003AB2  0E00               	movlw	0
 13177   003AB4  6E46               	movwf	(___fldiv@a+2)^0,c
 13178   003AB6  0E00               	movlw	0
 13179   003AB8  6E47               	movwf	(___fldiv@a+3)^0,c
 13180   003ABA                     l5636:
 13181   003ABA  8E46               	bsf	(___fldiv@a+2)^0,7,c
 13182   003ABC  6A47               	clrf	(___fldiv@a+3)^0,c
 13183   003ABE  EF69  F01D         	goto	l5642
 13184   003AC2                     l5640:
 13185   003AC2  0E00               	movlw	0
 13186   003AC4  6E44               	movwf	___fldiv@a^0,c
 13187   003AC6  0E00               	movlw	0
 13188   003AC8  6E45               	movwf	(___fldiv@a+1)^0,c
 13189   003ACA  0E00               	movlw	0
 13190   003ACC  6E46               	movwf	(___fldiv@a+2)^0,c
 13191   003ACE  0E00               	movlw	0
 13192   003AD0  6E47               	movwf	(___fldiv@a+3)^0,c
 13193   003AD2                     l5642:
 13194   003AD2  5044               	movf	___fldiv@a^0,w,c
 13195   003AD4  1045               	iorwf	(___fldiv@a+1)^0,w,c
 13196   003AD6  1046               	iorwf	(___fldiv@a+2)^0,w,c
 13197   003AD8  1047               	iorwf	(___fldiv@a+3)^0,w,c
 13198   003ADA  A4D8               	btfss	status,2,c
 13199   003ADC  EF72  F01D         	goto	u6971
 13200   003AE0  EF74  F01D         	goto	u6970
 13201   003AE4                     u6971:
 13202   003AE4  EF8C  F01D         	goto	l5654
 13203   003AE8                     u6970:
 13204   003AE8  0E00               	movlw	0
 13205   003AEA  6E40               	movwf	___fldiv@b^0,c
 13206   003AEC  0E00               	movlw	0
 13207   003AEE  6E41               	movwf	(___fldiv@b+1)^0,c
 13208   003AF0  0E00               	movlw	0
 13209   003AF2  6E42               	movwf	(___fldiv@b+2)^0,c
 13210   003AF4  0E00               	movlw	0
 13211   003AF6  6E43               	movwf	(___fldiv@b+3)^0,c
 13212   003AF8  0E80               	movlw	128
 13213   003AFA  1242               	iorwf	(___fldiv@b+2)^0,f,c
 13214   003AFC  0E7F               	movlw	127
 13215   003AFE  1243               	iorwf	(___fldiv@b+3)^0,f,c
 13216   003B00                     l5648:
 13217   003B00  5050               	movf	___fldiv@sign^0,w,c
 13218   003B02  1243               	iorwf	(___fldiv@b+3)^0,f,c
 13219   003B04  C040  F040         	movff	___fldiv@b,?___fldiv
 13220   003B08  C041  F041         	movff	___fldiv@b+1,?___fldiv+1
 13221   003B0C  C042  F042         	movff	___fldiv@b+2,?___fldiv+2
 13222   003B10  C043  F043         	movff	___fldiv@b+3,?___fldiv+3
 13223   003B14  EFCC  F01E         	goto	l766
 13224   003B18                     l5654:
 13225   003B18  5057               	movf	___fldiv@bexp^0,w,c
 13226   003B1A  A4D8               	btfss	status,2,c
 13227   003B1C  EF92  F01D         	goto	u6981
 13228   003B20  EF94  F01D         	goto	u6980
 13229   003B24                     u6981:
 13230   003B24  EF9E  F01D         	goto	l5662
 13231   003B28                     u6980:
 13232   003B28  0E00               	movlw	0
 13233   003B2A  6E40               	movwf	?___fldiv^0,c
 13234   003B2C  0E00               	movlw	0
 13235   003B2E  6E41               	movwf	(?___fldiv+1)^0,c
 13236   003B30  0E00               	movlw	0
 13237   003B32  6E42               	movwf	(?___fldiv+2)^0,c
 13238   003B34  0E00               	movlw	0
 13239   003B36  6E43               	movwf	(?___fldiv+3)^0,c
 13240   003B38  EFCC  F01E         	goto	l766
 13241   003B3C                     l5662:
 13242   003B3C  5058               	movf	___fldiv@aexp^0,w,c
 13243   003B3E  C057  F048         	movff	___fldiv@bexp,??___fldiv
 13244   003B42  6A49               	clrf	(??___fldiv+1)^0,c
 13245   003B44  5E48               	subwf	??___fldiv^0,f,c
 13246   003B46  0E00               	movlw	0
 13247   003B48  5A49               	subwfb	(??___fldiv+1)^0,f,c
 13248   003B4A  0E7F               	movlw	127
 13249   003B4C  2448               	addwf	??___fldiv^0,w,c
 13250   003B4E  6E51               	movwf	___fldiv@new_exp^0,c
 13251   003B50  0E00               	movlw	0
 13252   003B52  2049               	addwfc	(??___fldiv+1)^0,w,c
 13253   003B54  6E52               	movwf	(___fldiv@new_exp+1)^0,c
 13254   003B56  C040  F04C         	movff	___fldiv@b,___fldiv@rem
 13255   003B5A  C041  F04D         	movff	___fldiv@b+1,___fldiv@rem+1
 13256   003B5E  C042  F04E         	movff	___fldiv@b+2,___fldiv@rem+2
 13257   003B62  C043  F04F         	movff	___fldiv@b+3,___fldiv@rem+3
 13258   003B66  0E00               	movlw	0
 13259   003B68  6E40               	movwf	___fldiv@b^0,c
 13260   003B6A  0E00               	movlw	0
 13261   003B6C  6E41               	movwf	(___fldiv@b+1)^0,c
 13262   003B6E  0E00               	movlw	0
 13263   003B70  6E42               	movwf	(___fldiv@b+2)^0,c
 13264   003B72  0E00               	movlw	0
 13265   003B74  6E43               	movwf	(___fldiv@b+3)^0,c
 13266   003B76  0E00               	movlw	0
 13267   003B78  6E53               	movwf	___fldiv@grs^0,c
 13268   003B7A  0E00               	movlw	0
 13269   003B7C  6E54               	movwf	(___fldiv@grs+1)^0,c
 13270   003B7E  0E00               	movlw	0
 13271   003B80  6E55               	movwf	(___fldiv@grs+2)^0,c
 13272   003B82  0E00               	movlw	0
 13273   003B84  6E56               	movwf	(___fldiv@grs+3)^0,c
 13274   003B86  6A58               	clrf	___fldiv@aexp^0,c
 13275   003B88  EFFE  F01D         	goto	l768
 13276   003B8C                     l5672:
 13277   003B8C  5058               	movf	___fldiv@aexp^0,w,c
 13278   003B8E  B4D8               	btfsc	status,2,c
 13279   003B90  EFCC  F01D         	goto	u6991
 13280   003B94  EFCE  F01D         	goto	u6990
 13281   003B98                     u6991:
 13282   003B98  EFE5  F01D         	goto	l5680
 13283   003B9C                     u6990:
 13284   003B9C  90D8               	bcf	status,0,c
 13285   003B9E  364C               	rlcf	___fldiv@rem^0,f,c
 13286   003BA0  364D               	rlcf	(___fldiv@rem+1)^0,f,c
 13287   003BA2  364E               	rlcf	(___fldiv@rem+2)^0,f,c
 13288   003BA4  364F               	rlcf	(___fldiv@rem+3)^0,f,c
 13289   003BA6  90D8               	bcf	status,0,c
 13290   003BA8  3640               	rlcf	___fldiv@b^0,f,c
 13291   003BAA  3641               	rlcf	(___fldiv@b+1)^0,f,c
 13292   003BAC  3642               	rlcf	(___fldiv@b+2)^0,f,c
 13293   003BAE  3643               	rlcf	(___fldiv@b+3)^0,f,c
 13294   003BB0  AE56               	btfss	(___fldiv@grs+3)^0,7,c
 13295   003BB2  EFDD  F01D         	goto	u7001
 13296   003BB6  EFDF  F01D         	goto	u7000
 13297   003BBA                     u7001:
 13298   003BBA  EFE0  F01D         	goto	l771
 13299   003BBE                     u7000:
 13300   003BBE  8040               	bsf	___fldiv@b^0,0,c
 13301   003BC0                     l771:
 13302   003BC0  90D8               	bcf	status,0,c
 13303   003BC2  3653               	rlcf	___fldiv@grs^0,f,c
 13304   003BC4  3654               	rlcf	(___fldiv@grs+1)^0,f,c
 13305   003BC6  3655               	rlcf	(___fldiv@grs+2)^0,f,c
 13306   003BC8  3656               	rlcf	(___fldiv@grs+3)^0,f,c
 13307   003BCA                     l5680:
 13308   003BCA  5044               	movf	___fldiv@a^0,w,c
 13309   003BCC  5C4C               	subwf	___fldiv@rem^0,w,c
 13310   003BCE  5045               	movf	(___fldiv@a+1)^0,w,c
 13311   003BD0  584D               	subwfb	(___fldiv@rem+1)^0,w,c
 13312   003BD2  5046               	movf	(___fldiv@a+2)^0,w,c
 13313   003BD4  584E               	subwfb	(___fldiv@rem+2)^0,w,c
 13314   003BD6  5047               	movf	(___fldiv@a+3)^0,w,c
 13315   003BD8  584F               	subwfb	(___fldiv@rem+3)^0,w,c
 13316   003BDA  A0D8               	btfss	status,0,c
 13317   003BDC  EFF2  F01D         	goto	u7011
 13318   003BE0  EFF4  F01D         	goto	u7010
 13319   003BE4                     u7011:
 13320   003BE4  EFFD  F01D         	goto	l5686
 13321   003BE8                     u7010:
 13322   003BE8  8C56               	bsf	(___fldiv@grs+3)^0,6,c
 13323   003BEA  5044               	movf	___fldiv@a^0,w,c
 13324   003BEC  5E4C               	subwf	___fldiv@rem^0,f,c
 13325   003BEE  5045               	movf	(___fldiv@a+1)^0,w,c
 13326   003BF0  5A4D               	subwfb	(___fldiv@rem+1)^0,f,c
 13327   003BF2  5046               	movf	(___fldiv@a+2)^0,w,c
 13328   003BF4  5A4E               	subwfb	(___fldiv@rem+2)^0,f,c
 13329   003BF6  5047               	movf	(___fldiv@a+3)^0,w,c
 13330   003BF8  5A4F               	subwfb	(___fldiv@rem+3)^0,f,c
 13331   003BFA                     l5686:
 13332   003BFA  2A58               	incf	___fldiv@aexp^0,f,c
 13333   003BFC                     l768:
 13334   003BFC  0E19               	movlw	25
 13335   003BFE  6458               	cpfsgt	___fldiv@aexp^0,c
 13336   003C00  EF04  F01E         	goto	u7021
 13337   003C04  EF06  F01E         	goto	u7020
 13338   003C08                     u7021:
 13339   003C08  EFC6  F01D         	goto	l5672
 13340   003C0C                     u7020:
 13341   003C0C  504C               	movf	___fldiv@rem^0,w,c
 13342   003C0E  104D               	iorwf	(___fldiv@rem+1)^0,w,c
 13343   003C10  104E               	iorwf	(___fldiv@rem+2)^0,w,c
 13344   003C12  104F               	iorwf	(___fldiv@rem+3)^0,w,c
 13345   003C14  B4D8               	btfsc	status,2,c
 13346   003C16  EF0F  F01E         	goto	u7031
 13347   003C1A  EF11  F01E         	goto	u7030
 13348   003C1E                     u7031:
 13349   003C1E  EF29  F01E         	goto	l5698
 13350   003C22                     u7030:
 13351   003C22  8053               	bsf	___fldiv@grs^0,0,c
 13352   003C24  EF29  F01E         	goto	l5698
 13353   003C28                     l5692:
 13354   003C28  90D8               	bcf	status,0,c
 13355   003C2A  3640               	rlcf	___fldiv@b^0,f,c
 13356   003C2C  3641               	rlcf	(___fldiv@b+1)^0,f,c
 13357   003C2E  3642               	rlcf	(___fldiv@b+2)^0,f,c
 13358   003C30  3643               	rlcf	(___fldiv@b+3)^0,f,c
 13359   003C32  AE56               	btfss	(___fldiv@grs+3)^0,7,c
 13360   003C34  EF1E  F01E         	goto	u7041
 13361   003C38  EF20  F01E         	goto	u7040
 13362   003C3C                     u7041:
 13363   003C3C  EF21  F01E         	goto	l777
 13364   003C40                     u7040:
 13365   003C40  8040               	bsf	___fldiv@b^0,0,c
 13366   003C42                     l777:
 13367   003C42  90D8               	bcf	status,0,c
 13368   003C44  3653               	rlcf	___fldiv@grs^0,f,c
 13369   003C46  3654               	rlcf	(___fldiv@grs+1)^0,f,c
 13370   003C48  3655               	rlcf	(___fldiv@grs+2)^0,f,c
 13371   003C4A  3656               	rlcf	(___fldiv@grs+3)^0,f,c
 13372   003C4C  0651               	decf	___fldiv@new_exp^0,f,c
 13373   003C4E  A0D8               	btfss	status,0,c
 13374   003C50  0652               	decf	(___fldiv@new_exp+1)^0,f,c
 13375   003C52                     l5698:
 13376   003C52  AE42               	btfss	(___fldiv@b+2)^0,7,c
 13377   003C54  EF2E  F01E         	goto	u7051
 13378   003C58  EF30  F01E         	goto	u7050
 13379   003C5C                     u7051:
 13380   003C5C  EF14  F01E         	goto	l5692
 13381   003C60                     u7050:
 13382   003C60  6A58               	clrf	___fldiv@aexp^0,c
 13383   003C62  AE56               	btfss	(___fldiv@grs+3)^0,7,c
 13384   003C64  EF36  F01E         	goto	u7061
 13385   003C68  EF38  F01E         	goto	u7060
 13386   003C6C                     u7061:
 13387   003C6C  EF5C  F01E         	goto	l779
 13388   003C70                     u7060:
 13389   003C70  0EFF               	movlw	255
 13390   003C72  1453               	andwf	___fldiv@grs^0,w,c
 13391   003C74  6E48               	movwf	??___fldiv^0,c
 13392   003C76  0EFF               	movlw	255
 13393   003C78  1454               	andwf	(___fldiv@grs+1)^0,w,c
 13394   003C7A  6E49               	movwf	(??___fldiv+1)^0,c
 13395   003C7C  0EFF               	movlw	255
 13396   003C7E  1455               	andwf	(___fldiv@grs+2)^0,w,c
 13397   003C80  6E4A               	movwf	(??___fldiv+2)^0,c
 13398   003C82  0E7F               	movlw	127
 13399   003C84  1456               	andwf	(___fldiv@grs+3)^0,w,c
 13400   003C86  6E4B               	movwf	(??___fldiv+3)^0,c
 13401   003C88  5048               	movf	??___fldiv^0,w,c
 13402   003C8A  1049               	iorwf	(??___fldiv+1)^0,w,c
 13403   003C8C  104A               	iorwf	(??___fldiv+2)^0,w,c
 13404   003C8E  104B               	iorwf	(??___fldiv+3)^0,w,c
 13405   003C90  B4D8               	btfsc	status,2,c
 13406   003C92  EF4D  F01E         	goto	u7071
 13407   003C96  EF4F  F01E         	goto	u7070
 13408   003C9A                     u7071:
 13409   003C9A  EF53  F01E         	goto	l780
 13410   003C9E                     u7070:
 13411   003C9E                     l5702:
 13412   003C9E  0E01               	movlw	1
 13413   003CA0  6E58               	movwf	___fldiv@aexp^0,c
 13414   003CA2  EF5C  F01E         	goto	l779
 13415   003CA6                     l780:
 13416   003CA6  A040               	btfss	___fldiv@b^0,0,c
 13417   003CA8  EF58  F01E         	goto	u7081
 13418   003CAC  EF5A  F01E         	goto	u7080
 13419   003CB0                     u7081:
 13420   003CB0  EF5C  F01E         	goto	l779
 13421   003CB4                     u7080:
 13422   003CB4  EF4F  F01E         	goto	l5702
 13423   003CB8                     l779:
 13424   003CB8  5058               	movf	___fldiv@aexp^0,w,c
 13425   003CBA  B4D8               	btfsc	status,2,c
 13426   003CBC  EF62  F01E         	goto	u7091
 13427   003CC0  EF64  F01E         	goto	u7090
 13428   003CC4                     u7091:
 13429   003CC4  EF88  F01E         	goto	l5714
 13430   003CC8                     u7090:
 13431   003CC8  0E01               	movlw	1
 13432   003CCA  2640               	addwf	___fldiv@b^0,f,c
 13433   003CCC  0E00               	movlw	0
 13434   003CCE  2241               	addwfc	(___fldiv@b+1)^0,f,c
 13435   003CD0  2242               	addwfc	(___fldiv@b+2)^0,f,c
 13436   003CD2  2243               	addwfc	(___fldiv@b+3)^0,f,c
 13437   003CD4  A043               	btfss	(___fldiv@b+3)^0,0,c
 13438   003CD6  EF6F  F01E         	goto	u7101
 13439   003CDA  EF71  F01E         	goto	u7100
 13440   003CDE                     u7101:
 13441   003CDE  EF88  F01E         	goto	l5714
 13442   003CE2                     u7100:
 13443   003CE2  C040  F048         	movff	___fldiv@b,??___fldiv
 13444   003CE6  C041  F049         	movff	___fldiv@b+1,??___fldiv+1
 13445   003CEA  C042  F04A         	movff	___fldiv@b+2,??___fldiv+2
 13446   003CEE  C043  F04B         	movff	___fldiv@b+3,??___fldiv+3
 13447   003CF2  344B               	rlcf	(??___fldiv+3)^0,w,c
 13448   003CF4  324B               	rrcf	(??___fldiv+3)^0,f,c
 13449   003CF6  324A               	rrcf	(??___fldiv+2)^0,f,c
 13450   003CF8  3249               	rrcf	(??___fldiv+1)^0,f,c
 13451   003CFA  3248               	rrcf	??___fldiv^0,f,c
 13452   003CFC  C048  F040         	movff	??___fldiv,___fldiv@b
 13453   003D00  C049  F041         	movff	??___fldiv+1,___fldiv@b+1
 13454   003D04  C04A  F042         	movff	??___fldiv+2,___fldiv@b+2
 13455   003D08  C04B  F043         	movff	??___fldiv+3,___fldiv@b+3
 13456   003D0C  4A51               	infsnz	___fldiv@new_exp^0,f,c
 13457   003D0E  2A52               	incf	(___fldiv@new_exp+1)^0,f,c
 13458   003D10                     l5714:
 13459   003D10  BE52               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13460   003D12  EF93  F01E         	goto	u7111
 13461   003D16  5052               	movf	(___fldiv@new_exp+1)^0,w,c
 13462   003D18  E108               	bnz	u7110
 13463   003D1A  2851               	incf	___fldiv@new_exp^0,w,c
 13464   003D1C  A0D8               	btfss	status,0,c
 13465   003D1E  EF93  F01E         	goto	u7111
 13466   003D22  EF95  F01E         	goto	u7110
 13467   003D26                     u7111:
 13468   003D26  EFA0  F01E         	goto	l5718
 13469   003D2A                     u7110:
 13470   003D2A  0E00               	movlw	0
 13471   003D2C  6E52               	movwf	(___fldiv@new_exp+1)^0,c
 13472   003D2E  6851               	setf	___fldiv@new_exp^0,c
 13473   003D30  0E00               	movlw	0
 13474   003D32  6E40               	movwf	___fldiv@b^0,c
 13475   003D34  0E00               	movlw	0
 13476   003D36  6E41               	movwf	(___fldiv@b+1)^0,c
 13477   003D38  0E00               	movlw	0
 13478   003D3A  6E42               	movwf	(___fldiv@b+2)^0,c
 13479   003D3C  0E00               	movlw	0
 13480   003D3E  6E43               	movwf	(___fldiv@b+3)^0,c
 13481   003D40                     l5718:
 13482   003D40  BE52               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13483   003D42  EFAD  F01E         	goto	u7120
 13484   003D46  5052               	movf	(___fldiv@new_exp+1)^0,w,c
 13485   003D48  E106               	bnz	u7121
 13486   003D4A  0451               	decf	___fldiv@new_exp^0,w,c
 13487   003D4C  B0D8               	btfsc	status,0,c
 13488   003D4E  EFAB  F01E         	goto	u7121
 13489   003D52  EFAD  F01E         	goto	u7120
 13490   003D56                     u7121:
 13491   003D56  EFBA  F01E         	goto	l5724
 13492   003D5A                     u7120:
 13493   003D5A  0E00               	movlw	0
 13494   003D5C  6E52               	movwf	(___fldiv@new_exp+1)^0,c
 13495   003D5E  0E00               	movlw	0
 13496   003D60  6E51               	movwf	___fldiv@new_exp^0,c
 13497   003D62  0E00               	movlw	0
 13498   003D64  6E40               	movwf	___fldiv@b^0,c
 13499   003D66  0E00               	movlw	0
 13500   003D68  6E41               	movwf	(___fldiv@b+1)^0,c
 13501   003D6A  0E00               	movlw	0
 13502   003D6C  6E42               	movwf	(___fldiv@b+2)^0,c
 13503   003D6E  0E00               	movlw	0
 13504   003D70  6E43               	movwf	(___fldiv@b+3)^0,c
 13505   003D72  6A50               	clrf	___fldiv@sign^0,c
 13506   003D74                     l5724:
 13507   003D74  C051  F057         	movff	___fldiv@new_exp,___fldiv@bexp
 13508   003D78  A057               	btfss	___fldiv@bexp^0,0,c
 13509   003D7A  EFC1  F01E         	goto	u7131
 13510   003D7E  EFC3  F01E         	goto	u7130
 13511   003D82                     u7131:
 13512   003D82  EFC6  F01E         	goto	l5730
 13513   003D86                     u7130:
 13514   003D86  8E42               	bsf	(___fldiv@b+2)^0,7,c
 13515   003D88  EFC7  F01E         	goto	l5732
 13516   003D8C                     l5730:
 13517   003D8C  9E42               	bcf	(___fldiv@b+2)^0,7,c
 13518   003D8E                     l5732:
 13519   003D8E  90D8               	bcf	status,0,c
 13520   003D90  3057               	rrcf	___fldiv@bexp^0,w,c
 13521   003D92  6E43               	movwf	(___fldiv@b+3)^0,c
 13522   003D94  EF80  F01D         	goto	l5648
 13523   003D98                     l766:
 13524   003D98  0012               	return		;funcret
 13525   003D9A                     __end_of___fldiv:
 13526                           	callstack 0
 13527                           
 13528 ;; *************** function _dtoa *****************
 13529 ;; Defined at:
 13530 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13531 ;; Parameters:    Size  Location     Type
 13532 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
 13533 ;;		 -> sprintf@f(11), 
 13534 ;;  d               2   23[COMRAM] int 
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;  i               2   32[COMRAM] int 
 13537 ;;  p               2   29[COMRAM] int 
 13538 ;;  w               2   27[COMRAM] int 
 13539 ;;  s               1   31[COMRAM] unsigned char 
 13540 ;; Return value:  Size  Location     Type
 13541 ;;                  1    wreg      void 
 13542 ;; Registers used:
 13543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13544 ;; Tracked objects:
 13545 ;;		On entry : 0/0
 13546 ;;		On exit  : 0/0
 13547 ;;		Unchanged: 0/0
 13548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13549 ;;      Params:         3       0       0       0       0       0       0       0       0
 13550 ;;      Locals:         9       0       0       0       0       0       0       0       0
 13551 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13552 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13553 ;;Total ram usage:       12 bytes
 13554 ;; Hardware stack levels used: 1
 13555 ;; Hardware stack levels required when called: 4
 13556 ;; This function calls:
 13557 ;;		___awdiv
 13558 ;;		___awmod
 13559 ;;		_abs
 13560 ;;		_pad
 13561 ;; This function is called by:
 13562 ;;		_vfpfcnvrt
 13563 ;; This function uses a non-reentrant model
 13564 ;;
 13565                           
 13566                           	psect	text31
 13567   002968                     __ptext31:
 13568                           	callstack 0
 13569   002968                     _dtoa:
 13570                           	callstack 22
 13571   002968                     
 13572                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 13573   002968  BE19               	btfsc	(dtoa@d+1)^0,7,c
 13574   00296A  EFB9  F014         	goto	u7841
 13575   00296E  EFBC  F014         	goto	u7840
 13576   002972                     u7841:
 13577   002972  0E01               	movlw	1
 13578   002974  EFBD  F014         	goto	u7850
 13579   002978                     u7840:
 13580   002978  0E00               	movlw	0
 13581   00297A                     u7850:
 13582   00297A  6E20               	movwf	dtoa@s^0,c
 13583                           
 13584                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 13585   00297C  0100               	movlb	0	; () banked
 13586   00297E  BFFE               	btfsc	(_prec+1)& (0+255),7,b
 13587   002980  EFC6  F014         	goto	u7860
 13588   002984  EFC4  F014         	goto	u7861
 13589   002988                     u7861:
 13590   002988  EFCC  F014         	goto	l899
 13591   00298C                     u7860:
 13592   00298C                     
 13593                           ; BSR set to: 0
 13594   00298C  0E00               	movlw	0
 13595   00298E  6E1F               	movwf	(dtoa@p+1)^0,c
 13596   002990  0E01               	movlw	1
 13597   002992  6E1E               	movwf	dtoa@p^0,c
 13598   002994  EFD0  F014         	goto	l901
 13599   002998                     l899:
 13600                           
 13601                           ; BSR set to: 0
 13602   002998  C0FD  F01E         	movff	_prec,dtoa@p
 13603   00299C  C0FE  F01F         	movff	_prec+1,dtoa@p+1
 13604   0029A0                     l901:
 13605                           
 13606                           ; BSR set to: 0
 13607                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 13608   0029A0  C232  F01C         	movff	_width,dtoa@w
 13609   0029A4  C233  F01D         	movff	_width+1,dtoa@w+1
 13610   0029A8                     
 13611                           ; BSR set to: 0
 13612                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 13613   0029A8  5020               	movf	dtoa@s^0,w,c
 13614   0029AA  B4D8               	btfsc	status,2,c
 13615   0029AC  EFDA  F014         	goto	u7871
 13616   0029B0  EFDC  F014         	goto	u7870
 13617   0029B4                     u7871:
 13618   0029B4  EFF3  F014         	goto	l902
 13619   0029B8                     u7870:
 13620   0029B8                     
 13621                           ; BSR set to: 0
 13622                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 13623   0029B8  061C               	decf	dtoa@w^0,f,c
 13624   0029BA  A0D8               	btfss	status,0,c
 13625   0029BC  061D               	decf	(dtoa@w+1)^0,f,c
 13626   0029BE                     
 13627                           ; BSR set to: 0
 13628                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 13629   0029BE  5020               	movf	dtoa@s^0,w,c
 13630   0029C0  A4D8               	btfss	status,2,c
 13631   0029C2  EFE5  F014         	goto	u7881
 13632   0029C6  EFE7  F014         	goto	u7880
 13633   0029CA                     u7881:
 13634   0029CA  EFED  F014         	goto	l6146
 13635   0029CE                     u7880:
 13636   0029CE                     
 13637                           ; BSR set to: 0
 13638   0029CE  0E00               	movlw	0
 13639   0029D0  6E1B               	movwf	(_dtoa$993+1)^0,c
 13640   0029D2  0E2B               	movlw	43
 13641   0029D4  6E1A               	movwf	_dtoa$993^0,c
 13642   0029D6  EFF1  F014         	goto	l6148
 13643   0029DA                     l6146:
 13644                           
 13645                           ; BSR set to: 0
 13646   0029DA  0E00               	movlw	0
 13647   0029DC  6E1B               	movwf	(_dtoa$993+1)^0,c
 13648   0029DE  0E2D               	movlw	45
 13649   0029E0  6E1A               	movwf	_dtoa$993^0,c
 13650   0029E2                     l6148:
 13651                           
 13652                           ; BSR set to: 0
 13653   0029E2  C01A  F020         	movff	_dtoa$993,dtoa@s
 13654   0029E6                     l902:
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 13658   0029E6  0E00               	movlw	0
 13659   0029E8  6E22               	movwf	(dtoa@i+1)^0,c
 13660   0029EA  0E4F               	movlw	79
 13661   0029EC  6E21               	movwf	dtoa@i^0,c
 13662   0029EE                     
 13663                           ; BSR set to: 0
 13664                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 13665   0029EE  0102               	movlb	2	; () banked
 13666   0029F0  6B85               	clrf	(_dbuf+79)& (0+255),b
 13667                           
 13668                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13669   0029F2  EF2B  F015         	goto	l6162
 13670   0029F6                     l6152:
 13671                           
 13672                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 13673   0029F6  0621               	decf	dtoa@i^0,f,c
 13674   0029F8  A0D8               	btfss	status,0,c
 13675   0029FA  0622               	decf	(dtoa@i+1)^0,f,c
 13676   0029FC                     
 13677                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 13678   0029FC  0E36               	movlw	low _dbuf
 13679   0029FE  2421               	addwf	dtoa@i^0,w,c
 13680   002A00  6ED9               	movwf	fsr2l,c
 13681   002A02  0E02               	movlw	high _dbuf
 13682   002A04  2022               	addwfc	(dtoa@i+1)^0,w,c
 13683   002A06  6EDA               	movwf	fsr2h,c
 13684   002A08  C018  F001         	movff	dtoa@d,___awmod@dividend
 13685   002A0C  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
 13686   002A10  0E00               	movlw	0
 13687   002A12  6E04               	movwf	(___awmod@divisor+1)^0,c
 13688   002A14  0E0A               	movlw	10
 13689   002A16  6E03               	movwf	___awmod@divisor^0,c
 13690   002A18  EC0E  F011         	call	___awmod	;wreg free
 13691   002A1C  C001  F007         	movff	?___awmod,abs@a
 13692   002A20  C002  F008         	movff	?___awmod+1,abs@a+1
 13693   002A24  EC90  F00D         	call	_abs	;wreg free
 13694   002A28  5007               	movf	?_abs^0,w,c
 13695   002A2A  0F30               	addlw	48
 13696   002A2C  6EDF               	movwf	indf2,c
 13697   002A2E                     
 13698                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
 13699   002A2E  061E               	decf	dtoa@p^0,f,c
 13700   002A30  A0D8               	btfss	status,0,c
 13701   002A32  061F               	decf	(dtoa@p+1)^0,f,c
 13702   002A34                     
 13703                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 13704   002A34  061C               	decf	dtoa@w^0,f,c
 13705   002A36  A0D8               	btfss	status,0,c
 13706   002A38  061D               	decf	(dtoa@w+1)^0,f,c
 13707   002A3A                     
 13708                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 13709   002A3A  C018  F001         	movff	dtoa@d,___awdiv@dividend
 13710   002A3E  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
 13711   002A42  0E00               	movlw	0
 13712   002A44  6E04               	movwf	(___awdiv@divisor+1)^0,c
 13713   002A46  0E0A               	movlw	10
 13714   002A48  6E03               	movwf	___awdiv@divisor^0,c
 13715   002A4A  EC1B  F012         	call	___awdiv	;wreg free
 13716   002A4E  C001  F018         	movff	?___awdiv,dtoa@d
 13717   002A52  C002  F019         	movff	?___awdiv+1,dtoa@d+1
 13718   002A56                     l6162:
 13719                           
 13720                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13721   002A56  BE22               	btfsc	(dtoa@i+1)^0,7,c
 13722   002A58  EF36  F015         	goto	u7891
 13723   002A5C  5022               	movf	(dtoa@i+1)^0,w,c
 13724   002A5E  E108               	bnz	u7890
 13725   002A60  0421               	decf	dtoa@i^0,w,c
 13726   002A62  A0D8               	btfss	status,0,c
 13727   002A64  EF36  F015         	goto	u7891
 13728   002A68  EF38  F015         	goto	u7890
 13729   002A6C                     u7891:
 13730   002A6C  EF4E  F015         	goto	l6168
 13731   002A70                     u7890:
 13732   002A70  5018               	movf	dtoa@d^0,w,c
 13733   002A72  1019               	iorwf	(dtoa@d+1)^0,w,c
 13734   002A74  A4D8               	btfss	status,2,c
 13735   002A76  EF3F  F015         	goto	u7901
 13736   002A7A  EF41  F015         	goto	u7900
 13737   002A7E                     u7901:
 13738   002A7E  EFFB  F014         	goto	l6152
 13739   002A82                     u7900:
 13740   002A82  BE1F               	btfsc	(dtoa@p+1)^0,7,c
 13741   002A84  EF4E  F015         	goto	u7910
 13742   002A88  501F               	movf	(dtoa@p+1)^0,w,c
 13743   002A8A  E106               	bnz	u7911
 13744   002A8C  041E               	decf	dtoa@p^0,w,c
 13745   002A8E  B0D8               	btfsc	status,0,c
 13746   002A90  EF4C  F015         	goto	u7911
 13747   002A94  EF4E  F015         	goto	u7910
 13748   002A98                     u7911:
 13749   002A98  EFFB  F014         	goto	l6152
 13750   002A9C                     u7910:
 13751   002A9C                     l6168:
 13752                           
 13753                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 13754   002A9C  5020               	movf	dtoa@s^0,w,c
 13755   002A9E  B4D8               	btfsc	status,2,c
 13756   002AA0  EF54  F015         	goto	u7921
 13757   002AA4  EF56  F015         	goto	u7920
 13758   002AA8                     u7921:
 13759   002AA8  EF61  F015         	goto	l6174
 13760   002AAC                     u7920:
 13761   002AAC                     
 13762                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 13763   002AAC  0621               	decf	dtoa@i^0,f,c
 13764   002AAE  A0D8               	btfss	status,0,c
 13765   002AB0  0622               	decf	(dtoa@i+1)^0,f,c
 13766   002AB2                     
 13767                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 13768   002AB2  0E36               	movlw	low _dbuf
 13769   002AB4  2421               	addwf	dtoa@i^0,w,c
 13770   002AB6  6ED9               	movwf	fsr2l,c
 13771   002AB8  0E02               	movlw	high _dbuf
 13772   002ABA  2022               	addwfc	(dtoa@i+1)^0,w,c
 13773   002ABC  6EDA               	movwf	fsr2h,c
 13774   002ABE  C020  FFDF         	movff	dtoa@s,indf2
 13775   002AC2                     l6174:
 13776                           
 13777                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 13778   002AC2  C017  F00F         	movff	dtoa@fp,pad@fp
 13779   002AC6  0E36               	movlw	low _dbuf
 13780   002AC8  2421               	addwf	dtoa@i^0,w,c
 13781   002ACA  6E10               	movwf	pad@buf^0,c
 13782   002ACC  0E02               	movlw	high _dbuf
 13783   002ACE  2022               	addwfc	(dtoa@i+1)^0,w,c
 13784   002AD0  6E11               	movwf	(pad@buf+1)^0,c
 13785   002AD2  C01C  F012         	movff	dtoa@w,pad@p
 13786   002AD6  C01D  F013         	movff	dtoa@w+1,pad@p+1
 13787   002ADA  EC33  F00F         	call	_pad	;wreg free
 13788   002ADE  0012               	return		;funcret
 13789   002AE0                     __end_of_dtoa:
 13790                           	callstack 0
 13791                           
 13792 ;; *************** function _pad *****************
 13793 ;; Defined at:
 13794 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
 13797 ;;		 -> sprintf@f(11), 
 13798 ;;  buf             2   15[COMRAM] PTR unsigned char 
 13799 ;;		 -> dbuf(80), 
 13800 ;;  p               2   17[COMRAM] int 
 13801 ;; Auto vars:     Size  Location     Type
 13802 ;;  i               2   20[COMRAM] int 
 13803 ;; Return value:  Size  Location     Type
 13804 ;;                  1    wreg      void 
 13805 ;; Registers used:
 13806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13807 ;; Tracked objects:
 13808 ;;		On entry : 0/0
 13809 ;;		On exit  : 0/0
 13810 ;;		Unchanged: 0/0
 13811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13812 ;;      Params:         5       0       0       0       0       0       0       0       0
 13813 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13814 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13815 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13816 ;;Total ram usage:        8 bytes
 13817 ;; Hardware stack levels used: 1
 13818 ;; Hardware stack levels required when called: 3
 13819 ;; This function calls:
 13820 ;;		_fputc
 13821 ;;		_fputs
 13822 ;; This function is called by:
 13823 ;;		_dtoa
 13824 ;;		_efgtoa
 13825 ;; This function uses a non-reentrant model
 13826 ;;
 13827                           
 13828                           	psect	text32
 13829   001E66                     __ptext32:
 13830                           	callstack 0
 13831   001E66                     _pad:
 13832                           	callstack 22
 13833   001E66                     
 13834                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 13835   001E66  BE13               	btfsc	(pad@p+1)^0,7,c
 13836   001E68  EF3A  F00F         	goto	u7610
 13837   001E6C  EF38  F00F         	goto	u7611
 13838   001E70                     u7611:
 13839   001E70  EF3E  F00F         	goto	l891
 13840   001E74                     u7610:
 13841   001E74                     
 13842                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 13843   001E74  0E00               	movlw	0
 13844   001E76  6E13               	movwf	(pad@p+1)^0,c
 13845   001E78  0E00               	movlw	0
 13846   001E7A  6E12               	movwf	pad@p^0,c
 13847   001E7C                     l891:
 13848                           
 13849                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 13850   001E7C  0E00               	movlw	0
 13851   001E7E  6E16               	movwf	(pad@i+1)^0,c
 13852   001E80  0E00               	movlw	0
 13853   001E82  6E15               	movwf	pad@i^0,c
 13854                           
 13855                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 13856   001E84  EF4E  F00F         	goto	l6052
 13857   001E88                     l6048:
 13858                           
 13859                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 13860   001E88  0E00               	movlw	0
 13861   001E8A  6E02               	movwf	(fputc@c+1)^0,c
 13862   001E8C  0E20               	movlw	32
 13863   001E8E  6E01               	movwf	fputc@c^0,c
 13864   001E90  C00F  F003         	movff	pad@fp,fputc@fp
 13865   001E94  ECBE  F011         	call	_fputc	;wreg free
 13866   001E98                     
 13867                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 13868   001E98  4A15               	infsnz	pad@i^0,f,c
 13869   001E9A  2A16               	incf	(pad@i+1)^0,f,c
 13870   001E9C                     l6052:
 13871                           
 13872                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 13873   001E9C  5012               	movf	pad@p^0,w,c
 13874   001E9E  5C15               	subwf	pad@i^0,w,c
 13875   001EA0  5016               	movf	(pad@i+1)^0,w,c
 13876   001EA2  0A80               	xorlw	128
 13877   001EA4  6E14               	movwf	??_pad^0,c
 13878   001EA6  5013               	movf	(pad@p+1)^0,w,c
 13879   001EA8  0A80               	xorlw	128
 13880   001EAA  5814               	subwfb	??_pad^0,w,c
 13881   001EAC  A0D8               	btfss	status,0,c
 13882   001EAE  EF5B  F00F         	goto	u7621
 13883   001EB2  EF5D  F00F         	goto	u7620
 13884   001EB6                     u7621:
 13885   001EB6  EF44  F00F         	goto	l6048
 13886   001EBA                     u7620:
 13887   001EBA                     
 13888                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 13889   001EBA  C010  F009         	movff	pad@buf,fputs@s
 13890   001EBE  C011  F00A         	movff	pad@buf+1,fputs@s+1
 13891   001EC2  C00F  F00B         	movff	pad@fp,fputs@fp
 13892   001EC6  ECE2  F00D         	call	_fputs	;wreg free
 13893   001ECA  0012               	return		;funcret
 13894   001ECC                     __end_of_pad:
 13895                           	callstack 0
 13896                           
 13897 ;; *************** function _fputs *****************
 13898 ;; Defined at:
 13899 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 13900 ;; Parameters:    Size  Location     Type
 13901 ;;  s               2    8[COMRAM] PTR const unsigned char 
 13902 ;;		 -> dbuf(80), 
 13903 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
 13904 ;;		 -> sprintf@f(11), 
 13905 ;; Auto vars:     Size  Location     Type
 13906 ;;  i               2   12[COMRAM] int 
 13907 ;;  c               1   11[COMRAM] unsigned char 
 13908 ;; Return value:  Size  Location     Type
 13909 ;;                  2    8[COMRAM] int 
 13910 ;; Registers used:
 13911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13912 ;; Tracked objects:
 13913 ;;		On entry : 0/0
 13914 ;;		On exit  : 0/0
 13915 ;;		Unchanged: 0/0
 13916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13917 ;;      Params:         3       0       0       0       0       0       0       0       0
 13918 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13919 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13920 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13921 ;;Total ram usage:        6 bytes
 13922 ;; Hardware stack levels used: 1
 13923 ;; Hardware stack levels required when called: 2
 13924 ;; This function calls:
 13925 ;;		_fputc
 13926 ;; This function is called by:
 13927 ;;		_pad
 13928 ;; This function uses a non-reentrant model
 13929 ;;
 13930                           
 13931                           	psect	text33
 13932   001BC4                     __ptext33:
 13933                           	callstack 0
 13934   001BC4                     _fputs:
 13935                           	callstack 22
 13936   001BC4  0E00               	movlw	0
 13937   001BC6  6E0E               	movwf	(fputs@i+1)^0,c
 13938   001BC8  0E00               	movlw	0
 13939   001BCA  6E0D               	movwf	fputs@i^0,c
 13940   001BCC  EFF1  F00D         	goto	l5602
 13941   001BD0                     l5598:
 13942   001BD0  C00C  F001         	movff	fputs@c,fputc@c
 13943   001BD4  6A02               	clrf	(fputc@c+1)^0,c
 13944   001BD6  C00B  F003         	movff	fputs@fp,fputc@fp
 13945   001BDA  ECBE  F011         	call	_fputc	;wreg free
 13946   001BDE  4A0D               	infsnz	fputs@i^0,f,c
 13947   001BE0  2A0E               	incf	(fputs@i+1)^0,f,c
 13948   001BE2                     l5602:
 13949   001BE2  500D               	movf	fputs@i^0,w,c
 13950   001BE4  2409               	addwf	fputs@s^0,w,c
 13951   001BE6  6ED9               	movwf	fsr2l,c
 13952   001BE8  500E               	movf	(fputs@i+1)^0,w,c
 13953   001BEA  200A               	addwfc	(fputs@s+1)^0,w,c
 13954   001BEC  6EDA               	movwf	fsr2h,c
 13955   001BEE  50DF               	movf	indf2,w,c
 13956   001BF0  6E0C               	movwf	fputs@c^0,c
 13957   001BF2  500C               	movf	fputs@c^0,w,c
 13958   001BF4  A4D8               	btfss	status,2,c
 13959   001BF6  EFFF  F00D         	goto	u6901
 13960   001BFA  EF01  F00E         	goto	u6900
 13961   001BFE                     u6901:
 13962   001BFE  EFE8  F00D         	goto	l5598
 13963   001C02                     u6900:
 13964   001C02  0012               	return		;funcret
 13965   001C04                     __end_of_fputs:
 13966                           	callstack 0
 13967                           
 13968 ;; *************** function _fputc *****************
 13969 ;; Defined at:
 13970 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 13971 ;; Parameters:    Size  Location     Type
 13972 ;;  c               2    0[COMRAM] int 
 13973 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
 13974 ;;		 -> sprintf@f(11), 
 13975 ;; Auto vars:     Size  Location     Type
 13976 ;;		None
 13977 ;; Return value:  Size  Location     Type
 13978 ;;                  2    0[COMRAM] int 
 13979 ;; Registers used:
 13980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13981 ;; Tracked objects:
 13982 ;;		On entry : 0/0
 13983 ;;		On exit  : 0/0
 13984 ;;		Unchanged: 0/0
 13985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13986 ;;      Params:         3       0       0       0       0       0       0       0       0
 13987 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13988 ;;      Temps:          5       0       0       0       0       0       0       0       0
 13989 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13990 ;;Total ram usage:        8 bytes
 13991 ;; Hardware stack levels used: 1
 13992 ;; Hardware stack levels required when called: 1
 13993 ;; This function calls:
 13994 ;;		_putch
 13995 ;; This function is called by:
 13996 ;;		_pad
 13997 ;;		_vfpfcnvrt
 13998 ;;		_fputs
 13999 ;; This function uses a non-reentrant model
 14000 ;;
 14001                           
 14002                           	psect	text34
 14003   00237C                     __ptext34:
 14004                           	callstack 0
 14005   00237C                     _fputc:
 14006                           	callstack 25
 14007   00237C  5003               	movf	fputc@fp^0,w,c
 14008   00237E  B4D8               	btfsc	status,2,c
 14009   002380  EFC4  F011         	goto	u6471
 14010   002384  EFC6  F011         	goto	u6470
 14011   002388                     u6471:
 14012   002388  EFCE  F011         	goto	l5392
 14013   00238C                     u6470:
 14014   00238C  5003               	movf	fputc@fp^0,w,c
 14015   00238E  A4D8               	btfss	status,2,c
 14016   002390  EFCC  F011         	goto	u6481
 14017   002394  EFCE  F011         	goto	u6480
 14018   002398                     u6481:
 14019   002398  EFD3  F011         	goto	l5394
 14020   00239C                     u6480:
 14021   00239C                     l5392:
 14022   00239C  5001               	movf	fputc@c^0,w,c
 14023   00239E  EC59  F00D         	call	_putch
 14024   0023A2  EF1A  F012         	goto	l1059
 14025   0023A6                     l5394:
 14026   0023A6  5003               	movf	fputc@fp^0,w,c
 14027   0023A8  6ED9               	movwf	fsr2l,c
 14028   0023AA  6ADA               	clrf	fsr2h,c
 14029   0023AC  0E09               	movlw	9
 14030   0023AE  26D9               	addwf	fsr2l,f,c
 14031   0023B0  50DE               	movf	postinc2,w,c
 14032   0023B2  10DE               	iorwf	postinc2,w,c
 14033   0023B4  B4D8               	btfsc	status,2,c
 14034   0023B6  EFDF  F011         	goto	u6491
 14035   0023BA  EFE1  F011         	goto	u6490
 14036   0023BE                     u6491:
 14037   0023BE  EFFA  F011         	goto	l5398
 14038   0023C2                     u6490:
 14039   0023C2  5003               	movf	fputc@fp^0,w,c
 14040   0023C4  6ED9               	movwf	fsr2l,c
 14041   0023C6  6ADA               	clrf	fsr2h,c
 14042   0023C8  0E09               	movlw	9
 14043   0023CA  26D9               	addwf	fsr2l,f,c
 14044   0023CC  5003               	movf	fputc@fp^0,w,c
 14045   0023CE  6EE1               	movwf	fsr1l,c
 14046   0023D0  6AE2               	clrf	fsr1h,c
 14047   0023D2  0E02               	movlw	2
 14048   0023D4  26E1               	addwf	fsr1l,f,c
 14049   0023D6  50DE               	movf	postinc2,w,c
 14050   0023D8  5CE6               	subwf	postinc1,w,c
 14051   0023DA  50E6               	movf	postinc1,w,c
 14052   0023DC  0A80               	xorlw	128
 14053   0023DE  6E08               	movwf	(??_fputc+4)^0,c
 14054   0023E0  50DE               	movf	postinc2,w,c
 14055   0023E2  0A80               	xorlw	128
 14056   0023E4  5808               	subwfb	(??_fputc+4)^0,w,c
 14057   0023E6  B0D8               	btfsc	status,0,c
 14058   0023E8  EFF8  F011         	goto	u6501
 14059   0023EC  EFFA  F011         	goto	u6500
 14060   0023F0                     u6501:
 14061   0023F0  EF1A  F012         	goto	l1059
 14062   0023F4                     u6500:
 14063   0023F4                     l5398:
 14064   0023F4  5003               	movf	fputc@fp^0,w,c
 14065   0023F6  6ED9               	movwf	fsr2l,c
 14066   0023F8  6ADA               	clrf	fsr2h,c
 14067   0023FA  0E02               	movlw	2
 14068   0023FC  26D9               	addwf	fsr2l,f,c
 14069   0023FE  CFDE F004          	movff	postinc2,??_fputc
 14070   002402  CFDD F005          	movff	postdec2,??_fputc+1
 14071   002406  5003               	movf	fputc@fp^0,w,c
 14072   002408  6ED9               	movwf	fsr2l,c
 14073   00240A  6ADA               	clrf	fsr2h,c
 14074   00240C  CFDE F006          	movff	postinc2,??_fputc+2
 14075   002410  CFDD F007          	movff	postdec2,??_fputc+3
 14076   002414  5004               	movf	??_fputc^0,w,c
 14077   002416  2406               	addwf	(??_fputc+2)^0,w,c
 14078   002418  6ED9               	movwf	fsr2l,c
 14079   00241A  5005               	movf	(??_fputc+1)^0,w,c
 14080   00241C  2007               	addwfc	(??_fputc+3)^0,w,c
 14081   00241E  6EDA               	movwf	fsr2h,c
 14082   002420  C001  FFDF         	movff	fputc@c,indf2
 14083   002424  5003               	movf	fputc@fp^0,w,c
 14084   002426  6ED9               	movwf	fsr2l,c
 14085   002428  6ADA               	clrf	fsr2h,c
 14086   00242A  0E02               	movlw	2
 14087   00242C  26D9               	addwf	fsr2l,f,c
 14088   00242E  2ADE               	incf	postinc2,f,c
 14089   002430  0E00               	movlw	0
 14090   002432  22DD               	addwfc	postdec2,f,c
 14091   002434                     l1059:
 14092   002434  0012               	return		;funcret
 14093   002436                     __end_of_fputc:
 14094                           	callstack 0
 14095                           
 14096 ;; *************** function _putch *****************
 14097 ;; Defined at:
 14098 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 14099 ;; Parameters:    Size  Location     Type
 14100 ;;  c               1    wreg     unsigned char 
 14101 ;; Auto vars:     Size  Location     Type
 14102 ;;  c               1    0[COMRAM] unsigned char 
 14103 ;; Return value:  Size  Location     Type
 14104 ;;                  1    wreg      void 
 14105 ;; Registers used:
 14106 ;;		wreg
 14107 ;; Tracked objects:
 14108 ;;		On entry : 0/0
 14109 ;;		On exit  : 0/0
 14110 ;;		Unchanged: 0/0
 14111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14112 ;;      Params:         0       0       0       0       0       0       0       0       0
 14113 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14114 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14115 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14116 ;;Total ram usage:        0 bytes
 14117 ;; Hardware stack levels used: 1
 14118 ;; This function calls:
 14119 ;;		Nothing
 14120 ;; This function is called by:
 14121 ;;		_fputc
 14122 ;; This function uses a non-reentrant model
 14123 ;;
 14124                           
 14125                           	psect	text35
 14126   001AB2                     __ptext35:
 14127                           	callstack 0
 14128   001AB2                     _putch:
 14129                           	callstack 25
 14130   001AB2  0012               	return		;funcret
 14131   001AB4                     __end_of_putch:
 14132                           	callstack 0
 14133                           
 14134 ;; *************** function _abs *****************
 14135 ;; Defined at:
 14136 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 14137 ;; Parameters:    Size  Location     Type
 14138 ;;  a               2    6[COMRAM] int 
 14139 ;; Auto vars:     Size  Location     Type
 14140 ;;		None
 14141 ;; Return value:  Size  Location     Type
 14142 ;;                  2    6[COMRAM] int 
 14143 ;; Registers used:
 14144 ;;		wreg, status,2, status,0
 14145 ;; Tracked objects:
 14146 ;;		On entry : 0/0
 14147 ;;		On exit  : 0/0
 14148 ;;		Unchanged: 0/0
 14149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14150 ;;      Params:         2       0       0       0       0       0       0       0       0
 14151 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14152 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14153 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14154 ;;Total ram usage:        4 bytes
 14155 ;; Hardware stack levels used: 1
 14156 ;; This function calls:
 14157 ;;		Nothing
 14158 ;; This function is called by:
 14159 ;;		_dtoa
 14160 ;; This function uses a non-reentrant model
 14161 ;;
 14162                           
 14163                           	psect	text36
 14164   001B20                     __ptext36:
 14165                           	callstack 0
 14166   001B20                     _abs:
 14167                           	callstack 25
 14168   001B20  BE08               	btfsc	(abs@a+1)^0,7,c
 14169   001B22  EF95  F00D         	goto	u7631
 14170   001B26  EF97  F00D         	goto	u7630
 14171   001B2A                     u7631:
 14172   001B2A  EF9D  F00D         	goto	l1018
 14173   001B2E                     u7630:
 14174   001B2E  C007  F007         	movff	abs@a,?_abs
 14175   001B32  C008  F008         	movff	abs@a+1,?_abs+1
 14176   001B36  EFA9  F00D         	goto	l1021
 14177   001B3A                     l1018:
 14178   001B3A  C007  F009         	movff	abs@a,??_abs
 14179   001B3E  C008  F00A         	movff	abs@a+1,??_abs+1
 14180   001B42  1E09               	comf	??_abs^0,f,c
 14181   001B44  1E0A               	comf	(??_abs+1)^0,f,c
 14182   001B46  4A09               	infsnz	??_abs^0,f,c
 14183   001B48  2A0A               	incf	(??_abs+1)^0,f,c
 14184   001B4A  C009  F007         	movff	??_abs,?_abs
 14185   001B4E  C00A  F008         	movff	??_abs+1,?_abs+1
 14186   001B52                     l1021:
 14187   001B52  0012               	return		;funcret
 14188   001B54                     __end_of_abs:
 14189                           	callstack 0
 14190                           
 14191 ;; *************** function ___awmod *****************
 14192 ;; Defined at:
 14193 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 14194 ;; Parameters:    Size  Location     Type
 14195 ;;  dividend        2    0[COMRAM] int 
 14196 ;;  divisor         2    2[COMRAM] int 
 14197 ;; Auto vars:     Size  Location     Type
 14198 ;;  sign            1    5[COMRAM] unsigned char 
 14199 ;;  counter         1    4[COMRAM] unsigned char 
 14200 ;; Return value:  Size  Location     Type
 14201 ;;                  2    0[COMRAM] int 
 14202 ;; Registers used:
 14203 ;;		wreg, status,2, status,0
 14204 ;; Tracked objects:
 14205 ;;		On entry : 0/0
 14206 ;;		On exit  : 0/0
 14207 ;;		Unchanged: 0/0
 14208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14209 ;;      Params:         4       0       0       0       0       0       0       0       0
 14210 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14211 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14212 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14213 ;;Total ram usage:        6 bytes
 14214 ;; Hardware stack levels used: 1
 14215 ;; This function calls:
 14216 ;;		Nothing
 14217 ;; This function is called by:
 14218 ;;		_Read_MQ2_Sensor
 14219 ;;		_dtoa
 14220 ;; This function uses a non-reentrant model
 14221 ;;
 14222                           
 14223                           	psect	text37
 14224   00221C                     __ptext37:
 14225                           	callstack 0
 14226   00221C                     ___awmod:
 14227                           	callstack 25
 14228   00221C  6A06               	clrf	___awmod@sign^0,c
 14229   00221E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 14230   002220  EF16  F011         	goto	u7390
 14231   002224  EF14  F011         	goto	u7391
 14232   002228                     u7391:
 14233   002228  EF1C  F011         	goto	l5926
 14234   00222C                     u7390:
 14235   00222C  6C01               	negf	___awmod@dividend^0,c
 14236   00222E  1E02               	comf	(___awmod@dividend+1)^0,f,c
 14237   002230  B0D8               	btfsc	status,0,c
 14238   002232  2A02               	incf	(___awmod@dividend+1)^0,f,c
 14239   002234  0E01               	movlw	1
 14240   002236  6E06               	movwf	___awmod@sign^0,c
 14241   002238                     l5926:
 14242   002238  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 14243   00223A  EF23  F011         	goto	u7400
 14244   00223E  EF21  F011         	goto	u7401
 14245   002242                     u7401:
 14246   002242  EF27  F011         	goto	l5930
 14247   002246                     u7400:
 14248   002246  6C03               	negf	___awmod@divisor^0,c
 14249   002248  1E04               	comf	(___awmod@divisor+1)^0,f,c
 14250   00224A  B0D8               	btfsc	status,0,c
 14251   00224C  2A04               	incf	(___awmod@divisor+1)^0,f,c
 14252   00224E                     l5930:
 14253   00224E  5003               	movf	___awmod@divisor^0,w,c
 14254   002250  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 14255   002252  B4D8               	btfsc	status,2,c
 14256   002254  EF2E  F011         	goto	u7411
 14257   002258  EF30  F011         	goto	u7410
 14258   00225C                     u7411:
 14259   00225C  EF54  F011         	goto	l5946
 14260   002260                     u7410:
 14261   002260  0E01               	movlw	1
 14262   002262  6E05               	movwf	___awmod@counter^0,c
 14263   002264  EF38  F011         	goto	l5936
 14264   002268                     l5934:
 14265   002268  90D8               	bcf	status,0,c
 14266   00226A  3603               	rlcf	___awmod@divisor^0,f,c
 14267   00226C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 14268   00226E  2A05               	incf	___awmod@counter^0,f,c
 14269   002270                     l5936:
 14270   002270  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 14271   002272  EF3D  F011         	goto	u7421
 14272   002276  EF3F  F011         	goto	u7420
 14273   00227A                     u7421:
 14274   00227A  EF34  F011         	goto	l5934
 14275   00227E                     u7420:
 14276   00227E                     l5938:
 14277   00227E  5003               	movf	___awmod@divisor^0,w,c
 14278   002280  5C01               	subwf	___awmod@dividend^0,w,c
 14279   002282  5004               	movf	(___awmod@divisor+1)^0,w,c
 14280   002284  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 14281   002286  A0D8               	btfss	status,0,c
 14282   002288  EF48  F011         	goto	u7431
 14283   00228C  EF4A  F011         	goto	u7430
 14284   002290                     u7431:
 14285   002290  EF4E  F011         	goto	l5942
 14286   002294                     u7430:
 14287   002294  5003               	movf	___awmod@divisor^0,w,c
 14288   002296  5E01               	subwf	___awmod@dividend^0,f,c
 14289   002298  5004               	movf	(___awmod@divisor+1)^0,w,c
 14290   00229A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 14291   00229C                     l5942:
 14292   00229C  90D8               	bcf	status,0,c
 14293   00229E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 14294   0022A0  3203               	rrcf	___awmod@divisor^0,f,c
 14295   0022A2  2E05               	decfsz	___awmod@counter^0,f,c
 14296   0022A4  EF3F  F011         	goto	l5938
 14297   0022A8                     l5946:
 14298   0022A8  5006               	movf	___awmod@sign^0,w,c
 14299   0022AA  B4D8               	btfsc	status,2,c
 14300   0022AC  EF5A  F011         	goto	u7441
 14301   0022B0  EF5C  F011         	goto	u7440
 14302   0022B4                     u7441:
 14303   0022B4  EF60  F011         	goto	l5950
 14304   0022B8                     u7440:
 14305   0022B8  6C01               	negf	___awmod@dividend^0,c
 14306   0022BA  1E02               	comf	(___awmod@dividend+1)^0,f,c
 14307   0022BC  B0D8               	btfsc	status,0,c
 14308   0022BE  2A02               	incf	(___awmod@dividend+1)^0,f,c
 14309   0022C0                     l5950:
 14310   0022C0  C001  F001         	movff	___awmod@dividend,?___awmod
 14311   0022C4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 14312   0022C8  0012               	return		;funcret
 14313   0022CA                     __end_of___awmod:
 14314                           	callstack 0
 14315                           
 14316 ;; *************** function ___awdiv *****************
 14317 ;; Defined at:
 14318 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 14319 ;; Parameters:    Size  Location     Type
 14320 ;;  dividend        2    0[COMRAM] int 
 14321 ;;  divisor         2    2[COMRAM] int 
 14322 ;; Auto vars:     Size  Location     Type
 14323 ;;  quotient        2    6[COMRAM] int 
 14324 ;;  sign            1    5[COMRAM] unsigned char 
 14325 ;;  counter         1    4[COMRAM] unsigned char 
 14326 ;; Return value:  Size  Location     Type
 14327 ;;                  2    0[COMRAM] int 
 14328 ;; Registers used:
 14329 ;;		wreg, status,2, status,0
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14335 ;;      Params:         4       0       0       0       0       0       0       0       0
 14336 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14337 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14338 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14339 ;;Total ram usage:        8 bytes
 14340 ;; Hardware stack levels used: 1
 14341 ;; This function calls:
 14342 ;;		Nothing
 14343 ;; This function is called by:
 14344 ;;		_dtoa
 14345 ;; This function uses a non-reentrant model
 14346 ;;
 14347                           
 14348                           	psect	text38
 14349   002436                     __ptext38:
 14350                           	callstack 0
 14351   002436                     ___awdiv:
 14352                           	callstack 25
 14353   002436  6A06               	clrf	___awdiv@sign^0,c
 14354   002438  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 14355   00243A  EF23  F012         	goto	u7330
 14356   00243E  EF21  F012         	goto	u7331
 14357   002442                     u7331:
 14358   002442  EF29  F012         	goto	l5882
 14359   002446                     u7330:
 14360   002446  6C03               	negf	___awdiv@divisor^0,c
 14361   002448  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 14362   00244A  B0D8               	btfsc	status,0,c
 14363   00244C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 14364   00244E  0E01               	movlw	1
 14365   002450  6E06               	movwf	___awdiv@sign^0,c
 14366   002452                     l5882:
 14367   002452  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 14368   002454  EF30  F012         	goto	u7340
 14369   002458  EF2E  F012         	goto	u7341
 14370   00245C                     u7341:
 14371   00245C  EF36  F012         	goto	l5888
 14372   002460                     u7340:
 14373   002460  6C01               	negf	___awdiv@dividend^0,c
 14374   002462  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 14375   002464  B0D8               	btfsc	status,0,c
 14376   002466  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 14377   002468  0E01               	movlw	1
 14378   00246A  1A06               	xorwf	___awdiv@sign^0,f,c
 14379   00246C                     l5888:
 14380   00246C  0E00               	movlw	0
 14381   00246E  6E08               	movwf	(___awdiv@quotient+1)^0,c
 14382   002470  0E00               	movlw	0
 14383   002472  6E07               	movwf	___awdiv@quotient^0,c
 14384   002474  5003               	movf	___awdiv@divisor^0,w,c
 14385   002476  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 14386   002478  B4D8               	btfsc	status,2,c
 14387   00247A  EF41  F012         	goto	u7351
 14388   00247E  EF43  F012         	goto	u7350
 14389   002482                     u7351:
 14390   002482  EF6B  F012         	goto	l5910
 14391   002486                     u7350:
 14392   002486  0E01               	movlw	1
 14393   002488  6E05               	movwf	___awdiv@counter^0,c
 14394   00248A  EF4B  F012         	goto	l5896
 14395   00248E                     l5894:
 14396   00248E  90D8               	bcf	status,0,c
 14397   002490  3603               	rlcf	___awdiv@divisor^0,f,c
 14398   002492  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 14399   002494  2A05               	incf	___awdiv@counter^0,f,c
 14400   002496                     l5896:
 14401   002496  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 14402   002498  EF50  F012         	goto	u7361
 14403   00249C  EF52  F012         	goto	u7360
 14404   0024A0                     u7361:
 14405   0024A0  EF47  F012         	goto	l5894
 14406   0024A4                     u7360:
 14407   0024A4                     l5898:
 14408   0024A4  90D8               	bcf	status,0,c
 14409   0024A6  3607               	rlcf	___awdiv@quotient^0,f,c
 14410   0024A8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 14411   0024AA  5003               	movf	___awdiv@divisor^0,w,c
 14412   0024AC  5C01               	subwf	___awdiv@dividend^0,w,c
 14413   0024AE  5004               	movf	(___awdiv@divisor+1)^0,w,c
 14414   0024B0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 14415   0024B2  A0D8               	btfss	status,0,c
 14416   0024B4  EF5E  F012         	goto	u7371
 14417   0024B8  EF60  F012         	goto	u7370
 14418   0024BC                     u7371:
 14419   0024BC  EF65  F012         	goto	l5906
 14420   0024C0                     u7370:
 14421   0024C0  5003               	movf	___awdiv@divisor^0,w,c
 14422   0024C2  5E01               	subwf	___awdiv@dividend^0,f,c
 14423   0024C4  5004               	movf	(___awdiv@divisor+1)^0,w,c
 14424   0024C6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 14425   0024C8  8007               	bsf	___awdiv@quotient^0,0,c
 14426   0024CA                     l5906:
 14427   0024CA  90D8               	bcf	status,0,c
 14428   0024CC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 14429   0024CE  3203               	rrcf	___awdiv@divisor^0,f,c
 14430   0024D0  2E05               	decfsz	___awdiv@counter^0,f,c
 14431   0024D2  EF52  F012         	goto	l5898
 14432   0024D6                     l5910:
 14433   0024D6  5006               	movf	___awdiv@sign^0,w,c
 14434   0024D8  B4D8               	btfsc	status,2,c
 14435   0024DA  EF71  F012         	goto	u7381
 14436   0024DE  EF73  F012         	goto	u7380
 14437   0024E2                     u7381:
 14438   0024E2  EF77  F012         	goto	l5914
 14439   0024E6                     u7380:
 14440   0024E6  6C07               	negf	___awdiv@quotient^0,c
 14441   0024E8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 14442   0024EA  B0D8               	btfsc	status,0,c
 14443   0024EC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 14444   0024EE                     l5914:
 14445   0024EE  C007  F001         	movff	___awdiv@quotient,?___awdiv
 14446   0024F2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 14447   0024F6  0012               	return		;funcret
 14448   0024F8                     __end_of___awdiv:
 14449                           	callstack 0
 14450                           
 14451 ;; *************** function ___xxtofl *****************
 14452 ;; Defined at:
 14453 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 14454 ;; Parameters:    Size  Location     Type
 14455 ;;  sign            1    wreg     unsigned char 
 14456 ;;  val             4    0[COMRAM] long 
 14457 ;; Auto vars:     Size  Location     Type
 14458 ;;  sign            1    8[COMRAM] unsigned char 
 14459 ;;  arg             4   10[COMRAM] unsigned long 
 14460 ;;  exp             1    9[COMRAM] unsigned char 
 14461 ;; Return value:  Size  Location     Type
 14462 ;;                  4    0[COMRAM] unsigned char 
 14463 ;; Registers used:
 14464 ;;		wreg, status,2, status,0
 14465 ;; Tracked objects:
 14466 ;;		On entry : 0/0
 14467 ;;		On exit  : 0/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14470 ;;      Params:         4       0       0       0       0       0       0       0       0
 14471 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14472 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14473 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14474 ;;Total ram usage:       14 bytes
 14475 ;; Hardware stack levels used: 1
 14476 ;; This function calls:
 14477 ;;		Nothing
 14478 ;; This function is called by:
 14479 ;;		_Calibrate_Flame_Sensor
 14480 ;;		_Calibrate_MQ2
 14481 ;;		_Read_LM35
 14482 ;;		_Read_Flame_Sensor
 14483 ;;		_Read_MQ2_Sensor
 14484 ;;		_powf
 14485 ;; This function uses a non-reentrant model
 14486 ;;
 14487                           
 14488                           	psect	text39
 14489   002C74                     __ptext39:
 14490                           	callstack 0
 14491   002C74                     ___xxtofl:
 14492                           	callstack 28
 14493                           
 14494                           ;incstack = 0
 14495                           ;___xxtofl@sign stored from wreg
 14496   002C74  6E09               	movwf	___xxtofl@sign^0,c
 14497   002C76  5009               	movf	___xxtofl@sign^0,w,c
 14498   002C78  B4D8               	btfsc	status,2,c
 14499   002C7A  EF41  F016         	goto	u8411
 14500   002C7E  EF43  F016         	goto	u8410
 14501   002C82                     u8411:
 14502   002C82  EF65  F016         	goto	l839
 14503   002C86                     u8410:
 14504   002C86  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 14505   002C88  EF4A  F016         	goto	u8420
 14506   002C8C  EF48  F016         	goto	u8421
 14507   002C90                     u8421:
 14508   002C90  EF65  F016         	goto	l839
 14509   002C94                     u8420:
 14510   002C94  C001  F005         	movff	___xxtofl@val,??___xxtofl
 14511   002C98  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 14512   002C9C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 14513   002CA0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 14514   002CA4  1E05               	comf	??___xxtofl^0,f,c
 14515   002CA6  1E06               	comf	(??___xxtofl+1)^0,f,c
 14516   002CA8  1E07               	comf	(??___xxtofl+2)^0,f,c
 14517   002CAA  1E08               	comf	(??___xxtofl+3)^0,f,c
 14518   002CAC  2A05               	incf	??___xxtofl^0,f,c
 14519   002CAE  0E00               	movlw	0
 14520   002CB0  2206               	addwfc	(??___xxtofl+1)^0,f,c
 14521   002CB2  2207               	addwfc	(??___xxtofl+2)^0,f,c
 14522   002CB4  2208               	addwfc	(??___xxtofl+3)^0,f,c
 14523   002CB6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 14524   002CBA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 14525   002CBE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 14526   002CC2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 14527   002CC6  EF6D  F016         	goto	l6554
 14528   002CCA                     l839:
 14529   002CCA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 14530   002CCE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14531   002CD2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14532   002CD6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14533   002CDA                     l6554:
 14534   002CDA  5001               	movf	___xxtofl@val^0,w,c
 14535   002CDC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 14536   002CDE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 14537   002CE0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 14538   002CE2  A4D8               	btfss	status,2,c
 14539   002CE4  EF76  F016         	goto	u8431
 14540   002CE8  EF78  F016         	goto	u8430
 14541   002CEC                     u8431:
 14542   002CEC  EF82  F016         	goto	l6560
 14543   002CF0                     u8430:
 14544   002CF0  0E00               	movlw	0
 14545   002CF2  6E01               	movwf	?___xxtofl^0,c
 14546   002CF4  0E00               	movlw	0
 14547   002CF6  6E02               	movwf	(?___xxtofl+1)^0,c
 14548   002CF8  0E00               	movlw	0
 14549   002CFA  6E03               	movwf	(?___xxtofl+2)^0,c
 14550   002CFC  0E00               	movlw	0
 14551   002CFE  6E04               	movwf	(?___xxtofl+3)^0,c
 14552   002D00  EF13  F017         	goto	l842
 14553   002D04                     l6560:
 14554   002D04  0E96               	movlw	150
 14555   002D06  6E0A               	movwf	___xxtofl@exp^0,c
 14556   002D08  EF8C  F016         	goto	l6564
 14557   002D0C                     l6562:
 14558   002D0C  2A0A               	incf	___xxtofl@exp^0,f,c
 14559   002D0E  90D8               	bcf	status,0,c
 14560   002D10  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 14561   002D12  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 14562   002D14  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 14563   002D16  320B               	rrcf	___xxtofl@arg^0,f,c
 14564   002D18                     l6564:
 14565   002D18  0E00               	movlw	0
 14566   002D1A  140B               	andwf	___xxtofl@arg^0,w,c
 14567   002D1C  6E05               	movwf	??___xxtofl^0,c
 14568   002D1E  0E00               	movlw	0
 14569   002D20  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 14570   002D22  6E06               	movwf	(??___xxtofl+1)^0,c
 14571   002D24  0E00               	movlw	0
 14572   002D26  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 14573   002D28  6E07               	movwf	(??___xxtofl+2)^0,c
 14574   002D2A  0EFE               	movlw	254
 14575   002D2C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 14576   002D2E  6E08               	movwf	(??___xxtofl+3)^0,c
 14577   002D30  5005               	movf	??___xxtofl^0,w,c
 14578   002D32  1006               	iorwf	(??___xxtofl+1)^0,w,c
 14579   002D34  1007               	iorwf	(??___xxtofl+2)^0,w,c
 14580   002D36  1008               	iorwf	(??___xxtofl+3)^0,w,c
 14581   002D38  A4D8               	btfss	status,2,c
 14582   002D3A  EFA1  F016         	goto	u8441
 14583   002D3E  EFA3  F016         	goto	u8440
 14584   002D42                     u8441:
 14585   002D42  EF86  F016         	goto	l6562
 14586   002D46                     u8440:
 14587   002D46  EFB1  F016         	goto	l846
 14588   002D4A                     l6566:
 14589   002D4A  2A0A               	incf	___xxtofl@exp^0,f,c
 14590   002D4C  0E01               	movlw	1
 14591   002D4E  260B               	addwf	___xxtofl@arg^0,f,c
 14592   002D50  0E00               	movlw	0
 14593   002D52  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 14594   002D54  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 14595   002D56  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 14596   002D58  90D8               	bcf	status,0,c
 14597   002D5A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 14598   002D5C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 14599   002D5E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 14600   002D60  320B               	rrcf	___xxtofl@arg^0,f,c
 14601   002D62                     l846:
 14602   002D62  0E00               	movlw	0
 14603   002D64  140B               	andwf	___xxtofl@arg^0,w,c
 14604   002D66  6E05               	movwf	??___xxtofl^0,c
 14605   002D68  0E00               	movlw	0
 14606   002D6A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 14607   002D6C  6E06               	movwf	(??___xxtofl+1)^0,c
 14608   002D6E  0E00               	movlw	0
 14609   002D70  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 14610   002D72  6E07               	movwf	(??___xxtofl+2)^0,c
 14611   002D74  0EFF               	movlw	255
 14612   002D76  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 14613   002D78  6E08               	movwf	(??___xxtofl+3)^0,c
 14614   002D7A  5005               	movf	??___xxtofl^0,w,c
 14615   002D7C  1006               	iorwf	(??___xxtofl+1)^0,w,c
 14616   002D7E  1007               	iorwf	(??___xxtofl+2)^0,w,c
 14617   002D80  1008               	iorwf	(??___xxtofl+3)^0,w,c
 14618   002D82  A4D8               	btfss	status,2,c
 14619   002D84  EFC6  F016         	goto	u8451
 14620   002D88  EFC8  F016         	goto	u8450
 14621   002D8C                     u8451:
 14622   002D8C  EFA5  F016         	goto	l6566
 14623   002D90                     u8450:
 14624   002D90  EFD0  F016         	goto	l6574
 14625   002D94                     l6572:
 14626   002D94  060A               	decf	___xxtofl@exp^0,f,c
 14627   002D96  90D8               	bcf	status,0,c
 14628   002D98  360B               	rlcf	___xxtofl@arg^0,f,c
 14629   002D9A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 14630   002D9C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 14631   002D9E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 14632   002DA0                     l6574:
 14633   002DA0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 14634   002DA2  EFD5  F016         	goto	u8461
 14635   002DA6  EFD7  F016         	goto	u8460
 14636   002DAA                     u8461:
 14637   002DAA  EFDF  F016         	goto	l853
 14638   002DAE                     u8460:
 14639   002DAE  0E02               	movlw	2
 14640   002DB0  600A               	cpfslt	___xxtofl@exp^0,c
 14641   002DB2  EFDD  F016         	goto	u8471
 14642   002DB6  EFDF  F016         	goto	u8470
 14643   002DBA                     u8471:
 14644   002DBA  EFCA  F016         	goto	l6572
 14645   002DBE                     u8470:
 14646   002DBE                     l853:
 14647   002DBE  B00A               	btfsc	___xxtofl@exp^0,0,c
 14648   002DC0  EFE4  F016         	goto	u8481
 14649   002DC4  EFE6  F016         	goto	u8480
 14650   002DC8                     u8481:
 14651   002DC8  EFE7  F016         	goto	l6580
 14652   002DCC                     u8480:
 14653   002DCC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 14654   002DCE                     l6580:
 14655   002DCE  90D8               	bcf	status,0,c
 14656   002DD0  320A               	rrcf	___xxtofl@exp^0,f,c
 14657   002DD2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14658   002DD6  6A06               	clrf	(??___xxtofl+1)^0,c
 14659   002DD8  6A07               	clrf	(??___xxtofl+2)^0,c
 14660   002DDA  6A08               	clrf	(??___xxtofl+3)^0,c
 14661   002DDC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14662   002DE0  6A07               	clrf	(??___xxtofl+2)^0,c
 14663   002DE2  6A06               	clrf	(??___xxtofl+1)^0,c
 14664   002DE4  6A05               	clrf	??___xxtofl^0,c
 14665   002DE6  5005               	movf	??___xxtofl^0,w,c
 14666   002DE8  120B               	iorwf	___xxtofl@arg^0,f,c
 14667   002DEA  5006               	movf	(??___xxtofl+1)^0,w,c
 14668   002DEC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 14669   002DEE  5007               	movf	(??___xxtofl+2)^0,w,c
 14670   002DF0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 14671   002DF2  5008               	movf	(??___xxtofl+3)^0,w,c
 14672   002DF4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 14673   002DF6  5009               	movf	___xxtofl@sign^0,w,c
 14674   002DF8  B4D8               	btfsc	status,2,c
 14675   002DFA  EF01  F017         	goto	u8491
 14676   002DFE  EF03  F017         	goto	u8490
 14677   002E02                     u8491:
 14678   002E02  EF0B  F017         	goto	l6590
 14679   002E06                     u8490:
 14680   002E06  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 14681   002E08  EF0A  F017         	goto	u8500
 14682   002E0C  EF08  F017         	goto	u8501
 14683   002E10                     u8501:
 14684   002E10  EF0B  F017         	goto	l6590
 14685   002E14                     u8500:
 14686   002E14  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 14687   002E16                     l6590:
 14688   002E16  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14689   002E1A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14690   002E1E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14691   002E22  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14692   002E26                     l842:
 14693   002E26  0012               	return		;funcret
 14694   002E28                     __end_of___xxtofl:
 14695                           	callstack 0
 14696                           
 14697 ;; *************** function _UART_Write_Text *****************
 14698 ;; Defined at:
 14699 ;;		line 326 in file "newmain.c"
 14700 ;; Parameters:    Size  Location     Type
 14701 ;;  text            2    1[COMRAM] PTR unsigned char 
 14702 ;;		 -> STR_11(41), STR_10(54), STR_9(53), STR_8(49), 
 14703 ;;		 -> STR_7(3), STR_6(28), Send_Sensor_Data@buffer(250), Calibrate_MQ2@cal_msg(30), 
 14704 ;;		 -> STR_3(33), Calibrate_Flame_Sensor@cal_msg(30), STR_1(45), 
 14705 ;; Auto vars:     Size  Location     Type
 14706 ;;		None
 14707 ;; Return value:  Size  Location     Type
 14708 ;;                  1    wreg      void 
 14709 ;; Registers used:
 14710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14711 ;; Tracked objects:
 14712 ;;		On entry : 0/0
 14713 ;;		On exit  : 0/0
 14714 ;;		Unchanged: 0/0
 14715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14716 ;;      Params:         2       0       0       0       0       0       0       0       0
 14717 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14718 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14719 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14720 ;;Total ram usage:        2 bytes
 14721 ;; Hardware stack levels used: 1
 14722 ;; Hardware stack levels required when called: 1
 14723 ;; This function calls:
 14724 ;;		_UART_Write
 14725 ;; This function is called by:
 14726 ;;		_Calibrate_Flame_Sensor
 14727 ;;		_Calibrate_MQ2
 14728 ;;		_Send_Sensor_Data
 14729 ;;		_main
 14730 ;; This function uses a non-reentrant model
 14731 ;;
 14732                           
 14733                           	psect	text40
 14734   001E08                     __ptext40:
 14735                           	callstack 0
 14736   001E08                     _UART_Write_Text:
 14737                           	callstack 29
 14738   001E08                     
 14739                           ;newmain.c: 327:     while(*text) {
 14740   001E08  EF1A  F00F         	goto	l6512
 14741   001E0C                     l6508:
 14742                           
 14743                           ;newmain.c: 328:         UART_Write(*text++);
 14744   001E0C  C002  FFF6         	movff	UART_Write_Text@text,tblptrl
 14745   001E10  C003  FFF7         	movff	UART_Write_Text@text+1,tblptrh
 14746   001E14  6AF8               	clrf	tblptru,c
 14747   001E16  0E07               	movlw	(high __ramtop+-1)
 14748   001E18  64F7               	cpfsgt	tblptrh,c
 14749   001E1A  D003               	bra	u8357
 14750   001E1C  0008               	tblrd		*
 14751   001E1E  50F5               	movf	tablat,w,c
 14752   001E20  D005               	bra	u8350
 14753   001E22                     u8357:
 14754   001E22  CFF6 FFE1          	movff	tblptrl,fsr1l
 14755   001E26  CFF7 FFE2          	movff	tblptrh,fsr1h
 14756   001E2A  50E7               	movf	indf1,w,c
 14757   001E2C                     u8350:
 14758   001E2C  EC79  F00D         	call	_UART_Write
 14759   001E30  4A02               	infsnz	UART_Write_Text@text^0,f,c
 14760   001E32  2A03               	incf	(UART_Write_Text@text+1)^0,f,c
 14761   001E34                     l6512:
 14762                           
 14763                           ;newmain.c: 327:     while(*text) {
 14764   001E34  C002  FFF6         	movff	UART_Write_Text@text,tblptrl
 14765   001E38  C003  FFF7         	movff	UART_Write_Text@text+1,tblptrh
 14766   001E3C  6AF8               	clrf	tblptru,c
 14767   001E3E  0E07               	movlw	(high __ramtop+-1)
 14768   001E40  64F7               	cpfsgt	tblptrh,c
 14769   001E42  D003               	bra	u8367
 14770   001E44  0008               	tblrd		*
 14771   001E46  50F5               	movf	tablat,w,c
 14772   001E48  D005               	bra	u8360
 14773   001E4A                     u8367:
 14774   001E4A  CFF6 FFE1          	movff	tblptrl,fsr1l
 14775   001E4E  CFF7 FFE2          	movff	tblptrh,fsr1h
 14776   001E52  50E7               	movf	indf1,w,c
 14777   001E54                     u8360:
 14778   001E54  0900               	iorlw	0
 14779   001E56  A4D8               	btfss	status,2,c
 14780   001E58  EF30  F00F         	goto	u8371
 14781   001E5C  EF32  F00F         	goto	u8370
 14782   001E60                     u8371:
 14783   001E60  EF06  F00F         	goto	l6508
 14784   001E64                     u8370:
 14785   001E64  0012               	return		;funcret
 14786   001E66                     __end_of_UART_Write_Text:
 14787                           	callstack 0
 14788                           
 14789 ;; *************** function _UART_Write *****************
 14790 ;; Defined at:
 14791 ;;		line 321 in file "newmain.c"
 14792 ;; Parameters:    Size  Location     Type
 14793 ;;  data            1    wreg     unsigned char 
 14794 ;; Auto vars:     Size  Location     Type
 14795 ;;  data            1    0[COMRAM] unsigned char 
 14796 ;; Return value:  Size  Location     Type
 14797 ;;                  1    wreg      void 
 14798 ;; Registers used:
 14799 ;;		wreg
 14800 ;; Tracked objects:
 14801 ;;		On entry : 0/0
 14802 ;;		On exit  : 0/0
 14803 ;;		Unchanged: 0/0
 14804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14805 ;;      Params:         0       0       0       0       0       0       0       0       0
 14806 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14807 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14808 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14809 ;;Total ram usage:        1 bytes
 14810 ;; Hardware stack levels used: 1
 14811 ;; This function calls:
 14812 ;;		Nothing
 14813 ;; This function is called by:
 14814 ;;		_UART_Write_Text
 14815 ;;		_main
 14816 ;; This function uses a non-reentrant model
 14817 ;;
 14818                           
 14819                           	psect	text41
 14820   001AF2                     __ptext41:
 14821                           	callstack 0
 14822   001AF2                     _UART_Write:
 14823                           	callstack 29
 14824                           
 14825                           ;incstack = 0
 14826                           ;UART_Write@data stored from wreg
 14827   001AF2  6E01               	movwf	UART_Write@data^0,c
 14828   001AF4                     l140:
 14829   001AF4  A2AC               	btfss	172,1,c	;volatile
 14830   001AF6  EF7F  F00D         	goto	u8321
 14831   001AFA  EF81  F00D         	goto	u8320
 14832   001AFE                     u8321:
 14833   001AFE  EF7A  F00D         	goto	l140
 14834   001B02                     u8320:
 14835   001B02                     
 14836                           ;newmain.c: 323:     TXREG = data;
 14837   001B02  C001  FFAD         	movff	UART_Write@data,4013	;volatile
 14838   001B06  0012               	return		;funcret
 14839   001B08                     __end_of_UART_Write:
 14840                           	callstack 0
 14841                           
 14842 ;; *************** function _ADC_Read *****************
 14843 ;; Defined at:
 14844 ;;		line 106 in file "newmain.c"
 14845 ;; Parameters:    Size  Location     Type
 14846 ;;  channel         1    wreg     unsigned char 
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;  channel         1    4[COMRAM] unsigned char 
 14849 ;; Return value:  Size  Location     Type
 14850 ;;                  2    0[COMRAM] unsigned int 
 14851 ;; Registers used:
 14852 ;;		wreg, status,2, status,0
 14853 ;; Tracked objects:
 14854 ;;		On entry : 0/0
 14855 ;;		On exit  : 0/0
 14856 ;;		Unchanged: 0/0
 14857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14858 ;;      Params:         2       0       0       0       0       0       0       0       0
 14859 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14860 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14861 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14862 ;;Total ram usage:        5 bytes
 14863 ;; Hardware stack levels used: 1
 14864 ;; This function calls:
 14865 ;;		Nothing
 14866 ;; This function is called by:
 14867 ;;		_Calibrate_Flame_Sensor
 14868 ;;		_Calibrate_MQ2
 14869 ;; This function uses a non-reentrant model
 14870 ;;
 14871                           
 14872                           	psect	text42
 14873   001C04                     __ptext42:
 14874                           	callstack 0
 14875   001C04                     _ADC_Read:
 14876                           	callstack 28
 14877                           
 14878                           ;incstack = 0
 14879                           ;ADC_Read@channel stored from wreg
 14880   001C04  6E05               	movwf	ADC_Read@channel^0,c
 14881   001C06                     
 14882                           ;newmain.c: 107:     ADCON0bits.CHS = channel;
 14883   001C06  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
 14884   001C0A  4603               	rlncf	??_ADC_Read^0,f,c
 14885   001C0C  4603               	rlncf	??_ADC_Read^0,f,c
 14886   001C0E  50C2               	movf	194,w,c	;volatile
 14887   001C10  1803               	xorwf	??_ADC_Read^0,w,c
 14888   001C12  0BC3               	andlw	-61
 14889   001C14  1803               	xorwf	??_ADC_Read^0,w,c
 14890   001C16  6EC2               	movwf	194,c	;volatile
 14891   001C18                     
 14892                           ;newmain.c: 108:     _delay((unsigned long)((20)*(8000000/4000000.0)));
 14893   001C18  0E0D               	movlw	13
 14894   001C1A                     u9727:
 14895   001C1A  2EE8               	decfsz	wreg,f,c
 14896   001C1C  D7FE               	bra	u9727
 14897   001C1E  0000               	nop	
 14898   001C20                     
 14899                           ;newmain.c: 109:     ADCON0bits.GO = 1;
 14900   001C20  82C2               	bsf	194,1,c	;volatile
 14901   001C22                     l78:
 14902   001C22  B2C2               	btfsc	194,1,c	;volatile
 14903   001C24  EF16  F00E         	goto	u8341
 14904   001C28  EF18  F00E         	goto	u8340
 14905   001C2C                     u8341:
 14906   001C2C  EF11  F00E         	goto	l78
 14907   001C30                     u8340:
 14908   001C30                     
 14909                           ;newmain.c: 111:     return (ADRESH << 8) | ADRESL;
 14910   001C30  50C3               	movf	195,w,c	;volatile
 14911   001C32  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
 14912   001C36  6A04               	clrf	(??_ADC_Read+1)^0,c
 14913   001C38  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
 14914   001C3C  6A03               	clrf	??_ADC_Read^0,c
 14915   001C3E  1003               	iorwf	??_ADC_Read^0,w,c
 14916   001C40  6E01               	movwf	?_ADC_Read^0,c
 14917   001C42  5004               	movf	(??_ADC_Read+1)^0,w,c
 14918   001C44  6E02               	movwf	(?_ADC_Read+1)^0,c
 14919   001C46  0012               	return		;funcret
 14920   001C48                     __end_of_ADC_Read:
 14921                           	callstack 0
 14922                           
 14923 ;; *************** function _ADC_Read_Average *****************
 14924 ;; Defined at:
 14925 ;;		line 120 in file "newmain.c"
 14926 ;; Parameters:    Size  Location     Type
 14927 ;;  channel         1    wreg     unsigned char 
 14928 ;;  samples         1   13[COMRAM] unsigned char 
 14929 ;; Auto vars:     Size  Location     Type
 14930 ;;  channel         1   21[COMRAM] unsigned char 
 14931 ;;  i               1   26[COMRAM] unsigned char 
 14932 ;;  sum             4   22[COMRAM] unsigned long 
 14933 ;; Return value:  Size  Location     Type
 14934 ;;                  2   13[COMRAM] unsigned int 
 14935 ;; Registers used:
 14936 ;;		wreg, status,2, status,0, cstack
 14937 ;; Tracked objects:
 14938 ;;		On entry : 0/0
 14939 ;;		On exit  : 0/0
 14940 ;;		Unchanged: 0/0
 14941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14942 ;;      Params:         2       0       0       0       0       0       0       0       0
 14943 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14944 ;;      Temps:          6       0       0       0       0       0       0       0       0
 14945 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14946 ;;Total ram usage:       14 bytes
 14947 ;; Hardware stack levels used: 1
 14948 ;; Hardware stack levels required when called: 1
 14949 ;; This function calls:
 14950 ;;		___lldiv
 14951 ;; This function is called by:
 14952 ;;		_Read_LM35
 14953 ;;		_Read_Flame_Sensor
 14954 ;;		_Read_MQ2_Sensor
 14955 ;; This function uses a non-reentrant model
 14956 ;;
 14957                           
 14958                           	psect	text43
 14959   00216E                     __ptext43:
 14960                           	callstack 0
 14961   00216E                     _ADC_Read_Average:
 14962                           	callstack 28
 14963                           
 14964                           ;incstack = 0
 14965                           ;ADC_Read_Average@channel stored from wreg
 14966   00216E  6E16               	movwf	ADC_Read_Average@channel^0,c
 14967   002170                     
 14968                           ;newmain.c: 121:     unsigned long sum = 0;
 14969   002170  0E00               	movlw	0
 14970   002172  6E17               	movwf	ADC_Read_Average@sum^0,c
 14971   002174  0E00               	movlw	0
 14972   002176  6E18               	movwf	(ADC_Read_Average@sum+1)^0,c
 14973   002178  0E00               	movlw	0
 14974   00217A  6E19               	movwf	(ADC_Read_Average@sum+2)^0,c
 14975   00217C  0E00               	movlw	0
 14976   00217E  6E1A               	movwf	(ADC_Read_Average@sum+3)^0,c
 14977   002180                     
 14978                           ;newmain.c: 122:     for(unsigned char i = 0; i < samples; i++) {
 14979   002180  6A1B               	clrf	ADC_Read_Average@i^0,c
 14980   002182  EFF1  F010         	goto	l6716
 14981   002186                     l6706:
 14982                           
 14983                           ;newmain.c: 123:         ADCON0bits.CHS = channel;
 14984   002186  C016  F010         	movff	ADC_Read_Average@channel,??_ADC_Read_Average
 14985   00218A  4610               	rlncf	??_ADC_Read_Average^0,f,c
 14986   00218C  4610               	rlncf	??_ADC_Read_Average^0,f,c
 14987   00218E  50C2               	movf	194,w,c	;volatile
 14988   002190  1810               	xorwf	??_ADC_Read_Average^0,w,c
 14989   002192  0BC3               	andlw	-61
 14990   002194  1810               	xorwf	??_ADC_Read_Average^0,w,c
 14991   002196  6EC2               	movwf	194,c	;volatile
 14992   002198                     
 14993                           ;newmain.c: 124:         _delay((unsigned long)((20)*(8000000/4000000.0)));
 14994   002198  0E0D               	movlw	13
 14995   00219A                     u9737:
 14996   00219A  2EE8               	decfsz	wreg,f,c
 14997   00219C  D7FE               	bra	u9737
 14998   00219E  0000               	nop	
 14999   0021A0                     
 15000                           ;newmain.c: 125:         ADCON0bits.GO = 1;
 15001   0021A0  82C2               	bsf	194,1,c	;volatile
 15002   0021A2                     l86:
 15003   0021A2  B2C2               	btfsc	194,1,c	;volatile
 15004   0021A4  EFD6  F010         	goto	u8721
 15005   0021A8  EFD8  F010         	goto	u8720
 15006   0021AC                     u8721:
 15007   0021AC  EFD1  F010         	goto	l86
 15008   0021B0                     u8720:
 15009   0021B0                     
 15010                           ;newmain.c: 127:         sum += (ADRESH << 8) | ADRESL;
 15011   0021B0  50C3               	movf	195,w,c	;volatile
 15012   0021B2  CFC4 F010          	movff	4036,??_ADC_Read_Average	;volatile
 15013   0021B6  6A11               	clrf	(??_ADC_Read_Average+1)^0,c
 15014   0021B8  C010  F011         	movff	??_ADC_Read_Average,??_ADC_Read_Average+1
 15015   0021BC  6A10               	clrf	??_ADC_Read_Average^0,c
 15016   0021BE  1010               	iorwf	??_ADC_Read_Average^0,w,c
 15017   0021C0  6E12               	movwf	(??_ADC_Read_Average+2)^0,c
 15018   0021C2  5011               	movf	(??_ADC_Read_Average+1)^0,w,c
 15019   0021C4  6E13               	movwf	(??_ADC_Read_Average+3)^0,c
 15020   0021C6  6A14               	clrf	(??_ADC_Read_Average+4)^0,c
 15021   0021C8  BE13               	btfsc	(??_ADC_Read_Average+3)^0,7,c
 15022   0021CA  0614               	decf	(??_ADC_Read_Average+4)^0,f,c
 15023   0021CC  5014               	movf	(??_ADC_Read_Average+4)^0,w,c
 15024   0021CE  6E15               	movwf	(??_ADC_Read_Average+5)^0,c
 15025   0021D0  5012               	movf	(??_ADC_Read_Average+2)^0,w,c
 15026   0021D2  2617               	addwf	ADC_Read_Average@sum^0,f,c
 15027   0021D4  5013               	movf	(??_ADC_Read_Average+3)^0,w,c
 15028   0021D6  2218               	addwfc	(ADC_Read_Average@sum+1)^0,f,c
 15029   0021D8  5014               	movf	(??_ADC_Read_Average+4)^0,w,c
 15030   0021DA  2219               	addwfc	(ADC_Read_Average@sum+2)^0,f,c
 15031   0021DC  5015               	movf	(??_ADC_Read_Average+5)^0,w,c
 15032   0021DE  221A               	addwfc	(ADC_Read_Average@sum+3)^0,f,c
 15033   0021E0                     
 15034                           ;newmain.c: 128:     }
 15035   0021E0  2A1B               	incf	ADC_Read_Average@i^0,f,c
 15036   0021E2                     l6716:
 15037   0021E2  500E               	movf	ADC_Read_Average@samples^0,w,c
 15038   0021E4  5C1B               	subwf	ADC_Read_Average@i^0,w,c
 15039   0021E6  A0D8               	btfss	status,0,c
 15040   0021E8  EFF8  F010         	goto	u8731
 15041   0021EC  EFFA  F010         	goto	u8730
 15042   0021F0                     u8731:
 15043   0021F0  EFC3  F010         	goto	l6706
 15044   0021F4                     u8730:
 15045   0021F4                     
 15046                           ;newmain.c: 129:     return (unsigned int)(sum / samples);
 15047   0021F4  C017  F001         	movff	ADC_Read_Average@sum,___lldiv@dividend
 15048   0021F8  C018  F002         	movff	ADC_Read_Average@sum+1,___lldiv@dividend+1
 15049   0021FC  C019  F003         	movff	ADC_Read_Average@sum+2,___lldiv@dividend+2
 15050   002200  C01A  F004         	movff	ADC_Read_Average@sum+3,___lldiv@dividend+3
 15051   002204  500E               	movf	ADC_Read_Average@samples^0,w,c
 15052   002206  6E05               	movwf	___lldiv@divisor^0,c
 15053   002208  6A06               	clrf	(___lldiv@divisor+1)^0,c
 15054   00220A  6A07               	clrf	(___lldiv@divisor+2)^0,c
 15055   00220C  6A08               	clrf	(___lldiv@divisor+3)^0,c
 15056   00220E  EC66  F00F         	call	___lldiv	;wreg free
 15057   002212  C001  F00E         	movff	?___lldiv,?_ADC_Read_Average
 15058   002216  C002  F00F         	movff	?___lldiv+1,?_ADC_Read_Average+1
 15059   00221A  0012               	return		;funcret
 15060   00221C                     __end_of_ADC_Read_Average:
 15061                           	callstack 0
 15062                           
 15063 ;; *************** function ___lldiv *****************
 15064 ;; Defined at:
 15065 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 15066 ;; Parameters:    Size  Location     Type
 15067 ;;  dividend        4    0[COMRAM] unsigned long 
 15068 ;;  divisor         4    4[COMRAM] unsigned long 
 15069 ;; Auto vars:     Size  Location     Type
 15070 ;;  quotient        4    8[COMRAM] unsigned long 
 15071 ;;  counter         1   12[COMRAM] unsigned char 
 15072 ;; Return value:  Size  Location     Type
 15073 ;;                  4    0[COMRAM] unsigned long 
 15074 ;; Registers used:
 15075 ;;		wreg, status,2, status,0
 15076 ;; Tracked objects:
 15077 ;;		On entry : 0/0
 15078 ;;		On exit  : 0/0
 15079 ;;		Unchanged: 0/0
 15080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15081 ;;      Params:         8       0       0       0       0       0       0       0       0
 15082 ;;      Locals:         5       0       0       0       0       0       0       0       0
 15083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15084 ;;      Totals:        13       0       0       0       0       0       0       0       0
 15085 ;;Total ram usage:       13 bytes
 15086 ;; Hardware stack levels used: 1
 15087 ;; This function calls:
 15088 ;;		Nothing
 15089 ;; This function is called by:
 15090 ;;		_ADC_Read_Average
 15091 ;; This function uses a non-reentrant model
 15092 ;;
 15093                           
 15094                           	psect	text44
 15095   001ECC                     __ptext44:
 15096                           	callstack 0
 15097   001ECC                     ___lldiv:
 15098                           	callstack 28
 15099   001ECC  0E00               	movlw	0
 15100   001ECE  6E09               	movwf	___lldiv@quotient^0,c
 15101   001ED0  0E00               	movlw	0
 15102   001ED2  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 15103   001ED4  0E00               	movlw	0
 15104   001ED6  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 15105   001ED8  0E00               	movlw	0
 15106   001EDA  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 15107   001EDC  5005               	movf	___lldiv@divisor^0,w,c
 15108   001EDE  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 15109   001EE0  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 15110   001EE2  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 15111   001EE4  B4D8               	btfsc	status,2,c
 15112   001EE6  EF77  F00F         	goto	u8381
 15113   001EEA  EF79  F00F         	goto	u8380
 15114   001EEE                     u8381:
 15115   001EEE  EFAF  F00F         	goto	l211
 15116   001EF2                     u8380:
 15117   001EF2  0E01               	movlw	1
 15118   001EF4  6E0D               	movwf	___lldiv@counter^0,c
 15119   001EF6  EF83  F00F         	goto	l6534
 15120   001EFA                     l6532:
 15121   001EFA  90D8               	bcf	status,0,c
 15122   001EFC  3605               	rlcf	___lldiv@divisor^0,f,c
 15123   001EFE  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 15124   001F00  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 15125   001F02  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 15126   001F04  2A0D               	incf	___lldiv@counter^0,f,c
 15127   001F06                     l6534:
 15128   001F06  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 15129   001F08  EF88  F00F         	goto	u8391
 15130   001F0C  EF8A  F00F         	goto	u8390
 15131   001F10                     u8391:
 15132   001F10  EF7D  F00F         	goto	l6532
 15133   001F14                     u8390:
 15134   001F14                     l6536:
 15135   001F14  90D8               	bcf	status,0,c
 15136   001F16  3609               	rlcf	___lldiv@quotient^0,f,c
 15137   001F18  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 15138   001F1A  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 15139   001F1C  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 15140   001F1E  5005               	movf	___lldiv@divisor^0,w,c
 15141   001F20  5C01               	subwf	___lldiv@dividend^0,w,c
 15142   001F22  5006               	movf	(___lldiv@divisor+1)^0,w,c
 15143   001F24  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 15144   001F26  5007               	movf	(___lldiv@divisor+2)^0,w,c
 15145   001F28  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 15146   001F2A  5008               	movf	(___lldiv@divisor+3)^0,w,c
 15147   001F2C  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 15148   001F2E  A0D8               	btfss	status,0,c
 15149   001F30  EF9C  F00F         	goto	u8401
 15150   001F34  EF9E  F00F         	goto	u8400
 15151   001F38                     u8401:
 15152   001F38  EFA7  F00F         	goto	l6544
 15153   001F3C                     u8400:
 15154   001F3C  5005               	movf	___lldiv@divisor^0,w,c
 15155   001F3E  5E01               	subwf	___lldiv@dividend^0,f,c
 15156   001F40  5006               	movf	(___lldiv@divisor+1)^0,w,c
 15157   001F42  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 15158   001F44  5007               	movf	(___lldiv@divisor+2)^0,w,c
 15159   001F46  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 15160   001F48  5008               	movf	(___lldiv@divisor+3)^0,w,c
 15161   001F4A  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 15162   001F4C  8009               	bsf	___lldiv@quotient^0,0,c
 15163   001F4E                     l6544:
 15164   001F4E  90D8               	bcf	status,0,c
 15165   001F50  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 15166   001F52  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 15167   001F54  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 15168   001F56  3205               	rrcf	___lldiv@divisor^0,f,c
 15169   001F58  2E0D               	decfsz	___lldiv@counter^0,f,c
 15170   001F5A  EF8A  F00F         	goto	l6536
 15171   001F5E                     l211:
 15172   001F5E  C009  F001         	movff	___lldiv@quotient,?___lldiv
 15173   001F62  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 15174   001F66  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 15175   001F6A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 15176   001F6E  0012               	return		;funcret
 15177   001F70                     __end_of___lldiv:
 15178                           	callstack 0
 15179                           
 15180 ;; *************** function _ADC_Init *****************
 15181 ;; Defined at:
 15182 ;;		line 89 in file "newmain.c"
 15183 ;; Parameters:    Size  Location     Type
 15184 ;;		None
 15185 ;; Auto vars:     Size  Location     Type
 15186 ;;		None
 15187 ;; Return value:  Size  Location     Type
 15188 ;;                  1    wreg      void 
 15189 ;; Registers used:
 15190 ;;		wreg, status,2
 15191 ;; Tracked objects:
 15192 ;;		On entry : 0/0
 15193 ;;		On exit  : 0/0
 15194 ;;		Unchanged: 0/0
 15195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15196 ;;      Params:         0       0       0       0       0       0       0       0       0
 15197 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15198 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15199 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15200 ;;Total ram usage:        0 bytes
 15201 ;; Hardware stack levels used: 1
 15202 ;; This function calls:
 15203 ;;		Nothing
 15204 ;; This function is called by:
 15205 ;;		_main
 15206 ;; This function uses a non-reentrant model
 15207 ;;
 15208                           
 15209                           	psect	text45
 15210   001AB8                     __ptext45:
 15211                           	callstack 0
 15212   001AB8                     _ADC_Init:
 15213                           	callstack 30
 15214   001AB8                     
 15215                           ;newmain.c: 91:     TRISA0 = 1;
 15216   001AB8  8092               	bsf	3986,0,c	;volatile
 15217                           
 15218                           ;newmain.c: 92:     TRISA1 = 1;
 15219   001ABA  8292               	bsf	3986,1,c	;volatile
 15220                           
 15221                           ;newmain.c: 93:     TRISA2 = 1;
 15222   001ABC  8492               	bsf	3986,2,c	;volatile
 15223                           
 15224                           ;newmain.c: 96:     ADCON0bits.ADON = 1;
 15225   001ABE  80C2               	bsf	194,0,c	;volatile
 15226   001AC0                     
 15227                           ;newmain.c: 97:     ADCON1 = 0x0C;
 15228   001AC0  0E0C               	movlw	12
 15229   001AC2  6EC1               	movwf	193,c	;volatile
 15230                           
 15231                           ;newmain.c: 98:     ADCON2 = 0xBE;
 15232   001AC4  0EBE               	movlw	190
 15233   001AC6  6EC0               	movwf	192,c	;volatile
 15234   001AC8  0012               	return		;funcret
 15235   001ACA                     __end_of_ADC_Init:
 15236                           	callstack 0
 15237                           
 15238                           	psect	rparam
 15239   000001                     ___rparam_used  equ	1
 15240   000000                     ___param_bank   equ	0
 15241   000000                     __Lparam        equ	__Lrparam
 15242   000000                     __Hparam        equ	__Hrparam
 15243                           
 15244                           	psect	idloc
 15245                           
 15246                           ;Config register IDLOC0 @ 0x200000
 15247                           ;	unspecified, using default values
 15248   200000                     	org	2097152
 15249   200000  FF                 	db	255
 15250                           
 15251                           ;Config register IDLOC1 @ 0x200001
 15252                           ;	unspecified, using default values
 15253   200001                     	org	2097153
 15254   200001  FF                 	db	255
 15255                           
 15256                           ;Config register IDLOC2 @ 0x200002
 15257                           ;	unspecified, using default values
 15258   200002                     	org	2097154
 15259   200002  FF                 	db	255
 15260                           
 15261                           ;Config register IDLOC3 @ 0x200003
 15262                           ;	unspecified, using default values
 15263   200003                     	org	2097155
 15264   200003  FF                 	db	255
 15265                           
 15266                           ;Config register IDLOC4 @ 0x200004
 15267                           ;	unspecified, using default values
 15268   200004                     	org	2097156
 15269   200004  FF                 	db	255
 15270                           
 15271                           ;Config register IDLOC5 @ 0x200005
 15272                           ;	unspecified, using default values
 15273   200005                     	org	2097157
 15274   200005  FF                 	db	255
 15275                           
 15276                           ;Config register IDLOC6 @ 0x200006
 15277                           ;	unspecified, using default values
 15278   200006                     	org	2097158
 15279   200006  FF                 	db	255
 15280                           
 15281                           ;Config register IDLOC7 @ 0x200007
 15282                           ;	unspecified, using default values
 15283   200007                     	org	2097159
 15284   200007  FF                 	db	255
 15285                           
 15286                           	psect	config
 15287                           
 15288                           ;Config register CONFIG1L @ 0x300000
 15289                           ;	unspecified, using default values
 15290                           ;	PLL Prescaler Selection bits
 15291                           ;	PLLDIV = 0x0, unprogrammed default
 15292                           ;	System Clock Postscaler Selection bits
 15293                           ;	CPUDIV = 0x0, unprogrammed default
 15294                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 15295                           ;	USBDIV = 0x0, unprogrammed default
 15296   300000                     	org	3145728
 15297   300000  00                 	db	0
 15298                           
 15299                           ;Config register CONFIG1H @ 0x300001
 15300                           ;	Oscillator Selection bits
 15301                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
 15302                           ;	Fail-Safe Clock Monitor Enable bit
 15303                           ;	FCMEN = 0x0, unprogrammed default
 15304                           ;	Internal/External Oscillator Switchover bit
 15305                           ;	IESO = 0x0, unprogrammed default
 15306   300001                     	org	3145729
 15307   300001  08                 	db	8
 15308                           
 15309                           ;Config register CONFIG2L @ 0x300002
 15310                           ;	Power-up Timer Enable bit
 15311                           ;	PWRT = ON, PWRT enabled
 15312                           ;	Brown-out Reset Enable bits
 15313                           ;	BOR = 0x3, unprogrammed default
 15314                           ;	Brown-out Reset Voltage bits
 15315                           ;	BORV = 0x3, unprogrammed default
 15316                           ;	USB Voltage Regulator Enable bit
 15317                           ;	VREGEN = 0x0, unprogrammed default
 15318   300002                     	org	3145730
 15319   300002  1E                 	db	30
 15320                           
 15321                           ;Config register CONFIG2H @ 0x300003
 15322                           ;	Watchdog Timer Enable bit
 15323                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 15324                           ;	Watchdog Timer Postscale Select bits
 15325                           ;	WDTPS = 0xF, unprogrammed default
 15326   300003                     	org	3145731
 15327   300003  1E                 	db	30
 15328                           
 15329                           ; Padding undefined space
 15330   300004                     	org	3145732
 15331   300004  FF                 	db	255
 15332                           
 15333                           ;Config register CONFIG3H @ 0x300005
 15334                           ;	CCP2 MUX bit
 15335                           ;	CCP2MX = 0x1, unprogrammed default
 15336                           ;	PORTB A/D Enable bit
 15337                           ;	PBADEN = 0x1, unprogrammed default
 15338                           ;	Low-Power Timer 1 Oscillator Enable bit
 15339                           ;	LPT1OSC = 0x0, unprogrammed default
 15340                           ;	MCLR Pin Enable bit
 15341                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 15342   300005                     	org	3145733
 15343   300005  83                 	db	131
 15344                           
 15345                           ;Config register CONFIG4L @ 0x300006
 15346                           ;	Stack Full/Underflow Reset Enable bit
 15347                           ;	STVREN = 0x1, unprogrammed default
 15348                           ;	Single-Supply ICSP Enable bit
 15349                           ;	LVP = OFF, Single-Supply ICSP disabled
 15350                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 15351                           ;	ICPRT = 0x0, unprogrammed default
 15352                           ;	Extended Instruction Set Enable bit
 15353                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15354                           ;	Background Debugger Enable bit
 15355                           ;	DEBUG = 0x1, unprogrammed default
 15356   300006                     	org	3145734
 15357   300006  81                 	db	129
 15358                           
 15359                           ; Padding undefined space
 15360   300007                     	org	3145735
 15361   300007  FF                 	db	255
 15362                           
 15363                           ;Config register CONFIG5L @ 0x300008
 15364                           ;	unspecified, using default values
 15365                           ;	Code Protection bit
 15366                           ;	CP0 = 0x1, unprogrammed default
 15367                           ;	Code Protection bit
 15368                           ;	CP1 = 0x1, unprogrammed default
 15369                           ;	Code Protection bit
 15370                           ;	CP2 = 0x1, unprogrammed default
 15371                           ;	Code Protection bit
 15372                           ;	CP3 = 0x1, unprogrammed default
 15373   300008                     	org	3145736
 15374   300008  0F                 	db	15
 15375                           
 15376                           ;Config register CONFIG5H @ 0x300009
 15377                           ;	unspecified, using default values
 15378                           ;	Boot Block Code Protection bit
 15379                           ;	CPB = 0x1, unprogrammed default
 15380                           ;	Data EEPROM Code Protection bit
 15381                           ;	CPD = 0x1, unprogrammed default
 15382   300009                     	org	3145737
 15383   300009  C0                 	db	192
 15384                           
 15385                           ;Config register CONFIG6L @ 0x30000A
 15386                           ;	unspecified, using default values
 15387                           ;	Write Protection bit
 15388                           ;	WRT0 = 0x1, unprogrammed default
 15389                           ;	Write Protection bit
 15390                           ;	WRT1 = 0x1, unprogrammed default
 15391                           ;	Write Protection bit
 15392                           ;	WRT2 = 0x1, unprogrammed default
 15393                           ;	Write Protection bit
 15394                           ;	WRT3 = 0x1, unprogrammed default
 15395   30000A                     	org	3145738
 15396   30000A  0F                 	db	15
 15397                           
 15398                           ;Config register CONFIG6H @ 0x30000B
 15399                           ;	unspecified, using default values
 15400                           ;	Configuration Register Write Protection bit
 15401                           ;	WRTC = 0x1, unprogrammed default
 15402                           ;	Boot Block Write Protection bit
 15403                           ;	WRTB = 0x1, unprogrammed default
 15404                           ;	Data EEPROM Write Protection bit
 15405                           ;	WRTD = 0x1, unprogrammed default
 15406   30000B                     	org	3145739
 15407   30000B  E0                 	db	224
 15408                           
 15409                           ;Config register CONFIG7L @ 0x30000C
 15410                           ;	unspecified, using default values
 15411                           ;	Table Read Protection bit
 15412                           ;	EBTR0 = 0x1, unprogrammed default
 15413                           ;	Table Read Protection bit
 15414                           ;	EBTR1 = 0x1, unprogrammed default
 15415                           ;	Table Read Protection bit
 15416                           ;	EBTR2 = 0x1, unprogrammed default
 15417                           ;	Table Read Protection bit
 15418                           ;	EBTR3 = 0x1, unprogrammed default
 15419   30000C                     	org	3145740
 15420   30000C  0F                 	db	15
 15421                           
 15422                           ;Config register CONFIG7H @ 0x30000D
 15423                           ;	unspecified, using default values
 15424                           ;	Boot Block Table Read Protection bit
 15425                           ;	EBTRB = 0x1, unprogrammed default
 15426   30000D                     	org	3145741
 15427   30000D  40                 	db	64
 15428                           tosu	equ	0xFFF
 15429                           tosh	equ	0xFFE
 15430                           tosl	equ	0xFFD
 15431                           stkptr	equ	0xFFC
 15432                           pclatu	equ	0xFFB
 15433                           pclath	equ	0xFFA
 15434                           pcl	equ	0xFF9
 15435                           tblptru	equ	0xFF8
 15436                           tblptrh	equ	0xFF7
 15437                           tblptrl	equ	0xFF6
 15438                           tablat	equ	0xFF5
 15439                           prodh	equ	0xFF4
 15440                           prodl	equ	0xFF3
 15441                           indf0	equ	0xFEF
 15442                           postinc0	equ	0xFEE
 15443                           postdec0	equ	0xFED
 15444                           preinc0	equ	0xFEC
 15445                           plusw0	equ	0xFEB
 15446                           fsr0h	equ	0xFEA
 15447                           fsr0l	equ	0xFE9
 15448                           wreg	equ	0xFE8
 15449                           indf1	equ	0xFE7
 15450                           postinc1	equ	0xFE6
 15451                           postdec1	equ	0xFE5
 15452                           preinc1	equ	0xFE4
 15453                           plusw1	equ	0xFE3
 15454                           fsr1h	equ	0xFE2
 15455                           fsr1l	equ	0xFE1
 15456                           bsr	equ	0xFE0
 15457                           indf2	equ	0xFDF
 15458                           postinc2	equ	0xFDE
 15459                           postdec2	equ	0xFDD
 15460                           preinc2	equ	0xFDC
 15461                           plusw2	equ	0xFDB
 15462                           fsr2h	equ	0xFDA
 15463                           fsr2l	equ	0xFD9
 15464                           status	equ	0xFD8

Data Sizes:
    Strings     407
    Constant    112
    Data        4
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160    157     160
    BANK1           256    250     255
    BANK2           256     11     149
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 250
		 -> Calibrate_Flame_Sensor@cal_msg(BANK0[30]), Calibrate_MQ2@cal_msg(BANK1[30]), Send_Sensor_Data@buffer(BANK1[250]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 250
		 -> Calibrate_Flame_Sensor@cal_msg(BANK0[30]), Calibrate_MQ2@cal_msg(BANK1[30]), Send_Sensor_Data@buffer(BANK1[250]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S883$buffer	PTR unsigned char  size(2) Largest target is 250
		 -> Calibrate_Flame_Sensor@cal_msg(BANK0[30]), Calibrate_MQ2@cal_msg(BANK1[30]), Send_Sensor_Data@buffer(BANK1[250]), 

    S883$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_2(CODE[7]), STR_4(CODE[6]), STR_5(CODE[83]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 250
		 -> Calibrate_Flame_Sensor@cal_msg(BANK0[30]), Calibrate_MQ2@cal_msg(BANK1[30]), Send_Sensor_Data@buffer(BANK1[250]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_12(CODE[4]), STR_15(CODE[4]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 250
		 -> Calibrate_Flame_Sensor@cal_msg(BANK0[30]), Calibrate_MQ2@cal_msg(BANK1[30]), Send_Sensor_Data@buffer(BANK1[250]), STR_1(CODE[45]), 
		 -> STR_10(CODE[54]), STR_11(CODE[41]), STR_3(CODE[33]), STR_6(CODE[28]), 
		 -> STR_7(CODE[3]), STR_8(CODE[49]), STR_9(CODE[53]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 83
		 -> STR_2(CODE[7]), STR_4(CODE[6]), STR_5(CODE[83]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 83
		 -> STR_2(CODE[7]), STR_4(CODE[6]), STR_5(CODE[83]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_2(CODE[7]), STR_4(CODE[6]), STR_5(CODE[83]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _main->_Read_LM35
    _powf->___fldiv
    _scalbnf->___flmul
    _Read_LM35->___fldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___fladd->___xxtofl
    ___flmul->___fladd
    ___flge->___flsub
    ___fldiv->___flsub
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _UART_Write_Text->_UART_Write
    _ADC_Read_Average->___lldiv

Critical Paths under _main in BANK0

    _main->_Calibrate_Flame_Sensor
    _Send_Sensor_Data->_sprintf
    _Read_MQ2_Sensor->_Calibrate_MQ2
    _Calibrate_MQ2->_sprintf
    _Read_Flame_Sensor->_Calibrate_Flame_Sensor
    _Calibrate_Flame_Sensor->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _main in BANK1

    _main->_Send_Sensor_Data
    _Read_MQ2_Sensor->_powf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0  206648
                                              0 BANK2     11    11      0
                           _ADC_Init
             _Calibrate_Flame_Sensor
                      _Calibrate_MQ2
                  _Read_Flame_Sensor
                          _Read_LM35
                    _Read_MQ2_Sensor
                   _Send_Sensor_Data
                    _UART_Data_Ready
                          _UART_Init
                          _UART_Read
                         _UART_Write
                    _UART_Write_Text
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send_Sensor_Data                                   250   250      0   22398
                                              0 BANK1    250   250      0
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Read_MQ2_Sensor                                     38    38      0   72868
                                            120 BANK0      2     2      0
                                            184 BANK1     36    36      0
                   _ADC_Read_Average
                      _Calibrate_MQ2
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   25033
                                              0 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               41    37      4    1070
                                              0 COMRAM    37    33      4
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    3087
                                             55 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _Calibrate_MQ2                                       47    47      0   34271
                                            118 BANK0      2     2      0
                                              0 BANK1     45    45      0
                           _ADC_Read
                    _UART_Write_Text
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Read_LM35                                            6     6      0    5425
                                             88 COMRAM     6     6      0
                   _ADC_Read_Average
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Read_Flame_Sensor                                   10    10      0   40111
                                              0 BANK1     10    10      0
                   _ADC_Read_Average
             _Calibrate_Flame_Sensor
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _Calibrate_Flame_Sensor                              39    39      0   30715
                                            118 BANK0     39    39      0
                           _ADC_Read
                    _UART_Write_Text
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             36    14     22   22173
                                             84 BANK0     34    12     22
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4   21831
                                             78 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3   21595
                                             66 BANK0     12     9      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     266
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   17383
                                             92 COMRAM     2     2      0
                                             16 BANK0     50    44      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     115
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     217
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     102
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     495
                                             88 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     201
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     346
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3457
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3182
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      74
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2577
                                             30 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     350
                                             63 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     142
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    1815
                                             63 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     9      3    2614
                                             22 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    1047
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3     481
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     335
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      96
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     445
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     451
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     526
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2     145
                                              1 COMRAM     2     0      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      47
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Read_Average                                    14    12      2     439
                                             13 COMRAM    14    12      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     247
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Calibrate_Flame_Sensor
     _ADC_Read
     _UART_Write_Text
       _UART_Write
     ___fladd
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
               ___flsub (ARG)
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
   _Calibrate_MQ2
     _ADC_Read
     _UART_Write_Text
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
     ___xxtofl
     _sprintf
   _Read_Flame_Sensor
     _ADC_Read_Average
       ___lldiv
     _Calibrate_Flame_Sensor
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___xxtofl
   _Read_LM35
     _ADC_Read_Average
     ___fldiv
     ___flmul
     ___xxtofl
   _Read_MQ2_Sensor
     _ADC_Read_Average
     _Calibrate_MQ2
     ___awmod
     ___fladd
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___xxtofl
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
   _Send_Sensor_Data
     _UART_Write_Text
     _sprintf
   _UART_Data_Ready
   _UART_Init
   _UART_Read
   _UART_Write
   _UART_Write_Text
   ___flge

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256     11     149     58.2%
BITBANK1           256      0       0      0.0%
BANK1              256    250     255     99.6%
BITBANK0           160      0       0      0.0%
BANK0              160    157     160    100.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     94      94     98.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     657      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jun 17 10:47:46 2025

                   ___fldiv@aexp 0058                     ___fldiv@bexp 0057                      _pump_active 0235  
                   ___fldiv@sign 0050                               _L1 7E4F                               _L2 7E4B  
                             _L3 7E47                               _L4 7E43                               _L5 7E3F  
                             _L6 7E3B                               _P1 7E37                               _P2 7E33  
                             _P3 7E2F                               _P4 7E2B                               l81 1C46  
                             _P5 7E27                               l90 221A                               l75 1AC8  
                             l86 21A2                               l78 1C22                               l95 2966  
                   ___awdiv@sign 0006                               _bp 7E03                               _cp 7E13  
              _mq2_history_index 00FF                              l100 2C72                              l103 237A  
                            l211 1F5E                              l107 34AA                              l131 4F50  
                            l140 1AF4                              l109 33E8                              l134 2016  
                            l143 1B06                              l137 1AF0                              l153 1B1E  
                            l218 1F6E                              l171 38DA                              l156 1ADC  
                            l172 3944                              l149 1E64                              l166 384E  
                            l415 24F6                              l443 20C0                              l428 22C8  
                            l454 26F8                              l712 4786                              l449 26B2  
                            l721 4A52                              l713 4774                              l481 27FE  
                            l802 459C                              l458 1B8A                              l714 473A  
                            l901 29A0                              l805 4432                              l902 29E6  
                            l806 4450                              l726 492E                              l815 455E  
                            l807 44A8                              l808 4496                              l913 2ADE  
                            l745 4A16                              l729 48A0                              l842 2E26  
                            l738 496E                              l754 1CD0                              l771 3BC0  
                            l739 495C                              l780 3CA6                              l924 593C  
                            l853 2DBE                              l846 2D62                              l766 3D98  
                            l862 1C8A                              l839 2CCA                              l927 52DE  
                            l768 3BFC                              l777 3C42                              l929 5124  
                            l778 3C60                              l891 1E7C                              l779 3CB8  
                            l957 5724                              l973 216C                              l981 372E  
                            l798 423C                              l895 1ECA                              l969 2164  
                            l899 2998                              l987 35F0                              _lg2 7E23  
                            _abs 1B20                              _pad 1E66                              _ovt 7E17  
                   ___awmod@sign 0006                              prod 0FF3                              wreg 0FE8  
                   ___flmul@aexp 002C                     ___flmul@bexp 0031                     ___flmul@sign 002B  
                   ___flmul@temp 0036                     ___flmul@prod 0032                     ___fltol@exp1 000A  
                           l1003 1D16                             l1021 1B52                             l1013 25F4  
                           l1030 2F80                             l1200 1AB2                             l1041 1E06  
                           l1018 1B3A                             l1210 3270                             l1027 303C  
                           ?_abs 0007                             l1132 5C20                             l1230 40A0  
                           l1142 5CB6                             l1047 1DB0                             l1223 3F7E  
                           l1127 7DF0                             l1232 410E                             l1160 5E88  
                           l1152 5D78                             l1059 2434                             l1067 1C02  
                           l1227 3FDC                             l1219 4176                             l1156 5E2A  
                           l1238 1BC2                             l1193 7DB4                             l6000 26FA  
                           l6010 2750                             l6002 2710                             l6012 2760  
                           l6100 2EB4                             l5134 1AB8                             l6022 278A  
                           l6014 2764                             l6006 2724                             l6102 2EC2  
                           l6110 2FA4                             l5136 1AC0                             l6040 27EE  
                           l6032 27B2                             l6024 2794                             l6016 2772  
                           l6008 274E                             l6112 2FE0                             l6200 4FE6  
                           l7000 66B0                             l6050 1E98                             l5410 45CA  
                           l5402 459E                             l6034 27BE                             l6026 279E  
                           l6114 2FF4                             l6106 2F34                             l6130 1D92  
                           l6122 1D62                             l6210 5030                             l6202 500C  
                           l7010 6828                             l7002 66CA                             l5250 1AE2  
                           l6052 1E9C                             l6044 1E66                             l6140 29B8  
                           l5500 4794                             l5420 4602                             l5412 45DA  
                           l5404 45AA                             l6036 27CE                             l6060 24F8  
                           l6116 301C                             l6108 2F70                             l6124 1D76  
                           l6132 1D96                             l6300 54A8                             l6220 5094  
                           l6212 5048                             l6204 501E                             l7100 7334  
                           l7020 6998                             l7012 6880                             l7004 6724  
                           l5260 1AEE                             l5252 1AE6                             l6054 1EBA  
                           l6046 1E74                             l6150 29EE                             l6142 29BE  
                           l6134 2968                             l5510 47D6                             l5502 47A4  
                           l5430 4630                             l5422 4608                             l5414 45EA  
                           l5406 45B8                             l6038 27DE                             l6062 2518  
                           l6118 302C                             l6126 1D82                             l6310 5566  
                           l6302 54DC                             l6222 50A6                             l6214 5052  
                           l6206 5022                             l7110 735C                             l7030 6B2C  
                           l7022 69F0                             l7014 68D8                             l7006 6796  
                           l5254 1AE8                             l5262 1B08                             ?_pad 000F  
                           l6056 1B20                             l5600 1BDE                             l6048 1E88  
                           l6160 2A3A                             l6152 29F6                             l6144 29CE  
                           l6136 298C                             l5520 4804                             l5512 47E4  
                           l5440 4664                             l5432 4632                             l5424 461A  
                           l5416 45EC                             l5408 45BA                             l6064 2556  
                           l6072 2596                             l6128 1D86                             l6320 563A  
                           l6312 5576                             l6304 550E                             l6224 50AA  
                           l6208 5028                             l6400 20CA                             l7200 7DDC  
                           l7112 7374                             l7120 73F2                             l7040 6C54  
                           l7032 6B60                             l7024 6A48                             l7016 690C  
                           l7008 67F4                             l5272 1ACA                             l5256 1AEA  
                           l5248 1ADE                             l5264 1B16                             l6058 1B2E  
                           l5602 1BE2                             l6170 2AAC                             l6154 29FC  
                           l6162 2A56                             l6146 29DA                             l6138 29A8  
                           l5610 3A26                             l5530 4870                             l5522 480E  
                           l5514 47F0                             l5506 47B8                             l5450 469E  
                           l5434 4642                             l5442 466A                             l5426 461C  
                           l5418 45F2                             l6074 25A8                             l6066 257E  
                           l6090 1DD4                             l6082 1B8C                             l6330 566E  
                           l6322 564E                             l6314 55AA                             l6306 5524  
                           l6250 51DE                             l6242 5134                             l6226 50B0  
                           l6218 506E                             l6402 20EC                             l6410 213E  
                           l7210 2346                             l7130 746C                             l7122 743A  
                           l7050 6D1A                             l7042 6C88                             l7034 6BB8  
                           l7026 6AA0                             l7018 6940                             l5258 1AEC  
                           l6500 1C20                             l6172 2AB2                             l6164 2A70  
                           l6156 2A2E                             l6148 29E2                             l5700 3C70  
                           l5612 3A36                             l5620 3A5E                             l5604 3A0A  
                           l5532 4880                             l5516 47F4                             l5508 47C8  
                           l5524 4814                             l5460 46B2                             l5452 46A2  
                           l5444 467A                             l5436 4652                             l5428 4622  
                           l6068 258A                             l6084 1B94                             l6340 5736  
                           l6332 5676                             l6316 5600                             l6324 5652  
                           l6308 5556                             l6252 521C                             l6244 513A  
                           l6228 50B8                             l6236 50D4                             l6180 4F66  
                           l6404 20F8                             l6420 34F0                             l6412 34AC  
                           l7220 329E                             l7212 3272                             l7140 755A  
                           l7132 74C2                             l7060 6E42                             l7052 6D4E  
                           l7044 6C98                             l7036 6BEC                             l7028 6AF8  
                           l5268 1B1C                             l6502 1C30                             l6510 1E30  
                           l5390 238C                             l6174 2AC2                             l6166 2A82  
                           l6158 2A34                             l5710 3CE2                             l5702 3C9E  
                           l5630 3A8A                             l5622 3A6E                             l5614 3A46  
                           l5606 3A16                             l5550 4902                             l5542 48DA  
                           l5526 483A                             l5534 4890                             l5518 4802  
                           l5470 46C6                             l5462 46B6                             l5454 46A6  
                           l5446 468C                             l5438 4662                             l6078 25EC  
                           l6094 2E28                             l6086 1DB2                             l6350 5766  
                           l6342 5744                             l6334 5682                             l6326 5662  
                           l6318 5606                             l6270 530A                             l6254 5230  
                           l6262 52AC                             l6246 516E                             l6238 50EE  
                           l6190 4FAE                             l6182 4F74                             l6406 2114  
                           l6430 355E                             l6422 3512                             l6414 34D0  
                           l7230 33D6                             l7222 3308                             l7214 3284  
                           l7206 22CA                             l7150 77A8                             l7142 757C  
                           l7070 6FD2                             l7062 6E5C                             l7054 6D82  
                           l7046 6CB2                             l7038 6C20                             l7310 4F1C  
                           l6512 1E34                             l5392 239C                             l6168 2A9C  
                           l5720 3D5A                             l5712 3D0C                             l5632 3A9A  
                           l5640 3AC2                             l5624 3A74                             l5616 3A56  
                           l5608 3A24                             l5800 4302                             l5560 493E  
                           l5552 490A                             l5544 48E4                             l5536 48B6  
                           l5528 486E                             l5472 46CA                             l5464 46BA  
                           l5456 46AA                             l5448 469A                             l5480 46DA  
                           l6096 2E48                             l6088 1DC0                             l6360 5798  
                           l6352 5776                             l6344 5754                             l6336 56FA  
                           l6328 566A                             l6280 534E                             l6272 5312  
                           l6264 52E6                             l6256 5264                             l6248 51AC  
                           l6192 4FBE                             l6184 4F78                             l6408 2132  
                           l6440 35C0                             l6432 357A                             l6424 351E  
                           l6416 34DC                             l6520 1C66                             l7240 3472  
                           l7232 33FA                             l7224 3384                             l7208 22DC  
                           l6600 3E0C                             l7160 7892                             l7152 77B8  
                           l7144 7730                             l7128 744E                             l7136 74D8  
                           l7080 70E8                             l7072 6FF8                             l7064 6E90  
                           l7056 6DFE                             l7048 6CE6                             l7304 4EA0  
                           l7312 1F70                             l7400 3934                             l7320 3736  
                           l6530 1EF2                             l6506 1E08                             l5394 23A6  
                           l5730 3D8C                             l5722 3D72                             l5706 3CC8  
                           l5714 3D10                             l5650 3B04                             l5642 3AD2  
                           l5634 3AAA                             l5626 3A7A                             l5618 3A58  
                           l5810 4364                             l5802 430E                             l5570 4998  
                           l5562 4954                             l5554 490E                             l5546 48F2  
                           l5538 48C6                             l5490 4754                             l5482 4706  
                           l5474 46CE                             l5466 46BE                             l5458 46AE  
                           l6098 2EA0                             l6370 5840                             l6362 57AA  
                           l6354 577A                             l6346 5758                             l6338 571A  
                           l6290 5394                             l6282 5360                             l6274 5316  
                           l6266 52F6                             l6258 526C                             l6194 4FCE  
                           l6186 4F9C                             l6178 4F52                             l6450 35F6  
                           l6442 35CE                             l6434 3592                             l6426 3532  
                           l6418 34EA                             l6522 1C7A                             l6514 1C48  
                           l7242 3484                             l7234 342C                             l7226 3394  
                           l7218 328C                             l6610 3E5C                             l6602 3E1A  
                           l7170 79BA                             l7162 78EA                             l7154 77D2  
                           l7146 7740                             l7138 754A                             l7090 720C  
                           l7082 711C                             l7074 708A                             l7066 6EC4  
                           l7058 6E32                             l7306 4EFA                             l7250 4A6A  
                           l7314 200A                             l7410 396E                             l7402 393C  
                           l7322 3738                             l6540 1F3C                             l6532 1EFA  
                           l6508 1E0C                             l5900 24AA                             l5396 23C2  
                           l5388 237C                             l5732 3D8E                             l5724 3D74  
                           l5716 3D2A                             l5708 3CD4                             l5644 3AE8  
                           l5636 3ABA                             l5628 3A88                             l5820 43FA  
                           l5812 4370                             l5804 431E                             l5740 4178  
                           l5580 4A14                             l5572 49D2                             l5556 491E  
                           l5548 48F4                             l5492 4758                             l5484 4722  
                           l5476 46D2                             l5468 46C2                             l6380 588E  
                           l6372 5848                             l6364 57AE                             l6356 5780  
                           l6348 575E                             l6292 53F8                             l6276 5328  
                           l6284 5368                             l6268 5302                             l6196 4FDA  
                           l6188 4FA6                             l6460 3684                             l6452 3614  
                           l6444 35E0                             l6436 35AC                             l6428 3542  
                           l6516 1C56                             l7244 3498                             l7236 343A  
                           l7228 33A4                             l6612 3E8A                             l6604 3E2A  
                           l7180 7B72                             l7172 7A12                             l7164 791E  
                           l7156 7806                             l7148 7774                             l7092 7264  
                           l7084 717A                             l7076 70BE                             l7068 6EF8  
                           l7308 4F00                             l7260 4B9C                             l7252 4A70  
                           l7420 39C0                             l7412 3978                             l7404 394C  
                           l7340 3778                             l7324 373A                             l7316 3730  
                           l6542 1F4C                             l6534 1F06                             l6526 1ECC  
                           l6710 21A0                             l6702 2170                             l6550 2C86  
                           l5902 24C0                             l5910 24D6                             l5398 23F4  
                           l5726 3D78                             l5718 3D40                             l5670 3B86  
                           l5662 3B3C                             l5646 3AF8                             l5654 3B18  
                           l5638 3ABC                             l5830 4460                             l5822 4418  
                           l5814 438C                             l5806 4338                             l5750 41B4  
                           l5742 4184                             l5590 4A40                             l5582 4A24  
                           l5566 497E                             l5574 49D4                             l5558 4920  
                           l5494 4766                             l5486 4732                             l5478 46D6  
                           l6390 5902                             l6382 589C                             l6366 57B4  
                           l6358 5786                             l6374 584C                             l6294 5450  
                           l6286 5370                             l6278 5336                             l6198 4FE2  
                           l6470 36E2                             l6462 369A                             l6454 3634  
                           l6446 35E8                             l6518 1C5E                             l7238 346C  
                           l6630 3F3C                             l7190 7CE2                             l7182 7BEE  
                           l7174 7A6A                             l7166 7952                             l7158 783A  
                           l7094 72BC                             l7086 71AE                             l7078 70CE  
                           l7270 4C6A                             l7262 4BD0                             l7254 4A82  
                           l7246 4A54                             l7422 39DE                             l7414 3988  
                           l7406 3954                             l7350 37AC                             l7342 3794  
                           l7334 3752                             l7326 373C                             l7318 3734  
                           l6544 1F4E                             l6536 1F14                             l6528 1EDC  
                           l6712 21B0                             l6704 2180                             l6560 2D04  
                           l6552 2C94                             l5912 24E6                             l5904 24C8  
                           l5920 221E                             l5728 3D86                             l5680 3BCA  
                           l5672 3B8C                             l5664 3B56                             l5656 3B28  
                           l5648 3B00                             l5840 44D2                             l5832 448E  
                           l5824 4422                             l5816 43B6                             l5808 4348  
                           l5760 41E6                             l5752 41C4                             l5744 4192  
                           l5592 4A42                             l5584 4A2A                             l5576 49E4  
                           l5568 498A                             l5496 4768                             l5488 4748  
                           l6392 5918                             l6384 58CC                             l6376 586A  
                           l6368 580C                             l6296 5484                             l6288 5380  
                           l6464 36B8                             l6456 365C                             l6472 36FA  
                           l6640 3FF6                             l6632 3F48                             l6616 3E9E  
                           l6624 3ECA                             l6608 3E3E                             l7192 7CF2  
                           l7184 7C46                             l7176 7AC2                             l7168 7986  
                           l7096 72F0                             l7088 71E2                             l6800 5A10  
                           l7280 4D78                             l7272 4CA0                             l7264 4C04  
                           l7256 4AEC                             l7248 4A66                             l7416 39A6  
                           l7408 396A                             l7424 39E2                             l7360 37EA  
                           l7352 37BC                             l7344 37A0                             l7336 376C  
                           l7328 3748                             l6546 1F58                             l6538 1F1E  
                           l6714 21E0                             l6706 2186                             l6482 1AF4  
                           l6570 2D58                             l6562 2D0C                             l6554 2CDA  
                           l5914 24EE                             l5906 24CA                             l5930 224E  
                           l5922 222C                             l5690 3C22                             l5682 3BE8  
                           l5674 3B9C                             l5666 3B66                             l5658 3B28  
                           l5850 4548                             l5842 44FC                             l5826 4430  
                           l5818 43EC                             l5770 4226                             l5762 41F4  
                           l5754 41CA                             l5746 4194                             l5586 4A2C  
                           l5578 49F4                             l5498 4772                             l6394 5920  
                           l6386 58DA                             l6378 5886                             l6298 548A  
                           l6490 1CF0                             l6730 2814                             l6722 2800  
                           l6650 40BA                             l6642 4016                             l6634 3F56  
                           l6626 3F1E                             l6618 3EAC                             l7194 7D34  
                           l7186 7C7A                             l7178 7B1A                             l7098 7324  
                           l6810 5A88                             l6802 5A32                             l7290 4E34  
                           l7282 4DAE                             l7274 4CD8                             l7266 4C38  
                           l7258 4B44                             l7426 39E8                             l7418 39AA  
                           l7370 383E                             l7362 37FC                             l7354 37C6  
                           l7346 37A4                             l7338 3772                             l6708 2198  
                           l6716 21E2                             l6484 1B02                             l6580 2DCE  
                           l6572 2D94                             l6564 2D18                             l6556 2CF0  
                           l6548 2C76                             l5908 24D0                             l5940 2294  
                           l5932 2260                             l5924 2234                             l5596 1BC4  
                           l5692 3C28                             l5684 3BEA                             l5676 3BB0  
                           l5668 3B76                             l5860 4582                             l5852 4558  
                           l5836 44B8                             l5844 4500                             l5828 4442  
                           l5780 4270                             l5772 422C                             l5764 41F6  
                           l5756 41DA                             l5748 41A4                             l5588 4A32  
                           l6388 58F2                             l6476 370C                             l6492 1D0C  
                           l6740 28DE                             l6732 2822                             l6724 2812  
                           l6660 303E                             l6652 40D0                             l6644 402A  
                           l6636 3FBE                             l6628 3F32                             l7196 7D84  
                           l7188 7CAE                             l6900 5FF6                             l6820 5C3E  
                           l6812 5AA4                             l7292 4E46                             l7276 4D0A  
                           l7284 4DE2                             l7268 4C38                             l7380 3860  
                           l7364 380C                             l7372 384E                             l7356 37CE  
                           l7348 37A8                             l6718 21F4                             l6590 2E16  
                           l6582 2DD2                             l6574 2DA0                             l6566 2D4A  
                           l5950 22C0                             l5942 229C                             l5934 2268  
                           l5926 2238                             l5918 221C                             l5598 1BD0  
                           l5694 3C32                             l5686 3BFA                             l5678 3BBE  
                           l5854 4562                             l5862 4588                             l5846 451A  
                           l5838 44C4                             l5790 42C0                             l5782 427C  
                           l5774 424C                             l5766 4206                             l5758 41E0  
                           l5870 1C9C                             l6398 20C2                             l6486 1CD2  
                           l6750 2938                             l6742 2912                             l6734 28B0  
                           l6670 30C2                             l6662 304E                             l6654 40E6  
                           l6646 4068                             l6638 3FCC                             l7198 7DC4  
                           l6910 6070                             l6902 600C                             l6830 5C92  
                           l6822 5C5A                             l6814 5AB8                             l6806 5A6A  
                           l7294 4E68                             l7286 4DF2                             l7278 4D40  
                           l7390 38F0                             l7382 3872                             l7374 3852  
                           l7366 381E                             l7358 37E2                             l6496 1C06  
                           l6584 2DF6                             l6576 2DAE                             l6568 2D4C  
                           l5880 244E                             l5944 22A2                             l5936 2270  
                           l5928 2246                             l5696 3C40                             l5688 3C0C  
                           l5960 2084                             l5864 458C                             l5856 4572  
                           l5848 452E                             l5792 42CC                             l5784 4286  
                           l5776 425C                             l5768 4216                             l6488 1CDE  
                           l6752 295C                             l6744 2918                             l6736 28CA  
                           l6680 3142                             l6672 30F6                             l6664 306A  
                           l6648 40B0                             l6904 601C                             l6840 5D00  
                           l6832 5CA0                             l6816 5AD4                             l6808 5A7A  
                           l7296 4E86                             l7288 4E02                             l7392 38F2  
                           l7384 38A4                             l7376 3856                             l7368 382E  
                           l6498 1C18                             l6586 2E06                             l6578 2DCC  
                           l5890 2474                             l5882 2452                             l5874 2436  
                           l5938 227E                             l5946 22A8                             l5698 3C52  
                           l5962 2094                             l5954 2018                             l5970 25F6  
                           l5858 4580                             l5794 42D8                             l5786 429C  
                           l6746 291A                             l6738 28CE                             l6770 2BD4  
                           l6762 2AF4                             l6754 2AE0                             l6690 31D6  
                           l6682 3176                             l6674 30FE                             l6666 309E  
                           l6594 3D9A                             l6922 60A4                             l6906 603E  
                           l6850 5D8C                             l6818 5BD2                             l7298 4E98  
                           l7394 38F6                             l7386 38D6                             l7378 385A  
                           l6588 2E14                             l5892 2486                             l5884 2460  
                           l5876 2438                             l5948 22B8                             l5964 20B8  
                           l5956 2046                             l5980 2680                             l5972 2624  
                           l5796 42E6                             l5788 42A8                             l5868 1C8C  
                           l6748 292C                             l6780 2C40                             l6772 2BEC  
                           l6764 2B02                             l6756 2AF2                             l6692 31F2  
                           l6684 317E                             l6676 311A                             l6668 30A6  
                           l6596 3DAA                             l6940 6134                             l6924 60C8  
                           l6908 6062                             l6860 5E02                             l6852 5DA4  
                           l6836 5CCA                             l6828 5C70                             l6844 5D16  
                           l7396 38FA                             l7388 38DE                             l5894 248E  
                           l5886 2468                             l5878 2446                             l5966 20BE  
                           l5958 2056                             l5982 2692                             l5974 2634  
                           l5798 42F2                             l6782 2C66                             l6774 2BF0  
                           l6766 2B48                             l6686 319A                             l6694 31FA  
                           l6678 3126                             l6598 3DDE                             l6950 6280  
                           l6942 618C                             l6934 60EA                             l6918 608E  
                           l6870 5E98                             l6846 5D32                             l6838 5CD8  
                           l7398 3910                             l5896 2496                             l5888 246C  
                           l5984 26A0                             l5976 2662                             l5992 1B54  
                           l6776 2C00                             l6768 2BA0                             l6696 322C  
                           l6688 31CE                             l6952 6330                             l6944 61C0  
                           l6960 63C6                             l6880 5F6E                             l6872 5EA6  
                           l6864 5E3A                             l6856 5DDC                             l6848 5D40  
                           l6792 59BC                             l6784 593E                             l5898 24A4  
                           l5986 26F0                             l5978 2672                             l5994 1B6A  
                           l6778 2C34                             l6698 3260                             l6970 6448  
                           l6962 63D6                             l6954 6340                             l6946 6218  
                           l6938 6100                             l6890 5FCE                             l6882 5F86  
                           l6874 5EDA                             l6866 5E56                             l6858 5DF4  
                           l6794 59D8                             l6786 595E                             l5988 26F6  
                           l5996 1B7A                             l6972 64B0                             l6964 63F2  
                           l6956 635A                             l6948 624C                             l6892 5FDC  
                           l6876 5EEA                             l6884 5FAA                             l6868 5E6C  
                           l6788 59A6                             l6990 657C                             l6982 6518  
                           l6974 64C8                             l6966 6426                             l6958 638E  
                           l6878 5F4E                             l6798 59EE                             l6992 65DA  
                           l6984 653C                             l6976 64D8                             l6968 6438  
                           l6888 5FBE                             l6994 665C                             l6986 6550  
                           l6978 64F0                             l6996 6690                             l6988 656C  
                           l6998 66A0                             STR_1 7F52                             STR_2 7FE5  
                           STR_3 7FA8                             STR_4 7FEC                             STR_5 7E63  
                           STR_6 7FC9                             STR_7 7EE9                             STR_8 7F21  
                           STR_9 7EEC                   _Read_LM35$1486 0059                             u7000 3BBE  
                           u7001 3BBA                             u7010 3BE8                             u7011 3BE4  
                           u7100 3CE2                             u7020 3C0C                             u6300 1B16  
                           u7101 3CDE                             u7021 3C08                             u6301 1B12  
                           u7110 3D2A                             u7030 3C22                             u6310 1ADA  
                           u7111 3D26                             u7031 3C1E                             u6311 1AD4  
                           u7120 3D5A                             u7040 3C40                             u7200 424C  
                           u8000 5120                             u7121 3D56                             u7041 3C3C  
                           u7201 4248                             u8001 511C                             u7130 3D86  
                           u7050 3C60                             u7210 425C                             u8010 51AC  
                           u7131 3D82                             u7051 3C5C                             u7211 4258  
                           u8011 51A8                             u6500 23F4                             u7060 3C70  
                           u7300 451A                             u7220 43D6                             u7140 4192  
                           u8100 54A8                             u8020 51DE                             u6316 1ADC  
                           u6501 23F0                             u7061 3C6C                             u7301 4516  
                           u7141 418E                             u8101 54A4                             u8021 51DA  
                           u7070 3C9E                             u7310 4548                             u7230 4430  
                           u7150 41A4                             u6510 45B8                             u8110 550E  
                           u8030 521C                             u7071 3C9A                             u7311 4544  
                           u7231 442C                             u7151 41A0                             u6511 45B4  
                           u8111 550A                             u8031 5218                             u7400 2246  
                           u7080 3CB4                             u7320 4580                             u7240 4450  
                           u7160 41B4                             u6600 4706                             u6520 45CA  
                           u8200 586A                             u8120 5556                             u8040 52A8  
                           u9000 5EA6                             u7401 2242                             u7081 3CB0  
                           u7321 457C                             u7241 444C                             u7225 43CC  
                           u7161 41B0                             u6601 4702                             u6521 45C6  
                           u8201 5866                             u8121 5552                             u8041 52A4  
                           u9001 5EA2                             u7330 2446                             u7410 2260  
                           u7090 3CC8                             u7250 4460                             u7170 41F4  
                           u6610 471E                             u6530 45DA                             u8210 5886  
                           u8130 5566                             u8050 52DE                             u9010 5EEA  
                           u7331 2442                             u7411 225C                             u7091 3CC4  
                           u7251 445C                             u7171 41F0                             u6611 4718  
                           u6531 45D6                             u8211 5882                             u8131 5562  
                           u8051 52DA                             u9011 5EE6                             u7340 2460  
                           u7420 227E                             u7500 2680                             u7260 448E  
                           u7180 4206                             u6700 4802                             u6620 4720  
                           u6540 461A                             u8220 58EC                             u8140 5600  
                           u8060 52F6                             u8300 357A                             u9100 60C8  
                           u9020 5F4E                             u7341 245C                             u7421 227A  
                           u7501 267C                             u7261 448A                             u7181 4202  
                           u6701 47FE                             u6541 4616                             u8221 58E6  
                           u8141 55FC                             u8061 52F2                             u8301 3576  
                           u9101 60C4                             u9021 5F4A                             u7350 2486  
                           u7430 2294                             u6470 238C                             u7510 26A0  
                           u7270 44A4                             u7190 4216                             u6710 483A  
                           u6630 4748                             u6550 4630                             u8230 58EE  
                           u8150 564E                             u8070 5328                             u8310 3630  
                           u9110 60E6                             u9030 5F86                             u7351 2482  
                           u7431 2290                             u6471 2388                             u7511 269C  
                           u7271 44A0                             u7191 4212                             u6711 4836  
                           u6631 4744                             u6551 462C                             u8151 564A  
                           u8071 5324                             u8311 362C                             u9111 60E2  
                           u9031 5F82                             u8400 1F3C                             u8320 1B02  
                           u7360 24A4                             u7440 22B8                             u6480 239C  
                           u7520 26F0                             u7280 44B8                             u6800 4954  
                           u6720 4880                             u6640 4766                             u6560 4642  
                           u7600 27DE                             u8240 5902                             u8160 56FA  
                           u8080 5336                             u9200 743A                             u9120 63F2  
                           u9040 5FDC                             u8401 1F38                             u8321 1AFE  
                           u7361 24A0                             u7441 22B4                             u6481 2398  
                           u7521 26EC                             u7281 44B4                             u6801 4950  
                           u6721 487C                             u6641 4762                             u6561 463E  
                           u7601 27DA                             u8241 58FE                             u8161 56F6  
                           u8081 5332                             u9201 7436                             u9121 63EE  
                           u9041 5FD8                             u8410 2C86                             u7370 24C0  
                           u6490 23C2                             u7610 1E74                             u7450 2046  
                           u7290 44D2                             u7530 1B6A                             u6810 496A  
                           u6730 48B6                             u6650 4786                             u6570 4652  
                           u8170 5736                             u8090 5360                             u8250 20EC  
                           u8330 1D0C                             u9210 746C                             u9050 5FF2  
                           u8411 2C82                             u7371 24BC                             u6491 23BE  
                           u7611 1E70                             u7451 2042                             u7291 44CE  
                           u7531 1B66                             u6811 4966                             u6731 48B2  
                           u6651 4782                             u6571 464E                             u8171 5732  
                           u8091 535C                             u8251 20E8                             u8331 1D08  
                           u9211 7468                             u9051 5FEE                             u8340 1C30  
                           u8500 2E14                             u8420 2C94                             u7380 24E6  
                           u6900 1C02                             u7620 1EBA                             u7460 2084  
                           u6820 497E                             u6740 48C6                             u6660 4794  
                           u6580 468C                             u7540 2710                             u7700 25E4  
                           u8180 5744                             u8260 2164                             u9220 74C2  
                           u9140 6514                             u9060 600C                             u8341 1C2C  
                           u8501 2E10                             u8421 2C90                             u7381 24E2  
                           u6901 1BFE                             u7621 1EB6                             u7461 2080  
                           u6821 497A                             u6741 48C2                             u6661 4790  
                           u6581 4688                             u7541 270C                             u8181 5740  
                           u8261 2160                             u9221 74BE                             u9141 6510  
                           u9061 6008                             u8350 1E2C                             u8430 2CF0  
                           u7390 222C                             u7630 1B2E                             u6910 3A24  
                           u7470 20B8                             u6830 4998                             u6750 48F2  
                           u6670 47A4                             u6590 469A                             u7550 2744  
                           u7710 1BC2                             u8190 5798                             u8270 34D0  
                           u8510 3DDE                             u9150 653C                             u9070 603E  
                           u8431 2CEC                             u7391 2228                             u7631 1B2A  
                           u6911 3A20                             u7471 20B4                             u6831 4994  
                           u6751 48EE                             u6671 47A0                             u6591 4696  
                           u7711 1BBE                             u8191 5794                             u8271 34CC  
                           u8511 3DDA                             u9151 6538                             u9135 645E  
                           u9071 603A                             u8360 1E54                             u8440 2D46  
                           u6920 3A36                             u7480 2624                             u6840 49D2  
                           u6760 4902                             u6680 47D6                             u7560 2772  
                           u7640 2538                             u7800 2FC4                             u7720 1DC0  
                           u8280 3512                             u9400 3484                             u8600 3FCC  
                           u8520 3E0C                             u9320 7D84                             u9240 757C  
                           u9136 6468                             u9080 6062                             u8441 2D42  
                           u6921 3A32                             u7481 2620                             u6841 49CE  
                           u6761 48FE                             u6681 47D2                             u7561 276E  
                           u7721 1DBC                             u8281 350E                             u9401 3480  
                           u8601 3FC8                             u8521 3E08                             u9321 7D80  
                           u9305 7D04                             u9241 7578                             u9137 6478  
                           u9081 605E                             u8370 1E64                             u8450 2D90  
                           u6930 3A46                             u7490 2662                             u6850 49E4  
                           u6770 491E                             u6690 47E4                             u7570 2786  
                           u7650 2556                             u7810 2FE0                             u7730 2E72  
                           u8290 355E                             u8610 4068                             u8530 3E1A  
                           u9330 7DDC                             u9170 7358                             u9090 6070  
                           u9410 4A66                             u8371 1E60                             u8451 2D8C  
                           u6931 3A42                             u7491 265E                             u6851 49E0  
                           u6771 491A                             u6691 47E0                             u7571 2782  
                           u7555 273A                             u7651 2552                             u7811 2FDC  
                           u8291 355A                             u8611 4064                             u8531 3E16  
                           u9331 7DD8                             u9315 7D4A                             u9235 7508  
                           u9171 7354                             u9091 606C                             u9411 4A62  
                           u8380 1EF2                             u8460 2DAE                             u7900 2A82  
                           u6940 3A88                             u6860 49F4                             u6780 492E  
                           u7580 27AE                             u7660 257E                             u7820 301C  
                           u7740 2EA0                             u9340 3284                             u8700 31F2  
                           u8620 40D0                             u8540 3E5C                             u9316 7D54  
                           u9236 7512                             u9180 7374                             u9420 4C6A  
                           u9500 1FE4                             u8381 1EEE                             u8357 1E22  
                           u8461 2DAA                             u7901 2A7E                             u6941 3A84  
                           u6861 49F0                             u6781 492A                             u7581 27AA  
                           u7661 257A                             u7645 252E                             u7821 3018  
                           u7805 2FBA                             u7741 2E9C                             u9341 3280  
                           u8701 31EE                             u8621 40CC                             u8541 3E58  
                           u9317 7D64                             u9237 7522                             u9181 7370  
                           u9165 6736                             u9421 4C66                             u8390 1F14  
                           u8470 2DBE                             u7910 2A9C                             u6950 3A9A  
                           u6870 4A14                             u6790 493E                             u7590 27CE  
                           u7670 25A8                             u7750 2EC2                             u7830 1DB0  
                           u9350 3394                             u8630 40E6                             u8550 3E8A  
                           u9190 73EE                             u9430 4D0A                             u9510 1FFE  
                           u8391 1F10                             u8367 1E4A                             u8471 2DBA  
                           u7911 2A98                             u6951 3A96                             u6871 4A10  
                           u6791 493A                             u7591 27CA                             u7671 25A4  
                           u7751 2EBE                             u7735 2E68                             u7831 1DAC  
                           u9351 3390                             u8631 40E2                             u8551 3E86  
                           u9255 7596                             u9191 73EA                             u9431 4D06  
                           u9511 1FF8                             u8720 21B0                             u8480 2DCC  
                           u7920 2AAC                             u7840 2978                             u6960 3AAA  
                           u6880 4A24                             u9360 33D6                             u8560 3EAC  
                           u9256 75A0                             u8800 5A88                             u9440 4DF2  
                           u9520 2000                             u9600 38D6                             u8721 21AC  
                           u8481 2DC8                             u7921 2AA8                             u7841 2972  
                           u6961 3AA6                             u6881 4A20                             u9361 33D2  
                           u8561 3EA8                             u9265 7600                             u9257 75B0  
                           u8801 5A84                             u9441 4DEE                             u9601 38D2  
                           u8730 21F4                             u8490 2E06                             u7850 297A  
                           u6970 3AE8                             u6890 4A40                             u7690 25E2  
                           u7770 2F30                             u7930 4F74                             u9370 33FA  
                           u8650 306A                             u9290 7730                             u9266 760A  
                           u8810 5AA4                             u9450 4E34                             u9610 38F0  
                           u9530 3794                             u8731 21F0                             u8491 2E02  
                           u6971 3AE4                             u6891 4A3C                             u7691 25DC  
                           u7771 2F2C                             u7931 4F70                             u9371 33F6  
                           u8715 320C                             u8651 3066                             u9291 772C  
                           u9275 7658                             u9267 761A                             u8811 5AA0  
                           u9451 4E30                             u9611 38EC                             u9531 3790  
                           u7860 298C                             u6980 3B28                             u7780 2F54  
                           u7940 4FBE                             u8740 28DE                             u9380 342C  
                           u8660 30C2                             u8580 3F1E                             u9276 7662  
                           u8900 5CA0                             u8820 5AD4                             u9460 4F1C  
                           u9620 3910                             u9540 37E2                             u7861 2988  
                           u6981 3B24                             u7685 25BA                             u7765 2ED6  
                           u7941 4FBA                             u8741 28DA                             u9381 3428  
                           u8661 30BE                             u8645 4152                             u8581 3F1A  
                           u9285 76F6                             u9277 7672                             u8901 5C9C  
                           u8821 5AD0                             u9461 4F18                             u9621 390C  
                           u9541 37DE                             u7870 29B8                             u6990 3B9C  
                           u7790 2F70                             u7766 2EE0                             u7950 4FCE  
                           u9390 346C                             u8750 2C00                             u8670 311A  
                           u8590 3F56                             u9286 7700                             u8910 5CD8  
                           u9470 1FA6                             u9630 3922                             u9550 37FC  
                           u7871 29B4                             u6991 3B98                             u7791 2F6C  
                           u7767 2EF0                             u7951 4FCA                             u9391 3468  
                           u8751 2BFC                             u8671 3116                             u8591 3F52  
                           u8575 3EDE                             u9287 7710                             u8911 5CD4  
                           u9471 1FA0                             u9631 391A                             u9551 37F8  
                           u7880 29CE                             u7960 500C                             u8680 3142  
                           u8576 3EE8                             u8920 5D32                             u8760 59A6  
                           u9480 1FA8                             u9560 381E                             u7881 29CA  
                           u7785 2F4A                             u7961 5008                             u8681 313E  
                           u8577 3EF8                             u8921 5D2E                             u8761 59A2  
                           u9561 381A                             u7890 2A70                             u7970 501E  
                           u8690 319A                             u8930 5D40                             u8850 5B98  
                           u8770 59D8                             u9490 1FE2                             u9650 396A  
                           u9570 383E                             u7891 2A6C                             u7971 501A  
                           u9707 2BE0                             u8691 3196                             u8931 5D3C  
                           u8835 5AEA                             u8771 59D4                             u9491 1FDC  
                           u9651 3966                             u9571 383A        Calibrate_Flame_Sensor@sum 00F8  
                           u7980 5094                             u8940 5DA4                             u8860 5BD2  
                           u8836 5AF4                             u8780 5A10                             u9660 39A6  
                           u9580 3872                             u7981 5090                             u9717 28BC  
                           u8941 5DA0                             u8861 5BCE                             u8845 5B44  
                           u8837 5B04                             u8781 5A0C                             u9661 39A2  
                           u9581 386E                             u7990 50A6                             u8950 5DF4  
                           u8870 5C3E                             u8846 5B4E                             u8790 5A32  
                           u9670 39DE                             u9590 38A4                             u9727 1C1A  
                           u7991 50A2                             u8951 5DF0                             u8871 5C3A  
                           u8855 5B8E                             u8847 5B5E                             u8791 5A2E  
                           u9671 39DA                             u9591 38A0                             u8960 5E02  
                           u8880 5C5A                             u9648 3926                             u9737 219A  
                           u8961 5DFE                             u8881 5C56                             u8970 5E56  
                           u8890 5C92                             u8971 5E52                             u8891 5C8E  
                           u8980 5E6C                             u8981 5E68                             u8990 5E88  
                           u8991 5E84                             u9687 375E                             u9697 39F4  
                           abs@a 0007                             _dbuf 0236                             _cp_h 7E5F  
                           _cp_l 7E5B                             _dp_h 7DFB                             _dp_l 7DF3  
                           _labs 1DB2                             _main 3730                             _dtoa 2968  
                           _prec 00FD                             _powf 593E                             pad@i 0015  
                           pad@p 0012                             fsr1h 0FE2                             fsr2h 0FDA  
                           indf1 0FE7                             indf2 0FDF                             fsr1l 0FE1  
                           fsr2l 0FD9                 __end_of_ADC_Init 1ACA                 __end_of_ADC_Read 1C48  
                  ___fpclassifyf 24F8                             prodh 0FF4                             prodl 0FF3  
                           start 7FFC                  ___fldiv@new_exp 0051                     ___param_bank 0000  
        __end_of_UART_Write_Text 1E66                            ??_abs 0009                            ??_pad 0014  
        ?_Calibrate_Flame_Sensor 0001             Calibrate_MQ2@cal_msg 0100                    ___fltol@sign1 0009  
                          ?_labs 0001                  __end_of___fladd 4A54                            ?_main 0001  
                          ?_dtoa 0017                  __end_of___fldiv 3D9A                  __end_of___awdiv 24F8  
                __end_of___flneg 1B8C                            STR_10 7EB6                            STR_11 7F7F  
                          STR_12 7FF2                            STR_15 7FF6                  __end_of___awmod 22CA  
                __end_of___flmul 459E                            ?_powf 0060                  __end_of___flsub 1CD2  
                __end_of___fltol 2800                  __end_of___lldiv 1F70                  ___awdiv@divisor 0003  
                ___awdiv@counter 0005                            _RCREG 0FAE                     vfpfcnvrt@fmt 00A3  
                          _SPBRG 0FAF                            _PORTB 0F81                            _TRISB 0F93  
                          _TXREG 0FAD                      ?_UART_Write 0001                            _lg2_h 7E1F  
                          _lg2_l 7E1B                            _flags 01FA              read_prec_or_width@c 0005  
                          _errno 0230              read_prec_or_width@n 0006                            _ivln2 7E0F  
                          _fputc 237C                            _fputs 1BC4                  __end_of_ivln2_h 7E5B  
                __end_of_ivln2_l 7E0F                            _two24 7E53                  __end_of_scalbnf 3272  
                          labs@a 0001                            pad@fp 000F                            _width 0232  
                          _putch 1AB2                            main@i 028E                            dtoa@d 0018  
                          dtoa@i 0021                            dtoa@p 001E                            _sqrtf 3D9A  
                          dtoa@s 0020                            dtoa@w 001C             Calibrate_MQ2@voltage 0124  
                          tablat 0FF5                            powf@i 0128                            powf@j 01A8  
                          powf@k 01A4                            powf@n 0188                            powf@r 0150  
                          powf@s 0160                            powf@t 01B0                            powf@u 017C  
                          powf@v 0180                            powf@w 0144                            powf@x 0060  
                          powf@y 0064                            powf@z 01B4                            status 0FD8  
                __end_of_sprintf 1C8C                   ?___fpclassifyf 0001               main@sensor_counter 028A  
                __initialization 1D18                     __end_of_cp_h 7E63                     __end_of_cp_l 7E5F  
                   __end_of_dp_h 7E03                     __end_of_dp_l 7DFB                     __end_of_labs 1E08  
                   __end_of_main 3A0A                     __end_of_dtoa 2AE0                     __end_of_powf 7DF2  
 __end_of_Calibrate_Flame_Sensor 2968                           ??_labs 0005                           ??_main 0286  
                         ??_dtoa 001A                           ??_powf 0068                    __activetblptr 0002  
     __end_of_read_prec_or_width 216E           Send_Sensor_Data@buffer 0100                 _ADC_Read_Average 216E  
              main@received_char 0290                           _ADCON1 0FC1                           _ADCON2 0FC0  
                         ?_fputc 0001                           ?_fputs 0009                           _ADRESH 0FC4  
                         _ADRESL 0FC3                 ___awdiv@dividend 0001                           ?_putch 0001  
                         ?_sqrtf 0001                           _MQ2_Ro 0291                           _OSCCON 0FD3  
                         _TRISA0 7C90                           _TRISA1 7C91                           _TRISA2 7C92  
                         _TRISC6 7CA6                           _TRISC7 7CA7                 __end_of___xxtofl 2E28  
                   vfprintf@cfmt 00B2                __end_of_UART_Init 1AF2                __end_of_UART_Read 1B20  
                         ___flge 25F6                           ___fleq 2018                        ??___fladd 0017  
                      ??___fldiv 0048                        ??___awdiv 0005                        ??___flneg 0005  
                      ??___awmod 0005                        ??___flmul 0027                 ?_UART_Write_Text 0002  
                      ??___flsub 0040                        ??___fltol 0005                        ??___lldiv 0009  
                _Read_MQ2_Sensor 4A54                           _efgtoa 4F52                           _co_ppm 0220  
                ADC_Read@channel 0005                           _floorf 2E28                           _memcpy 1D62  
           read_prec_or_width@ap 0002                           clear_0 1D3E                 ___awdiv@quotient 0007  
                ___awmod@divisor 0003                           isa$std 0001                  ___awmod@counter 0005  
                         pad@buf 0010                           dtoa@fp 0017                           _strcpy 1B8C  
                         fputc@c 0001                           fputs@c 000C                           fputs@i 000D  
                         fputs@s 0009                        ??_scalbnf 003E                  ___fpclassifyf@e 0009  
                      ?_ADC_Init 0001                  ___fpclassifyf@u 000B                        ?_ADC_Read 0001  
                ___fpclassifyf@x 0001               _calibrationCounter 021C                     __mediumconst 7DF2  
                         powf@s2 0190                           powf@t1 018C                           powf@t2 011C  
                         tblptrh 0FF7                           tblptrl 0FF6                           powf@y1 012C  
                         tblptru 0FF8                           powf@ax 0178                           powf@is 0198  
                         powf@hx 0168                           powf@hy 0184                           powf@ix 01AC  
                         powf@iy 0194                           powf@sn 0164                           putch@c 0001  
               __end_of_vfprintf 1D18                           sqrtf@i 000E                           sqrtf@m 001A  
                         sqrtf@q 0012                           sqrtf@r 001E                           sqrtf@s 000A  
                         sqrtf@t 0016                           sqrtf@x 0001                        ??_sprintf 005F  
                     ___flge@ff1 0040                       ___flge@ff2 0044                  ??___fpclassifyf 0005  
                   ___xxtofl@arg 000B                     ___xxtofl@exp 000A                     ___xxtofl@val 0001  
                     ___fleq@ff1 0001                       ___fleq@ff2 0005                       __accesstop 0060  
        __end_of__initialization 1D58                  Calibrate_MQ2@Rs 011E                       ___flneg@f1 0001  
                  ___rparam_used 0001                       ___fltol@f1 0001                   __pcstackCOMRAM 0001  
 Read_Flame_Sensor@last_detected 01FC                    _Calibrate_MQ2 2AE0                     __pidataBANK2 1AB4  
                  __end_of_lg2_h 7E23                    __end_of_lg2_l 7E1F                    __end_of_ivln2 7E13  
                  __end_of_fputc 2436                    __end_of_fputs 1C04                    __end_of_two24 7E57  
                  __end_of_putch 1AB4                    __end_of_sqrtf 4178                       __end_of_L1 7E53  
                     __end_of_L2 7E4F                       __end_of_L3 7E4B                       __end_of_L4 7E47  
                     __end_of_L5 7E43                       __end_of_L6 7E3F                       __end_of_P1 7E3B  
                     __end_of_P2 7E37                       __end_of_P3 7E33                       __end_of_P4 7E2F  
                     __end_of_P5 7E2B                       __end_of_bp 7E0B                       __end_of_cp 7E17  
              __end_of_Read_LM35 237C                     _alarm_active 0234                       ??_ADC_Init 0001  
                     ??_ADC_Read 0003                          ??_fputc 0004                          ??_fputs 000C  
     Read_MQ2_Sensor@temp_factor 01B8                          ??_putch 0001                          ??_sqrtf 0005  
               _Send_Sensor_Data 1F70                       __pbssBANK0 00FD                       __pbssBANK1 01FA  
                     __pbssBANK2 0200           Calibrate_MQ2@adc_value 0122          __end_of_Read_MQ2_Sensor 4F52  
                 main@fire_alarm 0288                   ?_Calibrate_MQ2 0001                          ?___flge 0040  
                        ?___fleq 0001                          ?_efgtoa 0070                          ?_floorf 0059  
                        ?_memcpy 0001       Read_MQ2_Sensor@rs_ro_ratio 01D8                          ?_strcpy 0001  
                      ?___xxtofl 0001                     ??_UART_Write 0001                  _flame_intensity 0228  
                        __Hparam 0000                          __Lparam 0000         __end_of_ADC_Read_Average 221C  
                        ___fladd 459E                          ___fldiv 3A0A                          ___awdiv 2436  
                        ___flneg 1B54                          ___awmod 221C                          ___flmul 4178  
                        ___flsub 1C8C                          ___fltol 26FA                          ___lldiv 1ECC  
             __end_of_UART_Write 1B08                        ?_vfprintf 00AE                          __pcinit 1D18  
                        __ramtop 0800                          __ptext0 3730                          __ptext1 1B08  
                        __ptext2 1ADE                          __ptext3 1ACA                          __ptext4 1F70  
                        __ptext5 4A54                          __ptext6 593E                          __ptext7 3D9A  
                        __ptext8 303E                          __ptext9 2AE0            read_prec_or_width@fmt 0001  
                        _ivln2_h 7E57                          _ivln2_l 7E0B                       ??___xxtofl 0005  
                        _scalbnf 303E                 ___awmod@dividend 0001                          efgtoa@c 0075  
                        efgtoa@d 0081                          efgtoa@e 0085                          efgtoa@f 0071  
                        efgtoa@g 0098                          efgtoa@h 008F                          efgtoa@i 008D  
                        efgtoa@l 0093                          efgtoa@m 0083                          efgtoa@n 009C  
                        efgtoa@p 0078                          efgtoa@t 007A                          efgtoa@u 009E  
                        efgtoa@w 0087         Read_MQ2_Sensor@adc_value 01C0                          _sprintf 1C48  
           end_of_initialization 1D58                          floorf@e 006A                          floorf@m 0066  
                        floorf@u 006C                          floorf@x 0059                          memcpy@d 0008  
                        memcpy@n 0005                          memcpy@s 000A                          fputc@fp 0003  
                  __Lmediumconst 7DF2                          fputs@fp 000B               _read_prec_or_width 20C2  
               ?_Read_MQ2_Sensor 0001                  ??_Calibrate_MQ2 00D6                  ___lldiv@divisor 0005  
                ___lldiv@counter 000D                          powf@p_h 01A0                          powf@p_l 016C  
                        powf@s_h 0174                          powf@t_h 0170                          powf@s_l 0130  
                        powf@t_l 0134                          powf@z_h 0120                          powf@z_l 0124  
              __end_of_vfpfcnvrt 3730                       efgtoa@mode 007F                       efgtoa@sign 0097  
                      _RCSTAbits 0FAB                          postdec1 0FE5                          postdec2 0FDD  
            ?_read_prec_or_width 0001                          postinc0 0FEE                          postinc1 0FE6  
                        postinc2 0FDE                 vfpfcnvrt@convarg 00A7                ??_UART_Data_Ready 0001  
                     ??_vfprintf 005F                          sqrtf@ix 0022                          strcpy@d 0005  
                      _UART_Init 1ADE                        _UART_Read 1B08                        _PORTBbits 0F81  
      Read_MQ2_Sensor@calibrated 01FB                   UART_Write@data 0001                      ___fladd@grs 001E  
                  ___xxtofl@sign 0009             ??_read_prec_or_width 0003                      ___fldiv@grs 0053  
                    ___fldiv@rem 004C                 Calibrate_MQ2@sum 0128                      ___flmul@grs 002D  
                      _TXSTAbits 0FAC                _Read_Flame_Sensor 3272               ?_Read_Flame_Sensor 0001  
                 __end_of___flge 26FA                   __end_of___fleq 20C2                      vfpfcnvrt@ap 00A4  
                    vfpfcnvrt@cp 00AC                      vfpfcnvrt@fp 00A2         __end_of_Send_Sensor_Data 2018  
                     ?_UART_Init 0001                       ?_UART_Read 0001                   __end_of_efgtoa 593E  
            ??_Read_Flame_Sensor 005F                   __end_of_floorf 303E                   __end_of_memcpy 1DB2  
                     floorf@F521 0214                   __end_of_strcpy 1BC4              start_initialization 1D18  
                      _Read_LM35 22CA                      __end_of_lg2 7E27                      __end_of_abs 1B54  
                    __end_of_pad 1ECC                      __end_of_ovt 7E1B        __end_of_Read_Flame_Sensor 34AC  
          __end_of___fpclassifyf 25F6         ??_Calibrate_Flame_Sensor 00D6                      vfprintf@fmt 00AF  
                       ??___flge 0048                         ??___fleq 0009          main@alarm_blink_counter 028C  
                       ??_efgtoa 005D                      __pdataBANK2 0291                         ??_floorf 0060  
                       ??_memcpy 0007                         ??_strcpy 0005                        ___fladd@a 0013  
                      ___fladd@b 000F                        ___fldiv@a 0044                        ___fldiv@b 0040  
                 Calibrate_MQ2@i 012C                        ___flmul@a 0023                        ___flmul@b 001F  
                      ___flsub@a 003C                        ___flsub@b 0038                       ?_Read_LM35 0001  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100                    __pcstackBANK2 0286  
         Read_MQ2_Sensor@voltage 01C2  Calibrate_Flame_Sensor@adc_value 00F6             _Read_MQ2_Sensor$1487 01BC  
           _Read_MQ2_Sensor$1488 01D0                      _mq2_history 0200                      _efgtoa$1024 007C  
               _flame_calibrated 01FE    Calibrate_Flame_Sensor@cal_msg 00D8               _flame_base_voltage 0224  
                  __pmediumconst 7DF2                         ?___fladd 000F                ?_ADC_Read_Average 000E  
                       ?___fldiv 0040                         ?___awdiv 0001                         ?___flneg 0001  
                       ?___awmod 0001                         ?___flmul 001F                         ?___flsub 0038  
                       ?___fltol 0001               Read_LM35@adc_value 005D                         ?___lldiv 0001  
                 _flame_detected 01FD                      ??_UART_Init 0001                      ??_UART_Read 0001  
             ??_ADC_Read_Average 0010                      __smallconst 7DF2                         ?_scalbnf 0038  
                       _ADC_Init 1AB8                         _ADC_Read 1C04         Read_Flame_Sensor@voltage 0100  
                       ?_sprintf 00B4                ??_UART_Write_Text 0004                        _powf$1500 010C  
                      _powf$1501 0110                        _powf$1502 0114                        _powf$1503 0118  
                      _powf$1490 0158                        _powf$1491 014C                        _powf$1492 019C  
                      _powf$1493 0138                        _powf$1494 0100                        _powf$1495 0104  
                      _powf$1496 015C                        _powf$1489 0148                        _powf$1497 013C  
                      _powf$1498 0140                        _powf$1499 0108                  _UART_Data_Ready 1ACA  
                       _PIR1bits 0F9E                       powf@yisint 0154                        _vfpfcnvrt 34AC  
                     _ADCON0bits 0FC2          ADC_Read_Average@channel 0016                      ??_Read_LM35 0059  
                     vfpfcnvrt@c 00AB                        copy_data0 1D2C          ADC_Read_Average@samples 000E  
                       __Hrparam 0000                        memcpy@tmp 0007                       vfprintf@ap 00B1  
                       __Lrparam 0000                       vfprintf@fp 00AE            __end_of_Calibrate_MQ2 2C74  
                     ?_vfpfcnvrt 00A2                ?_Send_Sensor_Data 0001               ___fpclassifyf@F465 0218  
             ??_Send_Sensor_Data 005F           _Calibrate_Flame_Sensor 2800                       sprintf@fmt 00B6  
                       ___xxtofl 2C74                         _main$444 0289                         _dtoa$993 001A  
                       __ptext10 22CA                         __ptext11 3272                         __ptext20 1DB2  
                       __ptext12 2800                         __ptext21 2E28                         __ptext13 1C48  
                       __ptext30 3A0A                         __ptext22 24F8                         __ptext14 1CD2  
                       __ptext31 2968                         __ptext23 26FA                         __ptext15 34AC  
                       __ptext40 1E08                         __ptext32 1E66                         __ptext24 1C8C  
                       __ptext16 20C2                         __ptext41 1AF2                         __ptext33 1BC4  
                       __ptext25 459E                         __ptext17 4F52                         __ptext42 1C04  
                       __ptext34 237C                         __ptext26 1B54                         __ptext18 1B8C  
                       __ptext43 216E                         __ptext35 1AB2                         __ptext27 4178  
                       __ptext19 1D62                         __ptext44 1ECC                         __ptext36 1B20  
                       __ptext28 25F6                         __ptext45 1AB8                         __ptext37 221C  
                       __ptext29 2018                         __ptext38 2436                         __ptext39 2C74  
        __end_of_UART_Data_Ready 1ADE                       strcpy@dest 0001       Read_Flame_Sensor@adc_value 0104  
            UART_Write_Text@text 0002          Calibrate_Flame_Sensor@i 00FC                         efgtoa@fp 0070  
                       efgtoa@ne 0076                         efgtoa@pp 007E                         efgtoa@ou 0089  
                       isa$xinst 0000                         _vfprintf 1CD2                         memcpy@d1 0001  
                       memcpy@s1 0003                         scalbnf@n 003C                         scalbnf@u 0042  
                       scalbnf@x 0038                         scalbnf@y 0046                        sprintf@ap 00CA  
               ___lldiv@dividend 0001                        strcpy@src 0003       Read_Flame_Sensor@intensity 0106  
                    efgtoa@nmode 0080                      ??_vfpfcnvrt 00A5                  _UART_Write_Text 1E08  
                    _temperature 022C                         sprintf@f 00CB                         sprintf@s 00B4  
               ___lldiv@quotient 0009                ??_Read_MQ2_Sensor 00D8                       _UART_Write 1AF2  
               ?_UART_Data_Ready 0001                    ___fladd@signs 001B               Read_MQ2_Sensor@ppm 01D4  
             Read_MQ2_Sensor@sum 01CA                     ___fladd@aexp 001C                     ___fladd@bexp 001D  
            ADC_Read_Average@sum 0017                Read_MQ2_Sensor@Rs 01C6                 Read_MQ2_Sensor@i 01CE  
              ADC_Read_Average@i 001B  
